public synchronized void remove ( final java.lang.String pathname ) { it.grid.storm.filesystem.AclLockPoolElement e = __map.get ( pathname ) ; try { if ( null != e ) { int count = e.decrementUsageCountAndGetIt () ; if ( 0 >= count ) __map.remove ( pathname ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.Collection<java.lang.String> getToolString () { java.util.Collection<java.lang.String> toolStr = Main.pref.getCollection ( "toolbar", java.util.Arrays.asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; try { if ( ( toolStr == null ) || ( ( toolStr.size () ) == 0 ) ) { toolStr = java.util.Arrays.asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return toolStr; } 
public void enqueue ( Item item ) { try { if ( isEmpty () ) first = last = new Node ( item ) ; else { queues.RandomizedQueue<Item>.Node oldLast = last; last = new Node ( item ) ; oldLast.next = last; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onServiceConnected ( android.content.ComponentName name, android.os.IBinder service ) { localBinder = ( ( org.stuartresearch.radio91x.RadioService.LocalBinder ) ( service ) ) ; bound = true; localBinder.getService () .songStack.setOnInsertListener ( this ) ; try { cardAdapter.setSongInfoStack ( localBinder.getService () .songStack ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } onInsert ( localBinder.getService () .getCurrentSong () ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_searchable ) ; actionbar = getSupportActionBar () ; try { if ( ( actionbar ) != null ) { actionbar.setTitle ( "搜尋" ) ; actionbar.setDisplayHomeAsUpEnabled ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getIntent () ) != null ) { handleIntent ( getIntent () ) ; } } 
private void validate () { java.lang.String valueAsString = dateBox.getTextBox () .getValue () ; try { if ( com.google.common.base.Strings.isNullOrEmpty ( valueAsString ) ) { valueUpdater.update ( null ) ; } else { java.util.Date dateValue = this.dateBox.getFormat () .parse ( dateBox, valueAsString, false ) ; if ( dateValue == null ) { valueUpdater.onInvalid ( I18N.MESSAGES.dateFieldInvalidValue ( org.activityinfo.ui.client.component.form.field.DateFieldWidget.FORMAT ) ) ; } else { valueUpdater.update ( new org.activityinfo.model.type.time.LocalDate ( dateValue ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( singleShot ) mShotStateStore.storeShot () ; mShowCaseView.dismiss () ; mShowCaseView = null; try { info.run () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( v.getId () ) == ( R.id.btn_end ) ) { showNext ( singleShot ) ; } else if ( ( v.getId () ) == ( R.id.btn_finalize ) ) { mShotStateStore.finished () ; mShowcaseInfos.clear () ; } } 
@ java.lang.Override protected void onResume () { if ( onCreate ) { onCreate = false; } else { if ( ( mPlayer ) != null ) { mPlayer.resumePlayer () ; } com.kaltura.playersdk.utils.LogUtils.LOGD ( com.kaltura.adplayerdemo.MainActivity.TAG, "on Resume called for player" ) ; if ( ( mAdPlayer ) != null ) { mAdPlayer.moveSurfaceToForeground () ; mAdPlayer.play () ; } } super.onResume () ; try { com.kaltura.adplayerdemo.NetworkChangeReceiver.getObservable () .addObserver ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void createPages () { if ( ( moviesView ) == null ) { moviesView = new husaynhakeem.io.popularmovies.features.movies.MoviesView () ; husaynhakeem.io.popularmovies.features.movies.MoviesPresenter moviesPresenter = new husaynhakeem.io.popularmovies.features.movies.MoviesPresenter () ; moviesView.setPresenter ( moviesPresenter ) ; } try { if ( ( favoritesView ) == null ) { favoritesView = new husaynhakeem.io.popularmovies.features.favorites.FavoritesView () ; husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter favoritesPresenter = new husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter () ; favoritesView.setPresenter ( favoritesPresenter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void updateTimes () { try { if ( _isStartTimeModified ) { _newAppointment.setStartTime ( _calendarTime ) ; _txtStartTime.setText ( _newAppointment.getFormattedStartTime () ) ; _txtEndTime.setText ( _newAppointment.getFormattedEndTime () ) ; } else { _newAppointment.setEndTime ( _calendarTime ) ; _txtEndTime.setText ( _newAppointment.getFormattedEndTime () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean isInteger ( java.lang.String str ) { if ( ( str.length () ) == 0 ) { return false; } int i = -1; try { while ( ( ++i ) < ( str.length () ) ) { char c = str.charAt ( i ) ; if ( ( c < '0' ) || ( c > '9' ) ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void task ( android.database.sqlite.SQLiteDatabase db ) { try { if ( edit == null ) { dbh.routes.insert ( r, db ) ; } else { dbh.routes.update ( r, ( ( ( transcend.rockeeper.data.RouteContract._ID ) + "=" ) + ( edit.get ( RouteContract._ID ) ) ) , null, db ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.lang.String makeRequest ( java.lang.String endpoint, java.lang.String queryString ) throws java.lang.Exception { java.net.URI uri = org.apache.http.client.utils.URIUtils.createURI ( uk.ac.jorum.integration.RestApiBaseTest.apiProtocol, uk.ac.jorum.integration.RestApiBaseTest.apiHost, uk.ac.jorum.integration.RestApiBaseTest.apiPort, ( ( uk.ac.jorum.integration.RestApiBaseTest.apiMountPoint ) + endpoint ) , queryString, null ) ; org.apache.http.client.methods.HttpGet httpget = new org.apache.http.client.methods.HttpGet ( uri ) ; try { httpget.addHeader ( "Accept", "application/json" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.apache.http.client.ResponseHandler<java.lang.String> responseHandler = new org.apache.http.impl.client.BasicResponseHandler () ; return client.execute ( httpget, responseHandler ) ; } 
@ java.lang.Override public twitter4j.IDs getFollowersIDs ( long arg0, long arg1 ) throws twitter4j.TwitterException { if ( ( limits[2] ) == 14 ) { SocialNetworkAnalysis.TwitterWrapper.timelimited[0] = new java.util.Date () ; limit.reached () ; limits[2] = 0; } java.lang.System.out.print ( "limits in getFollowersIDs: " ) ; for ( int limit : limits ) { java.lang.System.out.print ( ( limit + " " ) ) ; } try { java.lang.System.out.println () ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( limits[2] ) ++; return t.getFollowersIDs ( arg0, arg1 ) ; } 
public void read ( com.jme3.math.JmeImporter e ) throws java.io.IOException { com.jme3.math.InputCapsule capsule = e.getCapsule ( this ) ; rot = ( ( com.jme3.math.Quaternion ) ( capsule.readSavable ( "rot", new com.jme3.math.Quaternion () ) ) ) ; try { translation = ( ( com.jme3.math.Vector3f ) ( capsule.readSavable ( "translation", null ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( translation ) == null ) { translation = new com.jme3.math.Vector3f () ; } scale = ( ( com.jme3.math.Vector3f ) ( capsule.readSavable ( "scale", Vector3f.UNIT_XYZ ) ) ) ; } 
public void draw ( java.awt.Graphics2D g2, boolean filled ) { java.awt.geom.Rectangle2D.Double rec = new java.awt.geom.Rectangle2D.Double ( getCenter () .getX () , getCenter () .getY () , getRadius () , getRadius () ) ; g2.setColor ( getColor () ) ; try { if ( filled == true ) { g2.draw ( rec ) ; g2.fill ( rec ) ; } else { g2.draw ( rec ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void stopRecording () { recorder.stop () ; broadcastIntent.putExtra ( "time", "" ) ; try { sendBroadcast ( broadcastIntent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } customHandler.removeCallbacks ( updateTimerThread ) ; timeSwapBuff = 0L; recorder.reset () ; recorder.release () ; recorder = null; } 
@ org.junit.Test @org.springframework.transaction.annotation.Transactional @org.springframework.test.annotation.Rollback ( value = true ) public void testGetRoleCount () { ca.uhnresearch.pughlab.tracker.dao.CaseQuery query = new ca.uhnresearch.pughlab.tracker.dao.CaseQuery () ; ca.uhnresearch.pughlab.tracker.dto.Study study = org.easymock.EasyMock.createMock ( ca.uhnresearch.pughlab.tracker.dto.Study.class ) ; org.easymock.EasyMock.expect ( study.getId () ) .andStubReturn ( 1 ) ; try { org.easymock.EasyMock.replay ( study ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Long count = authorizationRepository.getStudyRoleCount ( study, query ) ; junit.framework.Assert.assertEquals ( 3, count.longValue () ) ; } 
public java.util.List find ( java.lang.String nativeQuery, java.util.List<java.lang.String> relations, java.lang.Class clazz ) { java.util.List<java.lang.Object[]> result = new java.util.ArrayList<java.lang.Object[]> () ; if ( ( s ) == null ) { s = sf.openStatelessSession () ; s.beginTransaction () ; } org.hibernate.SQLQuery q = s.createSQLQuery ( nativeQuery ) .addEntity ( clazz ) ; try { for ( java.lang.String r : relations ) { q.addScalar ( r ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return q.list () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_detail ) ; try { if ( savedInstanceState == null ) { android.os.Bundle args = new android.os.Bundle () ; args.putParcelable ( DetailFragment.DETAIL_URI, getIntent () .getData () ) ; com.odytrice.popularmovies.fragments.DetailFragment fragment = new com.odytrice.popularmovies.fragments.DetailFragment () ; fragment.setArguments ( args ) ; getSupportFragmentManager () .beginTransaction () .replace ( R.id.movie_detail_container, fragment ) .commit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void loginToFacebookIfNeeded ( java.util.List<amai.org.conventions.model.Update> updates ) { try { initializeFacebookLoginButton () ; } catch ( Exception ex ) { ex.printStackTrace () ; } loginLayout.setVisibility ( View.GONE ) ; com.facebook.AccessToken accessToken = com.facebook.AccessToken.getCurrentAccessToken () ; if ( ( accessToken != null ) && ( ! ( accessToken.isExpired () ) ) ) { retrieveUpdatesListFromFacebookApi ( accessToken ) ; } else { com.facebook.login.LoginManager.getInstance () .logInWithReadPermissions ( this, java.util.Collections.singletonList ( "public_profile" ) ) ; } } 
public static de.zib.vold.common.Key buildkey ( java.util.List<java.lang.String> key ) throws java.lang.IllegalArgumentException { try { if ( ( key.size () ) < 3 ) { throw new java.lang.IllegalArgumentException ( ( ( "Tried to build a key out of " + ( key.size () ) ) + " arguments. At leest three ( scope, type, keyname ) of them are necessary." ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new de.zib.vold.common.Key ( key.get ( 0 ) , key.get ( 1 ) , key.get ( 2 ) ) ; } 
private static java.lang.String executeMarkAsComplete ( java.lang.String userCommand ) { int taskId = tasknote.parser.Parser.getUpdateTaskId ( userCommand, true ) ; tasknote.shared.TaskObject taskObject; if ( tasknote.logic.TaskNoteControl.taskNote.isValidTaskId ( taskId ) ) { java.util.ArrayList<tasknote.shared.TaskObject> displayList = tasknote.logic.TaskNoteControl.taskNote.getDisplayList () ; taskObject = displayList.get ( taskId ) ; } else { taskObject = null; } tasknote.logic.TaskNoteControl.command = new tasknote.logic.Commands.CompleteCommand ( tasknote.logic.TaskNoteControl.taskNote, taskObject ) ; try { tasknote.logic.TaskNoteControl.command.execute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } tasknote.logic.TaskNoteControl.command.refreshDisplay () ; java.lang.String response = tasknote.logic.TaskNoteControl.command.getFeedBack () ; return response; } 
public boolean monsterExist ( game.zork.Monster monster, java.util.Map<game.zork.GameMap.Coordination, java.util.ArrayList<java.lang.Object>> mapLevel ) { game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; try { for ( java.lang.Object i : mapLevel.get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) .getName () ) == ( monster.getName () ) ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ org.junit.Test public void testGetRenewsEntry () { c.put ( 1, 1 ) ; c.put ( 2, 4 ) ; assertEquals ( c.get ( 1 ) , 1 ) ; try { c.put ( 3, 9 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( c.get ( 1 ) , 1 ) ; assertEquals ( c.get ( 2 ) , null ) ; assertEquals ( c.get ( 3 ) , 9 ) ; } 
@ org.junit.Test public void whenModuleHasDescription_thenCorrespondingFitnessFeatureShouldBeTrue () { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito.mock ( org.corpus_tools.pepper.modules.PepperModule.class ) ; try { org.mockito.Mockito.when ( module.getDesc () ) .thenReturn ( "any description" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.assertj.core.api.Assertions.assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () .checkFitness ( module ) .getFitness ( FitnessFeature.HAS_DESCRIPTION ) ) .isEqualTo ( true ) ; } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound tag ) { super.readFromNBT ( tag ) ; try { this.isDouble = tag.getBoolean ( "isDouble" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.isTop = tag.getBoolean ( "isTop" ) ; if ( isDouble ) { capacity = 2 * ( originalCapacity ) ; } else capacity = originalCapacity; this.tank.setCapacity ( capacity ) ; } 
public void onAdminJoin ( org.bukkit.entity.Player player, boolean fromEvent ) { try { staff.add ( player ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( fromEvent ) { final java.util.ArrayList<java.lang.String> lines = latestToLines () ; if ( lines != null ) for ( java.lang.String line : lines ) if ( line != null ) player.sendMessage ( ru.simsonic.rscMinecraftLibrary.Bukkit.GenericChatCodes.processStringStatic ( ( ( ru.simsonic.rscFirstJoinDemo.API.Settings.chatPrefix ) + line ) ) ) ; } } 
@ java.lang.Override public void handleStatement ( com.marklogic.semantics.rdf4j.Statement st ) throws org.eclipse.rdf4j.rio.RDFHandlerException { out.add ( st.getSubject () .stringValue () ) ; out.add ( st.getPredicate () .stringValue () ) ; out.add ( st.getObject () .stringValue () ) ; try { out.add ( st.getContext () .stringValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void clearTheCurrentGame () { try { for ( int i = 0; i < 3; i++ ) { for ( int j = 0; j < 3; j++ ) { application.TicTacToeApp.board[i][j].clear () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } application.TicTacToeApp.neadNewGame = false; application.TicTacToeApp.playable = true; } 
public void focusOut ( org.sbolstandard.core2.ComponentDefinition comp ) throws org.sbolstandard.core2.SBOLValidationException { if ( ( canvasCD ) == comp ) { return; } try { updateCanvasCD () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.sbolstandard.core2.ComponentDefinition parentComponent = parentCDs.pop () ; while ( ! ( parentComponent.equals ( comp ) ) ) { parentComponent = parentCDs.pop () ; } load ( parentComponent ) ; eventBus.publish ( new com.clarkparsia.sbol.editor.event.FocusOutEvent ( this, parentComponent ) ) ; } 
@ java.lang.Override public boolean show () { if ( shown ) { return true; } try { if ( ! ( player.isOnline () ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( org.bukkit.Location loc : points ) { if ( ! ( dk.lockfuglsang.minecraft.animation.PlayerHandler.sendBlockChange ( player, loc, material, data ) ) ) { return false; } } shown = true; return true; } 
private void showNotificationMessageWithBigImage ( android.content.Context context, java.lang.String title, java.lang.String message, java.lang.String timeStamp, android.content.Intent intent, java.lang.String imageUrl ) { notificationUtils = new android.stalwartgroup.residentguardo.Util.NotificationUtils ( context ) ; try { intent.setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } notificationUtils.showNotificationMessage ( title, message, timeStamp, intent, imageUrl ) ; } 
@ java.lang.Override public void onItemSelected ( java.lang.String ean ) { android.os.Bundle args = new android.os.Bundle () ; args.putString ( BookDetail.EAN_KEY, ean ) ; it.jaschke.alexandria.BookDetail fragment = new it.jaschke.alexandria.BookDetail () ; fragment.setArguments ( args ) ; int id = R.id.container; try { if ( ( findViewById ( R.id.right_container ) ) != null ) { id = R.id.right_container; } } catch ( Exception ex ) { ex.printStackTrace () ; } getSupportFragmentManager () .beginTransaction () .replace ( id, fragment ) .addToBackStack ( null ) .commit () ; } 
@ java.lang.Override void appendOp ( java.lang.String op, boolean binOp ) { try { if ( binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op.charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; append ( " " ) ; } else { append ( op ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateUI () { try { if ( ( mAdapter ) == null ) { mAdapter = new com.payforward.androidapp.post.CategoryActivity.CustomAdapter ( this, com.payforward.androidapp.R.layout.category, categoryList ) ; mCategoryList.setAdapter ( mAdapter ) ; } else { mAdapter.clear () ; mAdapter.addAll ( categoryList ) ; mAdapter.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void swapLayoutManager () { gridView = ! ( gridView ) ; android.support.v7.widget.RecyclerView.LayoutManager manager = ( gridView ) ? new android.support.v7.widget.GridLayoutManager ( getActivity () , 3 ) : new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ; android.support.v7.widget.RecyclerView.Adapter adapter = ( gridView ) ? new com.gustavosilvadesousa.etflickr.ui.PhotoGridAdapter ( photos ) : new com.gustavosilvadesousa.etflickr.ui.PhotoRowAdapter ( photos ) ; try { mRecyclerView.setLayoutManager ( manager ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mRecyclerView.swapAdapter ( adapter, true ) ; } 
@ org.junit.Test public void testCreateListener () { org.robolectric.shadows.ShadowMediaPlayer.CreateListener createListener = org.mockito.Mockito.mock ( ShadowMediaPlayer.CreateListener.class ) ; try { org.robolectric.shadows.ShadowMediaPlayer.setCreateListener ( createListener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.media.MediaPlayer newPlayer = new android.media.MediaPlayer () ; org.robolectric.shadows.ShadowMediaPlayer shadow = org.robolectric.Shadows.shadowOf ( newPlayer ) ; org.mockito.Mockito.verify ( createListener ) .onCreate ( newPlayer, shadow ) ; } 
@ java.lang.Override public boolean onMarkerClick ( com.google.android.gms.maps.model.Marker marker ) { int markerPosition = markers.indexOf ( marker ) ; try { selectMarker ( markerPosition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( listener ) != null ) { if ( isZoomed () ) { listener.onActivityMarkerPressedAtIndex ( markerPosition ) ; } else { listener.onLegMarkerPressedAtIndex ( markerPosition ) ; } } return true; } 
public void visit ( compiler.phase.seman.FunCall funCall ) { try { for ( int a = 0; a < ( funCall.numArgs () ) ; a++ ) funCall.arg ( a ) .accept ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } compiler.phase.seman.Decl decl = attrs.declAttr.get ( funCall ) ; compiler.phase.seman.Typ typ = attrs.typAttr.get ( decl ) ; attrs.typAttr.set ( funCall, ( ( compiler.phase.seman.FunTyp ) ( typ ) ) .resultTyp ) ; } 
public void act () { try { if ( ( Play.dif ) != 4 ) { checkDif () ; if ( ( ( lose ) == false ) && ( ( getX () ) != 533 ) ) { if ( ( cd ) == 1 ) { i = ( i ) + 1; setImage ( ( ( "st" + ( ( i ) % 4 ) ) + ".png" ) ) ; } } ( cd ) ++; losing () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void analyze () { boolean error = false; for ( nez.lang.Production p : this.peg.getProductionList () ) { if ( ! ( this.analizeConsumption ( p.getExpression () ) ) ) { error = true; } } try { if ( error ) { nez.util.ConsoleUtils.exit ( 1, "Grammar Error" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeLink ( com.aleksey.castlegates.types.GearLink link ) { if ( link == null ) return; try { link.setRemoved () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( link.getGear1 () ) != null ) { link.getGear1 () .setLink ( null ) ; } if ( ( link.getGear2 () ) != null ) { link.getGear2 () .setLink ( null ) ; } this.dataWorker.addChangedLink ( link ) ; } 
@ java.lang.Override public com.lukgru.galgo.runner.GenerationResult<T> generate () { com.lukgru.galgo.model.Population<T> population = initialPopulation; int iteration = 0; try { do { com.lukgru.galgo.model.Population<T> selectedForReproduction = selection ( population, fitnessFunction ) ; com.lukgru.galgo.model.Population<T> newPopulation = reproduce ( selectedForReproduction, crossoverFunction ) ; this.mutate ( newPopulation ) ; population = newPopulation; iteration++; } while ( ! ( solutionFound ( population, fitnessFunction ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new com.lukgru.galgo.runner.GenerationResult ( population, iteration ) ; } 
@ java.lang.Override public java.lang.Object visitArrayVariable ( DECAF2.DECAF2Parser.ArrayVariableContext ctx ) { java.lang.String nombreVar = ctx.getChild ( 0 ) .getText () ; int locationSave = java.lang.Integer.parseInt ( ctx.getChild ( 2 ) .getText () ) ; java.util.ArrayList returnArray = new java.util.ArrayList () ; returnArray.add ( nombreVar ) ; try { returnArray.add ( locationSave ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return returnArray; } 
public java.lang.String getReps ( android.widget.LinearLayout layout ) { java.lang.String toReturn = ""; try { for ( int i = 1; i < 6; i++ ) { android.widget.EditText editText = ( ( android.widget.EditText ) ( layout.getChildAt ( i ) ) ) ; java.lang.String text = editText.getText () .toString () ; if ( ! ( text.trim () .equals ( "" ) ) ) { toReturn += text + " "; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return toReturn; } 
public void updateDeploymentPolicyInInformationModel ( org.apache.stratos.autoscaler.pojo.policy.deployment.DeploymentPolicy deploymentPolicy ) throws org.apache.stratos.autoscaler.exception.policy.InvalidPolicyException { try { if ( org.apache.stratos.autoscaler.pojo.policy.PolicyManager.deploymentPolicyListMap.containsKey ( deploymentPolicy.getDeploymentPolicyID () ) ) { if ( org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log.isDebugEnabled () ) { org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log.debug ( ( "Updating deployment policy: " + ( deploymentPolicy.getDeploymentPolicyID () ) ) ) ; } org.apache.stratos.autoscaler.pojo.policy.PolicyManager.deploymentPolicyListMap.put ( deploymentPolicy.getDeploymentPolicyID () , deploymentPolicy ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void display_responds ( java.lang.String s ) { try { switch ( s ) { case "text": instruction.setText ( hints[counter] ) ; java.lang.System.out.println ( s ) ; break; case "audio": break; case "flash": break; case "show": show ( counter ) ; break; case "next": show ( counter ) ; counter += 1; instruction.setText ( instructions[counter] ) ; step_number.setText ( steps[counter] ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setListName ( java.lang.String listName ) { if ( ! ( listNameEditSupported ) ) { throw new java.lang.RuntimeException ( ( "Error: Attempted to edit Channel List name for " + "group that does not support it." ) ) ; } java.lang.String oldListName = this.listName; this.listName = listName; try { if ( ( propSupport ) != null ) { propSupport.firePropertyChange ( "listName", oldListName, listName ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public <T extends com.jaeksoft.searchlib.webservice.CommonResult> T checkCommonResult ( javax.ws.rs.core.Response response, java.lang.Class<T> commonResultClass, int httpCode ) { org.junit.Assert.assertNotNull ( response ) ; org.junit.Assert.assertEquals ( response.getEntity () .toString () , httpCode, response.getStatus () ) ; T commonResult = response.readEntity ( commonResultClass ) ; org.junit.Assert.assertNotNull ( commonResult.successful ) ; try { org.junit.Assert.assertEquals ( true, commonResult.successful ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return commonResult; } 
private synchronized void await ( org.opendaylight.vtn.manager.it.ofmock.impl.FlowTable.TableCond cond, long timeout ) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException { try { if ( ! ( cond.check () ) ) { long msec = timeout; long deadline = ( java.lang.System.currentTimeMillis () ) + timeout; do { wait ( msec ) ; if ( cond.check () ) { return; } msec = deadline - ( java.lang.System.currentTimeMillis () ) ; } while ( msec > 0 ) ; throw new java.util.concurrent.TimeoutException ( cond.getTimeoutError () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCameraIdle () { handler.removeCallbacksAndMessages ( null ) ; handler.postDelayed ( new java.lang.Runnable () { @java.lang.Override public void run () { executeTask () ; } }, 500 ) ; try { bounds = map.getProjection () .getVisibleRegion () .latLngBounds; } catch ( Exception ex ) { ex.printStackTrace () ; } io.tjeubaoit.pokeradar.ui.MainActivity.LOGGER.debug ( "Camera idle" ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { int k = 0; try { for ( com.google.firebase.database.DataSnapshot d : dataSnapshot.child ( "Private User Data" ) .child ( mUserId ) .getChildren () ) { if ( k == 0 ) { com.example.saathi.Student c = d.getValue ( com.example.saathi.Student.class ) ; java.lang.String nameVal = c.getName () ; java.lang.String emailVal = mFirebaseAuth.getCurrentUser () .getEmail () ; userName.setText ( nameVal ) ; userEmail.setText ( emailVal ) ; k++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setup ( final java.util.Map<java.net.URI, java.net.URI> conflictTable ) { try { for ( final java.util.Map.Entry<java.net.URI, java.net.URI> e : changeTable.entrySet () ) { assert e.getKey () .isAbsolute () ; assert e.getValue () .isAbsolute () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.conflictTable = conflictTable; } 
public void saveJobInfo ( com.emc.sa.api.utils.OrderJobStatus status ) throws java.lang.Exception { org.apache.curator.framework.recipes.locks.InterProcessLock lock = coordinatorClient.getLock ( com.emc.sa.api.OrderService.ORDER_JOB_LOCK ) ; try { lock.acquire () ; } catch ( Exception ex ) { ex.printStackTrace () ; } coordinatorClient.persistRuntimeState ( status.getType () .name () , status ) ; lock.release () ; } 
@ org.junit.Test public void testOverrideOutputLimits () { xbot.common.math.PIDManager manager = new xbot.common.math.PIDManager ( "test", injector.getInstance ( xbot.common.properties.XPropertyManager.class ) , 1, 0, 0, 0, 0.5, ( -0.25 ) ) ; double output = manager.calculate ( 100, 0 ) ; org.junit.Assert.assertEquals ( 0.5, output, 0.001 ) ; output = manager.calculate ( ( -100 ) , 0 ) ; try { org.junit.Assert.assertEquals ( ( -0.25 ) , output, 0.001 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.math.BigInteger getNum ( int k, cz.tomkren.fishtron.types.Type t_NF ) { try { if ( opts.isCachingUsed () ) { return cache.getNum ( k, t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k, t_NF, 0 ) ) { sum = sum.add ( subsRes.getNum () ) ; } return sum; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getAccountsUrl ( java.lang.String deploymentUrl, java.lang.String username ) { try { if ( deploymentUrl.endsWith ( "/" ) ) { deploymentUrl = deploymentUrl.substring ( 0, ( ( deploymentUrl.length () ) - 1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json"; return accountsUrl; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String toAdd = commenting.getText () .toString () ; if ( ( toAdd != null ) && ( ! ( toAdd.equals ( "" ) ) ) ) { adapter.add ( toAdd ) ; } try { commenting.setText ( "" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { super.onResume () ; com.example.maaus.template.org.opencv.android.OpenCVLoader.initAsync ( org.opencv.android.OpenCVLoader.OPENCV_VERSION_3_3_0, this, mLoaderCallback ) ; try { if ( com.example.maaus.template.org.opencv.android.OpenCVLoader.initDebug () ) { android.util.Log.d ( com.example.maaus.template.ActivityFour.TAG, "OpenCv Loaded Successfully" ) ; mLoaderCallback.onManagerConnected ( org.opencv.android.LoaderCallbackInterface.SUCCESS ) ; } else { android.util.Log.d ( com.example.maaus.template.ActivityFour.TAG, "OpenCV not Loaded" ) ; com.example.maaus.template.org.opencv.android.OpenCVLoader.initAsync ( org.opencv.android.OpenCVLoader.OPENCV_VERSION_3_3_0, this, mLoaderCallback ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void playMenuSound () { try { com.game.Audio.Sounds.sound = Gdx.audio.newSound ( Gdx.files.internal ( "Game_Sound/Sound.mp3" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.game.Audio.Sounds.sound.setLooping ( 0, true ) ; com.game.Audio.Sounds.sound.setLooping ( com.game.Audio.Sounds.Menu_Music, true ) ; com.game.Audio.Sounds.sound.setVolume ( com.game.Audio.Sounds.Menu_Music, com.game.Audio.Sounds.Menu_Volume ) ; com.game.Audio.Sounds.sound.play ( com.game.Audio.Sounds.Menu_Volume ) ; } 
private boolean checkHorizontal ( int row, int col ) { try { if ( col <= ( ( board[0].length ) - 3 ) ) { if ( ( ( board[row][col] ) == ( board[row][ ( col + 1 ) ] ) ) && ( ( board[row][col] ) == ( board[row][ ( col + 2 ) ] ) ) ) { java.lang.System.out.println ( "There is a win there" ) ; return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public synchronized boolean open () { try { if ( isOpen () ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } final boolean open = camera.open ( cameraIndex ) ; if ( open ) { camera.set ( 5, 60 ) ; com.shootoff.camera.CameraFactory.openCamerasAdd ( this ) ; } return open; } 
public java.lang.String newAccountNumber () { java.lang.String newAccountNum = java.lang.Integer.toString ( java.util.concurrent.ThreadLocalRandom.current () .nextInt ( 100000, 999999 ) ) ; java.io.File f = new java.io.File ( ( newAccountNum + ".csv" ) ) ; try { if ( f.exists () ) { newAccountNum = newAccountNumber () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return newAccountNum; } 
private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion one, org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion two ) { try { if ( one.equals ( two ) ) { return one; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null; } 
@ tailminuseff.Test public void lineWrittenAfterDeleteGeneratesLineEvent () throws java.lang.Exception { this.completionService.submit ( target ) ; try { java.nio.file.Files.write ( file.toPath () , "".getBytes () , java.nio.file.StandardOpenOption.APPEND ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.nio.file.Files.delete ( file.toPath () ) ; testListener.getNextEventAsReset () ; java.nio.file.Files.write ( file.toPath () , "ThirdLine\n".getBytes () , java.nio.file.StandardOpenOption.CREATE_NEW ) ; assertEquals ( "ThirdLine", testListener.getNextEventAsLine () .getLine () ) ; } 
private java.lang.Iterable<gameoflife.Cell> allCells () { java.util.List<gameoflife.Cell> allCells = new java.util.ArrayList<> () ; try { for ( int y = 0; y < ( matrix.getHeight () ) ; y++ ) { for ( int x = 0; x < ( matrix.getWidth () ) ; x++ ) { allCells.add ( new gameoflife.Cell ( y, x, ( -1 ) ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return allCells; } 
public java.io.InputStream getInput ( java.lang.String pathname ) throws java.io.FileNotFoundException { org.infinispan.io.GridFile file = ( ( org.infinispan.io.GridFile ) ( getFile ( pathname ) ) ) ; try { if ( ! ( file.exists () ) ) throw new java.io.FileNotFoundException ( pathname ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( file.isDirectory () ) { throw new java.io.FileNotFoundException ( ( ( "Cannot read from directory ( " + file ) + " ) " ) ) ; } return new org.infinispan.io.GridInputStream ( file, data ) ; } 
protected static void isTotpConfigurationRequired ( org.keycloak.models.RealmModel realm, org.keycloak.models.UserModel user ) { try { for ( org.keycloak.models.RequiredCredentialModel c : realm.getRequiredCredentials () ) { if ( ( c.getType () .equals ( CredentialRepresentation.TOTP ) ) && ( ! ( user.isTotp () ) ) ) { org.keycloak.services.managers.AuthenticationManager.logger.debug ( "User is required to configure totp" ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.List<java.net.URI> parseLocationsFromBody ( java.lang.String body ) throws cz.cesnet.cloud.occi.exception.ParsingException { try { cz.cesnet.cloud.occi.parser.TextParser.LOGGER.debug ( "Reading response body." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } body = body.trim () ; java.lang.String replaced = body.replaceAll ( "X-OCCI-Location:\\s*", "" ) ; java.lang.String[] lines = replaced.split ( "[\\r\\n]+" ) ; return makeURIList ( lines ) ; } 
public java.io.File getBackupDir ( java.lang.String backupName, boolean isLocal ) { java.lang.String name = backupName; try { if ( backupName.endsWith ( BackupConstants.COMPRESS_SUFFIX ) ) { name = org.apache.commons.io.FilenameUtils.removeExtension ( backupName ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return isLocal ? new java.io.File ( getBackupDir () , name ) : new java.io.File ( BackupConstants.RESTORE_DIR, name ) ; } 
public static boolean can_paste ( int x, int y, mudmap2.backend.Layer layer ) { try { if ( ( ( mudmap2.Mudmap2.copy_places ) == null ) || ( mudmap2.Mudmap2.copy_places.isEmpty () ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( mudmap2.Mudmap2.copy_place_locations ) != null ) && ( layer != null ) ) { for ( mudmap2.Pair<java.lang.Integer, java.lang.Integer> coordinate : mudmap2.Mudmap2.copy_place_locations ) if ( layer.exist ( ( x + ( coordinate.first ) ) , ( y + ( coordinate.second ) ) ) ) return false; } return true; } 
public synchronized void stop () { if ( ( connectThread ) != null ) { connectThread.cancel () ; connectThread = null; } if ( ( connectedThread ) != null ) { connectedThread.cancel () ; connectedThread = null; } if ( ( acceptThread ) != null ) { acceptThread.cancel () ; acceptThread = null; } try { setServiceState ( koshianpan.github.com.pontroller.BluetoothService.STATE_NONE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void init ( android.content.Context context ) { mScaleTouchSlop = android.view.ViewConfiguration.get ( context ) .getScaledTouchSlop () ; try { mMaxVelocity = android.view.ViewConfiguration.get ( context ) .getScaledMaximumFlingVelocity () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mScreenW = getResources () .getDisplayMetrics () .widthPixels; mLastPoint = new android.graphics.PointF () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { mAddDialog = new org.jasey.unforgetit.fragment.AddTaskDialogFragment () ; try { getSupportFragmentManager () .beginTransaction () .setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) .replace ( R.id.unforget_it_activity, mAddDialog ) .addToBackStack ( null ) .commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mPagerAdapter.notifyDataSetChanged () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_search ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; setupViews () ; try { actionBar = getSupportActionBar () ; } catch ( Exception ex ) { ex.printStackTrace () ; } getSupportActionBar () .setTitle ( "News Search" ) ; actionBar.setTitle ( "News Search" ) ; client2 = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) .addApi ( AppIndex.API ) .build () ; } 
@ java.lang.Override public int CreateFriendship ( int friendid1, int friendid2 ) { org.ejdb.bson.BSONObject friendRecord = new org.ejdb.bson.BSONObject ( "userid1", java.lang.String.valueOf ( friendid1 ) ) ; try { friendRecord.append ( "userid2", java.lang.String.valueOf ( friendid2 ) ) .append ( "status", EJDBClientProperties.FRIEND_CONFIRMED ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.ejdb.bson.types.ObjectId recordID = src.EJDBClient.friends.save ( friendRecord ) ; return 0; } 
public static void main ( java.lang.String[] args ) { try { java.lang.System.out.println ( easy.SearchA2DMatrix.searchMatrix ( new int[][] { new int[] { 1, 3, 5, 7 }, new int[] { 10, 11, 16, 20 }, new int[] { 23, 30, 34, 50 } }, 23 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.addressbook.thorrism.addressbook.Contact contact = createContact () ; try { if ( contact == null ) android.util.Log.e ( DroidBook.TAG, "Null" ) ; else { com.addressbook.thorrism.addressbook.DroidBook.hideKeyboard ( mCurrentEdit, getApplicationContext () ) ; mBook.addEntry ( contact ) ; new com.addressbook.thorrism.addressbook.CreateContactScreen.SaveTask () .execute () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void hidePickersIfNeeded () { try { if ( calendarMode.equals ( AbstractDateWidget.CalendarMode.MONTH_YEAR ) ) { dayPicker.setVisibility ( View.GONE ) ; dayPicker.setValue ( 1 ) ; } else if ( calendarMode.equals ( AbstractDateWidget.CalendarMode.YEAR ) ) { dayPicker.setVisibility ( View.GONE ) ; monthPicker.setVisibility ( View.GONE ) ; dayPicker.setValue ( 1 ) ; yearPicker.setValue ( 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.terasology.math.Region3i createAABB ( org.terasology.math.geom.Vector3i mainLocation, java.util.Collection<org.terasology.math.geom.Vector3i> memberLocations ) { org.terasology.math.Region3i aabb = org.terasology.math.Region3i.createFromMinAndSize ( mainLocation, new org.terasology.math.geom.Vector3i ( 1, 1, 1 ) ) ; try { for ( org.terasology.math.geom.Vector3i memberLocation : memberLocations ) { aabb = aabb.expandToContain ( memberLocation ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return aabb; } 
public static void init () { org.usfirst.frc.team972.robot.Logger.init () ; org.usfirst.frc.team972.robot.Drive.init () ; org.usfirst.frc.team972.robot.Winch.init () ; try { org.usfirst.frc.team972.robot.Shooter.init () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.usfirst.frc.team972.robot.Intake.init () ; org.usfirst.frc.team972.robot.GearMechanism.init () ; org.usfirst.frc.team972.robot.Time.init () ; } 
private void mergeDataWithinTransaction ( final org.opendaylight.controller.md.sal.dom.api.DOMDataReadWriteTransaction writeTransaction, final org.opendaylight.controller.md.sal.common.api.data.LogicalDatastoreType datastore, final org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier path, final org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode<?, ?> payload, final org.opendaylight.yangtools.yang.model.api.SchemaContext schemaContext ) { try { org.opendaylight.netconf.sal.restconf.impl.BrokerFacade.LOG.trace ( "Merge {} within Restconf PATCH: {} with payload {}", datastore.name () , path, payload ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ensureParentsByMerge ( datastore, path, writeTransaction, schemaContext ) ; if ( payload instanceof org.opendaylight.yangtools.yang.data.api.schema.MapNode ) { writeTransaction.merge ( datastore, path, payload ) ; } else { writeTransaction.put ( datastore, path, payload ) ; } } 
public static org.newdawn.slick.SpriteSheet makeSpriteSheet () { org.newdawn.slick.SpriteSheet spriteSheet = mock ( org.newdawn.slick.SpriteSheet.class ) ; org.newdawn.slick.Image image = mock ( org.newdawn.slick.Image.class ) ; try { when ( spriteSheet.getSprite ( org.mockito.Matchers.anyInt () , org.mockito.Matchers.anyInt () ) ) .thenReturn ( image ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return spriteSheet; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View view = inflater.inflate ( R.layout.fragment_movie_item_details, container, false ) ; com.example.inspired.inspiredvideo.utils.MovieViewHolder movieViewHolder = new com.example.inspired.inspiredvideo.utils.MovieViewHolder ( view ) ; movieViewHolder.getmImageView () .setImageResource ( mMovieItem.getImageRes () ) ; movieViewHolder.getmNameView () .setText ( mMovieItem.getName () ) ; movieViewHolder.getmTextDescription () .setText ( mMovieItem.getDescription () ) ; try { java.lang.System.out.println () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
public long getTripStartDateOnSharedPreferences () { try { mSharedPreferences = this.getPreferences ( Context.MODE_PRIVATE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } long value_long = mSharedPreferences.getLong ( getString ( R.string.trip_start_date_tag ) , 0 ) ; if ( value_long > 0 ) { mSPEditor = mSharedPreferences.edit () ; mSPEditor.commit () ; } return value_long; } 
public static void launch ( info.papdt.express.helper.ui.AbsActivity mActivity, android.view.View fab ) { android.content.Intent intent = new android.content.Intent ( mActivity, info.papdt.express.helper.ui.AddActivity.class ) ; try { intent.setFlags ( Intent.FLAG_ACTIVITY_MULTIPLE_TASK ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( mActivity.mSets.getBoolean ( Settings.KEY_DISABLE_ANIMATION, false ) ) ) { android.support.v4.app.ActivityOptionsCompat options = android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation ( mActivity, fab, info.papdt.express.helper.ui.AddActivity.TRANSITION_NAME_FAB ) ; android.support.v4.app.ActivityCompat.startActivityForResult ( mActivity, intent, MainActivity.REQUEST_ADD, options.toBundle () ) ; } else { mActivity.startActivityForResult ( intent, MainActivity.REQUEST_ADD ) ; } } 
private void showHullAndCentroid ( java.util.ArrayList<ij.ImagePlus> channels, Roi roi ) { try { for ( ij.ImagePlus channel : channels ) { Overlay overlay = new Overlay () ; PointRoi pointRoi = new PointRoi ( xCentroid, yCentroid ) ; pointRoi.setPosition ( roiPosition ) ; overlay.add ( pointRoi ) ; roi.setPosition ( roiPosition ) ; overlay.add ( roi ) ; channel.setOverlay ( overlay ) ; channel.show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String getProperty ( java.lang.String s ) { java.lang.String value; try { switch ( s ) { case "java.class.path": value = "."; break; default: value = java.lang.System.getProperty ( s ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.printf ( "GetSystemProp %s = %s\n", s, value ) ; return value; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( isNetworkAvailable () ) { if ( ( mAudioService ) != null ) { mAudioService.executeAction ( Constants.Action.ACTION_PLAY ) ; mAudioService.doStartForeground () ; btnPlay.startAnimation ( playClickAnimation ) ; btnPlay.setImageResource ( ( showPlayButton ? android.R.drawable.ic_media_play : android.R.drawable.ic_media_pause ) ) ; } } else { android.widget.Toast.makeText ( this, getString ( R.string.no_network ) , Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; if ( ( savedInstanceState == null ) || ( ! ( savedInstanceState.containsKey ( "movieList" ) ) ) ) { } else { movieList = savedInstanceState.getParcelableArrayList ( "movieList" ) ; } try { if ( ( getArguments () ) != null ) { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent event ) { try { mX = ( ( int ) ( event.getX () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mY = ( ( int ) ( event.getY () ) ) ; logTouchEvent () ; return super.onTouchEvent ( event ) ; } 
private void dispatchEventHandler ( EventHandler handler, MouseInfo mouse, boolean isFront ) { assert handler != null; if ( handler instanceof BaseActor ) { handler.onMouseIn () ; handler.onMouseOut () ; } handler.onMouseDown () ; try { handler.onMouseUp () ; } catch ( Exception ex ) { ex.printStackTrace () ; } handler.onMouseClicked () ; handler.onMouseMoved () ; handler.onMouseDragged () ; handler.onMouseDragging () ; } 
public void draw ( com.badlogic.gdx.graphics.g2d.SpriteBatch batch ) { try { batch.draw ( cannonTextureRegion, ( ( xpos ) - ( ( width ) / 2.0F ) ) , ( ( ypos ) - ( ( height ) / 2.0F ) ) , ( ( width ) / 2.0F ) , ( ( height ) / 2.0F ) , width, height, 1, 1, angle, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( com.studygoal.jisc.Managers.NetworkManager.getInstance () .updateProfileImage ( url ) ) { this.runOnUiThread ( new java.lang.Runnable () { @java.lang.Override public void run () { settings_fragment.refresh_image () ; hideProgressBar () ; } } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.runOnUiThread ( new java.lang.Runnable () { @java.lang.Override public void run () { hideProgressBar () ; } } ) ; } 
public void removeProgress () { try { if ( ( ( this.listMovies ) != null ) && ( ( this.listMovies.size () ) > 0 ) ) { if ( ( getItem ( ( ( getItemCount () ) - 1 ) ) ) == null ) { this.listMovies.remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public calendar.EventProvider newEventProvider ( java.lang.String group_name, int group_id, db.Site site, db.DBConnection db ) { calendar.EventProvider event_provider = new calendar.EventProvider ( group_name ) .setAccessPolicy ( new mosaic.GroupAccessPolicy ( group_id, true, true, true, false ) ) .setEventsAreOwned ( true ) .setEventsCanRepeat ( true ) .setEventsHaveColor ( true ) .setEventsHaveEndTime ( true ) .setEventsHaveStartTime ( true ) .setEventsTable ( ( ( "group_" + group_id ) + "_events" ) ) .setSupportReminders ( site ) ; try { site.addModule ( event_provider, db ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return event_provider; } 
@ java.lang.Override public void exitReturn_stmt ( MiniCParser.Return_stmtContext ctx ) { java.lang.String s1; try { if ( hasReturnExpr ( ctx ) ) { s1 = newTexts.get ( ctx.expr () ) ; newTexts.put ( ctx, ( ( ( s1 + "\n" ) + ( blank ) ) + "retv" ) ) ; } else { newTexts.put ( ctx, ( ( blank ) + "ret" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void setTableFeatureProperty ( org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.Wildcards propType, org.opendaylight.yang.gen.v1.urn.opendaylight.openflow.protocol.rev130731.table.features.properties.grouping.TableFeaturePropertiesBuilder propBuilder ) { java.util.List<org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch> setFieldMatch = null; org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.wildcards.WildcardSetfield wildcardSetField = propType.getWildcardSetfield () ; try { if ( null != wildcardSetField ) { setFieldMatch = wildcardSetField.getSetFieldMatch () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.TableFeaturesConvertor.setSetFieldTableFeatureProperty ( propBuilder, TableFeaturesPropType.OFPTFPTWILDCARDS, ( setFieldMatch == null ? new java.util.ArrayList<org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch> () : setFieldMatch ) ) ; } 
private void initComponent () { chatList = new java.util.ArrayList<com.app.lifeshare.Model.GetChatListResponse> () ; SetToolbarTitle ( "CHAT" ) ; showBackArrow ( true ) ; getBundleData () ; imgNotification.setImageResource ( R.drawable.info ) ; try { imgNotification.setOnClickListener ( clickListener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } lvChat = ( ( android.widget.ListView ) ( findViewById ( R.id.lvChatDetails ) ) ) ; btnSendMessage = ( ( android.widget.Button ) ( findViewById ( R.id.btnSendMessage ) ) ) ; edEnterMessage = ( ( android.widget.EditText ) ( findViewById ( R.id.edEnterChat ) ) ) ; this.setAdapter () ; } 
private void showExercises () { try { allEercises = adapter.getAlExerciseOn ( selected_date_long ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startManagingCursor ( allEercises ) ; setListAdapter ( new android.widget.SimpleCursorAdapter ( this, R.layout.workout_summary_exercises_list_item, allEercises, new java.lang.String[] { com.alexrothberg.afitness.DbAdapter.Exercises.KEY_NAME, "activity_count" }, new int[] { R.id.workout_summary_exercises_name_txt, R.id.workout_summary_exercises_activities_txt } ) ) ; } 
void setActionNameBox ( int itemType ) { if ( ( _selectionMode ) != ( SelectionMode.USECOMBO ) ) { return; } _comboNameBox = createNameBox ( itemType ) ; if ( ( _comboNameBox ) == null ) { return; } _comboNameBox.setSelectedBeanByName ( _curAction.getDeviceName () ) ; _comboNameBox.addItemListener ( new jmri.jmrit.conditional.NameBoxListener ( _actionNameField ) ) ; _actionComboNamePanel.remove ( 1 ) ; try { _actionComboNamePanel.add ( _comboNameBox, null, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } _namePanel.setVisible ( false ) ; _actionComboNamePanel.setVisible ( true ) ; } 
protected boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem.optString ( "keepEditorOnClickDisabledRows" ) ; try { if ( ( keepEditor != null ) && ( ( keepEditor.trim () .length () ) > 0 ) ) { return java.lang.Boolean.parseBoolean ( keepEditor ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private java.util.List<edu.clemson.resolve.AnnotatedModule> parseAndReturnRootModules () { java.util.List<edu.clemson.resolve.AnnotatedModule> modules = new java.util.ArrayList<> () ; try { for ( java.lang.String e : targetFiles ) { edu.clemson.resolve.AnnotatedModule m = parseModule ( e ) ; if ( m != null ) { modules.add ( m ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return modules; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () .inflate ( R.menu.menu_gastro_activity, menu ) ; android.view.MenuItem item = menu.findItem ( R.id.action_add_favorite ) ; boolean isFavorite = org.berlin_vegan.bvapp.GastroLocations.containsFavorite ( mGastroLocation.getId () ) ; try { if ( isFavorite ) { item.setIcon ( getResources () .getDrawable ( R.mipmap.ic_star_white_24dp ) ) ; } else { item.setIcon ( getResources () .getDrawable ( R.mipmap.ic_star_outline_white_24dp ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public java.util.List<de.dhbw.persistence.Match> getMatches () { java.util.List<de.dhbw.persistence.Match> matches = new java.util.ArrayList<> () ; try { if ( this.matches.isEmpty () ) { return matches; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( java.lang.String matchId : this.matches.split ( ";" ) ) { long id = java.lang.Long.parseLong ( matchId ) ; de.dhbw.persistence.Match match = DependecyKnowItAll.matchRepository.getMatchById ( id ) ; matches.add ( match ) ; } return matches; } 
private void selectItem ( int position ) { try { if ( position == ( OPTION_MENU_ADD_PERSON ) ) { android.content.Intent intent = new android.content.Intent ( this, com.six.maitime.ui.flipper.ViewFlipperMainActivity.class ) ; startActivity ( intent ) ; return; } else { replaceFragment ( new com.six.maitime.ui.PersonListFragment () ) ; drawerList.setItemChecked ( position, true ) ; mDrawerLayout.closeDrawer ( drawerList ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Long getSupportId ( java.lang.String literal, java.lang.Long citationId ) throws org.ndexbio.model.exceptions.NdexException { org.ndexbio.common.models.object.network.RawSupport r = new org.ndexbio.common.models.object.network.RawSupport ( literal, ( citationId != null ? citationId.longValue () : -1 ) ) ; java.lang.Long supportId = this.rawSupportMap.get ( r ) ; if ( supportId != null ) return supportId; try { supportId = createSupport ( literal, citationId, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.rawSupportMap.put ( r, supportId ) ; return supportId; } 
public static void main ( final java.lang.String[] args ) throws java.io.IOException { simulator.graphics_swing.AnimationNetwork an = new simulator.graphics_swing.AnimationNetwork ( 800, 600, "prova" ) ; try { an.setTimer ( 90 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } an.loadSimulation ( "Topology/Topology_distributed_singleNode.json", "data/File/Packets.txt" ) ; an.start () ; } 
@ java.lang.Override public void onMessageReceived ( java.lang.String endpointId, byte[] payload, boolean isReliable ) { android.util.Log.d ( com.team2.android.proctor.ui.AttendanceFragment.TAG, ( "onMessageReceived:" + ( new java.lang.String ( payload ) ) ) ) ; java.lang.String message = new java.lang.String ( payload ) ; attendance = new com.team2.android.proctor.model.input.Attendance () ; attendance.setUserId ( java.lang.Long.parseLong ( message.split ( ":" ) [0] ) ) ; try { attendance.setCourseId ( java.lang.Integer.parseInt ( message.split ( ":" ) [1] ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } new com.team2.android.proctor.ui.AttendanceFragment.TakeAttendanceTask () .execute ( attendance ) ; } 
@ java.lang.Override public void expandAddScreen () { mBottomSheetBehavior.setState ( BottomSheetBehavior.STATE_EXPANDED ) ; mBottomSheetTextView.setVisibility ( View.INVISIBLE ) ; try { switch ( mBottomSheetNavigationView.getSelectedItemId () ) { case R.id.main_bottom_sheet_navigation_calendar: me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment calendarFragment = ( ( me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment ) ( mFragmentsMap.get ( CalendarFragment.TAG ) ) ) ; if ( calendarFragment != null ) calendarFragment.hideCalendarView () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr, java.lang.String inputPattern, java.time.chrono.Chronology inputChronology ) { try { if ( ( inputDateStr != null ) && ( ! ( inputDateStr.isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale.getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () .parseLenient () .appendPattern ( inputPattern ) .toFormatter () .withChronology ( inputChronology ) .withDecimalStyle ( java.time.format.DecimalStyle.of ( locale ) ) ; return parseStringToDate ( inputDateStr, inputDateTimeFormatter, inputChronology ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public boolean equals ( java.lang.Object object ) { try { if ( compareOnlyQuestionText ) { org.nlamah.QL.Model.Form.Abstract.FormQuestion value = ( ( org.nlamah.QL.Model.Form.Abstract.FormQuestion ) ( object ) ) ; if ( this.questionText.equals ( value.questionText ) ) { return true; } return false; } else { if ( ! ( super.equals ( object ) ) ) { return false; } if ( ! ( object instanceof org.nlamah.QL.Model.Form.Abstract.FormQuestion ) ) { return false; } return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.sort_by: java.lang.String[] items = getResources () .getStringArray ( R.array.sort_by ) ; com.psincraian.gameslibrary.SortByDialog dialog = new com.psincraian.gameslibrary.SortByDialog ( getActivity () , items, this ) ; dialog.onCreateDialog ( null ) .show () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onOptionsItemSelected ( item ) ; } 
@ java.lang.Override public java.lang.Iterable<org.jenkinsci.plugins.uicontrol.TreeNode> children () { java.io.File[] children = file.listFiles () ; java.util.List<org.jenkinsci.plugins.uicontrol.TreeNode> r = new java.util.ArrayList<org.jenkinsci.plugins.uicontrol.TreeNode> () ; try { if ( children != null ) { for ( java.io.File c : children ) { r.add ( new FileTreeNode ( c ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return r; } 
public void performApply ( org.eclipse.debug.core.ILaunchConfigurationWorkingCopy configuration ) { configuration.setAttribute ( IUML2JavaContants.ATTR_TARGET_FOLDER_PATH, targetText.getText () ) ; java.util.Set<java.lang.String> umlModelPaths = new java.util.LinkedHashSet<java.lang.String> () ; org.eclipse.swt.widgets.TableItem[] items = modelTable.getItems () ; for ( org.eclipse.swt.widgets.TableItem tableItem : items ) { umlModelPaths.add ( tableItem.getText () ) ; } try { configuration.setAttribute ( IUML2JavaContants.ATTR_MODEL_PATHS, umlModelPaths ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.update () ; } 
protected void showLocation ( android.location.Location mCurrentLocation ) { if ( mCurrentLocation != null ) { getNeabyMarkers ( mCurrentLocation ) ; mMap.moveCamera ( com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom ( new com.google.android.gms.maps.model.LatLng ( mCurrentLocation.getLatitude () , mCurrentLocation.getLongitude () ) , com.dev.cromer.jason.whatsappening.Activities.MapActivity.CAMERA_ZOOM ) ) ; } com.google.android.gms.maps.model.LatLng center = mMap.getCameraPosition () .target; try { mLastMarker = mMap.addMarker ( new com.google.android.gms.maps.model.MarkerOptions () .position ( new com.google.android.gms.maps.model.LatLng ( center.latitude, center.longitude ) ) .draggable ( true ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean removeConnection ( com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection connection ) { boolean removed = false; java.util.Iterator<com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection> iterator = connections.iterator () ; try { while ( iterator.hasNext () ) { com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection conn = iterator.next () ; if ( conn != null ) { connections.remove ( conn ) ; removed = true; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return removed; } 
private void handleSignInWithFacebook ( io.flutter.plugin.common.MethodCall call, final io.flutter.plugin.common.MethodChannel.Result result ) { @java.lang.SuppressWarnings ( value = "unchecked" ) java.util.Map<java.lang.String, java.lang.String> arguments = ( ( java.util.Map<java.lang.String, java.lang.String> ) ( call.arguments ) ) ; java.lang.String accessToken = arguments.get ( "accessToken" ) ; com.google.firebase.auth.AuthCredential credential = io.flutter.firebaseauth.FacebookAuthProvider.getCredential ( accessToken ) ; try { firebaseAuth.signInWithCredential ( credential ) .addOnCompleteListener ( activity, new io.flutter.firebaseauth.FirebaseAuthPlugin.SignInCompleteListener ( result ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void putByteArray ( final byte[] data ) { int l = data.length; try { putInt ( l ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory ( com.heerbann.unsafe.UnsafeBuffer.toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l; end = ( ( position ) > ( end ) ) ? position : end; } 
private java.lang.String choicePick ( graduationProject.Domain.Request request, int size, int serviceId, java.lang.String mode ) { java.util.List<java.lang.Integer> targetList = generateRanNumList ( size, choiceRate ) ; java.lang.String target = "pod1"; try { if ( mode.equals ( "choice1" ) ) target = getBetterPod1 ( request, targetList, serviceId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return target; } 
private void placeFoodBlobs () { int counter = 11; try { while ( counter != 0 ) { java.awt.Point[] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map.getCell ( p ) .setHasFood ( 5 ) ; } counter--; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void shareFileIntent ( android.app.Activity activity, java.lang.String data, java.lang.String title, java.io.File attached ) { try { ShareCompat.IntentBuilder.from ( activity ) .setType ( "text/plain" ) .addEmailTo ( "" ) .setSubject ( title ) .setStream ( android.support.v4.content.FileProvider.getUriForFile ( activity, ( ( org.eyeseetea.malariacare.BuildConfig.APPLICATION_ID ) + ".data.database.utils.ExportData" ) , attached ) ) .setText ( data ) .startChooser () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean upload ( java.lang.String nyIpName, java.lang.String fileName, FileContents contents ) { java.lang.System.out.println ( ( "Received file! Name: " + fileName ) ) ; ServerCachedFile serverFile = getFile ( fileName ) ; try { if ( ( serverFile.state ) == ( FileState.Not_Shared ) ) { java.lang.System.out.println ( "File not shared!" ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } serverFile.fileContents = contents; writeFile ( serverFile ) ; invalidateClients ( fileName, serverFile.currentWriter ) ; serverFile.currentWriter = null; serverFile.state = FileState.Not_Shared; return true; } 
private org.spongepowered.asm.lib.Handle transformHandle ( org.spongepowered.asm.mixin.transformer.MethodNode method, java.util.Iterator<org.spongepowered.asm.mixin.transformer.AbstractInsnNode> iter, org.spongepowered.asm.lib.Handle handle ) { org.spongepowered.asm.mixin.transformer.MemberRef.HandleRef memberRef = new org.spongepowered.asm.mixin.transformer.MemberRef.HandleRef ( handle ) ; try { if ( memberRef.isField () ) { this.transformFieldRef ( method, iter, memberRef ) ; } else { this.transformMethodRef ( method, iter, memberRef ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return memberRef.getMethodHandle () ; } 
@ org.junit.Test public void foo () { net.praqma.codeacademy.gildedrose.Item[] items = new net.praqma.codeacademy.gildedrose.Item[] { new net.praqma.codeacademy.gildedrose.Item ( "foo", 0, 0 ) }; net.praqma.codeacademy.gildedrose.GildedRose app = new net.praqma.codeacademy.gildedrose.GildedRose ( items ) ; try { app.updateQuality () ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( "foo", app.items[0].name ) ; } 
public boolean undo () { try { if ( self.canUndo () ) { self.getDrawingData () .undo () ; self.nativeClear () ; self.nativeDrawData () ; if ( ( self.getDelegate () ) != null ) { self.getDelegate () .didChangeDrawing ( self, self.getDrawingData () .canUndo () , self.getDrawingData () .canRedo () ) ; } return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void processFinish ( java.lang.String output ) { try { if ( output.equals ( "Success " ) ) { working.setTextColor ( Color.GREEN ) ; working.setText ( "Clocked in Succesfully" ) ; sendNotification () ; } else if ( output.equals ( "Failure " ) ) { working.setTextColor ( Color.RED ) ; working.setText ( "You can't clock in again" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { getPopupMenu () .setVisible ( false ) ; javax.swing.MenuSelectionManager.defaultManager () .clearSelectedPath () ; net.sourceforge.processdash.team.group.UserFilter selectedItem = new net.sourceforge.processdash.team.group.ui.UserGroupSelector ( javax.swing.SwingUtilities.getWindowAncestor ( this ) , "Filter_Prompt", showIndividuals ) .getSelectedItem () ; try { setSelectedItem ( selectedItem ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void capabilitiesAreInitializesAndReturnCorrectly () throws org.dasein.cloud.CloudException, org.dasein.cloud.InternalException { org.dasein.cloud.azure.network.AzureLoadBalancerCapabilities capabilities = mockit.Deencapsulation.getField ( lbSupport, "capabilities" ) ; org.dasein.cloud.azure.tests.network.LoadBalancerCapabilities acutalCapabilities = lbSupport.getCapabilities () ; org.dasein.cloud.CloudProvider provider = mockit.Deencapsulation.getField ( capabilities, "provider" ) ; try { assertEquals ( "azure capabilities initialized with incorrect provider", azureMock, provider ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( "getCapabilities doesn't return current capabilities", capabilities, acutalCapabilities ) ; } 
private void close () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent.putExtra ( "enabled", false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( -1 ) ) { workWithDataBase.onlineEnd ( id ) ; } try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( new android.content.Intent ( this, com.example.hjk.testing.MainActivity.class ) ) ; } 
private int compareBNode ( final org.openrdf.model.BNode first, final java.lang.Object second ) { try { if ( second instanceof org.openrdf.model.BNode ) { return first.getID () .compareTo ( ( ( org.openrdf.model.BNode ) ( second ) ) .getID () ) ; } else if ( ( second instanceof org.openrdf.model.URI ) || ( second instanceof eu.fbk.knowledgestore.data.Record ) ) { return -1; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 1; } 
private void addTitle ( java.lang.String title ) { android.view.View view = android.view.LayoutInflater.from ( getActivity () ) .inflate ( R.layout.item_title, null ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( view.findViewById ( R.id.title_text ) ) ) ; textView.setText ( title ) ; try { if ( ( container ) != null ) container.addView ( view ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void advancePlayer () { try { if ( ( game.currentplayer ) == ( game.player ) ) { game.currentplayer = game.opponent; handleAttack ( game.opponent.choseRandomMove ( game ) , game.player ) ; } else { game.currentplayer = game.player; menu.setVisible ( true ) ; infoText.setVisible ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected java.util.List<input.ExternalEvent> readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList<input.ExternalEvent> ( 0 ) ; } java.util.List<input.ExternalEvent> events = reader.readEvents ( nrof ) ; try { if ( ( nrof > 0 ) && ( ( events.size () ) == 0 ) ) { reader.close () ; allEventsRead = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return events; } 
@ java.lang.Override public int getUserAnswerIdByQuestionNumber ( int number ) { com.inquirer.models.Answer userAnswer = new com.inquirer.models.Answer () ; for ( com.inquirer.models.Answer tmpAnswer : userAnswers ) { if ( ( tmpAnswer.getQuestion () ) == number ) { userAnswer = tmpAnswer; } } try { if ( userAnswer == null ) { return 0; } else { return userAnswer.getId () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void processWindowEvent ( java.awt.event.WindowEvent e ) { try { if ( ( e.getID () ) == ( java.awt.event.WindowEvent.WINDOW_CLOSING ) ) { if ( net.sf.memoranda.util.Configuration.get ( "ON_CLOSE" ) .equals ( "exit" ) ) doExit () ; else doExit () ; } else if ( ( e.getID () ) == ( java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) { super.processWindowEvent ( new java.awt.event.WindowEvent ( this, java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) ; doMinimize () ; } else super.processWindowEvent ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void test_findComponents () throws java.lang.Exception { com.structurizr.componentfinder.ComponentFinder componentFinder = new com.structurizr.componentfinder.ComponentFinder ( webApplication, "com.structurizr.componentfinder", new com.structurizr.componentfinder.JavadocComponentFinderStrategy ( sourcePath.getCanonicalPath () ) ) ; componentFinder.findComponents () ; org.junit.Assert.assertEquals ( "A component that does something.", componentA.getDescription () ) ; org.junit.Assert.assertEquals ( "A component that does something else.", componentB.getDescription () ) ; try { org.junit.Assert.assertEquals ( "A component that does something else too.", componentC.getDescription () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void shiftCurrentPlayer () { try { currentPlayerPosition = ( ( currentPlayerPosition ) + 1 ) % ( activePlayers.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentPlayer = activePlayers.get ( currentPlayerPosition ) ; notifyCurrentPlayerUpdated ( currentPlayer, currentPlayerPosition ) ; java.lang.System.out.println ( ( "[TEST] Current Player: " + ( currentPlayer.toString () ) ) ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { if ( ( item.getItemId () ) == ( android.R.id.home ) ) { android.content.Intent homeIntent = new android.content.Intent ( getApplicationContext () , com.anilicious.rigfinances.activities.MainActivity.class ) ; homeIntent.addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( homeIntent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onOptionsItemSelected ( item ) ; } 
public com.eclipsesource.v8.V8Object executeObjectScript ( final java.lang.String script, final java.lang.String scriptName, final int lineNumber ) { try { checkThread () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Object result = this.executeScript ( script, scriptName, lineNumber ) ; if ( result instanceof com.eclipsesource.v8.V8Object ) { return ( ( com.eclipsesource.v8.V8Object ) ( result ) ) ; } throw new com.eclipsesource.v8.V8ResultUndefined () ; } 
private static double operation ( char op, double val1, double val2 ) { try { switch ( op ) { case '+': return val2 + val1; case '-': return val2 - val1; case '*': return val2 * val1; case '/': if ( val1 == 0 ) throw new java.lang.UnsupportedOperationException ( "Cannot divide by zero" ) ; return val2 / val1; case '^': return java.lang.Math.pow ( val2, val1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
public com.chenyirun.theircraft.model.Block getBlock ( com.chenyirun.theircraft.model.Point3Int pos ) { com.chenyirun.theircraft.model.Chunk chunk = new com.chenyirun.theircraft.model.Chunk ( pos ) ; java.util.List<com.chenyirun.theircraft.model.Block> blocksInChunk = new java.util.ArrayList<> () ; try { blocksInChunk.addAll ( getChunkBlocks ( chunk ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.chenyirun.theircraft.model.Block block : blocksInChunk ) { if ( block == null ) { continue; } com.chenyirun.theircraft.model.Point3Int blockLocation = block.getLocation () ; if ( pos.equals ( blockLocation ) ) { return block; } } return null; } 
private void removeEntryMNS ( java.lang.String mrn ) throws java.io.IOException, java.net.UnknownHostException { java.net.Socket MNSSocket = new java.net.Socket ( "localhost", 1004 ) ; java.io.BufferedWriter outToMNS = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( MNSSocket.getOutputStream () , java.nio.charset.Charset.forName ( "UTF-8" ) ) ) ; if ( kr.ac.kaist.mms_server.MMSConfiguration.LOGGING ) java.lang.System.out.println ( ( "Remove-Entry:" + mrn ) ) ; outToMNS.write ( ( "Remove-Entry:" + mrn ) ) ; try { outToMNS.flush () ; } catch ( Exception ex ) { ex.printStackTrace () ; } outToMNS.close () ; MNSSocket.close () ; return; } 
public boolean changeQuizName ( java.lang.String newQuizName ) { Category c = new Category ( category ) ; try { c.readFromFile ( ( ( c.getCategory () ) + ".txt" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( c.change ( quizName, newQuizName ) ) { this.quizName = newQuizName; return true; } return false; } 
public static void loadAllWeight () { java.lang.String openid = session.get ( "openid" ) ; java.lang.String sql = ( "select new beans.PregwBean ( w.wDate,w.wValue ) from GestationalWeight w where w.userId = '" + openid ) + "' order by w.wDate desc"; java.util.List<beans.PregwBean> bean = play.db.jpa.JPA.em () .createQuery ( sql ) .getResultList () ; try { wsOk ( bean ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public cn.wisdom.lottery.service.remote.response.LotteryOpenData getCurrentPeriod ( cn.wisdom.lottery.dao.constant.LotteryType lotteryType ) { java.lang.String errMsg = java.text.MessageFormat.format ( "Failed to query {0} current period info.", lotteryType ) ; cn.wisdom.lottery.dao.vo.PrizeLottery prizeLottery = daoHelper.queryForObject ( cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.GET_SSQ_CURRENT_PERIOD, cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.ssqPrizeInfoMapper, errMsg ) ; try { if ( ( prizeLottery != null ) && ( ( prizeLottery.getOpenTime () ) != null ) ) { unifyOpenTime ( prizeLottery.getOpenTime () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new cn.wisdom.lottery.service.remote.response.LotteryOpenData ( prizeLottery ) ; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { try { super.onSaveInstanceState ( outState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( mRecyclerView.getLayoutManager () ) ) ; int position = linearLayoutManager.findFirstVisibleItemPosition () ; outState.putInt ( ir.blog.microc.movie.activities.MainActivity.FIRST_VISIBLE_ITEM_KEY, position ) ; outState.putParcelableArrayList ( ir.blog.microc.movie.activities.MainActivity.MOVIE_DATA_PARCELABLE, ( ( java.util.ArrayList<? extends android.os.Parcelable> ) ( movieList ) ) ) ; } 
public synchronized boolean removePlayer ( CardGame.User user ) { int removeID = -1; int index = 0; for ( CardGame.GameEngine.Player player : players ) { if ( player.getUsername () .equals ( user.getUserName () ) ) { removeID = index; } index++; } try { if ( removeID != ( -1 ) ) { players.remove ( removeID ) ; return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void closeFileObject ( com.shesse.h2ha.FilePathHa filePath, long lastModified ) throws java.io.IOException { synchronized ( openFiles ) { java.nio.channels.FileChannel fc = openFiles.remove ( filePath ) ; if ( fc != null ) { fc.close () ; } } try { if ( filePath.exists () ) { filePath.lastModified ( lastModified ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void updateQuality ( mvc.models.Item item ) { try { if ( ( item.getSellIn () ) > 0 ) item.setQuality ( ( ( item.getQuality () ) - ( mvc.models.OrganicBananas.QUALITY_STEP ) ) ) ; else item.setQuality ( ( ( item.getQuality () ) - ( ( mvc.models.OrganicBananas.QUALITY_STEP ) * 2 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.common.PreferanceUtil preferanceUtil = new com.common.PreferanceUtil ( getActivity () ) ; try { preferanceUtil.setCardDetail ( mCard ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.common.SingletonClass.sharedInstance () .setCard ( mCard ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.marchant.HomeActivity.class ) ; intent.putExtra ( "ActivityName", "Splash" ) ; startActivity ( intent ) ; } 
private org.eclipse.smarthome.automation.core.internal.RuntimeRule getRuleByTemplate ( org.eclipse.smarthome.automation.core.internal.RuntimeRule rule ) { java.lang.String ruleTemplateUID = rule.getTemplateUID () ; org.eclipse.smarthome.automation.template.RuleTemplate template = ( ( org.eclipse.smarthome.automation.template.RuleTemplate ) ( tManager.get ( ruleTemplateUID ) ) ) ; try { if ( template == null ) { logger.debug ( ( ( "Rule template '" + ruleTemplateUID ) + "' does not exist." ) ) ; return null; } else { org.eclipse.smarthome.automation.core.internal.RuntimeRule r1 = new org.eclipse.smarthome.automation.core.internal.RuntimeRule ( rule, template ) ; return r1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.support.v4.app.FragmentTransaction ft = mFragmentManager.beginTransaction () ; try { ft.setCustomAnimations ( android.R.anim.fade_in, android.R.anim.fade_out ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ft.replace ( R.id.frame_container, new babyfon.view.fragment.BabyMonitorFragment ( mContext ) , null ) .addToBackStack ( null ) .commit () ; } 
public static void update () { try { if ( haven.GLState.Slot.dirty ) { synchronized ( haven.GLState.Slot.class ) { if ( haven.GLState.Slot.dirty ) { haven.GLState.Slot.makedeps ( haven.GLState.Slot.all ) ; haven.GLState.deplist = new haven.GLState.Slot<?>[haven.GLState.Slot.all.size () ]; for ( haven.GLState.Slot s : haven.GLState.Slot.all ) haven.GLState.deplist[s.depid] = s; haven.GLState.Slot.dirty = false; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String encodePath ( java.lang.String path ) { try { if ( ( path == null ) || ( ( path.length () ) == 0 ) ) return path; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.StringBuilder buf = org.eclipse.jetty.util.URIUtil.encodePath ( null, path, 0 ) ; return buf == null ? path : buf.toString () ; } 
@ java.lang.Override public org.bds.lang.Type returnType ( org.bds.scope.Scope scope ) { if ( ( returnType ) != null ) return returnType; try { expr.returnType ( scope ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( expr.canCastInt () ) returnType = Type.INT; else if ( expr.canCastReal () ) returnType = Type.REAL; else return null; return returnType; } 
public void emit ( T record ) throws java.io.IOException, java.lang.InterruptedException { try { for ( int targetChannel : channelSelector.selectChannels ( record, numChannels ) ) { if ( ( random.nextInt ( 100 ) ) < ( targetPartition.getChannelNonDropProbability ( targetChannel ) ) ) { sendToTarget ( record, targetChannel ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testFind () { assertEquals ( null, doubleLinkedList.find ( 1 ) ) ; try { doubleLinkedList.insertHead ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } doubleLinkedList.insertTail ( 3 ) ; doubleLinkedList.insertHead ( 2 ) ; assertEquals ( 3, doubleLinkedList.getSize () ) ; assertEquals ( 1, doubleLinkedList.find ( 1 ) .getId () ) ; } 
private void drawWifi ( com.anwesome.games.dataindicationbutton.Canvas canvas, com.anwesome.games.dataindicationbutton.Paint paint ) { float r = ( radius ) / 60; canvas.drawCircle ( 0, 0, r, paint ) ; try { for ( int i = 1; i <= 3; i++ ) { float newR = r * ( i * 10 ) ; canvas.drawArc ( new com.anwesome.games.dataindicationbutton.RectF ( ( -newR ) , ( -newR ) , newR, newR ) , 240, 60, false, paint ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void assertEqual ( java.lang.Object o1, java.lang.Object o2, java.lang.String expression ) { try { if ( java.util.Objects.equals ( o1, o2 ) ) { expect ( true, ( ( expression + " == " ) + o2 ) ) ; } else { expect ( false, ( ( expression + " != " ) + o2 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public aljebra.data.sparse.SparseVector scale ( double factor ) { if ( factor == 0.0 ) { return new aljebra.data.sparse.SparseVector ( size ) ; } aljebra.data.sparse.SparseVector result = new aljebra.data.sparse.SparseVector ( size ) ; try { for ( int i : ids ) { result.set ( i, ( ( get ( i ) ) * factor ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public static double sumSigma ( int i, double[] p, double[] q, double[] b ) { double res = 0; try { for ( int l = 0; l < ( p.length ) ; l++ ) { double power = ( ( p[i] ) * ( q[l] ) ) + ( b[l] ) ; res += java.lang.Math.exp ( power ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return res; } 
protected void check () { try { if ( host.getAutoDeploy () ) { org.apache.catalina.startup.HostConfig.DeployedApplication[] apps = deployed.values () .toArray ( new org.apache.catalina.startup.HostConfig.DeployedApplication[0] ) ; for ( int i = 0; i < ( apps.length ) ; i++ ) { if ( ! ( isServiced ( apps[i].name ) ) ) checkResources ( apps[i], false ) ; } if ( host.getUndeployOldVersions () ) { checkUndeploy () ; } deployApps () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void clearInitStack () { final java.lang.ThreadLocal<java.util.Deque<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph>> is = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack; if ( is != null ) is.get () .clear () ; final java.lang.ThreadLocal<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph> ag = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph; try { if ( ag != null ) ag.remove () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void kleinesUpdate () { android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.example.hvs.UpdateActivity.class ) ; try { intent.putExtra ( "liga", ligaNr ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } intent.putExtra ( "update", 1 ) ; intent.putExtra ( "liganame", this.getTitle () ) ; this.finish () ; startActivity ( intent ) ; } 
@ org.junit.Before public void beforeEachTest () throws java.lang.Exception { executeDataSet ( "org/openmrs/module/idgen/include/TestData.xml" ) ; iss = new org.openmrs.module.idgen.service.IdentifierSourceServiceTest.BaseIdentifierSourceServiceStub () ; try { iss.setDao ( dao ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.openmrs.module.idgen.processor.SequentialIdentifierGeneratorProcessor processor = new org.openmrs.module.idgen.processor.SequentialIdentifierGeneratorProcessor () ; processor.setIdentifierSourceService ( iss ) ; java.util.Map<java.lang.Class<? extends org.openmrs.module.idgen.IdentifierSource>, org.openmrs.module.idgen.processor.IdentifierSourceProcessor> processors = new java.util.HashMap<java.lang.Class<? extends org.openmrs.module.idgen.IdentifierSource>, org.openmrs.module.idgen.processor.IdentifierSourceProcessor> () ; processors.put ( org.openmrs.module.idgen.SequentialIdentifierGenerator.class, processor ) ; iss.setProcessors ( processors ) ; } 
private void upload ( com.webessay.model.Orders orders, org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { try { if ( ( file.getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity.setFileContentType ( file.getContentType () ) ; entity.setFileName ( file.getOriginalFilename () ) ; entity.setFileSize ( file.getSize () ) ; entity.setFile ( file.getBytes () ) ; uploadrepo.save ( entity ) ; orders.setFileId ( entity.getId () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.app_bar ) ) ) ; try { setSupportActionBar ( toolbar ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; initRecyclerView ( savedInstanceState ) ; } 
private static void closeConnectionBetween ( com.hazelcast.core.HazelcastInstance h1, com.hazelcast.core.HazelcastInstance h2 ) { if ( ( h1 == null ) || ( h2 == null ) ) { return; } com.hazelcast.instance.Node n1 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample.getNode ( h1 ) ; com.hazelcast.instance.Node n2 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample.getNode ( h2 ) ; try { if ( ( n1 != null ) && ( n2 != null ) ) { n1.clusterService.removeAddress ( n2.address, null ) ; n2.clusterService.removeAddress ( n1.address, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message.get ( 0 ) ; float amountPaid = message.get ( 1 ) ; float cost = 0; for ( core.restaurant.Check c : m_checks ) { if ( ( c.getCustomer () ) == customer ) { c.setStatus ( CheckStatusEnum.Received ) ; c.setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer.getName () ) + " is paying for his/her meal." ) ) ; try { stateChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.Collection<java.lang.String> queryAllDomains () { com.dianping.cat.report.service.ModelRequest request = new com.dianping.cat.report.service.ModelRequest ( com.dianping.cat.Constants.CAT, ModelPeriod.CURRENT.getStartTime () ) ; try { if ( m_service.isEligable ( request ) ) { com.dianping.cat.report.service.ModelResponse<com.dianping.cat.consumer.dependency.model.entity.DependencyReport> response = m_service.invoke ( request ) ; com.dianping.cat.consumer.dependency.model.entity.DependencyReport report = response.getModel () ; if ( null != report ) { return report.getDomainNames () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.util.HashSet<java.lang.String> () ; } 
public entities.obstacles.Entity createEntity ( java.lang.String eName, org.lwjgl.util.vector.Vector3f position, float rotX, float rotY, float rotZ, float scale ) { long before = java.lang.System.currentTimeMillis () ; entities.obstacles.Entity e = new entities.obstacles.Entity ( tModels.get ( eName ) , 0, mData.get ( eName ) , position, rotX, rotY, rotZ, scale, eName ) ; try { world.add ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return e; } 
private synchronized boolean isLineAvaliable ( int line ) { org.zhgeaits.zgdanmaku.model.ZGDanmaku danmaku = mLinesAvaliable.get ( line ) ; if ( danmaku == null ) { return true; } try { if ( ( danmaku.getCurrentOffsetX () ) > ( danmaku.getDanmakuWidth () ) ) { mLinesAvaliable.remove ( line ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
protected void initTableColumns ( boolean keepColumnStatus ) { try { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer.getTree () ; if ( ( tree != null ) && ( ! ( tree.isDisposed () ) ) ) { initTableColumns ( tree, keepColumnStatus ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void askQuestions () { int idx = ( firstaid_questions.size () ) - ( quesLen ) ; try { if ( idx < ( firstaid_questions.size () ) ) { app.speakOut ( firstaid_questions.get ( idx ) .getQues () ) ; expect_binary = true; current_grammar = app.BINARY_RESPONSE; } else { conclude = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override void init ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response ) throws java.io.IOException, javax.servlet.ServletException { javax.servlet.RequestDispatcher dispatcher = null; java.util.List<fr.eni.expeditor.entity.Article> lstArticle = gestionArticleBean.rechercherTous () ; request.setAttribute ( "lstArticle", lstArticle ) ; dispatcher = request.getRequestDispatcher ( "/WEB-INF/views/manager/gestionArticle.jsp" ) ; try { dispatcher.forward ( request, response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<java.lang.Integer> getDaysFromThisMonth ( int month, int year ) { java.util.Calendar cal = new java.util.GregorianCalendar () ; cal.set ( year, month, 1 ) ; int max = cal.getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; try { java.lang.System.out.println ( max ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<java.lang.Integer> daysFromThisMonth = new java.util.ArrayList<java.lang.Integer> () ; for ( int i = 0; i < max; i++ ) { daysFromThisMonth.add ( ( i + 1 ) ) ; } return daysFromThisMonth; } 
@ org.gbif.occurrence.persistence.Test public void testKeyByColumnIterator () { int count = 0; java.util.Iterator<java.lang.Integer> iterator = occurrenceService.getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes.toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY.toString () ) , org.gbif.occurrence.persistence.hbase.Columns.column ( GbifTerm.datasetKey ) ) ; try { while ( iterator.hasNext () ) { iterator.next () ; count++; } } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( 1, count ) ; } 
void CurrentPosUpdate () { try { if ( this.isEmpty () ) { CurrentPosX = sg.util.FastLinkedList.MARGIN; CurrentPosY = 0; } else if ( ! ( currentNode.nodeText.getText () .equals ( "\n" ) ) ) { CurrentPosX = ( currentNode.nodeText.getX () ) + ( java.lang.Math.round ( currentNode.nodeText.getLayoutBounds () .getWidth () ) ) ; CurrentPosY = currentNode.nodeText.getY () ; } else { CurrentPosX = sg.util.FastLinkedList.MARGIN; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () { setUpMocks () ; buySpecification = getOrderSpecification ( testInstrument, OrderCommand.BUY, 0.25 ) ; buySpecification2 = getOrderSpecification ( testInstrument, OrderCommand.BUY, 0.37 ) ; sellSpecification = getOrderSpecification ( testInstrument, OrderCommand.SELL, 0.25 ) ; try { sellSpecification2 = getOrderSpecification ( testInstrument, OrderCommand.SELL, 0.39 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } externalSpecification = getOrderSpecification ( testInstrument, OrderCommand.SELL, 0.775 ) ; buyOrder = com.jforex.programming.mock.IOrderBuilder.fromOrderSpecification ( buySpecification ) ; externalOrder = com.jforex.programming.mock.IOrderBuilder.fromOrderSpecification ( externalSpecification ) ; positionManager = new com.jforex.programming.position.JFPositionManager ( orderUtilMock ) ; } 
protected java.lang.String parseNextLink ( com.fasterxml.jackson.databind.JsonNode node ) { com.fasterxml.jackson.databind.JsonNode atIotLinkPath = node.path ( org.n52.shared.sensorthings.decoder.AT_IOT_NEXT_LINK ) ; try { if ( checkNode ( atIotLinkPath ) ) { return atIotLinkPath.asText () ; } else { com.fasterxml.jackson.databind.JsonNode linkPath = node.path ( org.n52.shared.sensorthings.decoder.NEXT_LINK ) ; if ( checkNode ( linkPath ) ) { return linkPath.asText () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } trace.traceapp.StartDraw.appLocationManager = MainActivity.appLocationManager; drawView = new trace.traceapp.DrawView ( this ) ; drawView.setBackgroundColor ( Color.WHITE ) ; setContentView ( drawView ) ; drawView.setWillNotDraw ( false ) ; arraySize = drawView.getLocArraySize () ; } 
@ javafx.fxml.FXML void rechercheSelonCriteres ( javafx.event.ActionEvent event ) { try { if ( motOuDefinietionRechercher.getText () .isEmpty () ) { javafx.scene.control.Alert alert = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.WARNING ) ; alert.setTitle ( "Avertissement" ) ; alert.setHeaderText ( "Erreur" ) ; alert.setContentText ( "Il n'y a aucun mot ou définition à recherche" ) ; alert.show () ; } else { recherche ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void setTerms ( java.util.List<java.lang.String> terms ) { try { if ( org.apache.commons.collections.CollectionUtils.isEmpty ( terms ) ) return; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.StringBuffer text = new java.lang.StringBuffer () ; java.util.Iterator<java.lang.String> i = terms.iterator () ; while ( i.hasNext () ) { text.append ( i.next () ) ; if ( i.hasNext () ) text.append ( SearchUtil.SPACE_SEPARATOR ) ; } fullTextArea.setText ( text.toString () ) ; } 
public void initSubviews () { setSupportActionBar ( toolbar ) ; getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; toggle = new android.support.v7.app.ActionBarDrawerToggle ( this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close ) ; drawerLayout.setDrawerListener ( toggle ) ; toggle.setDrawerIndicatorEnabled ( true ) ; toggle.syncState () ; try { setDrawerPaneWidth () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void revertInformationOfRequest ( final com.dmm.leavemanagementsystem.models.LeaveRequest request, final int position ) { try { setupTextViewStatus ( request ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setupLinearLayoutApproveOrUnapprove ( request, position ) ; setupSpinnerSubject ( request ) ; setupTextViewPhone ( request ) ; setupEditTextMessage ( request ) ; setupTextViewFromDate ( request ) ; setupTextViewFromHour ( ( ( request.getSt_approve () ) == 0 ) ) ; setupSpinnerDuration ( request.getDuration () ) ; setupTextViewUnitDuration () ; setupLinearLayoutDeleteAndRevert ( request, position ) ; } 
@ org.junit.Test public void testUserInitialization () { it.geosolutions.geostore.services.rest.model.UserList ul = geoStoreClient.getUsers ( 0, 100 ) ; org.junit.Assert.assertEquals ( 2, ul.getList () .size () ) ; try { for ( it.geosolutions.geostore.services.rest.model.RESTUser u : ul.getList () ) { org.junit.Assert.assertNull ( u.getGroupsNames () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void gameClick ( android.view.View v ) { if ( ( ! ( canClick ) ) || ( ( ( android.os.SystemClock.elapsedRealtime () ) - ( lastClickTime ) ) < 200 ) ) return; canClick = false; try { lastClickTime = android.os.SystemClock.elapsedRealtime () ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.gameClick ( v ) ; this.playerHandle ( v ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( ( album ) != null ) { switch ( view.getId () ) { case R.id.tv_activity_album_info_artist_name: android.content.Intent intent = new android.content.Intent ( this, com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity.class ) ; intent.putExtra ( SearchedArtistsActivity.ARTIST_NAME, this.album.getArtist () ) ; startActivity ( intent ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void primaryTask () { try { before.addAction ( com.badlogic.gdx.scenes.scene2d.actions.Actions.sequence ( com.badlogic.gdx.scenes.scene2d.actions.Actions.fadeOut ( ( ( duration ) / 2 ) ) , com.badlogic.gdx.scenes.scene2d.actions.Actions.run ( new java.lang.Runnable () { @java.lang.Override public void run () { secondaryTask () ; } } ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void openChat ( android.view.View view ) { to = chatButton.getText () .toString () ; android.content.Intent intent = new android.content.Intent ( this, pl.edu.uksw.prir.messenger.Chat.class ) ; intent.putExtra ( "from", from ) ; intent.putExtra ( "id", id ) ; intent.putExtra ( "to", to ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> handle ( android.database.Cursor cs ) { java.util.List<java.util.Map<java.lang.String, java.lang.Object>> rows = new java.util.ArrayList<java.util.Map<java.lang.String, java.lang.Object>> () ; try { while ( ! ( cs.isLast () ) ) { rows.add ( this.handleRow ( cs ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return rows; } 
private int setListBottom ( java.util.List listToSetBottomOf, int listTopPos ) { int listBottom = 0; try { if ( ( listToSetBottomOf.size () ) > 0 ) { if ( ( listToSetBottomOf.size () ) < 11 ) { listBottom = listToSetBottomOf.size () ; } else { listBottom = listTopPos + 10; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return listBottom; } 
public final hu.akarnokd.rxjava2.basetypes.Solo<T> doOnComplete ( hu.akarnokd.rxjava2.basetypes.Action onComplete ) { try { hu.akarnokd.rxjava2.basetypes.ObjectHelper.requireNonNull ( onComplete, "onComplete is null" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return hu.akarnokd.rxjava2.basetypes.Solo.onAssembly ( new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle<T> ( this, hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer () , onComplete, Functions.EMPTY_ACTION, hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer () , Functions.EMPTY_LONG_CONSUMER, Functions.EMPTY_ACTION ) ) ; } 
private data_structures.Node findNode ( int index ) { if ( index == ( ( size ) - 1 ) ) { return tail; } data_structures.Node node = head; try { for ( int i = 0; i < index; i++ ) { node = node.getNext () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return node; } 
@ java.lang.Override public synchronized void close () throws com.actemium.basicTvx_sdk.restclient.RestException { try { com.actemium.basicTvx_sdk.GlobalObjectManager.LOGGER.info ( "fermeture du GOM" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.actemium.basicTvx_sdk.GlobalObjectManager.isInit = false; if ( ( com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager ) != null ) com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager.closeHttpClient () ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.idHelper = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.factory = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.gestionCache = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.isCachePurgeAutomatiquementSiException = false; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.nonRecuperableViaWebService.clear () ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.lockFindOrCreate = null; } 
public void moveTailToBackOfHead () { try { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body.get ( ( ( length ) - ( length ) ) ) ; tail.setX ( breadCrumbsList.get ( length ) .getX () ) ; tail.setY ( breadCrumbsList.get ( length ) .getY () ) ; body.add ( length, tail ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String inviteUserToBooking ( java.lang.String username_to_invite, int booking_id ) throws java.sql.SQLException { java.sql.PreparedStatement s1 = connection.prepareStatement ( "SELECT systemUserId FROM SystemUser WHERE username=?" ) ; s1.setString ( 1, username_to_invite ) ; java.sql.ResultSet result = s1.executeQuery () ; try { if ( result.next () ) return inviteUserToBooking ( result.getInt ( 1 ) , booking_id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( "No such user found '" + username_to_invite ) + "'."; } 
@ java.lang.Override public void chooseOnePokemon () { int choice = 0; int chosenPokemon = 0; try { do { chosenPokemon = 0; printStarterPokemon () ; chosenPokemon = getChosen () ; java.lang.System.out.println ( "Do you choose him?" ) ; java.lang.System.out.println ( "[1]Yes [2]No" ) ; choice = main.ConsoleRenderer.input.nextInt () ; if ( choice == 2 ) { chooseOnePokemon () ; break; } else if ( choice != 1 ) { java.lang.System.out.println ( "Choose Yes or No!" ) ; } } while ( choice != 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } main.Player.choosePokemon ( chosenPokemon ) ; java.lang.System.out.println ( "Successufully added a pokemon" ) ; } 
public int getIndexDoc ( final java.lang.String filePath ) { try { for ( int di = 0; di < ( ndocs ) ; di++ ) { if ( docs[di].getDocLoc () .getPath () .contains ( filePath ) ) return di; } } catch ( Exception ex ) { ex.printStackTrace () ; } return -1; } 
public void enter ( android.view.View in, com.iodesystems.android.libs.view.transitions.TransitionPair transitionPair ) { try { if ( ! ( views.isEmpty () ) ) { android.view.View out = views.peek () ; if ( ( onPageTransitionListener ) != null ) { onPageTransitionListener.onPageTransition ( in, out ) ; } transitionPair.enter ( out, in ) ; transitionPairs.push ( transitionPair ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } views.push ( in ) ; } 
public void addCookie ( org.eclipse.rdf4j.workbench.util.WorkbenchRequest req, javax.servlet.http.HttpServletResponse resp, java.lang.String name, java.lang.String value ) { final javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( name, value ) ; if ( req.getContextPath () .isEmpty () ) { cookie.setPath ( "/" ) ; } else { cookie.setPath ( req.getContextPath () ) ; } try { cookie.setMaxAge ( java.lang.Integer.parseInt ( config.getInitParameter ( org.eclipse.rdf4j.workbench.util.CookieHandler.COOKIE_AGE_PARAM ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.addCookie ( req, resp, cookie ) ; } 
public java.lang.String getJSONByCode ( java.lang.String reference ) throws error.ApiNotReachableException, error.InvalidTokenException, error.KoronaCloudAPIErrorMessageException, org.codehaus.jettison.json.JSONException { reference = reference.replaceAll ( "%", "%20" ) ; reference = reference.replaceAll ( " ", "%20" ) ; try { reference = reference.replaceAll ( "/", "%2F" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } reference = reference.replaceAll ( "&", "%26" ) ; reference = reference.replaceAll ( "#", "%23" ) ; reference = reference.replaceAll ( "!", "%21" ) ; return new java.lang.String ( link.CloudLink.ApiCon.fetchData ( DataType.product, ReferenceType.code, reference ) ) ; } 
private void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { try { if ( ( currentSection ) == ( Section.SAVED.ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a.equals ( article ) ) { articles.remove ( a ) ; break; } } if ( articles.isEmpty () ) { articlesFragment.showNoSavedArticlesContainer ( true ) ; } articlesFragment.notifyArticlesChanged ( true, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initializeData () { java.util.ArrayList<java.lang.String> listName = new java.util.ArrayList<> () ; listName.add ( "Singer" ) ; listName.add ( "Composer" ) ; listName.add ( "Director" ) ; listName.add ( "Actor" ) ; adapter = new com.kangladevelopers.filmfinder.Adapter.SimpleAdapter ( getApplicationContext () , listName ) ; lvListAll.setAdapter ( adapter ) ; try { lvListAll.setOnItemClickListener ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.util.List<ru.stqa.pft.addressbook.model.GroupData> generateGroups ( int count ) { java.util.List<ru.stqa.pft.addressbook.model.GroupData> groups = new java.util.ArrayList<ru.stqa.pft.addressbook.model.GroupData> () ; try { for ( int i = 0; i < count; i++ ) { groups.add ( new ru.stqa.pft.addressbook.model.GroupData () .withName ( java.lang.String.format ( "test %s", i ) ) .withHeader ( java.lang.String.format ( "header %s", i ) ) .withFooter ( java.lang.String.format ( "footer %s", i ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return groups; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/{code}", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String updateSubCategory ( @org.springframework.web.bind.annotation.ModelAttribute @javax.validation.Valid org.egov.tl.entity.LicenseSubCategory licenseSubCategory, org.springframework.validation.BindingResult errors, org.springframework.web.servlet.mvc.support.RedirectAttributes additionalAttr, final org.springframework.ui.Model model ) { try { if ( errors.hasErrors () ) { return "subcategory-update"; } } catch ( Exception ex ) { ex.printStackTrace () ; } licenseSubCategoryService.updateLicenseSubCategory ( licenseSubCategory ) ; additionalAttr.addFlashAttribute ( "message", "msg.success.subcategory.update" ) ; return "redirect:/licensesubcategory/view/" + ( licenseSubCategory.getCode () ) ; } 
@ java.lang.Override public void handle ( javafx.event.Event evt ) { java.lang.String text = ""; java.lang.String eventType = evt.getEventType () .toString () ; switch ( eventType ) { case "MOUSE_CLICKED": text = "Mouse Clicked"; break; case "MOUSE_ENTERED": text = "Mouse entered"; break; case "MOUSE_EXITED": text = "Mouse exited"; break; default: break; } java.lang.System.out.println ( text ) ; try { rootPane.getRootFooterArea () .getTextOutputLabel () .setText ( text ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void zipDirectory ( java.io.File dir, java.io.File zipFile ) throws java.io.IOException { java.io.FileOutputStream fout = new java.io.FileOutputStream ( zipFile ) ; java.util.zip.ZipOutputStream zout = new java.util.zip.ZipOutputStream ( fout ) ; try { org.jboss.tools.tycho.sitegenerator.FetchSourcesFromManifests.zipSubDirectory ( "", dir, zout ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } zout.flush () ; zout.close () ; fout.flush () ; fout.close () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/login", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String login1 ( javax.servlet.http.HttpSession session, javax.servlet.http.HttpServletRequest request ) { try { if ( ( session.getAttribute ( "user" ) ) != null ) { session.removeAttribute ( "notification" ) ; session.setAttribute ( "notification", "You are already logged in." ) ; return "index"; } else { session.removeAttribute ( "notification" ) ; session.removeAttribute ( "notifsignup" ) ; request.setAttribute ( "url", request.getParameter ( "url" ) ) ; return "login"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.ArrayList<java.lang.Boolean> asList () { java.util.ArrayList<java.lang.Boolean> l = new java.util.ArrayList<java.lang.Boolean> ( length ) ; try { for ( int i = 0; i < ( length ) ; i++ ) { l.add ( i, get ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return l; } 
@ org.junit.Test public void shouldSuccessfullyApplyForLoan () { com.example.loan.model.LoanApplication application = new com.example.loan.model.LoanApplication ( new com.example.loan.model.Client ( "1234567890" ) , 123.123 ) ; com.example.loan.model.LoanApplicationResult loanApplication = this.service.loanApplication ( application ) ; org.assertj.core.api.Assertions.assertThat ( loanApplication.getLoanApplicationStatus () ) .isEqualTo ( LoanApplicationStatus.LOAN_APPLIED ) ; try { org.assertj.core.api.Assertions.assertThat ( loanApplication.getRejectionReason () ) .isNull () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, java.lang.String[] permissions, int[] grantResults ) { try { switch ( requestCode ) { case io.card.payment.CardIOActivity.PERMISSION_REQUEST_ID: { waitingForPermission = false; if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults[0] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { showCameraScannerOverlay () ; } else { manualEntryFallbackOrForced = true; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected synchronized java.lang.String sourceForModelledClass ( spoon.reflect.declaration.CtType<?> modelledClass ) { prettyPrinter.reset () ; prettyPrinter.scan ( modelledClass ) ; java.lang.String sourceCode = ( ( ( "package " + ( modelledClass.getPackage () .toString () ) ) + ";" ) + ( java.lang.System.getProperty ( "line.separator" ) ) ) + ( prettyPrinter.toString () ) ; try { prettyPrinter.reset () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return sourceCode; } 
@ org.junit.Test public void matchComparationTest () { final org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.SimpleComparator<org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.Flow> simpleComparator = org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactory.createMatch () ; compareViaComparator ( simpleComparator ) ; try { org.junit.Assert.assertEquals ( false, simpleComparator.areObjectsEqual ( org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.nullFlow, org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.storedFlow ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( true, simpleComparator.areObjectsEqual ( org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.statsFlow, org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.copyStatsFlow ) ) ; org.junit.Assert.assertEquals ( false, simpleComparator.areObjectsEqual ( org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.statsFlow, org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.nullFlow ) ) ; } 
public void handle ( javafx.scene.input.MouseEvent me ) { int x = ( ( int ) ( me.getSceneX () ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; int y = ( ( int ) ( ( me.getSceneY () ) - 55 ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; try { if ( ! ( animating ) ) { clicked ( x, y, image ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.jetbrains.annotations.NotNull public static com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManager getManager () { if ( ( com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager ) == null ) { com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerADAuthDecorator ( ( com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl () ) ) ; } try { if ( ( com.microsoftopentechnologies.intellij.helpers.azure.rest.AzureRestAPIManagerImpl.getManager () .getAuthenticationMode () ) == ( com.microsoftopentechnologies.intellij.helpers.azure.AzureAuthenticationMode.ActiveDirectory ) ) { return com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth; } else { return com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void prepareLevel ( org.newdawn.slick.tiled.TiledMap currentMap, int spellingtonX, int spellingtonY ) throws org.newdawn.slick.SlickException { activeProjectiles = new java.util.ArrayList<> () ; activeAnimations = new java.util.ArrayList<> () ; spellington.setAnimState ( LivingEntity.AnimState.STANDING_R ) ; spellington.setX ( spellingtonX ) ; try { spellington.setY ( spellingtonY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } spellington.setSpeedVector ( new ca.qc.bdeb.info204.spellington.calculations.Vector2D ( 0, 0 ) ) ; map = currentMap; } 
public void restore_to ( java.util.ArrayList<java.lang.Integer> old_playable, java.util.ArrayList<java.lang.Integer> old_played, int level ) { playable = new name.cantanima.idealnim.Ideal ( old_playable ) ; played = new name.cantanima.idealnim.Ideal ( old_played ) ; game_level = level; evaluator = new name.cantanima.idealnim.Game_Evaluation_Hashmap ( getContext () , playable, played, game_level ) ; evaluator.game_value () ; game_control = new name.cantanima.idealnim.Game_Control () ; try { game_control.new_game ( this, view_xmax, view_ymax, game_level, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } invalidate () ; } 
@ java.lang.Override public void onEvent ( eu.dlvm.domotics.base.Block source, eu.dlvm.domotics.events.EventType event ) { try { switch ( event ) { case ON: break; case OFF: reallyOff () ; break; case TOGGLE: toggle () ; break; case DELAY_ON: delayOn () ; break; case DELAY_OFF: delayOff () ; break; default: eu.dlvm.domotics.actuators.Fan.logger.warn ( ( ( ( "Ignored event " + event ) + " from " ) + ( source.getName () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void formatEditText ( android.widget.EditText editText ) { try { if ( editText.getText () .toString () .equals ( "" ) ) { editText.setText ( 0 ) ; } else if ( ( editText.length () ) == 1 ) { java.lang.String temp = 0 + ( editText.getText () .toString () ) ; editText.setText ( temp ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String inputStreamToString ( java.io.InputStream inputStream ) throws java.io.IOException { java.io.Reader reader = new java.io.InputStreamReader ( inputStream, "gb2312" ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( reader ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String buffer; try { while ( ( buffer = bufferedReader.readLine () ) != null ) { sb.append ( buffer ) .append ( "\n" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } inputStream.close () ; bufferedReader.close () ; reader.close () ; return sb.toString () ; } 
public void shuffleDeck () { int random = 0; try { for ( int i = 0; i < ( numberOfCards ) ; i++ ) { random = srk.syracuse.gameofcards.Model.Deck.getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards[i]; cards[i] = cards[random]; cards[random] = temp; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static ml.shifu.shifu.container.obj.ModelConfig loadModelConfig ( java.lang.String path, ml.shifu.shifu.container.obj.RawSourceData.SourceType sourceType ) throws java.io.IOException { ml.shifu.shifu.container.obj.ModelConfig modelConfig = ml.shifu.shifu.util.CommonUtils.loadJSON ( path, sourceType, ml.shifu.shifu.container.obj.ModelConfig.class ) ; try { if ( ( modelConfig.getTrain () .getGridConfigFile () ) != null ) { modelConfig.getTrain () .setGridConfigFileContent ( ml.shifu.shifu.util.CommonUtils.loadFileContent ( modelConfig.getTrain () .getGridConfigFile () , sourceType ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return modelConfig; } 
public void update () { android.content.ContentResolver resolver = mContext.getContentResolver () ; mOneFingerQuickSettingsIntercept = ( Settings.System.getInt ( resolver, Settings.System.STATUS_BAR_QUICK_QS_PULLDOWN, 1 ) ) == 1; mDoubleTapToSleepEnabled = ( Settings.System.getInt ( resolver, Settings.System.DOUBLE_TAP_SLEEP_GESTURE, 1 ) ) == 1; try { mStatusBarLockedOnSecureKeyguard = ( Settings.Secure.getIntForUser ( resolver, Settings.Secure.STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD, 0, UserHandle.USER_CURRENT ) ) == 1; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( download.needToDownload () ) { fireTask ( ( ( ( Language.INSTANCE.localize ( "common.downloading" ) ) + " " ) + ( download.getFilename () ) ) ) ; download.download ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onShutdownInput () { try { assert eventloop.inEventloopThread () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( callback ) != null ) { if ( ( ( reading ) == ( BODY ) ) && ( ( contentLength ) == ( UNKNOWN_LENGTH ) ) ) { onHttpMessage ( bodyQueue.takeRemaining () ) ; } else { closeWithError ( io.datakernel.http.HttpClientConnection.CLOSED_CONNECTION ) ; } } else { close () ; } } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { try { switch ( position ) { case 0: com.midoreigh.midopicker.CameraKitFragment cameraKitFragment = new com.midoreigh.midopicker.CameraKitFragment () ; com.midoreigh.midopicker.CameraKitFragment.setConfig ( com.midoreigh.midopicker.ImagePickerActivity.getConfig () ) ; return cameraKitFragment; case 1: return new com.midoreigh.midopicker.GalleryFragment () ; default: return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAttachedToRecyclerView ( android.support.v7.widget.RecyclerView recyclerView ) { try { if ( ( mRunnables.size () ) == 0 ) { int count = getItemCount () ; for ( int i = 0; i < count; i++ ) { mRunnables.add ( null ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } registerAdapterDataObserver ( new com.tr4android.recyclerviewslideitem.SwipeAdapter.SwipeAdapterDataObserver () ) ; } 
private void updateConnections () { try { for ( Models.Location l1 : validLocations ) for ( Models.Location l2 : validLocations ) for ( Models.Location mid : validLocations ) if ( ( connection.get ( new Models.LocationPair ( l1, mid ) ) ) && ( connection.get ( new Models.LocationPair ( mid, l2 ) ) ) ) connection.put ( new Models.LocationPair ( l1, l2 ) , true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean checkPlayersTiles ( java.lang.String board, int player, int value, int numOfValues ) { java.lang.String tiles = game.manger.SaveTheIslandGame.Board.getPlayersTiles ( player, board ) ; int count = 0; try { for ( int i = 0; i < 5; i++ ) { if ( ( java.lang.Integer.parseInt ( tiles.substring ( i, ( i + 1 ) ) ) ) == value ) { count++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return count >= numOfValues; } 
public void mouseUpdate ( int mx, int my, boolean pressed ) { try { if ( pressed == false ) { this.destroy () ; } else if ( this.contains ( mx, my ) ) { if ( ! ( this.fixed ) ) { this.bind ( mx, my ) ; } else { this.bind ( mx, this.fixed_y ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean checkLimit ( net.dv8tion.jda.core.entities.Guild guild ) { fredboat.audio.player.GuildPlayer guildPlayer = fredboat.audio.player.PlayerRegistry.getExisting ( guild ) ; try { if ( ( guildPlayer != null ) && ( ( guildPlayer.getSongCount () ) > 0 ) ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( fredboat.audio.player.PlayerLimitManager.limit ) < 0 ) || ( ( fredboat.audio.player.PlayerRegistry.getPlayingPlayers () .size () ) < ( fredboat.audio.player.PlayerLimitManager.limit ) ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { boolean connection = mBluetoothLeService.connect ( device.getAddress () ) ; if ( connection ) { rootview.setVisibility ( View.VISIBLE ) ; connect_button_view.setVisibility ( View.GONE ) ; } try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP.deleteUserArtist ( MyApplication.userName, artist.getArtistId () ) ; try { dbHelper.deleteUserArtist ( dbHelper.getWritableDatabase () , artist.getArtistId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.widget.Toast.makeText ( mActivity.getApplicationContext () , x, Toast.LENGTH_SHORT ) .show () ; mArtists.remove ( position ) ; notifyDataSetChanged () ; } 
public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem.getDanceSequenceId () ; try { removeDanceSequence ( danceSequenceID, selectedBeatElem.getBeatPosition () , ( ( selectedBeatElem.getBeatPosition () ) + ( mDanceSequences.get ( danceSequenceID ) .getLength () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean containsKey ( java.lang.String key ) { int index = ( key.hashCode () ) % ( this.valueTable.length ) ; java.lang.String currentKey; try { while ( ( currentKey = this.keyTable[index] ) != null ) { if ( key.equals ( currentKey ) ) return true; index = ( index + 1 ) % ( this.keyTable.length ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public com.mycompany.dao.Doctor addDoctor ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil.getSessionFactory () ; org.hibernate.Session session = sessionFactory.openSession () ; try { session.beginTransaction () ; } catch ( Exception ex ) { ex.printStackTrace () ; } session.save ( doctor ) ; session.getTransaction () .commit () ; return doctor; } 
@ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { mDrawerLayout.closeDrawers () ; try { menuItem.setChecked ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } switch ( menuItem.getItemId () ) { case R.id.nav_home: setToolbarTitle ( "主页" ) ; navigationDrawerItemSelected ( 0 ) ; break; case R.id.nav_messages: setToolbarTitle ( "发现" ) ; navigationDrawerItemSelected ( 1 ) ; break; } return true; } 
public void sendMessage () throws java.lang.InterruptedException { java.lang.System.out.println ( "Waiting five seconds..." ) ; java.lang.Thread.sleep ( 5000 ) ; try { java.lang.System.out.println ( "Sending message..." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.springframework.amqp.core.Message message = org.springframework.amqp.core.MessageBuilder.withBody ( "Customized Messages".getBytes () ) .setHeaderIfAbsent ( "header1", "My header" ) .setReplyTo ( "something" ) .setCorrelationId ( "something".getBytes () ) .build () ; rabbitTemplate.send ( RabbitMQDemoConfig.queueName, message ) ; } 
@ java.lang.Override public twitter4j.User showUser ( java.lang.String arg0 ) throws twitter4j.TwitterException { if ( ( limits[1] ) == 179 ) { SocialNetworkAnalysis.TwitterWrapper.timelimited[0] = new java.util.Date () ; limit.reached () ; limits[1] = 0; } ( limits[1] ) ++; java.lang.System.out.print ( "limits in showUser: " ) ; for ( int limit : limits ) { java.lang.System.out.print ( ( limit + " " ) ) ; } try { java.lang.System.out.println () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return t.showUser ( arg0 ) ; } 
private com.gamesbykevin.breakout.ball.Balls.Key getRandomKey () { if ( this.keys.isEmpty () ) { for ( com.gamesbykevin.breakout.ball.Balls.Key key : com.gamesbykevin.breakout.ball.Balls.Key.values () ) { if ( key == ( com.gamesbykevin.breakout.ball.Balls.Key.Red ) ) continue; this.keys.add ( key ) ; } } final int index = GamePanel.RANDOM.nextInt ( this.keys.size () ) ; final com.gamesbykevin.breakout.ball.Balls.Key tmp = this.keys.get ( index ) ; try { this.keys.remove ( index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return tmp; } 
private boolean checkNumberAssignment ( java.lang.String[] input ) { try { if ( ( input[1].matches ( ".*[^1-9].*" ) ) && ( ! ( input[1].contains ( "0" ) ) ) ) { if ( input[1].contains ( "." ) ) { return true; } else { java.lang.System.out.println ( "ERROR: Number assignment contains a non-number character." ) ; return false; } } else { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void calculateDuration () { try { if ( locations.isEmpty () ) { metaData.duration = -1; } else { metaData.duration = ( locations.get ( ( ( locations.size () ) - 1 ) ) .getTimestamp () ) - ( locations.get ( 0 ) .getTimestamp () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void addAndRemoveTest () { java.util.Collections.addAll ( mySet, 1, 2, 3 ) ; try { java.util.Collections.addAll ( anotherSet, 1, 3, 4 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mySet.add ( 4 ) ; mySet.remove ( 2 ) ; org.junit.Assert.assertTrue ( anotherSet.equals ( mySet ) ) ; org.junit.Assert.assertEquals ( anotherSet, mySet ) ; } 
@ java.lang.Override public org.craftercms.profile.api.VerificationToken getVerificationToken ( java.lang.String tokenId ) throws org.craftercms.profile.api.exceptions.ProfileException { java.lang.String url = getAbsoluteUrl ( ( ( BASE_URL_PROFILE ) + ( URL_PROFILE_GET_VERIFICATION_TOKEN ) ) ) ; try { url = addQueryParams ( url, createBaseParams () , false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return doGetForObject ( url, org.craftercms.profile.api.VerificationToken.class, tokenId ) ; } 
@ java.lang.Override public void onStart () { super.onStart () ; try { if ( ( resultDrawer ) == null ) { accountList = getAccounts () ; if ( ! ( accountList.isEmpty () ) ) { selectedAccount = accountList.get ( 0 ) ; createDrawer () ; selectAccount ( selectedAccount ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeFromErrorsWarnings ( insalmo.Parameter param ) { try { if ( this.errors.contains ( param ) ) { this.errors.remove ( param ) ; this.errorWarningUpdateListener.actionPerformed ( new java.awt.event.ActionEvent ( this, java.awt.event.ActionEvent.ACTION_PERFORMED, null ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( this.warnings.contains ( param ) ) { this.warnings.remove ( param ) ; this.errorWarningUpdateListener.actionPerformed ( new java.awt.event.ActionEvent ( this, java.awt.event.ActionEvent.ACTION_PERFORMED, null ) ) ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { progressBar.setVisibility ( View.GONE ) ; try { startActivity ( new android.content.Intent ( this, com.example.xmppchatsampleproject.ChatOptionActivity.class ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.os.Bundle extras = getIntent () .getExtras () ; if ( extras != null ) { java.lang.String messageContent = extras.getString ( "xmpp_status" ) ; if ( ( messageContent != null ) && ( messageContent.equals ( "success" ) ) ) { } else { android.widget.Toast.makeText ( this, "Somthing went wrong. try again", Toast.LENGTH_SHORT ) .show () ; } } } 
public java.util.Set<com.ctrip.framework.apollo.core.enums.Env> emailSupportedEnvs () { java.lang.String[] configurations = getArrayProperty ( "email.supported.envs", null ) ; java.util.Set<com.ctrip.framework.apollo.core.enums.Env> result = com.google.common.collect.Sets.newHashSet () ; if ( ( configurations == null ) || ( ( configurations.length ) == 0 ) ) { return result; } try { for ( java.lang.String env : configurations ) { result.add ( com.ctrip.framework.apollo.core.enums.Env.fromString ( env ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public double getNumSteps ( android.graphics.Point p1, android.graphics.Point p2, int stepSize ) { int x = ( p2.x ) - ( p1.x ) ; int y = ( p2.y ) - ( p1.y ) ; double distance = ( java.lang.Math.abs ( java.lang.Math.sqrt ( ( ( x * x ) + ( y * y ) ) ) ) ) / ( player.getScale () ) ; try { android.util.Log.i ( "Distance between p1/p2", ( "" + distance ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return distance / stepSize; } 
public void setTime ( int minutes, int seconds ) { if ( seconds < 0 ) seconds = 0; if ( minutes < 0 ) minutes = 0; this.minutes = minutes + ( seconds / 60 ) ; this.seconds = seconds % 60; try { this.setText ( java.lang.String.format ( "%02d:%02d", this.minutes, this.seconds ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean isBF ( java.lang.String word ) throws java.io.IOException { if ( ( utils.GFBF.GFLexicon.isEmpty () ) || ( utils.GFBF.BFLexicon.isEmpty () ) ) utils.GFBF.intializeLexicon () ; try { if ( ( utils.GFBF.BFLexicon.contains ( word ) ) || ( ! ( utils.GFBF.GFLexicon.contains ( word ) ) ) ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/addVolunteer", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String addVolunteer ( @org.springframework.web.bind.annotation.ModelAttribute ( value = "SpringWeb" ) us.wasatchsystems.ccs.models.Volunteer volunteer, org.springframework.ui.ModelMap model ) { model.addAttribute ( "firstName", volunteer.getFirstName () ) ; try { model.addAttribute ( "lastName", volunteer.getLastName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } model.addAttribute ( "dob", volunteer.getDob () ) ; us.wasatchsystems.ccs.datasource.VolunteerDataSource.addVolunteer ( volunteer ) ; return "result"; } 
@ java.lang.Override public java.util.EnumSet<de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance> getInstancesGlobalNonOld ( final de.uni_freiburg.informatik.ultimate.modelcheckerutils.cfg.variables.IProgramNonOldVar pv ) { try { if ( isModifiableByCallee ( pv ) ) { if ( isWrittenOnReturn ( pv ) ) { return java.util.EnumSet.of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN ) ; } else { return java.util.EnumSet.of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_RETURN ) ; } } else { if ( isWrittenOnReturn ( pv ) ) { return java.util.EnumSet.of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_CALL, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN ) ; } else { return java.util.EnumSet.of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_CALL, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_RETURN ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public final boolean titleChanged ( final xyz.algogo.core.Algorithm algorithm, final java.lang.String title, final java.lang.String newTitle ) { try { if ( ( newTitle != null ) && ( ! ( newTitle.isEmpty () ) ) ) { algorithmChanged ( false ) ; this.setTitle ( buildTitle ( newTitle, algorithm.getAuthor () ) ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } javax.swing.JOptionPane.showMessageDialog ( this, xyz.algogo.desktop.utils.LanguageManager.getString ( "joptionpane.invalidtitle", newTitle ) , xyz.algogo.desktop.utils.LanguageManager.getString ( "joptionpane.error" ) , javax.swing.JOptionPane.ERROR_MESSAGE ) ; return false; } 
private void setMapPosition () { try { if ( ( googleMap ) != null ) { java.lang.System.out.println ( "googleMap != null" ) ; if ( com.syzible.loinnir.utils.LocalStorage.getBooleanPref ( LocalStorage.Pref.should_share_location, getActivity () ) ) { getWebServerLocation () ; } else { googleMap.clear () ; googleMap.animateCamera ( com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom ( LocationService.ATHLONE, LocationService.INITIAL_LOCATION_ZOOM ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onHandleMessage ( olof.sjoholm.Net.Server.Player player, olof.sjoholm.Net.Both.Envelope envelope ) { if ( envelope instanceof olof.sjoholm.Net.Both.Envelope.PlayerSelectColor ) { player.setColor ( ( ( olof.sjoholm.Net.Both.Envelope.PlayerSelectColor ) ( envelope ) ) .getColor () ) ; gameBoard.updatePlayer ( player ) ; } try { if ( envelope instanceof olof.sjoholm.Net.Both.Envelope.PlayerSelectName ) { player.setName ( ( ( olof.sjoholm.Net.Both.Envelope.PlayerSelectName ) ( envelope ) ) .name ) ; gameBoard.updatePlayer ( player ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String makeWord () { java.lang.String word = makeSyllable () ; double cutoff; switch ( monosylProb ) { default: case ALWAYS: return word; case MOSTLY: cutoff = 0.6; break; case FREQUENT: cutoff = 0.45; break; case LESS: cutoff = 0.3; break; case RARE: cutoff = 0.15; break; case CUSTOM: cutoff = monosylProbCustom; } double jump = rand.nextDouble () ; try { if ( jump > cutoff ) { word += makeWord () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return word; } 
@ java.lang.Override public java.lang.Object getMessageBlocking ( long timeDuration, java.util.concurrent.TimeUnit timeUnit ) throws java.lang.InterruptedException { FinalProject.communication.CommTuple receivedCommTuple = receivedObjectQueue.poll ( timeDuration, timeUnit ) ; if ( receivedCommTuple == null ) return null; try { replyConnection = receivedCommTuple.getConnection () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return receivedCommTuple.getObj () ; } 
private static void set ( greymerk.roguelike.worldgen.IWorldEditor editor, java.util.Random rand, greymerk.roguelike.worldgen.Coord origin ) { try { if ( ! ( editor.isAirBlock ( origin ) ) ) return; } catch ( Exception ex ) { ex.printStackTrace () ; } greymerk.roguelike.worldgen.MetaBlock vine = greymerk.roguelike.worldgen.blocks.BlockType.get ( BlockType.VINE ) ; for ( greymerk.roguelike.worldgen.Cardinal dir : greymerk.roguelike.worldgen.Cardinal.directions ) { if ( editor.canPlace ( vine, origin, dir ) ) { greymerk.roguelike.worldgen.blocks.Vine.setOrientation ( vine, dir ) ; vine.set ( editor, origin ) ; return; } } } 
public void addUpdate ( com.lagopusempire.basicupdater.Update<V, U> update ) { if ( update == null ) { throw new java.lang.IllegalArgumentException ( "Update cannot be null." ) ; } V from = update.getFrom () ; try { if ( updates.containsKey ( from ) ) { throw new com.lagopusempire.basicupdater.DuplicateUpdateException ( updates.remove ( from ) , update ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } updates.put ( from, update ) ; } 
@ java.lang.Override public void onResume ( android.os.Bundle savedInstanceState ) { try { super.onResume ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } number = 0; sent = false; com.appbackr.android.tracker.demo.Tracker.postData ( this.getApplicationContext () , "".getApplicationContext () .getPackageName () , "", "" ) ; setContentView ( R.layout.main ) ; final android.widget.TextView textViewToChange = ( ( android.widget.TextView ) ( findViewById ( R.id.count ) ) ) ; textViewToChange.setText ( number.toString () ) ; } 
@ org.junit.Test public void TestGetDbColumnInfo () { com.github.wz2cool.dynamic.mybatis.ColumnInfo result = com.github.wz2cool.dynamic.mybatis.EntityCache.getInstance () .getColumnInfo ( com.github.wz2cool.model.Student.class, "name" ) ; org.junit.Assert.assertEquals ( "name", result.getColumnName () ) ; org.junit.Assert.assertEquals ( false, result.isUpdateIfNull () ) ; result = com.github.wz2cool.dynamic.mybatis.EntityCache.getInstance () .getColumnInfo ( com.github.wz2cool.model.Student.class, "note" ) ; org.junit.Assert.assertEquals ( "note", result.getColumnName () ) ; try { org.junit.Assert.assertEquals ( true, result.isUpdateIfNull () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testFeatureGroupTypeAlternative () throws de.ovgu.featureide.fm.core.io.UnsupportedModelException, java.io.FileNotFoundException { try { for ( de.ovgu.featureide.fm.core.base.IFeature origF : origFm.getFeatures () ) { if ( origF.getStructure () .isAlternative () ) { de.ovgu.featureide.fm.core.base.IFeature newF = newFm.getFeature ( origF.getName () ) ; org.junit.Assert.assertTrue ( failureMessage, newF.getStructure () .isAlternative () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int itemClicked = item.getItemId () ; if ( itemClicked == ( R.id.item_Setting ) ) { android.content.Context context = this; android.content.Intent activity_setting = new android.content.Intent ( context, com.example.william.earthdayapplication.SettingActivity.class ) ; startActivity ( activity_setting ) ; } if ( itemClicked == ( R.id.item_Instruction ) ) { } try { if ( itemClicked == ( R.id.item_Help ) ) { android.content.Intent toy = new android.content.Intent ( getApplicationContext () , com.example.william.earthdayapplication.Main2Activity.class ) ; startActivity ( toy ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onOptionsItemSelected ( item ) ; } 
@ java.lang.SuppressWarnings ( value = "static-method" ) @org.junit.Test public void testRotateY () { try { org.junit.Assert.assertEquals ( Orientation16.SSW, Orientation16.SSW.rotate ( Axis.Y, 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( Orientation16.S, Orientation16.SSE.rotate ( Axis.Y, 1 ) ) ; org.junit.Assert.assertEquals ( Orientation16.NW, Orientation16.N.rotate ( Axis.Y, ( -2 ) ) ) ; org.junit.Assert.assertEquals ( Orientation16.NW, Orientation16.SSW.rotate ( Axis.Y, 5 ) ) ; } 
@ java.lang.Override public boolean onDependentViewChanged ( android.support.design.widget.CoordinatorLayout parent, android.support.design.widget.FloatingActionButton fab, android.view.View dependency ) { try { if ( dependency instanceof android.support.design.widget.AppBarLayout ) { if ( ( dependency.getY () ) >= 0 ) { fab.show () ; } else { fab.hide () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void updateNFCData () { try { if ( ( mNfcFingerprints ) != null ) { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils.convertFingerprintToHex ( mNfcFingerprints ) ; byte[] fp = new byte[20]; java.nio.ByteBuffer.wrap ( fp ) .put ( mNfcFingerprints, 0, 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils.convertFingerprintToHex ( fp ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setup ( org.bukkit.entity.Player p, java.lang.String id, java.lang.String name, java.lang.String option, int step, org.bukkit.block.Block b ) { setupOp = p; setup = id; setupName = name; setupOption = option; setupStep = step; try { if ( b != null ) { blockChoices.add ( b ) ; setupStep += 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( setupStep ) <= 2 ) p.sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; } 
public int ev12 ( int p ) { position = p; try { java.lang.System.out.println ( "The gods are in your favor as you seem to have found a hot spring with some lovely women to match..." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( " ( 1 ) Approach and see what happens" ) ; java.lang.System.out.println ( " ( 2 ) Resist the urge" ) ; choice = u.nextInt () ; switch ( choice ) { case 1: java.lang.System.out.println ( "You're not quite sure what happened but you feel tired and a bit... sweaty? You definitely feel like slowing down for a bit." ) ; speed -= 1; position += speed; break; case 2: java.lang.System.out.println ( "You feel like much less of a man but somehow feel like you avoided a crisis. You are hasty in your, well, haste." ) ; speed += 2; position += speed; break; default: java.lang.System.out.println ( "No pity is shown to those who cannot follow the rules of the game. Die, you fiend." ) ; position = -1; break; } return position; } 
protected void checkAnswer ( java.lang.String answer, boolean outOfTime ) { try { if ( answer.equals ( members[memberNum] ) ) { score += 1; refreshScoreText () ; } else { java.lang.String wrongText; if ( !outOfTime ) { wrongText = "You suck! The correct answer was " + ( members[memberNum] ) ; } else { wrongText = "You ran out of time! The correct answer was " + ( members[memberNum] ) ; } android.widget.Toast toast = android.widget.Toast.makeText ( getApplicationContext () , wrongText, Toast.LENGTH_SHORT ) ; toast.show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest, int parcelableFlags ) { dest.writeLong ( info.presentationTimeUs ) ; dest.writeInt ( info.flags ) ; dest.writeByteArray ( org.mozilla.gecko.media.Sample.byteArrayFromBuffer ( bytes, info.offset, info.size ) ) ; try { if ( ( crypto ) != null ) { dest.writeByteArray ( crypto.iv ) ; dest.writeByteArray ( crypto.key ) ; dest.writeInt ( crypto.mode ) ; dest.writeIntArray ( crypto.numBytesOfClearData ) ; dest.writeIntArray ( crypto.numBytesOfEncryptedData ) ; dest.writeInt ( crypto.numSubSamples ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean hasPendingConnectRequest ( java.lang.String ipAddress ) { try { synchronized ( mReconnectRequestList ) { if ( ( mReconnectRequestList.size () ) > 0 ) { logConnectReqeustList () ; for ( com.assistant.connection.ConnectionManager.ConnectRequest request : mReconnectRequestList ) { if ( android.text.TextUtils.equals ( ipAddress, request.ipAddress ) ) { com.assistant.utils.Log.d ( com.assistant.connection.ConnectionManager.TAG, ( "hasPendingConnectRequest, true for ip:" + ipAddress ) ) ; return true; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } com.assistant.utils.Log.d ( com.assistant.connection.ConnectionManager.TAG, ( "hasPendingConnectRequest, false for reconnecting:" + ipAddress ) ) ; return false; } 
private static boolean equals ( java.util.Properties p, java.lang.String optionKey, java.lang.String optionValue, boolean caseSensitive ) { java.lang.String v = p.getProperty ( optionKey ) ; if ( v == null ) return false; try { if ( !caseSensitive ) v = v.toLowerCase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return v.equals ( optionValue ) ; } 
public void onEvent ( blueprint.com.sage.events.BackEvent event ) { try { if ( ( mViewPager.getCurrentItem () ) == 0 ) { getActivity () .finish () ; } else { mViewPager.setCurrentItem ( ( ( mViewPager.getCurrentItem () ) - 1 ) , true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void grow () { byte[] old = _buffer; _buffer = new byte[ ( _buffer.length ) * 2]; java.lang.System.arraycopy ( old, 0, _buffer, 0, _position ) ; try { _encoder.init ( _buffer, _position, ( ( _buffer.length ) * 2 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.apache.catalina.tribes.Member getMember ( org.apache.catalina.tribes.Member mbr ) { org.apache.catalina.tribes.Member[] members = this.members; try { if ( ( members.length ) > 0 ) { org.apache.catalina.tribes.Member result = null; for ( int i = 0; ( i < ( members.length ) ) && ( result == null ) ; i++ ) { if ( members[i].equals ( mbr ) ) { result = members[i]; } } return result; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { android.content.Intent intent; try { switch ( position ) { case 0: intent = new android.content.Intent ( this, com.coolbitx.coolwallet.ui.ExchangeRateActivity.class ) ; startActivity ( intent ) ; break; case 1: intent = new android.content.Intent ( this, com.coolbitx.coolwallet.ui.TransactionFeeActivity.class ) ; startActivity ( intent ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String createFullUrl ( final java.lang.String url, final java.util.Map<java.lang.String, java.lang.Object> params ) { java.lang.String fullUrl = url; try { if ( params != null ) { for ( java.util.Map.Entry<java.lang.String, java.lang.Object> paramEntry : params.entrySet () ) { fullUrl = addParameter ( fullUrl, paramEntry.getKey () , paramEntry.getValue () .toString () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return enableRedirect ( fullUrl ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private com.strobel.decompiler.ast.Expression updateCurrent ( com.strobel.decompiler.ast.Expression node ) { try { if ( ( node != null ) && ( node != ( Node.NULL ) ) ) { if ( node == scope ) { return null; } node = parentLookup.get ( node ) ; return node; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound nbtTagCompound ) { try { if ( nbtTagCompound.hasKey ( Names.NBT.SOURCES ) ) { net.minecraft.nbt.NBTTagList list = nbtTagCompound.getTagList ( Names.NBT.SOURCES, Constants.NBT.TAG_INT_ARRAY ) ; for ( int i = 0; i < ( list.tagCount () ) ; i++ ) { sources.add ( de.keridos.floodlights.util.GeneralUtil.getPosFromIntArray ( list.getIntArrayAt ( i ) ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.arnastofnun.idordabanki.Globals g = ( ( com.arnastofnun.idordabanki.Globals ) ( this.getActivity () .getApplication () ) ) ; if ( ( g == null ) || ( ( g.getGlossaryState () ) == null ) ) { } else { resumeGlossaryState ( g ) ; } } 
public static void onSaveComplete () { wdl.WDL.minecraft.getSaveLoader () .flushCache () ; wdl.WDL.saveHandler.flush () ; wdl.WDL.worldClient = null; wdl.WDL.worldLoadingDeferred = false; if ( wdl.WDL.downloading ) { wdl.WDLMessages.chatMessageTranslated ( WDLMessageTypes.INFO, "wdl.messages.generalInfo.saveComplete.startingAgain" ) ; wdl.WDL.loadWorld () ; return; } try { wdl.WDLMessages.chatMessageTranslated ( WDLMessageTypes.INFO, "wdl.messages.generalInfo.saveComplete.done" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static float[] toEffectiveTableColumnWidth ( float[] tableColumnWidth ) { float[] result = new float[tableColumnWidth.length]; try { for ( int i = 0; i < ( result.length ) ; ++i ) { result[i] = ( tableColumnWidth[i] ) + ( com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils.getEps () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public java.lang.String onPlaceholderRequest ( org.bukkit.entity.Player pPlayer, java.lang.String pIdentifier ) { if ( pPlayer == null ) return ""; try { switch ( pIdentifier ) { case "clantag": return clanTagProvider.getClanTag ( pPlayer.getName () ) ; case "clantag_custom_design": java.lang.String clanTag = clanTagProvider.getClanTag ( pPlayer.getName () ) ; if ( ! ( clanTag.isEmpty () ) ) return CLAN_MATCHER.replaceFirst ( clanTag ) ; return clanTag; default: return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeIfDeadStone ( goGame.Index i ) { java.util.Set<goGame.Index> checkedStones = new java.util.HashSet<> () ; try { if ( isDead ( i, checkedStones ) ) { checkedStones.add ( i ) ; if ( ! ( checkedStones.isEmpty () ) ) { deadStone = true; } for ( goGame.Index deadStones : checkedStones ) { stones.put ( deadStones, goGame.Board.Status.NONE ) ; GUI.removeStone ( deadStones.getY () , deadStones.getX () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public models.Account getByEmailAndPassword ( models.Account account ) { models.Account acc = ( ( models.Account ) ( getBaseCriteria () .add ( org.hibernate.criterion.Restrictions.eq ( "email", account.getEmail () ) ) .uniqueResult () ) ) ; try { if ( ( acc != null ) && ( repositories.BCrypt.checkpw ( account.getPassword () , acc.getPassword () ) ) ) { return account; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private static void getEmailRecursive ( java.io.File emailFile, java.util.List<java.io.File> emailFiles ) { try { if ( ! ( emailFile.isDirectory () ) ) { if ( ! ( emailFile.isHidden () ) ) { emailFiles.add ( emailFile ) ; } } else { for ( java.io.File subFile : emailFile.listFiles () ) { com.expee.ml.ExtractEmails.getEmailRecursive ( subFile, emailFiles ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.String result ) { try { switch ( status ) { case userRecoverableError: activity.startActivityForResult ( userException.getIntent () , BaseActivity.REQUEST_PERMISSION ) ; return; case requestFailed: reactToError () ; break; case okay: break; default: throw new java.lang.UnsupportedOperationException ( "Not implemented this case" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void clearNotification () { android.content.Intent intent = new android.content.Intent ( com.project.nghicv.readingbook.RBApp.getInstance () , com.project.nghicv.readingbook.receiver.NotificationPublisher.class ) ; android.app.PendingIntent sender = android.app.PendingIntent.getBroadcast ( com.project.nghicv.readingbook.RBApp.getInstance () , 0, intent, PendingIntent.FLAG_CANCEL_CURRENT ) ; android.app.AlarmManager alarmManager = ( ( android.app.AlarmManager ) ( com.project.nghicv.readingbook.RBApp.getInstance () .getSystemService ( android.content.Context.ALARM_SERVICE ) ) ) ; try { alarmManager.cancel ( sender ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void marcarAsistencia ( android.view.View v ) { try { progressBar.setVisibility ( View.VISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.mCommandService = DeviceListActivity.mCommandService; arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.mCommandService.write ( java.lang.String.valueOf ( usuario.getCi () ) ) ; accionMarcar = true; android.content.Intent intent = new android.content.Intent ( this, arqrifa.org.arquitecturarifamobile.layout.SplashAsistenciaActivity.class ) ; startActivity ( intent ) ; new arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.ReunionActualTask ( this ) .execute ( usuario.getGeneracion () ) ; } 
public void timedActions () { if ( ( timer.getTick () ) > 0 ) { timer.tick () ; currentTick = timer.getTick () ; java.lang.System.out.println ( currentTick ) ; } if ( ( currentTick ) == 5 ) { java.lang.System.out.println ( "Resetting..." ) ; relay.set ( Value.kOff ) ; barrelMotor.set ( 0.25 ) ; } try { if ( ( currentTick ) == 53 ) { barrelMotor.set ( 0 ) ; timer.reset () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void sendBtnActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.String user = userName.getText () ; java.lang.String pass1 = new java.lang.String ( password1.getPassword () ) ; java.lang.String pass2 = new java.lang.String ( password2.getPassword () ) ; boolean success = validateData ( user, pass1, pass2 ) ; try { if ( !success ) { success = validateData ( user, pass1, pass2 ) ; } else { java.lang.String newAcctData = ( user + " " ) + pass1; connectNewUser ( newAcctData ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String authenticate ( java.lang.String input, java.util.List<pekl.gasqueue.com.gasqueue.model.Authenticator> authenticatorList ) { clientType = "empty"; try { for ( pekl.gasqueue.com.gasqueue.model.Authenticator authPassword : authenticatorList ) { if ( input.equals ( authPassword.getBarPassword () ) ) { clientType = "bar"; break; } else if ( input.equals ( authPassword.getCustomerPassword () ) ) { clientType = "customer"; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return clientType; } 
@ java.lang.Override protected void onImageResult ( java.lang.String mediaType, android.net.Uri imageUri, java.lang.String imagePath ) { try { simpleDraweeView.setImageURI ( imageUri ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.mediaType = mediaType; this.imagePath = imagePath; this.imageUri = imageUri; org.gem.indo.dooit.helpers.crashlytics.CrashlyticsHelper.log ( this.getClass () .getSimpleName () , "onImageResult", "a successful image result ( onboarding ) " ) ; } 
@ java.lang.Override public martell.com.vice.ArticleAdapter.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent, int viewType ) { context = parent.getContext () ; android.view.LayoutInflater inflater = android.view.LayoutInflater.from ( context ) ; try { config = new com.nostra13.universalimageloader.core.ImageLoaderConfiguration.Builder ( parent.getContext () ) .build () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.view.View articleView = inflater.inflate ( R.layout.recycler_item, parent, false ) ; martell.com.vice.ArticleAdapter.ViewHolder viewHolder = new martell.com.vice.ArticleAdapter.ViewHolder ( articleView ) ; android.util.Log.d ( martell.com.vice.ArticleAdapter.TAG, "onCreateViewHolder: " ) ; return viewHolder; } 
private <TGeo extends de.k3b.geo.api.GeoPointDto> TGeo getYandexUri ( java.lang.String uri, TGeo parseResult ) { int dataStart = contentIndexBehind ( uri, "ll=" ) ; java.lang.String[] parts = getParts ( uri, dataStart, "[,?&]", 2 ) ; try { if ( parts != null ) { de.k3b.geo.io.GeoUri.setLatLonZoom ( parseResult, parts[1], parts[0], null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return uriParamParse ( uri, parseResult ) ; } 
@ java.lang.Override public void onSuccess ( int i, cz.msebera.android.httpclient.Header[] headers, byte[] reponseBody ) { try { userS.setAvatar ( android.graphics.BitmapFactory.decodeByteArray ( reponseBody, 0, reponseBody.length ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( is_finish[0] ) == ( ( userSearch.size () ) / 3 ) ) { completeTextView.setAdapter ( new com.example.thanhvu.adsfacebook.model.UserSearchAdaper ( getContext () , R.id.list_view_status, userSearch ) ) ; completeTextView.showDropDown () ; } ( is_finish[0] ) ++; } 
public void loginGoogle ( android.view.View view ) { showActivityIndicator () ; try { if ( ! ( com.isawabird.Utils.isNetworkAvailable ( getApplicationContext () ) ) ) { android.widget.Toast.makeText ( getApplicationContext () , "Network not available", Toast.LENGTH_SHORT ) .show () ; hideActivityIndicator () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( passcodeEntered.length () ) == 4 ) resetEntered () ; try { passcodeEntered += e.getActionCommand () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setEntered ( passcodeEntered ) ; if ( ( temporal ) != null ) { temporal.repaint () ; } } 
@ java.lang.Override public com.iouseph.model.User userParse ( org.json.JSONObject json ) { com.iouseph.model.User user = null; try { if ( json != null ) { user = new com.iouseph.model.User () ; user.setId ( json.getString ( "id" ) ) ; user.setPassword ( json.getString ( "password" ) ) ; user.setUsername ( json.getString ( "username" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return user; } 
private void endTable () throws java.io.IOException { try { if ( drawLines ) { drawLine ( "Row Bottom Border ", this.margin, this.yStart, ( ( ( this.margin ) + ( width ) ) + ( be.quodlibet.boxable.Table.xSpacing ) ) , this.yStart ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.tableContentStream.close () ; } 
public ontario.accounts.Account removeAccount ( java.lang.String numAccTemp ) { try { if ( numAccTemp == null ) { return null; } else { boolean temp; ontario.accounts.Account temp2; for ( int i = 0; i < ( acc.size () ) ; i++ ) { temp = acc.get ( i ) .getAccountNumber () .equals ( numAccTemp ) ; if ( temp ) { temp2 = acc.get ( i ) ; acc.remove ( i ) ; return temp2; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void createIngredient ( java.lang.String name ) throws java.sql.SQLException { connection = myDatabase.getDatabaseConn () ; java.sql.PreparedStatement statement = connection.prepareStatement ( "INSERT INTO ingredient ( name ) VALUES ( ? ) " ) ; statement.setString ( 1, name ) ; this.name = name; statement.executeUpdate () ; try { connection.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } getIngredientByName ( name ) ; } 
@ org.junit.Test public void getNoMachines () throws java.rmi.RemoteException { com.elastisys.scale.cloudpool.vsphere.client.impl.ManagedEntity[] vms = null; doReturn ( vms ) .when ( com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.mockInventoryNavigator ) .searchManagedEntities ( anyString () ) ; try { com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereClient.configure ( com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereApiSettings, com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereProvisioningTemplate ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<com.elastisys.scale.cloudpool.vsphere.client.impl.VirtualMachine> virtualMachines = com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereClient.getVirtualMachines ( com.google.common.collect.Lists.newArrayList () ) ; assertEquals ( virtualMachines.size () , 0 ) ; } 
private org.medipi.medication.Schedule getExistingSchedule ( java.time.LocalDate date, org.medipi.medication.Medication medication, java.lang.String patientUuid ) { java.util.List<org.medipi.medication.Schedule> existing_schedules = scheduleDAOimpl.findByMedicationAndPatient ( medication, patientUuid ) ; try { for ( org.medipi.medication.Schedule schedule : existing_schedules ) { if ( ( ( schedule.getAssignedEndDate () ) == null ) || ( schedule.getAssignedEndDate () .toLocalDate () .isAfter ( date ) ) ) { return schedule; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void close () throws java.sql.SQLException { try { if ( ( connection ) != null ) { if ( com.intrack.transaction.jdbc.JdbcTransaction.log.isDebugEnabled () ) { com.intrack.transaction.jdbc.JdbcTransaction.log.debug ( ( ( "Closing JDBC Connection [" + ( connection ) ) + "]" ) ) ; } if ( ( connectionPool ) != null ) { connectionPool.release ( connection ) ; } else { connection.close () ; } connection = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void removeFromGrid () { markForRegen () ; for ( net.minecraftforge.common.util.ForgeDirection d : net.minecraftforge.common.util.ForgeDirection.VALID_DIRECTIONS ) _network.removeNode ( new cofh.lib.util.position.BlockPosition ( xCoord, yCoord, zCoord, d ) .step ( d ) , true ) ; try { _network.removeConduit ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } _network = null; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/filterExercise", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String filterExercise ( org.springframework.ui.Model model, java.lang.String title, java.lang.String label ) { try { if ( ( title.equals ( "0" ) ) || ( title.equals ( "1" ) ) ) { model.addAttribute ( "exercises", em.filterExercise ( label, label, title, label, true ) ) ; } else { model.addAttribute ( "exercises", em.filterExercise ( label, label, label, title, false ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return "listExercises"; } 
@ java.lang.Override public void elevate ( com.sshtools.forker.client.ForkerBuilder builder, java.lang.Process process, com.sshtools.forker.common.Command command ) { try { builder.command () .add ( 0, "sudo" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } builder.command () .add ( 1, "-A" ) ; builder.environment () .put ( "SUDO_ASKPASS", tempScript.getAbsolutePath () ) ; } 
static boolean cypher ( com.intellij.lang.PsiBuilder b, int l ) { try { if ( ! ( recursion_guard_ ( b, l, "cypher" ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser.StatementItem ( b, ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b, "cypher", c ) ) ) break; c = current_position_ ( b ) ; } return true; } 
private void init () { display = new com.codeclan.display.Display ( title, width, height ) ; try { display.getJFrame () .addKeyListener ( keyManager ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.codeclan.gfx.Assets.init () ; handler = new com.codeclan.Handler ( this ) ; gameCamera = new com.codeclan.gfx.GameCamera ( handler, 100, 200 ) ; gameStates = new com.codeclan.state.GameState ( handler ) ; menuState = new com.codeclan.state.MenuState ( handler ) ; settingsState = new com.codeclan.state.SettingsState ( handler ) ; com.codeclan.state.State.setState ( gameStates ) ; } 
@ java.lang.Override public boolean add ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator<com.ivstuart.tmud.person.carried.SomeMoney> moneyItr = list.listIterator () ; while ( moneyItr.hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr.next () ) ) ; if ( aMoney.isSameType ( money ) ) { aMoney.add ( money ) ; if ( aMoney.isEmpty () ) { moneyItr.remove () ; } return true; } } try { list.add ( new com.ivstuart.tmud.person.carried.Money ( money ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void render ( java.awt.Graphics g ) { try { g.drawImage ( com.townrpg.core.tile.Tiles.getSprites () .crop ( 1, 1, 1, 1 ) , ( ( int ) ( x ) ) , ( ( int ) ( y ) ) , null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.Set<java.lang.String> getArtifactNamesFromProject ( final java.util.List<com.amazonaws.codepipeline.jenkinsplugin.OutputArtifact> outputArtifacts ) { java.util.Set<java.lang.String> artifactNames = new java.util.HashSet<> () ; try { for ( final com.amazonaws.codepipeline.jenkinsplugin.OutputArtifact outputArtifact : outputArtifacts ) { if ( ( ( outputArtifact.getArtifactName () ) != null ) && ( ! ( outputArtifact.getArtifactName () .isEmpty () ) ) ) { artifactNames.add ( outputArtifact.getArtifactName () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return artifactNames; } 
public void put ( java.lang.String column, java.lang.Object value ) { try { if ( value == null ) { currentState.put ( column, new org.hibernate.ogm.datastore.spi.TupleOperation ( column, null, PUT_NULL ) ) ; } else { currentState.put ( column, new org.hibernate.ogm.datastore.spi.TupleOperation ( column, value, PUT ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.sedmelluq.discord.lavaplayer.track.AudioTrack getNext () { if ( ( _playingSong ) == null ) { replacePlayingSong () ; _playingSong = _activePlaylist.get ( 0 ) ; return _playingSong; } try { replacePlayingSong () ; } catch ( Exception ex ) { ex.printStackTrace () ; } _playingSong = _activePlaylist.get ( ( ( _activePlaylist.indexOf ( _playingSong ) ) + 1 ) ) ; return _playingSong; } 
private java.util.Set<java.lang.String> getSystemPropertiesFromTask ( io.cloudslang.lang.compiler.modeller.model.Task task ) { java.util.Set<java.lang.String> result = new java.util.HashSet<> () ; java.util.List<io.cloudslang.lang.compiler.modeller.transformers.Transformer> relevantTransformers = new java.util.ArrayList<> () ; try { relevantTransformers.add ( publishTransformer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } relevantTransformers.add ( aggregateTransformer ) ; result.addAll ( getSystemPropertiesFromInOutParam ( task.getArguments () ) ) ; result.addAll ( getSystemPropertiesFromPostTaskActionData ( task.getPostTaskActionData () , relevantTransformers, task.getName () ) ) ; return result; } 
@ cucumber.api.java.en.Given ( value = "^I am viewing the visual verification activity$" ) public void iHaveAVisualVerificationActivity () { android.content.Intent intent = new android.content.Intent ( getActivity () , com.nervousfish.nervousfish.activities.VisualVerificationActivity.class ) ; intent.putExtra ( ConstantKeywords.SERVICE_LOCATOR, getCurrentActivity () .getIntent () .getSerializableExtra ( ConstantKeywords.SERVICE_LOCATOR ) ) ; try { getActivity () .startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void logOut ( java.lang.String username, java.lang.String pwd ) { final com.carlocation.comm.messaging.AuthMessage authMsg = new com.carlocation.comm.messaging.AuthMessage ( username, pwd, AuthMessage.AuthMsgType.AUTH_LOGOUT_MSG ) ; try { mNativeService.sendMessage ( authMsg, new com.carlocation.comm.ResponseListener () { @java.lang.Override public void onResponse ( com.carlocation.comm.messaging.Notification noti ) { authMsg.onResponseHandler ( noti ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.ArrayList<java.lang.Double> userInputToValues ( java.util.ArrayList<android.widget.TextView> input ) { java.util.ArrayList<java.lang.Double> values = new java.util.ArrayList<java.lang.Double> () ; try { for ( android.widget.TextView t : input ) { if ( ( t.getText () ) != null ) { values.add ( java.lang.Double.parseDouble ( t.getText () .toString () ) ) ; } else { return null; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return values; } 
private com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord getContractDataRecord ( java.lang.String assetPublicKey, java.lang.String name, java.lang.String value ) throws com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.DatabaseOperationException, com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.MissingAssetDataException { com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTable databaseTable = getDatabaseTable ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_TABLE_NAME ) ; com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord record = databaseTable.getEmptyRecord () ; record.setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_ASSET_PUBLIC_KEY_COLUMN, assetPublicKey ) ; record.setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_NAME_COLUMN, name ) ; try { record.setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_VALUE_COLUMN, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return record; } 
@ java.lang.Override public java.util.Map<java.lang.String, java.lang.Object> merge ( java.util.Map<java.lang.String, java.lang.Object> mergeInto, java.util.Map<java.lang.String, java.lang.Object> mergeFrom ) { java.util.Map<java.lang.String, java.lang.Object> result = new java.util.HashMap<> () ; if ( mergeInto != null ) { result.putAll ( mergeInto ) ; } try { if ( mergeFrom != null ) { result.putAll ( mergeFrom ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
private void showSavedProfilePicture () { byte[] array = dbHandler.retrieveByteArrayFromDb () ; try { if ( array == null ) { profilePic.setImageResource ( defaultPic ) ; } else { android.graphics.Bitmap bitmap = convertByteArrayToBitmap ( array ) ; if ( bitmap == null ) { profilePic.setImageResource ( defaultPic ) ; } else { profilePic.setImageBitmap ( bitmap ) ; bitmap.recycle () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void update ( int x, int y, double r, java.util.ArrayList<zombienado_v1.server.serverUnits.ServerZombie> zombies, java.util.ArrayList<java.awt.Point> walls ) { if ( ( health ) <= 0 ) { isDead = true; } int xOld = this.x; int yOld = this.y; this.x += x; this.y += y; this.r = r; checkWallsCollisions ( xOld, yOld, walls ) ; try { checkDamageTaking ( zombies ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean outsideBoard ( int boardRows ) { try { for ( tetris.Point loc : tetris.Grids.allPointsOf ( this ) ) { if ( ( ( piece.cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) .row ) >= boardRows ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { io.fabric.sdk.android.Fabric.with ( this, new com.crashlytics.android.Crashlytics () ) ; try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } handler = new android.os.Handler () ; runnable = new java.lang.Runnable () { public void run () { android.content.Intent intent = new android.content.Intent ( com.cmmakerclub.iot.cmmciotswitch.activity.SplashActivity.this, com.cmmakerclub.iot.cmmciotswitch.activity.MainActivity.class ) ; startActivity ( intent ) ; finish () ; } }; } 
protected void addNearbyDevice ( android.bluetooth.BluetoothDevice device ) { try { if ( ! ( hasPeer ( device.getName () ) ) ) { android.util.Log.d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG, ( "added new device " + ( device.getName () ) ) ) ; nearbyDevices.add ( device ) ; registerRemoteDevice ( device ) ; } else { android.util.Log.d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG, ( ( "device " + ( device.getName () ) ) + " already present, won't add" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void stateChanged ( javax.swing.event.ChangeEvent e ) { int alphaValue = sliderAlpha.getValue () ; java.lang.String hexColor = textFieldHexColor.getText () ; try { if ( ( hexColor.length () ) > 6 ) { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + ( hexColor.substring ( ( ( hexColor.length () ) - 6 ) ) ) ; } else { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + hexColor; } } catch ( Exception ex ) { ex.printStackTrace () ; } invalidateUI ( alphaValue, hexColor, true ) ; } 
public void addNode ( controllers.Node node ) { int floor = node.getFloor () ; allNodes.get ( ( floor - 1 ) ) .put ( node.getKey () , node ) ; try { if ( ! ( allNodes.get ( ( floor - 1 ) ) .containsKey ( node.getKey () ) ) ) { java.lang.System.out.println ( "COLLECTIONOFNODES: addNode () : added node but then couldn't find in hashmap" ) ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void showInformationControl ( org.eclipse.swt.graphics.Rectangle subjectArea ) { try { super.showInformationControl ( subjectArea ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.eclipse.jface.internal.text.InternalAccessor accessor = getInternalAccessor () ; org.eclipse.jface.text.IInformationControl iControl = accessor.getCurrentInformationControl () ; if ( ( iControl != null ) && ( ( fInformationControlCloser ) != null ) ) { } } 
private java.util.List<java.lang.Integer> getFPtypeCorrespondence ( cz.fidentis.comparison.procrustes.ProcrustesAnalysis pa ) { java.util.List<java.lang.Integer> correspondence = new java.util.ArrayList<> () ; try { for ( java.lang.Integer ft : config.keySet () ) { if ( ( ! ( config.get ( ft ) .isActive () ) ) || ( ! ( pa.isPointActive ( ft ) ) ) ) continue; correspondence.add ( ft ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return correspondence; } 
public static java.lang.String escape ( java.lang.String html, boolean encode ) { try { if ( !encode ) { html = html.replaceAll ( "& ( ?!#?\\w+; ) ", "&amp;" ) ; } else { html = html.replace ( "&", "&amp;" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return html.replace ( "<", "&lt;" ) .replace ( ">", "&gt;" ) .replace ( "\"", "&quot;" ) .replace ( "'", "&#39;" ) ; } 
protected android.os.Bundle createTransportOptionsBundle ( android.util.Pair[] sharedViews ) { try { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( sharedViews != null ) { java.util.ArrayList<android.util.Pair> sharedViewList = extendsSharedViewsForTransport ( new java.util.ArrayList ( java.util.Arrays.asList ( sharedViews ) ) ) ; sharedViews = new android.util.Pair[sharedViewList.size () ]; sharedViewList.toArray ( sharedViews ) ; return android.app.ActivityOptions.makeSceneTransitionAnimation ( this, sharedViews ) .toBundle () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private void _undoRemoveInconsistentValues ( java.util.Map<solver.csp.Variable, java.util.List<java.lang.Integer>> map ) { if ( map == null ) return; try { for ( java.util.Map.Entry<solver.csp.Variable, java.util.List<java.lang.Integer>> neighbor : map.entrySet () ) { for ( java.lang.Integer value : neighbor.getValue () ) { neighbor.getKey () .addLegalValue ( value ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { java.lang.String s; if ( ( args.length ) > 0 ) { s = args[0]; } else { s = "etc/server.properties"; } org.alicebot.server.net.AliceServer aliceserver = new org.alicebot.server.net.AliceServer ( s ) ; java.lang.Runtime.getRuntime () .addShutdownHook ( new java.lang.Thread ( "Shutdown Thread" ) { public void run () { org.alicebot.server.net.AliceServer.shutdown () ; } } ) ; try { aliceserver.startup ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGenerateName_withThreeToTwentyLength () { try { for ( int i = 3; i < 20; i++ ) { final java.lang.String result = grammarNameGenerator.generateName ( i ) ; org.junit.Assert.assertTrue ( ( ( result.length () ) <= i ) ) ; org.junit.Assert.assertTrue ( ( ( result.length () ) > 0 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeStatistic ( com.frdfsnlght.inquisitor.Statistic statistic ) { synchronized ( statistics ) { if ( ! ( statistics.containsKey ( statistic.getName () ) ) ) { return; } statistics.remove ( statistic.getName () ) ; } try { for ( com.frdfsnlght.inquisitor.Statistics s : stats.values () ) { s.removeStatistic ( statistic ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent e ) { hu.gehorvath.lampsv.core.Preset selectedPres = jlUsedPresets.getSelectedValue () ; int currentIndex = usedListModel.indexOf ( selectedPres ) ; try { if ( currentIndex < ( ( usedListModel.size () ) - 1 ) ) { usedListModel.removeElement ( selectedPres ) ; usedListModel.add ( ( currentIndex + 1 ) , selectedPres ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( ( ( selection ) == 1 ) || ( ! ( description.equals ( "" ) ) ) ) { uploadImage () ; } else android.widget.Toast.makeText ( getApplicationContext () , "Please fill the form", Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String mapPath ( java.lang.String path ) { if ( ( mapList ) == null ) { return path; } try { for ( int i = 0; i < ( mapList.length ) ; i++ ) { if ( ( mapList[i][0].equals ( path ) ) || ( ( ( mapList[i][0] ) + "/" ) .equals ( path ) ) ) { return mapList[i][1]; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return path; } 
@ java.lang.Override public boolean isInGroup ( java.lang.String world, java.lang.String permName, org.bukkit.entity.Player player ) { if ( plugin.config.isDefaultrankallworlds () ) { world = null; } try { if ( ( plugin.config.permissionpluginhasworldsupport () ) == false ) { world = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return net.slipcor.classranks.handlers.HandleVaultPerms.permission.playerInGroup ( world, player.getName () , permName ) ; } 
@ org.junit.Test public void testAsUTCTimeInTimeZone () { slash.common.type.CompactCalendar calendar = slash.common.type.CompactCalendar.fromMillis ( 1000000 ) ; slash.common.type.CompactCalendar inTimeZone = calendar.asUTCTimeInTimeZone ( java.util.TimeZone.getTimeZone ( "GMT+2" ) ) ; try { assertEquals ( calendar.getCalendar () .getTimeInMillis () , 1000000 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( inTimeZone.getCalendar () .getTimeInMillis () , ( 1000000 - ( ( ( 2 * 60 ) * 60 ) * 1000 ) ) ) ; assertEquals ( "UTC", inTimeZone.getTimeZoneId () ) ; } 
public void writeData ( java.lang.String data ) { android.content.SharedPreferences sharedPref = getActivity () .getPreferences ( Context.MODE_PRIVATE ) ; java.lang.String contents = sharedPref.getString ( day, "" ) ; if ( ! ( contents.equals ( "" ) ) ) { contents += "\n"; } android.content.SharedPreferences.Editor editor = sharedPref.edit () ; editor.putString ( day, ( contents + ( data.substring ( 0, ( ( data.length () ) - 13 ) ) ) ) ) ; try { editor.commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<com.pilotproject.entity.User> findUsers ( java.lang.String username, java.lang.String email, java.util.Date fromDate, java.util.Date toDate ) { if ( com.pilotproject.utils.PilotUtils.isEmpty ( fromDate ) ) { fromDate = null; } try { if ( com.pilotproject.utils.PilotUtils.isEmpty ( toDate ) ) { toDate = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String userLogged = com.pilotproject.utils.PilotUtils.getUserNameLogeed () ; return this.userRepository.findUsersAndUsernameNot ( userLogged, username, email, fromDate, toDate ) ; } 
public void setTable ( javafx.scene.control.TableView<com.eiko.back.table.CellValue> content ) { this.table = content; this.setContent ( content ) ; if ( ( table ) == null ) return; int l = ( ( table.getItems () .size () ) + 1 ) * 40; this.setMinHeight ( l ) ; this.setMaxHeight ( l ) ; try { this.setPrefHeight ( l ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.context.annotation.Bean public org.springframework.cache.guava.GuavaCacheManager getCacheManager () { final org.springframework.cache.guava.GuavaCacheManager gcm = new org.springframework.cache.guava.GuavaCacheManager () ; final com.google.common.cache.CacheBuilder<java.lang.Object, java.lang.Object> builder = com.google.common.cache.CacheBuilder.newBuilder () ; gcm.setAllowNullValues ( false ) ; builder.concurrencyLevel ( 16 ) ; builder.expireAfterAccess ( 15, java.util.concurrent.TimeUnit.MINUTES ) ; builder.initialCapacity ( 256 ) ; builder.maximumWeight ( getMaxMemory () ) ; builder.weigher ( new fi.phz.cib.WebApplicationConfiguration.ByteSizeWeight () ) ; try { gcm.setCacheBuilder ( builder ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return gcm; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, @android.support.annotation.NonNull java.lang.String[] permissions, @android.support.annotation.NonNull int[] grantResults ) { try { switch ( requestCode ) { case me.esca.fragments.CookFragment.REQUEST_EXTERNAL_STORAGE: { if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults[0] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.content.Intent photoPickerIntent = new android.content.Intent ( android.content.Intent.ACTION_PICK ) ; photoPickerIntent.setType ( "image/*" ) ; startActivityForResult ( photoPickerIntent, RESULT_LOAD_IMG ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void reset () { app.park.com.vr.VrVideoActivity.isGameOver = false; android.util.Log.d ( app.park.com.vr.VrVideoActivity.TAG, "[TEST] ========== RESET ==============" ) ; mVrVideoView.seekTo ( 0 ) ; app.park.com.vr.VrVideoActivity.currTime = 0; android.util.Log.d ( app.park.com.vr.VrVideoActivity.TAG, ( "[TEST] current position = " + ( mVrVideoView.getCurrentPosition () ) ) ) ; try { resetScore () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { while ( proc.isAlive () ) { } java.lang.System.out.println ( "end" ) ; java.util.List<main.Tuple<?, ?>> recorded = sessionController.end () ; startFrame.setState ( java.awt.Frame.NORMAL ) ; isRecording = false; gui.StartScreen.RCDRFileSelect fileSelect = new gui.StartScreen.RCDRFileSelect ( this ) ; fileSelect.save ( recorded ) ; try { java.lang.System.out.println ( "ended" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return; } 
@ java.lang.Override public void addSettingsStateListener ( @org.jetbrains.annotations.NotNull com.intellij.platform.WebProjectGenerator.SettingsStateListener stateListener ) { final javax.swing.text.JTextComponent editorComponent = ( ( javax.swing.text.JTextComponent ) ( sdkPathComboWithBrowse.getComboBox () .getEditor () .getEditorComponent () ) ) ; editorComponent.getDocument () .addDocumentListener ( new com.intellij.ui.DocumentAdapter () { protected void textChanged ( javax.swing.event.DocumentEvent e ) { stateListener.stateChanged ( ( ( validate () ) == null ) ) ; } } ) ; try { if ( ( validate () ) != null ) { stateListener.stateChanged ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setCapacity ( edmondskarp.Gui.Arrow arrow, int capacity ) { arrow.getEdge () .setCapacity ( capacity ) ; arrow.getEdge () .getInverse () .setCapacity ( capacity ) ; try { arrow.getEdge () .getInverse () .setFlow ( capacity ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } saveState () ; } 
private void locate () { mLocationOption = new com.amap.api.location.AMapLocationClientOption () ; mLocationOption.setLocationMode ( AMapLocationMode.Hight_Accuracy ) ; mLocationOption.setNeedAddress ( true ) ; try { mLocationOption.setOnceLocation ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mLocationOption.setWifiActiveScan ( true ) ; mLocationOption.setMockEnable ( false ) ; mLocationClient.setLocationOption ( mLocationOption ) ; mLocationClient.startLocation () ; } 
@ com.google.common.eventbus.Subscribe public void attemptToMatchSubmissionWithStudent ( edu.pdx.cs410J.grader.poa.POASubmissionSelected selected ) { for ( int i = 0; i < ( students.size () ) ; i++ ) { edu.pdx.cs410J.grader.Student student = students.get ( i ) ; if ( submitterMatchesStudent ( selected.getSubmission () , student ) ) { this.view.setSelectedStudentIndex ( ( i + 1 ) ) ; fireStudentSelectedEvent ( student ) ; return; } } try { this.view.setSelectedStudentIndex ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fireStudentSelectedEvent ( null ) ; } 
@ java.lang.Override public void removeRange ( int fromPosition, int itemCount ) { for ( int i = 0; i < itemCount; i++ ) if ( fromPosition < ( contentList.size () ) ) contentList.remove ( fromPosition ) ; indi.yume.tools.adapter_renderer.recycler.RendererAdapter.notifyItemRangeRemoved ( fromPosition, itemCount ) ; try { indi.yume.tools.adapter_renderer.recycler.RendererAdapter.notifyItemRangeChanged ( 0, getItemCount () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void invokeFCMService () { android.util.Log.d ( com.lognsys.kalrav.LoginActivity.TAG, "Rest invokeFCMService " ) ; if ( ( com.lognsys.kalrav.util.KalravApplication.getInstance () .getPrefs () .getDevice_token () ) == null ) { android.content.Intent i = new android.content.Intent ( this, com.lognsys.kalrav.FCM.FCMInstanceIdService.class ) ; startService ( i ) ; } try { android.util.Log.d ( com.lognsys.kalrav.LoginActivity.TAG, ( "Rest invokeFCMService KalravApplication.getInstance () .getPrefs () .getDevice_token () " + ( com.lognsys.kalrav.util.KalravApplication.getInstance () .getPrefs () .getDevice_token () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addPiece ( org.casestudy.target.chess.pieces.Piece piece ) { java.util.List<org.casestudy.target.chess.pieces.Piece> typePieces = this.pieces.get ( piece.getPieceType () ) ; if ( typePieces == null ) { typePieces = new java.util.ArrayList<org.casestudy.target.chess.pieces.Piece> () ; this.pieces.put ( piece.getPieceType () , typePieces ) ; } try { typePieces.add ( piece ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onBackStackChanged () { try { if ( ! ( approvalWarned ) ) { android.widget.RelativeLayout container = ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.approvalLay ) ) ) ; android.widget.RelativeLayout.LayoutParams parameters = new android.widget.RelativeLayout.LayoutParams ( RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.WRAP_CONTENT ) ; android.widget.TextView warning = new android.widget.TextView ( container.getContext () ) ; warning.setText ( "You cannot disapprove after approving!" ) ; parameters.addRule ( RelativeLayout.BELOW, R.id.approvalText ) ; container.addView ( warning, parameters ) ; approvalWarned = true; } else { approvalWarned = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels.getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; try { while ( nextReady != null ) { process ( new backtype.storm.tuple.TupleImpl ( context, ( ( java.util.List<java.lang.Object> ) ( nextReady.getO () ) ) , input.getSourceTask () , input.getSourceStreamId () ) ) ; nextReady = sharedChannels.getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot, java.lang.String s ) { java.lang.System.out.println ( ( "key of order firebase ----> " + key ) ) ; java.lang.String key1 = dataSnapshot.getRef () .getKey () ; try { java.lang.System.out.println ( ( "key of order changed in database " + key1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( key.equals ( key1 ) ) { progressWheel.setVisibility ( View.INVISIBLE ) ; textView.setText ( "Your order is ready !!! " ) ; } } 
private java.lang.String askForFirstPassword () { java.lang.String ret = null; java.lang.String s1 = askForPassword ( "Insert a password for secure archive. You MUST remember it unlock the archive!" ) ; try { if ( s1 != null ) { java.lang.String s2 = askForPassword ( "Please re-type the previous password" ) ; if ( s2 != null ) { if ( s1.equals ( s2 ) ) { ret = s1; } else { javax.swing.JOptionPane.showMessageDialog ( this, "Two password doesn't match!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE ) ; ret = askForFirstPassword () ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ret; } 
public java.util.List<java.lang.String> getText () { java.util.List<java.lang.String> list; try { if ( pl.betoncraft.betonquest.config.Config.getString ( "config.journal.reversed_order" ) .equalsIgnoreCase ( "true" ) ) { list = com.google.common.collect.Lists.reverse ( texts ) ; } else { list = new java.util.ArrayList<> ( texts ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return list; } 
private void addChip ( java.lang.String communication ) { try { if ( ( mNachoTextView ) != null ) { mNachoTextView.append ( communication ) ; int start = ( mNachoTextView.getText () .length () ) - ( communication.length () ) ; int last = mNachoTextView.getText () .length () ; mNachoTextView.chipify ( start, last ) ; } else android.util.Log.e ( mx.com.quiin.contactpicker.ui.ContactPickerFragment.TAG, "mNachoTextView is null" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setUserName ( java.lang.String userName ) { if ( userName == null ) throw new java.lang.IllegalArgumentException ( "UserName must not be null." ) ; if ( ( userName.length () ) > 50 ) throw new java.lang.IllegalArgumentException ( "UserName is too long." ) ; try { if ( ( userName.length () ) < 3 ) throw new java.lang.IllegalArgumentException ( "UserName is too short." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.userName = userName; } 
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) return true; if ( obj == null ) return false; try { if ( ( getClass () ) != ( obj.getClass () ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } org.sqlproc.sample.simple.model.BillingDetails other = ( ( org.sqlproc.sample.simple.model.BillingDetails ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) return false; return true; } 
@ java.lang.Override public void setSelectedIndex ( final int index ) { programmaticTextChange = true; try { if ( index > ( -1 ) ) { getUiReference () .select ( index ) ; } else { getUiReference () .deselect ( getUiReference () .getSelectionIndex () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } programmaticTextChange = false; if ( ! ( getUiReference () .isFocusControl () ) ) { fireInputChanged ( getUiReference () .getText () , index ) ; } } 
public void generateDispText ( java.lang.CharSequence c ) { try { if ( ( ( ( currValue ) == null ) || ( ( currValue ) == "0" ) ) && ( c != "C" ) ) { currValue = ( ( java.lang.CharSequence ) ( c ) ) ; } else if ( c == "C" ) { currValue = "0"; } else { currValue = ( currValue.toString () ) + c; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { int counter = 0; try { while ( counter < ( this.num ) ) { java.lang.System.out.println ( ( ( ( "Get: " + ( java.lang.Thread.currentThread () .getName () ) ) + " From " ) + ( bucket.getToken () ) ) ) ; counter++; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public modelo.Jogada movimentaMonstro ( modelo.Monstro aMonstro, modelo.Posicao posicao ) { modelo.Posicao antiga = this.getPosicao ( aMonstro.getPosicao () .getLinha () , aMonstro.getPosicao () .getColuna () ) ; antiga.setOcupante ( null ) ; try { posicao.setOcupante ( aMonstro ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } aMonstro.setPosicao ( posicao ) ; return new modelo.Jogada ( posicao.getLinha () , posicao.getColuna () , TipoJogada._moverMonstro, aMonstro, null, null ) ; } 
private void makePay ( int vendorID, java.lang.String vendorSecretKey, java.lang.String accountID, java.lang.String amount ) { uz.agr.agrsdk.AGRBilling agr = new uz.agr.agrsdk.AGRBilling () ; try { if ( amount.equals ( "" ) ) { agr.preparePayment ( this, vendorID, vendorSecretKey, accountID ) ; } else { agr.preparePayment ( this, vendorID, vendorSecretKey, accountID, java.lang.Integer.parseInt ( amount ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void delLabel ( int label ) { try { for ( java.util.Map<java.util.List<org.projectfloodlight.openflow.protocol.instruction.OFInstruction>, java.lang.Integer> m : switchLabelMap.values () ) { synchronized ( m ) { for ( java.util.List<org.projectfloodlight.openflow.protocol.instruction.OFInstruction> list : m.keySet () ) { java.lang.Integer i = m.get ( list ) ; if ( ( i.intValue () ) == label ) { m.remove ( list ) ; break; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } net.floodlightcontroller.savi.forwarding.mpls.MPLSLabelManager.labelQueue.add ( label ) ; } 
@ org.junit.Test public void return_coins_inserted () { org.junit.Assert.assertEquals ( "INSERT COINS", vendingMachine.check_display () ) ; vendingMachine.insert_coin ( "Dime" ) ; org.junit.Assert.assertEquals ( "$0.10", vendingMachine.check_display () ) ; vendingMachine.return_coins () ; org.junit.Assert.assertEquals ( "INSERT COINS", vendingMachine.check_display () ) ; try { org.junit.Assert.assertEquals ( "$0.10", vendingMachine.check_coin_return () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void move ( int x ) { moving = true; moveLocation = x; try { if ( ( moveLocation ) < ( this.getx () ) ) { facingRight = false; left = true; right = false; } else if ( ( moveLocation ) > ( this.getx () ) ) { facingRight = true; left = false; right = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent resultIntent ) { super.onActivityResult ( requestCode, resultCode, resultIntent ) ; try { switch ( requestCode ) { case diy.uigeneric.sample.SampleListActivity.REQUEST_ADD: if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { loadData () ; listView.getAdapter () .notifyDataSetChanged () ; } break; case diy.uigeneric.sample.SampleListActivity.REQUEST_VIEW: if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { loadData () ; listView.getAdapter () .notifyDataSetChanged () ; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean equals ( java.lang.Object o ) { try { if ( o instanceof FoodItem ) { FoodItem i = ( ( FoodItem ) ( o ) ) ; return ( this.itemName.equals ( i.itemName ) ) && ( this.tagCode.equals ( i.tagCode ) ) ; } else if ( o instanceof char[] ) { return this.tagCode.equals ( ( ( char[] ) ( o ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { android.content.Intent intent = new android.content.Intent ( this, com.example.leo.projet.Activities.MovieActivity.class ) ; try { intent.putExtra ( "movie", ( ( java.io.Serializable ) ( aa.getItem ( position ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( intent ) ; } 
public void ignoreBlank () { if ( ! ( Settings.ignoreBlanks ) ) return; try { while ( ( ( application.VirtualCursor.getCurrentElement ( application.VirtualCursor.gridPane ) ) != null ) && ( ( ( ( javafx.scene.control.Label ) ( application.VirtualCursor.getCurrentElement ( application.VirtualCursor.gridPane ) ) ) .getText () .charAt ( 0 ) ) == ' ' ) ) { moveCursor () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initRotateView () { if ( ( mRotateView ) != null ) { return; } try { mRotateView = new android.widget.ImageView ( getContext () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mRotateView.setImageResource ( R.drawable.ic_rotate ) ; mRotateView.setBackgroundResource ( R.drawable.stretch_shape_background ) ; mRotateView.setOnTouchListener ( createRotateListener () ) ; final int rotateViewGravity = ( android.view.Gravity.RIGHT ) | ( android.view.Gravity.TOP ) ; final net.yazeed44.resizableviewlibrary.LayoutParams rotateViewLayoutParams = new net.yazeed44.resizableviewlibrary.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT, rotateViewGravity ) ; addView ( mRotateView, rotateViewLayoutParams ) ; } 
public static int[] barcodeToIntArray ( java.lang.String barcode ) { if ( barcode == null ) { return new int[0]; } java.lang.String[] barcodeArray = barcode.trim () .split ( " ( ?!^ ) " ) ; int[] barcodeToInt = new int[barcodeArray.length]; try { for ( int i = 0; i < ( barcodeArray.length ) ; i++ ) { barcodeToInt[i] = java.lang.Integer.parseInt ( barcodeArray[i] ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return barcodeToInt; } 
private void initPuzzleOrGetFromExtras () { android.os.Bundle bundle = getIntent () .getExtras () ; try { if ( ( bundle != null ) && ( ( bundle.get ( "Puzzle" ) ) != null ) ) { puzzle = new com.sudoku.puzzlesolver.Puzzle ( ( ( java.lang.Integer[][] ) ( bundle.get ( "Puzzle" ) ) ) ) ; } else { puzzle = new com.sudoku.puzzlesolver.Puzzle () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getFileSystem () { java.nio.file.FileSystem fileSystem = s3fsProvider.newFileSystem ( S3EndpointConstant.S3_GLOBAL_URI_TEST, com.google.common.collect.ImmutableMap.<java.lang.String, java.lang.Object>of () ) ; org.junit.Assert.assertNotNull ( fileSystem ) ; fileSystem = s3fsProvider.getFileSystem ( S3EndpointConstant.S3_GLOBAL_URI_TEST, com.google.common.collect.ImmutableMap.<java.lang.String, java.lang.Object>of () ) ; try { org.junit.Assert.assertNotNull ( fileSystem ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.nio.file.FileSystem other = s3fsProvider.getFileSystem ( S3EndpointConstant.S3_GLOBAL_URI_TEST ) ; org.junit.Assert.assertSame ( fileSystem, other ) ; } 
public engine.network.packet.Packet getContentPacket () { engine.network.packet.Packet out = engine.network.packet.Packet.getNewContentPacket ( Packet.MAX_PACKET_SIZE ) ; out.iterator.putNextShortUnsigned ( buff.getID () ) ; try { out.iterator.putNextInt ( getDurationLeft () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int mapSize = gndData.getMapSize () ; if ( mapSize == 0 ) { out.iterator.putNextShortUnsigned ( 0 ) ; } else { engine.network.packet.Packet gndContent = gndData.getContentPacket () ; out.iterator.putNextShortUnsigned ( gndContent.getSize () ) ; out.iterator.putNextContentPacket ( gndContent ) ; } out.iterator.trimPacket () ; return out; } 
public void done ( ca.winnipegtrails.winnipegtrails.UserEggLinks object, com.parse.ParseException e ) { try { if ( e != null ) { if ( WinnipegTrailsApplication.APPDEBUG ) { android.util.Log.d ( WinnipegTrailsApplication.APPTAG, "An error occurred while querying for user eggs", e ) ; } return; } } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent intent = new android.content.Intent ( this, ca.winnipegtrails.winnipegtrails.EggActivity.class ) ; intent.putExtra ( "id", egg.getObjectId () ) ; startActivity ( intent ) ; } 
private void addItemsToQueue () { try { for ( int i = 0; i < ( _numIterations ) ; i++ ) { java.lang.String message = ( ( "Producer # " + ( _id ) ) + " message # " ) + i; if ( ( i + 1 ) == ( _numIterations ) ) { _queue.AddToQueue ( message, _listener ) ; } else { _queue.AddToQueue ( message ) ; } nachos.threads.KThread.yield () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isCollidingRect ( pro.Sprite s ) { try { if ( isCollideable () ) { if ( ( ( ( ( getRight () ) > ( s.getLeft () ) ) && ( ( getLeft () ) < ( s.getRight () ) ) ) && ( ( getBottom () ) > ( s.getTop () ) ) ) && ( ( getTop () ) < ( s.getBottom () ) ) ) { java.lang.System.out.println ( true ) ; return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils.getTag ( aNode ) ; try { if ( tag.matches ( "n.*|xn.*|p.*|.*\\[ ( pre|post|rel ) .*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils.getLemma ( aNode ) ; if ( ( tag.matches ( "r.*" ) ) || ( lemma.equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD; if ( tag.matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE; warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP; } 
@ javax.annotation.PostConstruct public void initMap () { org.springframework.util.Assert.notEmpty ( channels ) ; for ( java.lang.String value : channels ) { java.lang.String[] v = value.split ( "-" ) ; channelMap.put ( v[0], java.lang.Integer.valueOf ( v[1] ) ) ; } try { subChannelMap.put ( com.city.beijing.config.properties.processConfig.ElementSubChannel.ANDROID_SUBCHANNEL, androidSubChanenl ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } subChannelMap.put ( com.city.beijing.config.properties.processConfig.ElementSubChannel.IOS_SUBCHANNEL, iosSubChannel ) ; subChannelMap.put ( com.city.beijing.config.properties.processConfig.ElementSubChannel.WECHAT_SUBCHANNEL, wechatSubChannel ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "sendMessage", produces = "application/json" ) public java.lang.String sendMessage ( @org.springframework.web.bind.annotation.RequestParam ( value = "to" ) java.lang.String to, @org.springframework.web.bind.annotation.RequestParam ( value = "from" ) java.lang.String from, @org.springframework.web.bind.annotation.RequestParam ( value = "message" ) java.lang.String msg ) { com.jkchat.models.ChatMessage cm = new com.jkchat.models.ChatMessage () ; cm.setFrom ( from.trim () .toLowerCase () ) ; try { cm.setMessage ( msg ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } userService.putMessage ( to.toLowerCase () , cm ) ; return "success"; } 
public int advance ( int target ) throws java.io.IOException { int doc = scorer.advance ( target ) ; if ( doc == ( NO_MORE_DOCS ) ) { return doc; } try { currentScore = innerScore () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( currentScore ) < ( minScore ) ) { return nextDoc () ; } return doc; } 
private void writeFile ( java.io.BufferedWriter fw, java.util.List<java.lang.String> corpus ) throws java.io.IOException { for ( java.lang.String str : corpus ) { fw.write ( ( str + "\n" ) ) ; } try { fw.write ( "\n" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fw.flush () ; } 
@ org.junit.Test public void testPreLoadClasses_classNotFound () throws java.lang.Exception { try { mFrameworkClassLoader.preLoadClasses ( "not.a.package.", null, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.HashMap<java.lang.String, java.lang.Class<?>> map = getPrivateClassCache () ; assertEquals ( 0, map.size () ) ; java.util.HashMap<java.lang.String, byte[]> data = getPrivateEntryCache () ; assertEquals ( 0, data.size () ) ; } 
@ java.lang.Override public void setThreadCount ( int numThreads ) { try { if ( ( this.hessian ) instanceof org.encog.util.concurrency.MultiThreadable ) { ( ( org.encog.util.concurrency.MultiThreadable ) ( this.hessian ) ) .setThreadCount ( numThreads ) ; } else if ( ( numThreads != 1 ) && ( numThreads != 0 ) ) { throw new org.encog.neural.networks.training.TrainingError ( ( ( "The Hessian object in use ( " + ( this.hessian.getClass () .toString () ) ) + " ) does not support multi-threaded mode." ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void run ( Game game, AvalonBot bot ) { try { for ( int i = 0; i < ( game.pendingMissionPlayers.size () ) ; i++ ) { bot.sendMessage ( ( ( ( ( "Type /" + ( ( game.gameId ) - 1 ) ) + " success or /" ) + ( ( game.gameId ) - 1 ) ) + " fail" ) , game.pendingMissionPlayers.get ( i ) .id ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } ( game.state ) ++; game.pmMissionCount = 0; game.missionFailCount = 0; } 
public java.lang.String copy ( com.google.auto.value.processor.AutoValueProcessor.Property property ) { try { if ( ( copyOf ) == null ) { return property.toString () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String copy = java.lang.String.format ( copyOf, property ) ; if ( property.isNullable () ) { copy = java.lang.String.format ( " ( %s == null ? null : %s ) ", property, copy ) ; } return copy; } 
public void reorderToolbarContainer () { try { toolbarsContainer.removeAllViews () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Collections.sort ( com.example.root.myalarmclock.MainActivity.mAlarmList, new java.util.Comparator<com.example.root.myalarmclock.Alarm> () { @java.lang.Override public int compare ( com.example.root.myalarmclock.Alarm r1, com.example.root.myalarmclock.Alarm r2 ) { return r1.getAlarmDate () .compareTo ( r2.getAlarmDate () ) ; } } ) ; for ( int x = 0; x < ( com.example.root.myalarmclock.MainActivity.mAlarmList.size () ) ; x++ ) { toolbarsContainer.addView ( com.example.root.myalarmclock.MainActivity.mAlarmList.get ( x ) .getToolbar () ) ; } } 
void disconnected ( int number ) { clientHandlers[number] = null; ( connections ) --; if ( ( users[ ( number + 1 ) ] ) != null ) send ( new Message ( Message.TYPE_DISCONNECT, number, ( ( users[ ( number + 1 ) ] ) + " disconnected" ) , users[ ( number + 1 ) ] ) ) ; users[ ( number + 1 ) ] = null; try { waitForConnection ( number ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testArrayPutShort () { gnu.trove.map.TIntObjectMap<java.lang.Object> initial = org.cf.smalivm.VMTester.buildRegisterState ( 0, new short[1], 1, 0, 2, ( ( short ) ( 66 ) ) ) ; gnu.trove.map.TIntObjectMap<java.lang.Object> expected = org.cf.smalivm.VMTester.buildRegisterState ( 0, new short[] { 66 } ) ; try { org.cf.smalivm.VMTester.testMethodState ( org.cf.smalivm.opcode.TestAPutOp.CLASS_NAME, "TestArrayPutShort () V", initial, expected ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void createElanForwardingTablesList ( java.lang.String elanName, org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry macEntry, org.opendaylight.controller.md.sal.binding.api.WriteTransaction tx ) { org.opendaylight.yangtools.yang.binding.InstanceIdentifier<org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry> macEntryId = org.opendaylight.netvirt.elan.utils.ElanUtils.getMacEntryOperationalDataPath ( elanName, macEntry.getMacAddress () ) ; com.google.common.base.Optional<org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry> existingMacEntry = elanUtils.read ( broker, LogicalDatastoreType.OPERATIONAL, macEntryId ) ; try { if ( ( ! ( existingMacEntry.isPresent () ) ) && ( ( elanUtils.getElanMacTable ( elanName ) ) != null ) ) { tx.put ( LogicalDatastoreType.OPERATIONAL, macEntryId, macEntry, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void addTable ( br.com.mvbos.mymer.el.TableElement te, java.lang.StringBuilder sb ) { br.com.mvbos.mymer.sync.Differ.entityToScript.setMode ( IEntityToScript.Mode.PLAIN ) ; try { br.com.mvbos.mymer.sync.Differ.entityToScript.addTable ( te, sb ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int ct = 1; for ( br.com.mvbos.mymer.xml.field.Field f : te.getFields () ) { br.com.mvbos.mymer.sync.Differ.entityToScript.addField ( te, f, ( ct++ ) , sb ) ; } } 
public net.anyflow.lannister.message.OutboundMessageStatus setOutboundMessageStatus ( int messageId, net.anyflow.lannister.message.OutboundMessageStatus.Status targetStatus ) { net.anyflow.lannister.message.OutboundMessageStatus status = outboundMessageStatuses.get ( messageId ) ; if ( status == null ) { return null; } try { status.targetStatus ( targetStatus ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return outboundMessageStatuses.put ( status.messageId () , status ) ; } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot snapshot ) { com.firebase.client.GenericTypeIndicator<java.util.HashMap<java.lang.String, com.firebase.androidchat.bean.Channel>> t = new com.firebase.client.GenericTypeIndicator<java.util.HashMap<java.lang.String, com.firebase.androidchat.bean.Channel>> () { }; java.util.HashMap<java.lang.String, com.firebase.androidchat.bean.Channel> map = snapshot.getValue ( t ) ; if ( map == null ) return; try { for ( com.firebase.androidchat.bean.Channel c : map.values () ) { channelList.add ( c.getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) public void addInformation ( net.minecraft.item.ItemStack par1ItemStack, net.minecraft.entity.player.EntityPlayer par2EntityPlayer, java.util.List par3List, boolean par4 ) { try { if ( ( par1ItemStack.getItemDamage () ) == 0 ) { if ( ( par1ItemStack.stackTagCompound ) == null ) { par1ItemStack.stackTagCompound = new net.minecraft.nbt.NBTTagCompound () ; par1ItemStack.stackTagCompound.setInteger ( "Uses", 5 ) ; } par3List.add ( ( "Uses remaining: " + ( par1ItemStack.stackTagCompound.getInteger ( "Uses" ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/customer", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String postNewCustomer ( @javax.websocket.server.PathParam ( value = "fullname" ) java.lang.String fullname, @javax.websocket.server.PathParam ( value = "address" ) java.lang.String address, @javax.websocket.server.PathParam ( value = "age" ) int age, org.springframework.ui.ModelMap modelMap ) { java.lang.System.out.println ( fullname ) ; java.lang.System.out.println ( address ) ; try { java.lang.System.out.println ( age ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } customerModel.addNewCustomer ( fullname, address, age ) ; java.util.List<bankapp.entity.Customer> customersList = customerService.findAll () ; modelMap.addAttribute ( "customersList", customersList ) ; return "customers"; } 
public void CreateOnClick ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; try { bundle.putString ( "ID", java.lang.String.valueOf ( ID ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent create = new android.content.Intent ( this, com.example.csanders.getfit.Views.Create.class ) ; create.putExtras ( bundle ) ; startActivity ( create ) ; } 
private org.jruby.runtime.DynamicScope getBlockScope ( org.jruby.runtime.ThreadContext context, org.jruby.runtime.Block block, org.jruby.ir.interpreter.InterpreterContext interpreterContext ) { org.jruby.runtime.DynamicScope newScope = block.getBinding () .getDynamicScope () ; try { if ( interpreterContext.pushNewDynScope () ) { newScope = block.allocScope ( newScope ) ; context.pushScope ( newScope ) ; } else if ( interpreterContext.reuseParentDynScope () ) { context.pushScope ( newScope ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return newScope; } 
public void uiautomator_switcher ( java.lang.String action, edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { try { if ( action.equals ( "CLICK" ) ) { tap ( s ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( action.equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action.equals ( "TYPE" ) ) { type ( s ) ; } } 
@ org.junit.Test @junitparams.Parameters ( value = { "astText.md, astText.ast" } ) public void dumpAST ( java.lang.String mkdSrc, java.lang.String astSrc ) throws java.io.IOException { java.lang.String mkd = loadResource ( mkdSrc ) .trim () ; java.lang.String ast = loadResource ( astSrc ) .trim () ; org.pegdown.PegDownProcessor processor = new org.pegdown.PegDownProcessor ( org.pegdown.Extensions.ALL ) ; org.pegdown.ast.RootNode rootNode = processor.parseMarkdown ( normalize ( mkd ) .toCharArray () ) ; java.lang.String s = dumpAST ( rootNode ) ; try { org.assertj.core.api.Assertions.assertThat ( normalize ( s.trim () ) ) .isEqualTo ( normalize ( ast ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private long getNextBuildNumber ( @javax.annotation.Nonnull java.lang.Object entry ) { try { if ( entry instanceof hudson.model.Queue.Item ) { hudson.model.Queue.Task task = ( ( hudson.model.Queue.Item ) ( entry ) ) .task; if ( task instanceof hudson.model.Job ) { return ( ( hudson.model.Job ) ( task ) ) .getNextBuildNumber () ; } } else if ( entry instanceof hudson.model.Run ) { return ( ( hudson.model.Run ) ( entry ) ) .getParent () .getNextBuildNumber () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( jenkins.widgets.HistoryPageEntry.getEntryId ( entry ) ) + 1; } 
public org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List<? extends macrobase.datamodel.HasMetrics> data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data.size () , p ) ; int idx = 0; try { for ( macrobase.datamodel.HasMetrics d : data ) { ret.setRow ( idx, d.getMetrics () .toArray () ) ; idx += 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret, false ) .getCovarianceMatrix () ; } 
public void voteThreshold ( int downVotedTrack ) { try { if ( downVotedTrack < ( mQueueElementList.size () ) ) { if ( ( ( ( ( threshold ) + ( mQueueElementList.get ( downVotedTrack ) .upvoteList.size () ) ) - ( mQueueElementList.get ( downVotedTrack ) .downvoteList.size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork.size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private javax.swing.JButton createDeleteAlbumButton () { javax.swing.JButton deleteAlbumButton = new javax.swing.JButton ( "Remove Album" ) ; deleteAlbumButton.setToolTipText ( "Delete Selected Album" ) ; try { deleteAlbumButton.addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent e ) { controller.deleteAlbum () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return deleteAlbumButton; } 
protected static java.lang.String singleSearch ( java.lang.String keyword, java.lang.String text, boolean i ) { java.lang.String returnString = ""; try { for ( java.lang.String s : poormansgrep.BonusProject.Search.search ( keyword, text, i ) ) { if ( s != null ) returnString += s; } } catch ( Exception ex ) { ex.printStackTrace () ; } return returnString; } 
private static float findMax ( java.util.ArrayList<java.lang.Float> list, int targetIndex ) { float max = -1.0F; try { for ( int a = 0; a <= targetIndex; a++ ) { if ( ( list.get ( a ) ) > max ) { max = list.get ( a ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return max; } 
public static boolean cancel ( int index ) { if ( ( index == ( -1 ) ) || ( ( co.theengine.loomdemo.LoomHTTP.clients[index] ) == null ) ) { return false; } try { co.theengine.loomdemo.LoomHTTP.clients[index].cancelRequests ( co.theengine.loomdemo.LoomHTTP._context, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void setMessage ( final org.apache.logging.log4j.message.Message msg ) { try { if ( msg instanceof org.apache.logging.log4j.message.ReusableMessage ) { org.apache.logging.log4j.message.ReusableMessage reusable = ( ( org.apache.logging.log4j.message.ReusableMessage ) ( msg ) ) ; reusable.formatTo ( getMessageTextForWriting () ) ; if ( ( parameters ) != null ) { parameters = reusable.swapParameters ( parameters ) ; parameterCount = reusable.getParameterCount () ; } } else { if ( ( ! ( org.apache.logging.log4j.core.util.Constants.FORMAT_MESSAGES_IN_BACKGROUND ) ) && ( msg != null ) ) { msg.getFormattedMessage () ; } this.message = msg; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public android.database.Cursor getAllNotes ( java.lang.String sortOrder ) { android.database.Cursor cursor = null; try { if ( sortOrder == "date" ) { cursor = mDb.query ( NotesContract.TABLE_NAME, null, null, null, null, null, ( ( NotesContract.COLUMN_DATE ) + " DESC" ) ) ; } else if ( sortOrder == "fav" ) { cursor = mDb.query ( NotesContract.TABLE_NAME, null, null, null, null, null, ( ( NotesContract.COLUMN_FAV ) + " DESC" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return cursor; } 
public void displayTitle () { this.getContentPane () .removeAll () ; this.add ( titleScreen ) ; titleScreen.revalidate () ; titleScreen.repaint () ; this.revalidate () ; this.repaint () ; try { titleScreen.requestFocusInWindow () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void init () { for ( int i = 1; i <= ( levelCount ) ; i++ ) { levels.add ( new world.Level ( i ) ) ; } try { backgroundX = java.lang.Integer.parseInt ( currentLevel.getWallData ( 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } backgroundY = java.lang.Integer.parseInt ( currentLevel.getWallData ( 1 ) ) ; background = new renderer.Background ( 0, 0, this, currentLevel.getImageData ( 0 ) ) ; inventory = new renderer.Texture ( "Assets/Pictures/Textures/Inventory_l1.png" ) ; c = new vault1.CharacterFolder.Controller ( this ) ; } 
public void reduce ( org.apache.hadoop.io.Text key, java.lang.Iterable<org.apache.hadoop.io.DoubleWritable> values, cloudCompu.PageRankMr.Context context ) throws java.io.IOException, java.lang.InterruptedException { double tmppr = 0.0; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmppr += val.get () ; } title.set ( "Sum" ) ; try { pr.set ( java.lang.String.valueOf ( tmppr ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } context.write ( title, pr ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; injectDependencies ( savedInstanceState ) ; mBinding = android.databinding.DataBindingUtil.setContentView ( this, R.layout.activity_my_stocks ) ; try { mBinding.setViewModel ( mViewModel ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } checkPlayServicesAvailable () ; setupRecyclerView () ; checkAddIntent ( getIntent () ) ; getSupportLoaderManager () .initLoader ( com.sam_chordas.android.stockhawk.presentation.mystocks.MyStocksActivity.CURSOR_LOADER_ID, null, this ) ; } 
public void putCharArray ( final char[] data ) { int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfChar ) ; try { putInt ( l ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory ( com.heerbann.unsafe.UnsafeBuffer.toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l; end = ( ( position ) > ( end ) ) ? position : end; } 
public java.util.ArrayList<lexer.Token> tokenize ( java.lang.String input ) { java.util.ArrayList<lexer.Token> resultingTokens = new java.util.ArrayList<lexer.Token> () ; lexer.Token newToken; if ( input == null ) { java.lang.System.out.println ( "Input not set!" ) ; return null; } java.util.Collections.sort ( token ) ; try { while ( ( input.length () ) > 0 ) { newToken = testTokens ( input ) ; input = input.substring ( newToken.getCompleteLength () ) ; resultingTokens.add ( newToken ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return resultingTokens; } 
@ java.lang.Override public nez.parser.vm.MozInst exec ( nez.parser.vm.ParserMachineContext sc ) throws nez.parser.TerminationException { try { if ( ( sc.prefetch () ) == ( this.byteChar ) ) { if ( ( this.byteChar ) == 0 ) { return this.next; } sc.move ( 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this.next; } 
private void handleDCPRequest ( final com.couchbase.client.core.message.dcp.DCPRequest req ) { try { if ( req instanceof com.couchbase.client.core.message.dcp.MutationMessage ) { com.couchbase.client.core.message.dcp.MutationMessage msg = ( ( com.couchbase.client.core.message.dcp.MutationMessage ) ( req ) ) ; handleMutation ( msg, msg.partition () ) ; } else if ( req instanceof com.couchbase.client.core.message.dcp.RemoveMessage ) { com.couchbase.client.core.message.dcp.RemoveMessage msg = ( ( com.couchbase.client.core.message.dcp.RemoveMessage ) ( req ) ) ; handleRemove ( msg, msg.partition () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showWarning () { try { if ( ( ( toastWidget ) == null ) && ( ( getContext () ) != null ) ) { toastWidget = new bei.m3c.widgets.ToastWidget ( getContext () , getContext () .getString ( R.string.tv_warning ) , getActivity () .findViewById ( android.R.id.content ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( toastWidget ) != null ) { toastWidget.flash () ; } } 
@ org.junit.Test public void testRemoveThing_IsCalled_Once () throws java.lang.Exception { tvao.mmad.itu.tingle.Model.Thing thing = new tvao.mmad.itu.tingle.Model.Thing () ; try { org.mockito.Mockito.when ( _sut.removeThing ( thing.getId () ) ) .thenReturn ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } _sut.removeThing ( thing.getId () ) ; org.mockito.Mockito.verify ( _sut, org.mockito.Mockito.atLeastOnce () ) .removeThing ( thing.getId () ) ; } 
public final void start ( final android.view.View v ) { ( ( com.github.mrm1st3r.cards.Cards ) ( getApplication () ) ) .setConnections ( playerList ) ; playerList.remove ( null ) ; for ( com.github.mrm1st3r.connection.bluetooth.SimpleBluetoothConnection conn : playerList.keySet () ) { conn.write ( "start" ) ; conn.pause () ; } try { serv.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent intent = new android.content.Intent ( this, com.github.mrm1st3r.cards.ingame.Gamemaster.class ) ; startActivity ( intent ) ; } 
public void init () { this.body.setLinearVelocity ( 0.0F, 0.0F ) ; try { this.body.setTransform ( ( ( ( spawnPosition.x ) + ( ( getWidth () ) / 2.0F ) ) / ( com.greenbatgames.rubyred.util.Constants.PTM ) ) , ( ( ( spawnPosition.y ) + ( ( getHeight () ) / 2.0F ) ) / ( com.greenbatgames.rubyred.util.Constants.PTM ) ) , 0.0F ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } jumped = true; facingRight = true; grounded = false; crouched = false; disableCollisionFor = 0.0F; } 
private void findJourneyPics ( com.xiangyou.product.Product.Day day, int index, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> journeyPicsMap ) { java.util.Map<java.lang.String, java.lang.String> pictures = journeyPicsMap.get ( ( ( com.xiangyou.product.ProductRepository.PREFIX_DAY ) + index ) ) ; try { if ( pictures != null ) { for ( java.util.Map.Entry<java.lang.String, java.lang.String> entry : pictures.entrySet () ) { day.addPicture ( entry.getKey () , entry.getValue () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { try { progressDialog.show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String imageUrl = fbUser.getPhotoUrl () .toString () ; updateImageInDatabase ( imageUrl ) ; com.bumptech.glide.Glide.with ( this ) .load ( imageUrl ) .bitmapTransform ( new com.example.mjokic.quizapp.utils.GlideCircleTransformation ( this ) ) .into ( ( ( android.widget.ImageView ) ( findViewById ( R.id.navDrawerAvatar ) ) ) ) ; progressDialog.hide () ; } 
private void updateCell ( int x, int y ) { javafx.scene.shape.Rectangle r = getRectangle ( x, y ) ; try { if ( game.isAlive ( x, y ) ) { r.setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r.setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r.setFill ( javafx.scene.paint.Color.BLACK ) ; r.setStroke ( javafx.scene.paint.Color.BLACK ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void replace ( int position, java.lang.Object content ) { if ( ( position <= 0 ) || ( ( nodes ) <= 0 ) ) return; if ( position > ( nodes ) ) return; Node replace = start; for ( int i = 0; i < ( position - 1 ) ; i++ ) { replace = replace.getNextNode () ; } try { replace.setContent ( content ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initViewPager () { ua.te.hackathon.smartcity2015.ui.intro.IntroActivity.ViewPagerAdapter adapter = new ua.te.hackathon.smartcity2015.ui.intro.IntroActivity.ViewPagerAdapter ( getSupportFragmentManager () ) ; adapter.addFragment ( ua.te.hackathon.smartcity2015.ui.intro.IntroFragment.newInstance ( R.color.blue ) ) ; adapter.addFragment ( ua.te.hackathon.smartcity2015.ui.intro.IntroFragment.newInstance ( R.color.red ) ) ; adapter.addFragment ( ua.te.hackathon.smartcity2015.ui.intro.IntroFragment.newInstance ( R.color.green ) ) ; viewPagerInto.setAdapter ( adapter ) ; try { indicatordots.setViewPager ( viewPagerInto ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private gov.anl.ipns.ViewTools.Components.ViewControls.CompositeContourControl generateContourControls ( float minValue, float maxValue, int numLevels, float[] levels, boolean showManualControls ) { contourControl = new gov.anl.ipns.ViewTools.Components.ViewControls.CompositeContourControl ( getContourPanel () , minValue, maxValue, numLevels, levels, showManualControls ) ; try { contourControl.addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( event.getActionCommand () .equals ( CompositeContourControl.CONTOURS_CHANGED ) ) displayChanged () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return contourControl; } 
private java.lang.String getChargeRangeAsString () { java.lang.String charges = ""; try { for ( int i = minCharge; i <= ( maxCharge ) ; i++ ) { if ( ! ( charges.isEmpty () ) ) { charges += ","; } charges += i + "+"; } } catch ( Exception ex ) { ex.printStackTrace () ; } return charges; } 
private void turnOffFlash () { isFlashOn = false; if ( ( ( camera ) == null ) || ( ( params ) == null ) ) { return; } params = camera.getParameters () ; try { params.setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } camera.setParameters ( params ) ; camera.stopPreview () ; isFlashOn = false; imgButtonOnOff.setImageResource ( R.drawable.ic_flash_off ) ; } 
@ java.lang.Override public org.talend.core.model.process.IProcess getProcessFromItem ( org.talend.core.model.properties.Item item, boolean loadScreenshots ) { try { if ( ( org.talend.core.model.properties.impl.ProcessItemImpl.class ) == ( item.getClass () ) ) { java.lang.Process process = null; process = new java.lang.Process ( item.getProperty () ) ; process.loadXmlFile ( loadScreenshots ) ; return process; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void init ( ijfx.ui.module.input.Input input ) { try { if ( ChannelSelector.STYLE.equals ( input.getWidgetType () ) ) { channelSelector = new ijfx.ui.correction.ChannelSelector ( null ) ; channelSelector.channelNumberProperty () .setValue ( 10 ) ; valueProperty () .bindBidirectional ( channelSelector.selectedChannelProperty () .asObject () ) ; channelSelector.selectChannel ( ( ( int ) ( input.getValue () ) ) ) ; node = channelSelector; } else { super.init ( input ) ; node = super.getNode () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getWordEndingAtPosition ( int startingPosition, int atPosition ) { java.lang.String startingText = text.substring ( startingPosition, atPosition ) ; int lastIndex = startingText.lastIndexOf ( " " ) ; try { if ( lastIndex == ( -1 ) ) { return startingText; } else { return startingText.substring ( lastIndex, ( ( startingText.length () ) - 1 ) ) .trim () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<lt.ru.lexio.db.Word> build ( int wordCount, int page, java.util.Date toDate, lt.ru.lexio.ui.training.TrainingWordOrder wordOrder, lt.ru.lexio.ui.training.TrainingType trainingType ) { java.util.List<lt.ru.lexio.db.Word> words = new java.util.ArrayList<> ( wordCount ) ; try { build ( wordCount, page, toDate, trainingType, wordOrder, words ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return words; } 
lab9.ULLMap<K, V>.Entry get ( K k ) { try { if ( ( k != null ) && ( k.equals ( key ) ) ) { return this; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( next ) == null ) { return null; } return next.get ( k ) ; } 
@ java.lang.Override public void onRouteFound ( java.util.List<com.mybus.model.BusRouteResult> results ) { try { cancelProgressDialog () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mMyBusMap.removeChargingPointMarkers () ; if ( ( results == null ) || ( results.isEmpty () ) ) { showBottomSheetResults ( false ) ; mViewPagerAdapter = null; android.widget.Toast.makeText ( this, R.string.toast_no_result_found, Toast.LENGTH_LONG ) .show () ; return; } else { startResultsActivity ( results ) ; } } 
public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest, com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest, boolean skipWorkInProgressMergeRequest ) { try { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory.retrieveAllowedStates ( triggerOnMergeRequest, triggerOpenMergeRequest ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean setActiveInstIdx ( int instIdx ) { programming.Program prog = getActiveProg () ; try { if ( ( ( prog != null ) && ( instIdx >= 0 ) ) && ( instIdx <= ( prog.getInstructions () .size () ) ) ) { activeInstIdx = instIdx; return true; } else { activeInstIdx = -1; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { ar.com.tzulberti.archerytraining.model.tournament.TournamentSerie tournamentSerie = self.tournamentDAO.createNewSerie ( self.tournament ) ; if ( tournamentSerie == null ) { java.lang.System.err.println ( "TODO XXX PENDING: el usuario no deberia ver el boton en este caso" ) ; return; } ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment practiceTestingFragment = ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment.createInstance ( tournamentSerie ) ; android.support.v4.app.FragmentManager fragmentManager = activity.getSupportFragmentManager () ; try { fragmentManager.beginTransaction () .replace ( R.id.container, practiceTestingFragment ) .commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { android.content.SharedPreferences prefs = mContext.getSharedPreferences ( "apprater", Context.MODE_PRIVATE ) ; java.lang.Long date_firstLaunch = java.lang.System.currentTimeMillis () ; if ( editor != null ) { editor.putLong ( "launch_count", 0 ) ; editor.putLong ( "date_firstlaunch", date_firstLaunch ) ; editor.commit () ; } try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void processResults ( org.json.JSONObject result ) { int minutes = getTime ( result ) ; if ( minutes <= ( oter.getTime () ) ) { com.joebruzek.oter.utilities.SmsSender.sendText ( oter ) ; oterLayer.removeOter ( oter ) ; } else { com.joebruzek.oter.utilities.AlarmScheduler.scheduleWakeUp ( this, oter, ( minutes - ( oter.getTime () ) ) ) ; } try { this.stopSelf () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void loadSettingsPage () { this.setSize ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_width, edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_height ) ; this.remove ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.ss ) ; this.repaint () ; edu.ucsb.cs56.projects.games.connectfour.startScreen2.settingsMenu = new edu.ucsb.cs56.projects.games.connectfour.settingsPanel ( this ) ; this.add ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.settingsMenu ) ; try { this.revalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.repaint () ; } 
private void requestAd ( org.json.JSONArray args, org.apache.cordova.CallbackContext callbackContext ) throws org.json.JSONException { final java.lang.String zoneId = args.getString ( 0 ) ; try { if ( zoneId != null ) { zoneCallbacks.put ( zoneId, callbackContext ) ; } else { defaultZoneCallback = callbackContext; } } catch ( Exception ex ) { ex.printStackTrace () ; } ir.tapsell.sdk.TapsellExtraPlatforms.requestAd ( cordova.getActivity () , zoneId ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { customView.setErase ( false ) ; brushDialog = new android.app.Dialog ( context ) ; brushDialog.setContentView ( R.layout.brush_size_picker ) ; try { brushDialog.getWindow () .setBackgroundDrawable ( new android.graphics.drawable.ColorDrawable ( android.graphics.Color.TRANSPARENT ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } brushDialog.setCanceledOnTouchOutside ( true ) ; brushDialog.show () ; } 
public final hu.akarnokd.rxjava2.basetypes.Solo<T> doAfterTerminate ( hu.akarnokd.rxjava2.basetypes.Action onAfterTerminate ) { try { hu.akarnokd.rxjava2.basetypes.ObjectHelper.requireNonNull ( onAfterTerminate, "onAfterTerminate is null" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return hu.akarnokd.rxjava2.basetypes.Solo.onAssembly ( new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle<T> ( this, hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer () , Functions.EMPTY_ACTION, onAfterTerminate, hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer () , Functions.EMPTY_LONG_CONSUMER, Functions.EMPTY_ACTION ) ) ; } 
@ org.junit.Test public void whenModuleHasNoSupplierContact_thenCorrespondingFitnessFeatureShouldBeTrue () { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito.mock ( org.corpus_tools.pepper.modules.PepperModule.class ) ; try { org.mockito.Mockito.when ( module.getSupplierContact () ) .thenReturn ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.assertj.core.api.Assertions.assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () .checkFitness ( module ) .getFitness ( FitnessFeature.HAS_SUPPLIER_CONTACT ) ) .isEqualTo ( false ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/results/test/{testRunId}", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.http.ResponseEntity<java.util.List<pl.cloudy.models.ActionResult>> getTestFromAGivenDay ( @org.springframework.web.bind.annotation.PathVariable ( value = "testRunId" ) int testRunId ) { java.util.List<pl.cloudy.models.ActionResult> testRunResults = actionObjectService.findTestRunResults ( testRunId ) ; try { if ( testRunResults.isEmpty () ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.NO_CONTENT ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.springframework.http.ResponseEntity ( testRunResults, org.springframework.http.HttpStatus.OK ) ; } 
private boolean eventTargetsStandardPopup ( com.google.gwt.dom.client.NativeEvent event ) { com.google.gwt.dom.client.EventTarget target = event.getEventTarget () ; try { if ( com.google.gwt.dom.client.Element.is ( target ) ) { return ( standardsDropListValues.getElement () .isOrHasChild ( com.google.gwt.dom.client.Element.as ( target ) ) ) || ( standardsDropListValues.getElement () .isOrHasChild ( com.google.gwt.dom.client.Element.as ( target ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void showNotificationPopUp ( java.lang.String from, java.lang.String msg ) { android.content.Intent dialogIntent = new android.content.Intent ( ctx, com.android.anurag.notesapp.AlertDialog.class ) ; dialogIntent.putExtra ( "sender_name", from ) ; dialogIntent.putExtra ( "msg", msg ) ; dialogIntent.setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; try { startActivity ( dialogIntent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean isDuplicateInCurrCategory ( java.util.HashSet<com.transformuk.bdt.domain.CrawledContent> currContentSet, com.transformuk.bdt.domain.CrawledContent newContent ) { boolean isDuplicate = false; java.util.Iterator<com.transformuk.bdt.domain.CrawledContent> iterator = currContentSet.iterator () ; try { while ( iterator.hasNext () ) { com.transformuk.bdt.domain.CrawledContent existingContent = iterator.next () ; if ( ( ( newContent.getTitle () ) != null ) && ( existingContent.getTitle () .equals ( newContent.getTitle () ) ) ) { isDuplicate = true; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return isDuplicate; } 
private static void deleteValues ( java.lang.String tableName, java.lang.Integer ID ) { try { for ( java.lang.String s : JSQL.table.get ( tableName ) .get ( ID ) .keySet () ) { JSQL.table.get ( tableName ) .get ( ID ) .put ( s, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void mapLetters ( BoggleBoard board, int rows, int cols ) { letters = new edu.princeton.cs.algs4.SeparateChainingHashST<java.lang.Integer, java.lang.Character> () ; try { for ( int i = 0; i < rows; i++ ) for ( int j = 0; j < cols; j++ ) { int x = ( i * cols ) + j; letters.put ( x, board.getLetter ( i, j ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view, java.lang.String url ) { try { android.util.Log.d ( com.gsma.mobileconnect.helpers.AuthorizationService.TAG, ( "shouldOverrideUrlLoading url=" + url ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } boolean status = false; if ( ( url != null ) && ( url.startsWith ( redirectUri ) ) ) { handleCompletion ( view, url ) ; } else { view.loadUrl ( url ) ; } return status; } 
private java.util.List<com.google.android.gms.maps.model.LatLng> getWaypoints ( java.util.List<com.itis.practice1.model.Place> places ) { java.util.List<com.google.android.gms.maps.model.LatLng> waypoints = new java.util.ArrayList<> () ; try { waypoints.add ( new com.google.android.gms.maps.model.LatLng ( mLatitude, mLongitude ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.itis.practice1.model.Place place : places ) { waypoints.add ( new com.google.android.gms.maps.model.LatLng ( place.getLatitude () , place.getLongitute () ) ) ; } return waypoints; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case android.R.id.home: finish () ; return true; case R.id.action_done: saveList () ; finish () ; return true; default: return super.onOptionsItemSelected ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.example.alex.androidclient.models.DailyStatistics getDailyStatisticsForSite ( int siteId, java.util.Date startDate, java.util.Date finishDate ) throws org.json.JSONException { java.util.List<com.example.alex.androidclient.models.DailyStatistics> dailyStats = new java.util.ArrayList<> () ; com.example.alex.androidclient.models.DailyStatistics dailyStatsForSite = null; try { if ( jHelper.getDailyStats () .isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate, finishDate ) ; dailyStats = jHelperDailyStats.getDailyStats ( startDate, finishDate ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return dailyStatsForSite; } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.wewow.utils.ShareUtils su = new com.wewow.utils.ShareUtils ( this ) ; try { su.setContent ( subject.getTitle () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } su.setUrl ( subject.getShare_link () ) ; if ( ( shareBitmap ) != null ) { } su.share () ; } 
@ java.lang.Override @java.lang.SuppressWarnings ( value = "unchecked" ) public V get () throws java.io.IOException { try { if ( ( monkey != null ) && ( filer != null ) ) { synchronized ( monkey ) { long ai = MapStore.INSTANCE.get ( filer, monkey, keyBytes ) ; if ( ai > ( -1 ) ) { return ( ( V ) ( values[ ( ( int ) ( ai ) ) ] ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public java.util.List<java.lang.Long> getMembersList () { java.util.List<java.lang.Long> memberLists = new java.util.ArrayList<java.lang.Long> () ; if ( ( this.members.length () ) <= 0 ) return memberLists; java.lang.String[] list = this.members.split ( "," ) ; try { for ( int i = 0; i < ( list.length ) ; i++ ) memberLists.add ( java.lang.Long.parseLong ( list[i] ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return memberLists; } 
public double variance ( double[] dataset ) { double degreeOfFreedom = dataset.length; double var = 0; double mean = mean ( dataset ) ; try { for ( int i = 0; i < ( dataset.length ) ; i++ ) { var += java.lang.Math.pow ( ( ( dataset[i] ) - mean ) , 2 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } var /= degreeOfFreedom; return var; } 
public static void main ( java.lang.String[] args ) { java.util.Map apple2 = new java.util.Map ( "2apples.txt" ) ; java.util.Map apple10 = new java.util.Map ( "10apples.txt" ) ; NearestNeighbor solve2 = new NearestNeighbor ( apple2 ) ; NearestNeighbor solve10 = new NearestNeighbor ( apple10 ) ; solve2.solve () ; try { solve10.solve () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( solve2.getDist () ) ; java.lang.System.out.println ( solve10.getDist () ) ; } 
public void rotate ( double winkel ) { double radius = java.lang.Math.sqrt ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; this.x = radius * ( java.lang.Math.cos ( winkel ) ) ; try { this.y = radius * ( java.lang.Math.sin ( winkel ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGenerateOption () { try { for ( int i = 0; i < 10000; i++ ) { testQuestion1.generateQuestion ( 4 ) ; tests.Fraction answer = testQuestion1.generateAnswer ( 4 ) ; assertFalse ( testQuestion1.generateOption ( 4 ) .checkEquals ( testQuestion1.getCorrectAnswer () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testOnSelectApproveUserAccess () { controller.configure ( mockActionMenu, entityBundle, true, wikiPageId, mockEntityUpdatedHandler ) ; controller.onAction ( Action.APPROVE_USER_ACCESS ) ; org.mockito.Mockito.verify ( mockApproveUserAccessModal ) .configure ( entityBundle ) ; try { org.mockito.Mockito.verify ( mockApproveUserAccessModal ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void onMouseReleased () { try { for ( com.dreamteam.villageTycoon.framework.GameObject g : getScene () .getObjects () ) { if ( g instanceof java.lang.Character ) { ( ( java.lang.Character ) ( g ) ) .setSelected ( ( ( java.lang.Character ) ( g ) ) .getHitbox () .collision ( selectionRectangle ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onInitializationFailure ( com.google.android.youtube.player.YouTubePlayer.Provider provider, com.google.android.youtube.player.YouTubeInitializationResult youTubeInitializationResult ) { try { if ( youTubeInitializationResult.isUserRecoverableError () ) { youTubeInitializationResult.getErrorDialog ( getActivity () , app.vedicnerd.ytwua.fragment.YoutubePlayerFragment.RECOVERY_DIALOG_REQUEST ) .show () ; } else { if ( isAdded () ) { android.widget.Toast.makeText ( getActivity () .getApplicationContext () , getString ( R.string.error_init_failure_msg ) , Toast.LENGTH_SHORT ) .show () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( java.util.ArrayList<com.givekesh.baboon.Utils.Feeds> result ) { try { if ( result != null ) { if ( ( result.size () ) < 10 ) { recyclerView.disableLoadMore () ; isLoadingMore = false; } else recyclerView.enableLoadMore () ; if ( isSwipeRefresh ) { mFeedsArrayList.clear () ; mWaveSwipeRefreshLayout.setRefreshing ( false ) ; isSwipeRefresh = false; } if ( isFirstLoad ) { mFeedsArrayList = result; isFirstLoad = false; } else mFeedsArrayList.addAll ( result ) ; refreshRecycler () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean needToCheck ( android.content.Context context ) { java.lang.String date = owo.npc.taipeitechrefined.utility.Utility.getDateString ( "yyyy-MM-dd", java.util.Calendar.getInstance () .getTime () , context ) ; android.content.SharedPreferences settings = context.getSharedPreferences ( MainApplication.SETTING_NAME, Context.MODE_PRIVATE ) ; java.lang.String date_flag = settings.getString ( owo.npc.taipeitechrefined.ActivityCheckReceiver.CHECK_FLAG, null ) ; try { settings.edit () .putString ( owo.npc.taipeitechrefined.ActivityCheckReceiver.CHECK_FLAG, date ) .apply () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ! ( date.equals ( date_flag ) ) ; } 
public static void main ( java.lang.String[] args ) { int[] n = new int[] { 100 }; try { java.lang.System.out.println ( java.util.Arrays.toString ( n ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } HeapSort.heapsort ( n ) ; java.lang.System.out.println ( java.util.Arrays.toString ( n ) ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> adapterView, android.view.View view, int position, long id ) { android.database.Cursor cursor = ( ( android.database.Cursor ) ( adapterView.getItemAtPosition ( position ) ) ) ; try { if ( cursor != null ) { ( ( it.jaschke.alexandria.api.Callback ) ( getActivity () ) ) .onItemSelected ( cursor.getString ( cursor.getColumnIndex ( AlexandriaContract.BookEntry._ID ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.transaction.annotation.Transactional @java.lang.Override public void saveAbout ( java.lang.String projectId, java.lang.String title, java.lang.String description ) { edu.asu.spring.quadriga.dto.AboutTextDTO aboutTextDTO = aboutTextDAO.getDTOByProjectId ( projectId ) ; if ( aboutTextDTO == null ) aboutTextDTO = new edu.asu.spring.quadriga.dto.AboutTextDTO () ; aboutTextDTO.setProjectId ( projectId ) ; aboutTextDTO.setTitle ( title ) ; aboutTextDTO.setDescription ( description ) ; try { aboutTextDAO.saveNewDTO ( aboutTextDTO ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private ch.bfh.bti7535.w2016.data.Document test ( ch.bfh.bti7535.w2016.data.Document document ) { double classifiedPositive = 0.0; double classifiedNegative = 0.0; for ( ch.bfh.bti7535.w2016.algorithm.features.AbstractFeature feature : featurePipeline ) { classifiedPositive += calcProbabilityTimesOccurrence ( feature, Classification.SENTIMENT_POSITIVE ) ; classifiedNegative += calcProbabilityTimesOccurrence ( feature, Classification.SENTIMENT_NEGATIVE ) ; } try { document.setTestResult ( ( classifiedPositive > classifiedNegative ? ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_POSITIVE : ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_NEGATIVE ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return document; } 
public boolean startAnimation ( int radius ) { if ( ( mThumbCurrentRadius ) == radius ) return false; mRadius = radius; try { if ( ( getHandler () ) != null ) { resetAnimation () ; mRunning = true; getHandler () .postAtTime ( this, ( ( android.os.SystemClock.uptimeMillis () ) + ( com.rey.material.util.ViewUtil.FRAME_DURATION ) ) ) ; invalidate () ; return true; } else { mThumbCurrentRadius = mRadius; invalidate () ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setup () throws java.lang.Exception { java.lang.String admin = java.lang.System.getProperty ( "is.admin.user" ) ; java.lang.String password = java.lang.System.getProperty ( "is.admin.passwd" ) ; am = new eu.supersede.integration.api.security.IFAuthenticationManager ( admin, password ) ; try { token = am.getAuthorizationToken ( admin, password, "" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void getInitialData () { com.home.pete.aquarium.MessagePayload msg = new com.home.pete.aquarium.MessagePayload () ; msg.getHeaterState () ; try { msg.getPumpState () ; } catch ( Exception ex ) { ex.printStackTrace () ; } msg.getTemps () ; msg.makeFinal () ; com.home.pete.aquarium.Intent i = new com.home.pete.aquarium.Intent ( "settings-event" ) ; i.putExtra ( "ACTION", msg.getMessage () ) ; android.support.v4.content.LocalBroadcastManager.getInstance ( this ) .sendBroadcast ( i ) ; } 
@ java.lang.Override public javax.el.ExpressionFactory getExpressionFactory () { try { if ( ( expressionFactory ) == null ) { init () ; synchronized ( this ) { if ( ( expressionFactory ) == null ) { javax.enterprise.inject.spi.BeanManager bm = beanManager () ; if ( bm == null ) { expressionFactory = application.getExpressionFactory () ; } else { expressionFactory = bm.wrapExpressionFactory ( application.getExpressionFactory () ) ; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return expressionFactory; } 
public boolean check () { try { for ( java.lang.String cellAsString : cellsAsString ) { java.util.Set<java.lang.Integer> set = new java.util.HashSet<> () ; for ( ar.fiuba.tdd.tp1.cell.Cell cellValue : calculateCellList ( cellAsString ) ) { if ( ! ( set.add ( java.lang.Integer.parseInt ( cellValue.getData () ) ) ) ) { return false; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void valueChanged ( javax.swing.event.ListSelectionEvent event ) { try { if ( event.getValueIsAdjusting () ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } int[] selectedRows = table.getSelectedRows () ; if ( ( selectedRows.length ) == 0 ) return; java.lang.String id = ( ( java.lang.String ) ( table.getValueAt ( selectedRows[0], 0 ) ) ) ; java.lang.Double xPosition = eventDataIDPositionMap.get ( id.trim () ) ; mainFrame.getGraph () .showEventVerticalPosition ( xPosition ) ; } 
@ java.lang.Override public void service ( final javax.servlet.ServletRequest req, final javax.servlet.ServletResponse res ) throws java.io.IOException, javax.servlet.ServletException { if ( ! ( ( req instanceof javax.servlet.http.HttpServletRequest ) && ( res instanceof javax.servlet.http.HttpServletResponse ) ) ) { throw new javax.servlet.ServletException ( "non-HTTP request or response" ) ; } javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; javax.servlet.http.HttpServletResponse response = ( ( javax.servlet.http.HttpServletResponse ) ( res ) ) ; try { doGet ( request, response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ dataClasses.Test public void testCalculateFare () { double pricePerFifthMile = 0.5; double totalFare = 0.0; double overTwoPassengerCharge = 2.0; double dropOffCharge = 2.5; double distance = 10.5; int numberOfPassengers = 5; if ( numberOfPassengers > 2 ) { totalFare = overTwoPassengerCharge * ( numberOfPassengers - 2 ) ; } totalFare += dropOffCharge; totalFare += distance * pricePerFifthMile; try { assertEquals ( 13.75, totalFare, 0.1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onRemoteVideoTrackReceive ( com.quickblox.videochat.webrtc.QBRTCSession session, com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack, java.lang.Integer userID ) { remoteVideoView = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.remoteVideoView ) ) ) ; try { android.util.Log.d ( "Track", ( "remoteVideoView is " + ( remoteVideoView ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( remoteVideoView ) != null ) { org.webrtc.VideoRenderer remouteRenderer = new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( remoteVideoView, QBGLVideoView.Endpoint.REMOTE ) ) ; videoTrack.addRenderer ( remouteRenderer ) ; remoteVideoView.setVideoTrack ( videoTrack, QBGLVideoView.Endpoint.REMOTE ) ; android.util.Log.d ( "Track", "onRemoteVideoTrackReceive () is raned" ) ; } } 
@ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new", method = RequestMethod.GET ) public java.lang.String newLoan ( @cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long bookId, @cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long memberId, org.springframework.ui.Model model ) { if ( bookId != null ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade.findById ( bookId ) ; model.addAttribute ( "book", book ) ; } if ( memberId != null ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade.findById ( memberId ) ; model.addAttribute ( "member", member ) ; } try { model.addAttribute ( "createLoan", new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "loan/new"; } 
public void onPostExecute ( java.lang.String result ) { try { if ( ( result != null ) && ( ! ( result.equals ( "" ) ) ) ) { java.lang.String campusChar = com.ihwapp.android.model.Curriculum.getCampusChar ( campus ) ; android.content.SharedPreferences prefs = com.ihwapp.android.model.Curriculum.ctx.getSharedPreferences ( ( ( year ) + campusChar ) , Context.MODE_PRIVATE ) ; prefs.edit () .putString ( "scheduleJSON", result ) .commit () ; parseScheduleJSON () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<core.moves.Move> getLastNMoves ( int n ) { java.util.List<core.moves.Move> moves = new java.util.ArrayList ( this.moveHistory ) ; java.util.Collections.reverse ( moves ) ; try { if ( ( n > 0 ) && ( n < ( this.moveHistory.size () ) ) ) moves = moves.subList ( 0, n ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return moves; } 
public Model.Grupa dohvatiGrupuPoIDu ( int idGrupa ) { org.hibernate.Query query; otvoriSession () ; query = hibernateSession.createQuery ( ( ( "from Grupa as K where K.IDGrupa = '" + idGrupa ) + "'" ) ) ; Model.Grupa odabranaGrupa; if ( ( query.list () .size () ) > 0 ) { odabranaGrupa = ( ( Model.Grupa ) ( query.list () .get ( 0 ) ) ) ; } else { odabranaGrupa = null; } try { zatvoriSession () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return odabranaGrupa; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { boolean status; try { switch ( item.getItemId () ) { case R.id.action_settings: startActivity ( new android.content.Intent ( this, io.github.data4all.activity.SettingsActivity.class ) ) ; status = true; break; case R.id.action_help: status = true; break; case android.R.id.home: this.onWorkflowFinished ( null ) ; status = true; break; default: return super.onOptionsItemSelected ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return status; } 
@ java.lang.Override public void resetPassword ( org.envirocar.server.core.entities.User user, java.lang.String verificationCode ) throws org.envirocar.server.core.exception.BadRequestException { org.envirocar.server.mongo.entity.MongoPasswordReset status = this.passwordResetDao.getPasswordResetStatus ( user, verificationCode ) ; try { if ( ( status != null ) && ( ! ( status.isExpired () ) ) ) { if ( status.getCode () .equals ( verificationCode ) ) { save ( user ) ; } else { throw new org.envirocar.server.core.exception.BadRequestException ( "Wrong verification code." ) ; } } else { throw new org.envirocar.server.core.exception.BadRequestException ( "Verification code already expired." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.passwordResetDao.remove ( status ) ; } 
private void showProgressDialog () { if ( ! ( isUserLocationEnabled () ) ) { toggleUserLocation ( true ) ; } gpsCountdownDialog = new android.app.Dialog ( this ) ; try { gpsCountdownDialog.setContentView ( R.layout.dialog_gps_countdown ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } gpsCountdownDialog.setTitle ( getResources () .getString ( R.string.getting_gps_fix ) ) ; gpsCountdownDialog.setCancelable ( false ) ; gpsCountdownDialog.show () ; mTimer = new java.util.Timer () ; doCountDown () ; } 
private void fillCart ( int elementPosition, int commandCount, java.lang.String type ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount, type ) .get ( elementPosition ) ; try { data.add ( item ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this, R.layout.grid_mycommand_element, data ) ; if ( inCart ( elementPosition, commandCount, type ) ) { gridAdapterMyCommand.dataGetter () .remove ( POS ) ; } gridViewMyCommand.setAdapter ( gridAdapterMyCommand ) ; } 
public static void main ( java.lang.String[] args ) { MainInterface.init () ; int choice = MainInterface.prompt () ; try { while ( true ) { MainInterface.performChoice ( choice ) ; if ( choice == 0 ) break; choice = MainInterface.prompt () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public double getExploit () { try { if ( ( context.getActivePlayerId () ) == 0 ) { return ( player1Value ) / ( ( numVisits ) + ( epsilon ) ) ; } else { return ( ( numVisits ) - ( player1Value ) ) / ( ( numVisits ) + ( epsilon ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion ) { try { android.util.Log.i ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG, ( ( ( ( ( "Upgrading database " + ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB ) ) + " from version " ) + oldVersion ) + " to " ) + newVersion ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( newVersion >= ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB_SCHEMA_VERSION_2 ) ) { db.execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_REQUIRE_CREATE ) ; db.execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_RESOURCE_CREATE ) ; } else { android.util.Log.e ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG, ( ( ( ( "Unexpected database upgrade from version" + oldVersion ) + " to " ) + newVersion ) + ". No known upgrade path" ) ) ; } } 
private void fillDefaultAttack () { skillName[0] = "Tackle"; skillPower[0] = 1; skillAgility[0] = 1; skillSpeed[0] = 1; android.widget.Button defaultSkill = ( ( android.widget.Button ) ( findViewById ( R.id.skill0 ) ) ) ; try { setButtonText ( skillName[0], skillPower[0], skillAgility[0], skillSpeed[0], defaultSkill ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean canGenerateRangeQuery ( boolean isUniqueIndex, java.util.List<net.royqh.easypersist.generator.SingleProperty> indexProperties ) { try { if ( isUniqueIndex ) { for ( net.royqh.easypersist.generator.SingleProperty singleProperty : indexProperties ) { if ( net.royqh.easypersist.utils.TypeUtils.isRangeTypeProperty ( singleProperty ) ) { return true; } } return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void onBindViewHolder ( com.spiewak.workoutlogger.adapters.SetAdapter.SetHolder holder, int position ) { com.spiewak.workoutlogger.models.WorkoutSet workoutSet = workoutSets.get ( position ) ; java.lang.String setAndReps = ( ( java.lang.Integer.toString ( workoutSet.getReps () ) ) + "x" ) + ( java.lang.Double.toString ( workoutSet.getLoad () ) ) ; try { holder.workoutSet.setText ( setAndReps ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void caseframesChanged ( clojure.lang.APersistentSet addedcfs, java.lang.Boolean clear ) { if ( clear ) { edu.buffalo.cse.sneps3.gui.business.Caseframe.clearCaseframes () ; } java.util.ArrayList<edu.buffalo.cse.sneps3.gui.business.Caseframe> c = edu.buffalo.cse.sneps3.gui.business.Caseframe.createCaseframes ( addedcfs ) ; try { for ( edu.buffalo.cse.sneps3.gui.business.IView i : views ) { i.cfUpdate ( c, clear ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void execute ( final java.util.List<org.sleuthkit.autopsy.ingest.IngestServiceAbstract> services, final org.sleuthkit.datamodel.Image image ) { java.util.List<org.sleuthkit.datamodel.Image> images = new java.util.ArrayList<org.sleuthkit.datamodel.Image> () ; try { images.add ( image ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.sleuthkit.autopsy.ingest.IngestManager.logger.log ( java.util.logging.Level.INFO, ( "Will enqueue image: " + ( image.getName () ) ) ) ; execute ( services, images ) ; } 
public static models.Account authenticate ( java.lang.String email, java.lang.String password ) { models.Account account = models.Account.find.where () .eq ( "email", email ) .findUnique () ; if ( account == null ) { return null; } try { if ( org.mindrot.jbcrypt.BCrypt.checkpw ( password, account.password ) ) { return account; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void addAvailableLevel ( int i, int numStars, app.Game g ) { view.AvailableLevelView av = new view.AvailableLevelView ( i ) ; if ( numStars != ( -1 ) ) { av.unlockLevel ( numStars ) ; addListenerToButton ( i, g ) ; } try { levels.add ( av ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } scrollablePanel.add ( av ) ; } 
private void initBlocks ( android.content.Context context ) { try { for ( int x = 0; x <= ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ; x++ ) { for ( int y = 0; y < ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ; y++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; block.setXPosition ( x ) ; block.setYPosition ( y ) ; blocks.add ( block ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onNavigationItemSelected ( @android.support.annotation.NonNull android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.navigation_home: return true; case R.id.navigation_dashboard: intent = new android.content.Intent ( this, com.example.sky.environment.TinTuc.class ) ; startActivity ( intent ) ; return true; case R.id.menu: intent = new android.content.Intent ( this, com.example.sky.environment.Future.class ) ; startActivity ( intent ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onCommandDataMessageReceived ( com.tenkiv.tekdaqc.ATekdaqc tekdaqc, com.tenkiv.tekdaqc.communication.message.ABoardMessage message ) { try { if ( ( mMessengerList.size () ) > 0 ) { com.tenkiv.tekdaqc.android.application.service.Bundle dataBundle = new com.tenkiv.tekdaqc.android.application.service.Bundle () ; dataBundle.putString ( TekCast.DATA_MESSSAGE_TEKDAQC, tekdaqc.getSerialNumber () ) ; dataBundle.putSerializable ( TekCast.DATA_MESSSAGE, message ) ; com.tenkiv.tekdaqc.android.application.service.Message dataMessage = com.tenkiv.tekdaqc.android.application.service.Message.obtain () ; dataMessage.what = com.tenkiv.tekdaqc.android.application.util.TekCast.TEKDAQC_COMMAND_MESSAGE; dataMessage.setData ( dataBundle ) ; sendMessageToRegisteredListeners ( dataMessage, tekdaqc.getSerialNumber () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int read ( java.io.InputStream in, int offset, int byteCount ) throws java.io.IOException { try { if ( ( offset + byteCount ) > ( _bytes.length ) ) { byte[] newBytes = new byte[byteCount + offset]; java.lang.System.arraycopy ( _bytes, 0, newBytes, 0, _bytes.length ) ; _bytes = newBytes; } } catch ( Exception ex ) { ex.printStackTrace () ; } _size = in.read ( _bytes, offset, byteCount ) ; return _size; } 
private void addOptionWithArg ( org.apache.commons.cli.Options options, java.lang.String longOptionName, java.util.Optional<java.lang.String> shortOptionName, boolean required, java.lang.String description ) { try { if ( isChangable ( longOptionName ) ) { options.addOption ( org.apache.commons.cli.Option.builder ( shortOptionName.orElse ( null ) ) .longOpt ( longOptionName ) .hasArg () .required ( required ) .desc ( description ) .build () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String protectAction ( java.lang.String originAction ) { if ( originAction == null ) { return null; } try { if ( originAction.startsWith ( "_VA_" ) ) { return originAction; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String newAction = com.lody.virtual.client.env.SpecialComponentList.PROTECTED_ACTION_MAP.get ( originAction ) ; if ( newAction == null ) { newAction = ( com.lody.virtual.client.env.SpecialComponentList.PROTECT_ACTION_PREFIX ) + originAction; } return newAction; } 
public void dump ( java.io.DataOutputStream out ) throws java.io.IOException { super.dump ( out ) ; try { out.writeInt ( low ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } out.writeInt ( ( ( high ) - ( low ) ) ) ; for ( int i = 0; i < ( switchAddresses.length ) ; i++ ) { out.writeShort ( switchAddresses[i] ) ; out.writeShort ( switchBranchTargetIndexes[i] ) ; } } 
public void reduce ( org.apache.hadoop.io.Text inputKey, java.util.Iterator<org.apache.hadoop.io.Text> inputVals, org.apache.hadoop.mapred.OutputCollector<org.apache.hadoop.io.Text, slmt.courses.cp.hw3.step1.PageInfo> outputCollector, org.apache.hadoop.mapred.Reporter reporter ) throws java.io.IOException { slmt.courses.cp.hw3.step1.PageInfo info = new slmt.courses.cp.hw3.step1.PageInfo () ; info.setRank ( ( 1 / ( ( double ) ( nodeCount ) ) ) ) ; try { while ( inputVals.hasNext () ) info.addOutLink ( inputVals.next () .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } outputCollector.collect ( inputKey, info ) ; } 
public static void printResult ( double[] result ) { java.lang.System.out.println ( "" ) ; try { for ( int i = 0; i < ( result.length ) ; i++ ) { java.lang.System.out.print ( ( ( result[i] ) + " " ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Object apply ( io.warp10.script.WarpScriptStack stack ) throws io.warp10.script.WarpScriptException { java.lang.String replacement = stack.pop () .toString () ; java.lang.String regexp = stack.pop () .toString () ; java.lang.String in = stack.pop () .toString () ; try { if ( this.all ) { stack.push ( in.replaceAll ( regexp, replacement ) ) ; } else { stack.push ( in.replaceFirst ( regexp, replacement ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return stack; } 
@ java.lang.Override public void removeCard ( org.magic.api.beans.MagicCard mc, org.magic.api.beans.MagicCollection collection ) throws java.sql.SQLException { org.magic.api.dao.impl.HsqlDAO.logger.info ( ( ( ( "remove " + mc ) + " from " ) + collection ) ) ; java.sql.PreparedStatement pst = con.prepareStatement ( "delete from cards where name=? and edition=? and collection=?" ) ; try { pst.setString ( 1, mc.getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } pst.setString ( 2, mc.getEditions () .get ( 0 ) .getId () ) ; pst.setString ( 3, collection.getName () ) ; pst.executeUpdate () ; } 
public heronarts.p3lx.ui.component.UIDoubleBox setParameter ( final heronarts.lx.parameter.BoundedParameter parameter ) { if ( ( this.parameter ) != null ) { this.parameter.removeListener ( this.parameterListener ) ; } this.parameter = parameter; try { if ( parameter != null ) { this.minValue = parameter.range.min; this.maxValue = parameter.range.max; this.parameter.addListener ( this.parameterListener ) ; setValue ( parameter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
private void refreshView () throws com.fsck.k9.mail.MessagingException { mAdapter.setNotifyOnChange ( false ) ; mAdapter.clear () ; try { mLocalFolders = mAccount.getLocalFolders () ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.fsck.k9.mailstore.LocalFolder lf : mLocalFolders ) { mAdapter.add ( lf.getName () ) ; } mAdapter.notifyDataSetChanged () ; } 
@ java.lang.Override public void run () { run = true; try { for ( ; ( ( a ) < ( steps ) ) && ( run ) ; ( a ) ++ ) { java.lang.System.out.println ( a ) ; tick () ; notifyViews () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } a = 0; run = false; } 
@ java.lang.Override public void run () { try { if ( ( Main.currentLevel ) != ( -1 ) ) { javafx.application.Platform.runLater ( new java.lang.Runnable () { @java.lang.Override public void run () { application.EnvironmentGUIPane pane = new application.EnvironmentGUIPane () ; pane.startLevel ( Main.currentLevel ) ; Main.scene.setRoot ( pane ) ; } } ) ; application.MainMenu.mainMenuTimer.cancel () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<org.todss.model.IntakeMoment> test ( org.todss.algorithm.AlgorithmContext context ) { final long start = java.lang.System.currentTimeMillis () ; final java.util.List<org.todss.model.IntakeMoment> list = org.todss.algorithm.SmartAlgorithm.run ( context ) ; try { java.lang.System.out.println ( ( ( "Took " + ( ( java.lang.System.currentTimeMillis () ) - start ) ) + " ms." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assert ( list != null ) && ( ( list.size () ) > 0 ) ; return list; } 
@ java.lang.Override public void add ( de.hauke_stieler.rednimer.Common.Material.Reminder reminder ) { java.lang.String date = _dateFormatter.format ( reminder.getDueDate () .getTime () ) ; boolean keyAlreadyExists = _reminderMap.containsKey ( date ) ; if ( !keyAlreadyExists ) { _reminderMap.put ( date, new java.util.ArrayList<> () ) ; } try { _reminderMap.get ( date ) .add ( reminder ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } de.hauke_stieler.rednimer.DayOverview.Service.ReminderAdded.fireEvent ( new de.hauke_stieler.rednimer.Common.Material.Reminder[] { reminder } ) ; } 
private void abortHandler ( javax.servlet.http.HttpServletRequest request, java.lang.String origin, org.apache.wicket.request.component.IRequestablePage page ) { onAborted ( request, origin, page ) ; try { org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener.log.info ( "Possible CSRF attack, request URL: {}, Origin: {}, action: aborted with error {} {}", new java.lang.Object[] { request.getRequestURL () , origin, errorCode, errorMessage } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } throw new org.apache.wicket.request.http.flow.AbortWithHttpErrorCodeException ( errorCode, errorMessage ) ; } 
@ org.junit.Test public void testInstallGroup () throws java.lang.Exception { java.lang.String inport = "2"; int vlanid = 100; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid, inport, vlanid ) ; try { mdSalMgr.installGroup ( grpEntity1 ) .get () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( 1, grpFwder.getDataChgCount () ) ; inport = "3"; vlanid = 100; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid, inport, vlanid ) ; mdSalMgr.installGroup ( grpEntity2 ) .get () ; org.junit.Assert.assertEquals ( 2, grpFwder.getDataChgCount () ) ; } 
@ org.junit.Test public void testStrategyGeneticSearcherWithDistance () throws java.lang.InterruptedException, stsc.general.simulator.multistarter.StrategySearcherException { final stsc.general.simulator.multistarter.genetic.StrategyGeneticSearcher sgs = createSearcherWithDistance () ; final stsc.general.strategy.selector.StrategySelector selector = sgs.waitAndGetSelector () ; final stsc.general.statistic.Metrics metrics = selector.getStrategies () .get ( 0 ) .getMetrics () ; final java.lang.Double costValue = getCostFunction () .calculate ( metrics ) ; try { org.junit.Assert.assertEquals ( ( -541.798602 ) , costValue, Settings.doubleEpsilon ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { java.util.List<android.bluetooth.BluetoothDevice> devices = getAvailaleBluetoohDevices () ; java.util.List<java.lang.String> deviceNames = new java.util.ArrayList<java.lang.String> () ; try { for ( android.bluetooth.BluetoothDevice device : devices ) { deviceNames.add ( device.getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ android.support.annotation.Nullable @java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View rootview = inflater.inflate ( R.layout.fragment_contact_select, container, false ) ; try { butterknife.ButterKnife.bind ( this, rootview ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } childContactAdapter = new com.hackahealth.kodakesalem.mvp.ui.adapter.ChildContactAdapter ( getActivity () , new java.util.ArrayList<com.hackahealth.kodakesalem.mvp.objects.ChildContact> () , new com.hackahealth.kodakesalem.mvp.ui.ContactSelectFragment.CallbackClass () { @java.lang.Override public void onItemClick ( int position ) { presenter.onItemSelected ( position ) ; } } ) ; return rootview; } 
private java.lang.Object getCamera ( com.eclipsesource.tabris.maps.MapHolderView mapHolderView ) { com.google.android.gms.maps.model.LatLng target = getGoogleMapSafely ( mapHolderView ) .getCameraPosition () .target; java.util.Map<java.lang.String, java.lang.Object> camera = new java.util.HashMap<> () ; try { camera.put ( com.eclipsesource.tabris.maps.MapPropertyHandler.PROP_POSITION, java.util.Arrays.asList ( target.latitude, target.longitude ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return camera; } 
@ java.lang.Override public boolean isFinished ( final org.springframework.http.client.ClientHttpResponse response ) throws java.io.IOException { final com.gooddata.dataset.TaskState taskState = extractData ( response, com.gooddata.dataset.TaskState.class ) ; try { if ( taskState.isSuccess () ) { return true; } else if ( ! ( taskState.isFinished () ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new com.gooddata.GoodDataException ( ( ( errorMessage + ": " ) + ( taskState.getMessage () ) ) ) ; } 
private java.lang.String getAllByIdJsonString ( java.lang.String _id ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb.append ( "{\"selector\": {" ) ; sb.append ( "\"_id\": {\"$gt\": 0}," ) ; try { sb.append ( ( ( "\"$and\": [{\"topicId\":\"" + _id ) + "\"}]" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sb.append ( "}}" ) ; return sb.toString () ; } 
public org.dama.datasynth.test.matching.EdgeTypePool<XType, YType>.Entry pickRandomEdgeX ( XType xvalue ) { java.util.ListIterator<org.dama.datasynth.test.matching.EdgeTypePool<XType, YType>.Entry> iterator = entries.listIterator () ; try { while ( iterator.hasNext () ) { org.dama.datasynth.test.matching.EdgeTypePool<XType, YType>.Entry entry = iterator.next () ; if ( ( entry.xvalue.compareTo ( xvalue ) ) == 0 ) { iterator.remove () ; return entry; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void moveNextPosition ( boolean smooth ) { if ( ( getRealAdapter () ) == null ) throw new java.lang.IllegalStateException ( "You did not set a slider adapter" ) ; try { mViewPager.setCurrentItem ( ( ( mViewPager.getCurrentItem () ) + 1 ) , smooth ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( mIsShuffle ) { setPagerTransformer ( true, getShuffleTransformer () ) ; } } 
protected int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this.lists.size () ; try { this.lists.add ( result, list ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
private void requestMoreAfterEmission ( int emitted ) { try { if ( emitted > 0 ) { rx.internal.operators.OperatorPublish.OriginSubscriber<T> origin = state.getOrigin () ; if ( origin != null ) { long r = origin.originOutstanding.addAndGet ( ( -emitted ) ) ; if ( r <= ( origin.THRESHOLD ) ) { origin.requestMore ( ( ( rx.internal.util.RxRingBuffer.SIZE ) - ( origin.THRESHOLD ) ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( ( fragment.getView () ) != null ) { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment.getView () .findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1.setText ( ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) + " G" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onRestoreInstanceState ( android.os.Parcelable state ) { try { if ( state instanceof com.gh4a.widget.EditorBottomSheet.SavedState ) { final com.gh4a.widget.EditorBottomSheet.SavedState ss = ( ( com.gh4a.widget.EditorBottomSheet.SavedState ) ( state ) ) ; super.onRestoreInstanceState ( ss.getSuperState () ) ; setAdvancedMode ( ss.isInAdvancedMode ) ; mBasicEditor.setText ( ss.commentText ) ; if ( ( mAdvancedEditor ) != null ) { mAdvancedEditor.setText ( ss.commentText ) ; } } else { super.onRestoreInstanceState ( state ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected boolean setupPort () { reader = new SimpleRead () ; reader.setCommPortId ( portNum ) ; try { reader.read () ; } catch ( Exception ex ) { ex.printStackTrace () ; } reader_thread = new java.lang.Thread ( reader ) ; reader_thread.run () ; if ( debug_messages ) java.lang.System.out.println ( "Port Setup Complete" ) ; return true; } 
public void update ( final com.jfixby.cmns.api.geometry.CanvasPosition position ) { this.position.set ( position ) ; try { this.white_bridge.setCenter ( this.position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.whiteL.setCenter ( this.position ) ; this.whiteR.setCenter ( this.position ) ; this.redAnus.setPosition ( this.position ) ; this.redCircle.setCenter ( this.position ) ; this.whiteSquare.setCenter ( this.position ) ; com.jfixby.cmns.api.collections.Collections.scanCollection ( this.touchAreas, this.touchAreasAligner ) ; } 
public void remove ( com.dd.dataTypes.bodyAreas.Item item ) throws com.dd.dataTypes.bodyAreas.InventoryException { try { if ( items.containsValue ( item ) ) { this.items.remove ( item.getName () ) ; } else { throw new com.dd.dataTypes.bodyAreas.InventoryException ( ( ( item.titleToString () ) + " is not in your inventory. " ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void addToBoundIntent ( android.content.Intent intent, android.app.IServiceConnection connection ) { com.lody.virtual.server.am.ServiceRecord.IntentBindRecord record = peekBinding ( intent ) ; try { if ( record == null ) { record = new com.lody.virtual.server.am.ServiceRecord.IntentBindRecord () ; record.intent = intent; synchronized ( bindings ) { bindings.add ( record ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } record.addConnection ( connection ) ; } 
public void addToppingToList ( android.view.View view ) { android.widget.Spinner topping = ( ( android.widget.Spinner ) ( findViewById ( R.id.sprAllToppings ) ) ) ; java.lang.String selectedTopping = java.lang.String.valueOf ( topping.getSelectedItem () ) ; list.add ( selectedTopping ) ; android.widget.Spinner sprPizzaToppings = ( ( android.widget.Spinner ) ( findViewById ( R.id.sprSelectedPizzaToppins ) ) ) ; android.widget.ArrayAdapter<java.lang.String> arrayAdapter = new android.widget.ArrayAdapter ( this, android.R.layout.simple_list_item_1, list ) ; arrayAdapter.setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; try { sprPizzaToppings.setAdapter ( arrayAdapter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void call ( java.lang.String s ) { try { if ( ! ( android.text.TextUtils.isEmpty ( s ) ) ) { if ( platform == ( me.shaohui.shareutil.share.SharePlatform.QZONE ) ) { shareToQZoneForMedia ( title, targetUrl, summary, s, activity, listener ) ; } else { shareToQQForMedia ( title, summary, targetUrl, s, activity, listener ) ; } } else { startFailed ( activity, listener, new java.lang.Exception ( "image fetch error" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.bukkit.event.EventHandler public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event.getPlayer () .getUniqueId () , event.getDungeon () , event.getTime () , event.getPlayer () .getLocation () ) ; try { plugin.getSessionManager () .addSession ( session ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addToView ( java.lang.String resource, org.reactome.web.diagram.data.interactors.model.DiagramInteractor interactor ) { uk.ac.ebi.pwp.structures.quadtree.client.QuadTree<org.reactome.web.diagram.data.interactors.model.DiagramInteractor> tree = interactorsTreeCache.get ( resource ) ; if ( tree == null ) { tree = new uk.ac.ebi.pwp.structures.quadtree.client.QuadTree ( minX, minY, maxX, maxY, org.reactome.web.diagram.data.InteractorsContent.NUMBER_OF_ELEMENTS, org.reactome.web.diagram.data.InteractorsContent.MIN_AREA ) ; interactorsTreeCache.put ( resource, tree ) ; } try { tree.add ( interactor ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean noCourseTwicePerDay ( classscheduling.Course c, classscheduling.Day day, classscheduling.GradeDay gd ) { try { if ( ( gd.count ( c.code ) ) > 1 ) { errors.add ( ( ( ( ( ( ( gd.grade.name () ) + ": too many " ) + ( c.name ) ) + " classes" ) + " on " ) + ( day.name ) ) ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void onAuthSuccess ( cz.kovar.petr.homevoice.zwave.ZWayProfile aProfile, retrofit2.Retrofit aAdaptor ) { android.util.Log.v ( cz.kovar.petr.homevoice.zwave.services.AuthService.LOG_TAG, "Auth success!" ) ; if ( mCancelEvent ) { return; } dataContext.clear () ; apiClient.init ( aProfile, aAdaptor, m_cloudCookie ) ; final java.util.List<cz.kovar.petr.homevoice.zwave.dataModel.Location> locations = loadLocation () ; try { dataContext.addLocations ( locations ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bus.post ( new cz.kovar.petr.homevoice.bus.events.AuthEvent.Success ( aProfile, aAdaptor ) ) ; } 
private void run ( java.lang.String fileName ) { try { printWelcomeMsg () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( tempRH.initialize ( fileName ) ) ; Tempo.Tempo.sc = new java.util.Scanner ( java.lang.System.in ) ; Tempo.Tempo.run = true; while ( Tempo.Tempo.run ) { java.util.ArrayList<java.lang.String> output = listenForInput () ; for ( java.lang.String line : output ) { java.lang.System.out.println ( line ) ; } } } 
public void onSwipeBottom () { try { if ( ( contains ( LevelArrays.MOVE_UP, currentLevel[y][x] ) ) && ( allowInput ) ) { ( y ) --; move () ; startAnimation ( 0, 0, 0, ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator.vibrate ( VIBRATE_SHORT ) ; } else { vibrator.vibrate ( VIBRATE_MEDIUM ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void bindPreferenceSummaryToValue ( android.preference.Preference preference ) { preference.setOnPreferenceChangeListener ( this ) ; java.lang.String key = preference.getKey () ; try { onPreferenceChange ( preference, android.preference.PreferenceManager.getDefaultSharedPreferences ( preference.getContext () ) .getString ( key, getString ( R.string.pref_snooze_default ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.util.List<com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler> retrieveHandlers ( boolean triggerOnPush, com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush, boolean skipWorkInProgressMergeRequest ) { java.util.List<com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler> result = new java.util.ArrayList<> () ; try { if ( triggerOnPush ) { result.add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result.add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result; } 
@ java.lang.Override public net.minecraft.util.ActionResult<net.minecraft.item.ItemStack> onItemRightClick ( net.minecraft.world.World worldIn, net.minecraft.entity.player.EntityPlayer player, net.minecraft.util.EnumHand hand ) { net.minecraft.item.ItemStack heldItem = player.getHeldItem ( hand ) ; try { if ( heldItem != ( net.minecraft.item.ItemStack.EMPTY ) ) { if ( com.legacy.aether.common.player.PlayerAether.get ( player ) .accessories.setInventoryAccessory ( heldItem.copy () ) ) { heldItem.shrink ( 1 ) ; return new net.minecraft.util.ActionResult<net.minecraft.item.ItemStack> ( net.minecraft.util.EnumActionResult.SUCCESS, heldItem ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return new net.minecraft.util.ActionResult<net.minecraft.item.ItemStack> ( net.minecraft.util.EnumActionResult.FAIL, heldItem ) ; } 
public void addLast ( Item item ) { if ( item == null ) throw new java.lang.NullPointerException ( "input data is null" ) ; Deque<Item>.Node add = new Node ( item ) ; try { if ( isEmpty () ) { left = add; right = add; } else { add.prev = right; right.next = add; right = add; } } catch ( Exception ex ) { ex.printStackTrace () ; } ( N ) ++; } 
private boolean matches ( java.lang.String oreDict ) { java.util.ArrayList<net.minecraft.item.ItemStack> listStacks = net.minecraftforge.oredict.OreDictionary.getOres ( oreDict ) ; try { for ( net.minecraft.item.ItemStack stack : listStacks ) { if ( ( net.minecraftforge.oredict.OreDictionary.itemMatches ( stack, input, false ) ) && ( ingredient.isItemEqual ( this.ingredient ) ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void jump () { int x = getX () ; int y = getY () ; try { gravity () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( ySpeed ) == 0 ) && ( checkCollision ( x, ( y + 2 ) , Main.level.getConstructs () ) ) ) { ySpeed = - ( environment.Constants.JUMP_HEIGHT ) ; } } 
@ org.junit.Test public void testAtLeastOneNegative4 () { try { java.lang.System.out.println ( "atLeastOneNegative" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int n1 = 0; int n2 = 0; int n3 = 0; int n4 = -7; boolean expResult = true; boolean result = second.FirstTasksSet.atLeastOneNegative ( n1, n2, n3, n4 ) ; org.junit.Assert.assertEquals ( expResult, result ) ; } 
public void process ( org.openstreetmap.osmosis.core.container.v0_6.WayContainer wayContainer ) { org.openstreetmap.osmosis.core.domain.v0_6.Way way; long wayId; flushNodes ( true ) ; try { way = wayContainer.getEntity () ; } catch ( Exception ex ) { ex.printStackTrace () ; } wayId = way.getId () ; if ( wayId >= ( maxWayId ) ) { maxWayId = wayId + 1; } if ( wayId < ( minWayId ) ) { minWayId = wayId; } wayBuffer.add ( way ) ; flushWays ( false ) ; } 
public boolean spawn ( int x1, int y1 ) { x = x1; y = y1; updateXSquares () ; updateYSquares () ; try { if ( canEnterAll ( x, y, true ) ) { enterAll ( x, y ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public org.aopalliance.aop.Advice getAdvice () { try { if ( ( interceptor ) == null ) { synchronized ( this ) { if ( ( interceptor ) == null ) { org.ironrhino.core.cache.CacheInterceptor temp = new org.ironrhino.core.cache.CacheInterceptor () ; org.ironrhino.core.cache.CacheManager cacheManager = ctx.getBean ( org.ironrhino.core.cache.CacheManager.class ) ; temp.setCacheManager ( cacheManager ) ; temp.setMutex ( mutex ) ; temp.setMutexWait ( mutexWait ) ; interceptor = temp; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return interceptor; } 
private com.jensen.boardgames.othello.model.player.OthelloPlayer randomPlayer () { if ( com.jensen.boardgames.othello.model.Othello.isGameOver ( this ) ) { return null; } try { currentPlayerIndex = new java.util.Random () .nextInt ( players.length ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setCurrentPlayer ( players[currentPlayerIndex] ) ; if ( ( com.jensen.boardgames.othello.model.Othello.getValidMoves ( this ) .length ) == 0 ) { nextPlayer () ; } return getCurrentPlayer () ; } 
public static void registerRecipes () { de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.tools.add ( new net.minecraft.item.ItemStack ( de.teamhug.GlacialEpoch.Registry.GE_ItemRegistry.itemHidesCutter ) ) ; de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.tools.add ( new net.minecraft.item.ItemStack ( de.teamhug.GlacialEpoch.Registry.GE_ItemRegistry.itemCuttingKnife ) ) ; try { de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.addRecipe ( new de.teamhug.GlacialEpoch.Util.GE_ButcherRecipe () .setInput ( new net.minecraft.item.ItemStack ( de.teamhug.GlacialEpoch.Registry.GE_ItemRegistry.itemCadaverCow ) ) .setTools ( de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.tools ) .addOutput ( new net.minecraft.item.ItemStack ( net.minecraft.init.Items.leather, 1, 1 ) ) .addOutput ( new net.minecraft.item.ItemStack ( net.minecraft.init.Items.beef, 6, 1 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "unused" ) private void storeDB ( java.sql.PreparedStatement ps, java.lang.String sample_id, int chr, int pos_index, byte[] pos_array, byte[] base_array ) throws java.sql.SQLException { ps.setQueryTimeout ( genome.ManageDB.SQLITE_TIMEOUT_SEC ) ; ps.setInt ( 1, pos_index ) ; ps.setString ( 2, sample_id ) ; try { ps.setBytes ( 3, pos_array ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ps.setBytes ( 4, base_array ) ; ps.executeUpdate () ; } 
public nl.tudelft.jpacman.Level nextLevel () { nl.tudelft.jpacman.Level level = makeLevel ( ( ++ ( currentLevel ) ) ) ; if ( level == null ) { level = makeLevel ( ( -- ( currentLevel ) ) ) ; } try { level.setIndex ( currentLevel ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return level; } 
@ java.lang.Override public java.lang.Void call () throws java.lang.Exception { try { gobblin.data.management.conversion.hive.validation.ValidationJob.log.debug ( java.lang.String.format ( "Going to execute queries: %s for format: %s", validationQueries, format ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<java.lang.Long> rowCounts = this.getValidationOutputFromHive ( validationQueries ) ; validateAndPopulateReport ( hiveDataset.getTable () .getCompleteName () , updateTime, rowCounts ) ; return null; } 
public boolean subtractFromRegistry ( int registryIndex, byte value ) { boolean borrow = false; int result = ( ( chip8.getRegisters () [registryIndex] ) & 255 ) - ( value & 255 ) ; if ( result < 0 ) { borrow = true; result = ( 255 - ( result * ( -1 ) ) ) + 1; } try { chip8.getRegisters () [registryIndex] = ( ( byte ) ( result ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return borrow; } 
void processPaths ( final java.util.List<java.lang.String> pdfPaths ) { try { for ( java.lang.String pdfPath : pdfPaths ) { java.io.File file = new java.io.File ( pdfPath ) ; if ( file.isDirectory () ) { baseDirectory = file.getAbsolutePath () ; processDir ( file ) ; } else { processFile ( file ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ ru.cscenter.Test public void remove () throws java.lang.Exception { assertFalse ( set.remove ( 10 ) ) ; assertFalse ( set.remove ( 10 ) ) ; assertTrue ( set.add ( 10 ) ) ; assertFalse ( set.add ( 10 ) ) ; try { assertTrue ( set.remove ( 10 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertFalse ( set.remove ( 10 ) ) ; assertTrue ( set.isEmpty () ) ; } 
public boolean loginAsUser ( java.lang.String username, java.lang.String password ) { capstat.model.User user = this.userLedger.getUserByNickname ( username ) ; if ( user == null ) return false; java.lang.String hashedPassword = capstat.model.Security.hashPassword ( password ) ; try { if ( hashedPassword.equals ( user.getHashedPassword () ) ) { this.capStat.setLoggedInUser ( user ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ com.smartsync.controller.RequestMapping ( method = RequestMethod.DELETE, value = "/{id}", produces = "application/json" ) public org.springframework.http.ResponseEntity deleteUser ( @com.smartsync.controller.PathVariable ( value = "id" ) java.lang.Long id ) { com.smartsync.model.User user = this.userService.deleteUser ( id ) ; if ( user == null ) { java.lang.String message = "Could not delete user with id: " + id; java.lang.String url = "/users/" + id; logger.error ( ( ( "Could not find user with id: " + id ) + " to delete" ) ) ; throw new com.smartsync.controller.UserNotFoundException ( message, url ) ; } try { logger.info ( ( "Successfully deleted user: " + user ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return org.springframework.http.ResponseEntity.ok ( user ) ; } 
public static org.springframework.web.servlet.ModelAndView getJsonPResponse ( boolean success, java.lang.Object message, java.lang.String callback, java.lang.String qId, long requestId ) { net.media.adserver.common.ApiResponse response = new net.media.adserver.common.ApiResponse ( true, message ) ; com.google.gson.JsonObject jsonObject = net.media.adserver.controller.util.JsonPResponse.GSON.toJsonTree ( response ) .getAsJsonObject () ; jsonObject.addProperty ( "qId", qId ) ; jsonObject.addProperty ( "requestId", requestId ) ; org.springframework.web.servlet.ModelAndView mv = new org.springframework.web.servlet.ModelAndView ( "ad_serving" ) ; mv.addObject ( "callback", callback ) ; try { mv.addObject ( "json", net.media.adserver.controller.util.JsonPResponse.GSON.toJson ( jsonObject ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return mv; } 
public static void main ( java.lang.String[] args ) { try { if ( ( args.length ) == 2 ) { java.lang.String firstValue = args[0]; java.lang.String secondValue = args[1]; } else if ( ( args.length ) == 0 ) { Leaderboard.getInformationDirectlyFromUser () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void selectMovie ( android.view.View view ) { try { if ( movieList.isEmpty () ) return; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( movieAdapter.mSelectedItem ) < 0 ) { return; } com.whatever.holidayspecial.Movie currentMovie = movieList.get ( movieAdapter.mSelectedItem ) ; android.content.Intent intent = new android.content.Intent ( this, com.whatever.holidayspecial.Screens.MainScreen.class ) ; intent.putExtra ( "SELECTED_MOVIE", currentMovie ) ; setResult ( com.whatever.holidayspecial.Screens.RESULT_OK, intent ) ; finish () ; } 
@ java.lang.Override public void onResponse ( okhttp3.Call call, okhttp3.Response response ) throws java.io.IOException { try { if ( ! ( response.isSuccessful () ) ) throw new java.io.IOException ( ( "Unexpected code " + response ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } loadedHtml = response.body () .string () ; parseHtmlTest ( loadedHtml ) ; } 
public static double getMaxPrice ( germes.utils.StockHistory history, germes.utils.StockBarPriceType priceType ) { try { switch ( priceType ) { case CLOSE: return germes.utils.TradeUtils.maxClosePrice ( history ) ; case LOW: return germes.utils.TradeUtils.maxMinPrice ( history ) ; case HIGH: return germes.utils.TradeUtils.maxMaxPrice ( history ) ; case OPEN: return germes.utils.TradeUtils.maxOpenPrice ( history ) ; default: throw new java.lang.UnsupportedOperationException ( "Unknown priceType type" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private net.minecraft.item.ItemStack getFirstStackHasBlock () { try { for ( int i = 0; i < ( inItems.getSlots () ) ; ++i ) { if ( ! ( inItems.getStackInSlot ( i ) .isEmpty () ) ) return inItems.getStackInSlot ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return net.minecraft.item.ItemStack.EMPTY; } 
@ javax.annotation.Nullable public java.lang.String getQueue ( co.cask.cdap.proto.Id.Namespace namespaceId ) { co.cask.cdap.proto.NamespaceMeta meta = store.getNamespace ( namespaceId ) ; try { if ( meta != null ) { co.cask.cdap.proto.NamespaceConfig config = meta.getConfig () ; return ( config.getSchedulerQueueName () ) != null ? config.getSchedulerQueueName () : getDefaultQueue () ; } else { return getDefaultQueue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPageSelected ( int position ) { final android.animation.Animator pageChangeAnimator = pageChangeAnimator ( lastKnownCurrentPage, position ) ; try { if ( ( ( scrollState ) == ( android.support.v4.view.ViewPager.SCROLL_STATE_IDLE ) ) && ( ( viewPager ) != null ) ) { refresh () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( pageChangeAnimator != null ) { pageChangeAnimator.start () ; } lastKnownCurrentPage = position; } 
private com.taskboard.main.Response addFloatingTask () { com.taskboard.main.Response responseForAddFloating = new com.taskboard.main.Response () ; java.lang.String taskName = getDetailFromParameter ( getNameParameter () ) ; java.lang.String priority = getDetailFromParameter ( getPriorityParameter () ) ; java.lang.String category = getDetailFromParameter ( getCategoryParameter () ) ; try { responseForAddFloating = processFloatingTaskForStorage ( taskName, priority, category ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return responseForAddFloating; } 
private com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015 getPaymentDateOfHouse ( com.my.hps.webapp.model.HpsHouse house ) { java.lang.String baseCode = house.getBaseCode () ; java.util.List<com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015> paymentDates = getPaymentDates () ; try { for ( com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015 paymentDate : paymentDates ) { if ( paymentDate.getBase () .getCode () .equals ( baseCode ) ) { return paymentDate; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public java.util.List<fr.iutvalence.info.dut.m2107.tiles.Tile> generateSurroundingTiles ( java.util.List<fr.iutvalence.info.dut.m2107.tiles.Tile> globalTiles, fr.iutvalence.info.dut.m2107.entities.Collider col ) { java.util.List<fr.iutvalence.info.dut.m2107.tiles.Tile> tiles = new java.util.ArrayList<fr.iutvalence.info.dut.m2107.tiles.Tile> () ; try { for ( fr.iutvalence.info.dut.m2107.tiles.Tile tile : globalTiles ) if ( ! ( isColliding ( col, tile ) ) ) tiles.add ( tile ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return tiles; } 
@ java.lang.Override public void commitWatermarks ( java.lang.Iterable<gobblin.source.extractor.CheckpointableWatermark> watermarks ) { java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata> wmToCommit = new java.util.HashMap<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata> () ; try { for ( gobblin.source.extractor.CheckpointableWatermark cwm : watermarks ) { com.google.common.base.Preconditions.checkArgument ( ( cwm instanceof gobblin.source.extractor.extract.kafka.KafkaSimpleStreamingExtractor.KafkaWatermark ) ) ; gobblin.source.extractor.extract.kafka.KafkaSimpleStreamingExtractor.KafkaWatermark kwm = ( ( gobblin.source.extractor.extract.kafka.KafkaSimpleStreamingExtractor.KafkaWatermark ) ( cwm ) ) ; wmToCommit.put ( kwm.getTopicPartition () , new org.apache.kafka.clients.consumer.OffsetAndMetadata ( kwm.getLwm () .getValue () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } _consumer.commitSync ( wmToCommit ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/accounts/login", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public gov.nist.hit.core.domain.ResponseMessage doNothing ( javax.servlet.http.HttpSession session ) { org.springframework.security.core.userdetails.User u = userService.getCurrentUser () ; try { if ( u != null ) { gov.nist.auth.hit.core.domain.Account a = accountService.findByTheAccountsUsername ( u.getUsername () ) ; if ( a != null ) { gov.nist.hit.core.api.SessionContext.setCurrentUserId ( session, a.getId () ) ; recordLastLoggedInDate ( a.getId () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return new gov.nist.hit.core.domain.ResponseMessage ( ResponseMessage.Type.success, "loginSuccess", "succes" ) ; } 
private java.util.List<com.amazonaws.services.cloudwatch.model.Datapoint> getResultMetricDatapoints ( java.lang.String strMeasureName, java.util.List<com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult> oResultList ) { try { for ( com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult oTmpResult : oResultList ) { if ( oTmpResult == null ) continue; if ( oTmpResult.getLabel () .equals ( strMeasureName ) ) return oTmpResult.getDatapoints () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.util.ArrayList<com.amazonaws.services.cloudwatch.model.Datapoint> () ; } 
@ org.junit.Test public void shouldReturnAtFitColumnTwoRowZeroOneTwoWithConfoundingFiVertical () { toFind = "fit"; char[][] toSearch = new char[][] { new char[] { 'x', 'f', 'f' }, new char[] { 'x', 'i', 'i' }, new char[] { 'x', 'x', 't' } }; com.paigeruppel.katas.wordsearch.WordSearch underTest = new com.paigeruppel.katas.wordsearch.WordSearch ( new com.paigeruppel.katas.wordsearch.LetterGrid ( toSearch ) ) ; try { org.junit.Assert.assertThat ( underTest.find ( toFind ) , org.hamcrest.Matchers.is ( "fit: ( 0,2 ) , ( 1,2 ) , ( 2,2 ) " ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void beginTransaction () throws java.sql.SQLException { try { if ( null == ( isSupportTransaction ) ) { isSupportTransaction = conn.getMetaData () .supportsTransactions () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( false == ( isSupportTransaction ) ) { throw new java.sql.SQLException ( "Transaction not supported for current database!" ) ; } conn.setAutoCommit ( false ) ; } 
private void showPrevCommandUp () { if ( ( commandHistory.size () ) == 0 ) { return; } try { if ( ( commandHistoryIndex ) == 0 ) { commandHistoryIndex = commandHistory.size () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( commandHistoryIndex ) > 0 ) { ( commandHistoryIndex ) --; } java.lang.String text = commandHistory.get ( commandHistoryIndex ) ; inputBox.setText ( text ) ; inputBox.positionCaret ( text.length () ) ; } 
@ java.lang.Override public boolean create ( POJO.User user ) throws java.sql.SQLException { stmt = connect.prepareStatement ( "INSERT INTO User ( pseudo, password, mail ) VALUES ( ?, ?, ? ) " ) ; stmt.setString ( 1, user.getPseudo () ) ; stmt.setString ( 2, user.getPassword () ) ; try { stmt.setString ( 3, user.getEmail () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } stmt.executeUpdate () ; stmt.close () ; return true; } 
public boolean find ( java.lang.String findWhat, boolean matchCase, boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat.isEmpty () ) ) return false; try { if ( updateMatcher ) { matcher = createMatcher ( findWhat, matchCase, wholeWord ) ; updateMatcher = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } boolean found = matcher.find () ; if ( found ) textPane.select ( matcher.start () , matcher.end () ) ; return found; } 
void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head; while ( ( ( temp.getValue () ) != pattern ) || ( temp != ( current ) ) ) { temp = temp.getNext () ; } try { if ( ( temp.getValue () ) == pattern ) { current = temp; } else { java.lang.System.out.println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handleEvent ( org.eclipse.swt.widgets.Event event ) { final org.eclipse.swt.widgets.Button btn = ( ( org.eclipse.swt.widgets.Button ) ( event.widget ) ) ; try { if ( btn.getData () .equals ( java.lang.Boolean.TRUE ) ) { if ( btn.getSelection () ) { if ( ! ( btn.getGrayed () ) ) { btn.setGrayed ( true ) ; } } else { if ( btn.getGrayed () ) { btn.setGrayed ( false ) ; btn.setSelection ( true ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = -1; sourceOrderDM.orderLatitude = taxiDriverLocation.getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation.getLongitude () ; try { sourceOrderDM.status = Constants.OrderStatus.InProgress.getValue () ; } catch ( Exception ex ) { ex.printStackTrace () ; } sourceOrderDM.taxiId = taxi.taxiId; sourceOrderDM.taxiPlate = taxi.plate; sourceOrderDM.driverPhone = phoneNumber; return sourceOrderDM; } 
private void insertOne ( java.lang.String name, Time time, int index ) { try { if ( index < ( ( times.length ) - 1 ) ) { insertOne ( names[index], times[index], ( index + 1 ) ) ; names[index] = name; times[index] = new Time ( time ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR, ignoreCancelled = true ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e.getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( e.getFrom () .getWorld () .getName () .equals ( e.getTo () .getWorld () .getName () ) ) return; try { if ( cfg.getBoolean ( "Configuration.Players.AddNightVision" ) ) p.removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( cfg.getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p.removePotionEffect ( PotionEffectType.INVISIBILITY ) ; } 
private java.lang.String getParameterValueWithContext ( org.talend.core.model.process.IElement elem, java.lang.String key, org.talend.core.model.process.IContext context, org.talend.core.model.process.IElementParameter basePropertyParameter ) { if ( ( elem == null ) || ( key == null ) ) { return ""; } java.lang.String actualKey = this.getParaNameFromRepositoryName ( elem, key, basePropertyParameter ) ; try { if ( actualKey != null ) { return fetchElementParameterValue ( elem, context, actualKey ) ; } else { return fetchElementParameterValue ( elem, context, key ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.ArrayList<org.apache.poi.openxml4j.opc.PackagePart> getPartsByRelationshipType ( java.lang.String relationshipType ) { if ( relationshipType == null ) throw new java.lang.IllegalArgumentException ( "relationshipType" ) ; java.util.ArrayList<org.apache.poi.openxml4j.opc.PackagePart> retArr = new java.util.ArrayList<org.apache.poi.openxml4j.opc.PackagePart> () ; for ( org.apache.poi.openxml4j.opc.PackageRelationship rel : getRelationshipsByType ( relationshipType ) ) { org.apache.poi.openxml4j.opc.PackagePart part = getPart ( rel ) ; if ( part != null ) { retArr.add ( part ) ; } } try { java.util.Collections.sort ( retArr ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return retArr; } 
@ java.lang.Override public void doFilter ( javax.servlet.ServletRequest request, javax.servlet.ServletResponse response, javax.servlet.FilterChain chain ) throws java.io.IOException, javax.servlet.ServletException { javax.servlet.http.HttpServletRequest req = ( ( javax.servlet.http.HttpServletRequest ) ( request ) ) ; javax.servlet.http.HttpServletResponse resp = ( ( javax.servlet.http.HttpServletResponse ) ( response ) ) ; req.setCharacterEncoding ( "UTF-8" ) ; try { resp.setCharacterEncoding ( "UTF-8" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } processor ( req, resp ) ; chain.doFilter ( request, response ) ; } 
@ java.lang.Override public boolean onCommand ( org.bukkit.command.CommandSender sender, org.bukkit.command.Command cmd, java.lang.String commandLabel, java.lang.String[] args ) { java.lang.String commandName = cmd.getName () .toLowerCase () ; try { if ( ! ( commandName.equalsIgnoreCase ( "bank" ) ) ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( args.length ) == 0 ) return false; return commandUtil.handleCommand ( sender, cmd, commandLabel, args, be.charybde.bank.BCC.commandDispatcher ) ; } 
private void loadRomFromZip ( java.lang.String zipName ) throws java.io.IOException { final java.lang.String romName = selectRomInZip ( listRomsInZip ( zipName ) ) ; try { if ( romName != null ) { final java.io.File extractedFile = extractRomFromZip ( zipName, romName ) ; if ( extractedFile != null ) { extractedFile.deleteOnExit () ; nes.loadROM ( extractedFile.getCanonicalPath () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String getFeedbackGuideInfo () { ui.list.swing.DisplayFormat.clearData () ; ui.list.swing.DisplayFormat.data.append ( ui.list.swing.DisplayFormat.HTML_OPEN ) ; try { ui.list.swing.DisplayFormat.data.append ( java.lang.String.format ( ui.list.swing.DisplayFormat.HTML_FONT_FEEDBACK_GUIDE_INFO, UserInterface.BTM.getLastFeedBack () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ui.list.swing.DisplayFormat.data.append ( ui.list.swing.DisplayFormat.HTML_CLOSE ) ; return ui.list.swing.DisplayFormat.data.toString () ; } 
@ java.lang.Override protected void onItemNotFound ( final org.bonitasoft.web.toolkit.client.data.APIID caseId ) { final org.bonitasoft.console.client.user.cases.action.OnCaseDetailsNotFound onCaseDetailsNotFound = new org.bonitasoft.console.client.user.cases.action.OnCaseDetailsNotFound () { @java.lang.Override protected void redirectToArchivedCaseMoredetails ( final java.lang.String archivedCaseId ) { com.google.gwt.user.client.History.newItem ( ( ( ( ( ( "?_p=" + ( ArchivedCaseMoreDetailsAdminPage.TOKEN ) ) + "&id=" ) + archivedCaseId ) + "&_pf=" ) + ( org.bonitasoft.web.toolkit.client.ClientApplicationURL.getProfileId () ) ) ) ; } }; try { onCaseDetailsNotFound.checkIfCaseIsArchived ( caseId.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override @org.junit.Before public void setUp () throws java.lang.Exception { super.setUp () ; try { unit.daos.template.QACategoryDAOTEST.superCategory1 = base.AbstractTestDataCreator.createCategory ( "Super1", null, "icon" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } unit.daos.template.QACategoryDAOTEST.superCategory2 = base.AbstractTestDataCreator.createCategory ( "Super2", null, "icon" ) ; unit.daos.template.QACategoryDAOTEST.subCategory1 = base.AbstractTestDataCreator.createCategory ( "Sub1", unit.daos.template.QACategoryDAOTEST.superCategory1, "icon" ) ; } 
public void testFetchLimitOffset () { siena.core.async.QueryAsync<siena.base.test.model.PersonUUID> query = queryPersonUUIDOrderBy ( "n", 0, false ) ; java.util.List<siena.base.test.model.PersonUUID> people = query.fetch ( 2, 1 ) ; assertNotNull ( people ) ; assertEquals ( 2, people.size () ) ; assertEquals ( siena.base.test.BaseAsyncTest.UUID_CURIE, people.get ( 0 ) ) ; try { assertEquals ( siena.base.test.BaseAsyncTest.UUID_EINSTEIN, people.get ( 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void display () throws java.io.IOException { java.io.File htmlFile = new java.io.File ( ( ( ( ( ( br.com.hammeredsoft.mailoff.util.MailOffConf.getWorkDir () ) + ( java.io.File.separator ) ) + ( br.com.hammeredsoft.mailoff.util.MailOffConf.getConfig ( MailOffConf.WEBROOT ) ) ) + ( java.io.File.separator ) ) + "index.html" ) ) ; try { java.awt.Desktop.getDesktop () .browse ( htmlFile.toURI () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void openMailSender ( no.runsafe.framework.api.player.IPlayer sender, no.runsafe.framework.api.player.IPlayer recipient ) { try { sender.sendColouredMessage ( ( ( "&3Sending mail will cost " + ( this.getMailCostText () ) ) + "." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } no.runsafe.framework.minecraft.inventory.RunsafeInventory inventory = server.createInventory ( null, 54, ( "Mail to " + ( recipient.getName () ) ) ) ; this.openSendAgents.put ( sender, new no.runsafe.mailbox.MailSendAgent ( recipient, inventory ) ) ; sender.openInventory ( inventory ) ; } 
public boolean containsAddress ( java.lang.String address ) { try { if ( ( this.address.size () ) != 0 ) { for ( int i = 0; i < ( this.address.size () ) ; i++ ) { if ( this.address.get ( i ) .equals ( address ) ) { return true; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public static void remove ( int index ) { TestListReferenceBased.Node ptr = TestListReferenceBased.head; TestListReferenceBased.Node nxt = TestListReferenceBased.head.getNext () ; for ( int x = 1; x < index; x++ ) { ptr = ptr.getNext () ; nxt = nxt.getNext () ; } try { ptr.setNext ( ptr.getNext () .getNext () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } nxt.setNext ( null ) ; } 
private void onGameOver ( android.graphics.Canvas canvas ) { try { canvas.drawText ( getContext () .getString ( R.string.game_over_text ) , ( ( startP_ ) + ( ( cellSize_ ) * 2.5F ) ) , ( ( startP_ ) + ( ( cellSize_ ) * 4.7F ) ) , noticePaint_ ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testHostsEmptyArray () { replay ( mockHostService ) ; com.sun.jersey.api.client.WebResource rs = resource () ; java.lang.String response = rs.path ( "hosts" ) .get ( java.lang.String.class ) ; try { org.junit.Assert.assertThat ( response, org.hamcrest.Matchers.is ( "{\"hosts\":[]}" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void fireProjectile ( float angle, float xPos, float yPos ) { try { projectileSprite.setRotation ( ( -angle ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } new com.github.houkagoteatime.LD36.weapons.GateOfBabylon.SwordProjectile ( projectileSprite, owner.getDamage () , xPos, yPos, angle, range, friendly ) .spawn ( level ) ; } 
@ java.lang.Override public void updateItem ( model.Event event, boolean empty ) { super.updateItem ( event, empty ) ; try { if ( event != null ) { data = new gui.EventCell.EventData () ; data.setEvent ( event ) ; setGraphic ( data.getBox () ) ; } else { setGraphic ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.lang.String getName ( org.jetbrains.plugins.cucumber.java.run.Scenario scenario ) { try { if ( scenario.getKeyword () .equals ( "Scenario Outline" ) ) { return escape ( ( "Scenario: Line: " + ( scenario.getLine () ) ) ) ; } else { return escape ( ( "Scenario: " + ( scenario.getName () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void show ( android.app.Activity activity, chi_software.citybase.ui.dialog.SearchDialog.GetSpinnerListener getSpinnerListener, chi_software.citybase.data.menuSearch.MenuSearch menuSearch, java.util.List<java.lang.String> mTypeSelected, java.util.List<java.lang.String> mAreaSelected, java.util.List<java.lang.String> mPunktSelected ) { this.mTypeSelected = mTypeSelected; this.mPunktSelected = mPunktSelected; this.mAreaSelected = mAreaSelected; try { getListener ( getSpinnerListener, menuSearch ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } show ( activity.getFragmentManager () , "Поиск" ) ; } 
@ java.lang.Override public void setVertexBuffer () { try { if ( vertices.isEmpty () ) setBuffer ( Type.Position, 3, new float[] { 0, 0, 0 } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.jme3.math.Vector3f[] arrvertices = new com.jme3.math.Vector3f[vertices.size () ]; vertices.toArray ( arrvertices ) ; setBuffer ( Type.Position, 3, com.jme3.util.BufferUtils.createFloatBuffer ( arrvertices ) ) ; } 
public void onFalse ( android.view.View view ) { try { if ( ! ( IS_PRIME ) ) { android.widget.Toast.makeText ( this, "Your answer is correct!", Toast.LENGTH_SHORT ) .show () ; numberDisplay.setTextColor ( android.graphics.Color.parseColor ( "#FF99CC00" ) ) ; } else { android.widget.Toast.makeText ( this, "Your answer is incorrect!", Toast.LENGTH_SHORT ) .show () ; numberDisplay.setTextColor ( android.graphics.Color.parseColor ( "#FFD50000" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void hierarchySetUp ( org.opennms.netmgt.model.topology.Bridge root ) { if ( root.isRootBridge () ) return; root.setRootBridge ( true ) ; try { root.setRootPort ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( m_bridges.size () ) == 1 ) return; for ( org.opennms.netmgt.model.topology.SharedSegment segment : getSharedSegmentOnTopologyForBridge ( root.getId () ) ) { segment.setDesignatedBridge ( root.getId () ) ; tier ( segment, root.getId () , 0 ) ; } } 
public void insert ( int element ) { this.Heap[ ( ( this.size ) ++ ) ] = element; int current = ( this.size ) - 1; try { while ( ( this.Heap[current] ) > ( this.Heap[this.parent ( current ) ] ) ) { this.swap ( current, this.parent ( current ) ) ; current = this.parent ( current ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemClick ( com.orhanobut.dialogplus.DialogPlus dialog, java.lang.Object item, android.view.View view, int position ) { helper.placeCardInBoxInBackground ( adapter.getList () .get ( boxListPosition ) .getUserId () , cards.get ( position ) .getImageRef () ) ; try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container, int position ) { android.view.View itemView; try { if ( ( mResources.length ) > 0 ) { itemView = mLayoutInflater.inflate ( R.layout.problem_images_view_pager_item, container, false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView.findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources[position], container.getContext () , problemImageView ) ; container.addView ( itemView ) ; return itemView; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void moveLeft ( int t ) { fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment[t]; globalVar -= eLost.getVar () ; try { eLost.removeOneFrame ( frames[t] ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } globalVar += eLost.getVar () ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eGain = alignment[ ( t + 1 ) ]; globalVar -= eGain.getVar () ; eGain.updateOneFrame ( frames[t] ) ; globalVar += eGain.getVar () ; alignment[t] = alignment[ ( t + 1 ) ]; } 
public void setGlobalPosition ( engine.math.Vector2i position ) { if ( ( parent ) == null ) { this.position = position; return; } try { this.position = position.sub ( parent.getGlobalPosition () ) .rotateBy ( ( - ( parent.getRotation () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void bindData () { android.support.design.widget.NavigationView navigationView = ( ( android.support.design.widget.NavigationView ) ( findViewById ( R.id.activity_main_drawer_navigation ) ) ) ; try { if ( ( navigationView.getHeaderView ( 0 ) ) == null ) { android.view.View headerView = getLayoutInflater () .inflate ( R.layout.navigation_header, navigationView, false ) ; navigationView.addHeaderView ( headerView ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( navigationView.getHeaderView ( 0 ) ) != null ) { android.view.View headerView = navigationView.getHeaderView ( 0 ) ; if ( com.appcliente.wegest.WebViewAppConfig.NAVIGATION_DRAWER_HEADER_IMAGE ) { } } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { final org.datacleaner.configuration.DataCleanerConfigurationImpl configuration = new org.datacleaner.configuration.DataCleanerConfigurationImpl ( _configuration ) .withEnvironment ( new org.datacleaner.configuration.DataCleanerEnvironmentImpl ( _configuration.getEnvironment () ) .withTaskRunner ( new org.datacleaner.job.concurrent.SingleThreadedTaskRunner () ) ) ; final org.datacleaner.job.AnalysisJob jobCopy = _analysisJobBuilder.toAnalysisJob ( false ) ; final org.datacleaner.job.builder.AnalysisJobBuilder jobBuilderCopy = new org.datacleaner.job.builder.AnalysisJobBuilder ( configuration, jobCopy ) ; try { execute ( jobBuilderCopy ) .actionPerformed ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.ArrayList<java.lang.String> getCategories ( java.util.ArrayList<com.fromdev.android.entity.Question> questionList ) { java.util.ArrayList<java.lang.String> mCNameList = new java.util.ArrayList<> () ; try { for ( int i = 0; ( questionList != null ) && ( i < ( questionList.size () ) ) ; i++ ) { if ( ! ( mCNameList.contains ( questionList.get ( i ) .getCategory () ) ) ) mCNameList.add ( questionList.get ( i ) .getCategory () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return mCNameList; } 
@ org.junit.Test public void test2 () { com.amazon.speech.speechlet.Session session = com.amazon.speech.speechlet.Session.builder () .withSessionId ( "session" ) .build () ; session.setAttribute ( CricketSpeechlet.START_KEY, 0 ) ; com.amazon.speech.speechlet.SpeechletResponse result = new cricketskill.CricketSpeechlet ( com.amazonaws.Protocol.HTTPS ) .getCurrentScoreResponse ( session ) ; try { java.lang.System.out.println ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void addGraphCode ( java.util.HashMap<java.lang.String, java.lang.String> items ) { try { for ( int i = 0; i < ( codeGetters.size () ) ; i++ ) { sb.append ( codeGetters.get ( i ) .getCode ( items ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.view_pager ) ; be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter mSectionsPagerAdapter = new be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter ( getSupportFragmentManager () ) ; android.support.v4.view.ViewPager mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.pager ) ) ) ; mViewPager.setAdapter ( mSectionsPagerAdapter ) ; int currentIndex = getIntent () .getIntExtra ( "monsterNameIndex", 0 ) ; mViewPager.setCurrentItem ( currentIndex ) ; } 
@ org.junit.Test public void testFunction () throws java.lang.Exception { try { function.setArguments ( arguments ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } function.run ( new org.dedda.bratwurst.lang.Scope () ) ; assertEquals ( expectedValue.getValueType () , function.getValueType () ) ; assertEquals ( expectedValue.getIntValue () , function.getIntValue () ) ; } 
@ java.lang.Override public int skip ( int size ) throws java.io.IOException { byte[] temp = new byte[java.lang.Math.min ( org.verapdf.cos.filters.BF_BUFFER_SIZE, size ) ]; int skipped = 0; try { while ( skipped != size ) { int read = this.read ( temp, java.lang.Math.min ( ( size - skipped ) , org.verapdf.cos.filters.BF_BUFFER_SIZE ) ) ; if ( read == ( -1 ) ) { return skipped; } else { skipped += read; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return skipped; } 
public void setLatestItem ( Item item ) { try { if ( item != null ) { if ( ( this.item ) == null ) { this.item = item; } else { if ( ( this.item.getVersion () ) < ( item.getVersion () ) ) { this.item = item; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } this.incrementCounter () ; } 
public static void main ( java.lang.String[] args ) { int[] a = new int[] { 3, 2, 3, 2, 4, 1, 5, 4, 4, 3, 3, 3, 3, 3, 3 }; try { java.lang.System.out.println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf.find ( a ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf.findByAnAlternativeWay ( a ) ) ; } 
@ java.lang.Override public android.graphics.Bitmap transform ( android.graphics.Bitmap source ) { int y = ( source.getHeight () ) / 5; int x = 0; android.graphics.Bitmap result = android.graphics.Bitmap.createBitmap ( source, x, y, source.getWidth () , ( ( ( source.getHeight () ) * 3 ) / 5 ) ) ; try { if ( result != source ) { source.recycle () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public void onGetLocationStatus ( java.lang.Boolean status, java.lang.String message ) { try { if ( status ) { org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.getInstance () .startIndoorOutdoorDetector ( this, this ) ; toggleIndoorOutdoorButtonStatus ( true ) ; } else { org.mygeotrust.indoor.utils.dialogue.Dialogs.getInstance () .showInfoDialog ( this, " Cannot start indoor/outdoor Detector.", ( ( ( " GPS use Status: " + status ) + "\n Error: " ) + message ) , R.drawable.ic_warning, R.color.colorRed ) ; toggleIndoorOutdoorButtonStatus ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static javax.swing.JLabel createJLabel ( java.lang.String label, int fontSize, boolean border ) { javax.swing.JLabel comp = new javax.swing.JLabel ( label ) ; com.tri.pgs.client.surface.ui.UISystem.init ( comp, border, true ) ; try { comp.setFont ( new java.awt.Font ( java.awt.Font.SANS_SERIF, java.awt.Font.BOLD, fontSize ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return comp; } 
public void nextBuffer () { if ( ( buf ) == null ) buf = state.buffer () ; else buf = state.pushBuffer () ; try { heapArr = ( buf.isDirect () ) ? null : buf.array () ; } catch ( Exception ex ) { ex.printStackTrace () ; } baseOff = ( buf.isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) .address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.bShare: android.content.Intent shareIntent = new android.content.Intent ( this, com.example.elazaoui.projet.Share.class ) ; startActivity ( shareIntent ) ; break; case R.id.bSearch: android.content.Intent searchIntent = new android.content.Intent ( this, com.example.elazaoui.projet.Search.class ) ; startActivity ( searchIntent ) ; break; case R.id.bLogout: userLocalStore.clearUserData () ; userLocalStore.setUserLoggedIn ( false ) ; android.content.Intent logoutIntent = new android.content.Intent ( this, com.example.elazaoui.projet.Login.class ) ; startActivity ( logoutIntent ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected byte[] convertBytes ( java.util.ArrayList<java.lang.Integer> list ) { if ( list == null ) return null; byte[] ret = new byte[list.size () ]; java.util.Iterator<java.lang.Integer> iterator = list.iterator () ; try { for ( int i = 0; i < ( ret.length ) ; i++ ) { ret[i] = iterator.next () .byteValue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ret; } 
@ java.lang.Override public void removeAllTask () { for ( java.lang.String key : mExecutePool.getAllTask () .keySet () ) { TASK task = mExecutePool.getAllTask () .get ( key ) ; if ( task != null ) task.cancel () ; } try { for ( java.lang.String key : mCachePool.getAllTask () .keySet () ) { mCachePool.removeTask ( key ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public double averagePopulation () { double average; long total = 0; try { for ( int i = 0; i < ( population.size () ) ; i++ ) { total += population.get ( i ) .getEvaluation () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } average = total / ( population.size () ) ; return average; } 
public gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List<gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship> ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection.getValue () ; try { for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER.getRelationshipType () .getName () .equals ( relationshipTypeName ) ) { return ittrIER; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private static void getRidOfPassedCheckpointsNear ( Player.Buster buster ) { java.util.List<Player.Agent> tbd = new java.util.ArrayList<Player.Agent> () ; for ( Player.Agent point : Player.checkpoints ) { if ( ( buster.distanceTo ( point ) ) < ( Player.RADAR_DISTANCE ) ) { tbd.add ( point ) ; } } try { Player.checkpoints.removeAll ( tbd ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void changeLane ( int carIndex ) { Car car = cars.get ( carIndex ) ; cars.remove ( carIndex ) ; try { numCars = cars.size () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.print ( ( ( ( ( "Lane " + ( laneIndex ) ) + " has " ) + ( numCars ) ) + " cars after one left." ) ) ; TrafficSimulator.lanes.get ( newLaneIndex ) .addCar ( car, ( ( laneIndex ) - ( newLaneIndex ) ) ) ; } 
public void onResume () { if ( ! ( didShowLoadingState ) ) { maximFeed.showLoadingState () ; didShowLoadingState = true; } try { maximManager.loadMaxims ( context, new com.tcolligan.maximmaker.data.MaximManager.MaximsLoadedListener () { @java.lang.Override public void onMaximsLoaded ( java.util.List<com.tcolligan.maximmaker.data.Maxim> loadedMaximList ) { showMaxims ( loadedMaximList ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public byte[] get ( java.lang.String key, boolean renew ) { net.vicp.lylab.core.model.CacheValue cv = getContainer () .get ( key ) ; if ( cv == null ) return null; if ( ( cv.getValidateTime () ) < ( ( java.lang.System.currentTimeMillis () ) - ( cv.getStartTime () ) ) ) { remove ( key, cv ) ; return null; } try { if ( renew ) cv.renewStartTime () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return cv.getValue () ; } 
public void afterTextChanged ( android.text.Editable editable ) { try { switch ( view.getId () ) { case R.id.input_namer: validateName () ; break; case R.id.input_emailr: validateEmail () ; break; case R.id.input_phoner: validatePhone () ; validateEmail () ; break; case R.id.input_passwordr: validatePassword () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void whenSomePlayerWinByDiagonalShouldCheckThatCheckerReturnTrue () { model.WinChecker checker = new model.WinChecker () ; model.Board board = new model.Board () ; model.Player player = new model.Human ( "X" ) ; board.performStep ( player, 0, 0 ) ; try { board.performStep ( player, 1, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } board.performStep ( player, 2, 2 ) ; boolean actual = checker.isWinner ( player, board ) ; assertThat ( actual, org.hamcrest.core.Is.is ( true ) ) ; } 
public int findNodeNumber ( int key ) { edu.oakland.production.ClassProject.Database.Node focusNode = this.binaryTreeDatabase.getRootNode () ; int nodeCount = 0; try { while ( ( focusNode.getKey () ) != key ) { if ( key < ( focusNode.getKey () ) ) { focusNode = focusNode.leftChild; } else { focusNode = focusNode.rightChild; } if ( focusNode == null ) return nodeCount++; nodeCount++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return nodeCount++; } 
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source, java.lang.Class<?> targetClass, io.beanmapper.core.BeanFieldMatch beanFieldMatch ) { try { if ( ( ( source == null ) || ( source.getClass () .equals ( targetClass ) ) ) || ( ( beanFieldMatch != null ) && ( beanFieldMatch.getSourceClass () .equals ( targetClass ) ) ) ) { return source; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Object sourceAsString = beanMapper.convert ( source, java.lang.String.class, beanFieldMatch ) ; return beanMapper.convert ( sourceAsString, targetClass, beanFieldMatch ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_todo ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.preference.PreferenceManager.setDefaultValues ( this, R.xml.preferences, false ) ; if ( savedInstanceState == null ) { fragment = com.codepath.todoapp.fragments.TodoFragment.newInstatnce () ; getFragmentManager () .beginTransaction () .replace ( R.id.fListContainer, fragment, "todo" ) .addToBackStack ( "todo" ) .commit () ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { if ( requestCode == ( MUSIC_LIST_VIEW_REQUEST ) ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { currentSong = data.getIntExtra ( "position", 1 ) ; playSong () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean needsRefresh () { boolean needsRefresh; this.refreshLock.readLock () .lock () ; try { if ( ( this.expires ) < 0 ) { needsRefresh = false; } else { long now = java.lang.System.currentTimeMillis () ; long tokenDuration = now - ( this.lastRefresh ) ; needsRefresh = tokenDuration >= ( ( this.expires ) - ( com.box.sdk.BoxAPIConnection.REFRESH_EPSILON ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.refreshLock.readLock () .unlock () ; return needsRefresh; } 
private java.lang.String setEndOfLevel ( int numLives ) { pp.startGame ( level.getLevel () ) ; bg.setBackgroundImage ( bg.getBackGroundImageFileName () ) ; if ( ( this.count ) > 0 ) bg.getNextBackGroundImageFileName () ; msg.setGameStart ( level.getLevel () , level.getLives () ) ; try { level.newLevel ( numLives ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "Level Finished"; } 
public void startDownloads () { try { vandy.mooc.utils.Utils.hideKeyboard ( mActivity.get () , mUrlEditText.getWindowToken () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( mUrlList.isEmpty () ) vandy.mooc.utils.Utils.showToast ( mActivity.get () , "no images provided" ) ; else { mLoadingProgressBar.setVisibility ( View.VISIBLE ) ; for ( java.lang.String urlString : mUrlList ) startDownload ( android.net.Uri.parse ( urlString ) ) ; } } 
private int addChildNodes ( tellh.com.recyclertreeview_lib.TreeNode pNode, int startIndex ) { java.util.List<tellh.com.recyclertreeview_lib.TreeNode> childList = pNode.getChildList () ; int addChildCount = 0; for ( tellh.com.recyclertreeview_lib.TreeNode treeNode : childList ) { displayNodes.add ( ( startIndex + ( addChildCount++ ) ) , treeNode ) ; if ( treeNode.isExpand () ) { addChildCount += addChildNodes ( treeNode, ( startIndex + addChildCount ) ) ; } } try { if ( ! ( pNode.isExpand () ) ) pNode.toggle () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return addChildCount; } 
@ java.lang.Override public void execute ( backtype.storm.tuple.Tuple tuple ) { java.lang.String ChannelCode = tuple.getStringByField ( "channelCode" ) ; long timeStamp = tuple.getLongByField ( "timeStamp" ) ; float value = tuple.getFloatByField ( "value" ) ; try { if ( channelSet.contains ( ChannelCode ) ) { if ( isFirst ) { getQueryMap.setFirstTimestamp ( timeStamp ) ; isFirst = false; } _collector.emit ( new backtype.storm.tuple.Values ( ChannelCode, timeStamp, value ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public javax.json.JsonStructure getEventDistrictPoints ( java.lang.String eventKey, int verboseLevel ) { javax.json.JsonStructure data = get ( ( ( "event/" + eventKey ) + "/district_points" ) , header ) ; try { if ( ( data != null ) && ( verboseLevel < 2 ) ) { data = ( ( javax.json.JsonStructure ) ( ( ( javax.json.JsonObject ) ( data ) ) .get ( "points" ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return data; } 
private void validateCommand ( org.spine3.examples.todolist.UpdateTaskDescription cmd ) { java.lang.String description = cmd.getUpdatedDescription () ; try { com.google.common.base.Preconditions.checkNotNull ( description, "Description cannot be null." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( description.length () ) < 3 ) { throw new java.lang.IllegalArgumentException ( "Description should contains at least 3 alphanumeric symbols." ) ; } validateCommandOnDeletionAndCompletion () ; } 
public static java.util.List<fr.inria.spirals.jtravis.entities.Build> getBuildsFromRepositoryWithLimitDate ( fr.inria.spirals.jtravis.entities.Repository repository, java.util.Date limitDate ) { java.util.List<fr.inria.spirals.jtravis.entities.Build> result = new java.util.ArrayList<fr.inria.spirals.jtravis.entities.Build> () ; fr.inria.spirals.jtravis.helpers.BuildHelper.getBuildsFromSlugRecursively ( repository.getSlug () , result, limitDate, 0, fr.inria.spirals.jtravis.helpers.BuildHelper.getEventTypes () , 0, null, ( -1 ) , false, null ) ; try { for ( fr.inria.spirals.jtravis.entities.Build b : result ) { b.setRepository ( repository ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife.bind ( this ) ; try { setSupportActionBar ( toolbar ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } connectionService = com.northghost.caketube.AFConnectionService.newBuilder ( this ) .addConnectionCallbacksListener ( this ) .addVPNConnectionStateListener ( this ) .build () ; } 
@ org.junit.Test ( expected = io.minio.InvalidAclNameException.class ) public void testSetNullAclFails () throws io.minio.MinioException, java.io.IOException, java.security.InvalidKeyException, java.security.NoSuchAlgorithmException, org.xmlpull.v1.XmlPullParserException { com.squareup.okhttp.mockwebserver.MockWebServer server = new com.squareup.okhttp.mockwebserver.MockWebServer () ; com.squareup.okhttp.mockwebserver.MockResponse response = new com.squareup.okhttp.mockwebserver.MockResponse () ; response.addHeader ( "Date", "Sun, 29 Jun 2015 22:01:10 GMT" ) ; response.setResponseCode ( 200 ) ; server.enqueue ( response ) ; try { server.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } io.minio.MinioClient client = new io.minio.MinioClient ( server.url ( "" ) ) ; client.makeBucket ( "bucket" ) ; client.setBucketAcl ( "bucket", null ) ; throw new java.lang.RuntimeException ( "Expected exception did not fire" ) ; } 
@ org.junit.Test public void containsValueShouldFindInstance () { io.netty.util.collection.IntObjectHashMapTest.Value v = new io.netty.util.collection.IntObjectHashMapTest.Value ( "v1" ) ; map.put ( 1, new io.netty.util.collection.IntObjectHashMapTest.Value ( "v2" ) ) ; try { map.put ( 2, new io.netty.util.collection.IntObjectHashMapTest.Value ( "v3" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } map.put ( 3, v ) ; assertTrue ( map.containsValue ( v ) ) ; } 
protected void setObsData () { obsData.get ( 0 ) .setYValue ( javaTime ) ; obsData.get ( 1 ) .setYValue ( cTime ) ; try { obsData.get ( 2 ) .setYValue ( pythonTime ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } obsData.get ( 3 ) .setYValue ( cybobTime ) ; } 
public void addDeadDenLocation ( viperinos.MapLocation den ) { viperinos.MapLocation[] temp = new viperinos.MapLocation[ ( deadDens.length ) + 1]; try { java.lang.System.arraycopy ( deadDens, 0, temp, 0, deadDens.length ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } temp[deadDens.length] = den; deadDens = temp; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map ) ; butterknife.ButterKnife.bind ( this ) ; mMapView.onCreate ( savedInstanceState ) ; setupMap () ; mMapHelper = new com.mredrock.cyxbs.util.MapHelper ( this, mHandler ) ; try { mMapHelper.readMapPictureFromCache () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String readRequestFile ( java.lang.String fileName ) throws java.lang.Exception { java.io.InputStream is = new java.io.FileInputStream ( fileName ) ; java.io.BufferedReader buf = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.String line = buf.readLine () ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try { while ( line != null ) { sb.append ( line ) ; line = buf.readLine () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return sb.toString () ; } 
@ org.junit.Test public void selectWeek_verifyWeekAndHymnListingsAppear () { try { playHymnsPage.clickOnDropdown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.openqa.selenium.support.ui.WebDriverWait waitForWeek = new org.openqa.selenium.support.ui.WebDriverWait ( driver, 1 ) ; org.openqa.selenium.WebElement week = waitForWeek.until ( org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable ( org.openqa.selenium.By.className ( "week" ) ) ) ; week.click () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { boolean checked = ( ( android.widget.RadioButton ) ( view ) ) .isChecked () ; try { switch ( view.getId () ) { case R.id.wsgh_yes_rb: if ( checked ) wsghSpinnerRl.setVisibility ( View.GONE ) ; break; case R.id.wsgh_someoneelse_rb: if ( checked ) wsghSpinnerRl.setVisibility ( View.VISIBLE ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( DEBUG ) android.util.Log.d ( org.pyneo.tabulae.TAG, "Tabulae.onResume" ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; for ( org.pyneo.tabulae.Base b : fragments ) { android.app.FragmentTransaction tx = fragmentManager.beginTransaction () ; tx.add ( R.id.tabulae, b, b.getClass () .getSimpleName () ) ; tx.commit () ; } } 
private void addContents () { try { for ( com.ihasama.ohtu.domain.Reference ref : dao.getObjects () ) { javax.swing.JLabel label = new javax.swing.JLabel ( ref.getId () ) ; add ( label ) ; add ( new javax.swing.JButton ( new com.ihasama.ohtu.ui.ReferenceList.EditReferenceAction ( "edit", dao, ref ) ) , "wrap" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void bleCharacteristicRead ( java.lang.String address, java.lang.String uuid, int status, byte[] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; try { intent.putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR, address ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } intent.putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID, uuid ) ; intent.putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS, status ) ; intent.putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE, value ) ; sendBroadcast ( intent ) ; requestProcessed ( address, RequestType.READ_CHARACTERISTIC, true ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.widget.TextView tvInfo = ( ( android.widget.TextView ) ( findViewById ( R.id.app_info ) ) ) ; tvInfo.setText ( getString ( R.string.app_info ) ) ; mHelper = new com.bjlanza.udacity.bj_habittracker.HabitDbHelper ( this ) ; db = mHelper.getWritableDatabase () ; insertData ( "Walking Dog", "21", "Pets" ) ; insertData ( "Programming one hour per day", "15", "Study" ) ; getData () ; try { deleteTable () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setCharacteristicNotification ( android.bluetooth.BluetoothGattCharacteristic characteristic, boolean enabled ) { com.eveningoutpost.dexdrip.Models.UserError.Log.i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG, "Characteristic setting notification" ) ; try { if ( ( mBluetoothGatt ) != null ) { mBluetoothGatt.setCharacteristicNotification ( characteristic, enabled ) ; android.bluetooth.BluetoothGattDescriptor descriptor = characteristic.getDescriptor ( java.util.UUID.fromString ( HM10Attributes.CLIENT_CHARACTERISTIC_CONFIG ) ) ; com.eveningoutpost.dexdrip.Models.UserError.Log.i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG, ( "Descriptor found: " + ( descriptor.getUuid () ) ) ) ; descriptor.setValue ( BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE ) ; mBluetoothGatt.writeDescriptor ( descriptor ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static <K, V> java.lang.Iterable<java.util.Map.Entry<K, V>> makeIterable ( final java.util.Map<K, V> map ) { try { if ( ( map == null ) || ( map.isEmpty () ) ) { return ovation.odata.util.CollectionUtils.makeEmptyIterable () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ovation.odata.util.CollectionUtils.makeIterable ( map.entrySet () ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/get-menus", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.http.ResponseEntity<?> getMenus () { try { com.FoodCourtServer.controller.MenuController.LOGGER.info ( "fetching menus" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<com.FoodCourtServer.model.Menu> menus = menuService.getMenus () ; if ( menus.isEmpty () ) { com.FoodCourtServer.controller.MenuController.LOGGER.error ( "menus not found" ) ; return new org.springframework.http.ResponseEntity ( new com.FoodCourtServer.util.CustomErrorType ( "menus not found" ) , org.springframework.http.HttpStatus.NOT_FOUND ) ; } return new org.springframework.http.ResponseEntity ( menus, org.springframework.http.HttpStatus.OK ) ; } 
public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil.hasContent ( spec.getTypes () ) ) ) return; try { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec.getTypes () .values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter.toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil.hasContent ( enumEntry.getValues () ) ) { processTemplate ( enumEntry, "TypedefEnum.ftl", outputStream ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setMaterial ( org.gearvrf.GVRMaterial material, int passIndex ) { try { if ( passIndex < ( mRenderPassList.size () ) ) { mRenderPassList.get ( passIndex ) .setMaterial ( material ) ; } else { android.util.Log.e ( org.gearvrf.GVRRenderData.TAG, ( ( "Trying to set material from invalid pass. Pass " + passIndex ) + " was not created." ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void sendMessage () { try { if ( ! ( MessageSend.getText () .equals ( "" ) ) ) { java.lang.String message = MessageSend.getText () .trim () ; MessageSend.setText ( "" ) ; homebase.sendMessage ( buddyName, message ) ; addMessage ( message, homebase.getClient () .getCurrentUsername () , false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean equals ( com.magnet.mmx.protocol.MMXTopic topic ) { if ( topic == ( this ) ) return true; try { if ( ( topic == null ) || ( ( ( getUserId () ) == null ) ^ ( ( topic.getUserId () ) == null ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( mUserId ) != null ) && ( ! ( mUserId.equalsIgnoreCase ( topic.getUserId () ) ) ) ) return false; return mTopic.equalsIgnoreCase ( topic.getName () ) ; } 
@ org.junit.Test public void lowSpecificityShouldFollowHigherSpecificity () { subject = new uk.ac.ebi.atlas.model.experiment.differential.DifferentialProfileComparator ( true, allContrasts, allContrasts, Regulation.UP ) ; org.mockito.Mockito.when ( profileMock1.getSpecificity ( Regulation.UP ) ) .thenReturn ( 1 ) ; org.mockito.Mockito.when ( profileMock2.getSpecificity ( Regulation.UP ) ) .thenReturn ( 2 ) ; int comparison = subject.compare ( profileMock1, profileMock2 ) ; try { org.hamcrest.MatcherAssert.assertThat ( comparison, org.hamcrest.Matchers.lessThan ( 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void updateClient ( com.robrit.moofluids.common.entity.EntityFluidCow fluidCow, long worldTime ) { net.minecraft.nbt.NBTTagCompound tag = fluidCow.getEntityData () ; if ( ( tag.hasKey ( "rfc:nextUpdate" ) ) && ( ( tag.getLong ( "rfc:nextUpdate" ) ) > worldTime ) ) { return; } com.jdlogic.ranchablefluidcows.ranchable.RanchableFC.sendPacket ( fluidCow ) ; try { tag.setLong ( "rfc:nextUpdate", ( worldTime + ( 20 * 10 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onMessage ( int instanceId, java.lang.String message ) { int size = java.lang.Integer.parseInt ( message ) ; byte[] buffer = new byte[size]; for ( int i = 0; i < size; ++i ) buffer[i] = 'p'; java.lang.String result = new java.lang.String ( buffer ) ; try { postMessage ( instanceId, result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void init () { telemetry.addData ( "OpMode", "*** AutoWheelz v1.0 ***" ) ; runtime.reset () ; motorR = hardwareMap.dcMotor.get ( "motor_r" ) ; motorR.setChannelMode ( DcMotorController.RunMode.RESET_ENCODERS ) ; motorR.setChannelMode ( DcMotorController.RunMode.RUN_USING_ENCODERS ) ; try { motorL = hardwareMap.dcMotor.get ( "motor_l" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } motorL.setDirection ( DcMotor.Direction.REVERSE ) ; motorL.setChannelMode ( DcMotorController.RunMode.RESET_ENCODERS ) ; motorL.setChannelMode ( DcMotorController.RunMode.RUN_USING_ENCODERS ) ; } 
private void initSheetWidthConfig ( org.apache.poi.ss.usermodel.Sheet sheet ) { xgt.util.excel.Config config = getConfig () ; sheet.setDefaultRowHeightInPoints ( config.getDefaultHeight () ) ; try { for ( int index : config.getKeysOfWidth () ) { sheet.setColumnWidth ( index, ( ( config.getColumnWidth ( index ) ) * 256 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isGreet ( Sentence s ) { Greeting greet = new Greeting () ; for ( java.lang.String x : greet.greet1 ) { if ( Kumar.search ( x, s.sentence ) ) { return true; } } try { for ( java.lang.String x : greet.greet2 ) { if ( Kumar.search ( x, s.sentence ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ org.junit.Test public void useBasicAuthorization () throws java.lang.Exception { com.clouway.chita.HttpRequest request = com.clouway.chita.HttpRequest.httpRequest ( new com.clouway.chita.TargetUrl ( serverUrl, com.clouway.chita.HttpClientTest.serviceUrl ) ) .basicAuthorization ( "John", "pass123" ) .post ( "" ) .build () ; try { httpClient.execute ( request ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertThat ( server.getRequestHeaders () .get ( "Authorization" ) .startsWith ( "Basic" ) , org.hamcrest.Matchers.is ( true ) ) ; } 
public void geometricSeriesApproximation ( double x ) { double nextApproximation = x; for ( int i = 0; i < ( this.steps ) ; i++ ) { nextApproximation = nextApproximation * x; } this.approximation = ( this.lastApproximation ) + nextApproximation; ( this.steps ) ++; try { if ( ! ( isAccurate () ) ) { geometricSeriesApproximation ( x ) ; } else { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void selectNextTableRow ( javax.swing.JTable table ) { int index = table.getSelectedRow () ; if ( index == ( -1 ) ) { index = 0; } table.clearSelection () ; try { if ( ( ++index ) > ( ( table.getRowCount () ) - 1 ) ) { index = 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } table.addRowSelectionInterval ( index, index ) ; } 
public static com.github.bijoysingh.starter.item.TimestampItem getTimestampItem ( java.lang.String timestamp, org.joda.time.DateTimeZone dateTimeZone, java.lang.Integer hour, java.lang.Integer minutes ) { org.joda.time.DateTime dateTime = com.github.bijoysingh.starter.util.TimestampManager.getDateTimeObject ( timestamp ) ; if ( dateTime == null ) { return new com.github.bijoysingh.starter.item.TimestampItem ( timestamp, null, null, java.util.Calendar.getInstance () ) ; } dateTime = dateTime.toDateTime ( dateTimeZone ) ; try { dateTime = dateTime.plusHours ( hour ) .plusMinutes ( minutes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return com.github.bijoysingh.starter.util.TimestampManager.createTimestampItem ( timestamp, dateTime ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, java.lang.String[] permissions, int[] grantResults ) { try { if ( ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback ) != null ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil.verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback.onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log.i ( "BaseActivity", "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback.onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super.onRequestPermissionsResult ( requestCode, permissions, grantResults ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean setRedUpgrade () { if ( ( redBalls ) < 5 ) { return false; } redBalls = ( redBalls ) - 5; if ( ( red ) == null ) { return true; } try { switch ( red.getUpgradeType () ) { case BALL_NUMBER_PLUS_1: { break; } default: return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ android.support.annotation.Nullable @java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View rootView = inflater.inflate ( R.layout.bundles_fragment, null ) ; model = com.inaetics.demonstrator.model.Model.getInstance () ; model.addObserver ( this ) ; try { adapter = new com.inaetics.demonstrator.controller.BundleItemAdapter ( getActivity () .getBaseContext () , R.layout.bundle_item, model.getBundles () , model ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.widget.ListView bundleList = ( ( android.widget.ListView ) ( rootView.findViewById ( R.id.bundles_listview ) ) ) ; bundleList.setAdapter ( adapter ) ; return rootView; } 
@ java.lang.Override public void setUser ( com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.dao.UsersLogged userLogged ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException { try { if ( ( this.userLogged.getCurrentUserLogged () ) == null ) { login ( userLogged.getCurrentUserLogged () .getAuUsername () , userLogged.getCurrentUserLogged () .getAuPassword () ) ; } else { login ( userLogged.getCurrentUserLogged () .getAuUsername () , userLogged.getCurrentUserLogged () .getAuPassword () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void parseCommentWithNewLines () { java.lang.String text = "\n" + ( ( ( " * The version identifier for this Serializable class.\n" + " * Increment only if the <i>serialized</i> form of the\n" ) + " * class changes.\n" ) + " " ) ; try { org.junit.Assert.assertEquals ( new com.github.javaparser.javadoc.Javadoc ( com.github.javaparser.javadoc.description.JavadocDescription.parseText ( ( "The version identifier for this Serializable class.\n" + ( "Increment only if the <i>serialized</i> form of the\n" + "class changes." ) ) ) ) , com.github.javaparser.JavadocParser.parse ( text ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void putTagsInJSONObj ( org.json.simple.JSONObject object, java.lang.String[] tags ) { try { if ( tags != null ) { java.util.List<java.lang.String> tagList = new java.util.ArrayList<java.lang.String> () ; for ( java.lang.String string : tags ) { tagList.add ( string ) ; } object.put ( "tags", tagList ) ; } else { object.put ( "tags", null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperand ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this.fumlMap ( operand ) ; try { if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this.throwError ( ( "Error mapping operand expression: " + ( mapping.getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return operandMapping; } 
public static void main ( java.lang.String[] args ) { it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon m = new it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon () ; com.beust.jcommander.JCommander jc = new com.beust.jcommander.JCommander ( m, args ) ; java.lang.System.out.println ( it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon.APP_TITLE ) ; if ( m.help ) { jc.usage () ; java.lang.System.exit ( 0 ) ; } it.polimi.modaclouds.scalingrules.Configuration.CLOUDML_PORT = m.cloudMLPort; try { it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon.logger.info ( "Starting the CloudML daemon on port {}...", it.polimi.modaclouds.scalingrules.Configuration.CLOUDML_PORT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon.start ( it.polimi.modaclouds.scalingrules.Configuration.CLOUDML_PORT ) ; } 
public void removeOne ( T item ) { nodes.TreeNode<T> current = root; try { while ( current != null ) { nodes.TreeNode<T> next = current.checkNode ( item ) ; if ( current == next ) { current.deincrementItemCount () ; return; } else current = next; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound nbt ) { super.readFromNBT ( nbt ) ; try { this.burnTimeLeft = nbt.getInteger ( "burnTime" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.cookTimeLeft = nbt.getInteger ( "cookTimeLeft" ) ; if ( ( nbt.getTag ( "cookingItem" ) ) != null ) this.cooking = new net.minecraft.item.ItemStack ( ( ( net.minecraft.nbt.NBTTagCompound ) ( nbt.getTag ( "cookingItem" ) ) ) ) ; } 
@ java.lang.Override public void removeInfoView ( android.view.View view ) { try { if ( ( view.getParent () ) != null ) ( ( android.view.ViewGroup ) ( view.getParent () ) ) .removeView ( view ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( ( android.widget.LinearLayout ) ( guiView.findViewById ( R.id.infoLayout ) ) ) .removeView ( view ) ; } 
public static java.lang.String fixPath ( java.lang.String path ) { java.lang.String prefix; java.lang.String suffix; try { if ( ( path.lastIndexOf ( "/" ) ) > 0 ) { prefix = path.substring ( 0, path.lastIndexOf ( "/" ) ) ; suffix = path.substring ( path.lastIndexOf ( "/" ) ) ; prefix = prefix.replaceAll ( "%20", " " ) ; return prefix.concat ( suffix ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return path; } 
static java.util.List<org.jitsi.jicofo.ContentPacketExtension> createContents () { java.util.List<org.jitsi.jicofo.ContentPacketExtension> contents = new java.util.ArrayList<org.jitsi.jicofo.ContentPacketExtension> () ; contents.add ( org.jitsi.jicofo.JingleOfferFactory.createContentForMedia ( MediaType.AUDIO, false, true, false ) ) ; try { contents.add ( org.jitsi.jicofo.JingleOfferFactory.createContentForMedia ( MediaType.VIDEO, false, true, false ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } contents.add ( org.jitsi.jicofo.JingleOfferFactory.createContentForMedia ( MediaType.DATA, false, true, false ) ) ; return contents; } 
@ org.junit.Test public void getSubTaskTest () { java.util.ArrayList<net.sf.memoranda.Task> container; container = new java.util.ArrayList<net.sf.memoranda.Task> () ; net.sf.memoranda.Task child; child = new net.sf.memoranda.TaskImpl ( new java.util.ArrayList<net.sf.memoranda.Task> () ) ; child.setID ( "child" ) ; try { container.add ( child ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } task.setSubTasks ( container ) ; assertEquals ( child, task.getSubTask ( "child" ) ) ; } 
@ java.lang.Override public void request ( long n ) { if ( ( terminated ) == 1 ) { return; } try { if ( reactor.core.support.BackpressureUtils.checkRequest ( n, inputSubscriber ) ) { if ( ( ( reactor.core.support.BackpressureUtils.getAndAdd ( REQUESTED, this, n ) ) == 0 ) && ( n == ( java.lang.Long.MAX_VALUE ) ) ) { org.reactivestreams.Subscription subscription = this.subscription; if ( subscription != null ) { subscription.request ( n ) ; } } else { drainBackpressureQueue () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected int nearMinesCount ( int line, int place ) { int count = 0; try { for ( int[] near : net.patttern.minesweeper.proto.bases.BaseArea.nears ) { count += ( cellMined ( ( line + ( near[0] ) ) , ( place + ( near[1] ) ) ) ) ? 1 : 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } return count; } 
@ java.lang.Override public void update ( java.util.Observable o, java.lang.Object arg ) { shared.game.map.Index currentTurn = ModelFacade.facace_currentgame.currentgame.getModel () .getTurntracker () .getCurrentTurn () ; shared.game.player.Player player = ModelFacade.facace_currentgame.getMyplayers () .get ( currentTurn ) ; try { if ( player != null ) { if ( LoginController.REALPURENAME.equals ( player.getName () ) ) { updateGameState ( "End Turn", true ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void write ( byte[] data ) { int index = 0; try { while ( index < ( clientCount ) ) { if ( clients[index].active () ) { clients[index].write ( data ) ; index++; } else { removeIndex ( index ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void loadCouponCard () { itemSelectCoupon = 0; try { txtTitleName.setText ( getString ( R.string.stores_qrcode_coupon ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.nct.model.CouponCategory item = coupon_category.get ( 0 ) ; showInfoCouponCard ( item ) ; viewPager.setAdapter ( couponCardPagerAdapter ) ; viewPager.setCurrentItem ( 0 ) ; } 
@ java.lang.Override public void setBounds ( int left, int top, int right, int bottom ) { try { super.setBounds ( left, top, right, bottom ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mHeight = bottom - top; mWidth = right - left; mWarningTextHeight = - ( mWarningTextPaint.getFontMetrics () .ascent ) ; } 
private void setUpMap () { com.google.android.gms.maps.model.LatLng sydney = new com.google.android.gms.maps.model.LatLng ( 31.793405, 34.639248 ) ; mMap.setMyLocationEnabled ( true ) ; try { mMap.moveCamera ( com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom ( sydney, 10 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.google.android.gms.maps.model.MarkerOptions mMark = new com.google.android.gms.maps.model.MarkerOptions () .title ( "Ashdod" ) .snippet ( "We want to sell and rent houses here!" ) .position ( sydney ) ; java.util.List<com.google.android.gms.maps.model.MarkerOptions> markers = new com.sce3.thirdyear.maps.data.MapData () .getMarkers () ; for ( com.google.android.gms.maps.model.MarkerOptions marker : markers ) { mMap.addMarker ( marker ) ; } } 
public void setEnable ( boolean flag ) { mIsEnabled = flag; if ( ( getNative () ) != 0 ) { org.gearvrf.NativeComponent.setEnable ( getNative () , flag ) ; } try { if ( flag ) { onEnable () ; } else { onDisable () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.List<java.lang.String> getListOfAuthorizedDomainsByConsumerKey ( java.lang.String consumerKey ) throws org.wso2.carbon.apimgt.api.APIManagementException { java.lang.String list = org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.getAuthorizedDomainsByConsumerKey ( consumerKey ) ; try { if ( ( list != null ) && ( ! ( list.isEmpty () ) ) ) { return java.util.Arrays.asList ( list.split ( "," ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public java.lang.String spawnSouth ( int offX, int offY, int height ) { java.awt.Graphics2D s2d = backImage.createGraphics () ; try { s2d.drawImage ( this.getSouth () , ( offX - ( ( this.getSouth () .getWidth () ) / 2 ) ) , offY, this.getSouth () .getWidth () , height, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String name = updateGeneratedImage () ; return name; } 
@ java.lang.Override public void onError ( java.lang.Throwable e ) { super.onError ( e ) ; try { showLoading ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String errorMessage = com.nairbspace.octoandroid.exception.ErrorMessageFactory.create ( mScreen.context () , ( ( java.lang.Exception ) ( e ) ) ) ; if ( com.nairbspace.octoandroid.exception.ErrorMessageFactory.ifSslError ( mScreen.context () , ( ( java.lang.Exception ) ( e ) ) ) ) { mScreen.showAlertDialog () ; } else { mScreen.showSnackbar ( errorMessage ) ; } } 
public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { java.util.ArrayList<com.savelives.entityclasses.SearchQuery> temp = new java.util.ArrayList<> () ; temp.add ( sq ) ; try { for ( int i = 0; ( i < ( ( MAX_HISTORY ) - 1 ) ) && ( i < ( historySearch.size () ) ) ; i++ ) { temp.add ( historySearch.get ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.historySearch = temp; } 
public java.lang.Double[] getOrientation () { try { if ( ( orientationBuffer.size () ) == 0 ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.ArrayList<java.lang.Double> tmpOrientation = orientationBuffer.remove ( 0 ) ; java.lang.Double[] orientation = new java.lang.Double[7]; for ( int i = 0; i < 7; i++ ) { orientation[i] = tmpOrientation.remove ( 0 ) ; } return orientation; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/logout", method = { org.springframework.web.bind.annotation.RequestMethod.GET } ) @org.springframework.web.bind.annotation.ResponseBody public void logout ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { java.lang.System.out.println ( "logout controller" ) ; javax.servlet.http.HttpSession session = request.getSession ( false ) ; try { if ( session != null ) { session.invalidate () ; java.lang.System.out.println ( "lougout success" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } resp.sendRedirect ( "index.html" ) ; } 
public void brokenFunction ( android.view.View view ) { if ( auntEdith.getText () .toString () .equals ( "Timmy" ) ) { java.lang.System.out.println ( "Timmy fixed a bug!" ) ; } try { java.lang.System.out.println ( "If this appears in your console, you fixed a bug." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent intent = new android.content.Intent ( this, mmbuw.com.brokenproject.AnotherBrokenActivity.class ) ; java.lang.String message = "This string will be passed to the new activity"; startActivity ( intent ) ; } 
@ com.google.inject.Provides public gov.ca.cwds.rest.api.domain.cms.SystemCodeCache provideSystemCodeCache ( gov.ca.cwds.data.cms.SystemCodeDao systemCodeDao, gov.ca.cwds.data.cms.SystemMetaDao systemMetaDao ) { final long secondsToRefreshCache = ( ( 15 * 24 ) * 60 ) * ( ( long ) ( 60 ) ) ; gov.ca.cwds.rest.api.domain.cms.SystemCodeCache systemCodeCache = new gov.ca.cwds.rest.services.cms.CachingSystemCodeService ( systemCodeDao, systemMetaDao, secondsToRefreshCache, true ) ; try { systemCodeCache.register () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return systemCodeCache; } 
public void setDelegate ( @android.support.annotation.Nullable com.nextfaze.poweradapters.PowerAdapter delegate ) { try { if ( delegate != ( mDelegate ) ) { int removeCount = ( ( mDelegate ) != null ) ? mDelegate.getItemCount () : 0; mDelegate = delegate; int insertCount = ( ( mDelegate ) != null ) ? mDelegate.getItemCount () : 0; updateObservers () ; if ( removeCount > 0 ) { notifyItemRangeRemoved ( 0, removeCount ) ; } if ( insertCount > 0 ) { notifyItemRangeInserted ( 0, insertCount ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void shouldDisplayOnOptionsMenuCaseImmunizationData () { org.smartregister.path.activity.mocks.MenuItemTestVersion menuItem = new org.smartregister.path.activity.mocks.MenuItemTestVersion () ; try { menuItem.setItemId ( R.id.immunization_data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } activity.onOptionsItemSelected ( menuItem ) ; java.util.ArrayList<android.view.View> outViews = new java.util.ArrayList<> () ; activity.findViewById ( R.id.immunizations ) .findViewsWithText ( outViews, "IMMUNIZATIONS", View.FIND_VIEWS_WITH_TEXT ) ; assertFalse ( outViews.isEmpty () ) ; } 
public java.lang.String getCombinationData () throws java.text.ParseException { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try { for ( dataAnalyticsModel.TestBrief test : tests ) { sb.append ( "{ x:" ) .append ( test.getTrust () ) .append ( ", " ) .append ( " y:" ) .append ( test.getHealth () ) .append ( "}," ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } sb.setLength ( ( ( sb.length () ) - 1 ) ) ; return sb.toString () ; } 
private void translateIfGoto ( wyjc.CodeBlock.Index index, wyjc.Codes.If code, int freeSlot, java.util.ArrayList<wyjc.Bytecode> bytecodes ) { wyjc.JvmType jt = convertType ( code.type ) ; bytecodes.add ( new wyjc.Bytecode.Load ( code.leftOperand, jt ) ) ; bytecodes.add ( new wyjc.Bytecode.Load ( code.rightOperand, jt ) ) ; try { translateIfGoto ( index, code.type, code.op, code.target, freeSlot, bytecodes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setCurrentToggleState ( java.lang.String key ) { try { for ( int i = 0; i < ( states.size () ) ; i++ ) { if ( states.get ( i ) .getKey () .equals ( key ) ) { currentStateIndex = i; init () ; return; } } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new java.lang.IllegalArgumentException ( "No Toggle States match the key you have given" ) ; } 
public void makeSchedule () { setDifficulties () ; java.util.List<symposium.Panel> pnlCollection = symposium.ScheduleData.instance () .getFreePanels () ; while ( ( pnlCollection.size () ) > 0 ) { this.schedule ( pnlCollection.get ( 0 ) ) ; } try { setAssignedPanelsMessages () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setKi ( javax.swing.JCheckBox chkbx ) { try { optionsView.setKi ( chkbx ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } playerIsKi = new boolean[this.player]; for ( int i = 0; i < ( this.playerIsKi.length ) ; i++ ) { this.playerIsKi[i] = this.optionsView.getKiBox () [i].isSelected () ; } } 
private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { try { if ( getCurrentIssue ( issueId ) .getAssignee () .equals ( workLogSecurityService.getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog.setIssue ( getCurrentIssue ( issueId ) ) ; workLog.setUser ( workLogSecurityService.getActiveUser () ) ; return workLog; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry retrieveEuropeanaIdFromNew ( java.lang.String newId ) { java.util.List<eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry> retrList = datastore.find ( eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry.class ) .field ( eu.europeana.corelib.lookup.impl.EuropeanaIdRegistryMongoServerImpl.EID ) .equal ( newId ) .asList () ; try { if ( retrList.isEmpty () ) { return null; } else { for ( eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry entry : retrList ) { return entry; } return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile createEmbeddedFile ( org.apache.pdfbox.pdmodel.PDDocument doc, java.io.InputStream zugferdFile ) throws java.io.IOException { java.util.Calendar now = java.util.Calendar.getInstance () ; io.konik.carriage.utils.ByteCountingInputStream countingIs = new io.konik.carriage.utils.ByteCountingInputStream ( zugferdFile ) ; org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile embeddedFile = new org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile ( doc, countingIs ) ; embeddedFile.addCompression () ; embeddedFile.setSubtype ( io.konik.carriage.pdfbox.PDFBoxInvoiceAppender.MIME_TYPE ) ; embeddedFile.setSize ( countingIs.getByteCount () ) ; try { embeddedFile.setCreationDate ( now ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } embeddedFile.setModDate ( now ) ; return embeddedFile; } 
public static void main ( java.lang.String[] args ) { int n = 10; princeton.datastructures.deque.Deque<java.lang.Integer> deq = new princeton.datastructures.deque.Deque<java.lang.Integer> () ; try { for ( int i = 0; i < n; i++ ) { if ( ( i % 2 ) == 0 ) { deq.addFirst ( i ) ; } else { deq.addLast ( i ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( java.lang.Integer i : deq ) { java.lang.System.out.println ( i ) ; } } 
private void applyAndAnimateRemovals ( java.util.List<hk.ust.cse.hunkim.questionroom.BaseActivity.RoomInfo> roomInfos ) { try { for ( int i = ( roomInfoList.size () ) - 1; i >= 0; i-- ) { final hk.ust.cse.hunkim.questionroom.BaseActivity.RoomInfo roomInfo = roomInfoList.get ( i ) ; if ( ! ( roomInfos.contains ( roomInfo ) ) ) { removeItem ( i ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void showSearch ( boolean animate ) { if ( isSearchOpen () ) { return; } searchEditText.requestFocus () ; try { shadowView.setVisibility ( View.VISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setVisibility ( View.VISIBLE ) ; if ( animate ) { setVisibleWithAnimation () ; } else { setVisibility ( com.radiationpressure.mickhardins.mtgrecall.searchview.VISIBLE ) ; } isSearchOpen = true; } 
@ java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> joinChannel ( java.lang.String channelName ) { com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> ( getNextMessageId () ) ; java.util.Map<java.lang.String, java.lang.String> arguments = new java.util.HashMap<> () ; arguments.put ( "token", authToken ) ; arguments.put ( "name", channelName ) ; try { postSlackCommand ( arguments, com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_JOIN_COMMAND, handle ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return handle; } 
@ java.lang.Override public void replaceAll ( java.util.List<T> elements ) { if ( ( mData ) == null ) { mData = new java.util.ArrayList<> () ; } mData.clear () ; try { if ( elements != null ) { mData.addAll ( elements ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } notifyDataSetChanged () ; } 
private void updateTables ( java.sql.Statement statement ) throws java.sql.SQLException { int version = getUserVersion ( statement ) ; try { if ( ( version > 0 ) && ( version < ( gui.Splash.DATABASE_VERSION ) ) ) { switch ( version ) { case 0: statement.executeUpdate ( "alter table volumes add column favorite_volume tinyint ( 1 ) not null default '0';" ) ; statement.executeUpdate ( java.lang.String.format ( "alter table volumes add column date_add_volume text not null default '%s';", utils.DateUtils.toString ( new java.util.Date () ) ) ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } setUserVersion ( statement, Splash.DATABASE_VERSION ) ; } 
public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name.replace ( " ", "_" ) ; java.util.Iterator<com.sb.elsinore.inputs.PhSensor> iterator = com.sb.elsinore.LaunchControl.phSensorList.iterator () ; com.sb.elsinore.inputs.PhSensor tSensor; try { while ( iterator.hasNext () ) { tSensor = iterator.next () ; if ( tSensor.getName () .equalsIgnoreCase ( realName ) ) { iterator.remove () ; return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private edu.neu.ccs.pyramid.dataset.MultiLabel predictBySupport ( java.util.Vector vector ) { double[] probs = cbm.predictAssignmentProbs ( vector, support, piThreshold ) ; edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor generalF1Predictor = new edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor () ; try { generalF1Predictor.setMaxSize ( maxSize ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return generalF1Predictor.predict ( cbm.getNumClasses () , support, probs ) ; } 
@ javax.annotation.Nonnull @java.lang.Override public eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler[] getInstalledEventHandlers ( net.minecraft.item.ItemStack self ) { java.util.List<eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler> handlers = new java.util.ArrayList ( java.util.Arrays.asList ( getUpgrades ( self ) ) ) ; try { if ( ( self.hasTagCompound () ) && ( self.getTagCompound () .hasKey ( "plate" ) ) ) { handlers.add ( eiteam.esteemedinnovation.armor.exosuit.UtilPlates.getPlate ( self.getTagCompound () .getString ( "plate" ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return handlers.toArray ( new eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler[handlers.size () ] ) ; } 
@ java.lang.Override protected void onResume () { super.onResume () ; getSupportActionBar () .hide () ; try { if ( ( ! ( flagMenuPictures ) ) && ( ! ( flagMenuSounds ) ) ) onMainMenu () ; else { if ( flagMenuSounds ) onSoundMenu () ; if ( flagMenuPictures ) onCameraMenu () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.SIMRacingApps.Data setVolume ( double percentage ) { try { synchronized ( m_clips ) { for ( int i = 0; i < ( m_clips.size () ) ; i++ ) { m_clips.get ( i ) .setVolume ( percentage ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } synchronized ( m_volume ) { m_volume = percentage; } return getVolume () ; } 
private void cancelDueToException ( java.lang.Exception e ) { if ( cancelled ) return; cancelled = true; try { android.util.Log.w ( org.floens.chan.utils.FileCache.TAG, "IOException downloading file", e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } purgeOutput () ; post ( new java.lang.Runnable () { @java.lang.Override public void run () { callback.onProgress ( 0, 0, true ) ; callback.onFail ( false ) ; } } ) ; } 
private boolean isSorted ( java.lang.Comparable[] c, int a, int b ) { try { for ( int i = b - 1; i >= a; i-- ) { if ( org.magicminds.one.util.Sorter.less ( c[ ( i + 1 ) ], c[i] ) ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public com.crossballbox.model.UserInfo saveUserInfo ( com.crossballbox.model.FamilyData familyData, com.crossballbox.model.UserHealthyState userHealthyState, com.crossballbox.model.UserAdditionalInfo userAdditionalInfo, java.lang.String imagePath, com.crossballbox.model.User user ) { int userId = user.getId () ; com.crossballbox.model.UserInfo userInfo = user.getUserInfo () ; if ( userInfo == null ) { userInfo = new com.crossballbox.model.UserInfo ( userId ) ; } userInfo.setFamilyData ( familyData ) ; userInfo.setUserHealthyState ( userHealthyState ) ; userInfo.setUserAdditionalInfo ( userAdditionalInfo ) ; userInfo.setUser ( user ) ; try { userInfoDAO.save ( userInfo ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return userInfo; } 
public boolean ConnectDevices ( networkmodeling.core.modelgraph.NetworkGraphNode dev1, networkmodeling.core.modelgraph.NetworkGraphNode dev2 ) { networkmodeling.core.modelgraph.NetworkGraphEdge newEdge = new networkmodeling.core.modelgraph.NetworkGraphEdge ( dev1, dev2 ) ; try { if ( ! ( graphEdges.contains ( newEdge ) ) ) { graphEdges.add ( newEdge ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public static java.util.List paserLineEnd ( java.lang.String content ) { java.util.List<java.lang.Integer> lines = new java.util.ArrayList<java.lang.Integer> () ; int length = content.length () ; try { for ( int i = 0; i < length; i++ ) { if ( ( content.charAt ( i ) ) == '\n' ) { lines.add ( i ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return lines; } 
@ org.junit.Test public void testNoAppJSCompressionErrors () throws java.lang.Exception { java.lang.String[] namespaces = new java.lang.String[] { "aura", "ui", "auradev", "auradocs", "auraStorage" }; java.lang.StringBuilder source = new java.lang.StringBuilder () ; source.append ( "<aura:application>" ) ; try { for ( java.lang.String ns : namespaces ) { source.append ( java.lang.String.format ( "<aura:dependency resource=\"%s:*\" type=\"*\" />", ns ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } source.append ( "</aura:application>" ) ; getDefinitionsOutput ( source.toString () , AuraContext.Mode.PROD ) ; } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { try { android.util.Log.i ( "FRIDGELOG", "Broadcast has been received!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String action = intent.getAction () ; if ( action.equals ( Intent.ACTION_BOOT_COMPLETED ) ) { android.util.Log.i ( "FRIDGELOG", "Broadcast was caught by ACTION_BOOT" ) ; setUpAlarmManager ( context ) ; } else { android.util.Log.i ( "FRIDGELOG", "Broadcast is creating notifications" ) ; showNotifications ( context ) ; } } 
private void onKeysDownloadFailed ( final java.util.List<java.lang.String> userIds ) { try { if ( null != userIds ) { synchronized ( mUserKeyDownloadsInProgress ) { java.util.Map<java.lang.String, java.lang.Integer> deviceTrackingStatuses = mCryptoStore.getDeviceTrackingStatuses () ; for ( java.lang.String userId : userIds ) { mUserKeyDownloadsInProgress.remove ( userId ) ; deviceTrackingStatuses.put ( userId, org.matrix.androidsdk.crypto.MXDeviceList.TRACKING_STATUS_PENDING_DOWNLOAD ) ; } mCryptoStore.saveDeviceTrackingStatuses ( deviceTrackingStatuses ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } mIsDownloadingKeys = false; } 
public static void printIndexBoard () { java.lang.System.out.println () ; for ( int i = 0; i < 9; i++ ) { if ( ( ( i % 3 ) == 0 ) && ( i != 0 ) ) { java.lang.System.out.println () ; java.lang.System.out.println ( "-------------" ) ; } java.lang.System.out.print ( ( " | " + ( i + 1 ) ) ) ; } try { java.lang.System.out.println () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onError ( int response, java.lang.Exception e ) { try { if ( response == ( org.solovyev.android.checkout.ResponseCodes.ITEM_NOT_OWNED ) ) { inventory.load () .whenLoaded ( this ) ; } else { if ( ( listener () ) != null ) listener () .onConsumeFailed () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { try { super.onSaveInstanceState ( outState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( songs ) != null ) { outState.putParcelableArrayList ( "songs", songs ) ; outState.putString ( "bandName", bandName ) ; outState.putInt ( "position", position ) ; } if ( ( mediaPlayer ) != null ) { outState.putDouble ( "songPosition", timeElapsed ) ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { try { if ( savedInstanceState != null ) { workoutId = savedInstanceState.getLong ( hfad.com.workout.WorkoutDetailFragment.WORKOUT_ID ) ; } else { android.support.v4.app.FragmentTransaction ft = getChildFragmentManager () .beginTransaction () ; hfad.com.workout.StopwatchFragment stopwatchFragment = new hfad.com.workout.StopwatchFragment () ; ft.replace ( R.id.stopwatch_container, stopwatchFragment ) ; ft.addToBackStack ( null ) ; ft.setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_FADE ) ; ft.commit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return inflater.inflate ( R.layout.fragment_workout_detail, container, false ) ; } 
public void multiply ( solver.Polynomial p ) { solver.Polynomial output = new solver.Polynomial () ; solver.Term current = p.getFirst () ; try { if ( ( first ) == null ) { first = p.getFirst () ; ( size ) ++; } else { while ( current != null ) { solver.Polynomial temp = new solver.Polynomial ( this.getFirst () ) ; temp.multiply ( current ) ; output.add ( temp ) ; current = current.getNext () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void disableSessionChosing ( boolean value ) { try { sessionComboBox.setDisable ( value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } newSessionField.setDisable ( ( ( value || ( ( sessionComboBox.getValue () ) == null ) ) || ( ! ( sessionComboBox.getValue () .equals ( com.cbapps.reversi.client.LoginLayout.ITEM_NEW_SESSION ) ) ) ) ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { java.util.HashMap<java.lang.String, java.lang.Object> Data = ( ( java.util.HashMap<java.lang.String, java.lang.Object> ) ( dataSnapshot.getValue () ) ) ; try { v6.caique.ExploreFragment.Chats.get ( s ) .Title = ( ( java.lang.String ) ( Data.get ( "title" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } v6.caique.ExploreFragment.Chats.get ( s ) .Tags = ( ( java.util.ArrayList<java.lang.String> ) ( Data.get ( "tags" ) ) ) ; ReloadViews ( s ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { java.lang.String subreddit = viewHolder.nameInput.getText () .toString () ; if ( subreddit.equals ( "" ) ) { android.widget.Toast.makeText ( this, "Please enter a subreddit name", Toast.LENGTH_SHORT ) .show () ; return; } try { performAdd ( subreddit ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } viewHolder.nameInput.setText ( "" ) ; } 
@ java.lang.Override protected void doGet ( javax.servlet.http.HttpServletRequest req, javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException, javax.servlet.ServletException { java.util.List<models.User> users = service.getUsersWithAuto () ; try { req.setAttribute ( "Title", "Test java site page" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( users.size () ) > 0 ) req.setAttribute ( "User", users.get ( 0 ) .getName () ) ; req.setAttribute ( "userList", users ) ; req.getRequestDispatcher ( "index.jsp" ) .forward ( req, resp ) ; } 
@ java.lang.Override public void onConnected ( android.os.Bundle bundle ) { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest.setPriority ( LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY ) ; try { if ( ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } LocationServices.FusedLocationApi.requestLocationUpdates ( mclientAPI, mLocationRequest, this ) ; } 
@ java.lang.Override public int colorMultiplier ( net.minecraft.block.state.IBlockState state, net.minecraft.world.IBlockAccess worldIn, net.minecraft.util.math.BlockPos pos, int tintIndex ) { int meta = state.getBlock () .getMetaFromState ( state ) ; try { if ( ( state.getBlock () ) instanceof zmaster587.libVulpes.block.BlockOre ) { zmaster587.libVulpes.api.material.Material mat = ( ( zmaster587.libVulpes.block.BlockOre ) ( state.getBlock () ) ) .ores[meta]; if ( mat != null ) return mat.getColor () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 16777215; } 
public boolean matches ( net.minecraft.world.World world, int x, int y, int z ) { net.minecraft.block.Block blockOf = world.getBlock ( x, y, z ) ; try { if ( ( blockOf.equals ( targetBlock ) ) && ( ( targetMetadata ) == ( -1 ) ) ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( blockOf.equals ( targetBlock ) ) && ( ( targetMetadata ) == ( world.getBlockMetadata ( x, y, z ) ) ) ) return true; return false; } 
@ my.epam.collections.Test public void addToIndexShouldShiftNextElementsToRightPosition () throws java.lang.Exception { list.add ( 10 ) ; list.add ( 20 ) ; list.add ( 30 ) ; try { list.add ( 1, 40 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( new java.lang.Integer ( 30 ) , list.get ( 3 ) ) ; } 
protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_main ) ; if ( ( findViewById ( R.id.track_container ) ) != null ) { mTwoPane = true; if ( savedInstanceState == null ) { getSupportFragmentManager () .beginTransaction () .replace ( R.id.track_container, new com.dkulon.spotifystreamer.Fragment.SearchTrackFragment () , "TrackFragment" ) .commit () ; } } } 
private void showLatLonPicker () { try { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog.defineNavigation ( null, mFilter, ZoomUtil.NO_ZOOM, null ) ; dirDialog.show ( manager, de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { try { switch ( msg.what ) { case com.virtualightning.library.simple2develop.state.MainLoopCall.MSG_STATE_UPDATE: java.lang.Object[] objects = ( ( java.lang.Object[] ) ( msg.obj ) ) ; com.virtualightning.library.simple2develop.state.StateMediator mediator = ( ( com.virtualightning.library.simple2develop.state.StateMediator ) ( objects[0] ) ) ; msg.obj = null; if ( ( msg.arg1 ) == ( mediator.getSequenceId () ) ) mediator.updateObserver ( ( ( java.lang.Object[] ) ( objects[1] ) ) ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initRecyclerView ( android.view.View view ) { android.util.Log.d ( com.example.andrew.prokhor.eyecare.ui.fragments.MainFragment.LOG_TAG, "initRecyclerView () " ) ; mAdapter = new com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableCursorRecyclerViewAdapter ( getActivity () , this ) ; android.support.v7.widget.RecyclerView.LayoutManager layoutManager = new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( view.findViewById ( R.id.logsRecyclerView ) ) ) ; mRecyclerView.setAdapter ( mAdapter ) ; mRecyclerView.setLayoutManager ( layoutManager ) ; android.support.v7.widget.helper.ItemTouchHelper.Callback callback = new com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableCursorItemTouchHelperCallback ( mAdapter ) ; android.support.v7.widget.helper.ItemTouchHelper touchHelper = new android.support.v7.widget.helper.ItemTouchHelper ( callback ) ; try { touchHelper.attachToRecyclerView ( mRecyclerView ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.izik.recipebook.Model instance ( android.content.Context context ) { try { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context.toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } com.izik.recipebook.Model.mContext = context; return com.izik.recipebook.Model.instance; } 
void generatesDeclarations ( java.lang.String expected ) { java.lang.String[] parseResult = parse () ; com.google.common.truth.Truth.assertThat ( parseResult[1] ) .isEmpty () ; java.lang.String actual = parseResult[0]; java.lang.String stripped = DeclarationGeneratorTests.GOLDEN_FILE_COMMENTS_REGEXP.matcher ( actual ) .replaceAll ( "" ) ; try { if ( ! ( stripped.equals ( expected ) ) ) { failureStrategy.failComparing ( "compilation result doesn't match", expected, stripped ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onShowFavorites ( java.util.List<com.fireofandroid.bloggarden.StarredBlogDB.StarredBlog> favoriteBlogs ) { android.util.Log.d ( com.fireofandroid.bloggarden.favoriteblog.FavoritesActivity.TAG, ( "onShowFavorites->total favorite blogs: " + ( favoriteBlogs.size () ) ) ) ; try { if ( ( favoriteBlogs.size () ) == 0 ) { android.widget.Toast.makeText ( this, "无收藏文章", Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mFavoriteBlogs = favoriteBlogs; mFavoritesGV.setAdapter ( new com.fireofandroid.bloggarden.favoriteblog.FavoritesAdapter ( getApplicationContext () , favoriteBlogs ) ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { java.lang.String text = forecastViewAdapter.getItem ( position ) ; android.content.Intent detailActivityIntent = new android.content.Intent ( getActivity () , com.example.sarh2o.sunshine.DetailActivity.class ) .putExtra ( Intent.EXTRA_TEXT, text ) ; try { startActivity ( detailActivityIntent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void initSettings ( com.almasb.fxgl.settings.GameSettings settings ) { settings.setWidth ( 800 ) ; settings.setHeight ( 600 ) ; settings.setTitle ( "ParticleTextureSample" ) ; settings.setVersion ( "0.1" ) ; settings.setFullScreen ( false ) ; try { settings.setIntroEnabled ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } settings.setMenuEnabled ( false ) ; settings.setCloseConfirmation ( false ) ; settings.setProfilingEnabled ( true ) ; settings.setApplicationMode ( ApplicationMode.DEVELOPER ) ; } 
@ java.lang.Override public T get ( int index ) { try { if ( ( size () ) <= index ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } lists.linkedlist.ListNode<T> current = firstNode; while ( index > 0 ) { current = current.getNext () ; index--; } return current.getData () ; } 
public void controller ( org.openmrs.ui.framework.fragment.FragmentModel model, @org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService, @org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId", required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService.getMessageById ( messageId ) ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; try { mapper.setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper.readValue ( message, org.openmrs.module.outgoingmessageexceptions.OutgoingMessage.class ) ; model.addAttribute ( "outgoingMessage", outgoingMessage ) ; } 
@ java.lang.Override public void populateItem ( org.apache.wicket.markup.repeater.Item item, java.lang.String componentId, org.apache.wicket.model.IModel rowModel ) { com.evolveum.midpoint.xml.ns._public.common.audit_3.AuditEventRecordType auditEventRecordType = ( ( com.evolveum.midpoint.xml.ns._public.common.audit_3.AuditEventRecordType ) ( rowModel.getObject () ) ) ; java.lang.String channel = auditEventRecordType.getChannel () ; try { if ( channel != null ) { javax.xml.namespace.QName channelQName = com.evolveum.midpoint.util.QNameUtil.uriToQName ( channel ) ; java.lang.String return_ = channelQName.getLocalPart () ; item.add ( new org.apache.wicket.markup.html.basic.Label ( componentId, return_ ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void done ( List<com.angcyo.bmob.PasswordBmob> list, cn.bmob.v3.exception.BmobException e ) { List<java.lang.String> strings = new com.angcyo.bmob.ArrayList<> () ; try { if ( e == null ) { java.util.Collections.reverse ( list ) ; for ( com.angcyo.bmob.PasswordBmob bmob : list ) { if ( strings.contains ( bmob.getPassword () ) ) { } else { strings.add ( bmob.getPassword () ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } listener.onFind ( strings ) ; } 
protected java.lang.String buildHealthCheckString ( java.lang.String path, java.lang.String host ) { try { if ( ( ( path == null ) || ( path.equals ( "" ) ) ) || ( host == null ) ) { return ""; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( path.startsWith ( "GET" ) ) || ( path.startsWith ( "POST" ) ) ) { return path; } return ( ( ( "GET " + path ) + " HTTP/1.0\\r\\nHost: " ) + host ) + "\\r\\n\\r\\n"; } 
public void deleteRecursive ( java.io.File path ) { java.io.File[] c = path.listFiles () ; if ( c == null ) return; try { for ( java.io.File file : c ) { if ( file.isDirectory () ) { deleteRecursive ( file ) ; file.delete () ; } else { file.delete () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } path.delete () ; } 
@ java.lang.Override void tableRowClicked ( int row, int col ) { o_removeLabel.setEnabled ( ( row != ( -1 ) ) ) ; try { o_dismissLabel.setEnabled ( ( ( row != ( -1 ) ) && ( o_item.getReminder ( row ) .isActive () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } o_linkReminderLabel.setEnabled ( ( row != ( -1 ) ) ) ; } 
public static void main ( java.lang.String[] args ) throws com.rapplogic.xbee.api.XBeeException, gnu.io.PortInUseException, gnu.io.UnsupportedCommOperationException, java.io.IOException, java.lang.NumberFormatException, java.text.ParseException, java.util.TooManyListenersException { try { initLog4j () ; } catch ( Exception ex ) { ex.printStackTrace () ; } new com.rapplogic.aru.uploader.nordic.NordicSketchUploader () .process ( "/Users/andrew/Documents/dev/arduino-remote-uploader/resources/RAU-328-13k.hex", "/dev/tty.usbmodemfa131", java.lang.Integer.parseInt ( "19200" ) , "????", 5, 0, 50, true, 5 ) ; } 
public void onClick ( android.content.DialogInterface dialog, int id ) { android.widget.ListView lw = ( ( android.app.AlertDialog ) ( dialog ) ) .getListView () ; int selected = -1; try { if ( ( lw.getTag () ) != null ) { selected = ( ( java.lang.Integer ) ( lw.getTag () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } exportExpensesXLS ( selected ) ; } 
public final void setStartDate ( java.util.Date startDate ) { try { if ( ( ( this.startDate ) == null ) || ( ! ( this.startDate.equals ( startDate ) ) ) ) { if ( ( ( startDate != null ) && ( ( endDate ) != null ) ) && ( endDate.before ( startDate ) ) ) { throw new de.invation.code.toval.validate.ParameterException ( "The start date must be before the end date of the filter." ) ; } this.startDate = startDate; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter.setChanged () ; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter.notifyObservers () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent, final android.os.UserHandle user, final java.lang.String receiverPermission ) { try { mCondom.proceedBroadcast ( intent, new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @java.lang.Override public void run () { com.oasisfeng.condom.CondomContext.super.sendBroadcastAsUser ( intent, user, receiverPermission ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean matchRange () { try { if ( ( ( ( ( si ) + 2 ) < ( sn ) ) && ( ( src.charAt ( ( ( si ) + 1 ) ) ) == '-' ) ) && ( ( src.charAt ( ( ( si ) + 2 ) ) ) != ']' ) ) { si += 3; return true; } else return false; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getArguments () ) != null ) { mParam1 = getArguments () .getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM1 ) ; mParam2 = getArguments () .getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM2 ) ; } } 
public void switchState ( org.usfirst.frc.team2984.robot.subsystems.DriveTrain.State state ) { if ( state == ( this.driveState ) ) { return; } if ( state == null ) { state = this.driveState; } try { switch ( state ) { case VOLTAGE_CONTROL: this.configureTalonsVoltage () ; break; case SPEED_CONTROL: this.configureTalonsSpeed () ; break; case DISTANCE_CONTROL: this.configureTalonsDistance () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.driveState = state; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.m_add_sample_data: addSampleData () ; displayData () ; return true; case R.id.m_add_book: android.content.Intent intent = new android.content.Intent ( this, divyanshu.bookinventory.AddBookActivity.class ) ; startActivity ( intent ) ; return true; case R.id.m_delete_all_data: deleteAllData () ; displayData () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onOptionsItemSelected ( item ) ; } 
private static net.sf.json.JSONObject exchangeDates ( net.sf.json.JSONObject ex, net.sf.json.JSONObject inter, java.text.DateFormat format ) { java.lang.String dob = "dob"; java.lang.String dod = "dod"; if ( ex.containsKey ( dob ) ) { inter.put ( "date_of_birth", format.format ( org.phenotips.studies.family.internal.JsonAdapterImpl.pedigreeDateToDate ( ex.getJSONObject ( dob ) ) ) ) ; } try { if ( ex.containsKey ( dod ) ) { inter.put ( "date_of_death", format.format ( org.phenotips.studies.family.internal.JsonAdapterImpl.pedigreeDateToDate ( ex.getJSONObject ( dod ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return inter; } 
@ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast.getText () ; try { if ( ( hasUnicodeChar ( literal ) ) && ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal, com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal, com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) ) { log ( ast.getLineNo () , "forbid.escaped.unicode.char" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void putDoubleArray ( final double[] data ) { int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfDouble ) ; try { putInt ( l ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory ( com.heerbann.unsafe.UnsafeBuffer.toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l; end = ( ( position ) > ( end ) ) ? position : end; } 
static void updateChannelsPositionsInMember ( com.hazelcast.core.Member member, java.util.Map<java.lang.Short, java.lang.Long> update ) { java.util.HashMap<java.lang.Short, java.lang.Long> positions = eu.modernmt.cluster.NodeInfo.fromString ( member.getStringAttribute ( eu.modernmt.cluster.NodeInfo.DATA_CHANNELS_ATTRIBUTE ) ) ; try { for ( java.util.Map.Entry<java.lang.Short, java.lang.Long> position : update.entrySet () ) { positions.put ( position.getKey () , position.getValue () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } member.setStringAttribute ( eu.modernmt.cluster.NodeInfo.DATA_CHANNELS_ATTRIBUTE, eu.modernmt.cluster.NodeInfo.toString ( positions ) ) ; } 
public void evaluate () throws java.io.IOException, java.sql.SQLException { java.util.List<edu.washington.multirframework.data.Extraction> modelExtractions = efc.getExtractions ( ( "_results_" + ( new java.io.File ( modelName ) .getName () ) ) , writeExtractions, verbose, verboseFile ) ; try { res.fillResult ( modelExtractions ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } res.dumpResults () ; } 
private boolean mergeLine ( java.util.List<nz.ac.auckland.alm.EmptySpace> line, nz.ac.auckland.alm.algebra.IDirection direction ) { try { while ( ( line.size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line.get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line.get ( 1 ) ; if ( ! ( merge ( area1, area2, direction ) ) ) return false; line.remove ( area2 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public static void init ( android.content.Context context ) { com.android.contacts.incall.InCallPluginHelper helper = com.android.contacts.incall.InCallPluginHelper.getInstance () ; helper.mContext = context; helper.mClient = AmbientConnection.CLIENT.get ( context ) ; helper.mInCallApi = com.cyanogen.ambient.incall.InCallServices.getInstance () ; helper.mMainHandler = new android.os.Handler ( context.getMainLooper () ) ; try { com.android.contacts.incall.InCallPluginHelper.refresh () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void attachToBaseObject ( final org.sablo.IChangeListener changeMonitor, org.sablo.IWebObjectContext webObjectContext ) { this.changeMonitor = changeMonitor; this.webObjectContext = webObjectContext; java.util.List<WT> wrappedBaseList = getWrappedBaseList () ; int i = 0; for ( WT el : wrappedBaseList ) { attachToBaseObject ( i, el, false, true ) ; i++; } try { if ( isChanged () ) changeMonitor.valueChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.example.hotel.dto.AllocationEntityDataDTO map2DTO ( com.example.hotel.models.AllocationEntity allocationEntity ) { com.example.hotel.dto.AllocationEntityDataDTO allocationEntityDataDTO = new com.example.hotel.dto.AllocationEntityDataDTO () ; try { allocationEntityDataDTO.setRoomID ( allocationEntity.getId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } allocationEntityDataDTO.setNumber ( allocationEntity.getNumber () ) ; allocationEntityDataDTO.setType ( allocationEntity.getType () .name () ) ; allocationEntityDataDTO.setAvailability ( allocationEntity.getAvailability () ) ; allocationEntityDataDTO.setCapacity ( allocationEntity.getCapacity () ) ; allocationEntityDataDTO.setCost ( allocationEntity.getPrice () ) ; return allocationEntityDataDTO; } 
@ java.lang.Override public za.org.grassroot.services.Group saveGroup ( za.org.grassroot.services.Group groupToSave, boolean createGroupLog, java.lang.String description, java.lang.Long changedByuserId ) { za.org.grassroot.services.Group group = groupRepository.save ( groupToSave ) ; try { if ( createGroupLog ) { za.org.grassroot.services.GroupLog groupLog = groupLogRepository.save ( new za.org.grassroot.services.GroupLog ( groupToSave.getId () , changedByuserId, za.org.grassroot.core.enums.GroupLogType.GROUP_UPDATED, 0L, description ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return group; } 
public static boolean logOut ( java.util.UUID sId ) { try { if ( ! ( org.bgu.domain.facades.UserFacade.sessions.containsKey ( sId ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } org.bgu.domain.facades.Session session = org.bgu.domain.facades.UserFacade.sessions.get ( sId ) ; if ( ! ( session._forum.logOut ( session._member.getUserName () ) ) ) return false; return true; } 
@ java.lang.Override public void validate () { try { if ( isHttpPost () ) { if ( ( getRegisteredIpt () ) != null ) { iptValidation.validateUpdate ( this, getRegisteredIpt () ) ; } else { iptValidation.validate ( this, ipt ) ; validatedBaseURL = true; organisationValidation.validate ( this, organisation ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<com.example.agathe.tsgtest.dto.Contact> getPrivateContacts ( int numberOfContacts ) { java.util.List<com.example.agathe.tsgtest.dto.Contact> contacts = null; try { com.olab.smplibrary.SMPLibrary.GetPrivateContacts ( context, numberOfContacts, new com.olab.smplibrary.DataResponseCallback () { @java.lang.Override public void OnResponse ( int response_code, java.lang.String data_response ) { android.util.Log.i ( "MainActivity:Response", ( "GetPrivateContacts response code " + response_code ) ) ; android.util.Log.i ( "MainActivity:Response", ( "GetPrivateContacts - " + data_response ) ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return contacts; } 
public void printGrid () { java.lang.System.out.println ( "----------" ) ; for ( java.lang.String[] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out.print ( ( x + " " ) ) ; } java.lang.System.out.println ( "" ) ; } try { java.lang.System.out.println ( "----------" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.Set<java.lang.Integer> chooseCardsToTestIndexesForTest2 () { setAnswerDataByStudyItemsContainer () ; java.util.Set<java.lang.Integer> cardsToTestIndexes = new java.util.HashSet<java.lang.Integer> () ; cardsToTestIndexes = getLatestQuestionedCardIndexes ( 6 ) ; java.util.Set<java.lang.Integer> indexesToAdd; indexesToAdd = getRandomHardestCardIndexes ( 0.2, 6, cardsToTestIndexes ) ; cardsToTestIndexes.addAll ( indexesToAdd ) ; try { indexesToAdd = getRandomCardIndexes ( 8, cardsToTestIndexes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cardsToTestIndexes.addAll ( indexesToAdd ) ; return cardsToTestIndexes; } 
@ java.lang.Override public void migrate ( io.realm.DynamicRealm realm, long oldVersion, long newVersion ) { io.realm.RealmSchema schema = realm.getSchema () ; if ( oldVersion == 0 ) { schema.create ( "User" ) .removeField ( "energy" ) .removeField ( "maxEnergy" ) ; oldVersion++; } try { if ( oldVersion == 1 ) { schema.create ( "User" ) .removeField ( "energy" ) .removeField ( "maxEnergy" ) ; oldVersion++; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void set ( double time, us.ihmc.robotics.geometry.FrameOrientation orientation, us.ihmc.robotics.geometry.FrameVector angularVelocity ) { checkReferenceFrameMatch ( orientation ) ; checkReferenceFrameMatch ( angularVelocity ) ; this.time.set ( time ) ; this.orientation.set ( orientation.getQuaternion () ) ; try { this.angularVelocity.set ( angularVelocity.getVector () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void post ( java.lang.String text, long language, long version ) { java.lang.System.out.println ( text ) ; models.Language lang = models.Language.findById ( language ) ; models.Version ver = models.Version.findById ( version ) ; models.Paste paste = new models.Paste ( text, lang, ver ) ; paste.save () ; try { controllers.PasteController.view ( paste.id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean checkIfServiceIsRunning () { android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; try { for ( android.app.ActivityManager.RunningServiceInfo service : manager.getRunningServices ( java.lang.Integer.MAX_VALUE ) ) { if ( com.amossys.hooker.service.InstrumentationService.class.getName () .equals ( service.service.getClassName () ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_fragment ) ; try { radioGroup = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.rg_tab ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fragmentManager = getFragmentManager () ; radioGroup.setOnCheckedChangeListener ( radioGroupListener ) ; gattServiceIntent = new android.content.Intent ( this, edu.nthu.nmsl.itri_app.BluetoothLeService.class ) ; bindService ( gattServiceIntent, mServiceConnection, android.content.Context.BIND_AUTO_CREATE ) ; } 
com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this.isLoose () ) ) && ( other.isLoose () ) ) ) { return this; } com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType.meet ( this, other ) ; try { if ( ( this.isLoose ) && ( ! ( result.isLoose () ) ) ) { result = result.withLoose () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override protected void loadFileSystem ( final com.linxonline.mallet.io.filesystem.FileSystem _fileSystem ) { try { com.linxonline.mallet.util.logger.Logger.println ( "Finalising filesystem.", Logger.Verbosity.MINOR ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.linxonline.mallet.io.filesystem.GlobalFileSystem.setFileSystem ( _fileSystem ) ; com.linxonline.mallet.util.logger.Logger.println ( "Mapping Base directory.", Logger.Verbosity.MINOR ) ; if ( ( com.linxonline.mallet.io.filesystem.GlobalFileSystem.mapDirectory ( "base/" ) ) == false ) { com.linxonline.mallet.util.logger.Logger.println ( "Failed to map base directory.", Logger.Verbosity.MINOR ) ; } } 
private void restoreCursor ( org.eclipse.swt.widgets.Control control ) { try { if ( control.isDisposed () ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } org.eclipse.swt.graphics.Cursor oldCursor = ( ( org.eclipse.swt.graphics.Cursor ) ( control.getData ( "pdetools-old-cursor" ) ) ) ; if ( ( oldCursor != null ) && ( oldCursor.isDisposed () ) ) { oldCursor = null; } control.setCursor ( oldCursor ) ; } 
@ java.lang.Override protected void onSelectionChanged ( int selStart, int selEnd ) { try { super.onSelectionChanged ( selStart, selEnd ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( state ) == null ) { return; } if ( selStart == selEnd ) { changeSpanStateBySelection ( selStart ) ; } else { changeSpanStateBySelection ( selStart, selEnd ) ; } } 
public javafx.scene.control.Button toButton ( java.lang.String label ) { javafx.scene.control.Button button = new javafx.scene.control.Button ( label ) ; button.setGraphic ( ( ( this.graphic ) != null ? this.graphic.get () : null ) ) ; try { button.setUserData ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return button; } 
private <T> T get ( java.lang.Class<T> clazz, java.util.Set<java.lang.Class<?>> traversedClasses ) { if ( objects.containsKey ( clazz ) ) { return clazz.cast ( objects.get ( clazz ) ) ; } ch.jalu.injector.context.UnresolvedInstantiationContext<T> context = new ch.jalu.injector.context.UnresolvedInstantiationContext ( this, ch.jalu.injector.context.StandardResolutionType.SINGLETON, clazz ) ; T object = instantiate ( context, new java.util.HashSet<> ( traversedClasses ) ) ; try { register ( clazz, object ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return object; } 
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @org.votingsystem.web.currency.jaxrs.GET @org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId, @org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils.getCalendar ( year, 1, 1 ) ; org.votingsystem.model.User user = dao.find ( org.votingsystem.model.User.class, userId ) ; try { if ( user == null ) return javax.ws.rs.core.Response.status ( Response.Status.NOT_FOUND ) .entity ( ( "ERROR - User not found - userId: " + userId ) ) .build () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return getUserBalancesDto ( user, org.votingsystem.web.currency.jaxrs.DateUtils.getYearPeriod ( calendar ) ) ; } 
@ java.lang.Override public org.wso2.siddhi.core.event.stream.StreamEvent find ( org.wso2.siddhi.core.event.state.StateEvent matchingEvent, java.lang.Object candidateEvents, org.wso2.siddhi.core.event.stream.StreamEventCloner candidateEventCloner ) { try { this.initExpressionLogic () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<org.wso2.carbon.analytics.datasource.commons.Record> records = this.findRecords ( matchingEvent, candidateEvents, false ) ; return org.wso2.carbon.analytics.eventtable.AnalyticsEventTableUtils.recordsToStreamEvent ( this.myAttrs, records ) ; } 
private java.lang.String firstSet ( java.lang.String expression ) { int end = ( expression.indexOf ( Constants.CLOSE_SQUARE_BRACKET ) ) + 1; try { if ( ( expression.length () ) > end ) { java.lang.String quantifier = java.lang.String.valueOf ( expression.charAt ( end ) ) ; if ( isQuantifier ( quantifier ) ) { end++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return expression.substring ( 0, end ) ; } 
@ java.lang.Override protected void resetGame () { super.resetGame () ; m_deck.shuffle () ; try { m_board.setInitiation ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < ( m_board.getMaxCardsX () ) ; i++ ) { for ( int j = 0; j < ( i + 1 ) ; j++ ) { m_board.addCard ( m_deck.dealCard () , i ) ; } } m_board.setInitiation ( false ) ; stats.startTimer () ; } 
public java.util.List<java.lang.Long> getRequiredMissionIds () { java.util.List<java.lang.Long> ids = new java.util.ArrayList<> () ; try { if ( ( requiredMissions ) != null ) { for ( com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean : requiredMissions ) { if ( ! ( missionBean.getId () .equals ( com.playposse.peertopeeroxygen.android.widgets.RequiredMissionListView.BLANK_MISSION_ID ) ) ) { ids.add ( missionBean.getId () ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ids; } 
@ java.lang.Override public void setDead () { net.minecraft.entity.player.EntityPlayer caster = this.getThrower () ; try { if ( caster != null ) { caster.dismountRidingEntity () ; com.teaminfinity.elementalinvocations.handler.PlayerStateHandler.getInstance () .getState ( caster ) .setInvisible ( false ) .setInvulnerable ( false ) .setEthereal ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } super.setDead () ; } 
@ java.lang.Override public java.util.Map<java.lang.String, java.lang.String> getLocalCredentials ( org.fogbowcloud.manager.occi.request.Request request ) { try { if ( request == null ) { return org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper.getCredentialsPerRelatedLocalName ( this.properties, LocalCredentialsHelper.FOGBOW_DEFAULTS ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Map<java.lang.String, java.lang.String> credentialsPerMember = org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper.getCredentialsPerRelatedLocalName ( this.properties, request.getRequestingMemberId () ) ; if ( ! ( credentialsPerMember.isEmpty () ) ) { return credentialsPerMember; } return org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper.getCredentialsPerRelatedLocalName ( this.properties, LocalCredentialsHelper.FOGBOW_DEFAULTS ) ; } 
@ java.lang.Override public com.example.android.uamp.ui.tv.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent ) { android.util.Log.d ( com.example.android.uamp.ui.tv.CardPresenter.TAG, "onCreateViewHolder" ) ; try { com.example.android.uamp.ui.tv.CardPresenter.mContext = parent.getContext () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v17.leanback.widget.ImageCardView cardView = new android.support.v17.leanback.widget.ImageCardView ( com.example.android.uamp.ui.tv.CardPresenter.mContext ) ; cardView.setFocusable ( true ) ; cardView.setFocusableInTouchMode ( true ) ; return new com.example.android.uamp.ui.tv.CardPresenter.CardViewHolder ( cardView ) ; } 
private java.lang.String getScreenType ( usbong.android.builder.models.details.ImageScreenDetails imageScreenDetails ) { try { if ( ImagePosition.ABOVE_TEXT.getName () .equals ( imageScreenDetails.getImagePosition () ) ) { if ( imageScreenDetails.isHasCaption () ) { return UsbongScreenType.CLICKABLE_IMAGE_TEXT_DISPLAY.getName () ; } else { return UsbongScreenType.IMAGE_TEXT_DISPLAY.getName () ; } } else { if ( imageScreenDetails.isHasCaption () ) { return UsbongScreenType.TEXT_CLICKABLE_IMAGE_DISPLAY.getName () ; } else { return UsbongScreenType.TEXT_IMAGE_DISPLAY.getName () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testFileOperaFuckup () throws java.net.MalformedURLException { net.ontopia.infoset.core.LocatorIF base = new net.ontopia.infoset.impl.basic.URILocator ( "file:/home/larsga/cvs-co/topicmaps/opera/opera.xtm" ) ; net.ontopia.infoset.core.LocatorIF base2 = base.resolveAbsolute ( "opera-template.xtm" ) ; net.ontopia.infoset.core.LocatorIF abs = base2.resolveAbsolute ( "geography.xtm" ) ; try { assertTrue ( "Two-step normalization produced wrong result", abs.getAddress () .equals ( "file:/home/larsga/cvs-co/topicmaps/opera/geography.xtm" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void processEvent ( round_robin.Event event ) { try { switch ( event.getType () ) { case Event.NEW_PROCESS: createProcess () ; break; case Event.SWITCH_PROCESS: switchProcess () ; break; case Event.END_PROCESS: endProcess () ; break; case Event.IO_REQUEST: processIoRequest () ; break; case Event.END_IO: endIoOperation () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void update () { clickModel.transform.setToTranslation ( control.getClickOnMap () .x, control.getClickOnMap () .y, de.eightbitboy.ecorealms.Highlighter.CLICK_HEIGHT ) ; try { hoverModel.transform.setToTranslation ( control.getHoverOverMap () .x, control.getHoverOverMap () .y, de.eightbitboy.ecorealms.Highlighter.HOVER_HEIGHT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void transposeUp ( android.view.View v ) { org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse ( currentSong.content, "UTF-8" ) ; org.jsoup.select.Elements chords = doc.select ( "span" ) ; for ( org.jsoup.nodes.Element e : chords ) { e.text ( transposeChord ( e.text () , sk.matus.ksp.guitarist_swiss_knife.SongViewActivity.UP ) ) ; } currentSong.content = doc.toString () ; try { displaySong ( currentSong ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { try { if ( flag[0] ) { finish () ; android.content.Intent intent = new android.content.Intent ( this, com.vladimircvetanov.smartfinance.MainActivity.class ) ; startActivity ( intent ) ; com.vladimircvetanov.smartfinance.message.Message.message ( this, "Successful logged in." ) ; } else { com.vladimircvetanov.smartfinance.message.Message.message ( this, "Wrong email or password." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void createTransformer () throws ddf.catalog.federation.FederationException, ddf.catalog.source.SourceUnavailableException, ddf.catalog.source.UnsupportedQueryException { ddf.catalog.transformer.nitf.NitfInputTransformer transformer = new ddf.catalog.transformer.nitf.NitfInputTransformer () ; ddf.catalog.transformer.nitf.ddf.catalog.CatalogFramework catalog = org.mockito.Mockito.mock ( ddf.catalog.CatalogFramework.class ) ; org.mockito.Mockito.when ( catalog.query ( org.mockito.Matchers.any ( ddf.catalog.operation.QueryRequest.class ) ) ) .thenReturn ( new ddf.catalog.operation.impl.QueryResponseImpl ( null, "sourceId" ) ) ; try { transformer.setMetacardFactory ( ddf.catalog.transformer.nitf.TestBasicInputTransformer.metacardFactory ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.transformer = transformer; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( visibilityCheck.isChecked () ) { if ( mainActivity.schoolsToView.contains ( values[position] ) ) { mainActivity.schoolsToView.remove ( values[position] ) ; } else { mainActivity.schoolsToView.add ( values[position] ) ; } } else { if ( mainActivity.schoolsToView.contains ( values[position] ) ) { mainActivity.schoolsToView.remove ( values[position] ) ; } } try { mainActivity.viewCalendarList () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<net.sf.marineapi.nmea.util.Measurement> getMeasurements () { java.util.ArrayList<net.sf.marineapi.nmea.util.Measurement> result = new java.util.ArrayList<net.sf.marineapi.nmea.util.Measurement> () ; try { for ( int i = 0; i < ( getFieldCount () ) ; i += net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) { net.sf.marineapi.nmea.util.Measurement value = fetchValues ( i ) ; if ( ! ( value.isEmpty () ) ) { result.add ( value ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public java.lang.String toStrRepresentation () { java.lang.String result = ""; java.util.List<java.lang.String> sub_strs = new java.util.ArrayList<> () ; for ( org.tariel.pla.logics.IFunction sub : this.getSub () ) { if ( sub != null ) sub_strs.add ( sub.toStrRepresentation () ) ; } try { result = java.lang.String.join ( " ⋀ ", sub_strs ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent, android.view.View v, int groupPosition, int childPosition, long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes.get ( groupPosition ) .getValue () .get ( childPosition ) .getKey () ; try { if ( ! ( kitchenSelected.equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener.onKitchenChange ( mCurrentKitchen ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public static ca.claytonrogers.Common.Deck getShuffledDeck () { ca.claytonrogers.Common.Deck deck = new ca.claytonrogers.Common.Deck () ; try { for ( int i = 1; i <= 13; i++ ) { for ( int j = 0; j < 4; j++ ) { deck.push ( new ca.claytonrogers.Common.Card ( i, false, Card.Suit.values () [j] ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } deck.shuffle ( Constants.random ) ; return deck; } 
public static void launchActivity ( android.content.Context context, java.lang.String full_name, java.lang.String name, java.lang.String repo_url, java.lang.String login ) { android.content.Intent intent = new android.content.Intent () ; intent.putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.FULL_NAME, full_name ) ; intent.putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.NAME, name ) ; intent.putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.REPO_URL, repo_url ) ; try { intent.putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.LOGIN, login ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } intent.setClass ( context, com.zpauly.githubapp.view.repositories.RepoContentActivity.class ) ; context.startActivity ( intent ) ; } 
public boolean hasOrders ( java.lang.String value ) { try { for ( int i = 0; i < ( orderFields.size () ) ; i++ ) { java.lang.String option = ( ( java.lang.String ) ( orderFields.elementAt ( i ) ) ) ; if ( ( option.toLowerCase () .compareTo ( value.toLowerCase () ) ) == 0 ) return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void signInEmail ( android.view.View v ) { setEmail ( true ) ; try { if ( ( ( mUsername ) != null ) && ( ( mPassword ) != null ) ) { setLoading ( true ) ; com.google.firebase.auth.FirebaseAuth.getInstance () .signInWithEmailAndPassword ( mUsername, mPassword ) .addOnFailureListener ( this ) .addOnCompleteListener ( this ) ; mDataListener.onLogin ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBlur ( com.google.gwt.event.dom.client.BlurEvent event ) { try { if ( ( output.getText () .trim () .isEmpty () ) || ( ! ( output.getText () .trim () .matches ( FieldType.ALPHANUMERIC.getRegex () ) ) ) ) { groupOutput.setValidationState ( ValidationState.ERROR ) ; } else { groupOutput.setValidationState ( ValidationState.NONE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void stopRingtone ( android.content.Context context ) { com.example.yink.amadeus.AlarmReceiver.settings = android.preference.PreferenceManager.getDefaultSharedPreferences ( context ) ; try { if ( com.example.yink.amadeus.AlarmReceiver.isPlaying ) { com.example.yink.amadeus.AlarmReceiver.editor = com.example.yink.amadeus.AlarmReceiver.settings.edit () ; com.example.yink.amadeus.AlarmReceiver.editor.putBoolean ( "alarm_toggle", false ) ; com.example.yink.amadeus.AlarmReceiver.editor.apply () ; com.example.yink.amadeus.AlarmReceiver.m.release () ; com.example.yink.amadeus.AlarmReceiver.isPlaying = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getNumberOfConnectorImplementations_should_return_count () throws java.lang.Exception { final java.util.List<org.bonitasoft.engine.core.connector.parser.SConnectorImplementationDescriptor> sConnectorImplementationDescriptors = createConnectorList () ; doReturn ( ( ( long ) ( sConnectorImplementationDescriptors.size () ) ) ) .when ( connectorService ) .getNumberOfConnectorImplementations ( org.bonitasoft.engine.api.impl.ProcessAPIImplTest.PROCESS_DEFINITION_ID, org.bonitasoft.engine.api.impl.ProcessAPIImplTest.TENANT_ID ) ; final long numberOfConnectorImplementations = processAPI.getNumberOfConnectorImplementations ( org.bonitasoft.engine.api.impl.ProcessAPIImplTest.PROCESS_DEFINITION_ID ) ; try { assertThat ( numberOfConnectorImplementations ) .as ( "should return count" ) .isEqualTo ( sConnectorImplementationDescriptors.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDownloadStart ( java.lang.String url, java.lang.String userAgent, java.lang.String contentDisposition, java.lang.String mimetype, long contentLength ) { android.net.Uri uri = android.net.Uri.parse ( url ) ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW, uri ) ; try { cordova.getActivity () .startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList<? extends it.unibz.krdb.obda.model.OBDADataSource> list, it.unibz.krdb.obda.model.OBDADataSource value, int index, boolean isSelected, boolean cellHasFocus ) { try { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { java.lang.String datasourceUri = value.getSourceID () .toString () ; setText ( datasourceUri ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override protected void doSearch ( jdepend.model.result.AnalysisResult result ) throws jdepend.framework.exception.JDependException { jdepend.util.analyzer.element.helper.ServiceOrVO sov; try { for ( jdepend.model.JavaClass javaClass : result.getClasses () ) { if ( ! ( javaClass.isInner () ) ) { continue; } sov = researchServiceOrVO ( javaClass ) ; this.printTable ( "类名", javaClass.getName () ) ; this.printTable ( "类型", ( ( sov.getType () ) + ( sov.getIndex () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initializeRandom () { for ( int row = 0; row < ( width ) ; row++ ) { for ( int col = 0; col < ( height ) ; col++ ) { if ( ( random.nextDouble () ) < ( RANDOM_FILL_FACTOR ) ) { level[row][col] = getRandomCharFromLevelMapping () ; } else { level[row][col] = ' '; } } } try { initControllers () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getComputeResourceLoginUserName () { try { if ( ( isUseUserCRPref () ) && ( isValid ( userComputeResourcePreference.getLoginUserName () ) ) ) { return userComputeResourcePreference.getLoginUserName () ; } else if ( isValid ( processModel.getProcessResourceSchedule () .getOverrideLoginUserName () ) ) { return processModel.getProcessResourceSchedule () .getOverrideLoginUserName () ; } else { return gatewayComputeResourcePreference.getLoginUserName () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateSelection ( java.lang.String selection ) { java.util.Enumeration<javax.swing.AbstractButton> buttons = btns.getElements () ; try { while ( buttons.hasMoreElements () ) { javax.swing.JToggleButton b = ( ( javax.swing.JToggleButton ) ( buttons.nextElement () ) ) ; if ( b.getActionCommand () .equals ( selection ) ) { btns.clearSelection () ; b.setSelected ( true ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.Class getGenericType ( java.lang.Class clazz ) { java.lang.reflect.Type[] genericInterfaces = clazz.getGenericInterfaces () ; try { for ( java.lang.reflect.Type genericInterface : genericInterfaces ) { if ( genericInterface instanceof java.lang.reflect.ParameterizedType ) { java.lang.reflect.Type[] genericTypes = ( ( java.lang.reflect.ParameterizedType ) ( genericInterface ) ) .getActualTypeArguments () ; if ( ( genericTypes.length ) > 0 ) { return ( ( java.lang.Class ) ( genericTypes[0] ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private void invokeExceptionRaisingHandler ( java.lang.Throwable expected ) throws java.lang.Exception { java.lang.reflect.Method method = org.springframework.web.method.support.InvocableHandlerMethodTests.ExceptionRaisingHandler.class.getDeclaredMethod ( "raiseException" ) ; java.lang.Object handler = new org.springframework.web.method.support.InvocableHandlerMethodTests.ExceptionRaisingHandler ( expected ) ; new org.springframework.web.method.support.InvocableHandlerMethod ( handler, method ) .invokeForRequest ( webRequest, null ) ; try { fail ( "Expected exception" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.Object readArray ( com.cedarsoftware.util.io.JsonObject object ) throws java.io.IOException { final java.util.Collection array = new java.util.ArrayList () ; try { while ( true ) { skipWhitespace () ; final java.lang.Object o = readValue ( object ) ; if ( o != ( com.cedarsoftware.util.io.JsonParser.EMPTY_ARRAY ) ) { array.add ( o ) ; } final int c = skipWhitespaceRead () ; if ( c == ']' ) { break; } else if ( c != ',' ) { error ( "Expected ',' or ']' inside array" ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return array.toArray () ; } 
@ java.lang.Override public void onReceive ( com.home.pete.aquarium.Context context, com.home.pete.aquarium.Intent intent ) { boolean value = intent.getBooleanExtra ( "ACTION", false ) ; com.home.pete.aquarium.Intent msg = new com.home.pete.aquarium.Intent ( "uv-state" ) ; try { msg.putExtra ( "ACTION", value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v4.content.LocalBroadcastManager.getInstance ( context ) .sendBroadcast ( msg ) ; } 
@ java.lang.Override public void onAuthStateChanged ( @android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { try { if ( ( firebaseAuth.getCurrentUser () ) == null ) { android.content.Intent loginIntent = new android.content.Intent ( this, com.mobapde.vince.mobapde.LoginActivity.class ) ; loginIntent.addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; finish () ; startActivity ( loginIntent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { models.items.takeable.TakeableItem currentItem = itemNodeArrayList.get ( selectedItemIndex ) .getItem () ; try { if ( currentItem.isEquipable () ) { entity.equipItem ( ( ( models.items.takeable.equippable.EquippableItem ) ( currentItem ) ) ) ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } ( selectedItemIndex ) --; if ( ( selectedItemIndex ) < 0 ) selectedItemIndex = 0; ( ( views.InventoryView ) ( view ) ) .updateSelected ( selectedItemIndex ) ; } 
public synchronized void close () throws java.io.IOException { try { if ( ( serialPort ) != null ) { serialPort.removeEventListener () ; serialPort.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( input ) != null ) { input.close () ; input = null; } if ( ( output ) != null ) { output.close () ; output = null; } } 
@ org.apache.logging.log4j.core.config.plugins.PluginFactory public static io.cloudracer.LogMonitor createAppender ( @org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "name" ) java.lang.String name, @org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Layout" ) org.apache.logging.log4j.core.Layout<?> layout, @org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Filter" ) final org.apache.logging.log4j.core.Filter filter, @org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "otherAttribute" ) java.lang.String otherAttribute ) { if ( name == null ) { io.cloudracer.LOGGER.error ( "No name provided for TestLog4j2Appender" ) ; return null; } try { if ( layout == null ) { layout = org.apache.logging.log4j.core.layout.PatternLayout.createDefaultLayout () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new io.cloudracer.LogMonitor ( name, filter, layout, true ) ; } 
@ com.squareup.otto.Subscribe public void onPriceReceived ( com.radiationpressure.mickhardins.mtgrecall.ottoEvents.PriceReceivedEvent e ) { try { if ( e.getExpansion () .equals ( mtgCard.getSetName () ) ) { this.prices = e.getPrices () ; if ( ( this.cardprices ) != null ) { this.cardprices.setText ( prices ) ; swipeLayout.setRefreshing ( false ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @com.banner.bannerApplication.controllers.RequestParam long courseID, @com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname, @com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname, @com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository.findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; try { n.setFirstName ( ProfessorFirstname ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } n.setLastName ( ProfessorLastname ) ; n.setSectionNumber ( sectionnumber ) ; sectionRepository.save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } 
protected void useAbility ( hackbotcore.Unit target ) { assert ( selected ) != null; assert ( selectedAbility ) != null; try { if ( selected.useAbility ( selectedAbility, target ) ) { for ( hackbotcore.Unit u : units ) if ( ( u.sectors.size () ) == 0 ) { units.remove ( u ) ; return; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean preHandle ( javax.servlet.http.HttpServletRequest req, javax.servlet.http.HttpServletResponse resp, java.lang.Object arg2 ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; ar.edu.itba.it.paw.UserManager userManager = new ar.edu.itba.it.paw.SessionUserManager ( request ) ; try { if ( userManager.existsUser () ) { request.setAttribute ( "user", userManager.getUser () ) ; } else { request.setAttribute ( "user", null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private java.util.Collection<org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode> reusableSequence ( final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode segment ) { final com.google.common.base.Optional<org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode<?, ?>> maybeAsSequence = org.opendaylight.yangtools.yang.data.api.schema.NormalizedNodes.findNode ( segment, this.asPathChoice, this.asPathList, this.asPathSequence ) ; try { if ( maybeAsSequence.isPresent () ) { final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode asList = ( ( org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode ) ( maybeAsSequence.get () ) ) ; if ( ( asList.getSize () ) < 255 ) { return asList.getValue () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public static void close () throws java.io.IOException { java.io.FileWriter in = new java.io.FileWriter ( new java.io.File ( "./src/main/resources/users.csv" ) , false ) ; try { for ( model.User _user : services.UserDatabaseInterface.userData ) { java.lang.String userInfo = ( _user.toString () ) + "\n"; in.append ( userInfo ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } in.close () ; } 
public void updateIgnore () { try { filteredBacklog.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } synchronized ( backlog ) { for ( com.iskrembilen.quasseldroid.protocol.state.IrcMessage msg : backlog ) { msg.setFiltered ( com.iskrembilen.quasseldroid.protocol.state.Client.getInstance () .getIgnoreListManager () .matches ( msg ) ) ; if ( ! ( isMessageFiltered ( msg ) ) ) { if ( ( getMarkerLineMessage () ) == ( msg.messageId ) ) isMarkerLineFiltered = false; filteredBacklog.add ( msg ) ; } else if ( ( getMarkerLineMessage () ) == ( msg.messageId ) ) isMarkerLineFiltered = true; } } } 
boolean isAppActive ( org.luwrain.core.Application app ) { org.luwrain.core.NullCheck.notNull ( app, "app" ) ; if ( ( app == ( defaultApp ) ) && ( ( activeAppIndex ) < 0 ) ) return true; if ( ( activeAppIndex ) < 0 ) return false; try { if ( ( apps.get ( activeAppIndex ) .app ) == app ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public java.util.Map<java.lang.String, java.lang.String> getProperties () { java.util.Map<java.lang.String, java.lang.String> properties = new java.util.HashMap<> () ; try { properties.put ( com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_SERVER_NAME, com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULT_HAZELCAST_SERVER ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } properties.put ( com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_SERVER_PORT, com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULT_HAZELCAST_PORT ) ; properties.put ( com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_GROUP_NAME, com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULT_HAZELCAST_GROUP_NAME ) ; return properties; } 
@ java.lang.Override public boolean isAssignableBy ( com.github.javaparser.symbolsolver.model.typesystem.Type other ) { try { if ( other.isArray () ) { if ( ( baseType.isPrimitive () ) && ( other.asArrayType () .getComponentType () .isPrimitive () ) ) { return baseType.equals ( other.asArrayType () .getComponentType () ) ; } return baseType.isAssignableBy ( other.asArrayType () .getComponentType () ) ; } else if ( other.isNull () ) { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void mouseMoved ( java.awt.event.MouseEvent me ) { try { if ( isSelected ( me.getX () , me.getY () ) ) { setCursor ( java.awt.Cursor.getPredefinedCursor ( java.awt.Cursor.HAND_CURSOR ) ) ; } else { setCursor ( java.awt.Cursor.getPredefinedCursor ( java.awt.Cursor.CROSSHAIR_CURSOR ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addNetworkUser ( java.lang.String username, java.net.InetAddress IP ) { try { if ( ( user_ledger.containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } user_ledger.put ( username, IP ) ; filemanager.addUser ( username ) ; gui.addUser ( username ) ; showState () ; } 
public boolean hasFullAccess ( org.spongepowered.api.entity.living.player.User user ) { me.ryanhamshire.griefprevention.PlayerData playerData = GriefPrevention.instance.dataStore.getPlayerData ( this.world, user.getUniqueId () ) ; if ( ( playerData != null ) && ( playerData.ignoreClaims ) ) { return true; } if ( user.getUniqueId () .equals ( this.ownerID ) ) { if ( playerData.debugClaimPermissions ) { return false; } return true; } try { if ( ( this.parent ) != null ) { return this.parent.hasFullAccess ( user ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void donateToWin () throws k2so.GameActionException { float bullets = k2so.DefaultRobot.rc.getTeamBullets () ; int victoryPts = k2so.DefaultRobot.rc.getTeamVictoryPoints () ; int potentialPts = ( ( int ) ( bullets ) ) / ( GameConstants.BULLET_EXCHANGE_RATE ) ; try { if ( ( ( GameConstants.VICTORY_POINTS_TO_WIN ) - victoryPts ) <= potentialPts ) { k2so.DefaultRobot.rc.donate ( bullets ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void processMonitoringAfterEvent ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint, final java.lang.Object returnValue, final java.nio.ByteBuffer buffer ) { final java.lang.String className = getJoinPointClassName ( currentJoinPoint ) ; java.lang.String formattedReturnValue = extractJoinPointReturnValue ( className, returnValue ) ; if ( formattedReturnValue == null ) { formattedReturnValue = ""; } try { buffer.putInt ( explorviz.live_trace_processing.main.MonitoringStringRegistry.getIdForString ( formattedReturnValue ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
<T extends java.lang.Comparable<T>> void doTest ( T[] input, T[] expected ) { java.util.List<T> list = java.util.Arrays.asList ( input ) ; org.apache.pdfbox.util.QuickSort.sort ( list ) ; boolean equal = java.util.Arrays.equals ( list.toArray ( new java.lang.Object[input.length] ) , expected ) ; try { assertTrue ( equal ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( com.eemc.aida.DialogInterface p1, int p2 ) { setCardView ( 0 ) ; symad.showing.clear () ; for ( int i = 0; i < ( symnum ) ; ++i ) { if ( syms.get ( i ) .demangledname.contains ( kw.getText () .toString () ) ) { symad.showing.add ( i ) ; } } try { symad.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void add ( T n ) { heap.add ( null ) ; int index = ( heap.size () ) - 1; try { while ( ( index > 0 ) && ( ( heap.get ( getParent ( index ) ) .compareTo ( n ) ) == 1 ) ) { heap.set ( index, heap.get ( getParent ( index ) ) ) ; index = getParent ( index ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } heap.set ( index, n ) ; } 
@ javax.ws.rs.GET @javax.ws.rs.Path ( value = "/all" ) @javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.List<pet.shop.api.controller.model.PetControllerModel> retrieveAllPets () { final java.util.List<pet.shop.api.domain.Pet> petList = petShopApiService.retrieveAllPets () ; final java.util.List<pet.shop.api.controller.model.PetControllerModel> petControllerModelList = new java.util.ArrayList<> () ; try { for ( final pet.shop.api.domain.Pet pet : petList ) { final pet.shop.api.controller.model.PetControllerModel petControllerModel = petControllerMapper.mapTo ( pet ) ; petControllerModelList.add ( petControllerModel ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return petControllerModelList; } 
void stop () { if ( null == ( reconnectFuture ) ) { return; } reconnectFuture.cancel ( false ) ; try { if ( ( localDevice ) != null ) { localDevice.terminate () ; localDevice = null; node.removeChild ( bacnet.BacnetConn.ACTION_STOP ) ; node.removeChild ( bacnet.BacnetConn.ACTION_DISCOVER_DEVICES ) ; node.removeChild ( bacnet.BacnetConn.ACTION_ADD_DEVICE ) ; statnode.setValue ( new org.dsa.iot.dslink.node.value.Value ( bacnet.BacnetConn.NODE_STATUS_STOPPED ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<java.lang.String> getClusterAttributeList ( org.cytoscape.model.CyNetwork network ) { if ( network == null ) return new java.util.ArrayList<java.lang.String> () ; java.util.Collection<org.cytoscape.model.CyColumn> columns = network.getDefaultNodeTable () .getColumns () ; java.util.List<java.lang.String> intList = new java.util.ArrayList<java.lang.String> () ; try { for ( org.cytoscape.model.CyColumn column : columns ) { if ( column.getType () .equals ( java.lang.Integer.class ) ) { intList.add ( column.getName () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return intList; } 
@ java.lang.Override public void onBindViewHolder ( final org.cnx.android.adapters.LandingListRecyclerViewAdapter.ViewHolder holder, int position ) { org.cnx.android.beans.Content book = contentList.get ( position ) ; try { holder.bookTitle.setText ( book.getBookTitle () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( holder.logo ) != null ) && ( ( book.getIcon () ) != null ) ) { holder.logo.setImageResource ( org.cnx.android.utils.CNXUtil.getCoverId ( book, context ) ) ; } } 
public void write ( org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage message ) throws java.io.IOException, org.eclipse.paho.client.mqttv3.MqttException { byte[] bytes = message.getHeader () ; byte[] pl = message.getPayload () ; out.write ( bytes, 0, bytes.length ) ; try { out.write ( pl, 0, pl.length ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call<java.util.ArrayList<com.blocksolid.okrello.model.TrelloChecklist>> cardCall, retrofit2.Response<java.util.ArrayList<com.blocksolid.okrello.model.TrelloChecklist>> response ) { com.blocksolid.okrello.KeyResultsActivity.trelloCard.setChecklists ( response.body () ) ; try { com.blocksolid.okrello.KeyResultsActivity.keyResults = com.blocksolid.okrello.KeyResultsActivity.trelloCard.getKeyResultsCheckitems () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Collections.sort ( com.blocksolid.okrello.KeyResultsActivity.keyResults ) ; keyResultAdapter.updateData ( com.blocksolid.okrello.KeyResultsActivity.keyResults ) ; com.blocksolid.okrello.KeyResultsActivity.keyresProgressBar.setVisibility ( View.INVISIBLE ) ; } 
private void saveAndBack () { com.example.vietnguyen.core.utils.MU.hideSofeKeyboard ( activity ) ; note.message = getEditText ( R.id.edt_fragment_note_detail ) .getText () .toString () ; try { if ( com.example.vietnguyen.core.utils.MU.isEmpty ( note.message ) ) { note.delete () ; } else { note.date = new java.util.Date () ; note.save () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } activity.backOneFragment () ; } 
@ java.lang.Override public void step ( neutrality.NeutralityModel model, int step, java.util.Optional<java.lang.Double> substep ) { try { if ( step == 0 ) { super.step ( model, step, substep ) ; } else { neutrality.MarketInfo mi = getModel () .getMarketInformation ( ( step - 1 ) ) ; double mktNetInvest = mi.nspNetworkInvestment; makeNetworkInvestment ( step, mktNetInvest ) ; if ( getModel () .policyNSPContentAllowed ) { double mktVidInvest = mi.nspVideoInvestment; makeContentInvestment ( step, mktVidInvest ) ; } else { makeContentInvestment ( step, 0 ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void back () { try { if ( ( mPosition ) == 0 ) mPosition = ( jsData.length () ) - 1; else ( mPosition ) --; } catch ( Exception ex ) { ex.printStackTrace () ; } controller.setEndTime ( 0 ) ; player.stop () ; player.reset () ; } 
public void setLocation ( float x, float y, float z ) { if ( ( index ) == ( -1 ) ) { return; } try { org.lwjgl.openal.AL10.alSource3f ( store.getSource ( index ) , AL10.AL_POSITION, x, y, z ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.BeforeClass public static void init () throws java.io.IOException, java.lang.InterruptedException, java.sql.SQLException { try { if ( ! ( org.maxgamer.rs.TitanTest.initialized ) ) { org.maxgamer.rs.TitanTest.initialized = true; org.maxgamer.rs.core.Core.start () ; while ( ( org.maxgamer.rs.core.Core.getServer () .getTicks () ) <= 0 ) { java.lang.Thread.sleep ( 1 ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( isFavorite[0] ) { mDatabaseReferenceFavs.child ( trip.getId () ) .removeValue () ; unfavoriteTrip ( viewHolder.ivFavorite ) ; isFavorite[0] = false; } else { mDatabaseReferenceFavs.child ( trip.getId () ) .setValue ( trip ) ; favoriteTrip ( viewHolder.ivFavorite ) ; isFavorite[0] = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.nanosai.gridops.ion.read.IonReader setSource ( com.nanosai.gridops.mem.MemoryBlock sourceMemoryBlock ) { this.source = sourceMemoryBlock.memoryAllocator.data; this.index = sourceMemoryBlock.startIndex; this.nextIndex = sourceMemoryBlock.startIndex; try { this.sourceLength = sourceMemoryBlock.lengthWritten () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.intoIndexStackIndex = 0; this.scopeEndIndex = ( this.index ) + ( this.sourceLength ) ; return this; } 
public void displayLendDetails ( org.bbt.kiakoa.model.Lend lend ) { try { if ( ( lendDetailsFragment ) != null ) { lendDetailsFragment.setLend ( lend ) ; } else { if ( lend != null ) { android.content.Intent intent = new android.content.Intent ( this, org.bbt.kiakoa.LendDetailsActivity.class ) ; intent.putExtra ( LendDetailsActivity.EXTRA_LEND, lend ) ; startActivity ( intent ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int calculateCC ( ast.graph.Graph graph ) { int offset; try { offset = graph.getFinalNodes () .size () ; } catch ( Exception ex ) { ex.printStackTrace () ; } offset = ( offset == 1 ) ? offset - 1 : offset - 2; offset = 0; return ( ( graph.edgeCount () ) - ( ( graph.size () ) - offset ) ) + 2; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int x = jDialog.getX () ; x = x + 10; if ( x > ( xStart ) ) { x = xStart; if ( ( fadeOut ) != null ) { fadeOut.stop () ; } fadeOut = null; jDialog.setVisible ( false ) ; } try { jDialog.setLocation ( x, y ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void botJailTurn () { try { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0; _inJail = false; charge ( 50 ) ; } else _jailTurns += 1; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; charge ( 50 ) ; } else _jailTurns += 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isCurrentLocationValid () { try { for ( org.lwjgl.util.Point point : currentPiece.getPoints () ) { if ( ( ( ( ( point.getX () ) > ( board[0].length ) ) || ( ( point.getY () ) > ( board.length ) ) ) || ( ( point.getX () ) < 0 ) ) || ( ( point.getY () ) < 0 ) ) return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override @javax.jws.WebMethod public java.util.List<com.softserve.tc.diary.entity.Record> getAllPublicRecordsByNickName ( java.lang.String nickName ) { java.util.List<com.softserve.tc.diary.entity.Record> list = recordDAO.getAllPublicRecordsByNickName ( nickName ) ; try { java.util.Collections.sort ( list, new java.util.Comparator<com.softserve.tc.diary.entity.Record> () { @java.lang.Override public int compare ( com.softserve.tc.diary.entity.Record o1, com.softserve.tc.diary.entity.Record o2 ) { return ( o2.getCreatedTime () .getTime () ) > ( o1.getCreatedTime () .getTime () ) ? 1 : -1; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return list; } 
public void insertText ( java.lang.String txt, com.ibm.util.merge.Bookmark bkm ) { try { if ( txt.matches ( "^\\s*$" ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } int start = bkm.getStart () ; this.content.insert ( start, txt ) ; for ( com.ibm.util.merge.Bookmark theBookmark : this.bookmarks ) { if ( ( theBookmark.getStart () ) >= start ) { theBookmark.offest ( txt.length () ) ; } } return; } 
@ java.lang.Override public void onStart () { try { super.onStart () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.i ( com.ford.emergencyconnect.ResponderCallToActionFragment.FRAGMENT_TAG, "onStart Enter" ) ; android.widget.Button yesResponse = ( ( android.widget.Button ) ( rootView.findViewById ( R.id.yesResponse ) ) ) ; yesResponse.setEnabled ( false ) ; yesResponse.setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { android.util.Log.i ( com.ford.emergencyconnect.ResponderCallToActionFragment.FRAGMENT_TAG, "onClick () - Responder: YES" ) ; callback.onResponderCallToActionFragmentListener () ; } } ) ; } 
@ java.lang.Override public void setPrimaryItem ( android.view.ViewGroup container, int position, java.lang.Object object ) { try { super.setPrimaryItem ( container, position, object ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( ( getCurrentFragment () ) != object ) && ( object != null ) ) && ( object instanceof me.ccrama.redditslide.Fragments.CommentPage ) ) { mCurrentFragment = ( ( me.ccrama.redditslide.Fragments.CommentPage ) ( object ) ) ; if ( ! ( mCurrentFragment.loaded ) ) { if ( mCurrentFragment.isAdded () ) { mCurrentFragment.doAdapter ( true ) ; } } } } 
private void initializeViews () { try { titleTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.main_title_textView_id ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } subTitleTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.main_subTitle_textView_id ) ) ) ; registerButton = ( ( android.widget.Button ) ( findViewById ( R.id.main_register_button_id ) ) ) ; pollingButton = ( ( android.widget.Button ) ( findViewById ( R.id.main_polling_button_id ) ) ) ; issuesButton = ( ( android.widget.Button ) ( findViewById ( R.id.main_issues_button_id ) ) ) ; } 
public void preencheVagas () { boolean[] vagas = setor.vagas_Disponiveis () ; int progress = 0; try { for ( int i = 0; i < 16; i++ ) { if ( vagas[i] ) { ++progress; paineis[i].setBackground ( java.awt.Color.green ) ; } else paineis[i].setBackground ( java.awt.Color.red ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } progress = ( progress * 100 ) / 16; progressBar.setValue ( progress ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { if ( ( item.getItemId () ) == ( R.id.action_settings ) ) { android.content.Intent settingsIntent = new android.content.Intent ( this, com.stationmillenium.android.activities.SharedPreferencesActivity.class ) ; startActivity ( settingsIntent ) ; return true; } else return super.onOptionsItemSelected ( item ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void printDatabase ( java.lang.String passphrase ) { java.util.ArrayList<java.lang.String> dbString = dbHandler.databaseToString ( passphrase ) ; java.lang.String[] arr = new java.lang.String[dbString.size () ]; try { for ( int i = 0; i < ( dbString.size () ) ; i++ ) { arr[i] = dbString.get ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } accountDisplay.setAdapter ( new android.widget.ArrayAdapter<java.lang.String> ( this, android.R.layout.simple_list_item_1, arr ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( mFlashOn ) { runArtificialFlash () ; final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera.takePicture ( mShutterCallback, mRawCallback, null, mJPEGCallback ) ; } }; handler.postDelayed ( r, 800 ) ; } else { mCamera.takePicture ( mShutterCallback, mRawCallback, null, mJPEGCallback ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { try { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p.getRep () .asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode.create ( arg ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public java.lang.String authenticatePersonalCloud ( java.lang.String cspCloudName, java.lang.String cloudName, java.lang.String password ) { try { biz.neustar.pc.ui.manager.impl.PersonalCloudManagerImpl.LOGGER.info ( "In authenticate cloud name {} and csp {}", cloudName, cspCloudName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.sun.jersey.api.representation.Form form = new com.sun.jersey.api.representation.Form () ; form.add ( "password", password ) ; biz.neustar.pcloud.ResponseData responseData = pcRestClient.post ( java.text.MessageFormat.format ( UIRestPathConstants.PERSONAL_CLOUD_AUTH_API, cspCloudName, cloudName ) , form ) ; return responseData.getBody () ; } 
@ cucumber.api.java.en.Then ( value = "^the topology should be valid$" ) public void the_topology_should_be_valid () throws java.lang.Throwable { alien4cloud.rest.model.RestResponse<?> restResponse = alien4cloud.rest.utils.JsonUtil.read ( alien4cloud.it.Context.getInstance () .getRestResponse () , alien4cloud.it.Context.getJsonMapper () ) ; try { assertNotNull ( restResponse.getData () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Map<java.lang.String, java.lang.Object> dataMap = alien4cloud.rest.utils.JsonUtil.toMap ( alien4cloud.rest.utils.JsonUtil.toString ( restResponse.getData () ) ) ; assertTrue ( java.lang.Boolean.valueOf ( dataMap.get ( "valid" ) .toString () ) ) ; } 
public void generateModels () throws freemarker.template.TemplateException, java.io.IOException { generateCommonFiles () ; try { for ( com.codegen.model.ClassDefinition classDefinition : this.getClassDefinitions () ) { generatePOJO ( classDefinition ) ; generateDTO ( classDefinition ) ; generateServiceInterface ( classDefinition ) ; generateServiceImpl ( classDefinition ) ; generateDAOInterface ( classDefinition ) ; generateDAOImpl ( classDefinition ) ; generateRestClient ( classDefinition ) ; generateServiceTest ( classDefinition ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void test2ShapesMirrorHorizontal () { try { shape.setPosition ( 100, 200 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } shape2.setPosition ( ( -100 ) , ( -200 ) ) ; shape.mirrorHorizontal ( shape.getGravityCentre () .getMiddlePoint ( shape2.getGravityCentre () ) ) ; assertEquals ( ( -100.0 ) , shape.getX () , 1.0E-5 ) ; assertEquals ( 200.0, shape.getY () , 1.0E-5 ) ; } 
public void getTextFromActivity () { java.lang.String textInString = null; if ( ( editTextInput ) != null ) { textInString = editTextInput.getText () .toString () ; } if ( ( textInString == null ) || ( textInString.isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this, com.mmdj.textanalyzer.Result_Activity.class ) ; intent.putExtra ( "textInString", textInString ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void importFile ( java.lang.String fileName ) throws java.io.IOException { if ( ! ( fileSelecMap.containsKey ( fileName ) ) ) { fileNameLists.add ( fileName ) ; fileList.setItems ( javafx.collections.FXCollections.observableArrayList ( fileNameLists ) ) ; } java.io.File f = new java.io.File ( ( ( ( application.Controller.currentProgramFolder ) + "/" ) + fileName ) ) ; try { fileSelecMap.put ( fileName, parseFile ( f ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void startNameActivity ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this, io.exis.cards.cards.NameActivity.class ) ; intent.putExtra ( "screenName", screenName ) ; startActivityForResult ( intent, 1 ) ; try { if ( ( android.os.Build.VERSION.SDK_INT ) >= 21 ) { overridePendingTransition ( R.anim.slide_in_right, R.anim.slide_out_left ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.lang.String[] removeEmptyEntries ( java.lang.String[] queryParts ) { int emptyCount = 0; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart.length () ) == 0 ) emptyCount++; } java.lang.String[] trimmedArray = new java.lang.String[ ( queryParts.length ) - emptyCount]; int trimIndex = 0; try { for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart.length () ) != 0 ) { trimmedArray[trimIndex] = queryPart; trimIndex++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return trimmedArray; } 
public void showDatabase () { try { if ( ( preferenceChecker.howToDisplayCategories () ) != ( com.example.brandon.habitlogger.Preferences.PreferenceChecker.AS_CARDS ) ) { habitList = habitDatabase.getHabits () ; habitAdapter = new com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewAdapter ( habitList, this, menuItemClickListener, buttonClickListener ) ; if ( ( habitDisplayMode ) == ( ONLY_ARCHIVED_HABITS ) ) com.example.brandon.habitlogger.common.MyCollectionUtils.filter ( habitList, Habit.FilterOutNonArchivedHabits ) ; else if ( ( habitDisplayMode ) == ( NO_ARCHIVED_HABITS ) ) com.example.brandon.habitlogger.common.MyCollectionUtils.filter ( habitList, Habit.FilterOutArchivedHabits ) ; java.util.Collections.sort ( habitList, Habit.CategoryNameComparator ) ; habitCardContainer.setAdapter ( habitAdapter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.List<java.lang.Integer> getColorsList ( final java.util.List<simulator.common.graphic.Point> pointList ) { java.util.List<java.lang.Integer> colorsList = new java.util.ArrayList<java.lang.Integer> ( pointList.size () ) ; try { for ( simulator.common.graphic.Point point : pointList ) { colorsList.add ( point.getColor () .getValue () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return colorsList; } 
public void onDrawerItemClick ( android.view.View view ) { java.lang.String itemText = ( ( android.widget.TextView ) ( view ) ) .getText () .toString () ; try { if ( itemText.equals ( getString ( R.string.drawer_item_sign_out ) ) ) { progressDialog.show () ; accountHandler.signOut () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.afegeix: calcul_data () ; break; case R.id.dataInit: fromDatePickerDialog.show () ; break; case R.id.dataFi: toDatePickerDialog.show () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setNoBudgetsIndication () { findViewById ( R.id.loading_spinner ) .setVisibility ( View.GONE ) ; try { if ( ( this.mapOfBudgets.size () ) > 0 ) { findViewById ( R.id.crying_logo ) .setVisibility ( View.GONE ) ; findViewById ( R.id.explaining_text ) .setVisibility ( View.GONE ) ; } else { findViewById ( R.id.crying_logo ) .setVisibility ( View.VISIBLE ) ; ( ( android.widget.TextView ) ( findViewById ( R.id.explaining_text ) ) ) .setText ( getResources () .getString ( R.string.no_budgets_message ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void itemStateChanged ( java.awt.event.ItemEvent arg0 ) { try { if ( ( chkEnOHiHatA.isSelected () ) || ( chkEnOHiHatB.isSelected () ) ) { if ( ! ( cBoxPortOHiHat.isEnabled () ) ) cBoxPortOHiHat.setEnabled ( true ) ; } else { cBoxPortOHiHat.removeAll () ; cBoxPortOHiHat.addItem ( "" ) ; cBoxPortOHiHat.setEnabled ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( "HomeFragment.onCreate" ) ; mPageChangeListener = new com.pratilipi.mobile.android.homescreen.home.HomeFragment.HomePageChangeListener () ; java.util.ArrayList<java.lang.String> stringArrayList = new java.util.ArrayList ( java.util.Arrays.asList ( mActivity.getResources () .getStringArray ( R.array.loading_quotes_array ) ) ) ; mProgressHandler = new com.pratilipi.mobile.android.widget.AnimatedProgressIndicator ( mActivity, stringArrayList ) ; } 
@ java.lang.Override public void robotInit () { robotState = org.usfirst.frc.team4529.robot.RobotState.getInstance () ; robotState.start () ; robotArm = org.usfirst.frc.team4529.robot.RobotArm.getInstance () ; robotShooter = org.usfirst.frc.team4529.robot.RobotShooter.getInstance () ; joystick = new edu.wpi.first.wpilibj.Joystick ( org.usfirst.frc.team4529.robot.Robot.JOYSTICK_PORT ) ; driveBase = new org.usfirst.frc.team4529.robot.drivebase.OmniWheel () ; try { pausableThreads.add ( robotShooter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } pausableThreads.add ( robotArm ) ; } 
public void onClickShowHideFilters ( android.view.View view ) { android.widget.LinearLayout button_filter = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.filters_container ) ) ) ; try { if ( ( button_filter.getVisibility () ) == ( android.view.View.GONE ) ) button_filter.setVisibility ( View.VISIBLE ) ; else { button_filter.setVisibility ( View.GONE ) ; android.widget.EditText editText_brand = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_client_code ) ) ) ; editText_brand.clearFocus () ; android.widget.EditText editText_client_code = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_client_code ) ) ) ; editText_client_code.clearFocus () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void removeWeakSpecies () { int sum = totalAverageFitness () ; try { for ( int s = 0; s < ( getSpecies () .size () ) ; s++ ) { com.starflask.JavaNESBrain.evolution.Species specie = getSpecies () .get ( s ) ; float breed = com.starflask.JavaNESBrain.utils.FastMath.floor ( ( ( ( specie.averageFitness ) / sum ) * ( Population ) ) ) ; if ( breed < 1 ) { species.remove ( specie ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void openHelpWindow () { this.commandBox.clickOnTextField () ; assertHelpWindowOpen ( this.mainMenu.openHelpWindowUsingAccelerator () ) ; this.resultDisplay.clickOnTextArea () ; assertHelpWindowOpen ( this.mainMenu.openHelpWindowUsingAccelerator () ) ; this.taskListPanel.clickOnListView () ; try { assertHelpWindowOpen ( this.mainMenu.openHelpWindowUsingAccelerator () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertHelpWindowOpen ( this.mainMenu.openHelpWindowUsingMenu () ) ; assertHelpWindowOpen ( this.commandBox.runHelpCommand () ) ; } 
protected void checkAddIncludePath () { com.jetbrains.php.config.PhpProjectConfigurationFacade facade = com.jetbrains.php.config.PhpProjectConfigurationFacade.getInstance ( this.project ) ; java.util.List<java.lang.String> includePaths = facade.getIncludePath () ; java.lang.String completionIncludePath = completions.getIncludePath () ; if ( includePaths.contains ( completionIncludePath ) ) { includePaths.remove ( completionIncludePath ) ; facade.setIncludePath ( includePaths ) ; } try { includePaths.add ( completionIncludePath ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } facade.setIncludePath ( includePaths ) ; } 
public boolean isAltACTGN () { try { for ( com.bina.varsim.types.variant.alt.Alt a : alts ) { if ( a.isSeq () ) { if ( ! ( a.getSeq () .toString () .matches ( "[ACTGN]*" ) ) ) { return false; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { try { if ( position != 0 ) { searchView.setText ( hotWords.get ( position ) , true ) ; removeCover ( true ) ; layoutSearch.performClick () ; } else { searchView.setText ( "" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder, int position, int type ) { int bgRes = 0; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND: bgRes = R.drawable.bg_swipe_item_neutral; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND: bgRes = R.drawable.bg_swipe_item_left; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND: bgRes = R.drawable.bg_swipe_item_right; break; } try { holder.itemView.setBackgroundResource ( bgRes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void openImageSelector ( android.view.View view ) { android.content.Intent intent; if ( ( Build.VERSION.SDK_INT ) < 19 ) { intent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; } else { intent = new android.content.Intent ( android.content.Intent.ACTION_OPEN_DOCUMENT ) ; intent.addCategory ( Intent.CATEGORY_OPENABLE ) ; } try { intent.setType ( "image/*" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivityForResult ( android.content.Intent.createChooser ( intent, "Select Picture" ) , pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.PICK_IMAGE_REQUEST ) ; } 
static void add ( java.lang.String list, java.lang.String back, java.lang.String url ) { try { java.lang.System.out.println ( clientside.JukePiCmd.server.addToList ( url, ( list.equals ( "wl" ) ? true : false ) , ( back.equals ( "b" ) ? false : true ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String getText ( mage.abilities.Mode mode ) { if ( ( ( staticText ) != null ) && ( ! ( staticText.isEmpty () ) ) ) { return staticText; } try { if ( ( ( targetName ) != null ) && ( ( targetName.length () ) > 0 ) ) { return ( targetName ) + " doesn't untap during its controller's next untap step"; } else { return ( "Target " + ( mode.getTargets () .get ( 0 ) .getTargetName () ) ) + " doesn't untap during its controller's next untap step"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void factoryReset () { setupConfig = new dcp.logic.model.config.SetupConfig ( appConfig.getDefaultSetupConfig () ) ; dcp.logic.factory.PackFactory.clear () ; if ( ( packs ) != null ) packs.clear () ; try { dcp.logic.factory.GroupFactory.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( groups ) != null ) groups.clear () ; tabsInit () ; dcp.config.io.IOFactory.setSaveFile ( "" ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mInputEdit = ( ( android.widget.EditText ) ( findViewById ( R.id.command_input_edit ) ) ) ; mResultBoard = ( ( android.widget.TextView ) ( findViewById ( R.id.result_board ) ) ) ; mResultBoard.setMovementMethod ( new android.text.method.ScrollingMovementMethod () ) ; try { findViewById ( R.id.run_command ) .setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { runCommand () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateGraph ( int phase, java.time.LocalDateTime phasetime ) { int min = phasetime.getMinute () ; int sec = phasetime.getSecond () ; double timer = min + ( sec / 60.0 ) ; try { this.phases[ ( phase - 1 ) ].getData () .add ( new javafx.scene.chart.XYChart.Data<> ( ( ( double ) ( this.phaseCounter ) ) , timer ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( this.phaseCounter ) ++; } 
public int flip ( java.lang.String imageId, boolean horizontal ) { com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe4b.edivator.backend.service.Image flippingImage = com.gruppe4b.edivator.backend.service.ImagesServiceFactory.makeImageFromBlob ( key ) ; com.gruppe4b.edivator.backend.service.Transform transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory.makeHorizontalFlip () ; try { if ( horizontal == true ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory.makeHorizontalFlip () ; } else if ( horizontal == false ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory.makeVerticalFlip () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } com.gruppe4b.edivator.backend.service.Image flippedImage = imagesService.applyTransform ( transform, flippingImage ) ; int newId = 0; return newId; } 
public static void generateDataForCourse ( java.lang.String courseName ) { long numOfInstr = ( teammates.client.scripts.DataGenerator.random.nextInt ( ( ( ( teammates.client.scripts.DataGenerator.MAX_NUM_OF_INSTRUCTOR_PER_COURSES ) - ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ) + 1 ) ) ) + ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ; try { for ( int j = 0; j < numOfInstr; j++ ) { java.lang.String instrName = ( ( "Instr" + j ) + "_of_" ) + courseName; teammates.client.scripts.DataGenerator.instructors.put ( instrName, courseName ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } teammates.client.scripts.DataGenerator.generateStudentsDataForCourse ( courseName ) ; } 
public void removeUserSession ( java.lang.String sUserId, java.lang.String sSession ) { try { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0; i < ( nl.ru.crpstudio.CrpUtil.userCache.size () ) ; i++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache.get ( i ) ; if ( ( oThis.userId.equals ( sUserId ) ) && ( oThis.sessionId.equals ( sSession ) ) ) { oThis.userOkay = false; oThis.sessionId = ""; return; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.facebook.react.bridge.ReactMethod public void getFocalLength ( com.facebook.react.bridge.ReadableMap options, final com.facebook.react.bridge.Promise promise ) { android.hardware.Camera camera = com.lwansbrough.RCTCamera.RCTCamera.getInstance () .acquireCameraInstance ( options.getInt ( "type" ) ) ; if ( null == camera ) { promise.reject ( "No camera found." ) ; return; } try { promise.resolve ( com.lwansbrough.RCTCamera.RCTCamera.getInstance () .getFocalLength ( options.getInt ( "type" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testProcessMov () throws net.torocraft.minecoprocessors.util.ParseException { net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest ( 0, 30, 0, 0, "mov a, b" ) ; processor.processMov () ; try { net.torocraft.minecoprocessors.processor.ProcessorTest.assertRegisters ( processor, 30, 30, 0, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest ( 0, 30, 0, 0, "mov a, 51" ) ; processor.processMov () ; net.torocraft.minecoprocessors.processor.ProcessorTest.assertRegisters ( processor, 51, 30, 0, 0 ) ; } 
@ java.lang.Override public void setValue ( java.lang.String key, java.lang.String value ) { try { com.google.common.base.Preconditions.checkNotNull ( nodeName, "Node name cannot be null." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue tokenValue = tokenValueMap.get ( key ) ; if ( tokenValue == null ) { tokenValue = new co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue () ; tokenValueMap.put ( key, tokenValue ) ; } tokenValue.putValue ( nodeName, value ) ; } 
private static org.stepik.api.objects.StudyObject getLessonStudyObject ( long lessonId, long unitId ) { org.stepik.api.client.StepikApiClient stepikApiClient = org.stepik.core.stepik.StepikAuthManager.authAndGetStepikApiClient () ; org.stepik.api.objects.lessons.CompoundUnitLesson unitLesson = org.stepik.plugin.utils.Utils.getCompoundUnitLessonStudyObject ( stepikApiClient, unitId, lessonId ) ; org.stepik.api.objects.units.Unit unit = unitLesson.getUnit () ; try { if ( ( unit.getId () ) != 0 ) { org.stepik.api.objects.sections.Section section = org.stepik.plugin.utils.Utils.getSectionStudyObject ( stepikApiClient, unit.getSection () ) ; if ( section != null ) { return org.stepik.plugin.utils.Utils.getCourseStudyObject ( section.getCourse () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return unitLesson; } 
private static java.util.List<java.lang.Integer> generate ( int n ) { java.util.List<java.lang.Integer> factors = new java.util.ArrayList<> () ; if ( n == 1 ) { return factors; } for ( int i = 2; i <= n; i++ ) { if ( ( n % i ) == 0 ) { factors.add ( i ) ; n /= i; } } try { if ( factors.isEmpty () ) { factors.add ( n ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return factors; } 
private boolean isKeyWords ( char ch ) { try { if ( ( ( ch == '<' ) || ( ch == '>' ) ) || ( ch == '?' ) ) { return true; } else if ( ch == '=' ) { return ( ( peekChar () ) == '"' ) || ( ( peekChar () ) == '\'' ) ; } else { return ( ch == '/' ) && ( ( peekChar () ) == '>' ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
java.lang.Long performOperations ( Tree<java.lang.Integer> tree, OperationType operation ) { if ( operation == null ) { return performMixedOperations ( tree ) ; } else if ( operation.equals ( OperationType.INSERT ) ) { return performInserts ( tree ) ; } else if ( operation.equals ( OperationType.SEARCH ) ) { return performSearches ( tree ) ; } else if ( operation.equals ( OperationType.DELETE ) ) { return performDeletes ( tree ) ; } try { java.lang.System.out.println ( "An error occurred." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return 0L; } 
@ java.lang.Override public void onError ( java.lang.Throwable throwable ) { com.orhanobut.logger.Logger.e ( ( "There was a problem loading bus on line " + throwable ) ) ; throwable.printStackTrace () ; try { vista.showLoading ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( throwable instanceof com.lowwor.realtimebus.domain.NetworkInteractor.NetworkUnavailableException ) { vista.showOffline ( true ) ; } else { vista.showOffline ( false ) ; } } 
public void setVariables ( java.util.Map<java.lang.Integer, java.lang.Object> data ) { try { if ( ( data != null ) && ( ( data.entrySet () .size () ) != 0 ) ) { for ( java.util.Map.Entry<java.lang.Integer, java.lang.Object> entry : data.entrySet () ) { binding.setVariable ( entry.getKey () , entry.getValue () ) ; } binding.executePendingBindings () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { final VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; final VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this, getModuleCount () , mod.getState () ) ; try { c.execute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } VASSAL.build.GameModule.getGameModule () .sendAndLog ( c ) ; } 
@ java.lang.Override public boolean onError ( io.vov.vitamio.MediaPlayer mp, int what, int extra ) { try { android.util.Log.e ( com.xugaoxiang.live_vtm.activity.MainActivity.TAG, ( ( ( ( "播放出错！" + "what:" ) + what ) + ",extra:" ) + extra ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.widget.Toast.makeText ( this, ( ( ( "播放出错！what:" + what ) + ",extra:" ) + extra ) , Toast.LENGTH_LONG ) .show () ; return false; } 
public void processPages ( long recordsToReadInThisPass ) throws java.io.IOException { try { reset () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( recordsToReadInThisPass > 0 ) { do { determineSize ( recordsToReadInThisPass ) ; } while ( ( ( valuesReadInCurrentPass ) < recordsToReadInThisPass ) && ( pageReader.hasPage () ) ) ; } org.apache.drill.exec.store.parquet.columnreaders.ColumnReader.logger.trace ( "Column Reader: {} - Values read in this pass: {} - ", this.getColumnDescriptor () .toString () , valuesReadInCurrentPass ) ; valueVec.getMutator () .setValueCount ( valuesReadInCurrentPass ) ; } 
public org.structr.core.GraphObject getEntity () throws org.structr.common.error.FrameworkException { final org.structr.core.GraphObject entity = idResource.getEntity () ; try { if ( entity != null ) { java.lang.String type = org.structr.schema.SchemaHelper.normalizeEntityName ( typeResource.getRawType () ) ; if ( org.structr.core.graph.search.SearchCommand.getAllSubtypesAsStringSet ( entity.getType () ) .contains ( type ) ) { return entity; } } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new org.structr.rest.exception.NotFoundException () ; } 
public static void startFirebasePhoneAuth ( android.content.Context context, xyz.belvi.baseauth_firebase.callbacks.FirebaseAuthListener authListener, @android.support.annotation.StyleRes int styleRes ) { try { xyz.belvi.baseauth_firebase.auth.AuthHandler.init ( authListener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } context.startActivity ( new android.content.Intent ( context, xyz.belvi.baseauth_firebase.auth.FireAuthActivity.class ) .putExtra ( xyz.belvi.baseauth_firebase.auth.STYLE_KEY, styleRes ) .putExtra ( xyz.belvi.baseauth_firebase.auth.CODE_LENGTH, FirebaseAuthListener.AUTH_CODE_LENGTH ) .putExtra ( xyz.belvi.baseauth_firebase.auth.AUTH_MODE_KEY, AUTH_MODE.FIRE_BASE.name () ) ) ; } 
public void removeItem ( com.brothers.travelplanner.activities.priceplan.cart.CartDataModel item ) { for ( int index = 0; index < ( cartDataModelList.size () ) ; index++ ) { if ( ( ( cartDataModelList.get ( index ) .index ) == ( item.index ) ) && ( ( cartDataModelList.get ( index ) .getId () ) == ( item.getId () ) ) ) { cartDataModelList.remove ( index ) ; } } try { notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<trackerApplication.entity.Vehicle> getVehiclesByUsername ( java.lang.String username ) { java.util.List<trackerApplication.entity.Vehicle> vehicles = new java.util.ArrayList<> () ; org.hibernate.Session session = trackerApplication.persistence.SessionFactoryProvider.getSessionFactory () .openSession () ; vehicles = ( ( java.util.List<trackerApplication.entity.Vehicle> ) ( session.get ( trackerApplication.entity.Vehicle.class, username ) ) ) ; try { logger.info ( ( "Username: " + username ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } logger.info ( ( "Vehicles found: " + ( vehicles.size () ) ) ) ; return vehicles; } 
private boolean updateVisibilityCheck ( boolean visible, com.android.internal.util.cm.LockscreenShortcutsHelper.Shortcuts shortcut ) { boolean customTarget = mShortcutHelper.isTargetCustom ( shortcut ) ; try { if ( customTarget ) { boolean isEmpty = mShortcutHelper.isTargetEmpty ( shortcut ) ; if ( isEmpty ) { visible = false; } else { visible = true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return visible; } 
@ org.greenrobot.eventbus.Subscribe ( threadMode = org.greenrobot.eventbus.ThreadMode.MAIN ) public void onReceiveStateInMain ( com.tan.musicplayer.common.PlayerEvent.StateEvent event ) { mIsBusy = false; try { android.util.Log.i ( com.tan.musicplayer.base.BasePlayerAcitvity.TAG, "onReceiveStateInMain: " ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( event.songs ) != null ) { mSongs = event.songs; mCurrentTime = event.time; mCurrentSongIndex = event.index; mIsPlaying = event.isPlaying; mDuration = mSongs.get ( mCurrentSongIndex ) .getFileDuration () ; onSetSongs () ; onReceiveServiceStateSuccess ( false ) ; mIsServiceEmpty = false; } else { mIsServiceEmpty = true; onReceiveServiceStateSuccess ( true ) ; } } 
@ org.testng.annotations.Test ( description = "Exception when retrieving documentation summary given the id", expectedExceptions = org.wso2.carbon.apimgt.core.exception.APIMgtDAOException.class ) public void testGetDocumentationSummaryException () throws org.wso2.carbon.apimgt.core.exception.APIManagementException { org.wso2.carbon.apimgt.core.dao.ApiDAO apiDAO = org.mockito.Mockito.mock ( org.wso2.carbon.apimgt.core.dao.ApiDAO.class ) ; org.wso2.carbon.apimgt.core.impl.AbstractAPIManager apiStore = new org.wso2.carbon.apimgt.core.impl.APIStoreImpl ( org.wso2.carbon.apimgt.core.impl.AbstractAPIManagerTestCase.USER_NAME, apiDAO, null, null, null, null, null, null ) ; try { org.mockito.Mockito.when ( apiDAO.getDocumentInfo ( org.wso2.carbon.apimgt.core.impl.AbstractAPIManagerTestCase.UUID ) ) .thenThrow ( new org.wso2.carbon.apimgt.core.exception.APIMgtDAOException ( "Error occurred while retrieving documents" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } apiStore.getDocumentationSummary ( org.wso2.carbon.apimgt.core.impl.AbstractAPIManagerTestCase.UUID ) ; } 
@ java.lang.Override public void onPageScrolled ( int position, float positionOffset, int positionOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager.getWidth () ) / ( mViewPager.getAdapter () .getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; try { setTranslationX ( translationX ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private synchronized void setExportProperties ( org.gephi.preview.api.PreviewModel m ) { org.gephi.preview.api.PreviewProperties props = m.getProperties () ; props.putValue ( PreviewProperty.VISIBILITY_RATIO, 1.0F ) ; props.putValue ( "width", width ) ; props.putValue ( "height", height ) ; try { oldColor = props.getColorValue ( PreviewProperty.BACKGROUND_COLOR ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( transparentBackground ) { props.putValue ( PreviewProperty.BACKGROUND_COLOR, null ) ; } props.putValue ( PreviewProperty.MARGIN, new java.lang.Float ( margin ) ) ; } 
public void setFullscreen () { setExtendedState ( java.awt.Frame.MAXIMIZED_BOTH ) ; java.awt.Dimension screensize = java.awt.Toolkit.getDefaultToolkit () .getScreenSize () ; xScaling = ( ( float ) ( screensize.width ) ) / 800.0F; yScaling = ( ( float ) ( screensize.height ) ) / 600.0F; canvas.setScaleX ( xScaling ) ; canvas.setScaleY ( yScaling ) ; try { ml.setScale ( xScaling, yScaling ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fullscreen = true; } 
private void handleForeignKeyInfo ( org.talend.mdm.commmon.metadata.MetadataRepository repository, org.talend.mdm.commmon.metadata.annotation.XmlSchemaAnnotationProcessorState state, org.w3c.dom.Element appInfo ) { java.lang.String path = appInfo.getTextContent () ; org.talend.mdm.commmon.metadata.FieldMetadata fieldMetadata = org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor.getFieldMetadata ( repository, ( ( org.talend.mdm.commmon.metadata.ComplexTypeMetadata ) ( state.getReferencedType () ) ) , appInfo, path, true ) ; try { state.setForeignKeyInfo ( fieldMetadata ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void backButtonClick () { try { if ( ( currentPlayer ) > 0 ) { gameFrame.getGame () .setCurrentPlayer ( ( ( currentPlayer ) - 1 ) ) ; new trivia.gui.PlayerJoinPanel ( gameFrame ) ; } else { gameFrame.getGame () .setCurrentPlayer ( 0 ) ; gameFrame.getGame () .reset () ; new trivia.gui.MainMenuPanel ( gameFrame ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.Boolean parseBoolean ( final java.lang.Object o ) { try { if ( o instanceof java.lang.String ) { if ( o.equals ( "true" ) ) { return java.lang.Boolean.TRUE; } else if ( o.equals ( "false" ) ) { return java.lang.Boolean.FALSE; } } else if ( o instanceof java.lang.Boolean ) { return ( ( java.lang.Boolean ) ( o ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public static com.flatworks.games.flatcraft.world.World simulateWorld ( com.flatworks.games.flatcraft.world.World world ) { com.flatworks.games.flatcraft.world.WorldGenerator.state ( "Simulating World..." ) ; try { for ( int i = 0; i < 200; i++ ) { world.runTick ( true ) ; com.flatworks.games.flatcraft.world.WorldGenerator.progress ( ( 0.5F + ( ( ( float ) ( ( ( double ) ( i ) ) / ( ( double ) ( 200 ) ) ) ) * 0.5F ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return world; } 
public static boolean setAutoExposureLock ( boolean lock ) { try { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller.getInstance () .camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder.set ( CaptureRequest.CONTROL_AE_LOCK, lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller.setRepeatingRequest () ; android.preference.PreferenceManager.getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen.getMainContext () ) .edit () .putBoolean ( ApplicationScreen.sAELockPref, lock ) .commit () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void writeTo ( org.elasticsearch.common.io.stream.StreamOutput out ) throws java.io.IOException { super.writeTo ( out ) ; int numJobs = toKill.size () ; out.writeVInt ( numJobs ) ; try { for ( java.util.UUID job : toKill ) { out.writeLong ( job.getMostSignificantBits () ) ; out.writeLong ( job.getLeastSignificantBits () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void dispatchTakePictureFromGallery () { android.content.Intent getIntent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; getIntent.setType ( "image/*" ) ; android.content.Intent pickIntent = new android.content.Intent ( android.content.Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; pickIntent.setType ( "image/*" ) ; android.content.Intent chooserIntent = null; chooserIntent = android.content.Intent.createChooser ( getIntent, "Select Image" ) ; try { chooserIntent.putExtra ( Intent.EXTRA_INITIAL_INTENTS, new android.content.Intent[] { pickIntent } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivityForResult ( chooserIntent, nl.hanze.myhealth.PhotoIntentActivity.PICK_IMAGE ) ; } 
private void loadImages () { javax.swing.ImageIcon iid = new javax.swing.ImageIcon ( "dot.png" ) ; ball = iid.getImage () ; javax.swing.ImageIcon iia = new javax.swing.ImageIcon ( "apple.png" ) ; apple = iia.getImage () ; javax.swing.ImageIcon iih = new javax.swing.ImageIcon ( "snakehead.png" ) ; try { head = iih.getImage () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.HashMap<de.uni_freiburg.informatik.ultimate.logic.TermVariable, de.uni_freiburg.informatik.ultimate.logic.Term> constructAuxVarMapping ( final java.util.Set<de.uni_freiburg.informatik.ultimate.logic.TermVariable> auxVars ) { final java.util.HashMap<de.uni_freiburg.informatik.ultimate.logic.TermVariable, de.uni_freiburg.informatik.ultimate.logic.Term> result = new java.util.HashMap<> () ; try { for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result.put ( auxVar, auxVarConst ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public void createContent ( org.eclipse.swt.widgets.Composite parent ) { createImages ( parent.getDisplay () ) ; parent.setLayout ( com.eclipsesource.example.ece2011.ui.admin.AdminUI.createMainLayout () ) ; org.eclipse.swt.widgets.Control upperPart = createUpperPart ( parent ) ; upperPart.setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL, org.eclipse.swt.SWT.TOP, true, false ) ) ; org.eclipse.swt.widgets.Control lowerPart = createLowerPart ( parent ) ; try { lowerPart.setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL, org.eclipse.swt.SWT.FILL, true, true ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } changeTracker = new com.eclipsesource.example.ece2011.ui.admin.AdminUI.UiChangeTracker () ; changeTracker.start () ; } 
protected com.tcdi.zombodb.query_parser.rewriters.QueryBuilder build ( com.tcdi.zombodb.query_parser.rewriters.ASTExpansion node ) { com.tcdi.zombodb.query_parser.rewriters.QueryBuilder expansionBuilder = build ( node.getQuery () ) ; com.tcdi.zombodb.query_parser.rewriters.QueryParserNode filterQuery = node.getFilterQuery () ; try { if ( filterQuery != null ) { com.tcdi.zombodb.query_parser.rewriters.BoolQueryBuilder bqb = boolQuery () ; bqb.must ( expansionBuilder ) ; bqb.must ( build ( filterQuery ) ) ; expansionBuilder = applyVisibility ( bqb, node.getIndexLink () .getIndexName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return expansionBuilder; } 
@ java.lang.Override protected void onPause () { android.support.v4.content.LocalBroadcastManager.getInstance ( this ) .unregisterReceiver ( mAudioReceiver ) ; try { if ( ( ( mAudioController ) != null ) && ( mAudioController.isAudioPlaying () ) ) { startService ( com.bandonleon.audioservice.AudioService.getStartIdleIntent ( this ) ) ; mAudioController.startForegroundService ( com.bandonleon.audioservice.MainActivity.AUDIO_TRACK_TITLE ) ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onPause () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( path = "/initiative/{initiativeId}/model/section/{sectionId}", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.collectiveone.common.dto.GetResult<org.collectiveone.modules.model.dto.ModelSectionDto> getSection ( @org.springframework.web.bind.annotation.PathVariable ( value = "initiativeId" ) java.lang.String initiativeIdStr, @org.springframework.web.bind.annotation.PathVariable ( value = "sectionId" ) java.lang.String sectionIdStr, @org.springframework.web.bind.annotation.RequestParam ( defaultValue = "1" ) java.lang.Integer level ) { java.util.UUID initiativeId = java.util.UUID.fromString ( initiativeIdStr ) ; try { if ( ! ( initiativeService.canAccess ( initiativeId, getLoggedUserId () ) ) ) { return new org.collectiveone.common.dto.GetResult<org.collectiveone.modules.model.dto.ModelSectionDto> ( "error", "access denied", null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return modelService.getSection ( java.util.UUID.fromString ( sectionIdStr ) , getLoggedUserId () , level ) ; } 
private void cloneOriginRepository () throws java.io.IOException, org.eclipse.jgit.api.errors.GitAPIException, org.eclipse.jgit.api.errors.InvalidRemoteException, org.eclipse.jgit.api.errors.TransportException { gitRepo = org.eclipse.jgit.api.Git.cloneRepository () .setURI ( getOriginUrl () ) .setDirectory ( createTempDirectory ( "TestGitRepo" ) ) .call () ; try { testTempRepo = gitRepo.getRepository () .getDirectory () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void lineLengthCalculator ( java.lang.String currentLine ) { ( totalLines ) ++; currentLine = currentLine.trim () ; java.lang.String[] str1 = currentLine.replaceAll ( "\\s+", " " ) .replaceAll ( "\\W", "" ) .split ( " " ) ; try { for ( java.lang.String s : str1 ) { lineLengthList.add ( s.length () ) ; totalCharacters += s.length () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public ulm.university.news.controller.Ballot getBallot ( java.lang.String accessToken, int groupId, int ballotId, boolean withSubresources ) throws ulm.university.news.util.exceptions.ServerException { ulm.university.news.controller.Ballot ballot; ulm.university.news.controller.User requestor = verifyUserAccess ( accessToken ) ; ulm.university.news.controller.GroupController.logger.debug ( ( "The requestor, i.e. the user with id {}, requests the ballot with the id {} from the group with" + " the id {}." ) , requestor.getId () , ballotId, groupId ) ; try { verifyGroupExistenceViaDB ( groupId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } verifyParticipationInGroupViaDB ( groupId, requestor.getId () ) ; ballot = getBallot ( groupId, ballotId, withSubresources ) ; return ballot; } 
private void logKeys ( java.util.List<org.jfl110.api.auth.rolling.RollingKey> sortedKeys ) { try { for ( int i = 0; i < ( sortedKeys.size () ) ; i++ ) { org.jfl110.api.auth.rolling.RollingKey key = sortedKeys.get ( i ) ; java.lang.System.out.println ( ( ( ( ( ( ( ( "Key[" + i ) + "] " ) + ( key.keyNumber () ) ) + " " ) + ( key.validFrom () ) ) + " " ) + ( key.validForSeconds () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { if ( ( args.length ) < 2 ) { java.lang.System.out.println ( "Usage: java MusicTransposer music.xml key" ) ; } MusicFile music = new MusicFile ( args[0] ) ; try { muaic.transposeTo ( KEY.getKeyByNote ( NOTE.getNoteByNote ( args[1].charAt ( 0 ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initUserFields () { java.util.List<java.lang.String> userData = mDataManager.getPreferencesManager () .loadUserProfileData () ; try { for ( int i = 0; i < ( mUserInfoViews.size () ) ; i++ ) { mUserInfoViews.get ( i ) .setText ( userData.get ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mNavTxtEmailView.setText ( userData.get ( 1 ) ) ; mNavTxtNameView.setText ( userData.get ( ( ( userData.size () ) - 1 ) ) ) ; } 
private void initialize () { try { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication.getAppContext () .getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager.getAdapter () ; } else { android.util.Log.w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG, "initialize () ---> Bluetooth adapter is already initialized" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int compare ( main.java.addressBook.Person lhs, main.java.addressBook.Person rhs ) { try { if ( ( ( lhs.getFirstName () ) != null ) || ( ( rhs.getFirstName () ) != null ) ) { return lhs.getLastName () .concat ( lhs.getFirstName () ) .compareTo ( rhs.getLastName () .concat ( rhs.getFirstName () ) ) ; } else { return lhs.getLastName () .compareTo ( rhs.getLastName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run ( gov.sandia.n2a.backend.internal.Euler simulator ) { setFlag () ; try { for ( gov.sandia.n2a.language.type.Instance i : targets ) simulator.integrate ( i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( gov.sandia.n2a.language.type.Instance i : targets ) i.update ( simulator ) ; for ( gov.sandia.n2a.language.type.Instance i : targets ) if ( ! ( i.finish ( simulator ) ) ) i.dequeue () ; } 
public java.lang.String toString ( final boolean reducedSize ) { try { if ( ( number ) == null ) { if ( reducedSize ) { return ( ( BaulastenPictureFinder.PATH_RS ) + ( BaulastenPictureFinder.SEP ) ) + ( file.toUpperCase () ) ; } else { return ( ( BaulastenPictureFinder.PATH ) + ( BaulastenPictureFinder.SEP ) ) + ( file.toUpperCase () ) ; } } else { return ( ( getFolder ( number, reducedSize ) ) + ( BaulastenPictureFinder.SEP ) ) + ( file.toUpperCase () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "/", "/" + ( co.porkopolis.utils.FileConstants.HOME_PAGE ) }, method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String home ( @org.springframework.web.bind.annotation.ModelAttribute co.porkopolis.model.SummonerName summonerName, org.springframework.ui.Model model ) { try { if ( ( summonerName == null ) || ( ( summonerName.getName () ) == null ) ) { return co.porkopolis.utils.FileConstants.HOME_PAGE; } } catch ( Exception ex ) { ex.printStackTrace () ; } co.porkopolis.model.BasicSummoner summoner = request.requestBasicSummoner ( summonerName.getName () ) ; if ( summoner != null ) { model.addAttribute ( AttributeConstants.BASIC_SUMMONER, summoner ) ; return co.porkopolis.utils.FileConstants.INDEX; } else { model.addAttribute ( AttributeConstants.ERROR, ( ( "Summoner " + ( summonerName.getName () ) ) + " not found." ) ) ; return co.porkopolis.utils.FileConstants.HOME_PAGE; } } 
@ be.kuleuven.cs.som.annotate.Raw private void setPosition ( hillbillies.model.Vector position ) { if ( ( this.world ) == null ) throw new java.lang.ClassCastException () ; try { if ( ! ( this.world.isPositionInWorld ( position ) ) ) throw new java.lang.IllegalArgumentException () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.position = position; } 
@ java.lang.Override protected void onPageScrolled ( int position, float offset, int offsetPixels ) { try { if ( ( ( lastPagedReached ) && ( offset == 0 ) ) && ( ! ( swipeListenerCalled ) ) ) { if ( ( onSwipeListener ) != null ) { onSwipeListener.onAttemptedOnLastPage () ; swipeListenerCalled = true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } lastPagedReached = ( position + 1 ) == ( getAdapter () .getCount () ) ; super.onPageScrolled ( position, offset, offsetPixels ) ; } 
@ org.junit.Test public void testValidarCampos () { java.lang.System.out.println ( "validarCampos" ) ; java.lang.String username = ""; java.lang.String password = ""; com.grupo7.practica.principal instance = new com.grupo7.practica.principal () ; boolean expResult = false; boolean result = instance.validarCampos ( username, password ) ; try { assertEquals ( expResult, result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.Optional<java.lang.String> sendMessage ( messages.BotTextMessage msg, java.lang.String channelTo ) { java.lang.String[] messagesWithoutNewline = bots.IrcBot.COMPILE.split ( msg.getText () ) ; try { for ( java.lang.String messageToken : messagesWithoutNewline ) { this.client.sendMessage ( channelTo, java.lang.String.format ( "%s/%s/%s: %s", msg.getBotFrom () .getId () , msg.getChannelFrom () , msg.getNicknameFrom () , messageToken ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.util.Optional.empty () ; } 
@ controllers.Security.Authenticated ( value = controllers.Secured.class ) public static controllers.Result admin () { java.lang.String name = Player.find.byId ( request () .username () ) .name; try { if ( ! ( name.equals ( "admin" ) ) ) { return redirect ( routes.Application.login () ) ; } else { return ok ( views.html.pages.admin.render ( Player.find.all () , Player.find.byId ( request () .username () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] argv ) throws java.io.IOException { jrnnlm.core.RNNLMConfiguration conf = new jrnnlm.core.RNNLMConfiguration () ; conf.trainStreamFactory = new jrnnlm.io.FileInputStreamFactory ( new java.io.File ( "data/ptb.train.100.txt" ) ) ; conf.validFile = new java.io.File ( "data/ptb.valid.txt" ) ; conf.hiddenSize = 30; conf.maxIters = 50; conf.fastMath = true; jrnnlm.core.RNNLM rnn = new jrnnlm.core.RNNLM ( conf ) ; jrnnlm.parallel.ParallelTrainer trainer = new jrnnlm.parallel.ParallelTrainer ( rnn, 4 ) ; try { trainer.train () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static AST.AST_CLASSDECL getClass ( java.lang.String className ) { java.util.List<AST.AST_CLASSDECL> classList = AST.SemanticChecker.program.getClassDeclList () .getListOfClassDecl () ; try { for ( AST.AST_CLASSDECL classDecl : classList ) { if ( classDecl.classId.equals ( className ) ) { return classDecl; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onScrollStateChanged ( android.support.v7.widget.RecyclerView recyclerView, int newState ) { android.support.v7.widget.LinearLayoutManager layoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( recyclerView.getLayoutManager () ) ) ; int lastPosition = layoutManager.findLastCompletelyVisibleItemPosition () ; try { if ( lastPosition == ( ( mAdapter.getItemCount () ) - 1 ) ) { mListViewModel.loadNextPageZhihu ( lastPosition ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { while ( true ) { this.s = ( ( ETPSYSTEM.ChannelValue ) ( this.spotcheck.channel.in () .read () ) ) ; java.lang.System.out.println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this.spotcheck, this.topa, this.read, this.s, this.ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initTransient () { ciph_dirs = com.redhat.ckey.applet.JCSystem.makeTransientByteArray ( com.redhat.ckey.applet.CardEdge.MAX_NUM_KEYS, JCSystem.CLEAR_ON_DESELECT ) ; nonce = com.redhat.ckey.applet.JCSystem.makeTransientByteArray ( com.redhat.ckey.applet.CardEdge.NONCE_SIZE, JCSystem.CLEAR_ON_RESET ) ; try { loginCount = com.redhat.ckey.applet.JCSystem.makeTransientShortArray ( com.redhat.ckey.applet.CardEdge.MAX_NUM_PINS, JCSystem.CLEAR_ON_RESET ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cardResetProcessed = com.redhat.ckey.applet.JCSystem.makeTransientBooleanArray ( ( ( short ) ( 1 ) ) , JCSystem.CLEAR_ON_RESET ) ; transientInit = true; } 
private traer.physics.Particle createParticle ( int x, int y ) { try { synchronized ( m_particleSystem ) { traer.physics.Particle newParticle = m_particleSystem.makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS, x, y, 0 ) ; for ( int i = 0; i < ( m_particleSystem.numberOfParticles () ) ; i++ ) { traer.physics.Particle p = m_particleSystem.getParticle ( i ) ; if ( p.equals ( newParticle ) ) { continue; } m_particleSystem.makeAttraction ( p, newParticle, campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE, campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { if ( intent == null ) { return; } android.net.Uri uri = intent.getParcelableExtra ( "uri" ) ; com.lzh.nonview.router.extras.RouteBundleExtras extras = intent.getParcelableExtra ( "extras" ) ; try { com.lzh.nonview.router.Router.resume ( uri, extras ) .open ( context ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void resize ( int width, int height ) { camera.viewportWidth = ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_HEIGHT ) / height ) * width; try { camera.update () ; } catch ( Exception ex ) { ex.printStackTrace () ; } cameraGUI.viewportHeight = com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT; cameraGUI.viewportWidth = ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT ) / ( ( float ) ( height ) ) ) * ( ( float ) ( width ) ) ; cameraGUI.position.set ( ( ( cameraGUI.viewportWidth ) / 2 ) , ( ( cameraGUI.viewportHeight ) / 2 ) , 0 ) ; cameraGUI.update () ; } 
public void insertPerson ( org.rhok.linguist.code.entity.Person person ) { android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase () ; android.content.ContentValues values = getDbValues ( person ) ; long personId = db.insert ( org.rhok.linguist.code.DatabaseHelper.PERSON_TABLE_NAME, null, values ) ; person.personid = ( ( int ) ( personId ) ) ; person.uploaded = false; try { db.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { android.view.Window window = cordova.getActivity () .getWindow () ; window.addFlags ( LayoutParams.FLAG_DISMISS_KEYGUARD ) ; try { window.addFlags ( LayoutParams.FLAG_SHOW_WHEN_LOCKED ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } window.addFlags ( LayoutParams.FLAG_TURN_SCREEN_ON ) ; android.util.Log.v ( com.applurk.plugin.ScreenLocker.TAG, ( "ScreenLocker received SUCCESS:" + action ) ) ; callbackContext.success () ; } 
private static java.lang.String inputStreamToString ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder responseStringBuilder = new java.lang.StringBuilder () ; java.lang.String line; try { while ( ( line = reader.readLine () ) != null ) { responseStringBuilder.append ( line ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return responseStringBuilder.toString () ; } 
@ java.lang.Override public java.lang.Object add ( java.lang.Object left, java.lang.Object right ) { try { if ( ( left instanceof java.lang.String ) && ( right instanceof java.lang.String ) ) { return ( ( java.lang.String ) ( left ) ) + right; } else { return super.add ( left, right ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.jsing.common.string.StringTrimmer getBeforeNext ( java.lang.String stringToSearch ) { if ( ( this.string ) == null ) return this; int index = getIndex ( stringToSearch ) ; try { if ( ( index > ( -1 ) ) && ( index < ( this.end ) ) ) { this.end = java.lang.Math.max ( this.start, index ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
public static java.util.ArrayList<com.app.restfulapp.models.Member> genPartKind () { java.util.ArrayList<com.app.restfulapp.models.Member> result = new java.util.ArrayList<> () ; result.add ( new com.app.restfulapp.models.Member ( "Hỗn hợp & Đậm đặc", "" ) ) ; result.add ( new com.app.restfulapp.models.Member ( "Hỗn hợp", "A" ) ) ; try { result.add ( new com.app.restfulapp.models.Member ( "Đậm đặc", "B" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
private java.lang.Integer compareBits ( java.lang.String a, java.lang.String b ) { try { java.lang.System.out.println ( b ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int count = 0; for ( int i = 0; i < ( java.lang.Math.min ( a.length () , b.length () ) ) ; i++ ) { if ( ! ( ( a.indexOf ( i ) ) == ( b.indexOf ( i ) ) ) ) return count; count++; } return count; } 
public void addEdge ( diagraph.DirectedEdge edge ) { nodes.add ( edge.from () ) ; nodes.add ( edge.to () ) ; int from = edge.from () ; if ( ! ( edges.containsKey ( from ) ) ) { edges.put ( from, new java.util.HashSet<> () ) ; } java.util.Set<diagraph.DirectedEdge> outgoingEdges = edges.get ( from ) ; try { outgoingEdges.add ( edge ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { java.lang.String action = intent.getAction () ; java.lang.String token = intent.getStringExtra ( Prefs.FIREBASE_ID ) ; try { android.util.Log.d ( com.hillelevo.cityelf.Constants.TAG, ( "MainActivity onReceive: " + action ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.d ( com.hillelevo.cityelf.Constants.TAG, ( "MainActivity onReceive: " + token ) ) ; if ( active ) { } } 
public void generate ( int before, int after ) { try { if ( ( statement1 ) == ( Statement.NULL ) ) { statement2.generate ( before, after ) ; } else if ( ( statement2 ) == ( Statement.NULL ) ) { statement1.generate ( before, after ) ; } else { int label = newLabel () ; statement1.generate ( before, label ) ; emitLabel ( label ) ; statement2.generate ( label, after ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) throws java.lang.Exception { java.lang.String alg = "AES"; java.lang.String key = "TheBestSecreteKe"; java.security.Key key2 = new javax.crypto.spec.SecretKeySpec ( key.getBytes () , alg ) ; javax.crypto.Cipher cipher = javax.crypto.Cipher.getInstance ( alg ) ; try { cipher.init ( javax.crypto.Cipher.ENCRYPT_MODE, key2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String data = "TestString"; byte[] encVal = cipher.doFinal ( data.getBytes () ) ; } 
@ java.lang.Override public value.Value sub ( value.Value other ) { try { if ( ( ! ( isSet () ) ) || ( ! ( other.isSet () ) ) ) { return new value.IntegerValue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new value.IntegerValue ( ( ( value ) - ( ( ( value.IntegerValue ) ( other ) ) .getValue () ) ) ) ; } 
public static double timeSortedInput ( java.lang.String alg, int n, int trials ) { double total = 0.0; java.lang.Double[] a = new java.lang.Double[n]; try { for ( int t = 0; t < trials; t++ ) { for ( int i = 0; i < n; i++ ) { a[i] = 1.0 * i; } total += SortCompare.time ( alg, a ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return total; } 
@ java.lang.Override protected void setUp () throws java.lang.Exception { java.lang.String name = getName () ; try { name = name.replace ( "$$", "/" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } name = name.replace ( "$", "." ) ; consulo.internal.dotnet.asm.mbel.ModuleParser moduleParser = new consulo.internal.dotnet.asm.mbel.ModuleParser ( new java.io.File ( ( "testData/" + name ) ) ) ; myModuleParser = moduleParser; } 
public static void main ( java.lang.String[] args ) { java.util.List<java.lang.Integer> list = new java.util.ArrayList<java.lang.Integer> () ; list.addAll ( java.util.Arrays.asList ( 0, 0, 1, 7, 1, 1 ) ) ; try { java.lang.System.out.println ( MajorityElements.findElement ( list, 3 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static double std ( org.dynami.core.data.Series series ) { double avg = org.dynami.core.utils.StatUtils.avg ( series ) ; double sum = 0; try { for ( double d : series ) { sum += java.lang.Math.pow ( ( d - avg ) , 2 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.lang.Math.sqrt ( ( sum / ( ( series.size () ) - 1.0 ) ) ) ; } 
public static void setOmHome () { java.lang.String webappsDir = java.lang.System.getProperty ( "om.home", "." ) ; org.apache.openmeetings.util.OmFileHelper.setOmHome ( webappsDir ) ; try { if ( ( ! ( org.apache.openmeetings.util.OmFileHelper.getOmHome () .exists () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper.getOmHome () .isDirectory () ) ) ) { org.junit.Assert.fail ( ( "Invalid directory is specified as OM HOME: " + webappsDir ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setActive () { isActive = true; try { saveService.saveDataValue ( SaveEnum.CONTEXT, context ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( type ) == ( com.majalis.scenes.EndScene.Type.ENCOUNTER_OVER ) ) || ( ( type ) == ( com.majalis.scenes.EndScene.Type.GAME_OVER ) ) ) { saveService.saveDataValue ( SaveEnum.RETURN_CONTEXT, null ) ; } saveService.saveDataValue ( SaveEnum.SCENE_CODE, ( -1 ) ) ; } 
public void setTime ( int t ) { try { if ( ( ( startTime ) <= t ) && ( t <= ( endTime ) ) ) { hideContextPopups () ; time.set ( t ) ; } else if ( t < ( startTime ) ) time.set ( startTime ) ; else if ( t > ( endTime ) ) time.set ( endTime ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static <T> void serialize ( T object, java.io.OutputStream resultStream, java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext.newInstance ( object.getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext.createMarshaller () ; jaxbMarshaller.setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION, schemaLocation ) ; try { jaxbMarshaller.setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } jaxbMarshaller.marshal ( object, resultStream ) ; } 
public void run () { int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING; if ( inputMode_s.equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN; } else if ( inputMode_s.equals ( "resize" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE; } try { cordova.getActivity () .getWindow () .setSoftInputMode ( inputMode_i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } callbackContext.success () ; } 
public void editInactiveExecutionPlan ( java.lang.String executionPlan, java.lang.String filename ) throws org.wso2.carbon.event.processor.core.exception.ExecutionPlanConfigurationException, org.wso2.carbon.event.processor.core.exception.ExecutionPlanDependencyValidationException { org.wso2.carbon.event.processor.core.internal.util.helper.EventProcessorHelper.validateExecutionPlan ( executionPlan ) ; org.wso2.carbon.event.processor.core.ExecutionPlan parsedExecutionPlan = org.wso2.siddhi.query.compiler.SiddhiCompiler.parse ( executionPlan ) ; java.lang.String newExecutionPlanName = org.wso2.siddhi.query.api.util.AnnotationHelper.getAnnotationElement ( EventProcessorConstants.ANNOTATION_NAME_NAME, null, parsedExecutionPlan.getAnnotations () ) .getValue () ; org.wso2.carbon.event.processor.core.internal.util.EventProcessorConfigurationFilesystemInvoker.delete ( filename ) ; try { org.wso2.carbon.event.processor.core.internal.util.EventProcessorConfigurationFilesystemInvoker.save ( executionPlan, newExecutionPlanName, filename ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void createChannel () { try { if ( ( channel ) == null ) { channel = servletRequestContext.getExchange () .getResponseChannel () ; if ( ( internalListener ) != null ) { channel.getWriteSetter () .set ( internalListener ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addRow ( int row, int numInRow ) { int idxInRow = 0; int startVertex = ( row * numInRow ) + 1; int currVertex = startVertex; try { while ( idxInRow < ( numInRow - 1 ) ) { addFace ( currVertex, ( currVertex + 1 ) , ( currVertex + numInRow ) ) ; addFace ( ( currVertex + 1 ) , ( ( currVertex + numInRow ) + 1 ) , ( currVertex + numInRow ) ) ; currVertex++; idxInRow++; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected <T> T createObjectForClass ( java.lang.Class<T> aClass, java.util.Map<java.lang.Class<?>, java.lang.Object> valueMap ) throws com.robertsmieja.test.utils.junit.exceptions.ObjectFactoryException { T object = com.robertsmieja.test.utils.junit.Internal.createObjectFromDefaultConstructor ( aClass ) ; java.util.List<java.lang.reflect.Field> fields = com.robertsmieja.test.utils.junit.GettersAndSettersUtils.getFields ( aClass ) ; try { for ( java.lang.reflect.Field field : fields ) { setValueForField ( field, object, valueMap ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return object; } 
@ java.lang.Override public boolean delete ( com.hazelcast.nio.serialization.Data key ) { checkIfLoaded () ; final long now = getNow () ; final com.hazelcast.map.impl.record.Record record = getRecordOrNull ( key, now, false ) ; try { if ( record == null ) { mapDataStore.remove ( key, now ) ; } else { return ( removeRecord ( key, record, now ) ) != null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void startTerminal ( int sequence, java.lang.String terminalHandle, java.lang.String caption, java.lang.String title, boolean hasChildProcs, int cols, int rows, int shellType ) { org.rstudio.studio.client.workbench.views.terminal.TerminalSession newSession = new org.rstudio.studio.client.workbench.views.terminal.TerminalSession ( sequence, terminalHandle, caption, title, hasChildProcs, cols, rows, uiPrefs_.blinkingCursor () .getValue () , true, shellType ) ; newSession.connect () ; try { updateTerminalBusyStatus () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addLast ( Item item ) { try { if ( this.checkNull ( item ) ) throw new java.lang.NullPointerException () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( tail ) == null ) { tail = new Deque.Node () ; tail.item = item; head = tail; } else { tail.prev = new Deque.Node () ; tail.prev.next = tail; tail = tail.prev; tail.item = item; } count += 1; } 
private void reDrawGestureView () { dist = 0; android.util.Log.i ( "Action", "RESET GESTURE" ) ; try { setContentView ( R.layout.test_gesture ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } resetButton.setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View view ) { reDrawGestureView () ; } } ) ; android.gesture.GestureOverlayView gestures = ( ( android.gesture.GestureOverlayView ) ( findViewById ( R.id.test_gesture ) ) ) ; gestures.removeAllOnGestureListeners () ; gestures.addOnGestureListener ( mGestureListener ) ; resetEverything () ; } 
@ java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( getActivity () ) ; android.view.LayoutInflater inflater = getActivity () .getLayoutInflater () ; android.view.View view = inflater.inflate ( R.layout.dialog_progress, null ) ; try { builder.setView ( view ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return builder.create () ; } 
public csc668assignment1.Transaction readNextTransaction () { try { if ( ( ( _transactions ) == null ) || ( ! ( _transactions.hasNext () ) ) ) return null; else { java.lang.String name = _transactions.getName () ; java.lang.String upc = _transactions.getUPC () ; int quantity = _transactions.getQuantity () ; csc668assignment1.Payments.Payment payment = _transactions.getPayment () ; return new csc668assignment1.Transaction ( name, upc, quantity, payment ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void saveToModel () { prefs.setUseDefaultCommand ( b_cmdFromPath.getSelection () ) ; java.lang.String command = t_cmd.getText () .trim () ; prefs.setCommand ( command ) ; final org.eclipse.jface.viewers.IStructuredSelection sel = ( ( org.eclipse.jface.viewers.IStructuredSelection ) ( c_generator.getSelection () ) ) ; try { prefs.setGenerator ( ( ( de.marw.cdt.cmake.core.internal.CmakeGenerator ) ( sel.getFirstElement () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void show ( java.lang.String address ) { tvAddress.setText ( address ) ; etPaymentId.setEnabled ( true ) ; etAmount.setEnabled ( true ) ; try { bPaymentId.setEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bGenerate.setEnabled ( true ) ; hideProgress () ; generateQr () ; } 
private void sendOnOpenMessage ( io.netty.channel.ChannelHandlerContext ctx, boolean isSecured, java.lang.String uri ) throws java.net.URISyntaxException { cMsg = new org.wso2.carbon.messaging.StatusCarbonMessage ( org.wso2.carbon.transport.http.netty.common.Constants.STATUS_OPEN, 0, null ) ; setupCarbonMessage ( ctx ) ; cMsg.setProperty ( Constants.CONNECTION, Constants.UPGRADE ) ; try { cMsg.setProperty ( Constants.UPGRADE, Constants.WEBSOCKET_UPGRADE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } publishToMessageProcessor ( cMsg ) ; } 
private java.lang.String findHalfHourAfter ( int hours, int minutes ) { java.lang.String halfHourAfter = ""; minutes += 30; if ( minutes >= 60 ) { hours++; minutes -= 60; } try { halfHourAfter = formatTime ( halfHourAfter, hours, minutes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return halfHourAfter += minutes; } 
protected void updateFromNameChange ( java.lang.String newHeroName ) { if ( mName.equals ( newHeroName ) ) return; mName = newHeroName; java.lang.String imageName = mParentPresenter.getHeroImageName ( newHeroName ) ; for ( int i = 0; i < ( mSimilarityList.size () ) ; i++ ) { if ( mSimilarityList.get ( i ) .equals ( imageName ) ) { mView.setHeroInRecycler ( i ) ; break; } } try { mParentPresenter.hideKeyboard () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mParentPresenter.sendUpdatedHeroList () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent intent1 = new android.content.Intent ( activity, ir.rasen.charsoo.view.activity.business.ActivityBusinessFollowers.class ) ; intent1.putExtra ( Params.BUSINESS_ID_STRING, business.id ) ; intent1.putExtra ( Params.USER_ID_INT, ir.rasen.charsoo.controller.helper.LoginInfo.getUserId ( activity ) ) ; try { intent1.putExtra ( Params.BUSINESS_OWNER, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } activity.startActivity ( intent1 ) ; } 
private static double getPassangerDiscount ( ooptraining.Passanger p ) { double discount = 1.0; try { if ( ( p.getMiles () ) > ( ooptraining.DiscountCalculator.GOLD_LIMIT ) ) { discount = ooptraining.DiscountCalculator.GOLD_DISCOUNT; } else if ( ( p.getMiles () ) > ( ooptraining.DiscountCalculator.SILVER_LIMIT ) ) { discount = ooptraining.DiscountCalculator.SILVER_DISCOUNT; } } catch ( Exception ex ) { ex.printStackTrace () ; } return discount; } 
public learntest.core.gentest.GentestResult gentestAndCompile ( java.util.List<double[]> solutions, java.util.List<sav.strategies.dto.execute.value.ExecVar> vars, learntest.core.gentest.GentestParams params ) throws sav.common.core.SavException { learntest.core.LearningMediator.log.debug ( "gentest.." ) ; learntest.core.gentest.GentestResult result = getTestGenerator () .genTestAccordingToSolutions ( params, solutions, vars, new gentest.junit.JWriter () ) ; try { if ( ! ( result.isEmpty () ) ) { learntest.core.LearningMediator.log.debug ( "compile.." ) ; compileAndLogTestSequences ( result, params ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { javafx.scene.control.CheckBox cb = ( ( javafx.scene.control.CheckBox ) ( event.getSource () ) ) ; try { if ( cb.isSelected () ) { for ( application.ResultTable resultTableRow : resultTable.getItems () ) { resultTableRow.setTrace ( true ) ; } } else { for ( application.ResultTable resultTableRow : resultTable.getItems () ) { resultTableRow.setTrace ( false ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void createNextRound () { if ( ( currentGridNum ) >= ( beetle_kit.EstimationGame.MAX_NUM_ROUNDS ) ) { javax.swing.JPanel panel = createEndGamePanel () ; javax.swing.JOptionPane.showOptionDialog ( this, panel, "Congratulations!!!", javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE, null, new java.lang.Object[] {}, null ) ; return; } try { createNewGrid () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void render ( float delta ) { Gdx.gl.glClearColor ( 0.0F, 0.0F, 0.0F, 1.0F ) ; Gdx.gl.glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; game.batch.begin () ; background.updateAndRender ( delta, game.batch ) ; game.batch.end () ; try { update ( delta ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } stage.draw () ; } 
private java.util.Collection getTypedCollection ( com.bagri.core.system.Schema schema, java.lang.String typePath ) { try { for ( java.util.Collection collect : schema.getCollections () ) { java.lang.String cPath = collect.getDocumentType () ; if ( ( cPath != null ) && ( typePath.equals ( cPath ) ) ) { return collect; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ Test void getPastReviewers () { java.util.Date submissionDeadline = java.util.Calendar.getTime () ; java.util.Date reviewDeadline = java.util.Calendar.getTime () ; Conference tester = new Conference ( submissionDeadline, reviewDeadline, new ArrayList<Reviewer> () ) ; try { assertEquals ( tester.getPastReviewers () , new ArrayList<Reviewer> () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void create () { ru.spbau.kaysin.ants.Ants.generator = new com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator ( Gdx.files.internal ( "FONTS/visitor1.ttf" ) ) ; ru.spbau.kaysin.ants.Ants.assets.load ( "pack.txt", com.badlogic.gdx.graphics.g2d.TextureAtlas.class ) ; try { ru.spbau.kaysin.ants.Ants.assets.load ( "explosion.txt", com.badlogic.gdx.graphics.g2d.TextureAtlas.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ru.spbau.kaysin.ants.Ants.assets.finishLoading () ; ru.spbau.kaysin.ants.Ants.assets.update () ; aurelienribon.tweenengine.Tween.registerAccessor ( com.badlogic.gdx.scenes.scene2d.Actor.class, new ru.spbau.kaysin.ants.utils.TweenActor () ) ; setScreen ( new ru.spbau.kaysin.ants.screens.MenuScreen () ) ; } 
public void deregister () throws java.io.IOException { if ( ( listen ) == null ) { java.lang.System.out.println ( "Register first!" ) ; return; } java.net.Socket sock = createSocket () ; try { if ( ! ( sendAndReceive ( ( "deregister " + ( id ) ) ) ) ) { java.lang.System.out.println ( "Deregister failed, try again" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } listen.interrupt () ; listen = null; sock.close () ; } 
@ java.lang.Override public void gameOver () { java.lang.String playername = ( ( java.lang.String ) ( javax.swing.JOptionPane.showInputDialog ( null, ( ( ( "Your score: " + ( _panel.gameModel () .step () ) ) + "\n" ) + "Enter your name:\n" ) , "Game Over", javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, "new player" ) ) ) ; try { if ( playername != null ) _scoreBoard.put ( _panel.gameModel () .step () , playername ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.ldf.calendar.model.CalendarDate fromDate ( java.util.Date date ) { java.util.Calendar cal = java.util.Calendar.getInstance () ; cal.setTime ( date ) ; com.ldf.calendar.model.CalendarDate calendarDate = new com.ldf.calendar.model.CalendarDate () ; calendarDate.year = cal.get ( java.util.Calendar.YEAR ) ; try { calendarDate.month = ( cal.get ( java.util.Calendar.MONTH ) ) + 1; } catch ( Exception ex ) { ex.printStackTrace () ; } calendarDate.day = cal.get ( java.util.Calendar.DAY_OF_MONTH ) ; return calendarDate; } 
protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext, javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { com.liferay.portal.kernel.model.Company company = _companyLocalService.getCompanyById ( portletDataContext.getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company.getGroup () ; try { updateImportPortletPreferencesClassPKs ( portletDataContext, portletPreferences, "organizationId", com.liferay.portal.kernel.model.Organization.class, companyGroup.getGroupId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return portletPreferences; } 
private java.util.List<com.kasirgalabs.etumulator.linker.Data> resolveData () { java.util.List<com.kasirgalabs.etumulator.linker.Data> resolvedData = new java.util.ArrayList<> () ; try { for ( com.kasirgalabs.etumulator.linker.Data data : targetData ) { if ( definedData.contains ( data ) ) { com.kasirgalabs.etumulator.linker.Data temp = definedData.get ( definedData.indexOf ( data ) ) ; loadIntoMemory ( temp ) ; resolvedData.add ( temp ) ; continue; } return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return resolvedData; } 
public void addItem ( item.Item i, int count ) { item.Item item = i.clone () ; if ( count != ( -1 ) ) { item.count = count; } try { if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items.get ( loc ) .count += item.count; } else { items.add ( item ) ; } } else { items.add ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int getTotalBalance () { int totalBalance = 0; try { for ( Reservation reservation : this.reservations ) { if ( ( reservation.getRoomType () ) == "L" ) { totalBalance += 200; } if ( ( reservation.getRoomType () ) == "E" ) { totalBalance += 80; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return totalBalance; } 
@ java.lang.Override public void onDisable () { for ( org.bukkit.entity.Player player : getServer () .getOnlinePlayers () ) { com.pgcraft.spectatorplus.spectators.Spectator spectator = getPlayerData ( player ) ; if ( spectator.isSpectating () ) { spectator.setSpectating ( false, true ) ; spectator.saveSpectatorModeInFile ( true ) ; } } try { arenasManager.save () ; } catch ( Exception ex ) { ex.printStackTrace () ; } spectatorsManager.save () ; super.onDisable () ; } 
@ java.lang.Override public void onTaskComplete ( java.util.ArrayList<group3.tcss450.uw.edu.thememebible.Model.Meme> theMemeData ) { dismissProgressBar () ; mMemeData = theMemeData; try { if ( ! ( mMemeData.isEmpty () ) ) { android.os.Bundle args = new android.os.Bundle () ; args.putSerializable ( getString ( R.string.photo_data_key ) , mMemeData ) ; mPhotoFragment.setArguments ( args ) ; loadFragment ( mPhotoFragment ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setValueContrained ( int x ) { try { x = x - ( this.getAbsoluteLeft () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int width = sliderWidget.getOffsetWidth () ; if ( x < 0 ) { x = 0; } if ( x > ( width - 1 ) ) { x = width - 1; } int componentValue = ( x * ( max ) ) / width; setValue ( componentValue, true, false ) ; sliderWidget.setPos ( x ) ; } 
public boolean shootAt ( int row, int column ) { int tempRow = getBowRow () ; int tempColumn = getBowColumn () ; try { if ( ( ! ( isSunk () ) ) || ( ! ( stworo01.EmptySea.class.isInstance ( this ) ) ) ) { if ( isHorizontal () ) { this.hit[ ( column - tempColumn ) ] = true; return true; } else { this.hit[ ( row - tempRow ) ] = true; return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.content.Intent intent = getIntent () ; try { username = intent.getStringExtra ( "Username" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } username_TextV = ( ( android.widget.TextView ) ( findViewById ( R.id.username_act_main ) ) ) ; username_TextV.setText ( ( ( username_TextV.getText () .toString () ) + ( username ) ) ) ; initInstances () ; } 
public static void index () { controllers.Http.Cookie userLoggedInCookie = request.cookies.get ( "token" ) ; try { if ( ( userLoggedInCookie == null ) || ( ( models.User.find ( "byToken", userLoggedInCookie.value ) .first () ) == null ) ) { controllers.Application.loginForm () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } models.User user = models.User.find ( "byToken", userLoggedInCookie.value ) .first () ; java.util.List<models.Audio> audios = models.Audio.find ( "byUser", user ) .fetch () ; render ( audios ) ; } 
private int skip ( int n_skip ) throws java.io.IOException { int n_skipped = 0; try { skipWhiteSpace () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( ( current ) != ',' ) && ( ( current ) != ']' ) ) && ( ( current ) != '}' ) ) { skipInner () ; n_skipped = 1; } while ( ( ( current ) == ',' ) && ( ( n_skipped++ ) != n_skip ) ) { skipWhiteSpace () ; skipInner () ; } return n_skipped; } 
@ java.lang.Override public boolean onTouch ( android.view.View view, android.view.MotionEvent event ) { try { switch ( event.getActionMasked () ) { case android.view.MotionEvent.ACTION_DOWN: view.startDrag ( android.content.ClipData.newPlainText ( "", "" ) , new android.view.View.DragShadowBuilder () , view, 0 ) ; return true; default: return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View rootView = inflater.inflate ( R.layout.fragment_base_pager, container, false ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( rootView.findViewById ( R.id.section_label ) ) ) ; try { textView.setText ( getArguments () .getInt ( com.moana.carsharing.base.BasePagerActivity.PlaceholderFragment.ARG_SECTION_NUMBER ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return rootView; } 
private void initDateAndTime ( main.java.Task.Type type, java.util.ArrayList<java.time.LocalDateTime> parsedDates ) { try { switch ( type ) { case TIMED: date = parsedDates.get ( main.java.Task.POSITION_FIRST_DATE ) .toLocalDate () ; startTime = parsedDates.get ( main.java.Task.POSITION_FIRST_DATE ) .toLocalTime () ; endTime = parsedDates.get ( main.java.Task.POSITION_SECOND_DATE ) .toLocalTime () ; break; case DEADLINE: date = parsedDates.get ( main.java.Task.POSITION_FIRST_DATE ) .toLocalDate () ; startTime = parsedDates.get ( main.java.Task.POSITION_FIRST_DATE ) .toLocalTime () ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setupTabLayout () { tabLayout.setTabGravity ( TabLayout.GRAVITY_FILL ) ; tabLayout.addTab ( tabLayout.newTab () .setText ( com.nsqre.insquare.Fragments.ProfileFragment.TAB_FAVOURITE ) ) ; tabLayout.addTab ( tabLayout.newTab () .setText ( com.nsqre.insquare.Fragments.ProfileFragment.TAB_OWNED ) ) ; tabLayout.setOnTabSelectedListener ( this ) ; try { if ( ! ( InSquareProfile.ownedSquaresList.isEmpty () ) ) { squaresList.setAdapter ( adapterOwned ) ; emptyText.setVisibility ( View.INVISIBLE ) ; } else { emptyText.setVisibility ( View.VISIBLE ) ; emptyText.setText ( getString ( R.string.profile_empty_owned ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void init ( java.lang.String serverAddress, int serverPort, int hostPort, java.util.concurrent.BlockingQueue<java.lang.String> msgQueue ) throws java.io.IOException { java.net.Socket s = new java.net.Socket () ; try { s.bind ( new java.net.InetSocketAddress ( hostPort ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } s.connect ( new java.net.InetSocketAddress ( serverAddress, serverPort ) ) ; this.out = new java.io.OutputStreamWriter ( s.getOutputStream () ) ; this.fetcher = new com.nutscape.mc.nunuubot.Connection.MessageFetcher ( s.getInputStream () , msgQueue, bot ) ; new java.lang.Thread ( fetcher ) .start () ; } 
public void onDataReceived ( com.jacks205.spots.model.ParkingStructure[] structures ) { try { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this, structures ) ; listView.setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter.setStructures ( structures ) ; spotsListAdapter.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mSwipeRefreshLayout.setRefreshing ( false ) ; } 
private java.util.List<T> down ( int row, int column, int length ) { java.util.List<T> nodes = new java.util.ArrayList<> () ; int rowCount = rowCount () ; try { for ( int position = 0; position < length; position++ ) { int currentRow = row + position; if ( currentRow >= rowCount ) { break; } T node = grid[currentRow][column]; nodes.add ( node ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return nodes; } 
@ org.junit.Test public void index_showsHomePageTest () throws java.lang.Exception { mockMvc.perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get ( "/" ) ) .andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers.status () .isOk () ) .andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers.model () .attribute ( "tasks", tasks ) ) .andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers.model () .size ( 1 ) ) .andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers.view () .name ( "index" ) ) ; try { org.mockito.Mockito.verify ( taskService ) .getAllTasks () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.mockito.Mockito.verifyNoMoreInteractions ( taskService ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setRetainInstance ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( com.nectar.thesun.library.MyConstants.homenews ) == null ) { com.nectar.thesun.library.MyConstants.homenews = new java.util.ArrayList<> () ; } if ( ! ( com.nectar.thesun.PageSlidingTabStripFragment.isAsyncTaskPendingOrRunning () ) ) { com.nectar.thesun.PageSlidingTabStripFragment.mcontext = getActivity () .getApplicationContext () ; loadNewsNow ( getActivity () ) ; } } 
public java.util.Collection<net.sf.memoranda.Task> getAllSubTasks ( java.lang.String taskId ) { try { if ( ( taskId == null ) || ( ( taskId.length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; return task.getSubTasks () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int columnHeight ( int column ) { int r = 0; try { for ( ; ( r < ( this.height ) ) && ( ( this.grid[column][r].isEmpty () ) || ( this.grid[column][r].isShape () ) ) ; r++ ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( this.height ) - r; } 
static void askToSave () { java.lang.String[] options = new java.lang.String[] { "Yes", "No", "Cancel" }; int n = javax.swing.JOptionPane.showOptionDialog ( EssayWriter.frame, "Would you like to save before you exit?", "Save?", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, options, options[0] ) ; try { if ( n == ( javax.swing.JOptionPane.YES_OPTION ) ) { EssayWriter.save () ; java.lang.System.exit ( 0 ) ; } else if ( n == ( javax.swing.JOptionPane.NO_OPTION ) ) { java.lang.System.exit ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void insertToClassifiableTextsCharacteristicsTable ( java.sql.Connection con, int classifiableTextId, com.irvil.textclassifier.model.Characteristic characteristic, com.irvil.textclassifier.model.CharacteristicValue characteristicValue ) throws java.sql.SQLException { java.lang.String sqlInsert = "INSERT INTO ClassifiableTextsCharacteristics ( ClassifiableTextId, CharacteristicsNameId, CharacteristicsValueId ) VALUES ( ?, ?, ? ) "; java.sql.PreparedStatement statement = con.prepareStatement ( sqlInsert ) ; statement.setInt ( 1, classifiableTextId ) ; statement.setInt ( 2, characteristic.getId () ) ; statement.setInt ( 3, characteristicValue.getId () ) ; try { statement.executeUpdate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void surfaceCreated ( android.view.SurfaceHolder holder ) { this.grid = new com.example.jacek.streamthegame.Grid ( this.getContext () , this.nRows, this.nCols, ( ( getWidth () ) / ( this.nCols ) ) , ( ( getHeight () ) / ( this.nRows ) ) ) ; try { this.grid.tryAddObject ( Sprite.short_pipe, 2, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.thread.setRunning ( true ) ; this.thread.start () ; } 
private void check ( com.gargoylesoftware.htmlunit.WebClient wc, com.gargoylesoftware.htmlunit.HttpMethod m ) throws java.io.IOException { com.gargoylesoftware.htmlunit.TextPage p = wc.getPage ( new com.gargoylesoftware.htmlunit.WebRequestSettings ( new java.net.URL ( url, "verbMatch/" ) , m ) ) ; try { assertEquals ( ( "Got " + ( m.name () ) ) , p.getContent () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( org.bukkit.event.inventory.InventoryClickEvent event ) { org.bukkit.entity.Player player = ( ( org.bukkit.entity.Player ) ( event.getWhoClicked () ) ) ; try { if ( player != null ) { player.closeInventory () ; player.performCommand ( ( "vote reward " + ( voteSite.getSiteName () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int hashCode () { int result = ( ( getDateFrom () ) != null ) ? getDateFrom () .hashCode () : 0; try { result = ( 31 * result ) + ( ( getUser () ) != null ? getUser () .hashCode () : 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } result = ( 31 * result ) + ( ( getBookInstance () ) != null ? getBookInstance () .hashCode () : 0 ) ; return result; } 
@ java.lang.Override public void onComplete () { if ( done ) { return; } for ( reactor.core.publisher.FluxGroupBy.UnicastGroupedFlux<K, V> g : groupMap.values () ) { g.onComplete () ; } groupMap.clear () ; try { reactor.core.publisher.FluxGroupBy.GroupByMain.GROUP_COUNT.decrementAndGet ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } done = true; drain () ; } 
@ java.lang.Override public de.hshannover.f4.trust.visitmeta.gui.util.RestConnection copy () { de.hshannover.f4.trust.visitmeta.gui.util.RestConnection tmp = new de.hshannover.f4.trust.visitmeta.gui.util.RestConnection ( getDataserviceConnection () , getName () ) ; tmp.setUrl ( getUrl () ) ; tmp.setUsername ( getUsername () ) ; tmp.setPassword ( getPassword () ) ; tmp.setTruststorePath ( getTruststorePath () ) ; tmp.setTruststorePass ( getTruststorePass () ) ; try { tmp.setMaxPollResultSize ( getMaxPollResultSize () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tmp.setAuthenticationBasic ( isAuthenticationBasic () ) ; tmp.setStartupConnect ( isStartupConnect () ) ; return tmp; } 
long nextUniqueTransaction ( long time ) { long id = time; try { for ( ; ; ) { long old = transactionID.get () ; if ( old >= id ) id = old + 1; if ( transactionID.compareAndSet ( old, id ) ) break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return id; } 
void update ( gt.Population otherPop ) { java.util.Enumeration<java.lang.String> players = fractions.keys () ; try { while ( players.hasMoreElements () ) { java.lang.String currentPlayer = players.nextElement () ; double updatedFraction = updateFraction ( currentPlayer ) ; fractions.put ( currentPlayer, updatedFraction ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void addRow ( ar.edu.ungs.business.dto.AutorizacionPracticaDTO item ) { getElementos () .add ( item ) ; java.lang.Object[] vector = new java.lang.Object[2]; try { vector[0] = item.getPractica () .getCodigo () ; } catch ( Exception ex ) { ex.printStackTrace () ; } vector[1] = item.getPractica () .getNombre () ; super.addRow ( vector ) ; } 
@ java.lang.Override public void forward ( org.xbill.DNS.Message message, com.ahuazhu.soy.modal.ResponseContext response ) throws java.io.IOException { org.xbill.DNS.Message answer = cache.getValue ( new com.ahuazhu.soy.modal.QuestionKey ( message ) ) ; if ( answer != null ) { send ( answer, response ) ; return; } try { if ( forwarderStarted ) { callBack.put ( new com.ahuazhu.soy.modal.QueryKey ( message ) , response ) ; for ( java.net.InetSocketAddress upstreamServer : upstreamServers ) { datagramChannel.send ( java.nio.ByteBuffer.wrap ( message.toWire () ) , upstreamServer ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { javax.swing.JFrame frame = new javax.swing.JFrame () ; graphics.Screen screen = new graphics.Screen ( "Bob", true ) ; frame.add ( screen ) ; try { frame.setUndecorated ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } frame.setSize ( graphics.GameEngine.screenSize ) ; frame.setVisible ( true ) ; frame.setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; } 
@ java.lang.Override protected void onCreate ( final android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_tictactoe ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { mCurrentIndex = ( ( mCurrentIndex ) + 1 ) % ( mStations.length ) ; mStartStopButton.setImageDrawable ( playDrawable () ) ; updateDropdownHeader ( mCurrentIndex ) ; playPressed = false; doneBuffering = false; try { if ( ( player ) != null ) { if ( player.isPlaying () ) { player.stop () ; } player.release () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } setupPlayer () ; updateViews () ; clickPlayButton () ; } 
public static models.Rate create ( int score, java.lang.Long userId, java.lang.Long criteriaId, java.lang.Long projectId ) { if ( ( models.Rate.findByUserIdAndProjectIdAndCriteriaId ( userId, projectId, criteriaId ) ) == null ) { models.Rate rate = new models.Rate () ; rate.score = score; rate.userId = userId; rate.criteriaId = criteriaId; rate.projectId = projectId; rate.save () ; return rate; } models.Rate rate = models.Rate.findByUserIdAndProjectIdAndCriteriaId ( userId, projectId, criteriaId ) ; rate.score = score; try { rate.update () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return rate; } 
@ java.lang.Override public void encodeData ( org.mobicents.protocols.asn.AsnOutputStream asnOs ) throws org.mobicents.protocols.ss7.cap.api.CAPException { if ( ( this.data ) == null ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field must not be null" ) ; if ( ( ( this.data.length ) < 3 ) || ( ( this.data.length ) > 11 ) ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field length must be from 3 to 11" ) ; try { asnOs.writeOctetStringData ( data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override @org.springframework.transaction.annotation.Transactional public org.orcid.jaxb.model.message.OrcidProfile updateOrcidBio ( org.orcid.jaxb.model.message.OrcidProfile updatedOrcidProfile ) { org.orcid.jaxb.model.message.OrcidProfile existingProfile = retrieveOrcidProfile ( updatedOrcidProfile.getOrcidIdentifier () .getPath () ) ; if ( existingProfile == null ) { return null; } try { orcidJaxbCopyManager.copyUpdatedBioToExistingWithVisibility ( existingProfile.getOrcidBio () , updatedOrcidProfile.getOrcidBio () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return updateOrcidProfile ( existingProfile ) ; } 
@ java.lang.Override public android.view.View getView ( int position, android.view.View view, android.view.ViewGroup parent ) { android.view.LayoutInflater inflater = context.getLayoutInflater () ; android.view.View rowView = inflater.inflate ( R.layout.list_single, null, true ) ; android.widget.TextView txtTitle = ( ( android.widget.TextView ) ( rowView.findViewById ( R.id.txt ) ) ) ; android.widget.ImageView imageView = ( ( android.widget.ImageView ) ( rowView.findViewById ( R.id.img ) ) ) ; try { imageView.setImageResource ( imageId[position] ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return rowView; } 
private void updateLabels () { if ( ( game.mode ) == "practice" ) { gamePanel.setCurrentWordCount ( game.getWordCount () ) ; } gamePanel.setCurrentWordLabel ( game.currentWord, game.currentCorrectIndex ) ; try { if ( ( game.difficulty ) <= 2 ) { gamePanel.setCurrentTypedWordLabel ( game.currentTypedWord, game.currentCorrectIndex, game.currentIndex ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void startProgram () { this.displayBanner () ; java.lang.String playersName = this.getPlayersName () ; byui.cit260.hobbit.model.Player player = byui.cit260.hobbit.control.ProgramControl.createPlayer ( playersName ) ; try { this.displayWelcomeMessage ( player ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } byui.cit260.hobbit.view.MainMenuView mainMenu = new byui.cit260.hobbit.view.MainMenuView () ; mainMenu.display () ; } 
public fr.inria.soctrace.tools.ocelotl.core.queries.IteratorQueries.EventIterator getVariableIterator ( java.util.List<fr.inria.soctrace.lib.model.EventProducer> eventProducers, java.util.List<fr.inria.soctrace.lib.search.utils.IntervalDesc> time, org.eclipse.core.runtime.IProgressMonitor monitor ) throws fr.inria.soctrace.lib.model.utils.SoCTraceException, fr.inria.soctrace.tools.ocelotl.core.exceptions.OcelotlException { try { traceSearch = ( ( fr.inria.soctrace.tools.ocelotl.core.queries.OcelotlTraceSearch ) ( new fr.inria.soctrace.tools.ocelotl.core.queries.OcelotlTraceSearch ( ocelotlParameters ) .initialize () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return traceSearch.getEventIterator ( ocelotlParameters.getTrace () , ocelotlParameters.getTraceTypeConfig () .getTypes () , time, eventProducers, monitor ) ; } 
@ java.lang.Override public void parseLine ( java.lang.String line ) { try { services.FavouriteQuoteImporter.LOGGER.debug ( "Parsing line: {}", line ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( line.trim () .isEmpty () ) { return; } java.util.regex.Matcher matcher = services.FavouriteQuoteImporter.PATTERN.matcher ( line ) ; while ( matcher.find () ) { services.quotes.Quote quote = assembleQuote ( matcher ) ; quoteDao.insertQuote ( quote ) ; return; } } 
private void adjustAttemptsForConnectionManager () { try { if ( shouldSetConnectionManager () ) { com.android.server.telecom.CreateConnectionProcessor.CallAttemptRecord record = new com.android.server.telecom.CreateConnectionProcessor.CallAttemptRecord ( mPhoneAccountRegistrar.getSimCallManager () , mAttemptRecords.get ( 0 ) .targetPhoneAccount ) ; com.android.server.telecom.Log.v ( this, "setConnectionManager, changing %s -> %s", mAttemptRecords.get ( 0 ) , record ) ; mAttemptRecords.set ( 0, record ) ; } else { com.android.server.telecom.Log.v ( this, "setConnectionManager, not changing" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { train.addHistory ( station, context.getGameLogic () .getPlayerManager () .getTurnNumber () ) ; try { java.lang.System.out.println ( ( ( ( "Added to history: passed " + ( station.getName () ) ) + " on turn " ) + ( context.getGameLogic () .getPlayerManager () .getTurnNumber () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } junctionFailure ( station ) ; collisions ( station ) ; obstacleCollision ( station ) ; } 
@ java.lang.Override public ru.javawebinar.topjava.model.UserMeal get ( int id, int userId ) { java.util.List<ru.javawebinar.topjava.model.UserMeal> userMeals = em.createNamedQuery ( UserMeal.GET_BY_ID, ru.javawebinar.topjava.model.UserMeal.class ) .setParameter ( 1, userId ) .setParameter ( 2, id ) .getResultList () ; try { if ( ! ( userMeals.isEmpty () ) ) { if ( ( userMeals.get ( 0 ) .getUser () .getId () ) == userId ) { return userMeals.get ( 0 ) ; } else return null; } else return null; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void MouseButtonCallback ( long window, int button, int state, int arg3 ) { try { java.lang.System.out.println ( ( ( ( ( button + " " ) + state ) + " " ) + arg3 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( button == ( org.lwjgl.glfw.GLFW.GLFW_MOUSE_BUTTON_1 ) ) && ( state == 0 ) ) { mouse_down = state == 1; toInteract = world.closestEntity ( current.getLocation () , 10.0F ) ; } } 
public java.lang.Long next () { long result = 0; try { while ( result == 0 ) { if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } result = puzzleStorage.puzzles[cursor]; ( cursor ) ++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void done ( com.parse.ParseUser user, com.parse.ParseException err ) { try { if ( user == null ) { android.util.Log.d ( "MyApp", "Uh oh. The user cancelled the Facebook login." ) ; getUserDetailFromFB () ; } else if ( user.isNew () ) { android.util.Log.d ( "MyApp", "User signed up and logged in through Facebook!" ) ; getUserDetailFromFB () ; } else { startSaoLonguinho () ; android.util.Log.d ( "MyApp", "User logged in through Facebook!" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onTouchMove ( com.google.gwt.event.dom.client.TouchMoveEvent event ) { try { if ( ( ( initialX ) == 0 ) && ( ( initialY ) == 0 ) ) { com.google.gwt.dom.client.Touch touch = event.getTouches () .get ( 0 ) ; initialX = touch.getPageX () ; initialY = touch.getPageY () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.smanzana.dungeonmaster.utils.StepList toStepList () { com.smanzana.dungeonmaster.utils.StepList out = new com.smanzana.dungeonmaster.utils.StepList () ; try { if ( ( segments ) != null ) for ( com.smanzana.dungeonmaster.ui.app.swing.editors.StepField.RangeSegment seg : segments ) { if ( seg != null ) out.addStep ( seg.getMax () , seg.getValue () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return out; } 
private void remap ( wyautl.core.Automaton automaton, int from, int to ) { try { for ( int i = 0; i != ( automaton.nStates () ) ; ++i ) { automaton.get ( i ) .remap ( from, to ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int calculateScore ( java.util.ArrayList<PairTime> pairTimes ) { int score = 0; try { for ( int i = 0; i < ( pairTimes.size () ) ; i++ ) { score += pairTimes.get ( i ) .getPair () .getScore () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return score; } 
@ WebTests.BeforeSuite ( groups = "InternetExplorer" ) public void setUpDriverIE () throws java.lang.InterruptedException { logger.info ( "[TEST STARTED]" ) ; logger.info ( ( "OS: " + ( operationSystem ) ) ) ; try { java.lang.System.setProperty ( "webdriver.ie.driver", java.lang.String.valueOf ( driverIEWin ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver.navigate () .to ( Data.ConfigProperties.getProperty ( "baseUrl" ) ) ; } 
public static int minimaxDecision ( State state ) { int action = 0; int v = - ( Minimax.MAX_NUMBER ) ; try { for ( int a : Minimax.actions ( state ) ) { int temp = Minimax.minValue ( Minimax.result ( state, a ) ) ; if ( temp > v ) { v = temp; action = a; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return action; } 
public void PressButton ( int i ) { try { if ( com.kuna.ibeatcon_android.Controller.vb_feedback ) { android.os.Vibrator v = ( ( android.os.Vibrator ) ( getSystemService ( Context.VIBRATOR_SERVICE ) ) ) ; v.vibrate ( 100 ) ; SendData ( pressKey[i] ) ; } else { SendData ( pressKey[i] ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user, final javax.servlet.http.HttpServletRequest request ) { try { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler.isToRedirect ( user, request ) ) { return iuLisboaRedirectionHandler.redirectionPath ( user, request ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public org.opennms.netmgt.model.topology.BridgePort getBridgePort ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null; try { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link.getNode () .getId () .intValue () ) == ( nodeid.intValue () ) ) return link; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override protected void onSizeChanged ( int w, int h, int oldw, int oldh ) { super.onSizeChanged ( w, h, oldw, oldh ) ; mProgressDrawerManager.onSizeChanged ( w, h ) ; try { mShapeDrawerManager.onSizeChanged ( w, h, getPaddingLeft () , getPaddingTop () , getPaddingRight () , getPaddingBottom () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mBlurManager.onSizeChanged ( w, h ) ; } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "hasAuthority ( 'ADMIN' ) " ) @org.springframework.web.bind.annotation.RequestMapping ( value = "/admin/userTask/{userName}", params = "userDelete" ) public java.lang.String handleUserDelete ( @org.springframework.web.bind.annotation.PathVariable ( value = "userName" ) java.lang.String userName, @org.springframework.web.bind.annotation.ModelAttribute ( value = "userDTO" ) com.fithub.domain.UserDTO userDTO, org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { com.fithub.controller.UserTasksController.LOG.debug ( "Attempting to delete user={}", userDTO.getUserName () ) ; boolean isUserDelete = userService.deleteUserByUsername ( userDTO.getUserName () ) ; com.fithub.controller.UserTasksController.LOG.debug ( "User was delete successfuly ?={}", isUserDelete ) ; try { redirectAttributes.addFlashAttribute ( "userDeleteSuccess", true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "redirect:/admin/userTaskSuccess"; } 
@ java.lang.Override public void display ( com.badlogic.gdx.graphics.g2d.Batch batch ) { if ( assetNeedUpdate ) assetManager () ; chapter1Display ( batch ) ; if ( ! ( viewingSettings ) ) { switch ( chapterSection ) { case 1: drawBG ( batch ) ; break; } } if ( ansCorrect ) { fourPicsOneWordUtil.displayCorrect ( batch ) ; Gdx.input.setOnscreenKeyboardVisible ( false ) ; } try { drawQuizResult ( batch ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static org.apache.jmeter.control.ReplaceableController ensureReplaceableControllerIsLoaded ( org.apache.jmeter.testelement.TestElement item ) { org.apache.jmeter.control.ReplaceableController rc; try { if ( "org.apache.jmeter.control.ModuleController".equals ( item.getClass () .getName () ) ) { rc = ( ( org.apache.jmeter.control.ReplaceableController ) ( item ) ) ; } else { rc = ( ( org.apache.jmeter.control.ReplaceableController ) ( item.clone () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return rc; } 
public Item removeLast () { Item item = array[ ( ( last ) - 1 ) ]; if ( item == null ) { throw new java.util.NoSuchElementException () ; } array[ ( ( last ) - 1 ) ] = null; ( N ) --; last = N; try { subSize () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return item; } 
@ java.lang.Override public void onFailure ( retrofit2.Call<com.sdsmdg.bookshareapp.BSA.api.models.LocalBooks.BookList> call, java.lang.Throwable t ) { android.util.Log.d ( "GA_search", ( "searchOnFail " + ( t.toString () ) ) ) ; refreshLayout.setRefreshing ( false ) ; progressBar.setVisibility ( View.GONE ) ; innerLayout.getForeground () .setAlpha ( 0 ) ; l1.setVisibility ( View.GONE ) ; try { l2.setVisibility ( View.GONE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final void execute ( final rx.functions.Action1<? super Result> onNext, final rx.functions.Action1<java.lang.Throwable> onError, Param param ) { viper.Interactor.checkNotNull ( onNext, "onNext" ) ; viper.Interactor.checkNotNull ( onError, "onError" ) ; try { execute ( new rx.Subscriber<Result> () { @java.lang.Override public void onCompleted () { } @java.lang.Override public void onError ( final java.lang.Throwable e ) { onError.call ( e ) ; } @java.lang.Override public void onNext ( final Result result ) { onNext.call ( result ) ; } }, param ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void draw ( android.graphics.Canvas canvas ) { if ( ( center ) == null ) { return; } try { switch ( style ) { case RECTANGLE: break; case CIRCLE: canvas.drawCircle ( center.x, center.y, radius, paint ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.joda.time.Duration getEstimatedTime ( @android.support.annotation.NonNull org.cook_e.data.Step s ) { org.cook_e.data.Objects.requireNonNull ( s, "step must not be null" ) ; int index = searchStep ( s.hashCode () ) ; try { if ( index >= 0 ) { long time = ( ( long ) ( ( s.getTime () .getMillis () ) * ( org.cook_e.data.TimeLearner.weightList.get ( index ) .timeWeight ) ) ) ; return new org.joda.time.Duration ( time ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return s.getTime () .toDuration () ; } 
@ org.junit.Before public void setUp () throws java.lang.Exception { try { prefs = net.sf.jabref.preferences.JabRefPreferences.getInstance () ; } catch ( Exception ex ) { ex.printStackTrace () ; } net.sf.jabref.model.metadata.MetaData metaData = new net.sf.jabref.model.metadata.MetaData () ; context = new net.sf.jabref.model.database.BibDatabaseContext ( new net.sf.jabref.model.database.BibDatabase () , metaData, new net.sf.jabref.model.Defaults () ) ; context.setDatabaseFile ( testFolder.newFile ( "test.bib" ) ) ; entry = new net.sf.jabref.model.entry.BibEntry () ; entry.setCiteKey ( "Toot" ) ; } 
public void sleep () { destroyInverseKinematicsRunnable () ; activeMessageSource.set ( null ) ; if ( ( scheduled ) == null ) { if ( us.ihmc.darpaRoboticsChallenge.networkProcessor.kinematicsToolboxModule.KinematicsToolboxModule.DEBUG ) us.ihmc.tools.io.printing.PrintTools.error ( this, "There is no task running." ) ; return; } try { scheduled.cancel ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } scheduled = null; } 
public void resetTo ( dyvil.tools.parsing.token.IToken token ) { this.tokens.jump ( token ) ; if ( ( this.splitTokens ) == null ) { return; } try { for ( dyvil.tools.parsing.token.IToken splitToken : this.splitTokens ) { splitToken.prev () .setNext ( splitToken ) ; splitToken.next () .setPrev ( splitToken ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.splitTokens.clear () ; } 
@ java.lang.Override public void init () { try { super.init () ; } catch ( Exception ex ) { ex.printStackTrace () ; } net.minecraft.item.Item itemBlockSimple = net.minecraftforge.fml.common.registry.GameRegistry.findItem ( "clonesmod", "cloner" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "clonesmod:cloner", "inventory" ) ; net.minecraft.client.Minecraft.getMinecraft () .getRenderItem () .getItemModelMesher () .register ( itemBlockSimple, 0, itemModelResourceLocation ) ; } 
@ org.junit.Test public void testClassWideAttributeInAnonymousClass () throws java.lang.Throwable { @com.orhanobut.tracklytics.FixedAttribute ( key = "key1", value = "value1" ) class Foo { @com.orhanobut.tracklytics.FixedAttribute ( key = "key2", value = "value2" ) class Inner { @com.orhanobut.tracklytics.TrackEvent ( value = "title" ) public void bar () { } } } invokeMethod ( Foo.Inner.class, "bar" ) ; try { com.orhanobut.tracklytics.AssertTracker.assertTrack ( tracker ) .event ( "title" ) .noTags () .attribute ( "key1", "value1" ) .attribute ( "key2", "value2" ) .noSuperAttributes () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void set ( java.lang.Boolean value ) { java.util.Collection<java.lang.Object> coll = container.get () ; try { if ( value ) { if ( coll != null ) { if ( ! ( coll.contains ( item ) ) ) { coll.add ( item ) ; } } else { coll = org.rapidoid.util.U.list ( item ) ; } } else { if ( coll != null ) { coll.remove ( item ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } container.set ( coll ) ; } 
synchronized void register ( com.kk.bus.Bus bus, java.lang.Object objectToRegister, java.util.Set<java.lang.reflect.Method> subscriberMethods, com.kk.bus.DeliveryContext deliveryContext ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers.get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus, objectToRegister, deliveryContext ) ; mObjectDeliverers.put ( objectToRegister, eventDeliverer ) ; } try { eventDeliverer.setSubscriberMethods ( subscriberMethods ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addCanvasToRootPane ( javafx.scene.image.Image image ) { if ( image == null ) { return; } rootPane.setPrefWidth ( image.getWidth () ) ; rootPane.setPrefHeight ( image.getHeight () ) ; rootPane.getChildren () .add ( canvas ) ; try { javafx.scene.layout.StackPane.setAlignment ( canvas, javafx.geometry.Pos.TOP_CENTER ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void teleportPlayer ( org.bukkit.entity.Player player, org.bukkit.Location location, org.bukkit.plugin.java.JavaPlugin plugin ) { int backupTask; player.teleport ( location ) ; try { backupTask = plugin.getServer () .getScheduler () .scheduleAsyncDelayedTask ( plugin, new net.madmanmarkau.MultiHome.ChunkResendTask ( location ) , 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( backupTask == ( -1 ) ) { net.madmanmarkau.MultiHome.Messaging.logSevere ( "Failed to create chunk resend schedule!", plugin ) ; } } 
@ java.lang.Override public void process ( org.apache.camel.Exchange exchange ) throws java.lang.Exception { java.lang.String json = exchange.getIn () .getBody ( java.lang.String.class ) ; com.workflow2015.common.helper.RouteRequest routeRequest = JsonHelper.gson.fromJson ( json, com.workflow2015.common.helper.RouteRequest.class ) ; java.lang.String data = this.getDataFromSource ( routeRequest ) ; try { this.pushDataToQueue ( data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue<? extends java.lang.String> observable, java.lang.String oldValue, java.lang.String newValue ) { try { if ( newValue.matches ( "\\d*" ) ) { } else { intensity.setText ( oldValue ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } processScheduler.logic.Strategy.TICKSFORMESSAGE = java.lang.Integer.parseInt ( intensity.getText () ) ; } 
public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List<net.torocraft.nemesissystem.registry.Nemesis> nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider.get ( world ) .list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder.getRandomTitle () ; try { while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder.isUniqueTitle ( title, nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder.getRandomTitle () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return title; } 
private java.lang.String parseHeadline ( com.ximpleware.VTDNav vn ) throws com.ximpleware.NavException { try { edu.jhu.agiga.AgigaSentenceReader.require ( vn.matchElement ( AgigaConstants.DOC ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ! ( vn.toElement ( VTDNav.FIRST_CHILD, AgigaConstants.HEADLINE ) ) ) || ( ( vn.getText () ) == ( -1 ) ) ) { edu.jhu.agiga.AgigaDocumentReader.log.finer ( "No headline found" ) ; return null; } return vn.toString ( vn.getText () ) .trim () ; } 
public void init () { registerService () ; evalThread.start () ; wifiReceiver.start () ; addToQueue ( bluetoothRestart ) ; addToQueue ( nearbyPeersChecker ) ; try { synchronized ( evalThread ) { evalThread.notify () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } blockedWorkersChecker.run () ; } 
protected void onRetrieveInstanceState ( android.os.Bundle savedInstanceState ) { try { if ( savedInstanceState != null ) { stats = savedInstanceState.getBundle ( "champData" ) ; isHeader = savedInstanceState.getBoolean ( "isHeader", false ) ; } else { android.os.Bundle extras = getIntent () .getExtras () ; isHeader = extras.getBoolean ( "isHeader" ) ; stats = extras.getBundle ( "champData" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_nearby ) ; if ( ( getSupportActionBar () ) != null ) { getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; } registerLocationManager () ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () .beginTransaction () ; fr.free.nrw.commons.nearby.NearbyListFragment fragment = new fr.free.nrw.commons.nearby.NearbyListFragment () ; try { ft.add ( R.id.container, fragment ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ft.commit () ; } 
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT; try { if ( station != null ) { listener.setPlayerStates ( ( -1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station.getSource () ) ; else { if ( mediaPlayer.isPlaying () ) { pause () ; } else { play () ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void removeEmployee ( int id ) { try { StaffManager.Company.employeeList.remove ( ( id - 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = id - 1; i < ( StaffManager.Company.employeeList.size () ) ; i++ ) { StaffManager.Company.employeeList.get ( i ) .setId ( ( i + 1 ) ) ; } } 
public int render () { Gdx.gl.glClearColor ( 0.2F, 0.2F, 0.2F, 1 ) ; Gdx.gl.glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; stage.act ( java.lang.Math.min ( Gdx.graphics.getDeltaTime () , ( 1 / 30.0F ) ) ) ; try { stage.draw () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return num; } 
private void signout () { android.content.SharedPreferences sharedPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences ( getApplicationContext () ) ; android.content.SharedPreferences.Editor editor = sharedPreferences.edit () ; editor.putBoolean ( LogInActivity.IS_LOGGED_IN_STR, false ) ; try { editor.putString ( LogInActivity.USER_LOGGED_IN_STR, "" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } editor.putString ( LogInActivity.USER_PASSWORD_STR, "" ) ; editor.commit () ; finish () ; } 
public void update () { pendingTime.set ( db.getServerSettingInt ( "pendingTime" ) ) ; notificationInterval.set ( db.getServerSettingInt ( "notificationInterval" ) ) ; try { notifications = db.getNotifications () ; } catch ( Exception ex ) { ex.printStackTrace () ; } triggers = ts.getConfiguredDevices ( db.getTriggerDevices () ) ; } 
public void onClick ( com.gwtext.client.widgets.Button button, com.gwtext.client.core.EventObject e ) { com.gwtext.client.widgets.tree.DefaultSelectionModel dsm = ( ( com.gwtext.client.widgets.tree.DefaultSelectionModel ) ( entityTreePanel.getSelectionModel () ) ) ; com.gwtext.client.widgets.tree.TreeNode selectedNode = dsm.getSelectedNode () ; try { if ( ( selectedNode.getAttributeAsObject ( "frame" ) ) != null ) { edWindow.loadFrameAndShow ( selectedNode ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setValue ( fd2editor.BaseSeg.VALUE whichValue, int sValue ) { if ( sValue > ( max ) ) { sValue = max; } if ( sValue < ( min ) ) { sValue = min; } try { switch ( whichValue ) { case DEFAULT: this.defaultValue = sValue; break; case RECOMMEND: this.recommendValue = sValue; break; case CURRENT: this.value = sValue; updateSegBytes () ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { int length = java.lang.Integer.parseInt ( args[0] ) ; int width = java.lang.Integer.parseInt ( args[1] ) ; Rectangle myRectangle = new Rectangle ( length, width ) ; java.lang.String output = java.lang.String.format ( "*** Your Rectangle ***\n\nLength: %d\nWidth: %d/nArea: %d/nPerimeter: %d/nArea: %d/n/n", myRectangle.length, myRectangle.width, myRectangle.getPerimeter () , myRectangle.getArea () ) ; try { java.lang.System.out.println ( output ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void renderCreate ( org.eclipse.rap.clientscripting.internal.ClientListenerBinding binding, org.eclipse.rwt.internal.protocol.IClientObject clientObject ) { clientObject.create ( org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer.TYPE ) ; clientObject.set ( "listener", org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer.getId ( binding.getListener () ) ) ; clientObject.set ( "targetObject", org.eclipse.rwt.lifecycle.WidgetUtil.getId ( binding.getWidget () ) ) ; try { clientObject.set ( "eventType", org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer.getEventType ( binding ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<com.hearthsim.util.HearthActionBoardPair> playTurn ( int turn, com.hearthsim.model.BoardModel board, com.hearthsim.util.factory.BoardStateFactoryBase factory ) throws com.hearthsim.exception.HSException { try { if ( ( ( baseNode ) == null ) || ( ( ! ( baseNode.turn.data_.equals ( board ) ) ) && ( ( baseNode.turnNum ) != turn ) ) ) { baseNode = new com.hearthsim.util.tree.MCTSTreeNode ( new com.hearthsim.util.tree.HearthTreeNode ( board ) , turn ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } com.hearthsim.util.tree.MCTSTreeNode retNode = baseNode.selectAction () ; return retNode.getTurnResults () ; } 
public synchronized int xToPixel ( double x, mesquite.lib.MesquiteChart chart ) { try { tempNum.setValue ( x ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int fieldWidth = chart.getFieldWidth () ; int margin = chart.getMargin () ; int value = ( margin + ( tempNum.setWithinBounds ( minX, maxX, ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart.getXPixelBase () ) ; return value; } 
@ org.junit.Test public void whenCheckingFitnessFeatureThrowsException_thenCorrespondingFitnessFeatureShouldBeFalse () { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito.mock ( org.corpus_tools.pepper.modules.PepperModule.class ) ; try { org.mockito.Mockito.when ( module.getDesc () ) .thenThrow ( new java.lang.RuntimeException () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.assertj.core.api.Assertions.assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () .checkFitness ( module ) .getFitness ( FitnessFeature.HAS_NAME ) ) .isEqualTo ( false ) ; } 
@ java.lang.Override public java.lang.String preLogin ( javax.servlet.http.HttpServletRequest request ) { org.shaolin.vogerp.commonmodel.ICaptcherService service = IServerServiceManager.INSTANCE.getService ( org.shaolin.vogerp.commonmodel.ICaptcherService.class ) ; org.shaolin.vogerp.commonmodel.be.ICaptcha captcha = service.getItem ( service.generateOne () ) ; javax.servlet.http.HttpSession session = request.getSession () ; try { session.setAttribute ( WebflowConstants.USER_TOKEN, captcha.getAnswer () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return captcha.getQuestion () ; } 
public boolean borrowBook ( Library lib, java.lang.String title ) { try { if ( lib.bookList.containsKey ( title ) ) { borrowedBooks.add ( lib.bookList.get ( title ) .get ( 0 ) ) ; lib.bookList.get ( title ) .remove ( 0 ) ; return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { mSectionsPagerAdapter.notifyDataSetChanged () ; mViewPager.setAdapter ( mSectionsPagerAdapter ) ; tabLayout.setupWithViewPager ( mViewPager ) ; mViewPager.setCurrentItem ( 0, true ) ; prefEditor.putInt ( getString ( R.string.living_room_mode ) , selection[0] ) ; try { prefEditor.apply () ; } catch ( Exception ex ) { ex.printStackTrace () ; } dialog.hide () ; } 
public void cfgSlaves ( java.util.List<distrib.hadoop.host.Host> hosts ) { try { cmds.add ( cfgSlaves ( "cat /dev/null >" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( distrib.hadoop.host.Host s : hosts ) { cmds.add ( cfgSlaves ( ( ( "echo " + ( s.getHostName () ) ) + " >>" ) ) ) ; } } 
private static java.lang.String prepareMessage ( java.lang.String messageCode ) { if ( ( messageCode == null ) || ( messageCode.isEmpty () ) ) { return "nowe orzeczenie"; } java.lang.String message; try { if ( ( java.lang.Integer.parseInt ( messageCode ) ) > 4 ) { message = "nowych orzeczeń"; } else if ( ( java.lang.Integer.parseInt ( messageCode ) ) > 1 ) { message = "nowe orzeczenia"; } else { message = "nowe orzeczenie"; } } catch ( Exception ex ) { ex.printStackTrace () ; } return message; } 
public static final void updatePlayer ( net.minecraft.entity.player.EntityPlayer player ) { try { if ( player instanceof net.minecraft.entity.player.EntityPlayerMP ) { net.minecraft.entity.player.EntityPlayerMP playerMP = ( ( net.minecraft.entity.player.EntityPlayerMP ) ( player ) ) ; net.ci010.attributesmod.properties.Attributes.agility.upgrade ( playerMP ) ; net.ci010.attributesmod.properties.Attributes.endurance.upgrade ( playerMP ) ; net.ci010.attributesmod.properties.Attributes.power.upgrade ( playerMP ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { try { if ( volume >= 1.0 ) { com.connectsdk.core.Util.postSuccess ( listener, null ) ; } else { float newVolume = ( ( float ) ( volume + 0.01 ) ) ; if ( newVolume > 1.0 ) newVolume = ( ( float ) ( 1.0 ) ) ; setVolume ( newVolume, listener ) ; com.connectsdk.core.Util.postSuccess ( listener, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void doListRecurseTest () throws java.lang.Exception { java.util.Map m = new java.util.LinkedHashMap () ; java.util.List a = new java.util.ArrayList () ; m.put ( "b", "c" ) ; m.put ( "a", a ) ; a.add ( "Hello" ) ; a.add ( a ) ; a.add ( m ) ; a.add ( new java.util.LinkedHashMap () ) ; java.lang.String json = new ru.yandex.strictweb.ajaxtools.presentation.JsonRefPresentation () .toString ( a ) ; try { java.lang.System.out.println ( json ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( getArguments () .containsKey ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.ARG_ITEM_ID ) ) { org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id = getArguments () .getString ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.ARG_ITEM_ID ) ; mEvent = Events.EVENT_MAP.get ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id ) ; org.shingo.shingoeventsapp.api.InitLoader loader = new org.shingo.shingoeventsapp.api.InitLoader ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id, getContext () ) ; loader.load () ; } } 
public void input () throws java.io.IOException { java.io.BufferedReader br = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; java.lang.System.out.println ( "Enter data" ) ; try { bno = java.lang.Integer.parseInt ( br.readLine () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } phno = java.lang.Integer.parseInt ( br.readLine () ) ; name = br.readLine () ; days = java.lang.Integer.parseInt ( br.readLine () ) ; } 
public void addFile ( java.lang.String fileName, org.sem8.ds.rest.resource.NodeResource node ) { java.util.List<org.sem8.ds.rest.resource.NodeResource> temp; try { temp = this.fileMap.get ( fileName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( temp != null ) { temp.add ( node ) ; } else { temp = new java.util.ArrayList<org.sem8.ds.rest.resource.NodeResource> () ; temp.add ( node ) ; this.fileMap.put ( fileName, temp ) ; } } 
public boolean checkImpl ( wjtoth.cyclicstablematching.Matching matching, wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching, preferenceSystem ) ; if ( ( mathcingPS.size () ) == 0 ) { return false; } boolean isInternallyBlocked = mathcingPS.isInternallyBlocked () ; if ( isInternallyBlocked ) { return false; } java.util.List<java.util.List<java.lang.Integer>> potentialBlocks = mathcingPS.firstOrderDissatisfied () ; try { if ( checkImpl ( potentialBlocks, mathcingPS, preferenceSystem ) ) { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private java.lang.String _revert ( java.lang.String str ) { java.lang.String s = ""; int len = str.length () ; try { for ( int i = 0; i < len; i++ ) { s += str.charAt ( ( ( len - 1 ) - i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return s; } 
@ java.lang.Override public void onCompletion ( org.apache.kafka.clients.producer.RecordMetadata metadata, java.lang.Exception exception ) { try { if ( exception == null ) { org.apache.kafka.common.TopicPartition tp = new org.apache.kafka.common.TopicPartition ( metadata.topic () , metadata.partition () ) ; offsets.put ( tp, metadata.offset () ) ; } else { org.apache.kafka.streams.processor.internals.RecordCollector.log.error ( ( "Error sending record: " + metadata ) , exception ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String runNode ( java.lang.String input ) throws SoFTlib.SoFTException { int index = de.unidue.stud.maha.Main.getInputIndex ( myChar () ) ; int zahl = java.lang.Integer.valueOf ( SoFTlib.Helper.words ( input, 1, index, index ) ) ; java.lang.String maskierer = de.unidue.stud.maha.Main.getMaskierer () ; try { form ( 'e', zahl ) .send ( maskierer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "0"; } 
public void unaryOp ( int o ) { java.lang.String op; switch ( o ) { default: case org.squiddev.cobalt.Lua.OP_UNM: op = "neg"; break; case org.squiddev.cobalt.Lua.OP_LEN: op = "length"; break; case org.squiddev.cobalt.Lua.OP_NOT: op = "not"; break; } try { main.visitMethodInsn ( org.squiddev.cobalt.luajc.compilation.INVOKESTATIC, org.squiddev.cobalt.luajc.compilation.CLASS_OPERATION, op, ( ( ( ( " ( " + ( TYPE_STATE ) ) + ( TYPE_LUAVALUE ) ) + " ) " ) + ( TYPE_LUAVALUE ) ) , false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.Map<java.lang.Integer, int[]> getListOfCoordinates () { java.util.Map<java.lang.Integer, int[]> listOfCoordinates = new java.util.HashMap<> () ; int key = 0; try { for ( int x = 0; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x++ ) { for ( int y = 0; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y++ ) { listOfCoordinates.put ( key, new int[] { x, y } ) ; key++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return listOfCoordinates; } 
@ java.lang.Override public void replaceAllTextOnPage ( int pageNumber, java.lang.String textToAdd ) { if ( ( pageNumber <= 0 ) || ( pageNumber > ( this.pages.length ) ) ) { java.lang.System.out.println ( "Invalid page number." ) ; return; } if ( ( textToAdd == null ) || ( textToAdd.equals ( "" ) ) ) { java.lang.System.out.println ( "Invalid text for adding." ) ; return; } this.pages[ ( pageNumber - 1 ) ].deleteText () ; try { this.pages[ ( pageNumber - 1 ) ].addText ( textToAdd ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setTokens ( com.mcnaughton.client.spotifyModels.AccessResponse response ) { com.mcnaughton.client.SpotifyClient.accessToken = response.getAccess_token () ; if ( ( response.getRefresh_token () ) != null ) { com.mcnaughton.client.SpotifyClient.refreshToken = response.getRefresh_token () ; } try { com.mcnaughton.client.SpotifyClient.tokenType = response.getToken_type () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.mcnaughton.client.SpotifyClient.expireDate = org.joda.time.DateTime.now () .plusSeconds ( response.getExpires_in () ) ; } 
protected static org.matheclipse.core.interfaces.IAST sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { try { for ( int i = 1; i < ( resultList.size () ) ; i++ ) { if ( resultList.get ( i ) .isList () ) { org.matheclipse.core.eval.EvalAttributes.sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList.get ( i ) ) ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return resultList; } 
@ java.lang.Override public T invertedCumulativeProbability ( double cumulativeProbability ) { try { com.google.common.base.Preconditions.checkArgument ( ( ( 0 < cumulativeProbability ) && ( cumulativeProbability <= 1.0 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } long card = domain.cardinality () ; long min = domain.ordinal ( domain.min () ) ; long ordinal = ( ( ( long ) ( java.lang.Math.ceil ( ( cumulativeProbability * card ) ) ) ) + min ) - 1; return domain.value ( ordinal ) ; } 
@ java.lang.Override public void run () { if ( ( mCropPhoto ) != null ) { com.pkjiao.friends.mm.common.CommonDataStructure.UploadHeadPicResultEntry resultEntry = com.pkjiao.friends.mm.utils.Utils.uploadHeadPicBitmap ( CommonDataStructure.URL_UPLOAD_HEAD_PIC, uid, mCropPhoto, mCropPhotoName ) ; if ( ! ( isUidExistInHeadPicDB ( uid ) ) ) { insertHeadPicToHeadPicsDB ( resultEntry ) ; } else { updateHeadPicToHeadPicsDB ( resultEntry ) ; } } try { mHandler.sendEmptyMessage ( com.pkjiao.friends.mm.activity.FillUserInfoActivity.UPLOAD_USER_HEADER_FINISH ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResponse ( okhttp3.Call call, okhttp3.Response response ) throws java.io.IOException { try { if ( response.isSuccessful () ) { java.lang.String responseStr = response.body () .string () ; android.util.Log.d ( "RESPONSE WHOAMI", responseStr ) ; refreshToken () ; } else { android.util.Log.d ( "RESPONSE WHOAMI", "ertyui2" ) ; refreshToken () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String readDir ( org.jdom2.Document doc, java.lang.String[] files, java.lang.String dirName ) { if ( files != null ) { java.util.Arrays.sort ( files ) ; } org.jdom2.Element p = buildElement ( files, dirName ) ; try { doc.getRootElement () .addContent ( p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return p.getName () ; } 
@ java.lang.Override public void onPageScrolled ( int position, float positionOffset, int positionOffsetPixels ) { int count = ( ( listener ) instanceof com.heinrichreimersoftware.materialintro.view.FadeableViewPager.OnOverscrollPageChangeListener ) ? com.heinrichreimersoftware.materialintro.view.FadeableViewPager.super.getAdapter () .getCount () : getAdapter () .getCount () ; try { listener.onPageScrolled ( java.lang.Math.min ( position, ( count - 1 ) ) , ( position < count ? positionOffset : 0 ) , ( position < count ? positionOffsetPixels : 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeTask ( net.sf.memoranda.Task task ) { if ( task == null ) { return; } java.lang.String parentTaskId = task.getParentID () ; try { if ( parentTaskId != null ) { net.sf.memoranda.Task parentNode = getTaskElement ( parentTaskId ) ; if ( parentNode != null ) parentNode.removeSubTask ( task ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } taskList.remove ( task.getID () ) ; rootTaskList.remove ( task ) ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startId ) { int startOption = START_NOT_STICKY; if ( intent == null ) { return startOption; } int mapID = intent.getIntExtra ( appConstants.DOWNLOAD_INTENT_NAME, 0 ) ; if ( ( ( activeDownloadsList[mapID] ) != null ) && ( activeDownloadsList[mapID] ) ) { com.noveogroup.android.log.Log.d ( "Duplicate download request for the same map type" ) ; return startOption; } activeDownloadsList[mapID] = true; try { downloadMap ( mapID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return startOption; } 
@ java.lang.Override protected void onAction ( java.lang.String sender, java.lang.String login, java.lang.String hostname, java.lang.String target, java.lang.String action ) { java.lang.String nickName = this.stripNickname ( sender ) ; de.skuzzle.polly.sdk.eventlistener.IrcUser user = new de.skuzzle.polly.sdk.eventlistener.IrcUser ( nickName, login, hostname ) ; de.skuzzle.polly.sdk.eventlistener.MessageEvent e = new de.skuzzle.polly.sdk.eventlistener.MessageEvent ( this, user, target, action ) ; try { this.fireActionMessageEvent ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void selectConversation ( javafx.scene.input.MouseEvent e ) { int index = conversations.getSelectionModel () .getSelectedIndex () ; java.lang.String data = conversations.getSelectionModel () .getSelectedItem () ; codeu.chat.common.ConversationSummary selectedConvo = lookupByTitle ( data, index ) ; try { if ( selectedConvo != null ) { codeu.chat.client.simplegui.ChatGuiFX.clientContext.conversation.setCurrent ( selectedConvo ) ; updateCurrentConversation ( selectedConvo ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int printData ( java.lang.String[] args ) throws com.fasterxml.jackson.core.JsonProcessingException, java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.DataSet stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; try { org.paces.Stata.JSON.StataJSON.toJSON ( stataData ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } stataData = null; dbg = null; return 0; } 
private void init () { com.shinav.mathapp.injection.component.Injector.getViewComponent ( this.getContext () ) .inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout, this, false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value.setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; try { addView ( view ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void display ( java.awt.Graphics g ) { try { if ( isHighlighted () ) { g.setColor ( java.awt.Color.green ) ; g.drawRect ( x, ( ( y ) + ( ( ( totalCards ) * ( Card.height ) ) / 2 ) ) , Card.width, Card.height ) ; setHighlight ( false ) ; } else { g.setColor ( java.awt.Color.black ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } totalCards = 0; stackDisplay ( g, top () ) ; } 
protected void show404 ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response ) throws java.io.IOException, javax.servlet.ServletException { response.setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; try { request.setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE, "Page Not Found" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } javax.servlet.RequestDispatcher view = request.getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view.forward ( request, response ) ; } 
private void updateStudent ( int id, java.lang.String matricol, java.lang.String name, java.lang.String surname ) { com.studios.lucian.students.model.Student student = new com.studios.lucian.students.model.Student ( mCurrentGroup.getNumber () , matricol, name, surname ) ; try { if ( mStudentsDbHandler.updateStudent ( student ) ) { mStudentsList.set ( id, student ) ; listAdapter.notifyDataSetChanged () ; } else { android.widget.Toast.makeText ( getActivity () , R.string.error_update_student, Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addTravel ( travelAgencyModel.Travel travel ) { try { if ( ( client ) != null ) { java.util.HashMap<java.lang.String, java.lang.Object> parameters = new java.util.HashMap<> () ; parameters.put ( CommandConstants.PARAM_TRAVEL, travel ) ; client.sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_TRAVEL, parameters ) ) ; } else { travelsList.addTravel ( travel ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name, boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper.createResourceURI ( signature ) ; try { if ( ( resourceURI.segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature, resourceURI ) ; } else { return findObjectType ( signature, resourceURI, traverseNestedTypes ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean generate () { com.sheepit.client.hardware.gpu.GPU.devices = new java.util.LinkedList<com.sheepit.client.hardware.gpu.GPUDevice> () ; java.util.List<com.sheepit.client.hardware.gpu.GPUDevice> gpus = new com.sheepit.client.hardware.gpu.nvidia.Nvidia () .getGpus () ; if ( gpus != null ) { com.sheepit.client.hardware.gpu.GPU.devices.addAll ( gpus ) ; } try { gpus = new com.sheepit.client.hardware.gpu.opencl.OpenCL () .getGpus () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( gpus != null ) { com.sheepit.client.hardware.gpu.GPU.devices.addAll ( gpus ) ; } return true; } 
public void onHeadingChanged ( double p_heading, double p_magnetic_heading, double p_true_heading, double p_timestamp, float p_x, float p_y, float p_z, float p_accuracy ) { try { com.runrev.android.Engine.doHeadingChanged ( p_heading, p_magnetic_heading, p_true_heading, p_timestamp, p_x, p_y, p_z, p_accuracy ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( m_wake_on_event ) com.runrev.android.Engine.doProcess ( false ) ; } 
@ java.lang.Override public void act () { try { if ( ( ( ( z ) <= 2 ) && ( ( steps ) < ( sideLength ) ) ) && ( canMove () ) ) { move () ; ( steps ) ++; } else { if ( ! ( canMove () ) ) return; steps = 0; ( z ) ++; if ( ( z ) == 1 ) { setDirection ( Location.SOUTHWEST ) ; } else if ( ( z ) == 2 ) { setDirection ( Location.EAST ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { try { super.onActivityCreated ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v7.widget.RecyclerView tasksList = getView () .findViewById ( R.id.finished_tasks_recycler_view ) ; tasksList.setHasFixedSize ( true ) ; tasksList.setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getContext () ) ) ; mAdapter = new com.example.hasmik_n.todolist.handlers.TasksRecyclerViewAdapter ( tasks ) ; tasksList.setAdapter ( mAdapter ) ; } 
public void test_042 () { framework.common.ClockCommon.switchMode ( "秒表" ) ; excute ( testcase.Object_Description, testcase.Operation_ClickWait, "开始" ) ; try { excute ( testcase.Object_Description, testcase.Operation_ClickWait, "停止" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } check ( testcase.Object_Description, testcase.Operation_checkExist, "开始" ) ; check ( testcase.Object_Description, testcase.Operation_checkExist, "分享" ) ; } 
@ java.lang.Override public void preUpdate () { super.preUpdate () ; try { if ( this.isMoving ) { java.util.ArrayList<android.graphics.Rect> spriteSequence = dirSpriteMap.get ( curDirection ) ; curSpriteIndex = ( ( curSpriteIndex ) + 1 ) % ( spriteSequence.size () ) ; com.example.vincentzhang.Sprite.Vector2D newPos = this.getSpritePos () .applyDir ( this.getCurDirection () , this.getMoveSpeed () ) ; this.setSpritePos ( newPos ) ; com.example.vincentzhang.Sprite.CollideDetector.setDirtyFlag ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.util.Set<org.monospark.spongematchers.parser.element.StringElementParser> createBaseElementParsers () { java.util.Set<org.monospark.spongematchers.parser.element.StringElementParser> baseParsers = com.google.common.collect.Sets.newLinkedHashSet () ; baseParsers.add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.STRING ) ) ; try { baseParsers.add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.BOOLEAN ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } baseParsers.add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.FLOATING_POINT ) ) ; baseParsers.add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.INTEGER ) ) ; baseParsers.add ( new org.monospark.spongematchers.parser.element.EmptyElementParser () ) ; return baseParsers; } 
private java.lang.String extractTag ( java.lang.String noteContent ) { java.lang.String[] contentWords = noteContent.split ( " " ) ; java.lang.String label = null; try { for ( java.lang.String word : contentWords ) { if ( ( word.startsWith ( "#" ) ) && ( ( word.length () ) > 1 ) ) { label = word.substring ( 1 ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return label; } 
private void register ( java.nio.file.Path dir ) throws java.io.IOException { java.nio.file.WatchKey key = dir.register ( watcher, java.nio.file.StandardWatchEventKinds.ENTRY_CREATE, java.nio.file.StandardWatchEventKinds.ENTRY_DELETE, java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY ) ; if ( trace ) { java.nio.file.Path prev = keys.get ( key ) ; if ( prev == null ) { } else { if ( ! ( dir.equals ( prev ) ) ) { } } } try { keys.put ( key, dir ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGetDocContent_invalidDocId1 () throws java.lang.Exception { adaptor.init ( context ) ; com.google.enterprise.adaptor.testing.RecordingResponse response = new com.google.enterprise.adaptor.testing.RecordingResponse () ; adaptor.getDocContent ( new com.google.enterprise.adaptor.filenet.MockRequest ( new com.google.enterprise.adaptor.DocId ( "foo" ) ) , response ) ; try { org.junit.Assert.assertEquals ( RecordingResponse.State.NOT_FOUND, response.getState () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startId ) { try { if ( intent != null ) { if ( lv.kasparsj.android.util.Objects.equals ( intent.getAction () , getString ( R.string.action_update ) ) ) { if ( screenStateReceiver.isScreenOff () ) { pendingUpdateReceiver.setIsPendingUpdate ( true ) ; } else { lv.kasparsj.android.dwob.model.DailyWords.getInstance () .update () ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onStartCommand ( intent, flags, startId ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; try { switch ( requestCode ) { case REQ_CODE_SPEECH_INPUT: { if ( ( resultCode == ( RESULT_OK ) ) && ( null != data ) ) { java.util.ArrayList<java.lang.String> result = data.getStringArrayListExtra ( RecognizerIntent.EXTRA_RESULTS ) ; txtSpeechInput.setText ( result.get ( 0 ) ) ; callPuter ( result.get ( 0 ) .toLowerCase () ) ; } break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isAddStepsValid ( java.lang.String value ) { try { if ( ( value.length () ) > 0 ) { java.lang.String regex = "-?[\\d]+"; validate ( value, regex, addSteps ) ; if ( ! ( value.matches ( regex ) ) ) { errorAddSteps.setVisible ( true ) ; return false; } if ( ( java.lang.Integer.valueOf ( value ) ) >= 0 ) { errorAddSteps.setVisible ( false ) ; return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public java.lang.Object[][] toMultiArrayNumber ( com.softserve.edu.atqc.data.apps.ApplicationSources applicationSources, java.util.List<?> list ) { java.lang.Object[][] array = toMultiArrayNumber ( 2, list ) ; try { for ( int i = 0; i < ( list.size () ) ; i++ ) { array[i][0] = applicationSources; } } catch ( Exception ex ) { ex.printStackTrace () ; } return array; } 
private void loadFromAngles ( double tilt, double azumeth, double elevation ) { try { setStorage ( new org.apache.commons.math3.geometry.euclidean.threed.Rotation ( com.neuronrobotics.sdk.addons.kinematics.math.RotationNR.getOrder () , com.neuronrobotics.sdk.addons.kinematics.math.RotationNR.getConvention () , java.lang.Math.toRadians ( azumeth ) , java.lang.Math.toRadians ( elevation ) , java.lang.Math.toRadians ( tilt ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void localServicePermissionHandler ( int[] grantResults ) { if ( ( grantResults.length ) == 0 ) { return; } for ( int i : grantResults ) { if ( i == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { return; } } try { checkPermissionToLocalService () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void handlePaint () { if ( ! ( _updateThumb ) ) return; final org.eclipse.swt.graphics.Rectangle rect = _table.getVisibleScrollableCells () ; final int max = ( ( _scroll.getMaximum () ) - ( _scroll.getMinimum () ) ) + 1; final int tWidth = java.lang.Math.min ( java.lang.Math.max ( 1, rect.width ) , max ) ; try { _scroll.setThumb ( tWidth ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } _scroll.setEnabled ( ( tWidth != max ) ) ; } 
public static void toh ( int n, char src, char aux, char dest ) { try { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi.toh ( ( n - 1 ) , src, dest, aux ) ; java.lang.System.out.println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi.toh ( ( n - 1 ) , aux, src, dest ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void componentResized ( java.awt.event.ComponentEvent e ) { view.MapScrollPane p = ( ( view.MapScrollPane ) ( e.getComponent () ) ) ; p.map.repaint () ; p.getViewport () .setViewPosition ( p.getCenter () ) ; try { p.map.updateDisplay ( p.getWidth () , p.getHeight () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void undoAddedEvent ( carelender.model.EventList eventList ) { for ( int i = 0; i < ( events.size () ) ; i++ ) { for ( carelender.model.Event eventObj : eventList ) { if ( ( events.get ( i ) .getUid () ) == ( eventObj.getUid () ) ) { events.remove ( i ) ; } } } try { saveToFile ( filename, events ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { if ( ( ( mDownloadProgressDialog ) != null ) && ( mDownloadProgressDialog.isShowing () ) ) { mDownloadProgressDialog.dismiss () ; } mDownloadProgressDialog = null; try { if ( ! ( task.isCanceled () ) ) { new android.app.AlertDialog.Builder ( this ) .setTitle ( R.string.success ) .setIcon ( R.drawable.ic_done_black_24dp ) .setMessage ( R.string.download_complete ) .setCancelable ( false ) .setPositiveButton ( R.string.label_ok, null ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int getPartyIDFromSenderInvite ( int playerID ) { java.util.List<session.Invite> myInvites = player.getInvites () ; int partyID = 0; try { for ( int i = 0; i < ( myInvites.size () ) ; i++ ) { if ( playerID == ( myInvites.get ( i ) .getSenderID () ) ) { partyID = myInvites.get ( i ) .getPartyID () ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( partyID ) ; return partyID; } 
public void setUp () throws java.lang.Exception { super.setUp () ; java.io.File inputFile = new java.io.File ( testFileRaw ) ; byte[] fileData = new byte[ ( ( int ) ( inputFile.length () ) ) ]; java.io.DataInputStream dis = new java.io.DataInputStream ( new java.io.FileInputStream ( inputFile ) ) ; try { dis.readFully ( fileData ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void evaluateNotification ( int idx, java.lang.String prayId, java.lang.String prayName, java.util.Date date ) { try { cancelNotification ( idx ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cancelNotification ( ( idx + 10 ) ) ; long delay = ( date.getTime () ) - ( new java.util.Date () .getTime () ) ; if ( delay > 0 ) { sendPrayAlarm ( idx, prayId, prayName, delay ) ; } } 
public static boolean listContainsArray ( java.util.List<double[]> list, double[] array ) { try { for ( double[] element : list ) { if ( java.util.Arrays.equals ( element, array ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void continuouslyDiscoverServices () { if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; addServiceDiscoveryRequest () ; serviceDiscoveryRegistered = true; } android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Continuously Discover services called" ) ; try { if ( continueDiscovering ) { android.util.Log.w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Services are still discovering, do not need to make this call" ) ; } else { android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Calling discover and submitting first discover task" ) ; continueDiscovering = true; discoverTasks = new java.util.ArrayList<> () ; discoverServices () ; submitDiscoverTask () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void saveUnsavedData ( android.content.Context context ) { org.md2k.thoughtshakeup.Questions.getInstance () .setEndTime ( org.md2k.datakitapi.time.DateTime.getDateTime () ) ; org.md2k.thoughtshakeup.Questions.getInstance () .setStatus ( Constants.ABANDONED_BY_TIMEOUT ) ; try { org.md2k.thoughtshakeup.QuestionAnswer.getInstance ( context ) .add ( new org.md2k.thoughtshakeup.QuestionsJSON ( org.md2k.thoughtshakeup.Questions.getInstance () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.md2k.thoughtshakeup.Questions.getInstance () .destroy () ; } 
@ org.junit.Before public void setUp () { tested = new net.remotehost.domdetective.parser.TemplateParser () ; try { org.mockito.BDDMockito.given ( propertiesParser.getArray ( org.mockito.Matchers.anyString () , org.mockito.Matchers.any () ) ) .willReturn ( new java.lang.String[] { "something", "else", "misconfiguration" } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { for ( com.google.firebase.database.DataSnapshot postSnapshot : dataSnapshot.getChildren () ) { com.expixel.binki.Post post = postSnapshot.getValue ( com.expixel.binki.Post.class ) ; viewHolder.bookName.setText ( post.bookName ) ; viewHolder.likeCount.setText ( java.lang.String.valueOf ( post.starCount ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isSparkStreamingJoblet () { boolean isSparkStreamingJoblet = false; try { if ( org.talend.core.GlobalServiceRegister.getDefault () .isServiceRegistered ( org.talend.core.ui.ISparkStreamingJobletProviderService.class ) ) { org.talend.core.ui.ISparkStreamingJobletProviderService sparkJobletService = ( ( org.talend.core.ui.ISparkStreamingJobletProviderService ) ( org.talend.core.GlobalServiceRegister.getDefault () .getService ( org.talend.core.ui.ISparkStreamingJobletProviderService.class ) ) ) ; if ( sparkJobletService != null ) { isSparkStreamingJoblet = sparkJobletService.isSparkStreamingJobletComponent ( this ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return isSparkStreamingJoblet; } 
public void setNode ( model.ClassNode node ) { this.node = node; try { titleField.setText ( this.node.getTitle () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } attributesArea.setText ( this.node.attributesProperty () .getValue () ) ; operationsArea.setText ( this.node.operationsProperty () .getValue () ) ; } 
@ java.lang.Override public void done ( com.parse.ParseUser parseUser, com.parse.ParseException e ) { try { if ( parseUser == null ) { } else if ( parseUser.isNew () ) { getFacebookInfo () ; } else { android.util.Log.d ( com.trytara.tara.LoginActivity.TAG, ( "CURRENT USER: " + ( parseUser.toString () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void changeDragonRight ( android.view.View view ) { try { if ( ( currDragon ) == ( ( dragons.size () ) - 1 ) ) { currDragon = 0; addAccessory ( dragons.get ( currDragon ) ) ; } else { currDragon += 1; addAccessory ( dragons.get ( currDragon ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void test_059 () { framework.common.GalleryCommon.deleteMoreGallery () ; framework.common.GalleryCommon.clickGallery () ; excute ( testcase.Object_Description, testcase.Operation_WaitForExists, "更多选项", "10000" ) ; excute ( testcase.Object_Description, testcase.Operation_ClickWait, "更多选项" ) ; excute ( testcase.Object_Text, testcase.Operation_ClickWait, "编辑" ) ; try { check ( testcase.Object_Text, testcase.Operation_checkExist, "保存" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void markPhaseTable2 () { java.lang.String command = forall.HelpA.getValueSelectedRow ( mCRecipe.jTableSequnece1, "Command Name" ) ; if ( command == null ) { return; } try { if ( command.equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double.parseDouble ( forall.HelpA.getValueSelectedRow ( mCRecipe.jTableSequnece1, "Cmd Parameter" ) ) ) ) ; java.util.LinkedList<java.lang.Integer> list = getRowsWithGivenPhase ( phase, mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list, mCRecipe.jTableSequnce2, java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addCampaign ( java.lang.String name, java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign.getInstance () .db.getCampaign ( name, campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } try { addCampaign ( camp ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void move () { snake.move () ; try { main.java.Game.stepCounter = java.lang.Math.max ( 0, ( ( main.java.Game.stepCounter ) - 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( snake.eat () ) { updateScore () ; food.move () ; main.java.Game.stepCounter = getShortestDistance () ; } if ( snake.collision () ) gameOver () ; } 
public java.util.ArrayList<model.project.Project> getProjects () { java.util.ArrayList<model.project.Project> list = new java.util.ArrayList<model.project.Project> () ; try { for ( util.serialization.Serializable item : this.serializer.getItems ( this ) ) { list.add ( ( ( model.project.Project ) ( item ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return list; } 
public void getMiddle () { int middle = ( size ) / 2; if ( ( ( size ) % 2 ) != 0 ) middle = middle + 1; try { if ( ( isEmpty () ) == false ) { Node temp = head; int i = 1; while ( i != middle ) { temp = temp.getNext () ; i = i + 1; } java.lang.System.out.println ( temp.getNext () .getData () ) ; } else { java.lang.System.out.println ( "No data exist" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void processReservation ( commonosgi.model.TravelInfo travelInfo ) { try { if ( ( queue.isEmpty () ) && ( ( this.travelInfo ) == null ) ) { this.travelInfo = travelInfo; commonosgi.util.NodeBehavior.processReservationBehavior ( this.travelInfo ) ; gui.notify ( travelInfo, null ) ; gui.enable () ; } else { queue.add ( travelInfo ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.lang.String getKindForAliasClass ( java.lang.String simpleName ) { try { for ( java.util.Map.Entry<java.lang.String, java.lang.String> entry : org.ballerinalang.composer.service.workspace.tools.ModelGenerator.alias.entrySet () ) { if ( simpleName.equals ( entry.getValue () ) ) { return entry.getKey () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new java.lang.AssertionError ( ( "Undefined entry :" + simpleName ) ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { if ( ! ( dataSnapshot.exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser.getUid () , currentUser.getDisplayName () , currentUser.getEmail () ) ; database.child ( currentUser.getUid () ) .setValue ( newUser ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mUserHolder.LoadCurrentUser ( currentUser.getUid () ) ; } 
protected void headerPrivateCPrototypes ( org.thingml.xtext.thingML.Thing thing, java.lang.StringBuilder builder, org.thingml.compilers.cpp.CppCompilerContext ctx ) { java.lang.StringBuilder cppHeaderBuilder = ctx.getCppHeaderCode () ; try { for ( org.thingml.xtext.thingML.Function f : org.thingml.xtext.constraints.ThingMLHelpers.allFunctions ( thing ) ) { generatePrototypeforThingDirect ( f, cppHeaderBuilder, ctx, thing, true ) ; cppHeaderBuilder.append ( ";\n" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addBus ( travelAgencyModel.Bus bus ) { try { if ( ( client ) != null ) { java.util.HashMap<java.lang.String, java.lang.Object> parameters = new java.util.HashMap<> () ; parameters.put ( CommandConstants.PARAM_BUS, bus ) ; client.sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_BUS, parameters ) ) ; busList.addBus ( bus ) ; } else { busList.addBus ( bus ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.dataloom.datastore.data.controllers.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) }, method = RequestMethod.GET, produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE, com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable<com.google.common.collect.SetMultimap<org.apache.olingo.commons.api.edm.FullQualifiedName, java.lang.Object>> loadEntitySetData ( @com.dataloom.datastore.data.controllers.PathVariable ( value = SET_ID ) java.util.UUID entitySetId, @com.dataloom.datastore.data.controllers.RequestParam ( value = FILE_TYPE, required = false ) com.dataloom.datastore.data.controllers.FileType fileType, @com.dataloom.datastore.data.controllers.RequestParam ( value = TOKEN, required = false ) java.lang.String token, javax.servlet.http.HttpServletResponse response ) { try { com.dataloom.datastore.data.controllers.DataController.setContentDisposition ( response, entitySetId.toString () , fileType ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.dataloom.datastore.data.controllers.DataController.setDownloadContentType ( response, fileType ) ; return loadEntitySetData ( entitySetId, fileType, token ) ; } 
private void seekTo ( int position ) { android.util.Log.d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG, "seekTo" ) ; android.content.Intent intent = new android.content.Intent ( this, com.example.sunsai.mymusicplayer.service.MusicService.class ) ; try { intent.setAction ( MusicService.CMD_MUSICSERVICE_SEEKTO ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } intent.putExtra ( "SEEK_TO", position ) ; startService ( intent ) ; } 
@ java.lang.Override public void onAdFailedToLoad ( int error ) { android.util.Log.d ( com.samcodes.admob.BannerListener.TAG, "onBannerFailedToLoad" ) ; android.util.Log.d ( com.samcodes.admob.BannerListener.TAG, ( "Hiding banner with id " + ( id ) ) ) ; com.samcodes.admob.AdView view = com.samcodes.admob.AdMobExtension.getBannerViewForUnitId ( id ) ; view.setVisibility ( View.INVISIBLE ) ; com.samcodes.admob.AdMobExtension.getLayout () .removeView ( view ) ; com.samcodes.admob.AdMobExtension.getLayout () .bringToFront () ; try { com.samcodes.admob.AdMobExtension.callHaxe ( "onBannerFailedToLoad", new java.lang.Object[] { id } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { Print_Nodes_in_Top_View_of_Binary_Tree solution = new Print_Nodes_in_Top_View_of_Binary_Tree () ; Serialize_and_Deserialize_Binary_Tree treeBuild = new Serialize_and_Deserialize_Binary_Tree () ; TreeNode root = treeBuild.deserializeBFS ( "1 2 3 4 5 6 7" ) ; java.lang.System.out.println ( solution.topView ( root ) ) ; try { root = treeBuild.deserializeBFS ( "1 2 3 # 4 # # # 5 # 6" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( solution.topView ( root ) ) ; } 
@ org.junit.Test public void Inequals () { java.util.List<java.lang.String> collection = new java.util.ArrayList<java.lang.String> () ; collection.add ( "One" ) ; collection.add ( "Two" ) ; collection.add ( "Three" ) ; try { collection.add ( "Four" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String getAgenda = net.sf.memoranda.util.AgendaGenerator.getAgenda ( net.sf.memoranda.date.CalendarDate.yesterday () , collection ) ; net.sf.memoranda.date.CalendarDate cd = net.sf.memoranda.date.CalendarDate.tomorrow () ; assertTrue ( net.sf.memoranda.util.AgendaGenerator.getAgenda ( cd, collection ) .equals ( getAgenda ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/addCommodity", method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public java.lang.String addCommodity ( @org.springframework.web.bind.annotation.RequestParam ( value = "purchaseCaseId", required = true ) java.lang.String purchaseCaseId, @org.springframework.web.bind.annotation.RequestParam ( value = "commodityIds", required = true ) java.lang.String[] commodityIds ) { java.lang.Integer[] ids = new java.lang.Integer[commodityIds.length]; try { for ( int i = 0; i < ( commodityIds.length ) ; i++ ) { ids[i] = java.lang.Integer.valueOf ( commodityIds[i] ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } purchaseCaseService.addPurchaseCaseIdToCommoditys ( purchaseCaseId, ids ) ; return com.jersey.purchaseCase.controller.PurchaseCaseController.REDIRECT_ADD_COMMODITY.replace ( "{id}", purchaseCaseId ) ; } 
private boolean checkIfAllTilesAreInPlace () { try { for ( int i = 0; i < ( currentField.length ) ; i++ ) { for ( int j = 0; j < ( currentField[i].length ) ; j++ ) { if ( ! ( currentField[i][j][0].equals ( solutionField[i][j][0] ) ) ) return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private boolean isContains ( java.lang.String address, java.lang.String fromRule ) { java.lang.String[] fromRules = fromRule.split ( ";" ) ; try { for ( int i = 0; i < ( fromRules.length ) ; i++ ) { if ( ( address != null ) && ( address.contains ( fromRules[i] ) ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void success ( co.gov.inci.evaluon.backend.models.classes.authentication.Token token, retrofit.client.Response response ) { userToken = token; co.gov.inci.evaluon.backend.models.classes.user.Evaluee.Info evaluee = new co.gov.inci.evaluon.backend.models.classes.user.Evaluee.Info ( co.gov.inci.evaluon.backend.models.classes.user.Evaluee.genderById ( gender.getCheckedRadioButtonId () ) , co.gov.inci.evaluon.backend.models.classes.user.Evaluee.disabilitiesById ( disability.getCheckedRadioButtonId () ) , co.gov.inci.evaluon.backend.models.classes.user.Evaluee.typesById ( type.getCheckedRadioButtonId () ) , co.gov.inci.evaluon.backend.models.classes.user.Evaluee.levelsById ( level.getCheckedRadioButtonId () ) ) ; try { api.createEvaluee ( token.toString () , evaluee, evalueeCallback ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle.putInt ( "set_hour", hour ) ; try { bundle.putInt ( "set_minute", minute ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment.setHandler ( timePickerHandler ) ; timePickerDialogFragment.setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction () ; fragmentTransaction.add ( timePickerDialogFragment, "time_picker" ) ; fragmentTransaction.commit () ; } 
@ org.junit.Test public void testFillRegion () throws com.blackcrowsys.canvas.exception.CanvasOperationException { fillRegion () ; consoleCanvas.drawRectangle ( new com.blackcrowsys.canvas.Coordinate ( 2, 1 ) , new com.blackcrowsys.canvas.Coordinate ( 4, 2 ) ) ; consoleCanvas.fillRegion ( new com.blackcrowsys.canvas.Coordinate ( 1, 1 ) , 'o' ) ; try { assertArrayEquals ( canvas, ( ( char[][] ) ( consoleCanvas.getCanvas () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.math.BigDecimal getMainContractPrice ( com.ersoft.web.domain.business.contract.MainContract mainContract ) { java.math.BigDecimal price = java.math.BigDecimal.ZERO; try { if ( mainContract != null ) { java.util.List<com.ersoft.web.domain.business.contract.SubContract> subs = subContractService.findActiveAll ( com.ersoft.web.service.business.SubContractPredicates.mainContractPredicate ( mainContract ) , new org.springframework.data.domain.Sort ( org.springframework.data.domain.Sort.Direction.DESC, "createdDate" ) ) ; for ( com.ersoft.web.domain.business.contract.SubContract sub : subs ) { price = price.add ( getSubContractPrice ( sub ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return price; } 
public java.lang.String getTodayPlusDay ( int days ) { java.util.Date heute = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd" ) ; java.util.Calendar c = java.util.Calendar.getInstance () ; c.setTime ( heute ) ; try { c.add ( java.util.Calendar.DATE, days ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return sdf.format ( c.getTime () ) ; } 
public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator<com.sb.elsinore.Temp> iterator = com.sb.elsinore.LaunchControl.tempList.iterator () ; com.sb.elsinore.Temp tTemp; try { while ( iterator.hasNext () ) { tTemp = iterator.next () ; if ( ( tTemp.getName () .equalsIgnoreCase ( name ) ) || ( tTemp.getProbe () .equalsIgnoreCase ( name ) ) ) { return tTemp; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void berekening () { invoer = java.lang.Integer.parseInt ( tekstvak.getText () ) ; try { if ( ( ( invoer ) >= 1 ) && ( ( invoer ) <= 3 ) ) { beurten = true; stenen -= invoer; } else if ( ( ( 3 < ( invoer ) ) || ( ( invoer ) > 5 ) ) || ( ( invoer ) < 0 ) ) { error () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; try { for ( int i = 0; i < ( headerValues.length ) ; i++ ) { tvDataset.getColumns () .add ( tu.createColumn ( i, headerValues[i] ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void clearInMemoryJobInfos ( int jobId ) { java.util.List<cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID> clearedTasks = com.google.common.collect.Lists.newArrayList () ; java.util.LinkedList<cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID> tasks = managedJobToTaskList.remove ( jobId ) ; if ( tasks != null ) { for ( cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID id : tasks ) { managedTaskIdToInfos.remove ( id ) ; clearedTasks.add ( id ) ; } } managedJobIdToInfos.remove ( jobId ) ; try { cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.LOG.info ( ( ( ( "In-memory state purged: jobId=" + jobId ) + ", tasks=" ) + clearedTasks ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.util.ArrayList<pbs.parser.Statement> stmtList () { java.util.ArrayList<pbs.parser.Statement> stmtlist = new java.util.ArrayList<pbs.parser.Statement> () ; pbs.parser.Statement s = nextStatement () ; try { while ( s != null ) { stmtlist.add ( s ) ; s = nextStatement () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return stmtlist; } 
private java.lang.StringBuilder log ( java.lang.String level, java.lang.Object message ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.text.SimpleDateFormat format = new java.text.SimpleDateFormat ( com.kk.utils.log.ConsoleLogger.formatDefaultTimestamp ) ; java.lang.String time = format.format ( new java.util.Date () ) ; sb.append ( time ) ; sb.append ( " " ) ; try { sb.append ( level ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sb.append ( " " ) ; sb.append ( getFileNameAndLineNumber () ) ; sb.append ( " - " ) ; sb.append ( message ) ; return sb; } 
public static void main ( java.lang.String[] args ) { int bits = 3; int[] ids = new int[] { 3, 6, 1 }; int firstId = 0; java.util.ArrayList<java.lang.Integer> e = new java.util.ArrayList<> ( ids.length ) ; for ( int id : ids ) { e.add ( id ) ; } ChordNetwork net = new ChordNetwork ( bits, firstId ) ; try { net.addNodes ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( net ) ; } 
@ java.lang.Override public void handleInput ( nl.weeaboo.vn.math.Matrix parentTransform, nl.weeaboo.vn.input.IInput input ) { nl.weeaboo.vn.math.Matrix inputTransform = parentTransform.translatedCopy ( ( - ( getX () ) ) , ( - ( getY () ) ) ) ; try { for ( nl.weeaboo.vn.scene.IVisualElement elem : nl.weeaboo.vn.scene.impl.SceneUtil.getChildren ( this, VisualOrdering.FRONT_TO_BACK ) ) { elem.handleInput ( inputTransform, input ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testProcessXor () throws net.torocraft.minecoprocessors.util.ParseException { net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest ( 5, 6, 0, 0, "xor a, b" ) ; processor.processXor () ; net.torocraft.minecoprocessors.processor.ProcessorTest.assertRegisters ( processor, 3, 6, 0, 0 ) ; org.junit.Assert.assertFalse ( processor.zero ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest ( 5, 5, 0, 0, "xor a, b" ) ; try { processor.processXor () ; } catch ( Exception ex ) { ex.printStackTrace () ; } net.torocraft.minecoprocessors.processor.ProcessorTest.assertRegisters ( processor, 0, 5, 0, 0 ) ; org.junit.Assert.assertTrue ( processor.zero ) ; } 
public java.util.ArrayList<graph.Vector> getVectorsPointingAway ( graph.Point p ) { java.util.ArrayList<graph.Vector> vs = new java.util.ArrayList<> () ; try { for ( int i = 0; i < ( getEdges () .size () ) ; i++ ) { if ( getEdges () .get ( i ) .getP1 () .equals ( p ) ) { vs.add ( getEdges () .get ( i ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return vs; } 
private javax.persistence.TypedQuery<testJpa.simple.parentChild.domain.ParentTable> createDataQuery ( final java.lang.String data ) { final javax.persistence.criteria.CriteriaBuilder cb = em.getCriteriaBuilder () ; final javax.persistence.criteria.CriteriaQuery<testJpa.simple.parentChild.domain.ParentTable> cq = cb.createQuery ( testJpa.simple.parentChild.domain.ParentTable.class ) ; final javax.persistence.criteria.Root<testJpa.simple.parentChild.domain.ParentTable> root = cq.from ( testJpa.simple.parentChild.domain.ParentTable.class ) ; try { cq.where ( cb.equal ( root.get ( "data" ) , data ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return em.createQuery ( cq ) ; } 
public void initializeComponents () { componentSelectionPanel.clear () ; try { for ( int i = 0; i < ( data.componentIdList.size () ) ; i++ ) { com.google.gwt.user.client.ui.HTML item = new com.google.gwt.user.client.ui.HTML ( data.componentIdList.get ( i ) ) ; item.setStyleName ( "wmt-ComponentSelectionMenuItem" ) ; item.addStyleDependentName ( "missing" ) ; componentSelectionPanel.add ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture.ecrireStringln ( flux, ( ";iffaux " + etiquette ) ) ; compiler.Ecriture.ecrireStringln ( flux, "pop ax" ) ; try { compiler.Ecriture.ecrireStringln ( flux, "cmp ax,FALSE" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } compiler.Ecriture.ecrireStringln ( flux, ( "je " + etiquette ) ) ; } 
public void check () { if ( ( name.equals ( names[0] ) ) && ( password.equals ( "password" ) ) ) { launchActivity () ; return; } try { if ( ! ( name.equals ( names[0] ) ) ) { Notification.setText ( "Invalid User" ) ; } else { Notification.setText ( "Wrong Pass" ) ; pass.setText ( "" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return; } 
@ java.lang.Override public void doIt ( com.github.oxo42.stateless4j.transitions.Transition<com.couchbase.lite.replicator.ReplicationState, com.couchbase.lite.replicator.ReplicationTrigger> transition ) { com.couchbase.lite.util.Log.v ( Log.TAG_SYNC, ( ( ( "[onExit () ] " + ( transition.getSource () ) ) + " => " ) + ( transition.getDestination () ) ) ) ; try { if ( ( transition.getSource () ) == ( transition.getDestination () ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } notifyChangeListenersStateTransition ( transition ) ; } 
public static java.lang.String readStringFromFile ( java.io.File inputFile ) { try { if ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) { if ( ! ( edu.iastate.symex.util.FileIO.fileMap.containsKey ( inputFile ) ) ) edu.iastate.symex.util.FileIO.fileMap.put ( inputFile, edu.iastate.symex.util.FileIO.readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap.get ( inputFile ) ; } else { return edu.iastate.symex.util.FileIO.readStringFromFileWithoutCache ( inputFile ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void crossover ( ga.Genes genes ) { java.util.Random rand = new java.util.Random () ; try { for ( int i = 2; i < ( genes.getNum () ) ; i += 2 ) { int cuttingPoint = ( rand.nextInt ( ( ( genes.getDim () ) - 1 ) ) ) + 1; ga.Gene.shiftDNASection ( genes.getAt ( i ) , genes.getAt ( ( i + 1 ) ) , cuttingPoint, genes.getDim () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void targetSizeCheck ( shared.logic.support.action.Action a ) { try { if ( ( a.ability ) == ( shared.roles.Jailor.EXECUTE_ ) ) { if ( ( a.getTargets () .size () ) > ( jailedTargets.size () ) ) Exception ( "Cannot execute someone that isn't jailed" ) ; if ( ( getPerceivedCharges () ) != ( shared.logic.support.rules.Rules.UNLIMITED ) ) if ( ( a.getTargets () .size () ) > ( getPerceivedCharges () ) ) Exception ( "Not enough executions for that many targets" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void loadUrl ( java.lang.String url ) { try { if ( ( url != null ) && ( Patterns.WEB_URL.matcher ( url ) .matches () ) ) { webView.getSettings () .setJavaScriptEnabled ( true ) ; webView.setWebViewClient ( new in.mobileappdev.news.ui.NewsDetailWebActivity.CustomWebViewclient ( this ) ) ; webView.loadUrl ( url ) ; } else { android.widget.Toast.makeText ( this, "Url not valid, Navigating to Home screen", Toast.LENGTH_LONG ) .show () ; startActivity ( new android.content.Intent ( this, in.mobileappdev.news.ui.SplashScreenActivity.class ) ) ; finish () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void showMessage ( java.lang.String message ) { if ( message.equals ( "" ) ) { return; } tfMainInput.setText ( "" ) ; my.edu.taylors.dad.chat.entity.Message newMessage = new my.edu.taylors.dad.chat.entity.Message ( message, my.edu.taylors.dad.chat.entity.ClientType.ME ) ; addMessage ( newMessage ) ; try { sendMessage ( message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String resolveIssue () { Ticket current = ( ( Ticket ) ( queue.removeMin () ) ) ; try { current.setSolution ( solutions[current.getPriority () ] ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current.getSolution () ) ; return q; } 
private void DecideWhereToGoBackTo () { try { if ( ( motive ) != null ) { if ( ( motive.equals ( "pre-trip" ) ) || ( motive.equals ( "log-in" ) ) ) { startLogOutService () ; navigateToLogin () ; } else { java.lang.String newStatus = _statusToDisplay; storeStatusInMemory ( newStatus ) ; navigateToMainMenu ( newStatus ) ; } } else { java.lang.String newStatus = _statusToDisplay; storeStatusInMemory ( newStatus ) ; navigateToMainMenu ( newStatus ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void createClient ( java.lang.String email, java.lang.String name, java.lang.String password, java.lang.String address, java.lang.String birthdate, double posX, double posY ) { Client newClient = new Client ( email, name, password, address, birthdate, posX, posY ) ; try { this.clients.add ( newClient ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void addYearCredits ( final java.util.Map<org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod, java.math.BigDecimal> result, final org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod curricularPeriod, final java.math.BigDecimal credits ) { final java.math.BigDecimal creditsYear = result.get ( curricularPeriod ) ; try { result.put ( curricularPeriod, ( creditsYear != null ? creditsYear.add ( credits ) : credits ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void rebuild ( boolean bracketsPairsTouched, boolean singleBracketsTouched, boolean hintsTouched, boolean alwaysRedraw ) { boolean update = alwaysRedraw; if ( bracketsPairsTouched ) { update |= updateSurroundingPairsToPaint ( _caretOffset ) ; update |= clearHoveredPairsToPaint () ; } if ( singleBracketsTouched ) update |= updateSingleBrackets () ; try { update |= updateHints () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( update ) { _textWidget.getDisplay () .asyncExec ( new java.lang.Runnable () { @java.lang.Override public void run () { _textWidget.redraw () ; } } ) ; } } 
public static void main ( java.lang.String[] args ) throws java.lang.Exception { final org.glassfish.grizzly.http.server.HttpServer server = org.glassfish.grizzly.http.server.HttpServer.createSimpleServer ( "html", 80 ) ; com.fonyli.tonyliweb.functions.markovchain.MarkovChain.getInstance () .selectTeacher ( MarkovChain.SHAKESPEARE ) ; try { com.fonyli.tonyliweb.server.MainService.addHttpHandlers ( server ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.fonyli.tonyliweb.server.MainService.start ( server ) ; } 
@ java.lang.Override protected void saveContext () { org.talend.dataquality.analysis.Analysis analysis = getAnalysis () ; org.talend.core.model.process.IContextManager contextManager = currentEditor.getContextManager () ; contextManager.saveToEmf ( analysis.getContextType () ) ; try { analysis.setDefaultContext ( getDefaultContextGroupName ( ( ( org.talend.dataprofiler.core.ui.editor.SupportContextEditor ) ( currentEditor ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.talend.dataquality.helpers.AnalysisHelper.setLastRunContext ( currentEditor.getLastRunContextGroupName () , analysis ) ; } 
@ java.lang.SuppressWarnings ( value = "DefaultLocale" ) private static boolean checkExtension ( java.lang.String path, java.lang.String[] extensions ) { if ( path == null ) { return false; } try { for ( int i = 0; i < ( extensions.length ) ; i++ ) { if ( path.toLowerCase () .endsWith ( extensions[i] ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private boolean isPrime ( int number ) { if ( number == 2 ) { return true; } if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false; } try { for ( int oddNumber = 3; oddNumber <= ( java.lang.Math.sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void onScrollStateChanged ( android.widget.AbsListView view, int scrollState ) { try { switch ( scrollState ) { case AbsListView.OnScrollListener.SCROLL_STATE_IDLE: if ( ( view.getLastVisiblePosition () ) == ( ( view.getCount () ) - 1 ) ) { ( page ) ++; totalUrl = ( baseUrl ) + ( getPageValue ( page ) ) ; getData () ; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setOptions ( java.util.ArrayList<gui.Button> options, entity.AbstractEntity entity ) { try { if ( options != null ) { for ( int i = 0; i < ( options.size () ) ; i++ ) { options.get ( i ) .setSize ( 30, 30 ) ; } } else if ( entity != ( calledby ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } calledby = entity; this.options = options; } 
@ java.lang.Override public void draw ( java.awt.Graphics g ) { super.draw ( g ) ; java.awt.Graphics2D g2d = ( ( java.awt.Graphics2D ) ( g ) ) ; this.applyTransformations ( g2d ) ; try { for ( edu.virginia.engine.display.DisplayObject child : children ) { if ( child != null ) { child.draw ( g ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } this.reverseTransformations ( g2d ) ; } 
@ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { try { if ( placemark != null ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus.getBus () ; bus.post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus.post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus.post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark.getPolygons () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void animateIn () { android.support.v7.widget.ActionMenuView menuView = getMenuView () ; try { for ( int i = 0, count = ( menuView == null ) ? 0 : menuView.getChildCount () ; i < count; i++ ) { android.view.View child = menuView.getChildAt ( i ) ; android.view.animation.Animation anim = mAnimator.getInAnimation ( child, i ) ; if ( anim != null ) child.startAnimation ( anim ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean isDirty ( com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean ) { try { if ( ( buddyInstructionEditText ) == null ) { return false; } else if ( missionBean == null ) { return false; } else { return ! ( buddyInstructionEditText.toString () .equals ( missionBean.getBuddyInstruction () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void applyStrength ( int strength ) { this.strength = strength; try { if ( strength == 0 ) strengthButton0.setSelected ( true ) ; else if ( strength == 1 ) strengthButton1.setSelected ( true ) ; else if ( strength == 2 ) strengthButton2.setSelected ( true ) ; else if ( strength == 3 ) strengthButton3.setSelected ( true ) ; else if ( strength == 4 ) strengthButton4.setSelected ( true ) ; else strengthRadioGroup.clearSelection () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void done ( java.util.List<com.example.user.simpleui.Order> objects, com.parse.ParseException e ) { try { if ( e == null ) { com.example.user.simpleui.Order.pinAllInBackground ( "Order", objects ) ; callback.done ( objects, e ) ; } else { com.example.user.simpleui.Order.getQuery () .fromLocalDatastore () .findInBackground ( callback ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.Boolean attachAssetToAccount ( java.lang.String assetUuid, java.lang.String accountUuid ) { java.util.HashMap<java.lang.String, java.lang.String> params = new java.util.HashMap<java.lang.String, java.lang.String> () ; params.put ( KeyConstants.Uuid, accountUuid ) ; try { params.put ( KeyConstants.AttachedAssetUuid, assetUuid ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return instances.sample_rating.WeightedRate.repository.accountAttach ( params ) ; } 
private void validateHeader ( final java.lang.String[] headers ) throws java.io.IOException { if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields, headers ) ) { return; } try { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testRuntimeDisabled () throws java.lang.Exception { jobExtensionPoint.setRuntimeEnabled ( false ) ; jobExtensionPoint.callExtensionPoint ( null, job ) ; java.util.List<org.pentaho.di.job.JobListener> listeners = job.getJobListeners () ; assertNotNull ( listeners ) ; try { assertFalse ( listeners.contains ( jobExtensionPoint ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void angreifen ( pkg.Charakter gegner ) { int schaden = random.getRandom ( 15, 25 ) ; if ( ( this.getSpezialfaehigkeit () ) == true ) { if ( this.wahrscheinlichkeit () ) { java.lang.System.out.println ( "Erfolgreich!" ) ; this.schadenNehmen ( ( schaden * 2 ) ) ; } else schaden = schaden / 2; } super.angreifen ( gegner ) ; try { gegner.schadenNehmen ( schaden ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showBoardLine ( final int row ) { for ( int i = 0; i < ( game.getBoard () .getRowLength ( row ) ) ; i++ ) { if ( ( game.getBoard () .getFigure ( row, i ) ) == null ) { java.lang.System.out.print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out.print ( game.getBoard () .getFigure ( row, i ) .toString () ) ; } } try { java.lang.System.out.println () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getStringBetweenQuotationMarks ( java.lang.String line ) { line = line.replace ( "\t", "" ) ; try { line = line.trim () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.regex.Pattern pattern = java.util.regex.Pattern.compile ( "' ( .*? ) '" ) ; java.util.regex.Matcher matcher = pattern.matcher ( line ) ; if ( matcher.find () ) line = matcher.group ( 1 ) ; return line; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.util.Random rand = new java.util.Random () ; vehicleTypePrivacyField.setValue ( rand.nextDouble () ) ; try { emergencyTypePrivacyField.setValue ( rand.nextDouble () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } malfunctionTypePrivacyField.setValue ( rand.nextDouble () ) ; numOfPeoplePrivacyField.setValue ( rand.nextDouble () ) ; thresholdPrivacyField.setValue ( rand.nextDouble () ) ; } 
@ java.lang.Override public int hashCode () { int result = ( ( color ) != null ) ? color.hashCode () : 0; result = ( 31 * result ) + ( type.hashCode () ) ; try { result = ( 31 * result ) + ( ( image ) != null ? image.hashCode () : 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public void sendData ( java.util.ArrayList<com.monolc.felljs.Client> clients ) { if ( ! ( validated ) ) { return; } java.lang.String entityData = server.world.toString () ; connection.send ( ( "pos:" + ( e ) ) ) ; try { if ( ( entityData.length () ) > 0 ) { connection.send ( ( ( ( "dat" + ( getDataStride () ) ) + ":" ) + entityData ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void scaleWallsY ( float multiplier ) { com.badlogic.gdx.math.collision.BoundingBox bounds = new com.badlogic.gdx.math.collision.BoundingBox () ; try { backWall.calculateBoundingBox ( bounds ) .mul ( backWall.transform ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( multiplier > 0 ) || ( ( bounds.getHeight () ) > ( com.ggwp.interiordesigner.object.Room.MINIMUM_DIMENSION ) ) ) { float scalePercentage = 1.0F + ( ( ( com.ggwp.interiordesigner.object.Room.SCALE_AMOUNT ) / ( bounds.getHeight () ) ) * multiplier ) ; for ( com.ggwp.interiordesigner.object.Wall wall : getWalls () ) { wall.transform.scale ( 1.0F, scalePercentage, 1.0F ) ; } } } 
@ java.lang.Override public void map ( water.util.Chunk c ) { try { for ( int i = 0; i < ( c._len ) ; ++i ) { if ( ! ( c.isNA ( i ) ) ) c.set ( i, fromTo[ ( ( int ) ( c.at8 ( i ) ) ) ] ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void createMetadatasInDefaultSchemaIfInexistent ( com.constellio.model.entities.Taxonomy taxonomy, java.lang.String schemaType ) { try { if ( ! ( getClassifiedObjects ( taxonomy ) .contains ( schemaType ) ) ) { java.lang.String groupLabel = com.constellio.app.ui.i18n.i18n.$ ( "classifiedInGroupLabel" ) ; valueListServices () .createAMultivalueClassificationMetadataInGroup ( taxonomy, schemaType, "classifiedInGroupLabel", groupLabel ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void gameOver () { m_game.reset () ; for ( int r = 0; r < ( Game.NUM_ROWS ) ; r++ ) { for ( int c = 0; c < ( m_numCols ) ; c++ ) m_map[r][c] = null; } try { parseMapFile () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { ca.ualberta.cs.zindi.zindi_sizebook.Person mPerson = newPeopleList.get ( position ) ; android.content.Intent mIntent = new android.content.Intent ( this, ca.ualberta.cs.zindi.zindi_sizebook.PersonActivity.class ) ; android.os.Bundle mBundle = new android.os.Bundle () ; mBundle.putParcelable ( ca.ualberta.cs.zindi.zindi_sizebook.MainActivity.PAR_KEY, mPerson ) ; try { mIntent.putExtras ( mBundle ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivityForResult ( mIntent, ca.ualberta.cs.zindi.zindi_sizebook.MainActivity.EDIT_REQUEST ) ; } 
public void reset ( com.studiau.amazinggravity.Ship ship ) { float randomFloat = random.nextFloat () ; radius = ( com.studiau.amazinggravity.ExhaustParticle.BASE_RADIUS ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_RADIUS ) ) ; locationX = ship.getExhaustLocationX () ; locationY = ship.getExhaustLocationY () ; try { speedX = ( ( ( random.nextFloat () ) - 0.5F ) * 2 ) * ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDX ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } speedY = ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDY ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_SPEEDY ) ) ; } 
public java.lang.String mark ( int pos ) { if ( ( yourField.at ( pos ) ) == '~' ) { return "missed!\n"; } java.lang.String hitstr = ""; try { hitstr = yourField.addHit ( pos ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( hitstr.contains ( "sunk" ) ) ( this.shipsDestroyed ) ++; return hitstr; } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.example.mirko.custombuttonexample.CastConnectionManager manager = com.example.mirko.custombuttonexample.PartyCastApplication.getInstance () .getCastConnectionManager () ; manager.startScan () ; manager.addObserver ( this ) ; if ( manager.isConnectedToReceiver () ) { com.example.mirko.custombuttonexample.PartyCastApplication.getInstance () .getCastConnectionManager () .getGameManagerClient () .setListener ( mListener ) ; } } 
private int addNumber () { try { java.lang.System.out.print ( "Enter contact phone number: " ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int tel; while ( true ) { tel = validateNumber () ; Contact contact = getbyNumber ( tel ) ; if ( contact == null ) { java.lang.System.out.println ( "Adding new number..." ) ; } else if ( ( contact.getNumber () ) == tel ) { java.lang.System.out.println ( ( ( "That number already exists for contact " + ( contact.getName () ) ) + ". Try a different one" ) ) ; continue; } break; } return tel; } 
public java.lang.String getMimeType ( int pos ) { try { if ( ( ( com.fwgg8547.mycast.CardModel.mCursor ) == null ) || ( ! ( com.fwgg8547.mycast.CardModel.mCursor.moveToPosition ( pos ) ) ) ) { android.util.Log.w ( com.fwgg8547.mycast.CardModel.TAG, "fail movetopos" ) ; return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } int indx = com.fwgg8547.mycast.CardModel.mCursor.getColumnIndex ( MediaStore.Images.Media.MIME_TYPE ) ; java.lang.String mime = com.fwgg8547.mycast.CardModel.mCursor.getString ( indx ) ; return mime; } 
public void start () throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.InstantiationException { java.lang.String input = ""; try { do { showMainMenu () ; input = scanner.nextLine () .trim () .toLowerCase () ; switch ( input ) { case "q": scanner.close () ; break; case "a": loadLanguage ( getJars () ) ; break; case "s": switchLanguage () ; break; default: } } while ( ! ( input.equals ( "q" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { if ( ( ( dataSnapshot.getValue () ) != null ) && ( dataSnapshot.getValue () .equals ( emailHash ) ) ) { android.util.Log.d ( "", java.lang.String.format ( "FirebaseBackend:connectBudgetAndUserByEmail: value: %s, address: %s", dataSnapshot.getValue () , emailHash ) ) ; connectBudgetAndUser ( bid, uidAsString ) ; } else { android.util.Log.d ( "", java.lang.String.format ( "FirebaseBackend:connectBudgetAndUserByEmail: uid is: %s, value: is null, address: %s", uidAsString, emailHash ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateStudentGroup ( java.lang.Long pyramusId ) { fi.pyramus.rest.model.StudentGroup studentGroup = pyramusClient.get () .get ( java.lang.String.format ( "/students/studentGroups/%d", pyramusId ) , fi.pyramus.rest.model.StudentGroup.class ) ; java.lang.String identifier = identifierMapper.getStudentGroupIdentifier ( pyramusId ) ; fi.muikku.model.users.UserGroupEntity userGroupEntity = userGroupEntityController.findUserGroupEntityByDataSourceAndIdentifier ( SchoolDataPyramusPluginDescriptor.SCHOOL_DATA_SOURCE, identifier, true ) ; try { if ( studentGroup == null ) { if ( userGroupEntity != null ) fireUserGroupRemoved ( identifier ) ; } else { if ( userGroupEntity == null ) { fireUserGroupDiscovered ( identifier ) ; } else { fireUserGroupUpdated ( identifier ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setModelForAcceptors ( challenge.dbside.models.ChallengeDefinition challenge, org.springframework.ui.Model model ) { java.util.List acceptors = new java.util.ArrayList ( new java.util.HashSet ( challenge.getAllAcceptors () ) ) ; int acceptorsOnPage = 6; try { model.addAttribute ( "listOfAcceptors", ( ( acceptors.size () ) > acceptorsOnPage ? acceptors.subList ( 0, acceptorsOnPage ) : acceptors.subList ( 0, acceptors.size () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } model.addAttribute ( "showAcceptorsExtendenceButton", ( ( acceptors.size () ) > acceptorsOnPage ) ) ; } 
protected void readGraphicsFromLibrary ( int templateID, double xCoor, double yCoor ) { try { if ( ( ( this ) instanceof com.nkoiv.mists.game.gameobject.Structure ) && ( ( com.nkoiv.mists.game.Mists.structureLibrary ) != null ) ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary.create ( templateID ) ; if ( dummy != null ) this.graphics = dummy.graphics; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( this.graphics ) == null ) this.graphics = new com.nkoiv.mists.game.sprites.Sprite () ; this.graphics.setPosition ( xCoor, yCoor ) ; } 
public void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation game ) { try { ais[ ( ( game.getTurn () ) % 2 ) ].findBestMoves ( game ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } chess.domain.Move move = ais[ ( ( game.getTurn () ) % 2 ) ].getBestMove () ; setChosen ( move.getPiece () ) ; moveToTargetLocation ( move.getTarget () .getColumn () , move.getTarget () .getRow () , game, true ) ; } 
public void delete ( int key ) { java.util.Iterator<QueueEntity> iter = info.iterator () ; try { while ( iter.hasNext () ) { QueueEntity it = iter.next () ; if ( ( it.ID ) == key ) { info.remove ( it ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML void addSchedule () throws java.sql.SQLException { java.lang.String pickedDay = new java.lang.String ( day.getSelectionModel () .getSelectedItem () ) ; java.lang.String time = new java.lang.String ( hour.getSelectionModel () .getSelectedItem () ) ; db.modifySchedule ( pickedDay, java.lang.Integer.parseInt ( time ) , "BUSY" ) ; java.lang.System.out.println ( "OK" ) ; populate () ; javafx.stage.Stage stage = ( ( javafx.stage.Stage ) ( add.getScene () .getWindow () ) ) ; try { stage.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( java.lang.Double timeStep, tum.cms.sim.momentum.visualization.controller.CoreController coreController, tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null; try { while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader.asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread.sleep ( 200 ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations.updateCustomData ( simulationOutputReader.getCsvType () , dataStepCurrent, coreController ) ; } 
void printArray ( int[] array ) { try { for ( int i = 0; i < ( array.length ) ; i++ ) { java.lang.System.out.print ( array[i] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out.print ( " " ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onConnected ( @android.support.annotation.Nullable android.os.Bundle bundle ) { try { if ( ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.support.v4.app.ActivityCompat.requestPermissions ( this, new java.lang.String[] { android.Manifest.permission.ACCESS_FINE_LOCATION }, LOCATION_PERMISSION_REQUEST_CODE ) ; } else { getNewLocation () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public http.Header getHeader ( java.lang.String header ) throws http.exceptions.BadRequestException { if ( ( header.split ( ": " ) .length ) != 2 ) { throw new http.exceptions.BadRequestException () ; } try { for ( http.Header.Type type : http.Header.Type.values () ) { if ( header.toUpperCase () .startsWith ( type.type ) ) { return new http.Header ( header.split ( ":" ) [1], type ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return new http.Header ( header.split ( ":" ) [1], http.Header.Type.UnknownHeader ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.jaitlapps.bestadvice.domain.list.ListRecordGroup listRecordGroup = com.jaitlapps.bestadvice.database.FavoriteManager.getInstance ( getActivity () ) .getList () ; com.jaitlapps.bestadvice.adapter.ListAdapter adapter = new com.jaitlapps.bestadvice.adapter.ListAdapter ( getActivity () , listRecordGroup ) ; setListAdapter ( adapter ) ; } 
@ java.lang.Override protected com.cowlark.cowbel.parser.core.ParseResult parseImpl ( com.cowlark.cowbel.parser.core.Location location ) { com.cowlark.cowbel.parser.core.ParseResult pr = com.cowlark.cowbel.parser.parsers.OpenParenthesisParser.parse ( location ) ; if ( pr.failed () ) return pr; com.cowlark.cowbel.parser.core.ParseResult argumentspr = com.cowlark.cowbel.parser.parsers.ExpressionListParser.parse ( pr.end () ) ; if ( argumentspr.failed () ) return argumentspr; pr = com.cowlark.cowbel.parser.parsers.CloseParenthesisParser.parse ( argumentspr.end () ) ; try { if ( pr.failed () ) return pr; } catch ( Exception ex ) { ex.printStackTrace () ; } argumentspr.setEnd ( pr.end () ) ; return argumentspr; } 
@ javafx.fxml.FXML public void muteHandler () throws javax.sound.sampled.LineUnavailableException { microphoneMuted = ! ( microphoneMuted ) ; javafx.scene.image.Image image; if ( microphoneMuted ) { image = new javafx.scene.image.Image ( getClass () .getResourceAsStream ( "/microphone_muted.png" ) ) ; muteBtn.setText ( "Unmute microphone" ) ; audioUtils.mute () ; } else { image = new javafx.scene.image.Image ( getClass () .getResourceAsStream ( "/microphone.png" ) ) ; muteBtn.setText ( "Mute microphone" ) ; audioUtils.unmute () ; } try { microphoneLbl.setGraphic ( new javafx.scene.image.ImageView ( image ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void refresh ( java.lang.String rateLimiterYaml ) { org.springframework.beans.factory.config.YamlPropertiesFactoryBean yaml = new org.springframework.beans.factory.config.YamlPropertiesFactoryBean () ; yaml.setResources ( new org.springframework.core.io.FileSystemResource ( rateLimiterYaml ) ) ; try { rateLimiterProperties = yaml.getObject () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.time_frame = ( ( int ) ( rateLimiterProperties.get ( "time-frame" ) ) ) * 1000; clear () ; } 
@ org.junit.Test public void shouldDeleteATemplateWithAGivenName () { com.thoughtworks.go.server.service.PipelineTemplateConfig emptyTemplate = template ( "empty_template" ) ; com.thoughtworks.go.server.service.CruiseConfig cruiseConfig = new com.thoughtworks.go.server.service.BasicCruiseConfig () ; try { cruiseConfig.addTemplate ( emptyTemplate ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } service.removeTemplate ( "empty_template", cruiseConfig, "md5", new com.thoughtworks.go.server.service.result.HttpLocalizedOperationResult () ) ; verify ( goConfigService ) .updateConfig ( new com.thoughtworks.go.server.service.DeleteTemplateCommand ( "empty_template", "md5" ) ) ; } 
public void update () { try { progress1.setTextProgress ( b.getPayout () .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } buyButton.setText ( ( ( ( ( ( b.getName () ) + ":" ) + ( b.getNumOfBuildings () .toString () ) ) + "\nBuy:" ) + ( b.getPrice () .toString () ) ) ) ; } 
@ java.lang.Override public com.microsoft.azure.management.storage.implementation.StorageAccountImpl refresh () throws java.lang.Exception { com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.storage.implementation.StorageAccountInner> response = this.client.getProperties ( this.resourceGroupName () , this.name () ) ; com.microsoft.azure.management.storage.implementation.StorageAccountInner storageAccountInner = response.getBody () ; this.setInner ( storageAccountInner ) ; try { clearWrapperProperties () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_register ) ; if ( savedInstanceState == null ) { getSupportFragmentManager () .beginTransaction () .add ( R.id.container, new com.gatech.objectsanddesign.shoppingwithfriends.RegisterActivity.PlaceholderFragment () ) .commit () ; } } 
private void assertActualReportEqualsTo ( ru.sbt.refactoring.solidhomework.MailSender fakeMailSender, java.lang.String expectedReportPath ) throws java.io.IOException, javax.mail.MessagingException { org.mockito.ArgumentCaptor<java.lang.String> messageTextArgumentCaptor = org.mockito.ArgumentCaptor.forClass ( java.lang.String.class ) ; try { verify ( fakeMailSender ) .createMessageWithHTMLCode ( messageTextArgumentCaptor.capture () , anyString () , anyString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.nio.file.Path path = java.nio.file.Paths.get ( expectedReportPath ) ; java.lang.String expectedReportContent = new java.lang.String ( java.nio.file.Files.readAllBytes ( path ) ) ; org.junit.Assert.assertEquals ( messageTextArgumentCaptor.getValue () , expectedReportContent ) ; } 
@ java.lang.Override public org.jvoicexml.xml.srgs.GrammarType identify ( final org.jvoicexml.GrammarDocument grammar ) { final org.jvoicexml.xml.srgs.GrammarType requestedType = grammar.getMediaType () ; try { if ( requestedType.equals ( HalefGrammarType.HALEF ) ) { return HalefGrammarType.HALEF; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( grammar.getTextContent () .startsWith ( "wfst\n" ) ) { return HalefGrammarType.HALEF; } return null; } 
public java.lang.Boolean autorAussendienst () { try { if ( ( ( securityService ) == null ) || ( ! ( autorIntern () ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } de.fraunhofer.igd.klarschiff.service.security.User user = securityService.getUserByEmail ( this.autorEmail ) ; if ( user == null ) { return false; } return ! ( user.getAussendienstTeams () .isEmpty () ) ; } 
private java.lang.String getText ( final org.objectweb.asm.tree.MethodNode mn ) { org.objectweb.asm.util.Textifier tv = new org.objectweb.asm.util.Textifier () ; org.objectweb.asm.util.TraceMethodVisitor tmv = new org.objectweb.asm.util.TraceMethodVisitor ( tv ) ; try { mn.accept ( tmv ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( int i = 0; i < ( tv.text.size () ) ; i++ ) { sb.append ( tv.text.get ( i ) ) ; } return sb.toString () ; } 
public static int getSelectedIdentityId () { try { if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex () ) == 0 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.person.getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex () ) == 1 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.team.getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex () ) == 2 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.unternehmen.getId () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
private boolean containsErrors ( java.util.List<com.hp.application.automation.tools.sse.result.model.junit.Testsuite> testsuites ) { boolean ret = false; try { for ( com.hp.application.automation.tools.sse.result.model.junit.Testsuite testsuite : testsuites ) { for ( com.hp.application.automation.tools.sse.result.model.junit.Testcase testcase : testsuite.getTestcase () ) { if ( "error".equals ( testcase.getStatus () ) ) { ret = true; break; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ret; } 
@ java.lang.Override public void done ( byte[] data, com.parse.ParseException e ) { try { if ( e == null ) { if ( ( data != null ) && ( ( data.length ) != 0 ) ) { restaurantModel = new com.example.vanne.tradish_alpha.Models.RestaurantModel ( name, address, restId, data ) ; restaurantModel.setFlag ( 1 ) ; restaurantModels.add ( restaurantModel ) ; updateListView () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void CharInvSearch ( java.lang.String type ) { ArkBotGUI.GUIText ( "[ACTION]: Searching character inventory" ) ; p = java.awt.MouseInfo.getPointerInfo () .getLocation () ; try { drag.move ( ArkBot.global.CHAR_INV_SEARCH_BAR ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } leftClick () ; bot.delay ( Global.PAUSE ) ; leftClick () ; bot.delay ( Global.PAUSE ) ; leftClick () ; robtype.type ( type ) ; } 
private io.druid.indexing.jdbc.JDBCIndexTask createTask ( final java.lang.String taskId, final io.druid.indexing.jdbc.JDBCIOConfig ioConfig, final java.lang.Integer maxRowsPerSegment, final java.lang.Boolean resetOffsetAutomatically ) { try { io.druid.indexing.jdbc.JDBCIndexTaskTest.offsets.put ( 0, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final io.druid.indexing.jdbc.JDBCTuningConfig tuningConfig = new io.druid.indexing.jdbc.JDBCTuningConfig ( 1000, maxRowsPerSegment, new org.joda.time.Period ( "P1Y" ) , null, null, null, buildV9Directly, reportParseExceptions, handoffConditionTimeout, resetOffsetAutomatically ) ; final io.druid.indexing.jdbc.JDBCIndexTask task = new io.druid.indexing.jdbc.JDBCIndexTask ( taskId, null, io.druid.indexing.jdbc.JDBCIndexTaskTest.DATA_SCHEMA, tuningConfig, ioConfig, null, null ) ; task.setPollRetryMs ( io.druid.indexing.jdbc.JDBCIndexTaskTest.POLL_RETRY_MS ) ; return task; } 
public static java.lang.String getSetOfHandFromCombinations ( java.util.Set<java.lang.Integer> indexesWereChoosen ) { java.lang.StringBuilder result = new java.lang.StringBuilder ( "" ) ; for ( java.lang.Integer integer : indexesWereChoosen ) { result.append ( com.levenko.myequilator.AllCards.getSetOfHandFromCombination ( com.levenko.myequilator.AllCards.allCombinationsInRecyclerOrder.get ( integer ) ) ) ; result.append ( ',' ) ; } try { if ( ( result.length () ) > 0 ) { result.deleteCharAt ( ( ( result.length () ) - 1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result.toString () ; } 
public void start () { try { if ( ( threadUpdater ) == null ) { threadUpdater = new java.util.Timer ( ( "Thread - " + ( this.name ) ) ) ; threadUpdater.schedule ( new ca.team4519.lib.Threader.UpdaterTask ( this ) , ( ( ( long ) ( this.period ) ) * 1000 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () throws java.io.IOException { refPanel.repaint () ; try { if ( ( this.state ) == ( state.OrderSUMMARY ) ) { this.customer.addTransaction ( this.transaction.getTransactionNum () ) ; this.customer.write () ; this.transaction.write () ; if ( this.writeToGlobalReciept ) { this.writeReceipt () ; this.writeToGlobalReciept = false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int button ) { try { if ( button == ( android.content.DialogInterface.BUTTON_POSITIVE ) ) { if ( ( experimentFilter ) != null ) { getContentResolver () .delete ( ExperimentsProvider.CONTENT_URI, experimentFilter, null ) ; } android.widget.Toast.makeText ( this, R.string.deleted, Toast.LENGTH_SHORT ) .show () ; android.content.Intent intent = new android.content.Intent ( this, com.scuddertechnologies.pheoc.MainMenu.class ) ; startActivity ( intent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) { return true; } if ( obj == null ) { return false; } try { if ( obj instanceof mc.compiler.ast.ReferenceNode ) { mc.compiler.ast.ReferenceNode node = ( ( mc.compiler.ast.ReferenceNode ) ( obj ) ) ; return reference.equals ( node.getReference () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public boolean isEmptyContext ( java.lang.Object cursorPosition ) { if ( cursorPosition == null ) { return true; } if ( cursorPosition instanceof java.lang.Boolean ) { return ! ( ( ( java.lang.Boolean ) ( cursorPosition ) ) .booleanValue () ) ; } try { if ( cursorPosition instanceof java.util.Collection ) { return ( ( ( java.util.Collection ) ( cursorPosition ) ) .size () ) == 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem mi ) { try { switch ( mi.getItemId () ) { case R.id.menu_prf: startActivity ( new android.content.Intent ( this, com.acmetensortoys.ctfwstimer.SettingsActivity.class ) ) ; return true; case R.id.menu_about: startActivity ( new android.content.Intent ( this, com.acmetensortoys.ctfwstimer.AboutActivity.class ) ) ; return true; default: return super.onOptionsItemSelected ( mi ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean isMailingEnabledAndValid () { if ( "".equals ( host ) ) { return false; } try { if ( ( ! ( "false".equals ( isAuthenticationNecessary ) ) ) && ( "".equals ( login ) ) ) { com.siemens.sw360.mail.MailUtil.log.error ( "Cannot send emails: authentication necessary, but login is not set." ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public boolean endSuccess () { synchronized ( this ) { if ( ( getStatus () ) != ( XTaskBean.STATUS_DOING ) ) return false; if ( ! ( onEndSuccess () ) ) return false; setStatus ( XTaskBean.STATUS_DONE ) ; } try { if ( ( mListener ) != null ) mListener.onComplete ( getBean () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override protected void updateItem ( application.DataSet t, boolean bln ) { super.updateItem ( t, bln ) ; try { if ( t != null ) { setText ( t.getFilePath () .substring ( application.services.GeneralService.getDataSetDirectory () .length () ) ) ; } else { setText ( "Choose..." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void pluginChanged ( jobdispatcher.plugin.Plugin curPlugin ) { try { if ( curPlugin.getName () .startsWith ( "zh_def_catalog" ) ) { mapTagTemplate1.put ( "SceneMetaDataFile", objectivePath ) ; mapTagTemplate2.remove ( "SceneMetaDataFile" ) ; } else { mapTagTemplate1.remove ( "SceneMetaDataFile" ) ; mapTagTemplate2.put ( "SceneMetaDataFile", ( ( frameFilePath ) + "_meta.xml" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void populateCapturePoints ( java.util.ArrayList<com.demo.arctf.arctfdemo.CapturePoint> capturePointList ) { try { if ( ( mMap ) != null ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap.addMarker ( new com.google.android.gms.maps.model.MarkerOptions () .position ( point.getLocation () ) .icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) .title ( point.getName () ) ) ; capturePoints.put ( captureMarker, point ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void update ( S entry ) { try { this.setDescription ( entry.getDescription () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } lastModified = entry.getLastModified () ; this.setAuthor ( entry.getAuthor () ) ; if ( ! ( entry.getGitUrl () .isEmpty () ) ) { gitUrl = entry.getGitUrl () ; } } 
public boolean contain ( ai.eboard e, int i ) { try { if ( ( e.c ) == 'X' ) return x.containsKey ( i ) ; else if ( ( e.c ) == 'O' ) return o.containsKey ( i ) ; else return ! ( u.containsKey ( i ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean compileCode ( java.lang.String code, java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className, code, false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory.getCompiler ( cu ) ; jsc.compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc.getCompilerResult () ; try { if ( cr.hasCompileErrors () ) { info = formatCompileErrors ( cr, cu ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void taskCompleted ( boolean success, java.lang.String message, org.json.JSONObject json ) { java.util.List<uk.ac.ncl.csc2022.t14.bankingapp.models.HeatPoint> allPoints = new java.util.ArrayList<> () ; try { if ( success && ( responseParser.parseLoadHeatPoints ( json, allPoints ) ) ) { delegate.loadHeatMapPassed ( allPoints ) ; } else { message = responseParser.parseErrorOrDefault ( message ) ; delegate.loadHeatMapFailed ( message ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void writePage ( javax.servlet.http.HttpServletResponse response, int httpCode, java.lang.String message, org.geowebcache.stats.RuntimeStats runtimeStats, java.lang.String contentType ) { org.geowebcache.io.Resource res = null; try { if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message.getBytes () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } org.geowebcache.GeoWebCacheUtils.writeFixedResponse ( response, httpCode, contentType, res, CacheResult.OTHER, runtimeStats ) ; } 
public void RunGame () { try { while ( true ) { GameOn = true; gameStart () ; battleStart () ; while ( ( GameOn ) == true ) { battleActive () ; boolean a = battleEnd () ; if ( a == true ) { onPlayerWin () ; } if ( a == false ) { onPlayerLose () ; GameOn = false; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getBestSuggestion ( java.lang.String typed ) { if ( ( typed == null ) || ( ( typed.length () ) == 0 ) ) return null; try { for ( java.lang.String keyword : keywords ) { if ( keyword.startsWith ( typed ) ) return keyword; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public ship.WeatherWaypoint closestWeatherWaypoint () { int theCounter = checkClosestWeather () ; for ( int i = 0; i < ( weatherWaypoints.size () ) ; i++ ) { if ( i == theCounter ) { return weatherWaypoints.get ( i ) ; } } try { java.lang.System.out.println ( "returning Null" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new ship.WeatherWaypoint () ; } 
@ java.lang.Override protected void map ( K unused, org.apache.hadoop.io.Text urlText, edu.cornell.library.lc_converter.mapreduce.Context context ) throws java.io.IOException, java.lang.InterruptedException { java.lang.String urlString = urlText.toString () ; java.io.InputStream is = getUrl ( urlString ) ; java.util.HashSet<java.lang.String> marcRecords = marcxmlCollectionParser ( is ) .iterator () ; try { for ( java.lang.String marcXml = marcRecords.next () ; marcRecords.hasNext () ; marcXml = marcRecords.next () ) { context.write ( new org.apache.hadoop.io.Text ( marcXml ) , null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateAuthenticatedStatus () { try { prefButton.setEnabled ( Settings.authenticated ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mangButton.setEnabled ( Settings.authenticated ) ; submGuiButton.setEnabled ( Settings.authenticated ) ; if ( ! ( org.gridchem.client.common.Settings.WEBSERVICE ) ) { usageButton.setEnabled ( Settings.authenticated ) ; } if ( org.gridchem.client.common.Settings.authenticated ) { setAuthButton ( "Sign Out", "<html><p>Disconnect from the CCG.</p><html>" ) ; } else { setAuthButton ( "Sign In", "<html><p>Authenticate to the CCG.</p><html>" ) ; } } 
public org.alopex.hyperios.helix.Specimen crossover ( org.alopex.hyperios.helix.Specimen mateOne, org.alopex.hyperios.helix.Specimen mateTwo ) { org.alopex.hyperios.helix.Specimen output = new org.alopex.hyperios.helix.Specimen ( true ) ; try { for ( int i = 0; i < ( output.getGenes () .length ) ; i++ ) { if ( ( java.lang.Math.random () ) <= ( GASettings.crossoverRate ) ) { output.setGene ( i, mateOne.getGenes () [i] ) ; } else { output.setGene ( i, mateOne.getGenes () [i] ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return output; } 
public boolean isHasIncidence () { try { this.computerGateway.find ( getComputerNum () , getLaboratory () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( this.computerGateway.getCurrent () ) != null ) && ( ( this.computerGateway.getCurrent () .getState () ) == ( es.uvigo.esei.infraestructura.entities.State.INCIDENCE ) ) ) { return true; } return false; } 
public static void generate_predicates () { try { for ( int current_depth = Depths.highest_depth; current_depth > 0; --current_depth ) { for ( int i = 0; i < current_depth; ++i ) { Predicates.add_entry ( Depths.DEPTHS_OUTPUT, "is_lower_than", Depths.get_id_from_depth ( new java.lang.Integer ( i ) ) , Depths.get_id_from_depth ( new java.lang.Integer ( current_depth ) ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void login ( java.lang.String email, java.lang.String password ) { java.lang.String result = util.Validate.email ( email ) ; try { if ( result.equals ( Validate.OK ) ) { model.login ( email, password ) ; } else { view.showErrorDialog ( result ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected int newGame ( int _difficulty ) { difficulty = _difficulty; timeElapsed = "00:00"; if ( ( ( difficulty ) < 1 ) || ( ( difficulty ) > 3 ) ) { difficulty = ( randGen.nextInt ( 3 ) ) + 1; } try { buildCompleteBoard () ; } catch ( Exception ex ) { ex.printStackTrace () ; } digHoles ( getNumberOfGivens ( difficulty ) ) ; checkBounds ( getBound ( difficulty ) ) ; markOriginals () ; return difficulty; } 
@ org.w2fc.geoportal.ws.aspect.AfterReturning ( pointcut = "execution ( * org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ) ) ", returning = "result" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint joinPoint, java.lang.Object result ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint.getArgs () [0] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject.getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE, OperationStatus.Status.SUCCESS, new java.util.Date () , requestGeoObject.getLayerId () ) ; try { repository.save ( actionStatus ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean hasFallingPieces ( final java.util.List<com.gamesbykevin.yoshi.board.piece.Piece> pieces ) { try { for ( int i = 0; i < ( pieces.size () ) ; i++ ) { final com.gamesbykevin.yoshi.board.piece.Piece piece = pieces.get ( i ) ; if ( ( ( piece.isPlaced () ) || ( piece.isDestroyed () ) ) || ( piece.isFrozen () ) ) continue; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private static java.util.Set<java.lang.String> getAffiliationsFromArgs ( java.lang.String affiliationArguments ) throws seedu.addressbook.data.exception.IllegalValueException { try { if ( affiliationArguments.isEmpty () ) { return java.util.Collections.emptySet () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } final java.util.Collection<java.lang.String> affiliationStrings = java.util.Arrays.asList ( affiliationArguments.replaceFirst ( " f/", "" ) .split ( " f/" ) ) ; return new java.util.HashSet<> ( affiliationStrings ) ; } 
public void getBalance ( org.bukkit.entity.Player player ) { try { player.sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy.format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy.getBalance ( player.getName () ) ) ) ) .replace ( ".00", "" ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence str, int offset ) { if ( ( ( str.length () ) == 0 ) || ( offset == 0 ) ) return ""; try { if ( offset > 0 ) { return str.subSequence ( ( offset - 1 ) , offset ) .toString () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ""; } 
boolean restartProcess ( net.algart.pyramid.http.JavaProcessControlWithHttpCheckingAliveStatus control, boolean skipIfAlive ) throws java.io.IOException { try { synchronized ( lock ) { if ( skipIfAlive && ( control.areAllHttpServicesAlive ( true ) ) ) { return false; } stopProcess ( control, skipIfAlive ) ; startProcess ( control, false ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private long getTimeStamp ( int i ) { table.value.Value date = null; if ( isFirstEvent ( i ) ) { date = inputData.get ( i ) .get ( datecol ) ; } else { date = inputData.get ( i ) .get ( datecol2 ) ; } try { if ( date.isDate () ) { return ( ( table.value.DateValue ) ( date ) ) .getValue () .getTime () .getTime () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new java.lang.Error ( "Not a date in the column" ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { if ( debug ) java.lang.System.out.println ( ( "Paikka 1 2 " + ( whichmark () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ChangeButton ( buttonbc ) ; buttonbc.setEnabled ( false ) ; viimeisinSiirto[1][2] = whichmark () ; ( buttoncount ) ++; } 
public void add ( int itemNumber ) { try { if ( ( itemNumber > ( ( inventory.size () ) - 1 ) ) || ( itemNumber < 0 ) ) { java.lang.System.out.println ( "INVALID INDEX...Try Again" ) ; } else { items.add ( inventory.get ( itemNumber ) ) ; java.lang.System.out.println ( ( ( inventory.get ( itemNumber ) .getName () ) + " was added to cart!" ) ) ; subTotal += items.get ( ( ( items.size () ) - 1 ) ) .getPrice () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void generateExtensionalDB ( java.lang.String path ) throws java.lang.Exception { int i = 1; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf.append ( factsFromFiles ( file, ( i++ ) ) ) ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.File ( ( path + "edb.pl" ) ) ) ; prologWriter.println ( buf ) ; try { prologWriter.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testDeleteFileButNoFileEntryExistsInDatabase () throws java.io.IOException { try { when ( fileEntryRepository.findOne ( 456L ) ) .thenReturn ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.innovateuk.ifs.commons.service.ServiceResult<org.innovateuk.ifs.file.domain.FileEntry> result = service.deleteFile ( 456L ) ; assertNotNull ( result ) ; assertTrue ( result.isFailure () ) ; assertTrue ( result.getFailure () .is ( notFoundError ( org.innovateuk.ifs.file.domain.FileEntry.class, 456L ) ) ) ; verify ( fileEntryRepository ) .findOne ( 456L ) ; } 
@ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { mDrawerLayout.closeDrawers () ; try { switch ( menuItem.getItemId () ) { case R.id.collect: openPage ( "collect", null, CoreAnim.slide ) ; break; case R.id.update: update () ; break; case R.id.clear: clear () ; break; case R.id.about: openPage ( "about", null, CoreAnim.slide ) ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void refresh ( org.eclipse.wst.sse.core.internal.provisional.IModelStateListener listener, org.eclipse.wst.xml.core.internal.provisional.document.IDOMModel model, org.jboss.tools.windup.windup.CustomRuleProvider ruleProvider ) { try { model.removeModelStateListener ( listener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } listenerMap.remove ( ruleProvider ) ; if ( ! ( treeViewer.getTree () .isDisposed () ) ) { treeViewer.refresh ( ruleProvider ) ; } } 
public void searchByPostTitle ( java.lang.String title, com.cmpe.bounswe2015group8.westory.back.Consumer<com.cmpe.bounswe2015group8.westory.model.Post[]> callback ) { try { if ( display ) progressDialog.show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } new com.cmpe.bounswe2015group8.westory.back.ServerRequests.RestAsyncTask ( callback, org.springframework.http.HttpMethod.POST ) .execute ( new com.cmpe.bounswe2015group8.westory.model.Requestable<com.cmpe.bounswe2015group8.westory.model.Post[]> ( "/api/searchByPostTitle", title, com.cmpe.bounswe2015group8.westory.model.Post[].class ) ) ; } 
void method ( java.lang.Throwable t ) { logger.info ( "My message is {}", t.getLocalizedMessage () , t ) ; logger.info ( "My {} is {}", new java.lang.Object[] { "message", t.getLocalizedMessage () , t } ) ; try { logger.info ( "My {} {} {}", new java.lang.Object[] { "message", "is", t.getLocalizedMessage () , t } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ de.craften.plugins.rpgplus.scripting.util.luaify.LuaFunction ( value = "setItem" ) public void setItem ( org.luaj.vm2.LuaValue inv, org.luaj.vm2.LuaValue slot, org.luaj.vm2.LuaTable item ) { try { inventory.setItem ( slot.checkint () , de.craften.plugins.rpgplus.scripting.util.ScriptUtil.createItemMatcher ( item ) .getItemStack () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( org.bukkit.entity.HumanEntity viewer : new java.util.ArrayList ( inventory.getViewers () ) ) { viewer.openInventory ( inventory ) ; } } 
@ java.lang.Override protected void onCreate ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; getSupportActionBar () .setTitle ( getResources () .getString ( R.string.title_quiz ) ) ; try { com.pvanshah.sjsuquizapplication.student.network.NetworkStateListener.registerNetworkState ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.pvanshah.sjsuquizapplication.firebaseutils.FirebaseConfiguration firebaseConfiguration = new com.pvanshah.sjsuquizapplication.firebaseutils.FirebaseConfiguration () ; firebaseConfiguration.configureFirebase () ; callQuizzesService () ; } 
private boolean match ( java.util.Map<java.lang.Integer, org.naturn.java8.pattern.PatternDemo.Node> nodes, java.util.List<java.lang.String[]> orgs ) { boolean result = false; try { for ( java.lang.String[] org : orgs ) { result = match ( nodes, org ) ; if ( result ) { break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void success ( final kaaes.spotify.webapi.android.models.Playlist playlist, retrofit.client.Response response ) { mPlaylist = playlist; setupDetails ( playlist ) ; java.util.List<kaaes.spotify.webapi.android.models.TrackSimple> tracks = new java.util.ArrayList<kaaes.spotify.webapi.android.models.TrackSimple> () ; try { for ( kaaes.spotify.webapi.android.models.PlaylistTrack playlistTrack : playlist.tracks.items ) { tracks.add ( playlistTrack.track ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } setupTracksRows ( tracks ) ; if ( ( playlist.images.size () ) > 0 ) { java.lang.String imageUrl = playlist.images.get ( 0 ) .url; loadDetailsRowImage ( imageUrl ) ; } } 
@ java.lang.Override protected void beforeHookedMethod ( de.robv.android.xposed.XC_MethodHook.MethodHookParam param ) throws java.lang.Throwable { android.content.BroadcastReceiver broad = ( ( android.content.BroadcastReceiver ) ( param.args[0] ) ) ; if ( broad != null ) handleBroad ( broad ) ; android.content.IntentFilter filter = ( ( android.content.IntentFilter ) ( param.args[1] ) ) ; try { if ( filter != null ) handleFilter ( filter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static util.Coords fromSGFString ( java.lang.String coords ) { try { if ( ! ( coords.matches ( "[a-s][a-s]" ) ) ) throw new java.lang.IllegalArgumentException ( ( ( "String: '" + coords ) + "' is not recognizable as SGF coordinates." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int x = ( ( coords.charAt ( 0 ) ) - 'a' ) + 1; int y = ( ( coords.charAt ( 1 ) ) - 'a' ) + 1; return util.Coords.getCoords ( x, y ) ; } 
public void removeRows ( int[] indices ) { java.util.Arrays.sort ( indices ) ; for ( int i = ( indices.length ) - 1; i >= 0; i-- ) { rows.remove ( indices[i] ) ; } try { nl.gogognome.lib.swing.AbstractListTableModel.fireTableDataChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { java.util.List<java.util.List<java.lang.Integer>> list = new Solution () .combine ( 4, 2 ) ; try { for ( int i = 0; i < ( list.size () ) ; i++ ) { for ( int k : list.get ( i ) ) { java.lang.System.out.print ( ( k + " " ) ) ; } java.lang.System.out.println () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void exitIdentifier ( @org.antlr.v4.runtime.misc.NotNull wich.parser.WichParser.IdentifierContext ctx ) { org.antlr.symtab.Symbol s = currentScope.resolve ( ctx.ID () .getText () ) ; try { if ( ( s != null ) && ( s instanceof wich.semantics.symbols.WVariableSymbol ) ) { ctx.exprType = ( ( org.antlr.symtab.TypedSymbol ) ( s ) ) .getType () ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void returnConnection ( org.glassfish.grizzly.Connection result, ru.kwanza.jeda.nio.client.ConnectionConfig config, boolean close ) { try { if ( result != null ) { ru.kwanza.jeda.nio.client.ConnectionHolder holder = leasedConnections.remove ( result ) ; if ( config.isKeepAlive () ) { if ( ( ( holder != null ) && ( result.isOpen () ) ) && ( !close ) ) { availableConnections.offer ( holder ) ; getStage () .getThreadManager () .adjustThreadCount ( getStage () , getThreadCount () ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } batchSize.incrementAndGet () ; } 
@ java.lang.Override protected java.lang.Object doInBackground ( java.lang.Object[] params ) { try { cache = com.kot32.ksimplelibrary.cache.ACache.get ( getActivity () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int t = baseAction.initLocalData () ; switch ( t ) { case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_SHOW: baseAction.onLoadingNetworkData () ; break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_DISMISS: android.os.Message message = new android.os.Message () ; message.what = 1; mHandler.sendMessage ( message ) ; baseAction.onLoadingNetworkData () ; break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.DONT_LOAD_NETWORK_DATA: break; } return null; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map_page ) ; android.location.LocationManager locationManager = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; try { if ( ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } locationManager.requestLocationUpdates ( LocationManager.GPS_PROVIDER, 0, 0, this ) ; android.content.Intent intent = getIntent () ; } 
private boolean execute_BUNDLE_CLEAR () { int bundleIndex = getBundleArg () ; if ( bundleIndex < 0 ) return false; if ( ! ( checkEOL () ) ) return false; android.os.Bundle b = com.rfo.basic.Run.theBundles.get ( bundleIndex ) ; try { b.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private double getReward ( ab.vision.GameStateExtractor.GameState state ) { try { java.lang.System.out.println ( state ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( state == ( ab.vision.GameStateExtractor.GameState.WON ) ) { ab.vision.GameStateExtractor gameStateExtractor = new ab.vision.GameStateExtractor () ; java.lang.System.out.println ( state ) ; java.awt.image.BufferedImage scoreScreenshot = clientActionRobotJava.doScreenShot () ; java.lang.System.out.println ( state ) ; double reward = gameStateExtractor.getScoreEndGame ( scoreScreenshot ) ; java.lang.System.out.println ( reward ) ; return reward; } else { return 0; } } 
public static void checkFetchItemsExist ( final java.util.List<gov.loc.repository.bagit.domain.FetchItem> items, final java.nio.file.Path bagDir ) throws gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException { try { gov.loc.repository.bagit.verify.MandatoryVerifier.logger.info ( "Checking if all [{}] items in fetch.txt exist in the [{}]", items.size () , bagDir ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( final gov.loc.repository.bagit.domain.FetchItem item : items ) { if ( ! ( java.nio.file.Files.exists ( item.path ) ) ) { throw new gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException ( ( ( "Fetch item " + item ) + " has not been fetched!" ) ) ; } } } 
public static java.lang.String getRequestIP ( javax.servlet.http.HttpServletRequest request ) { java.lang.String ipAddr; ipAddr = request.getHeader ( "X-Real-IP" ) ; if ( ( null == ipAddr ) || ( ( ipAddr.length () ) == 0 ) ) { ipAddr = request.getHeader ( "x-forwarded-for" ) ; } try { if ( ( null == ipAddr ) || ( ( ipAddr.length () ) == 0 ) ) { ipAddr = "127.0.0.1"; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ipAddr; } 
public int hash ( String key ) { int hash = 0; try { switch ( hashFunction ) { case 0: hash = additiveHash ( key ) ; break; case 1: hash = rotationalHash ( key ) ; break; default: java.lang.System.out.println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System.exit ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return hash; } 
private void ancestorPathCheck ( java.util.List<java.lang.String> ancestorPath, java.util.List<edu.unc.lib.dl.fedora.PID> pids ) { try { for ( int i = 0; i < ( ancestorPath.size () ) ; i++ ) { org.junit.Assert.assertTrue ( ancestorPath.get ( i ) .equals ( ( ( ( i + 1 ) + "," ) + ( pids.get ( i ) .getId () ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onMessage ( com.solacesystems.conn.Handle handle ) { com.solacesystems.conn.MessageSupport ms = ( ( com.solacesystems.conn.MessageSupport ) ( handle ) ) ; com.solacesystems.conn.MessageHandle msg = ms.getRxMessage () ; java.lang.String topic = msg.getDestination () .getName () ; java.nio.ByteBuffer container = handler.getBuffer () ; try { if ( container != null ) { container.clear () ; msg.getBinaryAttachment ( container ) ; container.flip () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } handler.onMessage ( topic, container ) ; } 
@ org.junit.Test public void testDefaultChangeTypeToVCSType () { try { for ( org.eclipse.jgit.diff.DiffEntry.ChangeType ct : DiffEntry.ChangeType.values () ) { if ( ( ( ct != ( DiffEntry.ChangeType.ADD ) ) && ( ct != ( DiffEntry.ChangeType.DELETE ) ) ) && ( ct != ( DiffEntry.ChangeType.MODIFY ) ) ) { assertEquals ( git.gitChangeTypeToVCSChangeType ( ct ) , VCSChangeType.UNKNOWN ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setBooleanMetadata ( java.lang.String key, boolean value ) { if ( ( ( ( sender ) == null ) || ( ( sender.getBlock () ) == null ) ) || ( ( sender.getBlock () .getType () ) != ( org.bukkit.Material.COMMAND ) ) ) { return; } try { sender.getBlock () .setMetadata ( key, new org.bukkit.metadata.FixedMetadataValue ( org.bitbucket.ucchy.undine.UndineMailer.getInstance () , value ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static cs155.core.Color3D calculateDiffuse ( cs155.core.Point3D n, cs155.core.Color3D matColor, cs155.core.Color3D lightColor, cs155.core.Point3D lightVec ) { cs155.core.Color3D localDiffuse; double diffuseIntensity = cs155.core.Light3D.diffuse ( lightVec, n ) ; try { localDiffuse = matColor.times ( lightColor ) .scale ( diffuseIntensity ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return localDiffuse; } 
public void clearCacheLocal ( uk.gov.ea.datareturns.distributedtransaction.impl.Cache cache ) { try { switch ( cache ) { case SITE_PERMIT_CACHES: siteDao.clearCaches () ; uniqueIdentifierDao.clearCaches () ; uniqueIdentifierAliasDao.clearCaches () ; search.initialize () ; uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER.info ( ( "Cleared cache group: " + cache ) ) ; break; default: uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER.error ( ( "Not implemented: " + cache ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test public void test11_AddNewHTMLFile () { org.exoplatform.selenium.TestLogger.info ( "Test 11 Add new HTML file" ) ; java.lang.String HTMLFILE_NAME = "HTMLfile" + ( getRandomNumber () ) ; java.lang.String HTMLFILE_CONTENT = "HTML file " + ( getRandomNumber () ) ; try { navToolBar.goToSiteExplorer () ; } catch ( Exception ex ) { ex.printStackTrace () ; } actBar.goToAddNewContent () ; org.exoplatform.selenium.TestLogger.info ( "Create new HTML file" ) ; cTemplate.createNewHtmlFile ( HTMLFILE_NAME, true, "", HTMLFILE_CONTENT ) ; org.exoplatform.selenium.TestLogger.info ( "Restore data" ) ; actBar.goToNodeByAddressPath ( "/" ) ; cMenu.deleteDocument ( ecms.ELEMENT_NODE_ROW_VIEW.replace ( "${nodeName}", HTMLFILE_NAME ) ) ; } 
@ java.lang.Override public com.levserj.domain.Item updateItem ( com.levserj.domain.Item item ) { try { if ( ! ( repository.exists ( item.getId () ) ) ) { com.levserj.service.mysql.MySQLItemService.LOG.error ( "Item with id: {} doesn't exist", item.getId () ) ; return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return repository.save ( item ) ; } 
private void doNext ( int requestCode, int[] grantResults ) { int count = 0; try { if ( requestCode == ( ACCESS_PERMISSION ) ) { for ( int i = 0; i < ( grantResults.length ) ; i++ ) { if ( ( grantResults[i] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) count++; } if ( count == ( grantResults.length ) ) listener.onGranted () ; else listener.onDenied () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private algo.BSTMap<K, V>.Node findMinNode ( algo.BSTMap<K, V>.Node parent ) { algo.BSTMap<K, V>.Node child = parent.left; try { if ( ( child.left ) == null ) { parent.left = null; return child; } else { return findMinNode ( child ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testProcessesInheritanceCorrectly () { org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass bean = new org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass () ; bean.id = DEFAULT_BEAN_ID; bean.name = "christoph strobl"; org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass loaded = saveAndLoad ( bean ) ; assertEquals ( bean.id, loaded.id ) ; try { assertEquals ( bean.name, loaded.name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
static org.apache.lucene.store.Directory setUpIndex ( org.apache.lucene.analysis.Analyzer analyzer, org.apache.lucene.search.similarities.Similarity bm25 ) throws java.io.IOException { main.IndexWriterConfig config = new main.IndexWriterConfig ( analyzer ) ; if ( bm25 != null ) { config.setSimilarity ( bm25 ) ; } org.apache.lucene.store.FSDirectory index = org.apache.lucene.store.FSDirectory.open ( new java.io.File ( main.Main.indexPath ) .toPath () ) ; main.IndexWriter w = new main.IndexWriter ( index, config ) ; java.io.File docDir = new java.io.File ( main.Main.docsPath ) ; main.Main.indexDocs ( w, docDir ) ; try { w.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return index; } 
private double getStepMovement ( genetics.MusicPhenotype p ) { double steps = 0; double intervalCount = 0; try { for ( java.util.ArrayList<java.lang.Integer> measure : p.melodyIntervals ) { for ( int interval : measure ) { interval = java.lang.Math.abs ( interval ) ; intervalCount++; if ( ( interval >= 1 ) && ( interval <= 2 ) ) { steps += 1; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( intervalCount == 0 ) { return 0; } return steps / intervalCount; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_dish_detail ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.content.Intent dishInent = getIntent () ; int dish_id = dishInent.getIntExtra ( "dish_id", 1 ) ; context = this; fetchDishFromServer ( dish_id ) ; getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; } 
protected void putEnumParameter ( java.lang.String name, java.lang.String description, java.util.List<java.lang.String> options, java.lang.String value, java.lang.String instructions, boolean mandatory, int order ) throws com.sixsq.slipstream.exceptions.ValidationException { S parameter = createParameter ( name, description, mandatory ) ; parameter.setEnumValues ( options ) ; try { parameter.setValue ( value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } parameter.setOrder ( order ) ; parameter.setInstructions ( instructions ) ; addParameter ( parameter, ParameterType.Enum, mandatory ) ; } 
public void doClose () throws java.lang.InterruptedException { java.awt.image.BufferedImage screen; java.util.List<java.awt.Point> clickPos; log.print ( "doClose", Log.LOGLEVEL.INFO ) ; screen = scr.getScreen () ; try { for ( ClickObject icon : clObj.closes ) { clickPos = scr.find ( screen, icon, false ) ; scr.click ( clickPos, icon ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
ru.spbau.mit.StringSetImpl.StringSetEntry removeEntry ( char letter, boolean notLastLetter ) { ( numberOfSuccessors ) --; int idx = getIndex ( letter ) ; ru.spbau.mit.StringSetImpl.StringSetEntry nextEntry = next.get ( idx ) ; try { if ( ( ( nextEntry.numberOfSuccessors ) == 1 ) && notLastLetter ) { next.set ( idx, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return nextEntry; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { try { getMenuInflater () .inflate ( R.menu.menu_photo_album, menu ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.view.MenuItem item = menu.findItem ( R.id.action_ok ) ; if ( ( okButtonDrawable ) != null ) { item.setIcon ( okButtonDrawable ) ; } else if ( ( menuText ) != null ) { item.setIcon ( new com.sangcomz.fishbun.util.TextDrawable ( getResources () , menuText, colorMenuText ) ) ; } return true; } 
@ java.lang.Override public boolean remove ( com.mnubo.platform.android.sdk.api.store.MnuboEntity entity ) { boolean success = false; try { if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity.getFile () ) ; success = file.delete () ; if ( !success ) { android.util.Log.e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG, java.lang.String.format ( "Deleting : %s has failed", fileEntity.getFile () ) ) ; } } else { android.util.Log.e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG, "MnuboFileStore can only remove MnuboFileEntity" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return success; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( this.getNavigationManager () .topFragment () ) instanceof com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this.getNavigationManager () .topFragment () ) ) .getFragCount () ; this.presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment.newInstance ( "Fragment added to the Stack", ( fragCount + 1 ) ) ) ; } else { this.presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment.newInstance ( "Fragment added to the Stack", 0 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public bcccp.tickets.adhoc.IAdhocTicket findTicketByBarcode ( java.lang.String findBarcode ) { try { for ( int i = 0; i < ( currentAdhocTickets.size () ) ; i++ ) { if ( ( currentAdhocTickets.get ( i ) .getBarcode () ) == null ? findBarcode == null : currentAdhocTickets.get ( i ) .getBarcode () .equals ( findBarcode ) ) { return currentAdhocTickets.get ( i ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public itinerary.main.State deleteTask ( itinerary.main.Command command ) { boolean isValid = isValidDeleteOp ( command ) ; itinerary.main.Task originalTask = null; try { if ( isValid ) { originalTask = listTask.remove ( ( ( command.getTask () .getLineNumber () ) - 1 ) ) ; updateLineNum () ; itinerary.main.JsonIOHandler.writeJSONList ( currFile, listTask ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new itinerary.main.State ( command, new itinerary.main.Command ( originalTask, CommandType.ADD, null ) , getAllTasks () , isValid ) ; } 
static void title_change ( java.lang.String title, int id ) { try { if ( org.embedded.browser.Chromium.chmap.containsKey ( id ) ) org.embedded.browser.Chromium.chmap.get ( id ) .loaded = true; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( title.equals ( "" ) ) return; if ( org.embedded.browser.Chromium.chmap.containsKey ( id ) ) org.embedded.browser.Chromium.chmap.get ( id ) .title_change ( title ) ; } 
public double calculateIntegral () { double temp = calculateIntegralAtIteration () ; double diff = 0.0; try { do { double integralValue = calculateIntegralAtIteration () ; diff = java.lang.Math.abs ( ( integralValue - temp ) ) ; temp = integralValue; } while ( diff > 1.0E-8 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return temp; } 
@ com.squareup.otto.Subscribe public void searchForVenues ( com.android.test.otto.VenueSearchEvent event ) { com.android.test.qachee.QacheeData data = ( ( com.android.test.qachee.QacheeData ) ( com.qachee.QacheeManager.getInstance () .get ( event.place, true ) ) ) ; try { if ( data == null ) { asyncTask = new com.android.test.task.VenueBackgroundTask ( event.place, gpsTracker.getLocation () ) ; asyncTask.execute () ; } else { ottoBus.post ( new com.android.test.otto.VenueResultEvent ( data.venues, event.place, gpsTracker.getLocation () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String qnameFor ( java.lang.String uri ) { int split = org.apache.jena.rdf.model.impl.Util.splitNamespaceXML ( uri ) ; java.lang.String ns = uri.substring ( 0, split ) ; java.lang.String local = uri.substring ( split ) ; try { if ( local.equals ( "" ) ) return null; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String prefix = getNsURIPrefix ( ns ) ; return prefix == null ? null : ( prefix + ":" ) + local; } 
private pcbuilder.controllers.Component findComponent ( pcbuilder.controllers.ProductData productData ) { pcbuilder.controllers.Component component = componentRepository.findByManufacturerPartNumber ( productData.getMpn () ) ; try { if ( ( ( component == null ) && ( ( productData.getEan () ) != null ) ) && ( ! ( productData.getEan () .equals ( "9999999999999" ) ) ) ) { component = componentRepository.findByEuropeanArticleNumber ( productData.getEan () ) .get ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return component; } 
public void lernen () { java.lang.String tf; tf = letter.getText () .toLowerCase () ; for ( int w = 0; w < 26; w++ ) { if ( tf.equals ( ( "" + ( alphabet[w] ) ) ) ) { alpha[w] = ja; } } try { ann.backpropagate ( new com.github.jannled.lib.math.Matrix ( feld, 1, feld.length ) , new com.github.jannled.lib.math.Matrix ( alpha, 1, alpha.length ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected boolean isIE7 ( java.lang.String userAgent ) { try { if ( ( userAgent != null ) && ( ! ( userAgent.contains ( "; Trident/" ) ) ) ) { if ( ( ( userAgent.contains ( "; MSIE 5" ) ) || ( userAgent.contains ( "; MSIE 6" ) ) ) || ( userAgent.contains ( "; MSIE 7" ) ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) return true; if ( obj == null ) return false; try { if ( ( getClass () ) != ( obj.getClass () ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } org.opennms.netmgt.poller.client.rpc.PollerResponseDTO other = ( ( org.opennms.netmgt.poller.client.rpc.PollerResponseDTO ) ( obj ) ) ; return java.util.Objects.equals ( this.pollStatus, other.pollStatus ) ; } 
private java.util.List<org.smartdata.common.actions.ActionInfo> getActionInfoFromCommand ( long cid ) throws java.io.IOException { java.util.ArrayList<org.smartdata.common.actions.ActionInfo> actionInfos = new java.util.ArrayList<> () ; org.smartdata.server.command.Command cmd = commandPool.getCommand ( cid ) ; if ( cmd == null ) { return actionInfos; } try { for ( org.smartdata.actions.SmartAction smartAction : cmd.getActions () ) { actionInfos.add ( createActionInfoFromAction ( smartAction, cid ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return actionInfos; } 
public java.lang.String toString () { java.lang.String retString = ""; int i = 1; try { for ( Destination d : this ) { retString += ( ( ( "" + i ) + ". " ) + ( d.toString () ) ) + "\n"; i++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return retString; } 
public void setObject ( java.sql.CallableStatement statement, com.ctrip.platform.dal.dao.StatementParameter parameter ) throws java.sql.SQLException { try { if ( ( ( parameter.getValue () ) != null ) && ( ( parameter.getSqlType () ) == ( com.ctrip.platform.dal.common.enums.DatabaseCategory.SQL_SERVER_TYPE_TVP ) ) ) { com.microsoft.sqlserver.jdbc.SQLServerCallableStatement sqlsvrStatement = ( ( com.microsoft.sqlserver.jdbc.SQLServerCallableStatement ) ( statement ) ) ; sqlsvrStatement.setStructured ( parameter.getIndex () , parameter.getName () , ( ( com.microsoft.sqlserver.jdbc.SQLServerDataTable ) ( parameter.getValue () ) ) ) ; } else { super.setObject ( statement, parameter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public value.Value add ( value.Value other ) { try { if ( ( ! ( isSet () ) ) || ( ! ( other.isSet () ) ) ) { return new value.IntegerValue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new value.IntegerValue ( ( ( value ) + ( ( ( value.IntegerValue ) ( other ) ) .getValue () ) ) ) ; } 
private javax.validation.ConstraintViolation<?>[] validateNotSamePort ( final java.lang.String httpPortPath, final java.lang.Integer httpPort, final java.lang.String httpsPortPath, final java.lang.Integer httpsPort ) { try { if ( ( httpPort != null ) && ( httpPort.equals ( httpsPort ) ) ) { return new javax.validation.ConstraintViolation<?>[] { constraintViolationFactory.createViolation ( httpPortPath, "HTTP and HTTPs ports must be different" ) , constraintViolationFactory.createViolation ( httpsPortPath, "HTTP and HTTPs ports must be different" ) }; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new javax.validation.ConstraintViolation<?>[] {}; } 
private void displayListView () { java.util.List<com.util.Employee> EmployeeList; try { EmployeeList = getInfo.currentPojo.getAllEmployees () ; } catch ( Exception ex ) { ex.printStackTrace () ; } dataAdapter = new com.service.SendMSM.MyCustomAdapter ( this, R.layout.employee_info, EmployeeList ) ; android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.listView1 ) ) ) ; listView.setAdapter ( dataAdapter ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_play_list ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; try { new com.arunsudhir.radiomalayalam.io.PlaylistReaderAsyncTask ( new com.arunsudhir.radiomalayalam.io.PlaylistProgressExecutor ( this ) ) .execute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int getPlayer1Score () { int score = 0; try { for ( int i = ( this.glasses.length ) - 1; i >= ( ( this.glasses.length ) / 2 ) ; i-- ) { if ( this.glasses[i].isActive () ) break; else score++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return score; } 
@ java.lang.Override public java.lang.Boolean delete ( int id ) throws com.nextbook.exceptions.AuthRequiredException, com.nextbook.exceptions.ForbiddenException, com.nextbook.exceptions.NoSuchEntityException { com.nextbook.domain.entity.comment.CommentEntity commentEntity = commentDao.getNotNull ( id ) ; try { commentEntity.setStatus ( CommentStatusesEnum.DELETED ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( sessionUtils.allowedForUserWithRole ( RolesEnum.admin ) ) || ( commentAvailabilityService.isCommentAuthorSession ( commentEntity ) ) ) { return ( commentDao.update ( commentEntity ) .getStatus () .compareTo ( CommentStatusesEnum.DELETED ) ) == 0; } return false; } 
@ java.lang.Override public boolean apply ( final org.pentaho.agilebi.modeler.ModelerWorkspace workspace, final java.lang.String field, final org.pentaho.metastore.api.IMetaStore metaStore ) throws org.pentaho.agilebi.modeler.ModelerException { org.pentaho.agilebi.modeler.nodes.LevelMetaData existingLevel = locateLevelFromFormula ( workspace, field ) ; boolean isApplied = false; try { if ( ( existingLevel != null ) && ( workspace != null ) ) { removeLevel ( workspace, existingLevel ) ; workspace.getWorkspaceHelper () .populateDomain ( workspace ) ; isApplied = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return isApplied; } 
@ java.lang.Override public boolean isMogelijk ( io.gameoftrades.model.markt.actie.HandelsPositie positie ) { try { if ( ! ( handel.getStad () .equals ( positie.getStad () ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( positie.isActieBeschikbaar ( 1 ) ) ) { return false; } java.lang.Integer value = positie.getVoorraad () .get ( handel.getHandelswaar () ) ; return ( value != null ) && ( value > 0 ) ; } 
private void populateUi () { final android.view.View rootView = getWindow () .getDecorView () ; rootView.setKeepScreenOn ( settings.keepScreenOn () ) ; rootView.setBackgroundColor ( settings.getBackgroundColor () ) ; currentTranslation = bibleReadingPresenter.loadCurrentTranslation () ; try { currentBook = bibleReadingPresenter.loadCurrentBook () ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentChapter = bibleReadingPresenter.loadCurrentChapter () ; } 
@ org.junit.Test public void rowAndColumnTest () { int rowCount = categoryTableModel.getRowCount () ; int columnCount = categoryTableModel.getColumnCount () ; try { for ( int i = 0; i < ( rowCount - 1 ) ; i++ ) { for ( int j = 0; j < ( columnCount - 1 ) ; j++ ) { org.junit.Assert.assertNotNull ( categoryTableModel.getValueAt ( i, j ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View v = inflater.inflate ( R.layout.fragment_wanderers, container, false ) ; mContainer = v.findViewById ( R.id.list_container ) ; mProgress = v.findViewById ( R.id.list_progress ) ; try { com.codeground.wanderlustbulgaria.Fragments.WanderersFragment.user = com.parse.ParseUser.getCurrentUser () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return v; } 
public void run () { java.lang.Integer bayValue = ( ( phidgetNumber ) * 8 ) + ( sensorIndex ) ; java.lang.Integer updatedValue = 0; if ( ( rack.bays ) != null ) { updatedValue = ( sensorVal ) + ( rack.bays[bayValue].calibrationOffset ) ; } java.lang.Boolean refreshScreen = testRun.bayItems[bayValue].updateValue ( updatedValue, testRun.currentTestStep, context ) ; aa.notifyDataSetChanged () ; try { if ( refreshScreen ) { updateCounts () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.io.InputStream exportDatatypeLibraryDocumentAsHtml ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.DatatypeLibraryDocument datatypeLibraryDocument, gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportConfig exportConfig, gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportFontConfig exportFontConfig ) { try { if ( datatypeLibraryDocument != null ) { gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.util.ExportParameters exportParameters = exportUtil.setExportParameters ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.DOCUMENT_TITLE_DATATYPE_LIBRARY, true, false, gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.EXPORT_FORMAT_HTML, exportConfig, exportFontConfig ) ; return exportUtil.exportAsHtmlFromXsl ( serializationService.serializeDatatypeLibrary ( datatypeLibraryDocument, exportConfig ) .toXML () , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.GLOBAL_STYLESHEET, exportParameters, datatypeLibraryDocument.getMetaData () ) ; } else { return new org.apache.commons.io.input.NullInputStream ( 1L ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View rootView = null; try { if ( ( customLayout ) == 0 ) { rootView = generateCaptchaView ( inflater, container, savedInstanceState ) ; android.widget.TextView captchaPrompt = ( ( android.widget.TextView ) ( rootView.findViewById ( R.id.txt_captcha_prompt ) ) ) ; if ( ( ( customText ) != null ) && ( captchaPrompt != null ) ) captchaPrompt.setText ( customText ) ; } else { rootView = inflater.inflate ( customLayout, container, false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return rootView; } 
@ java.lang.Override public void onTaskRemoved ( android.content.Intent rootIntent ) { log.debug ( "Task has been removed" ) ; if ( ( ( config ) != null ) && ( config.getStopOnTerminate () ) ) { log.info ( "Stopping self" ) ; stopSelf () ; } else { log.info ( "Continue running in background" ) ; } try { super.onTaskRemoved ( rootIntent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { if ( ( args.length ) != 3 ) { java.lang.System.out.println ( "Usage: java RidgeRegression <dataDir> <lambda> <power>" ) ; java.lang.System.out.println ( "Example: java RidgeRegression ../../data/sinData_Train.csv 0.2 5" ) ; java.lang.System.exit ( 0 ) ; } try { RidgeRegression.init ( args ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } FileParser.readData ( RidgeRegression.fileDir, ",", RidgeRegression.allData, RidgeRegression.allLabels, RidgeRegression.POWER ) ; RidgeRegression.run () ; } 
private void resetPianos ( float width, float height ) { pianoA.setSize ( width, height ) ; pianoB.setSize ( width, height ) ; try { pianoAB.setSize ( width, height ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } float cenx = getCenx () ; float ceny = getCeny () ; pianoA.setCenter ( cenx, ( ceny - height ) ) ; pianoB.setCenter ( cenx, ( ceny + height ) ) ; pianoAB.setCenter ( cenx, ceny ) ; } 
private void setEndDate ( int newYear, int newMonth ) { calendar = java.util.Calendar.getInstance () ; calendar.set ( newYear, ( newMonth - 1 ) , calendar.getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar.getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd", java.util.Locale.FRANCE ) ; try { endDate = DATE_FORMAT.format ( date ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int ev3 ( int p ) { position = p; java.lang.System.out.println ( "There is a white rabbit in the road, it looks rather fluffy and cute" ) ; java.lang.System.out.println ( " ( 1 ) Reach out and pet it " ) ; java.lang.System.out.println ( " ( 2 ) Ignore it and move on " ) ; choice = u.nextInt () ; try { switch ( choice ) { case 1: java.lang.System.out.println ( " IT IS THE RABBIT!!!" ) ; java.lang.System.out.println ( "You died horribly, it was gruesome" ) ; position = -1; break; case 2: java.lang.System.out.println ( "Probably a good idea, it's better to avoid cuteness" ) ; position += speed; break; default: java.lang.System.out.println ( "No pity is shown to those who cannot follow the rules of the game. Die, you fiend." ) ; position = -1; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return position; } 
public static com.eveningoutpost.dexdrip.Models.TransmitterData create ( int raw_data, int sensor_battery_level, long timestamp ) { com.eveningoutpost.dexdrip.Models.TransmitterData.randomDelay ( 50, 200 ) ; if ( ! ( com.eveningoutpost.dexdrip.Models.TransmitterData.is_new ( timestamp ) ) ) { return null; } com.eveningoutpost.dexdrip.Models.TransmitterData transmitterData = new com.eveningoutpost.dexdrip.Models.TransmitterData () ; transmitterData.sensor_battery_level = sensor_battery_level; transmitterData.raw_data = raw_data; transmitterData.timestamp = timestamp; transmitterData.uuid = java.util.UUID.randomUUID () .toString () ; try { transmitterData.save () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return transmitterData; } 
private java.util.HashMap<java.lang.String, codingcareers.webapp.client.PageComponents.ProgressPanel> constructProgressBars () { java.util.HashMap<java.lang.String, codingcareers.webapp.client.PageComponents.ProgressPanel> progressBarCollection = new java.util.HashMap<> () ; try { for ( java.lang.String task : codingcareers.webapp.client.Constants.TASK_SUBJECTS ) { progressBarCollection.put ( task, new codingcareers.webapp.client.PageComponents.ProgressPanel ( task, getTaskCompleteness ( task ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return progressBarCollection; } 
private void makeCollector ( eu.etaxonomy.cdm.io.salvador.SalvadorSpecimenImportState state, int collectorNo, eu.etaxonomy.cdm.model.agent.Team team, java.util.Map<java.lang.String, java.lang.String> record, int row ) { java.lang.String str = record.get ( ( "COLLECTOR_" + collectorNo ) ) ; try { if ( str == null ) { return; } else { parsePerson ( state, str, team, row ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return; } 
private void addNewLogicalTile () { int[][] emptyTiles = getEmptyTiles () ; try { if ( ( emptyTiles.length ) > 0 ) { java.util.Random rand = new java.util.Random () ; int randNum = rand.nextInt ( emptyTiles.length ) ; int row = emptyTiles[randNum][0]; int column = emptyTiles[randNum][1]; Model.board[row][column] = newValue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void doGet ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response ) throws java.io.IOException, javax.servlet.ServletException { java.util.List<fr.epf.models.Promotion> promotions = promoDAO.findAll () ; request.setAttribute ( "promotions", promotions ) ; try { request.getRequestDispatcher ( "/WEB-INF/add_member.jsp" ) .forward ( request, response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void initVariables ( int mapNumber, java.lang.String ballColor, boolean gameStarted ) { inGame = gameStarted; paused = false; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10, this ) ; timer.start () ; watch = new StopWatch () ; try { if ( inGame ) { watch.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onShare () { java.util.List<com.mauriciotogneri.fileexplorer.utils.FileInfo> selectedItems = adapter.selectedItems ( true ) ; try { if ( ( selectedItems.size () ) == 1 ) { shareSingle ( selectedItems.get ( 0 ) ) ; } else if ( ! ( selectedItems.isEmpty () ) ) { shareMultiple ( selectedItems ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.ArrayList<mx.evin.apps.words.model.entities.parse.Term> magicFilter () { try { quickFilter () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( results.size () ) < 1 ) firstLettersFilter ( 3 ) ; if ( ( results.size () ) < 1 ) wordByWordFilter () ; if ( ( results.size () ) < 1 ) firstLettersFilter ( 2 ) ; if ( ( results.size () ) < 1 ) firstLettersFilter ( 1 ) ; return results; } 
public static void main ( java.lang.String[] args ) { if ( ( args.length ) != 1 ) { java.lang.System.out.println ( "Please enter a filename! : ) " ) ; java.lang.System.out.println ( "Usage: java Tempo <filename>" ) ; java.lang.System.exit ( 0 ) ; } Tempo.RequestHandler run = new Tempo.RequestHandler ( args[0] ) ; Tempo.ArgParser parser = new Tempo.ArgParser () ; try { java.lang.System.out.println ( Tempo.Tempo.WELCOME_MESSAGE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Tempo.Tempo.listenForInput ( run, parser ) ; } 
private static int getThisPieceSize ( PeerFile file, int pieceNum ) { try { if ( ( ( pieceNum + 1 ) * ( Peer.PIECE_SIZE ) ) > ( file.getSize () ) ) { return ( ( pieceNum + 1 ) * ( Peer.PIECE_SIZE ) ) - ( file.getSize () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return Peer.PIECE_SIZE; } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { selectS.setLocation ( ( ( int ) ( event.getX () ) ) , ( ( int ) ( event.getY () ) ) ) ; java.lang.System.out.println ( ( "pr" + ( selectS ) ) ) ; try { if ( isFuncSelect ) { selecting = true; java.lang.System.out.println ( "h" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<java.lang.String> asRequestParameter () { try { if ( ! ( de.interseroh.report.model.MultiSelectParameter.isUnset () ) ) { java.util.List<java.lang.String> params = new java.util.ArrayList<> ( 4 ) ; for ( T value : getValue () ) { params.add ( ( ( ( "params[" + ( de.interseroh.report.model.MultiSelectParameter.getName () ) ) + "].value=" ) + ( de.interseroh.report.model.MultiSelectParameter.urlEncode ( asString ( value ) ) ) ) ) ; } return params; } else { return super.asRequestParameter () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateCurrentTree () { java.lang.System.out.println ( "updating current tree" ) ; try { if ( ( ( mouseX ) >= ( FIRST_THIRD ) ) && ( ( mouseX ) < ( SECOND_THIRD ) ) ) currentTree = getInstanceTree ( tree1 ) ; else if ( ( ( mouseX ) >= ( SECOND_THIRD ) ) && ( ( mouseX ) < ( LAST_THIRD ) ) ) currentTree = getInstanceTree ( tree2 ) ; else { currentTree = getInstanceTree ( tree3 ) ; java.lang.System.out.println ( "done updating current tree" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public jonasandtim.energietagebuch.Data.DataInterfaces.KBRDataHasChangedMessage update ( jonasandtim.energietagebuch.Data.DataElements.XDataElement oldElement, jonasandtim.energietagebuch.Data.DataElements.XDataElement newElement ) { jonasandtim.energietagebuch.Data.DataInterfaces.KBRDataHasChangedMessage msg = null; try { if ( validateEntry ( newElement ) ) { msg = mDataTree.updateElementGetMessage ( oldElement, newElement ) ; if ( msg != null ) msg.putProperty ( KBRDataHasChangedMessage.PROPERTIES_METERID, mMeter.getUId () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return msg; } 
@ org.junit.Test public void givenAnnotatedSrcFields_whenMapsToRightDestField_thenCorrect () { com.baeldung.dozer.Person2 englishAppPerson = new com.baeldung.dozer.Person2 ( "Jean-Claude Van Damme", "JCVD", 55 ) ; com.baeldung.dozer.Personne2 frenchAppPerson = mapper.map ( englishAppPerson, com.baeldung.dozer.Personne2.class ) ; assertEquals ( frenchAppPerson.getNom () , englishAppPerson.getName () ) ; try { assertEquals ( frenchAppPerson.getSurnom () , englishAppPerson.getNickname () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( frenchAppPerson.getAge () , englishAppPerson.getAge () ) ; } 
public void killChain ( int index, tsumegoai.Stone color ) { if ( ( index < 0 ) || ( ( searchSpace[index] ) == null ) ) return; try { if ( ( searchSpace[index] ) == color ) { searchSpace[index] = null; updateZhash ( tsumegoai.Goban.searchSpacePositions[index], color ) ; for ( int i = 0; i < 4; i++ ) { killChain ( tsumegoai.Goban.searchSpaceAdjacentIndices[ ( ( 4 * index ) + i ) ], color ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int compare ( com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p1, com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p2 ) { try { if ( ( p1.getScore () ) < ( p2.getScore () ) ) { return 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( p1.getScore () ) > ( p2.getScore () ) ) { return -1; } return p1.getName () .compareToIgnoreCase ( p2.getName () ) ; } 
@ java.lang.Override public void itemStateChanged ( java.awt.event.ItemEvent e ) { try { if ( ( e.getStateChange () ) == ( java.awt.event.ItemEvent.SELECTED ) ) { net.ntg.ftl.ui.TogglePanel.log.info ( ( ( ( "comboBox " + valueName ) + ": " ) + ( colorComboBox.getSelectedIndex () ) ) ) ; net.ntg.ftl.ui.TogglePanel.prefs.putInt ( ( valueName + ( net.ntg.ftl.ui.TogglePanel.COLOR ) ) , colorComboBox.getSelectedIndex () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean scanFieldsRelation ( java.lang.Class<?> klass, final net.imadz.lifecycle.meta.type.RelationConstraintMetadata relation ) { try { for ( java.lang.Class<?> c = klass; ( null != c ) && ( ( java.lang.Object.class ) != c ) ; c = c.getSuperclass () ) { for ( java.lang.reflect.Field field : c.getDeclaredFields () ) { if ( hasRelationOnField ( relation, field ) ) return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void init ( org.shaolin.bmdp.workflow.internal.cache.FlowObject flowInfo ) throws org.shaolin.bmdp.workflow.exception.ConfigException { this.flowInfo = flowInfo; try { this.flowInfo.parse () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( this.flowInfo.getSessionService () ) != null ) { this.sessionService = ( ( org.shaolin.bmdp.workflow.spi.SessionService ) ( org.shaolin.bmdp.runtime.AppContext.get () .getService ( this.flowInfo.getSessionService () ) ) ) ; if ( ( this.sessionService ) == null ) { this.sessionService = new org.shaolin.bmdp.workflow.internal.DefaultFlowSessionService () ; } } } 
private void initializePurchases () { try { mHelper.startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result.isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper.queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean attackEntity ( org.bukkit.entity.LivingEntity target, org.bukkit.entity.Player attacker, double damage ) { org.bukkit.event.entity.EntityDamageByEntityEvent damageEvent = new org.bukkit.event.entity.EntityDamageByEntityEvent ( attacker, target, org.bukkit.event.entity.EntityDamageEvent.DamageCause.ENTITY_ATTACK, damage ) ; org.bukkit.Bukkit.getPluginManager () .callEvent ( damageEvent ) ; try { if ( damage == 0 ) { return ! ( damageEvent.isCancelled () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( damageEvent.isCancelled () ) ) { target.damage ( damage ) ; return true; } return false; } 
@ java.lang.Override public org.openflexo.foundation.ontology.IFlexoOntologyClass getOntologyClass () { if ( ( getAssignedFlexoProperty () ) != null ) { return getAssignedFlexoProperty () .getOntologicType () ; } try { if ( FlexoOntologyVirtualModelNature.INSTANCE.hasNature ( org.openflexo.foundation.ontology.fml.editionaction.AddIndividual.AddIndividualImpl.getOwningVirtualModel () ) ) { return org.openflexo.foundation.ontology.nature.FlexoOntologyVirtualModelNature.getOntologyClass ( ontologyClassURI, org.openflexo.foundation.ontology.fml.editionaction.AddIndividual.AddIndividualImpl.getOwningVirtualModel () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
protected java.lang.String getGroupRedirect ( com.liferay.portal.theme.ThemeDisplay themeDisplay, long groupId ) throws java.lang.Exception { java.util.List<com.liferay.portal.model.Layout> layouts = com.liferay.portal.service.LayoutLocalServiceUtil.getLayouts ( groupId, false, LayoutConstants.DEFAULT_PARENT_LAYOUT_ID, false, 0, 1 ) ; try { if ( ( layouts.size () ) > 0 ) { com.liferay.portal.model.Layout layout = layouts.get ( 0 ) ; return com.liferay.portal.util.PortalUtil.getLayoutURL ( layout, themeDisplay ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void setEnabled ( boolean state ) { this.state = state; try { if ( state == false ) { oscP5.OscMessage myMessage = new oscP5.OscMessage ( "/control/joystick/state" ) ; myMessage.add ( 0.0F ) ; myMessage.add ( 0.0F ) ; myMessage.add ( 0.0F ) ; myMessage.add ( 0.0F ) ; myMessage.add ( 0.0F ) ; myMessage.add ( 0.0F ) ; oscP5.send ( myMessage, myRemoteLocation ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test public void testLinkListSequence1 () { com.orientechnologies.orient.core.sql.query.OSQLSynchQuery sql = new com.orientechnologies.orient.core.sql.query.OSQLSynchQuery ( "select expand ( children.children.children ) from LinkListSequence where name = 'root'" ) ; java.util.List<com.orientechnologies.orient.core.record.impl.ODocument> results = db.query ( sql ) ; try { org.testng.Assert.assertEquals ( results.size () , 4 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.orientechnologies.orient.core.record.impl.ODocument result : results ) { java.lang.String value = result.field ( "name" ) ; org.testng.Assert.assertEquals ( value.length () , 5 ) ; } } 
@ java.lang.Override public void onSuccess ( java.lang.String response ) { com.google.gson.Gson g = new com.google.gson.GsonBuilder () .registerTypeAdapter ( org.apereo.models.Config.class, new org.apereo.deserializers.ConfigDeserializer () ) .create () ; org.apereo.models.Config config = g.fromJson ( response, org.apereo.models.Config.class ) ; try { configManager.setConfig ( config ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( config.isUpgradeRequired () ) { showErrorDialog ( AppConstants.UPGRADE_REQUIRED ) ; } else if ( config.isUpgradeRecommended () ) { showErrorDialog ( AppConstants.UPGRADE_RECOMMENDED ) ; } else { getAccountFeed () ; } } 
public static void addKeyText ( final org.eclipse.swt.widgets.MenuItem mntm, final java.lang.String text, final org.nschmidt.ldparteditor.enums.TextTask t ) { mntm.setText ( ( ( text + "\t" ) + ( org.nschmidt.ldparteditor.state.KeyStateManager.textTaskKeyMap.get ( t ) ) ) ) ; try { mntm.addArmListener ( new org.eclipse.swt.events.ArmListener () { @java.lang.Override public void widgetArmed ( org.eclipse.swt.events.ArmEvent e ) { mntm.setText ( ( ( text + "\t" ) + ( org.nschmidt.ldparteditor.state.KeyStateManager.textTaskKeyMap.get ( t ) ) ) ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void execute ( models.assetOwnership.GameMap map, models.playerAsset.Assets.Player player ) throws models.ctrlCommand.CommandNotConfiguredException { try { if ( isConfigured ) { player.accept ( new models.visitor.ArmyCreationVisitor ( map, player, RPLocation, units ) ) ; } else { throw new models.ctrlCommand.CommandNotConfiguredException ( ( ( "[" + ( this ) ) + "] is not configured." ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean toggleRecording () { try { if ( ( state ) == ( piano.State.isrecording ) ) { state = piano.State.isplaying; return false; } else if ( ( state ) == ( piano.State.isplaying ) ) { if ( ! ( listOfNote.isEmpty () ) ) { listOfNote.clear () ; } state = piano.State.isrecording; return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { java.awt.Dimension screen = java.awt.Toolkit.getDefaultToolkit () .getScreenSize () ; java.awt.Dimension window = getSize () ; int iCenterX = ( screen.width ) / 2; int iCenterY = ( screen.height ) / 2; try { setLocation ( ( iCenterX - ( ( window.width ) / 2 ) ) , ( iCenterY - ( ( window.height ) / 2 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setExtendedState ( javax.swing.JFrame.MAXIMIZED_BOTH ) ; } 
private void setupBoard () { try { for ( int yRow = 1; yRow <= ( length ) ; ++yRow ) { for ( int xCol = 1; xCol <= ( length ) ; ++xCol ) { org.javatuples.Pair<java.lang.Integer, java.lang.Integer> pair = org.javatuples.Pair.with ( xCol, yRow ) ; Tile tile = new Tile ( this, pair ) ; add ( tile ) ; slaves.add ( tile ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setToolbar ( android.support.v7.widget.Toolbar toolbar, java.lang.String title ) { try { if ( toolbar != null ) { setSupportActionBar ( toolbar ) ; if ( ( getSupportActionBar () ) != null ) { getSupportActionBar () .setHomeAsUpIndicator ( android.support.v4.content.ContextCompat.getDrawable ( getApplicationContext () , R.drawable.icon_arrow_back ) ) ; getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; } } else { android.util.Log.d ( com.geekhub.choosehelper.screens.activities.ProfileActivity.TAG, "Can`t setup toolbar: Toolbar is null" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( e.getActionCommand () .equals ( "errors" ) ) { chatty.gui.GuiUtil.showNonModalMessage ( getInvoker () , "Errors", errorsInfo, javax.swing.JOptionPane.WARNING_MESSAGE, true ) ; } try { if ( e instanceof chatty.gui.components.menus.CommandActionEvent ) { chatty.util.commands.CustomCommand command = ( ( chatty.gui.components.menus.CommandActionEvent ) ( e ) ) .getCommand () ; chatty.gui.components.settings.CommandSettings.showCommandInfoPopup ( getInvoker () , command ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testCountNumbers () { int result; test.TestObject testObject; testObject = new test.TestObject ( testnumbers ) ; try { result = testObject.run ( int.class, "countNumbers", 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( sheet3.a_tuple.NaturalNumberTupleTest.standardMessage ( "countNumbers ( 1 ) ", testnumbers ) , 1, result ) ; testObject = new test.TestObject ( testnumbers2 ) ; result = testObject.run ( int.class, "countNumbers", 490 ) ; assertEquals ( sheet3.a_tuple.NaturalNumberTupleTest.standardMessage ( "countNumbers ( 490 ) ", testnumbers2 ) , 3, result ) ; } 
private void registerSuperTypes ( java.lang.Class type ) { java.lang.Class<?> supertype = type.getSuperclass () ; try { while ( ( type != null ) && ( supertype != ( java.lang.Object.class ) ) ) { if ( types.containsKey ( supertype ) ) { throw new java.lang.RuntimeException ( ( "Ambigious Puppet for " + supertype ) ) ; } types.put ( supertype, type ) ; type = ( ( type.getSuperclass () ) == type ) ? null : type.getSuperclass () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public V put ( K key, V value ) { V val = buckets.get ( ( ( java.lang.Math.abs ( key.hashCode () ) ) % ( bucketCount ) ) ) .add ( key, value ) ; try { if ( toReorganize ) { reorganize () ; toReorganize = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return val; } 
private void setUserSessionInfo ( java.lang.String response ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; com.mediamath.terminalone.models.T1User resp; java.lang.reflect.Type responseTypeInfo = new com.google.gson.reflect.TypeToken<com.mediamath.terminalone.models.T1User> () { }.getType () ; resp = gson.fromJson ( response, responseTypeInfo ) ; try { this.setUser ( resp ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String kursWahlspeichern_2 () { java.lang.String posId = getRequestParameter ( "kursId" ) ; try { for ( fachklassen.Kurs k : alleKurse ) { if ( ( k.getKursId () ) == ( java.lang.Long.parseLong ( posId ) ) ) { auslandskurs = k; } } } catch ( Exception ex ) { ex.printStackTrace () ; } learningAgreement.getLearningAgreementPositionen () .add ( new fachklassen.LearningAgreementPosition ( inlandskurs, auslandskurs, learningAgreement ) ) ; return "learningAgreementBearbeiten"; } 
@ org.springframework.web.bind.annotation.ResponseBody @org.springframework.web.bind.annotation.RequestMapping ( value = "/heartBeat", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public model.BaseStatus receiveHeartBeat ( javax.servlet.http.HttpServletRequest request ) { java.lang.String ip = getRemoteHost ( request ) ; logger.info ( ( "heartbeat from " + ip ) ) ; if ( ! ( db.WorkerCache.contains ( ip ) ) ) { sync.FilterConfigSync.syncFilterConfigsToWorker ( ip ) ; } try { db.WorkerCache.putIp ( ip ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return model.BaseStatus.buildSuccessBaseStatus () ; } 
public static int getValidThreshold ( boolean isSelected, java.lang.String text ) { int threshold = -1; try { if ( isSelected ) { java.lang.String thresholdText = text; if ( ( ! ( thresholdText.isEmpty () ) ) && ( java.util.regex.Pattern.matches ( "[0-9]+", thresholdText ) ) ) { threshold = java.lang.Integer.parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities.notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return threshold; } 
private void RenderListView ( java.util.List<com.amelendez.lgo.storage.dao.Languo> languos ) { if ( languos == null ) { languos = new java.util.ArrayList<> () ; } adapter = new com.amelendez.lgo.adapters.LanguoListAdapter ( this, languos ) ; android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.main_listView ) ) ) ; try { if ( listView != null ) { listView.setAdapter ( adapter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_question_review_fragment ) ; org.iliat.gmat.activity.QuestionReviewActivity.PlaceholderFragment.context = this; mSectionsPagerAdapter = new org.iliat.gmat.activity.QuestionReviewActivity.SectionsPagerAdapter ( getSupportFragmentManager () , mQuestionPack ) ; mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.container ) ) ) ; mViewPager.setAdapter ( mSectionsPagerAdapter ) ; } 
public static java.lang.String getPrimaryFreeGroupName ( java.lang.String groupName ) { if ( groupName == null ) { return null; } int index = groupName.indexOf ( CarbonConstants.DOMAIN_SEPARATOR ) ; try { if ( index > 0 ) { java.lang.String domain = groupName.substring ( 0, index ) ; if ( UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME.equals ( domain ) ) { return groupName.substring ( ( index + 1 ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return groupName; } 
public void setEnabled ( java.lang.Boolean enabled ) { amxBootDelay = 0; monitoringDelay = ( amxBootDelay ) + 5; try { if ( ( ! ( this.enabled ) ) && enabled ) { this.enabled = enabled; bootstrapMonitoringService () ; } else if ( ( this.enabled ) && ( !enabled ) ) { this.enabled = enabled; shutdownMonitoringService () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void restoreOrCreatePresenter ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { try { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState.getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity.getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( presenter ) == null ) { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity.addPresenter ( presenter ) ; } } 
private void connectTwillio () { try { if ( ! ( twillioPhone.isConnected () ) ) { java.util.Map<java.lang.String, java.lang.String> params = new java.util.HashMap<java.lang.String, java.lang.String> () ; final java.lang.String name_room = "name_room"; final java.lang.String token = "token"; java.lang.String token_local = com.novahub.voipcall.sharepreferences.SharePreferences.getData ( getApplicationContext () , SharePreferences.TOKEN ) ; params.put ( name_room, Asset.nameOfConferenceRoom ) ; params.put ( token, token_local ) ; twillioPhone.connect ( params ) ; twillioPhone.setSpeakerEnabled ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( final java.lang.Boolean success ) { mAuthTask = null; showProgress ( false ) ; try { if ( success ) { fr.sims.coachingproject.service.gcmService.RegistrationGCMIntentService.startActionRegistrationGCM ( getActivity () ) ; fr.sims.coachingproject.ui.activity.MainActivity.startActivity ( getActivity () ) ; fr.sims.coachingproject.util.SharedPrefUtil.putIsFirstLaunch ( getActivity () , false ) ; if ( ( getActivity () ) != null ) { getActivity () .finish () ; } } else { mPasswordView.setError ( getString ( R.string.error_incorrect ) ) ; mPasswordView.requestFocus () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void paintMultiMaps ( java.awt.Graphics2D g2, com.wpi.cs509.teamA.bean.Path path, com.wpi.cs509.teamA.util.LinearTransform plt ) { if ( ( null == path ) || ( ( path.getNodes () .size () ) == 0 ) ) { return; } com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite.paintPath ( path, g2, plt ) ; try { com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite.paintNodes ( path.getNodes () , g2, PaintHelperBasics.DrawStyleEnum.BasicNode, plt ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite.paintStartEndNode ( g2, path, plt ) ; } 
private void setupMessageText ( android.view.View view ) { message = ( ( android.widget.TextView ) ( view.findViewById ( R.id.message ) ) ) ; try { if ( ( profile ) != null ) { java.lang.String text = "Currently logged in as " + ( profile.getName () ) ; message.setText ( text ) ; } else { message.setText ( io.github.getExposure.profile.LoginFragment.LOGGED_OUT_TEXT ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void map ( java.lang.Object key, org.apache.hadoop.io.Text value, nl.utwente.bigdata.Context context ) throws java.io.IOException, java.lang.InterruptedException { java.lang.String[] split = value.toString () .split ( "\t" ) ; try { nl.utwente.bigdata.GoalPlayerCount.CountMapper.player.set ( split[1] ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } context.write ( nl.utwente.bigdata.GoalPlayerCount.CountMapper.player, nl.utwente.bigdata.GoalPlayerCount.CountMapper.one ) ; } 
private void leaveApplicationStatusChange ( final org.egov.eis.model.LeaveApplication leaveApplication ) { final java.lang.String workFlowAction = leaveApplication.getWorkflowDetails () .getAction () ; try { if ( "Approve".equalsIgnoreCase ( workFlowAction ) ) leaveApplication.setStatus ( LeaveStatus.APPROVED ) ; else if ( "Reject".equalsIgnoreCase ( workFlowAction ) ) leaveApplication.setStatus ( LeaveStatus.REJECTED ) ; else if ( "Cancel".equalsIgnoreCase ( workFlowAction ) ) leaveApplication.setStatus ( LeaveStatus.CANCELLED ) ; else if ( "Submit".equalsIgnoreCase ( workFlowAction ) ) leaveApplication.setStatus ( LeaveStatus.RESUBMITTED ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addProver ( java.lang.String proverName, java.lang.String command, boolean override ) throws exceptions.NameAlreadyInUseException { if ( ( !override ) && ( prover.local.LocalProver.availableProvers.contains ( proverName ) ) ) throw new exceptions.NameAlreadyInUseException ( ( ( ( "Name " + proverName ) + " is already in use with command " ) + ( gui.Config.getLocalProverCommand ( proverName ) ) ) ) ; try { gui.Config.setLocalProverCommand ( proverName, command ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( prover.local.LocalProver.availableProvers.contains ( proverName ) ) ) prover.local.LocalProver.availableProvers.add ( proverName ) ; gui.Config.setLocalProvers ( prover.local.LocalProver.availableProvers ) ; } 
public static backtype.storm.generated.StormTopology buildTopology ( org.apache.storm.flux.ExecutionContext context ) throws java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.InstantiationException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException { org.apache.storm.flux.TopologyBuilder builder = new org.apache.storm.flux.TopologyBuilder () ; org.apache.storm.flux.FluxBuilder.buildComponents ( context ) ; org.apache.storm.flux.FluxBuilder.buildSpouts ( context, builder ) ; org.apache.storm.flux.FluxBuilder.buildBolts ( context ) ; try { org.apache.storm.flux.FluxBuilder.buildStreamDefinitions ( context, builder ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return builder.createTopology () ; } 
private void post ( org.daisy.common.messaging.Message.MessageBuilder builder ) { if ( ( ( props ) != null ) && ( ( props.getProperty ( "JOB_ID" ) ) != null ) ) { builder.withJobId ( props.getProperty ( "JOB_ID" ) ) ; } builder.withSequence ( ( ( sequence ) ++ ) ) ; builder.withTimeStamp ( new java.util.Date () ) ; try { eventBus.get () .post ( builder.build () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setRegistrationNumber ( java.lang.String registrationNumber ) { try { if ( ( registrationNumber == null ) || ( ! ( fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility.validateRegistrationNumber ( registrationNumber ) ) ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } countyEditText.setText ( registrationNumber.substring ( 0, 2 ) ) ; vesselNumberEditText.setText ( registrationNumber.substring ( 2, 6 ) ) ; municipalityEditText.setText ( registrationNumber.substring ( 6, registrationNumber.length () ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_restaurants ) ; butterknife.ButterKnife.bind ( this ) ; android.util.Log.d ( com.epicodus.myrestaurants.ui.RestaurantsActivity.TAG, "In RestaurantsActivity" ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent.getStringExtra ( "location" ) ; try { mLocationTextView.setText ( ( "Here are all the restaurants near: " + location ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getRestaurants ( location ) ; } 
private void split ( IntervalMessage message ) { java.util.Queue<PositionRequestMessage> queue = this.returnAddresses.get ( message.requestUuid ) ; if ( queue == null ) { return; } int intervalStart = message.start; try { for ( PositionRequestMessage prMessage : queue ) { prMessage.sender.send ( new IntervalMessage ( this, prMessage.sender, intervalStart, ( ( intervalStart + ( prMessage.i ) ) - 1 ) , prMessage.uuid ) ) ; intervalStart += prMessage.i; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.returnAddresses.remove ( message.requestUuid ) ; } 
public void startDeltaRecording () { if ( delta_recording_start ) { } try { if ( ! ( delta_recording_start ) ) { p.println ( "DELTA RECORDING RUNNING" ) ; delta_local_x = 0; delta_local_y = 0; delta_rotation = 0; delta_t = 0; delta_b = 0; delta_l = 0; delta_r = 0; delta_recording_start = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void stateChangedInternal ( java.lang.String state, java.util.List<eu.geekhome.asymptote.model.SyncUpdate> updates ) { eu.geekhome.asymptote.model.StateSyncUpdate stateUpdate = findStateUpdate ( updates ) ; try { if ( stateUpdate == null ) { updates.add ( new eu.geekhome.asymptote.model.StateSyncUpdate ( state ) ) ; } else { stateUpdate.setValue ( state ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public web.crawler.db.model.Index getIndexByTerm ( java.lang.String term ) { org.springframework.data.mongodb.core.query.Query findQuery = new org.springframework.data.mongodb.core.query.Query () ; try { findQuery.addCriteria ( org.springframework.data.mongodb.core.query.Criteria.where ( "term" ) .is ( term.toLowerCase () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } web.crawler.db.model.Index dbIndex = mongoOperation.findOne ( findQuery, web.crawler.db.model.Index.class, DBTable.INDEX ) ; return dbIndex; } 
@ java.lang.Override public void StartTurn () { turnData = ( ( org.json.simple.JSONObject ) ( gameData.get ( java.lang.String.valueOf ( this.turnCount ) ) ) ) ; addStationFaults () ; updatePlayerScores () ; updatePlayerCards () ; updateGoals () ; updateResources () ; try { addNewConnections () ; } catch ( Exception ex ) { ex.printStackTrace () ; } playerTurn.lineBonuses () ; playerTurn.stationRewards () ; for ( com.TeamHEC.LocomotionCommotion.Goal.Goal goal : playerTurn.getGoals () ) { goal.incrementCurrentGoalDuration () ; } } 
public boolean move ( int dx, int dy, int color ) { int newX = x; int newY = y; newX += ( dx * ( -1 ) ) * color; newY += dy * color; try { if ( ( ( newX >= 0 ) && ( newX < 5 ) ) && ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX, newY ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void addDeath ( final java.lang.String player, final java.lang.Integer playtime ) { mysqlQuery ( ( ( ( ( ( ( "UPDATE `" + ( org.mcsg.survivalgames.points.PointSystem.getInstance () .playerStatTable ) ) + "` SET `playtime` = `playtime`+" ) + playtime ) + ", `deaths` = `deaths`+1 WHERE `name` = '" ) + player ) + "'" ) ) ; try { org.mcsg.survivalgames.points.PointQueries.cachedStats.get ( player.toLowerCase () ) .addDeath () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testRandomFish1 () { java.util.Random random = new java.util.Random ( seed ) ; try { generatedFish = lasersharks.FishBot.generateFish ( random ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( generatedFish.getDirection () , Direction.East ) ; org.junit.Assert.assertEquals ( ( - ( expectedSize1 ) ) , generatedFish.getPosition () .getPosX () , 1.0F ) ; org.junit.Assert.assertEquals ( expectedSize1, generatedFish.getSize () , 1.0F ) ; org.junit.Assert.assertEquals ( expectedSpeed1, generatedFish.getSpeed () , 1.0F ) ; } 
public void print ( char[][] map ) { for ( int i = 0; i < ( h ) ; i++ ) { for ( int j = 0; j < ( w ) ; j++ ) { java.lang.System.out.print ( map[i][j] ) ; } java.lang.System.out.println () ; } try { java.lang.System.out.println () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<java.net.InetAddress> getAddressList () { try { if ( ( this.addresses.size () ) == 0 ) return new java.util.ArrayList<> () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.net.InetAddress[] as = this.addresses.toArray ( new java.net.InetAddress[0] ) ; java.util.List<java.net.InetAddress> list = new java.util.ArrayList<> ( as.length ) ; for ( java.net.InetAddress inetAddress : as ) { list.add ( inetAddress ) ; } return list; } 
@ org.junit.Test public void testDrawFaceUpTrainCards () throws java.lang.Exception { tickets.scacciot17.tickettooride.ttr.TTRState myState = new tickets.scacciot17.tickettooride.ttr.TTRState () ; tickets.scacciot17.tickettooride.ttr.FaceUpDeck faceUpDeck = myState.getFiveUp () ; int size = faceUpDeck.size () ; try { for ( int i = 0; i < size; i++ ) { assertNotEquals ( faceUpDeck.getCards () .get ( i ) , null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setTemperature ( java.lang.String h ) { try { if ( h != null ) { strTemperature = h; int i = strTemperature.indexOf ( '.' ) ; i = java.lang.Integer.parseInt ( strTemperature.substring ( 0, i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Boolean visitIntersection_Intersection ( org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType subtype, org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType supertype, org.checkerframework.framework.type.visitor.VisitHistory visited ) { javax.lang.model.util.Types types = checker.getTypeUtils () ; try { for ( org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType subtypeI : subtype.directSuperTypes () ) { for ( org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType supertypeI : subtype.directSuperTypes () ) { if ( org.checkerframework.javacutil.TypesUtils.isErasedSubtype ( types, subtypeI.getUnderlyingType () , supertypeI.getUnderlyingType () ) ) { if ( ! ( isSubtype ( subtypeI, supertypeI ) ) ) { return false; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public static void reverseStatement ( java.lang.String userInput ) { java.lang.String inputReversed; inputReversed = ""; for ( int i = ( userInput.length () ) - 1; i >= 0; i-- ) { inputReversed = inputReversed + ( userInput.charAt ( i ) ) ; } try { java.lang.System.out.println ( inputReversed ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.home_activity ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mToken = io.github.kolacbb.kolaweibo.util.AccessTokenKeeper.readAccessToken ( getApplicationContext () ) ; if ( mToken.isSessionValid () ) { loadData ( savedInstanceState ) ; } else { com.sina.weibo.sdk.auth.AuthInfo mAuthInfo = new com.sina.weibo.sdk.auth.AuthInfo ( this, io.github.kolacbb.kolaweibo.api.Constants.APP_KEY, io.github.kolacbb.kolaweibo.api.Constants.REDIRECT_URL, io.github.kolacbb.kolaweibo.api.Constants.SCOPE ) ; com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler = new com.sina.weibo.sdk.auth.sso.SsoHandler ( this, mAuthInfo ) ; mSsoHandler.authorize ( new io.github.kolacbb.kolaweibo.ui.activity.HomeActivity.AuthListener () ) ; } } 
public boolean contains ( java.lang.String word ) { try { for ( java.lang.Integer integer : seeds ) { boolean result = buckets[java.lang.Math.abs ( ( ( org.apache.mahout.math.MurmurHash3.murmurhash3x8632 ( word.toLowerCase () .getBytes () , 0, word.length () , integer ) ) % ( buckets.length ) ) ) ]; if ( !result ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void loadPosition ( int x, int y ) { try { ensureSafeWindowPosition ( x, y ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.micromanager.internal.utils.DefaultUserProfile profile = org.micromanager.internal.utils.DefaultUserProfile.getInstance () ; setBounds ( profile.getInt ( this.getClass () , ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_X ) ) , x ) , profile.getInt ( this.getClass () , ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_Y ) ) , y ) , getWidth () , getHeight () ) ; } 
public int chooseShipToShoot () { try { if ( isDestroyerRdy () ) { return 1; } else if ( isFrigateRdy () ) { return 2; } else if ( isCorvetteRdy () ) { return 3; } else if ( isSubmarineRdy () ) { return 4; } else { return 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getArrivalOffset () { try { if ( ( arrivalOffset ) >= 0 ) { return java.lang.String.format ( "%02d:%02d:%02d", ( ( arrivalOffset ) / 3600 ) , ( ( arrivalOffset ) / 60 ) , ( ( arrivalOffset ) % 60 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public int compare ( com.adm.scheduler.message.Message o1, com.adm.scheduler.message.Message o2 ) { try { if ( ( priority.get ( o1.getGroup () ) ) != null ) return 1; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( priority.get ( o2.getGroup () ) ) != null ) return -1; return 1; } 
@ java.lang.Override public void run () { java.lang.String[] tagArray = new java.lang.String[] { "example_tag" }; boolean success = com.appoxee.Appoxee.addTagsToDevice ( new java.util.ArrayList<java.lang.String> ( java.util.Arrays.asList ( tagArray ) ) ) ; try { android.util.Log.d ( gigigo.com.orchextrasdk.MainActivity.TAG, ( "custom field set success: " + success ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<java.lang.String> tags = com.appoxee.Appoxee.getTagList () ; android.util.Log.d ( gigigo.com.orchextrasdk.MainActivity.TAG, ( "tags list: " + tags ) ) ; } 
public void run ( lu.innocence.opengl.core.RenderInterface renderInterface, int width, int height ) { lu.innocence.opengl.core.DisplayManager.LOGGER.info ( "LWJGL - {} ", org.lwjgl.Version.getVersion () ) ; this.renderInterface = renderInterface; init ( width, height ) ; try { loop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.lwjgl.glfw.Callbacks.glfwFreeCallbacks ( window ) ; glfwDestroyWindow ( window ) ; glfwTerminate () ; } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view, java.lang.String url ) { try { if ( ( ( url.startsWith ( "mailto:" ) ) || ( url.startsWith ( "geo:" ) ) ) || ( url.startsWith ( "tel:" ) ) ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW, android.net.Uri.parse ( url ) ) ; startActivity ( intent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ cpw.mods.fml.common.Mod.EventHandler public void init ( cpw.mods.fml.common.event.FMLInitializationEvent event ) { MinecraftForge.EVENT_BUS.register ( new com.miningmark48.miscconfigs.event.EventCraftingTable () ) ; MinecraftForge.EVENT_BUS.register ( new com.miningmark48.miscconfigs.event.EventSaplingGrowthMultiplier () ) ; try { cpw.mods.fml.common.FMLCommonHandler.instance () .bus () .register ( new com.miningmark48.miscconfigs.event.EventJoinGame () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.miningmark48.miscconfigs.utility.LogHelper.info ( net.minecraft.util.StatCollector.translateToLocal ( "log.info.init" ) ) ; } 
@ java.lang.Override public void onReceive ( final android.content.Context context, android.content.Intent intent ) { cse110m260t9.qralarm.MainActivity.getAlarmRingText () .setText ( "Enough Rest. Do Work Now!" ) ; android.content.Intent scannerIntent = new android.content.Intent ( context, cse110m260t9.qralarm.QRScannerActivity.class ) ; try { scannerIntent.setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } context.startActivity ( scannerIntent ) ; } 
public int getProgress () { int p = 0; java.util.Collection tasks = getTopLevelTasks () ; try { for ( java.util.Iterator iter = tasks.iterator () ; iter.hasNext () ; ) { net.sf.memoranda.Task e = ( ( net.sf.memoranda.Task ) ( iter.next () ) ) ; p += e.getProgress () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } int size = tasks.size () ; return size == 0 ? 0 : p / size; } 
public com.pactera.web.model.Department findById ( java.lang.Integer deptno ) throws com.pactera.web.exception.ServiceException { final java.lang.String METHOD_NAME = "findById"; try { log.debug ( ( METHOD_NAME + " begin" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } log.debug ( ( ( METHOD_NAME + " deptno : " ) + deptno ) ) ; com.pactera.web.model.Department dept = departmentDAO.getOne ( deptno ) ; log.debug ( ( METHOD_NAME + " end" ) ) ; return dept; } 
public void applyHpBonus ( org.bukkit.entity.LivingEntity entity ) { if ( ! ( entity.isValid () ) ) { return; } java.lang.Integer hpToAdd = getHpBonus ( entity ) ; entity.setMaxHealth ( ( ( entity.getMaxHealth () ) + hpToAdd ) ) ; try { entity.setHealth ( entity.getMaxHealth () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public main.State executeCommand ( java.lang.String commandText, java.lang.String directory ) throws java.io.IOException, json.JSONException { completeState.clearStatusMessage () ; command.Command userCommand; userCommand = parser.parseCommand ( commandText ) ; try { if ( null == userCommand ) { completeState.setStatusMessage ( State.MESSAGE_PARSE_ERROR ) ; return completeState; } } catch ( Exception ex ) { ex.printStackTrace () ; } userCommand.execute ( completeState ) ; assert isValidCommand ( userCommand ) ; storage.stateToStorage ( completeState, directory ) ; return completeState; } 
public static java.lang.String apiMimeTypeToNetworkMimeType ( java.lang.String apiMimeType ) { try { if ( apiMimeType.startsWith ( MimeType.GEOLOC_MESSAGE ) ) { return com.gsma.rcs.core.ims.service.im.chat.geoloc.GeolocInfoDocument.MIME_TYPE; } else if ( com.gsma.rcs.core.ims.service.im.chat.ChatUtils.isTextPlainType ( apiMimeType ) ) { return com.gsma.services.rcs.chat.ChatLog.Message.MimeType.TEXT_MESSAGE; } else if ( apiMimeType.startsWith ( FileTransferHttpInfoDocument.MIME_TYPE ) ) { return com.gsma.rcs.core.ims.service.im.filetransfer.http.FileTransferHttpInfoDocument.MIME_TYPE; } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new java.lang.IllegalArgumentException ( ( "Unsupported input mimetype detected : " + apiMimeType ) ) ; } 
@ java.lang.Override public void run () { java.lang.String s = ""; try { for ( int i = 0; i < ( remoteWines.size () ) ; i++ ) { s = ( s + ( remoteWines.get ( i ) .toString () ) ) + "\n"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/update", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage update ( @org.springframework.web.bind.annotation.RequestParam java.lang.String utoken, @org.springframework.web.bind.annotation.RequestParam java.lang.String leader ) { if ( ( org.apache.commons.lang3.StringUtils.isBlank ( utoken ) ) || ( org.apache.commons.lang3.StringUtils.isBlank ( leader ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST; com.alibaba.fastjson.JSONObject leaderJson = com.alibaba.fastjson.JSON.parseObject ( leader ) ; try { leaderJson.put ( "userId", userServiceApi.USER.get ( utoken ) .getId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } userServiceApi.LEADER.update ( com.alibaba.fastjson.JSON.toJavaObject ( leaderJson, cn.momia.api.user.leader.Leader.class ) ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS; } 
boolean doubleTapAttack ( java.lang.String[] ad ) { Config.runFlaskSuppression = true; long tapTime = 400; if ( ( ( java.lang.System.currentTimeMillis () ) - ( doubleTapTime ) ) < tapTime ) { multiHotkeyFix = true; if ( soakAttack ( ad ) ) return false; wdgmsg ( "act", ( ( java.lang.Object[] ) ( ad ) ) ) ; if ( ( ui.fight ) != null ) { ui.fight.attackCurrent () ; } return true; } try { doubleTapTime = java.lang.System.currentTimeMillis () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void logOut () { try { com.parse.ParseUser.logOut () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent takeToLogin = new android.content.Intent ( this, com.example.android.ShoppingWithFriends.LoginActivity.class ) ; takeToLogin.addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin.addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin.addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; } 
private void updateOkDisabled () { try { okDisabled.setValue ( ( ( ( ( ( selectedOfficer ) == null ) || ( ( selectedAthletes.size () ) < ( Game.MIN_PARTICIPANTS ) ) ) || ( ( selectedAthletes.size () ) > ( Game.MAX_PARTICIPANTS ) ) ) || ( ( predictedAthlete ) == null ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) throws java.lang.Exception { com.thoughtworks.xstream.XStream xs = new com.thoughtworks.xstream.XStream () ; xs.processAnnotations ( xstream.xstream_class_22.class ) ; try { java.lang.System.out.println ( "Unmarshalling:" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( xs.fromXML ( new java.io.File ( "in.xml" ) ) ) ; java.lang.System.out.println ( "Marshalling:" ) ; } 
public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( e.getKeyCode () ) == ( java.awt.event.KeyEvent.VK_A ) ) { right = true; } else if ( ( e.getKeyCode () ) == ( java.awt.event.KeyEvent.VK_D ) ) { left = true; } try { if ( ( e.getKeyCode () ) == ( java.awt.event.KeyEvent.VK_W ) ) { up = true; } else if ( ( e.getKeyCode () ) == ( java.awt.event.KeyEvent.VK_S ) ) { down = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testCalculateScore3 () { org.cloudish.score.KubernetesRankingScore score = new org.cloudish.score.KubernetesRankingScore () ; org.cloudish.borg.model.Host h = new org.cloudish.borg.model.Host ( 0, 0.5, 0.5, null, new java.util.HashMap<> () ) ; try { h.allocate ( new org.cloudish.borg.model.Task ( 0, 10, 0.3, 0.3, 11, true, new java.util.ArrayList<> () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( 14, score.calculateScore ( null, h ) , org.cloudish.score.TestKubernetesRankingScore.ACCEPTABLE_DIFF ) ; } 
@ org.junit.After public void tearDown () throws java.lang.Exception { final delight.async.Operation<delight.functional.Success> _function = new delight.async.Operation<delight.functional.Success> () { @java.lang.Override public void apply ( final delight.async.callbacks.ValueCallback<delight.functional.Success> callback ) { delight.keyvalue.sql.tests.TestSqlStore.this.map.stop ( delight.async.AsyncCommon.<delight.functional.Success>asSimpleCallback ( callback ) ) ; } }; try { delight.async.jre.Async.<delight.functional.Success>waitFor ( _function ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private gr.uom.java.ast.MethodInvocationObject recurseDelegations ( gr.uom.java.ast.MethodInvocationObject methodInvocation, gr.uom.java.ast.SystemObject system ) { gr.uom.java.ast.MethodInvocationObject delegation; try { if ( ( ( ( delegation = system.containsDelegate ( methodInvocation ) ) != null ) && ( ( system.getClassObject ( delegation.getOriginClassName () ) ) != null ) ) && ( ! ( delegation.equals ( methodInvocation ) ) ) ) return recurseDelegations ( delegation, system ) ; else return methodInvocation; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void drawMon ( java.awt.Graphics g ) { try { for ( com.kurtzbot.CachedMon mon : cache.getCurrent () ) { g.setColor ( new java.awt.Color ( 255, 135, 232 ) ) ; g.drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24, 24 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int compareTo ( org.sosy_lab.cpachecker.pcc.strategy.partitioning.BestFirstWeightedBalancedGraphPartitioner.NodePriority compNode ) { if ( compNode == null ) { return -1; } try { if ( ( this.getPriority () ) != ( compNode.getPriority () ) ) { return ( this.getPriority () ) - ( compNode.getPriority () ) ; } else { int n1 = this.getNode () .getNodeNumber () ; int n2 = compNode.getNode () .getNodeNumber () ; return n2 - n1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String right ( java.lang.String s, int length ) { if ( length == 0 ) return ""; try { if ( ( s.length () ) < length ) return s; else if ( length > 0 ) return s.substring ( ( ( s.length () ) - length ) , s.length () ) ; else { return s.substring ( ( -length ) , s.length () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public final java.util.List<com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry> getNodeRules ( final byte net, final com.github.sdnwiselab.sdnwise.util.NodeAddress dst ) { java.util.List<com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry> list = new java.util.ArrayList<> () ; com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry fte; int i = 0; try { while ( ( fte = getNodeRule ( net, dst, i ) ) != null ) { list.add ( i, fte ) ; i++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return list; } 
public void addToMyMaps ( java.util.List<mikheev.konstantin.huntmap.models.RegionItem> regionItemListFromFragment ) { try { for ( mikheev.konstantin.huntmap.models.RegionItem regionItem : regionItemListFromFragment ) { if ( ( regionItem != null ) && ( regionItem.getIsBought () ) ) { myRegionItemsMap.addRegionItem ( regionItem.getRegionId () , regionItem ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v4.app.Fragment fragmentMyMaps = myViewPagerAdapter.getFragmentByPosition ( 0 ) ; ( ( mikheev.konstantin.huntmap.fragments.MyMapsFragment ) ( fragmentMyMaps ) ) .updateMyMapsItems ( myRegionItemsMap.getRegionItemsList () ) ; } 
public void update () { try { synchronized ( conversations ) { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation.isEmpty () ) { conversations.remove ( conversation ) ; idGenerator.returnID ( conversation.getID () ) ; com.chat.server.utils.Logger.log ( ( ( "Conversation " + ( conversation.getID () ) ) + " is empty, deleting" ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public double getDropRate () { double prev = utilSpace.getUtility ( bids.get ( 0 ) ) ; double average = 0; try { for ( int i = 1; i < ( bids.size () ) ; i++ ) { double curr = utilSpace.getUtility ( bids.get ( i ) ) ; average += curr - prev; prev = curr; } } catch ( Exception ex ) { ex.printStackTrace () ; } return average / ( ( bids.size () ) - 1 ) ; } 
@ java.lang.Override public void onPreReceive ( final org.eclipse.jgit.transport.ReceivePack rp, final java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand> commands ) { fs.lock () ; try { if ( ( clusterService ) != null ) { clusterService.lock () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( final org.eclipse.jgit.transport.ReceiveCommand command : commands ) { final org.eclipse.jgit.revwalk.RevCommit lastCommit = org.uberfire.java.nio.fs.jgit.util.JGitUtil.getLastCommit ( fs.gitRepo () , command.getRefName () ) ; oldTreeRefs.put ( command.getRefName () , lastCommit ) ; } } 
public void imageClick ( android.view.View view ) { android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder ( this ) ; builder.setTitle ( "" ) ; android.widget.ImageView imageView = new android.widget.ImageView ( getApplicationContext () ) ; try { imageView.setImageBitmap ( origImage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } builder.setView ( imageView ) ; builder.show () ; } 
@ android.support.annotation.MainThread public void setStatus ( @org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.PlayerState int argPlayerStatus ) { if ( ( getEpisode () ) == null ) { return; } if ( getEpisode () .isPlaying () ) { if ( IsDisplayingPlayIcon () ) { animateChangeFrom ( PlayPauseDrawable.IS_PAUSED ) ; } } else { if ( ! ( IsDisplayingPlayIcon () ) ) { animateChangeFrom ( PlayPauseDrawable.IS_PLAYING ) ; } } mStatus = argPlayerStatus; if ( ( mStatus ) == ( org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.STATE_PREPARING ) ) { mStartTime = java.lang.System.currentTimeMillis () ; } try { this.invalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void execute () { final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker ( java.lang.Thread.currentThread () .getId () , workerGame, scoreBoard, CHEAT ) ; worker.evaluateGame ( achoice, scoreRef.get () , ( ( java.lang.System.nanoTime () ) + slice ) ) ; try { scoreRef.update ( achoice.aiScore.getScore () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static <T extends java.lang.Comparable<? super T>> void bestSort ( T[] seq, T[] auxSeq, int lo, int hi ) { final int altSortThreshold = 7; int elementsToSort = ( hi - lo ) + 1; try { if ( elementsToSort > altSortThreshold ) edu.mit.ita.util.Arrays.mergeSort ( seq, auxSeq, lo, hi ) ; else edu.mit.ita.util.Arrays.insertionSort ( seq, lo, hi ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeController ( java.lang.Object controller ) { removeControllerBinds ( notifybinds, controller ) ; removeControllerBinds ( propertybinds, controller ) ; try { removeControllerBinds ( propertiesbinds, controller ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } removeControllerBinds ( pathbinds, controller ) ; removeControllerBinds ( timelinenotifybinds, controller ) ; org.springfield.fs.FsNode node = new org.springfield.fs.FsNode ( "bind", "1" ) ; node.setProperty ( "action", "remove controller" ) ; node.setProperty ( "controller", ( "" + ( controller.hashCode () ) ) ) ; notify ( "/shared/internal", node ) ; } 
@ java.lang.Override public void onNavigationBlocked ( int position, int direction ) { android.view.View contentView = findViewById ( android.R.id.content ) ; try { if ( contentView != null ) { com.heinrichreimersoftware.materialintro.slide.Slide slide = getSlide ( position ) ; if ( slide == permissionsSlide ) { android.support.design.widget.Snackbar.make ( contentView, R.string.label_grant_permissions, Snackbar.LENGTH_LONG ) .show () ; } else if ( slide == loginSlide ) { android.support.design.widget.Snackbar.make ( contentView, R.string.label_fill_out_form, Snackbar.LENGTH_LONG ) .show () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public io.subutai.common.environment.Environment loadEnvironment ( final java.lang.String environmentId ) throws io.subutai.common.environment.EnvironmentNotFoundException { try { com.google.common.base.Preconditions.checkNotNull ( environmentId, "Invalid environment id" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } io.subutai.core.environment.impl.entity.EnvironmentImpl environment = environmentAdapter.get ( environmentId ) ; if ( environment != null ) { return environment; } environment = environmentService.find ( environmentId ) ; if ( environment != null ) { setTransientFields ( com.google.common.collect.Sets.<io.subutai.common.environment.Environment>newHashSet ( environment ) ) ; return environment; } throw new io.subutai.common.environment.EnvironmentNotFoundException () ; } 
private void configureViewHolderSimpleStory ( com.codepath.timeline.adapters.StoriesAdapter.ViewHolderSimpleStory holder, int position ) { com.codepath.timeline.models.Story story = mStories.get ( position ) ; try { android.util.Log.d ( "DEBUG", story.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( story != null ) { holder.getTvStoryTitle () .setText ( story.getStoryTitle () ) ; com.bumptech.glide.Glide.with ( context ) .load ( story.getBackgroundImageUrl () ) .fitCenter () .bitmapTransform ( new jp.wasabeef.glide.transformations.RoundedCornersTransformation ( context, 25, 0 ) ) .into ( holder.getIvBackgroundImage () ) ; } } 
@ java.lang.Override public boolean isDone ( core.game.Game game ) { boolean ended = super.isFinished ( game ) ; if ( ended ) return true; try { if ( ( ( ( itype ) == ( -1 ) ) && ( ( ( game.getNumSprites ( itype ) ) - ( game.getNumDisabledSprites ( itype ) ) ) <= ( limit ) ) ) && ( canEnd ) ) { countScore ( game ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void highlight ( final org.kie.workbench.common.stunner.core.graph.Node node, final org.kie.workbench.common.stunner.core.graph.Edge<org.kie.workbench.common.stunner.core.graph.content.view.View<?>, org.kie.workbench.common.stunner.core.graph.Node> connector, final boolean valid ) { try { canvasHighlight.unhighLight () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( null != node ) && valid ) { canvasHighlight.highLight ( node ) ; } else if ( null != node ) { canvasHighlight.invalid ( node ) ; } } 
public org.openlmis.distribution.dto.DistributionDTO getDistribution ( org.openlmis.distribution.domain.Distribution arg, java.lang.Long userId ) { org.openlmis.distribution.domain.Distribution distribution = getFullSyncedDistribution ( arg ) ; try { if ( distribution != null ) { if ( userId != null ) { insertEditInProgress ( userId, distribution.getId () ) ; } java.util.Map<java.lang.Long, org.openlmis.distribution.domain.FacilityDistribution> facilityDistributionMap = facilityDistributionService.getData ( distribution, true ) ; distribution.setFacilityDistributions ( facilityDistributionMap ) ; return distribution.transform () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private double calculateSquaredNorm ( final T row ) { double norm = 0.0; try { for ( int i = 1; i <= ( m_nFets ) ; i++ ) { double fet = row.getFeature ( i ) ; norm += fet * fet; } } catch ( Exception ex ) { ex.printStackTrace () ; } return norm; } 
public void causeDamage ( double amount, life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0; if ( type.equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil.getDefencedDamage ( amount, getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type.equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil.getDefencedDamage ( amount, getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount; } try { causeRawDamage ( damage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; com.facebook.FacebookSdk.sdkInitialize ( getApplicationContext () ) ; setContentView ( R.layout.activity_main ) ; try { com.parse.Parse.enableLocalDatastore ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.parse.Parse.initialize ( this, "rImfNv4tT49YDypqeW0EBVwwES7b8GBIeeilMjsi", "HUbrGgOnHXM3DpWo2aHJ8AGZUyHOhFOPokyEoLNJ" ) ; loginBtn = ( ( com.facebook.login.widget.LoginButton ) ( findViewById ( R.id.login_button ) ) ) ; } 
private java.lang.String getExtension ( final java.lang.String filename ) { final int i = filename.lastIndexOf ( '.' ) ; try { if ( ( i > 0 ) && ( i < ( ( filename.length () ) - 1 ) ) ) { return filename.substring ( ( i + 1 ) ) .toLowerCase () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public boolean hasUpgrade ( int rarity, Lib.summon.Awakening[] awakening ) { try { for ( Lib.summon.Awakening a : awakening ) { for ( int i = 0; i < ( a.units.length ) ; i++ ) { if ( a.units[i].name.equals ( name ) ) { return hasUpgrade ( rarity, a.rarityAwakened[i] ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void addSyncObjectPerformed ( org.apache.wicket.ajax.AjaxRequestTarget target ) { com.evolveum.midpoint.web.component.wizard.resource.ObjectSynchronizationType syncObject = new com.evolveum.midpoint.web.component.wizard.resource.ObjectSynchronizationType () ; try { syncObject.setEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } resourceModel.getObject () .asObjectable () .getSynchronization () .getObjectSynchronization () .add ( syncObject ) ; editSyncObjectPerformed ( target, syncObject ) ; parentPage.refreshIssues ( target ) ; } 
@ java.lang.Override protected void prepareSaveChangesMadeToEnforcedPropertiesForCurrent () { try { super.prepareSaveChangesMadeToEnforcedPropertiesForCurrent () ; } catch ( Exception ex ) { ex.printStackTrace () ; } gov.anl.aps.cdb.portal.controllers.ItemDomainInventoryController idic = gov.anl.aps.cdb.portal.controllers.ItemDomainInventoryController.getInstance () ; gov.anl.aps.cdb.portal.controllers.extensions.ItemEnforcedPropertiesController inventoryEnforcedPropertiesController = idic.getItemEnforcedPropertiesController () ; gov.anl.aps.cdb.portal.model.db.entities.ItemDomainCatalog catalogItem = ( ( gov.anl.aps.cdb.portal.model.db.entities.ItemDomainCatalog ) ( getCurrent () ) ) ; if ( ( catalogItem.getInventoryItemList () ) != null ) { for ( gov.anl.aps.cdb.portal.model.db.entities.Item inventoryItem : catalogItem.getInventoryItemList () ) { inventoryEnforcedPropertiesController.setCurrent ( inventoryItem ) ; inventoryEnforcedPropertiesController.prepareSaveChangesMadeToEnforcedPropertiesForCurrent () ; } } } 
private java.lang.String getNdtDocs ( java.util.List<com.lvg.weldercenter.ui.entities.report.NDTDocumentUI> ndtDocumentUIList ) { if ( ndtDocumentUIList == null ) return constants.GENERIC_NULL_FIELD; java.lang.StringBuilder result = new java.lang.StringBuilder () ; try { for ( com.lvg.weldercenter.ui.entities.report.NDTDocumentUI ndt : ndtDocumentUIList ) { result.append ( ndt.getName () ) ; result.append ( constants.GENERIC_SEMICOLON_SEPARATOR ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } deleteLastSeparator ( result, constants.GENERIC_SEMICOLON_SEPARATOR ) ; return result.toString () ; } 
@ com.codeup.controller.GetMapping ( value = "/recipe/delete" ) public java.lang.String deleteRecipe ( @com.codeup.controller.RequestParam ( value = "recipe_id" ) long recipe_id ) { com.codeup.controller.User user = ( ( com.codeup.controller.User ) ( org.springframework.security.core.context.SecurityContextHolder.getContext () .getAuthentication () .getPrincipal () ) ) ; com.codeup.controller.UserRecipe userRecipe = userRecipeRepository.findByUser_IdAndRecipe_Id ( user.getId () , recipe_id ) ; try { userRecipeRepository.delete ( userRecipe ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "redirect:/"; } 
@ org.junit.Test public void testHasAllItems () { com.laboon.Player testPlayer = new com.laboon.Player ( false, false, false ) ; boolean result = testPlayer.hasAllItems () ; assertFalse ( result ) ; testPlayer.getSugar () ; result = testPlayer.hasAllItems () ; try { assertFalse ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } testPlayer.getCream () ; result = testPlayer.hasAllItems () ; assertFalse ( result ) ; testPlayer.getCoffee () ; result = testPlayer.hasAllItems () ; assertTrue ( result ) ; } 
@ java.lang.Override public java.lang.String toString () { java.lang.String state = new java.lang.String () ; try { if ( ( isStatus () ) == true ) state = "on"; else state = "off"; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( ( ( ( ( ( title ) + "," ) + ( author ) ) + "," ) + state ) + "," ) + ( dueDate.format ( formatter ) ) ) + "\n"; } 
@ java.lang.Override public void onSuccess ( int statusCode, cz.msebera.android.httpclient.Header[] headers, org.json.JSONObject response ) { com.codepath.apps.mysimpletweet.models.Tweet tweet = new com.codepath.apps.mysimpletweet.models.Tweet ( response ) ; tweet.save () ; tweet.getUser () .save () ; try { if ( ( listener ) != null ) { listener.onCreateSuccess ( tweet.getId () ) ; listener = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void add ( int poche, pokemon.modele.Objet obj, int qte ) { try { if ( inventaire.elementAt ( poche ) .contains ( obj ) ) { int indice = inventaire.elementAt ( poche ) .indiceOf ( obj ) ; inventaire.elementAt ( poche ) .contenu.elementAt ( indice ) .ajoutQte ( qte ) ; } else { inventaire.elementAt ( poche ) .add ( new pokemon.modele.UniteStockage<pokemon.modele.Objet> ( obj, qte ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public de.tuhh.diss.plotbot.Plottable select () { int selection = -1; do { selection = menu.select () ; } while ( selection < 0 ) ; try { while ( Button.ENTER.isDown () ) { } } catch ( Exception ex ) { ex.printStackTrace () ; } de.tuhh.diss.plotbot.Plottable toDraw = null; if ( selection == 0 ) { toDraw = new de.tuhh.diss.plotbot.Anchor () ; } if ( selection == 1 ) { } return toDraw; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String CREATE_WIFIS_TABLE = ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.TABLE_WIFIS ) ) + " ( " ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_ID ) ) + " INTEGER PRIMARY KEY," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_NAME ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_BSSID_NO ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_SILENCE ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_AUTO_SMS ) ) + " TEXT" ) + " ) "; try { db.execSQL ( CREATE_WIFIS_TABLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String personId = java.lang.String.valueOf ( followersDTO.getId () ) ; monsterquiz.app.com.monsterquiz.fragments.FriendPrivateProfileFragment friendPrivateProfileFragment = new monsterquiz.app.com.monsterquiz.fragments.FriendPrivateProfileFragment () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle.putString ( "cat_id", "0" ) ; bundle.putString ( "user_id", personId ) ; friendPrivateProfileFragment.setArguments ( bundle ) ; try { ( ( monsterquiz.app.com.monsterquiz.HomeActivity ) ( context ) ) .replaceFragment ( friendPrivateProfileFragment ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { try { switch ( position ) { case 0: return oneFragment.newInstance ( "1", "2" ) ; case 1: return twoFragment.newInstance ( "1", "2" ) ; case 2: return oneFragment.newInstance ( "1", "2" ) ; case 3: return twoFragment.newInstance ( "1", "2" ) ; case 4: return oneFragment.newInstance ( "1", "2" ) ; default: return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.List<Dimension> getHorizontalDimensions ( Dimension dime ) { java.util.List<Dimension> boxDimes = new java.util.ArrayList<Dimension> () ; try { for ( int y = 0; y < 9; y++ ) { if ( y != ( dime.y ) ) { Dimension dimeCurrent = new Dimension ( dime.x, y ) ; boxDimes.add ( dimeCurrent ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return boxDimes; } 
@ java.lang.Override public void onClick ( android.view.View view ) { java.lang.System.out.println ( "ClickHat" ) ; com.example.cookzyme.cookzyme.CanCookFragment canCook = new com.example.cookzyme.cookzyme.CanCookFragment () ; android.support.v4.app.FragmentTransaction transaction = getActivity () .getSupportFragmentManager () .beginTransaction () ; try { transaction.replace ( R.id.refrigerator, canCook ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } transaction.addToBackStack ( null ) ; transaction.commit () ; } 
private int getUnitCount ( SCBot.UnitType type, SCBot.UnitType type2 ) { int count = 0; try { for ( SCBot.Unit u : this.self.getUnits () ) { if ( ( ( u.getType () ) == type ) && ( ( type2 == null ) || ( ( u.getBuildType () ) == type2 ) ) ) { count++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return count; } 
private void generateTraps ( int limit ) { int amountOfButtons = 10; int trapNumber = newRandomNumberBetween ( amountOfButtons ) ; java.lang.String logMessage = getResources () .getString ( R.string.log_trap_id ) ; int amountOfTraps = 3; try { for ( int i = 0; i < amountOfTraps; i++ ) { while ( traps.contains ( trapNumber ) ) { trapNumber = newRandomNumberBetween ( amountOfButtons ) ; } android.util.Log.i ( logMessage, java.lang.Integer.toString ( trapNumber ) ) ; traps.add ( trapNumber ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue observable, java.lang.Object oldValue, java.lang.Object newValue ) { soundValue.textProperty () .setValue ( java.lang.String.valueOf ( ( ( int ) ( soundBar.getValue () ) ) ) ) ; try { MainLogic.instance.setVolume ( ( ( soundBar.getValue () ) / 100 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } MainLogic.instance.getMp () .setVolume ( ( ( soundBar.getValue () ) / 100 ) ) ; } 
private static void validateAccessToken () throws com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException { java.lang.String accessToken = com.mapbox.mapboxsdk.Mapbox.INSTANCE.accessToken; try { if ( ( android.text.TextUtils.isEmpty ( accessToken ) ) || ( ( ! ( accessToken.toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) .startsWith ( "pk." ) ) ) && ( ! ( accessToken.toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) .startsWith ( "sk." ) ) ) ) ) { throw new com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean addUser ( java.lang.String username, java.lang.String password ) throws java.sql.SQLException { java.sql.Statement stmt = conn.createStatement () ; boolean success = stmt.execute ( ( ( ( ( "insert into TTEDB.Users ( UserName, UserPW ) values ( '" + username ) + "', '" ) + password ) + "' ) " ) ) ; stmt.close () ; try { conn.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return success; } 
@ java.lang.Override public void onResponse ( retrofit2.Call<dom.bom.com.tabatasdk.map_module.view.model.Track> call, retrofit2.Response<dom.bom.com.tabatasdk.map_module.view.model.Track> response ) { try { if ( ( view ) != null ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker.sendRequest ( response, context, view ) ) { view.setListOfParcel ( getParcelList ( response.body () .getReceiver () , response.body () .getSender () ) ) ; } else { view.onError ( R.string.server_problem ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void close () throws java.sql.SQLException { com.mysql.jdbc.MySQLConnection locallyScopedConn = this.connection; if ( locallyScopedConn == null ) { return; } try { synchronized ( locallyScopedConn.getConnectionMutex () ) { if ( ( ( this.isCached ) && ( isPoolable () ) ) && ( ! ( this.isClosed ) ) ) { clearParameters () ; this.isClosed = true; this.connection.recachePreparedStatement ( this ) ; return; } this.isClosed = false; realClose ( true, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public Objects.MapTypes.MapInterface createMap ( int mapSize, int numOfPlayers, int choice ) { try { if ( choice == 1 ) { Objects.MapTypes.SafeMapCreator creator = new Objects.MapTypes.SafeMapCreator () ; return creator.create ( mapSize, numOfPlayers ) ; } else { Objects.MapTypes.HazardousMapCreator creator2 = new Objects.MapTypes.HazardousMapCreator () ; return creator2.create ( mapSize, numOfPlayers ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void attachPropertiesFragment () throws java.lang.IllegalAccessException, java.lang.InstantiationException { java.lang.Class<? extends pl.karol202.paintplus.tool.ToolProperties> propertiesClass = getTool () .getPropertiesFragmentClass () ; android.app.Fragment properties = propertiesClass.newInstance () ; android.os.Bundle propArgs = new android.os.Bundle () ; propArgs.putInt ( "tool", getTools () .getToolId ( getTool () ) ) ; properties.setArguments ( propArgs ) ; android.app.FragmentTransaction propTrans = fragments.beginTransaction () ; propTrans.replace ( R.id.propertiesFragment, properties ) ; try { propTrans.commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void initialize ( java.net.URL location, java.util.ResourceBundle resources ) { radioStartAppWithWin.setSelected ( SettingsConstants.START_APP_WITH_WINDOWS_7 ) ; radioStartAnalysisWithAppStart.setSelected ( SettingsConstants.START_ANALYSIS_WITH_APP_START_3 ) ; radioSaveReportsAuto.setSelected ( SettingsConstants.SAVE_REPORTS_AUTOMATICALLY_4 ) ; sliderSize.setValue ( SettingsConstants.SLIDER_SIZE_5 ) ; try { sliderNumber.setValue ( SettingsConstants.SLIDER_NUMBER_6 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( myProject.model.SettingsConstants.START_APP_WITH_WINDOWS_7 ) { radioStartAppWithWin.setSelected ( true ) ; radioStartAppWithWin.setDisable ( true ) ; } updateSliderL () ; } 
void enqueue ( org.sleuthkit.datamodel.FsContent fsContent, java.util.List<org.sleuthkit.autopsy.ingest.IngestServiceFsContent> services ) { org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit<org.sleuthkit.datamodel.FsContent, org.sleuthkit.autopsy.ingest.IngestServiceFsContent> found = findFsContent ( fsContent ) ; try { if ( found != null ) { found.addAll ( services ) ; } else { found = new org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit<org.sleuthkit.datamodel.FsContent, org.sleuthkit.autopsy.ingest.IngestServiceFsContent> ( fsContent, services ) ; fsContentUnits.add ( found ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.ws.rs.GET public it.finsoft.entity.Evento create ( @javax.ws.rs.QueryParam ( value = "entita" ) java.lang.String codiceEnt, @javax.ws.rs.QueryParam ( value = "tipiEvento" ) java.lang.String codiceTipi, @javax.ws.rs.QueryParam ( value = "tag" ) java.lang.String tag ) { it.finsoft.entity.Evento evento = new it.finsoft.entity.Evento () ; try { evento.setEntita ( entitam.findByCod ( codiceEnt ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } evento.setTipoEvento ( tipoevm.findByCod ( codiceTipi ) ) ; evento.setTag ( tag ) ; return eventom.save ( evento ) ; } 
public void setMessage ( com.waz.api.Message message, com.waz.zclient.pages.main.conversation.views.row.separator.Separator separator ) { setUnreadDot ( separator ) ; setUserName ( message, separator ) ; setTimestamp ( separator ) ; setPadding ( message, separator ) ; try { showRecalledGlyph ( separator ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( message.isEdited () ) { messageEditedGlyph.setVisibility ( View.VISIBLE ) ; } else { messageEditedGlyph.setVisibility ( View.GONE ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/doedit", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editComplete ( org.springframework.ui.Model model, com.monstarlab.domain.form.EmployeeInfoInputForm employeeInfoForm, org.springframework.validation.BindingResult bindingResult, org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { com.monstarlab.domain.model.Employee employee = employeeInfoForm.getEmployee () ; try { employee.setBirthdate ( convertToDate ( employeeInfoForm.getBirthdate () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } employeeService.update ( employeeInfoForm.getEmployee () ) ; return "redirect:/"; } 
public void createDemoDataPomodoro () throws java.io.IOException { persistLearningOppInst ( "{'institutionId':'pomodoro.university.it','credits':'5'}", getLearningOppSpec ( "PU001" ) , getAcademicTerm ( getAcademicYear ( "2016", "2017" ) , "Fall" ) ) ; try { persistLearningOppInst ( "{'institutionId':'pomodoro.university.it','credits':'7.5'}", getLearningOppSpec ( "PU002" ) , getAcademicTerm ( getAcademicYear ( "2016", "2017" ) , "Spring" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void changed ( com.couchbase.lite.LiveQuery.ChangeEvent event ) { try { if ( ( event.getError () ) != null ) { throw new java.lang.RuntimeException ( event.getError () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( event.getRows () .getCount () ) == 2 ) { countDownLatch.countDown () ; } } 
private com.graphhopper.routing.util.FlagEncoder getEncoder ( java.lang.String name, boolean throwExc ) { for ( com.graphhopper.routing.util.FlagEncoder encoder : edgeEncoders ) { if ( name.equalsIgnoreCase ( encoder.toString () ) ) return encoder; } try { if ( throwExc ) throw new java.lang.IllegalArgumentException ( ( ( ( "Encoder for " + name ) + " not found. Existing: " ) + ( toDetailsString () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion ) { db.execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.routes.dropTable () ) ; db.execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.goals.dropTable () ) ; try { db.execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.notes.dropTable () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } db.execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.locations.dropTable () ) ; db.execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.settings.dropTable () ) ; onCreate ( db ) ; } 
public void selectPatient ( java.lang.String Patient ) { org.openqa.selenium.WebElement lastElement = null; try { for ( org.openqa.selenium.WebElement patient : patient_list ) { if ( ( patient.findElement ( org.openqa.selenium.By.cssSelector ( ".patient-id" ) ) .getText () .contains ( Patient ) ) || ( patient.findElement ( org.openqa.selenium.By.cssSelector ( ".patient-name" ) ) .getText () .contains ( Patient ) ) ) { lastElement = patient; } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( lastElement != null ) lastElement.click () ; return; } 
public void testMafiosoGettingReinsertedIntoOoO () { shared.logic.Player driver = addPlayer ( shared.logic.templates.BasicRoles.BusDriver () ) ; shared.logic.Player maf = addPlayer ( shared.logic.templates.BasicRoles.Mafioso () ) ; shared.logic.Player doc = addPlayer ( shared.logic.templates.BasicRoles.Doctor () ) ; shared.logic.Player cit = addPlayer ( shared.logic.templates.BasicRoles.Citizen () ) ; driver.isCharged = maf.isCharged = true; try { drive ( driver, maf, cit ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mafKill ( maf, doc ) ; setTarget ( doc, cit ) ; endNight () ; isDead ( driver, doc ) ; isAlive ( maf ) ; } 
public static java.lang.String setLetters ( java.lang.String fullName ) { java.lang.String[] names = fullName.split ( " " ) ; java.lang.String letters = ""; try { for ( int i = 0; i < ( names.length ) ; i++ ) { if ( i == 2 ) break; letters += names[i].charAt ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return letters.toUpperCase () ; } 
@ java.lang.Override public void execute ( com.prey.actions.observer.ActionJob actionJob, android.content.Context ctx ) { com.prey.PreyConfig preyConfig = com.prey.PreyConfig.getPreyConfig ( ctx ) ; try { if ( preyConfig.isFroyoOrAbove () ) { preyConfig.setLock ( true ) ; com.prey.backwardcompatibility.FroyoSupport.getInstance ( ctx ) .changePasswordAndLock ( getConfig () .get ( "unlock_pass" ) , true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addStudentWithId ( int id ) { try { for ( edu.virginia.bookmark.Team team : teams ) { if ( team.containsStudentWithId ( id ) ) { java.lang.System.out.println ( ( "Adding a Student From Team " + ( team.getName () ) ) ) ; if ( ( activeTurnTeamId ) < 0 ) { activeTurnTeamId = team.id; } clearUpToDateStatus () ; return; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void generateMenus ( java.util.List<com.progressoft.jip.ui.xml.element.MenuXml> meuns ) { try { for ( com.progressoft.jip.ui.xml.element.MenuXml menuXml : meuns ) { com.progressoft.jip.ui.menu.Menu<T> generatedMenu = generateNewMenu ( menuXml.getDescription () , menuXml.getActionId () , menuXml.getSubMenuId () ) ; loadedMenus.put ( menuXml.getMenuId () , generatedMenu ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void onPostExecute ( java.lang.Integer result ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner.setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button.setVisibility ( View.VISIBLE ) ; try { cart.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } postNotification ( "Your meal will be prepared!" ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup viewGroup, android.os.Bundle savedInstanceState ) { android.view.View view = inflater.inflate ( R.layout.fragment_blackboard_overview, viewGroup, false ) ; try { wipraktikum.informationwallandroidapp.Utils.NotificationHelper.getInstance () .setOnNotificationReceiveListener ( new wipraktikum.informationwallandroidapp.Utils.NotificationHelper.OnNotificationReceiveListener () { @java.lang.Override public void onNotificationReceive () { blackBoardExpandableListViewAdapter.notifyDataSetChanged () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
private void handleSignInResult ( com.google.android.gms.auth.api.signin.GoogleSignInResult result ) { try { android.util.Log.d ( com.ishaan.todolist.Login.TAG, ( "handleSignInResult:" + ( result.isSuccess () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( result.isSuccess () ) { com.google.android.gms.auth.api.signin.GoogleSignInAccount acct = result.getSignInAccount () ; android.util.Log.d ( com.ishaan.todolist.Login.TAG, acct.getEmail () ) ; updateUI ( true ) ; } else { updateUI ( false ) ; } } 
private boolean addToLocalActiveView ( java.net.InetAddress peer ) { if ( localDatacenterView.contains ( peer ) ) return false; try { localDatacenterView.addLast ( peer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( localDatacenterView.size () ) > ( endpointStateSubscriber.fanout ( datacenter, datacenter ) ) ) expungeNode ( localDatacenterView.removeFirst () , datacenter ) ; return true; } 
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Integer> tenMinLanguageMap ) { try { for ( java.lang.String languageName : tenMinLanguageMap.keySet () ) { int languageRepeatedInThisHour = 0; int languageRepeatedInTenMins; if ( languageMap.containsKey ( languageName ) ) { languageRepeatedInThisHour = languageMap.get ( languageName ) ; } languageRepeatedInTenMins = tenMinLanguageMap.get ( languageName ) ; languageMap.put ( languageName, ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.test.suitebuilder.annotation.SmallTest public void testDeleteOfflinePage () throws java.lang.Exception { deletePage ( org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID, DeletePageResult.SUCCESS ) ; loadUrl ( mTestPage ) ; try { savePage ( SavePageResult.SUCCESS, mTestPage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertNotNull ( "Offline page should be available, but it is not.", getPageByClientId ( org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID ) ) ; deletePage ( org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID, DeletePageResult.SUCCESS ) ; assertNull ( "Offline page should be gone, but it is available.", getPageByClientId ( org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID ) ) ; } 
private boolean containsLinkedResource ( java.util.List<org.eclipse.core.resources.IResource> resources ) { try { for ( int i = 0; i < ( resources.size () ) ; i++ ) { org.eclipse.core.resources.IResource resource = resources.get ( i ) ; if ( resource.isLinked () ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onClick ( android.view.View view ) { kobeissidev.autobirthday.Settings.loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast.makeText ( getApplicationContext () , "Contacts are loaded!", Toast.LENGTH_SHORT ) ; try { toast.show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setResult ( 0 ) ; finish () ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks.clear () ; if ( ( dataSnapshot.getValue () ) != null ) { for ( com.google.firebase.database.DataSnapshot taskSnapshot : dataSnapshot.getChildren () ) { edu.uw.dengz6.checkmate.TaskData task = taskSnapshot.getValue ( edu.uw.dengz6.checkmate.TaskData.class ) ; if ( ! ( task.isCompleted ) ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks.add ( task ) ; } } } adapter.notifyDataSetChanged () ; try { progressDialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void validate () { if ( ( ! ( containsMacro ( format ) ) ) && ( ! ( co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS.contains ( format ) ) ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String.format ( "Invalid format '%s'. Must be one of %s", format, com.google.common.base.Joiner.on ( ',' ) .join ( co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS ) ) ) ; } try { getSchema () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onBellSound ( final java.lang.String playerId ) { cwa115.trongame.Map.Player remotePlayer = ( ( cwa115.trongame.Map.Player ) ( map.getItemById ( playerId ) ) ) ; try { remotePlayer.setCustomMarker ( R.mipmap.bell_marker ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } new android.os.Handler () .postDelayed ( new java.lang.Runnable () { @java.lang.Override public void run () { cwa115.trongame.Map.Player me = ( ( cwa115.trongame.Map.Player ) ( map.getItemById ( playerId ) ) ) ; me.resetMarker () ; } }, 3000 ) ; } 
public boolean editCommand ( java.lang.String modType, java.lang.String newValue, me.krickl.memebotj.User.UserHandler sender ) { if ( ( commandHandler ) == null ) { } boolean success = false; try { success = commandHandler.editCommand ( modType, newValue, sender ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } commandName = commandHandler.getCommandName () ; return success; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_results ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion ) { db.execSQL ( com.example.mbodziony.datecounter.DatabaseManager.DB_DROP_DATECOUNTERS_TABLE ) ; android.util.Log.d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG, "Database updating..." ) ; try { android.util.Log.d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG, ( ( ( ( ( "Table " + ( com.example.mbodziony.datecounter.DatabaseManager.DB_DATECOUNTERS_TABLE ) ) + " updated from ver. " ) + oldVersion ) + " to ver. " ) + newVersion ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG, "All data is lost!" ) ; onCreate ( db ) ; } 
@ java.lang.Override public void onAuthStateChanged ( @android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { com.google.firebase.auth.FirebaseUser user = firebaseAuth.getCurrentUser () ; try { if ( user != null ) { if ( LOGGING ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration.setLogged ( true ) ; it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration.setUser ( user.getEmail () ) ; android.support.design.widget.Snackbar.make ( getView () , getResources () .getString ( R.string.logged_in ) , Snackbar.LENGTH_LONG ) .show () ; activity.checkLogged () ; LOGGING = false; activity.onBackPressed () ; } else { activity.onBackPressed () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void registerEvents () { try { org.bukkit.Bukkit.getPluginManager () .registerEvents ( ( this.laserGun = new ml.lasertag.minigame.Mechanics.LaserGun ( this ) ) , this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.bukkit.Bukkit.getPluginManager () .registerEvents ( new ml.lasertag.minigame.Mechanics.PlayerJoin ( this ) , this ) ; org.bukkit.Bukkit.getPluginManager () .registerEvents ( new ml.lasertag.minigame.Mechanics.PlayerChat ( this ) , this ) ; org.bukkit.Bukkit.getPluginManager () .registerEvents ( new ml.lasertag.minigame.GameManager.ArenaSelector ( this ) , this ) ; org.bukkit.Bukkit.getPluginManager () .registerEvents ( new ml.lasertag.minigame.Mechanics.Restrictions () , this ) ; } 
@ java.lang.Override public hudson.model.ParameterDefinition copyWithDefaultValue ( hudson.model.ParameterValue defaultValue ) { try { if ( defaultValue instanceof com.cloudbees.plugins.credentials.CredentialsParameterValue ) { com.cloudbees.plugins.credentials.CredentialsParameterValue value = ( ( com.cloudbees.plugins.credentials.CredentialsParameterValue ) ( defaultValue ) ) ; return new com.cloudbees.plugins.credentials.CredentialsParameterDefinition ( getName () , getDescription () , value.getValue () , getCredentialType () , isRequired () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ org.junit.Test ( expected = java.lang.RuntimeException.class ) public void testBorrowOnLoan () { library.entities.Loan loan = new library.entities.Loan () ; library.entities.Loan otherLoan = new library.entities.Loan () ; library.entities.Book book = new library.entities.Book ( "Available", "Available", "Available", 10 ) ; book.borrow ( loan ) ; try { book.borrow ( otherLoan ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void loadAddReview () { try { if ( prefs.getBoolean ( Constants.IS_LOGGED_IN, false ) ) { android.content.Intent intent = new android.content.Intent ( this, com.syntaxplayground.foodtruckr.activities.AddReviewActivity.class ) ; startActivity ( intent ) ; } else { android.content.Intent intent = new android.content.Intent ( this, com.syntaxplayground.foodtruckr.activities.LoginActivity.class ) ; android.widget.Toast.makeText ( getBaseContext () , "Please login to leave a review", Toast.LENGTH_SHORT ) .show () ; startActivity ( intent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void verifyVisibility ( @javax.annotation.Nonnull final edu.umd.cs.findbugs.ba.XMethod invokedMethod ) { try { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { final edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this, "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING", HIGH_PRIORITY ) ; bug.addCalledMethod ( this ) .addClassAndMethod ( this ) .addSourceLine ( this ) ; bugReporter.reportBug ( bug ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void toggle ( boolean toggle ) { int color; try { if ( toggle ) { color = mActiveColor; } else { color = android.support.v4.content.res.ResourcesCompat.getColor ( getResources () , R.color.defaultNotActiveCircle, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mDrawable.setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } 
@ java.lang.Override protected java.lang.Object doInBackground ( java.lang.Object[] objects ) { java.lang.String methodName = "insertPersonDetails"; webService = new com.idbi.app.network.SOAPWebservice ( mContext ) ; com.idbi.app.model.Output object = null; getNomineeData () ; try { if ( ( ( nomineeDetailsList ) != null ) && ( ( nomineeDetailsList.size () ) > 0 ) ) { for ( int i = 0; i < ( nomineeDetailsList.size () ) ; i++ ) { object = webService.insertUpdatePersonalDetails ( nomineeDetailsList.get ( i ) , methodName ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return object; } 
@ java.lang.Override public void render ( float delta ) { batch.begin () ; gameOverSprite.draw ( batch ) ; try { batch.end () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( Gdx.input.isKeyJustPressed ( Keys.SPACE ) ) { game.setScreen ( new com.running.game.screens.InstructionsScreen ( game ) ) ; } } 
@ java.lang.Override public jkind.lustre.Ast caseEnumTypeDef ( com.rockwellcollins.spear.translate.lustre.com.rockwellcollins.spear.EnumTypeDef etd ) { java.lang.String newName = mapping.get ( etd.getName () ) ; java.util.List<java.lang.String> values = new java.util.ArrayList<> () ; try { for ( com.rockwellcollins.spear.EnumValue ev : etd.getValues () ) { values.add ( mapping.get ( ev.getName () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new jkind.lustre.TypeDef ( newName, new jkind.lustre.EnumType ( newName, values ) ) ; } 
public static final java.lang.String getLang ( omnikryptec.lang.Language language, java.lang.String key, java.lang.String defaultValue ) { if ( language == null ) { return defaultValue; } try { if ( omnikryptec.lang.LanguageManager.isCollecting ) { omnikryptec.lang.LanguageManager.languageDefault.put ( key, defaultValue ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return language.getProperty ( key, defaultValue ) ; } 
@ java.lang.Override public int compare ( org.openlmis.referencedata.dto.ProcessingPeriodDto o1, org.openlmis.referencedata.dto.ProcessingPeriodDto o2 ) { try { if ( "startDate".equals ( compareCondition ) ) { return o1.getStartDate () .compareTo ( o2.getStartDate () ) ; } else { throw new org.openlmis.referencedata.exception.ValidationMessageException ( new org.openlmis.referencedata.util.Message ( org.openlmis.referencedata.util.messagekeys.ProcessingPeriodMessageKeys.ERROR_INVALID_SORTING_COLUMN, compareCondition ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setOverlay ( java.io.File overlay ) { try { if ( overlay != null ? ! ( overlay.equals ( this.overlay ) ) : ( this.overlay ) == null ) { java.io.File oldOverlay = this.overlay; this.overlay = overlay; dirty = true; propertyChangeSupport.firePropertyChange ( "overlay", oldOverlay, overlay ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void performancesChanged ( java.lang.String connId, int exchangesCompleted ) { long duration = ( java.lang.System.currentTimeMillis () ) - ( startTime ) ; final org.talend.core.model.process.IConnection conn = traceConnectionsManager.finConnectionByUniqueName ( connId ) ; final org.talend.core.model.runprocess.data.PerformanceData perfData = new org.talend.core.model.runprocess.data.PerformanceData ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + duration ) ) ; try { processPerformances ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + duration ) , perfData, conn ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startTime = java.lang.System.currentTimeMillis () ; } 
public boolean setMove ( final java.awt.Color color, final int number ) { try { for ( data.Karte k : spieler.get ( activePlayer ) .getKarten () ) { if ( ( k.getFarbe () .equals ( color ) ) && ( ( k.getNummer () ) == number ) ) { if ( move ( k, spielfeld ) ) { spieler.get ( activePlayer ) .remove ( k ) ; return true; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void dragOver ( java.awt.dnd.DropTargetDragEvent e ) { java.awt.Point cursorLocationBis = e.getLocation () ; javax.swing.tree.TreePath destinationPath = getPathForLocation ( cursorLocationBis.x, cursorLocationBis.y ) ; try { if ( isDroppable ( selectedTreePath, destinationPath ) ) { e.acceptDrag ( java.awt.dnd.DnDConstants.ACTION_MOVE ) ; setCursor ( org.openflexo.gina.swing.view.widget.JFIBBrowserWidget.DnDJTree.dropOK ) ; } else { e.rejectDrag () ; setCursor ( org.openflexo.gina.swing.view.widget.JFIBBrowserWidget.DnDJTree.dropKO ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int parseRaceNumber () { int start = this.name.indexOf ( "_" ) ; int stop = this.name.indexOf ( "_", ( start + 1 ) ) ; try { if ( ( start != ( -1 ) ) && ( stop != ( -1 ) ) ) { java.lang.String sRaceNumber = this.name.substring ( ( start + 1 ) , stop ) ; this.raceNumber = java.lang.Integer.parseInt ( sRaceNumber ) ; return this.raceNumber; } else return 1; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder onCreateViewHolder ( android.view.ViewGroup parent, int viewType ) { me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder holder = PhotoPickUtils.holderGenerator.newGridViewHolder ( mContext ) ; try { if ( viewType == ( me.iwf.photopicker.adapter.PhotoGridAdapter.ITEM_TYPE_CAMERA ) ) { holder.vSelected.setVisibility ( View.GONE ) ; holder.ivPhoto.setScaleType ( ImageView.ScaleType.CENTER ) ; holder.ivPhoto.setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View view ) { if ( ( onCameraClickListener ) != null ) { onCameraClickListener.onClick ( view ) ; } } } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return holder; } 
public java.lang.String doshowValidateDetails () { try { initServletContextObject () ; } catch ( Exception ex ) { ex.printStackTrace () ; } int oneactId = java.lang.Integer.parseInt ( request.getParameter ( "actId" ) ) ; com.tu.accountingview.model.GroupActVO groupactVO = accountingviewBean.doGetAllValidateDetails ( oneactId ) ; request.setAttribute ( "act", groupactVO ) ; request.setAttribute ( "actId", oneactId ) ; return "ShowValidateDetails"; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setCaldroidListener ( new com.roomorama.caldroid.CaldroidListener () { @java.lang.Override public void onSelectDate ( java.util.Date date, android.view.View view ) { } @java.lang.Override public void onChangeMonth ( int month, int year ) { requireLoader ( org.totschnig.myexpenses.fragment.PlanMonthFragment.INSTANCES_CURSOR ) ; } @java.lang.Override public void onGridCreated ( android.widget.GridView gridView ) { ( ( org.totschnig.myexpenses.fragment.TemplatesList ) ( getParentFragment () ) ) .registerForContextualActionBar ( gridView ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; java.util.TimerTask timerTask = new java.util.TimerTask () { @java.lang.Override public void run () { finish () ; startActivity ( new android.content.Intent ( edu.orangecoastcollege.cs273.kfrederick5tmorrissey1ischenck.occstudentsuccesscenter.SplashActivity.this, edu.orangecoastcollege.cs273.kfrederick5tmorrissey1ischenck.occstudentsuccesscenter.MainActivity.class ) ) ; } }; java.util.Timer timer = new java.util.Timer () ; try { timer.schedule ( timerTask, 1000 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<Pair> remainingPair ( java.util.List<java.lang.String> remainingCandidates ) { java.util.List<Pair> remainingPairs = new java.util.ArrayList<Pair> () ; try { for ( java.lang.String s : valuesPersonMap.keySet () ) { for ( java.lang.String v : valuesPersonMap.get ( s ) ) { if ( remainingCandidates.contains ( v ) ) { remainingPairs.add ( new Pair ( attributeName, s ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return remainingPairs; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { comboText = ( ( java.lang.String ) ( Demo.getSelectedItem () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } DemoInt = Demo.getSelectedIndex () ; if ( ! ( Demo.getSelectedItem () .equals ( "No Selection" ) ) ) { filePath.setText ( ( ( java.lang.String ) ( Demo.getSelectedItem () ) ) ) ; addSelectedImg ( Demo.getSelectedIndex () ) ; } else filePath.setText ( "No Item Selected" ) ; } 
private void addRecord ( java.lang.String key, T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger.info ( "adding unique key {} ", key ) ; org.kisst.item4j.ImmutableSequence<T> oldList = map.get ( key ) ; try { if ( oldList == null ) map.put ( key, org.kisst.item4j.ImmutableSequence.of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList.contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence<T> newList = oldList.growTail ( newRecord ) ; map.put ( key, newList ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; try { switch ( requestCode ) { case 10: if ( ( resultCode == ( android.app.Activity.RESULT_OK ) ) && ( data != null ) ) { java.util.ArrayList<java.lang.String> result = data.getStringArrayListExtra ( RecognizerIntent.EXTRA_RESULTS ) ; commandText.setText ( result.get ( 0 ) ) ; new mohz.m13.wicompanion.CommandFragment.SendText () .execute ( result.get ( 0 ) ) ; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void nextLevel () throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException { net.liquidpineapple.pang.gui.Board currentBoard = net.liquidpineapple.pang.Application.getBoard () ; net.liquidpineapple.pang.screens.Screen newScreen = null; if ( currentBoard.getLevels () .hasNext () ) { newScreen = ( ( net.liquidpineapple.pang.screens.Screen ) ( currentBoard.getLevels () .next () ) ) ; } else { newScreen = new net.liquidpineapple.pang.screens.WinScreen () ; } try { currentBoard.changeScreen ( newScreen ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateStatus ( int trackToPlay, int status, int position ) { try { if ( ! ( trackBeans.isEmpty () ) ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans.get ( trackToPlay ) ; tmp.status = status; tmp.position = position; trackBeans.set ( trackToPlay, tmp ) ; android.util.Log.d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG, ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBitmapFailed ( android.graphics.drawable.Drawable errorDrawable ) { if ( ( errorDrawable != null ) && ( com.layer.ui.util.Log.isLoggable ( com.layer.ui.util.Log.VERBOSE ) ) ) { com.layer.ui.util.Log.v ( ( "onBitMapFailed :" + errorDrawable ) ) ; } try { bitmapWrapper.setBitmap ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } callback.onFailure () ; mTargets.remove ( this ) ; } 
@ java.lang.Override public void produceText ( de.is2.ZZZZZnake.ZZZZZnake znake ) { if ( ( znake.getLoopCount () ) < 1 ) { startMessages ( znake ) ; } if ( ( znake.isVictory () ) == true ) { victory ( znake ) ; } try { if ( ( znake.isDead () ) == true ) { death ( znake ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( znake.isRich () ) == true ) && ( ( znake.getLoopCountAfterGoldGet () ) <= 1 ) ) { goldGet ( znake ) ; } } 
@ java.lang.Override public javax.servlet.ServletInputStream getInputStream () throws java.io.IOException { try { synchronized ( this ) { if ( ( inputStream ) == null ) { if ( ( streamLimit ) <= 0 ) { inputStream = new org.openrepose.commons.utils.io.BufferedServletInputStream ( super.getInputStream () ) ; } else { inputStream = new org.openrepose.commons.utils.io.BufferedServletInputStream ( new org.openrepose.commons.utils.io.stream.LimitedReadInputStream ( streamLimit, super.getInputStream () ) ) ; } } return inputStream; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void postQueue ( com.jme3.renderer.queue.RenderQueue renderQueue ) { DeferredRenderManager.renderOpaqueQueue ( gBuffer, renderManager, viewPort, renderQueue ) ; lightManager.render ( gBuffer, renderManager, viewPort ) ; postDeferredManager.render ( gBuffer, renderManager, viewPort, renderQueue ) ; postDeferredManager.renderSkyQueue ( renderManager, viewPort, renderQueue ) ; try { postDeferredManager.renderTranslucentQueue ( renderManager, viewPort, renderQueue ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } postDeferredManager.renderDebug ( gBuffer, renderManager ) ; postDeferredManager.drawFrameOnScreen ( gBuffer, renderManager ) ; } 
@ java.lang.Override public void updateEntity () { try { if ( canGeneratePower () ) { if ( hasEnoughEnergyBuffer ( getPowerPerOperation () ) ) { if ( ! ( worldObj.isRemote ) ) this.energy.acceptEnergy ( getPowerPerOperation () , false ) ; onGeneratePower () ; } else notEnoughBufferForFunction () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( worldObj.isRemote ) ) transmitPower () ; } 
public void removeSelection ( int pos ) { android.view.View view = manager.findViewByPosition ( pos ) ; if ( view == null ) return; android.widget.TextView title = ( ( android.widget.TextView ) ( view.findViewById ( R.id.aa_title ) ) ) ; android.widget.TextView subtitle = ( ( android.widget.TextView ) ( view.findViewById ( R.id.subtitle ) ) ) ; title.setTextColor ( Color.WHITE ) ; try { subtitle.setTextColor ( android.support.v4.content.ContextCompat.getColor ( getContext () , android.R.color.darker_gray ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = { "unchecked", "ConstantConditions" } ) public B setStart ( java.util.Date start ) { com.google.common.base.Preconditions.checkNotNull ( start, "start cannot be null" ) ; com.google.common.base.Preconditions.checkArgument ( ( ( startRelative ) == null ) , "Both relative and absolute start times cannot be set." ) ; try { this.startAbsolute = start.getTime () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( B ) ( this ) ) ; } 
public java.util.List<org.sonar.api.measures.Measure> buildFuncionMeasuresList ( double complexMean, int complexityInFunctions, org.sonar.api.measures.RangeDistributionBuilder builder ) { java.util.List<org.sonar.api.measures.Measure> list = new java.util.ArrayList<org.sonar.api.measures.Measure> () ; try { list.add ( new org.sonar.api.measures.Measure ( org.sonar.api.measures.CoreMetrics.COMPLEXITY_IN_FUNCTIONS ) .setIntValue ( complexityInFunctions ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } list.add ( builder.build () .setPersistenceMode ( PersistenceMode.MEMORY ) ) ; return list; } 
public void setup () { try { if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.NonStandardSPARQL ) ) { lupos.sparql1_1.operatorgraph.ServiceApproaches.setNonStandardSPARQLBitVectorJoin ( true ) ; } else { lupos.sparql1_1.operatorgraph.ServiceApproaches.setNonStandardSPARQLBitVectorJoin ( false ) ; if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.Value ) ) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SemiJoinToStringHelper.class; } else if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.ValueSubstring ) ) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SubstringValueToStringHelper.class; } else { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.BitVectorJoinToStringHelper.class; lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.hashFunction = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.HASHFUNCTION.values () [this.ordinal () ]; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void clickRenameLibrary ( javafx.event.ActionEvent actionEvent ) { newLibraryTitle = textFieldForNewLibraryTitle.getText () ; try { if ( newLibraryTitle.equals ( oldLibraryTitle ) ) { com.devprosony.Main.stdOut.println ( "newLibraryTitle = oldLibraryTitle" ) ; } else { com.devprosony.Main.stdOut.println ( ( "newLibraryTitle: " + ( newLibraryTitle ) ) ) ; renameLibraryTitle ( oldLibraryTitle, newLibraryTitle ) ; dialogRenameLibraryStage.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int getLastPosition () { if ( ( ( mGridView ) == null ) || ( ( postsIds ) == null ) ) { return 0; } int firstPos = mGridView.getFirstVisiblePosition () ; try { if ( ( firstPos >= 0 ) && ( firstPos < ( postsIds.size () ) ) ) { return postsIds.get ( firstPos ) ; } else { return 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void whenProjectListIsEmptyReturnAnEmptyList () { when ( projectPaginatedScanList.stream () ) .thenReturn ( java.util.stream.Stream.empty () ) ; java.util.List<com.romcharm.domain.mypage.Project> orderedList = projectsRepository.getProjects () ; try { org.hamcrest.MatcherAssert.assertThat ( orderedList, is ( empty () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deleteAllPolyElements () { final android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; final java.util.List<io.github.data4all.model.data.PolyElement> pEs = this.getAllPolyElements () ; for ( io.github.data4all.model.data.PolyElement pE : pEs ) { for ( io.github.data4all.model.data.Node n : pE.getNodes () ) { this.deleteNodeByID ( n.getOsmId () ) ; } } try { db.delete ( io.github.data4all.handler.DataBaseHandler.TABLE_POLYELEMENT, null, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void createAccountsAndFinish () { org.gnucash.android.ui.account.AccountsActivity.removeFirstRunFlag () ; try { if ( mAccountOptions.equals ( getString ( R.string.wizard_option_create_default_accounts ) ) ) { java.lang.String bookUID = org.gnucash.android.db.adapter.BooksDbAdapter.getInstance () .getActiveBookUID () ; org.gnucash.android.ui.account.AccountsActivity.createDefaultAccounts ( mCurrencyCode, this ) ; org.gnucash.android.db.adapter.BooksDbAdapter.getInstance () .deleteBook ( bookUID ) ; finish () ; } else if ( mAccountOptions.equals ( getString ( R.string.wizard_option_import_my_accounts ) ) ) { org.gnucash.android.ui.account.AccountsActivity.startXmlFileChooser ( this ) ; } else { org.gnucash.android.ui.account.AccountsActivity.start ( this ) ; finish () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void test_050 () { framework.common.GalleryCommon.deleteMoreGallery () ; try { framework.common.GalleryCommon.clickGallery () ; } catch ( Exception ex ) { ex.printStackTrace () ; } excute ( testcase.Object_Description, testcase.Operation_WaitForExists, "更多选项", "10000" ) ; excute ( testcase.Object_Description, testcase.Operation_ClickWait, "更多选项" ) ; excute ( testcase.Object_Text, testcase.Operation_ClickWait, "删除" ) ; excute ( testcase.Object_Text, testcase.Operation_ClickWait, "确定" ) ; check ( testcase.Object_Text, testcase.Operation_checkExist, "相机" ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.action_refresh_report_type: if ( org.cm.podd.report.util.RequestDataUtil.hasNetworkConnection ( this ) ) { progress.show () ; android.content.Intent intent = new android.content.Intent ( this, org.cm.podd.report.service.SyncReportTypeService.class ) ; startService ( intent ) ; return true; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onOptionsItemSelected ( item ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { if ( getArguments () .containsKey ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) { loadUser ( getArguments () .getString ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) ; android.app.Activity activity = this.getActivity () ; } else { loadUser ( getActivity () .getIntent () .getStringExtra ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void executePhase ( at.borkowski.scovillej.simulation.SimulationContext context ) throws java.io.IOException { if ( ! ( initialized ) ) initialize ( context ) ; try { if ( ( serverSocket.available () ) > 0 ) owner.registerClientProcessor ( new at.borkowski.scovillej.prefetch.members.server.ClientProcessor ( owner, serverSocket.accept () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected final void provision ( android.support.v4.app.Fragment fragment, java.lang.String json ) { android.os.Bundle args = new android.os.Bundle () ; args.putString ( EntityFragment.ARG_JSON, json ) ; try { args.putString ( EntityFragment.ARG_ENTITY, ( "" + ( entityType ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fragment.setArguments ( args ) ; } 
public static org.opencv.core.Mat tresholdContrastBlackWhite ( org.opencv.core.Mat image2, double d ) { final org.opencv.core.Mat imageHSV = new org.opencv.core.Mat () ; org.opencv.imgproc.Imgproc.cvtColor ( image2, imageHSV, Imgproc.COLOR_BGR2HSV ) ; final org.opencv.core.Mat imageThresholded = new org.opencv.core.Mat () ; try { org.opencv.core.Core.inRange ( imageHSV, new org.opencv.core.Scalar ( 160, 70, 169 ) , new org.opencv.core.Scalar ( 179, 90, 179 ) , imageThresholded ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final org.opencv.core.Mat result = new org.opencv.core.Mat () ; imageThresholded.convertTo ( result, CvType.CV_8UC3 ) ; return result; } 
@ org.junit.Test public void testOneFloor () throws PathNotFoundException { SubPath expected = new SubPath ( "A" ) ; expected.path.add ( A1 ) ; try { expected.path.add ( A2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.ArrayList<SubPath> expSubPath = new java.util.ArrayList<> () ; expSubPath.add ( expected ) ; assertEquals ( "Sub path should be one floor", expSubPath, map.getPathByFloor ( A1, A2 ) ) ; } 
public void open () { open = true; for ( com.ezardlabs.dethsquare.GameObject piece : pieces ) { piece.setActive ( true ) ; } for ( com.ezardlabs.dethsquare.GameObject highlight : highlights ) { highlight.setActive ( false ) ; } for ( com.ezardlabs.dethsquare.GameObject text : texts ) { text.setActive ( true ) ; } try { com.ezardlabs.dethsquare.Time.pause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void enqueue ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException ( "the item to enqueue is null" ) ; } try { if ( ( N ) == ( q.length ) ) { resize ( ( 2 * ( q.length ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } q[ ( ( N ) ++ ) ] = item; } 
public static javax.swing.JMenuItem createJMenuItem ( java.lang.String name, java.lang.String description, javax.swing.KeyStroke keyStroke ) { javax.swing.JMenuItem comp = new javax.swing.JMenuItem ( name ) ; try { if ( keyStroke != null ) comp.setAccelerator ( keyStroke ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( description != null ) comp.setToolTipText ( description ) ; comp.setFont ( new java.awt.Font ( java.awt.Font.SANS_SERIF, java.awt.Font.BOLD, 14 ) ) ; com.tri.pgs.client.surface.ui.UISystem.init ( comp, false, false ) ; return comp; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int index = 0; try { for ( int i = 1; i < ( day ) ; i++ ) index += ( getItinerarySizeByDay ( getContext () , i ) ) - 1; } catch ( Exception ex ) { ex.printStackTrace () ; } final int indexToAssign = index; uz.samtuit.samapp.helpers.ItineraryHelper.addNewItemFromItinerary ( getFragmentManager () , day, indexToAssign ) ; } 
@ java.lang.Override public void onBindViewHolder ( com.closestudios.bro.util.BroViewAdapter.ViewHolder holder, int position ) { holder.flBackdrop.setBackgroundColor ( holder.flBackdrop.getContext () .getResources () .getColor ( colors[ ( position + ( ( colorOffset ) % ( colors.length ) ) ) ] ) ) ; try { holder.tvHeader.setText ( mDataset[position].getHeader () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } holder.tvDetails.setText ( mDataset[position].getDetails ( holder.tvDetails.getContext () ) ) ; } 
public void createLand ( java.lang.String owner, int[] start, int[] end, int size, java.lang.String world ) { try { sql.createLand ( owner, start[0], start[1], end[0], end[1], size, world ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void enterChatRoom ( java.lang.String roomName ) throws java.io.IOException { this.requestToServer.writeObject ( new Message ( MessageType.EnterTopic, null, null, roomName ) ) ; this.requestToServer.flush () ; try { if ( ( this.enteredRoom.contains ( roomName ) ) == false ) this.enteredRoom.add ( roomName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testTfMapCalculation () throws java.io.IOException, java.lang.InterruptedException { java.util.Map<java.lang.String, java.lang.Double> tfMap1 = tfidf.TfidfUtils.getTfMap ( tfidf.TfidfUtils.getWordsArrayOfContent ( doc1Content ) ) ; java.util.Map<java.lang.String, java.lang.Double> tfMap2 = tfidf.TfidfUtils.getTfMap ( tfidf.TfidfUtils.getWordsArrayOfContent ( doc2Content ) ) ; try { org.junit.Assert.assertEquals ( doc1ExpectedTfMap, tfMap1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( doc2ExpectedTfMap, tfMap2 ) ; } 
public void indexJumpDown () { try { if ( ( ( currentItemIndex ) + ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ) > ( ( list.size () ) - 1 ) ) { currentItemIndex = ( currentItemIndex ) % ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ; } else { currentItemIndex = ( currentItemIndex ) + ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void listItems () { try { for ( int I = 0; I < ( MainGame.items.length ) ; I++ ) { if ( ( ( MainGame.itemDescrStrings[I] ) != null ) && ( ( MainGame.items[I] ) != 0 ) ) java.lang.System.out.println ( ( ( ( "Item " + ( MainGame.items[I] ) ) + ": " ) + ( MainGame.itemDescrStrings[I] ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setShowOriginal ( boolean b ) { if ( b ) { if ( ( state ) == ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ) { return; } setState ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ; } else { if ( ( state ) == ( pixelitor.layers.ImageLayer.State.PREVIEW ) ) { return; } setState ( pixelitor.layers.ImageLayer.State.PREVIEW ) ; } try { comp.imageChanged ( pixelitor.Composition.ImageChangeActions.REPAINT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void delAll ( java.util.Collection<? extends com.caberodev.squarearmy.worldobjects.WorldObject> c ) { try { for ( com.caberodev.squarearmy.worldobjects.WorldObject o : c ) { for ( java.lang.String key : com.caberodev.squarearmy.util.ListLinker.links.get ( o ) ) { java.util.ArrayList<com.caberodev.squarearmy.worldobjects.WorldObject> list = com.caberodev.squarearmy.util.ListLinker.linker.get ( key ) ; list.remove ( o ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> _findExplicitUntypedSerializer ( java.lang.Class<?> runtimeType ) throws com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = _knownSerializers.untypedValueSerializer ( runtimeType ) ; try { if ( ser == null ) { ser = _serializerCache.untypedValueSerializer ( runtimeType ) ; if ( ser == null ) { ser = _createAndCacheUntypedSerializer ( runtimeType ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( isUnknownTypeSerializer ( ser ) ) { return null; } return ser; } 
public void shutdown () { try { if ( ( sendSystem ) != null ) { sendSystem.shutdown () ; sendSystem = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( receiveThread ) != null ) { receiveThread.interrupt () ; receiveThread = null; } if ( ( combinedAudioExecutor ) != null ) { combinedAudioExecutor.shutdownNow () ; combinedAudioExecutor = null; } } 
@ java.lang.Override public void onClick ( boolean b ) { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW, android.net.Uri.parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog.open ( this, config.privacyHtmlPath, getString ( R.string.egab_privacy_policy ) ) ; } try { if ( ( config.analytics ) != null ) { config.analytics.logUiEvent ( config.logUiEventName, getString ( R.string.egab_privacy_log_event ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected org.andengine.entity.scene.Scene onCreateScene () { mScene = new org.andengine.entity.scene.Scene () ; mBackground = new org.andengine.entity.scene.background.Background ( 0, 0, 0, 1 ) ; mScene.setBackground ( mBackground ) ; mBackground = new org.andengine.entity.scene.background.Background ( 0, 0, 0, 1 ) ; try { mScene.setBackground ( mBackground ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return mScene; } 
public boolean checkAnyMarker ( antgameproject.Pos markerPos, antgameproject.Colour markerCol ) { try { for ( antgameproject.Colour col : antgameproject.Colour.values () ) { if ( markerCol == col ) { return ( board[markerPos.getPosY () ][markerPos.getPosX () ].getMarker ( col ) ) != null; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public java.lang.Object intercept ( cn.dreampie.route.core.RouteInvocation ri ) { cn.dreampie.common.http.HttpRequest request = ri.getRouteMatch () .getRequest () ; cn.dreampie.common.http.HttpResponse response = ri.getRouteMatch () .getResponse () ; cn.dreampie.route.interceptor.security.Session oldSession = sessionBuilder.in ( request ) ; cn.dreampie.route.interceptor.security.Subject.check ( request.getHttpMethod () , request.getRestPath () ) ; java.lang.Object result = ri.invoke () ; try { sessionBuilder.out ( oldSession, response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sessionBuilder.buildSessionMetadata ( request, oldSession ) ; return result; } 
private static void createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection, org.nd4j.linalg.api.ndarray.INDArray data, int offset, java.lang.String name ) { int nRows = data.shape () [2]; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; try { for ( int i = 0; i < nRows; i++ ) { series.add ( ( i + offset ) , data.getDouble ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } seriesCollection.addSeries ( series ) ; } 
public void checkAllowsDeployment ( org.carlspring.strongbox.storage.repository.Repository repository ) throws org.carlspring.strongbox.storage.ArtifactStorageException { try { if ( ( ( ! ( repository.allowsDeployment () ) ) || ( RepositoryTypeEnum.GROUP.getType () .equals ( repository.getType () ) ) ) || ( RepositoryTypeEnum.PROXY.getType () .equals ( repository.getType () ) ) ) { throw new org.carlspring.strongbox.storage.ArtifactStorageException ( ( ( "Deployment of artifacts to " + ( repository.getType () ) ) + " repositories is not allowed!" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void refreshMonthView ( int position ) { com.othershe.calendarview.MonthView monthView = calendarPagerAdapter.getViews () .get ( position ) ; try { if ( ( itemChooseListener ) != null ) { if ( ( chooseDate.get ( position ) ) != null ) monthView.multiChooseRefresh ( chooseDate.get ( position ) ) ; } else { monthView.refresh ( lastClickedDay ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<com.ibm.prolaeoc.model.Badge> listReception ( java.lang.String handbag ) { handbag = handbag.toUpperCase () ; javax.persistence.EntityManager em = new com.ibm.prolaeoc.DAO.JPAUtil () .getEntityManager () ; javax.persistence.TypedQuery<com.ibm.prolaeoc.model.Badge> query = em.createQuery ( "from Badge where handbag=:phandbag and status=:pstatus ", com.ibm.prolaeoc.model.Badge.class ) ; try { query.setParameter ( "phandbag", handbag ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } query.setParameter ( "pstatus", "SentToReception" ) ; return query.getResultList () ; } 
@ java.lang.Override public E previous () { try { if ( ( this.previous ) != null ) { this.next = this.previous; this.previous = this.previous.getPrevious () ; this.lastReturned = this.next.get () ; ( this.index ) --; return this.next.get () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private int findComponentStart ( int findFrom, com.epam.java.rt.lab.parser.service.Type type ) { java.util.regex.Matcher matcher = ruler.getTypeRulePatternStart ( type ) .matcher ( this.source ) ; try { if ( ! ( matcher.find ( findFrom ) ) ) return -1; } catch ( Exception ex ) { ex.printStackTrace () ; } return matcher.start () ; } 
public static synchronized org.apache.sqoop.submission.spark.YarnSqoopSparkClient getInstance ( java.util.Map<java.lang.String, java.lang.String> conf ) { try { if ( ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client ) == null ) { java.lang.System.setProperty ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.YARN_MODE, "true" ) ; org.apache.spark.SparkConf sparkConf = org.apache.sqoop.submission.spark.SqoopSparkClientFactory.generateSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.yarnConfig = org.apache.sqoop.submission.spark.YarnSqoopSparkClient.generateYarnSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client = new org.apache.sqoop.submission.spark.YarnSqoopSparkClient ( sparkConf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.clientArgs = new org.apache.spark.deploy.yarn.ClientArguments ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.args, sparkConf ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client; } 
private void addPlayer ( int id, int x, int y ) { boolean flag = true; try { for ( player.Player foo : players ) { if ( ( foo.getID () ) == id ) { flag = false; foo.set ( x, y ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( flag ) { players.add ( new player.Player ( id ) ) ; } } 
private void quiteLiveByPurpose () { try { if ( ( com.tencent.qcloud.suixinbo.model.MySelfInfo.getInstance () .getIdStatus () ) == ( com.tencent.qcloud.suixinbo.utils.Constants.HOST ) ) { if ( ( backDialog.isShowing () ) == false ) backDialog.show () ; } else { mLiveHelper.perpareQuitRoom ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void newGame () { frame = new se2aa4.morris.Frame () ; state = State.IN_PROGRESS; sel = Location.NONE; blueMillExists = false; redMillExists = false; redInventory = true; blueInventory = true; moved = false; removed = false; try { randTurn () ; } catch ( Exception ex ) { ex.printStackTrace () ; } randCpuPlayer () ; createRestorePoint () ; if ( ( turn ) == ( cpuPlayer ) ) { cpuMove () ; endTurn () ; } } 
@ org.junit.Test public void testSignMultiApkWithZipalign () throws java.lang.Exception { java.util.List<java.io.File> uApks = at.favre.tools.apksigner.SignToolTest.copyToTestPath ( originalFolder, unsingedApks ) ; java.lang.String cmd = ( ( ( ( ( ( ( "-" + ( at.favre.tools.apksigner.ui.CLIParser.ARG_APK_FILE ) ) + " " ) + ( originalFolder.getAbsolutePath () ) ) + " -" ) + ( at.favre.tools.apksigner.ui.CLIParser.ARG_APK_OUT ) ) + " " ) + ( outFolder.getAbsolutePath () ) ) + " --debug"; try { at.favre.tools.apksigner.SignToolTest.testAndCheck ( cmd, originalFolder, outFolder, uApks ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super.onSaveInstanceState ( outState ) ; outState.putLong ( org.tasks.ui.GoogleTaskListFragment.EXTRA_TASK_ID, taskId ) ; if ( ( originalList ) != null ) { outState.putParcelable ( org.tasks.ui.GoogleTaskListFragment.EXTRA_ORIGINAL_LIST, originalList.getStoreObject () ) ; } try { if ( ( selectedList ) != null ) { outState.putParcelable ( org.tasks.ui.GoogleTaskListFragment.EXTRA_SELECTED_LIST, selectedList.getStoreObject () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean play () { try { if ( this.canPlay () ) { Woo.users[ ( ( ( Woo.order ) + 1 ) % ( Woo.users.length ) ) ].draw () ; Woo.users[ ( ( ( Woo.order ) + 1 ) % ( Woo.users.length ) ) ].draw () ; java.lang.System.out.println ( "Played a Draw Two card. Next player draws two cards." ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override protected void map ( org.apache.hadoop.io.LongWritable key, org.mrgeo.geometry.Geometry value, org.mrgeo.data.geowave.vector.Context context ) throws java.io.IOException, java.lang.InterruptedException { try { context.write ( new org.apache.hadoop.io.Text ( ( "" + ( key.get () ) ) ) , new org.apache.hadoop.io.Text ( value.toString () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void updateEntity () { if ( ( ( this.getBlockMetadata () ) & ( -8 ) ) == 0 ) return; try { if ( ( ! ( this.worldObj.isRemote ) ) && ( ( occupied ) != ( ( ( this.getBlockMetadata () ) & 4 ) != 0 ) ) ) { occupied = ! ( occupied ) ; needsAnimation = true; markDirty () ; } else net.minecraft.block.BlockBed.func_149979_a ( worldObj, xCoord, yCoord, zCoord, occupied ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void handleHit ( java.lang.Package p ) { int damage = ( ( java.lang.Integer ) ( p.getPayload () ) ) ; int id = java.lang.Integer.parseInt ( p.getExtra () ) ; java.lang.System.out.println ( ( ( id + "hit " ) + ( java.lang.Math.random () ) ) ) ; try { for ( Actors.Actor a : actorQueue ) { if ( ( a.getID () ) == id ) { a.hit ( damage ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public long getRowCount ( org.apache.hadoop.mapreduce.JobContext job ) throws java.io.IOException, org.carbondata.core.carbon.datastore.exception.IndexBuilderException { long rowCount = 0; org.carbondata.core.carbon.AbsoluteTableIdentifier absoluteTableIdentifier = new org.carbondata.core.carbon.AbsoluteTableIdentifier ( getStorePathString ( job ) , org.carbondata.hadoop.CarbonInputFormat.getTableToAccess ( job ) ) ; try { for ( java.lang.String segmentNo : getValidSegments ( job ) ) { java.util.Map<java.lang.String, org.carbondata.core.carbon.datastore.block.AbstractIndex> segmentIndexMap = getSegmentAbstractIndexs ( job, absoluteTableIdentifier, segmentNo ) ; for ( org.carbondata.core.carbon.datastore.block.AbstractIndex abstractIndex : segmentIndexMap.values () ) { rowCount += abstractIndex.getTotalNumberOfRows () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return rowCount; } 
public void paintComponent ( java.awt.Graphics g ) { super.paintComponent ( g ) ; try { switch ( boydjohnson.SnakeGame.getGameStage () ) { case 1: { displayInstructions ( g ) ; break; } case 2: { displayGame ( g ) ; break; } case 3: { displayGameOver ( g ) ; break; } default: { displayGameWon ( g ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String validateControls () { if ( ( cb.getValue () ) == null ) { return "Market type is not selected"; } try { if ( ( ( marketCodeField.getText () ) == null ) || ( marketCodeField.getText () .isEmpty () ) ) { return "Market code can not be empty"; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( dataPathField.getText () ) == null ) || ( dataPathField.getText () .isEmpty () ) ) { return "The data source path can not be empty."; } return null; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/mareanoPolar_en" ) public org.springframework.web.servlet.ModelAndView getMareanoPolarEn ( javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { try { if ( ( ( mavPolarEn ) == null ) || ( ( ( java.lang.System.currentTimeMillis () ) - ( mavLastUpdatedPolarEn ) ) > ( no.imr.geoexplorer.admindatabase.controller.MareanoController.ONEHOUR ) ) ) { mavPolarEn = commonGetMareano ( resp, no.imr.geoexplorer.admindatabase.controller.MareanoController.EN, "mareanoPolar_en" ) ; mavLastUpdatedPolarEn = new java.util.Date () .getTime () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } polarConfig ( mavPolarEn ) ; return mavPolarEn; } 
public void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel, boolean bspace ) { try { this.dirtyBarrels.put ( barrel, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel.getWorldObj () .isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler.instance () .markAllDirty ( barrel.id ) ; } 
public void start () throws javax.jms.JMSException, javax.naming.NamingException { if ( ( namingContext ) != null ) { return; } namingContext = new javax.naming.InitialContext () ; javax.jms.TopicConnectionFactory tcf = ( ( javax.jms.TopicConnectionFactory ) ( namingContext.lookup ( configuration.getConnectionFactoryJndiName () ) ) ) ; org.hawkular.bus.common.ConnectionContextFactory ccf = new org.hawkular.bus.common.ConnectionContextFactory ( tcf ) ; this.messageSender = new org.hawkular.inventory.bus.MessageSender ( ccf, configuration.getInventoryChangesTopicName () ) ; try { install () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initAllCards () { cards = new java.util.Stack<> () ; try { for ( java.lang.String symbol : POSSIBLE_SYMBOLS ) { for ( int value : POSSIBLE_VALUES ) { cards.add ( new server.Card ( value, symbol ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } shuffle () ; } 
@ org.junit.Test public void not_enough_inserted_for_chips () { org.junit.Assert.assertEquals ( "INSERT COINS", vendingMachine.check_display () ) ; try { vendingMachine.insert_coin ( "Quarter" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( "$0.25", vendingMachine.check_display () ) ; org.junit.Assert.assertEquals ( "$0.00", vendingMachine.check_coin_return () ) ; org.junit.Assert.assertEquals ( "PRICE $0.50", vendingMachine.select_product ( "Chips" ) ) ; org.junit.Assert.assertEquals ( "$0.00", vendingMachine.check_coin_return () ) ; org.junit.Assert.assertEquals ( "$0.25", vendingMachine.check_display () ) ; } 
private void onClear () { try { if ( android.text.TextUtils.isEmpty ( mBuffer ) ) { for ( com.doomonafireball.repmaxcalculator.widget.RepMaxView repMaxView : mRepMaxViews ) { repMaxView.clearWeight () ; } return; } } catch ( Exception ex ) { ex.printStackTrace () ; } reveal ( mDeleteButton, R.color.blue_700, new android.animation.AnimatorListenerAdapter () { @java.lang.Override public void onAnimationEnd ( android.animation.Animator animation ) { mBuffer = ""; for ( com.doomonafireball.repmaxcalculator.widget.RepMaxView repMaxView : mRepMaxViews ) { repMaxView.clearWeight () ; } } } ) ; } 
private java.util.ArrayList<java.lang.Boolean> multiplication ( java.util.ArrayList<java.lang.Boolean> multiplicand, java.util.ArrayList<java.lang.Boolean> multiplier ) { java.util.ArrayList<java.lang.Boolean> result = new java.util.ArrayList<java.lang.Boolean> () ; try { result.add ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i != ( multiplier.size () ) ; i++ ) { if ( ( multiplier.get ( i ) ) == true ) { result = addition ( result, multiplicand, i ) ; } } return result; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mToolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; try { mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getLoaderManager () .initLoader ( 0, null, this ) ; if ( savedInstanceState == null ) { refresh () ; } } 
public java.util.List<mazeADT.Cell> getNeighbors () { java.util.List<mazeADT.Cell> neighbors = new java.util.LinkedList<mazeADT.Cell> () ; try { if ( ( northCell ) != null ) { neighbors.add ( northCell ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( westCell ) != null ) { neighbors.add ( westCell ) ; } if ( ( southCell ) != null ) { neighbors.add ( southCell ) ; } if ( ( eastCell ) != null ) { neighbors.add ( eastCell ) ; } return neighbors; } 
public void flee () { cooldownWalk = 500; try { if ( ( ( actAction ) != 1 ) || ( fleePath.isEmpty () ) ) { pp2016.team19.shared.Node fleePos = getFleePos () ; fleePath.clear () ; if ( fleePos != null ) { fleePath = AStarSearch ( this.getXPos () , this.getYPos () , fleePos.getXPos () , fleePos.getYPos () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } changeDir ( fleePath ) ; actAction = 1; } 
@ java.lang.Override public void onResponse ( java.lang.String response ) { try { super.onResponse ( response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( android.text.TextUtils.isEmpty ( response ) ) return; com.bai.chesscard.bean.BaseBean baseBean = new com.google.gson.Gson () .fromJson ( response, com.bai.chesscard.bean.BaseBean.class ) ; if ( ( baseBean.id ) == 1 ) { gamePresenterNew.resetUserInfo ( ConstentNew.USERPOS ) ; resetUserStatue () ; } else com.bai.chesscard.utils.Tools.toastMsgCenter ( context, baseBean.msg ) ; } 
public void syncWithModelRepository ( float deltaTime ) { executeCommands ( commands, deltaTime ) ; commands.clear () ; com.bigcustard.blurp.core.BlurpStore.syncSingletons () ; runtimeImageSprites.syncAll ( BlurpStore.modelRepository.getImageSprites () ) ; try { runtimeAnimationSprites.syncAll ( BlurpStore.modelRepository.getAnimationSprites () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } runtimeTextSprites.syncAll ( BlurpStore.modelRepository.getTextSprites () ) ; for ( com.bigcustard.blurp.core.Sprite modelSprite : BlurpStore.modelRepository.pullCreatedSprites () ) { BlurpStore.blurpScreen.addActor ( getSprite ( modelSprite ) ) ; } executeCommands ( deferredCommands, deltaTime ) ; deferredCommands.clear () ; } 
public void activityStart ( final com.remswork.classmanager.model.clazz.Clazz clazz, final int typeRequest ) { android.content.Intent intent = new android.content.Intent ( this, com.remswork.classmanager.ClazzActivity.class ) ; if ( clazz != null ) { intent.putExtra ( "subject", clazz.getSubject () ) ; intent.putExtra ( "section", clazz.getSection () ) ; intent.putParcelableArrayListExtra ( "scheduleList", ( ( java.util.ArrayList<? extends android.os.Parcelable> ) ( clazz.getListOfSchedule () ) ) ) ; } try { intent.putExtra ( "typeRequest", typeRequest ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( intent ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @java.lang.Override public <T> T[] toArray ( T[] a ) { T[] result = null; if ( ( a.length ) >= ( this.size () ) ) result = a; else result = ( ( T[] ) ( java.lang.reflect.Array.newInstance ( a.getClass () .getComponentType () , this.size () ) ) ) ; try { java.lang.System.arraycopy ( this.array, this.start, result, 0, result.length ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void onSuccess ( com.andela.helpmebuy.models.User user ) { android.support.design.widget.Snackbar.make ( parentLayout, "Password changed successfully", Snackbar.LENGTH_LONG ) .show () ; android.os.Bundle bundle = getIntent () .getBundleExtra ( Launcher.TRANSPORT ) ; if ( bundle != null ) { if ( bundle.getBoolean ( ConfirmPasswordFragment.CONFIRM_PASSWORD ) ) { com.andela.helpmebuy.utilities.Launcher.launchActivity ( context, com.andela.helpmebuy.activities.UserSettingsActivity.class ) ; } } else { com.andela.helpmebuy.utilities.Launcher.launchActivity ( context, com.andela.helpmebuy.activities.HomeActivity.class ) ; } try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testValidateDelimitedPeriodShouldReturnFalseWhenStartEndDatePresent () { java.util.List<un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.DelimitedPeriod> periods = new java.util.ArrayList<> () ; un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.DelimitedPeriod period = new un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.DelimitedPeriod () ; period.setStartDateTime ( new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType ( null, new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType.DateTimeString ( "ddfldf", "72829" ) ) ) ; try { period.setEndDateTime ( new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType ( null, new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType.DateTimeString ( "ddfldf", "72829" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } periods.add ( period ) ; assertFalse ( fact.validateDelimitedPeriod ( periods, true, true ) ) ; } 
protected java.lang.String determineTargetUrl ( org.springframework.security.core.Authentication authentication ) { java.lang.String url = ""; java.util.Collection<? extends org.springframework.security.core.GrantedAuthority> authorities = authentication.getAuthorities () ; java.util.List<java.lang.String> roles = new java.util.ArrayList<java.lang.String> () ; try { for ( org.springframework.security.core.GrantedAuthority a : authorities ) { roles.add ( a.getAuthority () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( roles.contains ( "ROLE_ADMIN" ) ) { url = "/"; } else { url = "/"; } return url; } 
private void pushPipelineToSnapshot () { int iterationsCnt = 0; boolean done = false; try { while ( !done ) { iterationsCnt++; org.apache.hadoop.hbase.regionserver.VersionedSegmentsList segments = pipeline.getVersionedList () ; pushToSnapshot ( segments.getStoreSegments () ) ; done = pipeline.swap ( segments, null, false ) ; if ( iterationsCnt > 2 ) { org.apache.hadoop.hbase.regionserver.CompactingMemStore.LOG.warn ( ( "Multiple unsuccessful attempts to push the compaction pipeline to snapshot," + " while flushing to disk." ) ) ; this.snapshot = org.apache.hadoop.hbase.regionserver.SegmentFactory.instance () .createImmutableSegment ( getComparator () ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/myGroups" ) public java.util.Set<com.luxoft.wheretogo.models.json.GroupResponse> myGroups ( javax.servlet.http.HttpServletRequest request ) { com.luxoft.wheretogo.controller.User user = ( ( com.luxoft.wheretogo.controller.User ) ( request.getSession () .getAttribute ( "user" ) ) ) ; if ( user == null ) { return new java.util.HashSet<> () ; } try { user = usersService.initGroups ( user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return groupsService.getUserRelevantGroupResponses ( user ) ; } 
@ java.lang.Override public void invalidateDrawable ( android.graphics.drawable.Drawable drawable ) { try { if ( mContainsImages ) { android.text.Spanned text = getText () ; com.facebook.react.views.text.TextInlineImageSpan[] spans = text.getSpans ( 0, text.length () , com.facebook.react.views.text.TextInlineImageSpan.class ) ; for ( com.facebook.react.views.text.TextInlineImageSpan span : spans ) { if ( ( span.getDrawable () ) == drawable ) { invalidate () ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } super.invalidateDrawable ( drawable ) ; } 
private void addRightsIfNotSameConcern ( java.util.Collection<org.xwiki.contrib.nestedpagesmigrator.Right> rightsToAdd, java.util.Collection<org.xwiki.contrib.nestedpagesmigrator.Right> currentRights ) { java.util.Iterator<org.xwiki.contrib.nestedpagesmigrator.Right> it = rightsToAdd.iterator () ; while ( it.hasNext () ) { org.xwiki.contrib.nestedpagesmigrator.Right localRight = it.next () ; for ( org.xwiki.contrib.nestedpagesmigrator.Right currentRight : currentRights ) { if ( localRight.hasSameConcern ( currentRight ) ) { it.remove () ; break; } } } try { currentRights.addAll ( rightsToAdd ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void shouldReturnSameNextDateWhenPlayersDateIsNull () { org.mockito.Mockito.when ( settingsProvider.getCurrentDate () ) .thenReturn ( navigator.TestUtil.getCalendar ( 2015, 10, 17, 12, 10 ) ) ; java.util.Date nextDate = navigator.TestUtil.getDate ( 2015, 10, 17, 12, 20 ) ; java.util.Date nextRuntime = nextRunTimeCalculator.calculateNextRuntime ( new java.util.ArrayList<model.Player> () ) ; try { junit.framework.TestCase.assertEquals ( true, org.apache.commons.lang3.time.DateUtils.isSameInstant ( nextDate, nextRuntime ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void switcharoo () { game.items.Item itemNew = level.getItem ( x, y ) ; if ( itemNew == null ) return; level.removeItem ( x, y ) ; game.items.Item itemOld = items[selected].item; if ( itemOld == null ) return; addItem ( null, selected ) ; level.addItem ( itemOld, x, y ) ; try { addItem ( itemNew, selected ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void insertAll ( wyil.lang.CodeBlock.Index index, java.util.Collection<wyil.lang.Attribute> attributes ) { wyil.lang.CodeBlock.Index idx = index.prepend ( ID ) ; for ( wyil.lang.Attribute.Map<wyil.lang.Attribute> map : this.attributes.values () ) { map.insert ( idx, null ) ; } try { putAll ( index, attributes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected org.eclipse.jgit.lib.Repository obtainRepository () throws org.eclipse.jgit.api.errors.GitAPIException { org.eclipse.jgit.api.CloneCommand cloneCommand = org.eclipse.jgit.api.Git.cloneRepository () ; cloneCommand.setURI ( this.remoteURL ) ; cloneCommand.setCredentialsProvider ( this.ownerAuth ) ; try { cloneCommand.setDirectory ( this.localPath.toFile () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.eclipse.jgit.api.Git cloneCall = cloneCommand.call () ; cloneCall.close () ; return cloneCall.getRepository () ; } 
@ org.junit.Test public void simpleHibernateUrl () throws java.lang.Exception { java.lang.String url = "hibernate:classic:com/example/pojo/Hibernate.cfg.xml"; liquibase.database.Database database = liquibase.integration.commandline.CommandLineUtils.createDatabaseObject ( this.getClass () .getClassLoader () , url, null, null, null, null, null, false, false, null, null, null, null, null, null, null ) ; try { junit.framework.Assert.assertNotNull ( database ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } liquibase.snapshot.DatabaseSnapshot snapshot = liquibase.snapshot.SnapshotGeneratorFactory.getInstance () .createSnapshot ( CatalogAndSchema.DEFAULT, database, new liquibase.snapshot.SnapshotControl ( database ) ) ; liquibase.ext.hibernate.database.HibernateClassicDatabaseTest.assertPojoHibernateMapped ( snapshot ) ; } 
public static void updateQueue () { while ( ( theweekend.cosmetics.ipod.Radio.queuedSongs.size () ) < 5 ) { int size = Noteblock.iPodSongs.size () ; if ( size > 0 ) { resources.noteblock.Song generate = Noteblock.iPodSongs.get ( resources.NumberUtils.randomNumber ( size ) ) ; if ( ! ( theweekend.cosmetics.ipod.Radio.queuedSongs.contains ( generate ) ) ) { theweekend.cosmetics.ipod.Radio.queuedSongs.add ( generate ) ; } } } theweekend.cosmetics.ipod.Radio.songPosition = 0; try { theweekend.cosmetics.ipod.Radio.playRadioSong () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void checkNeededInColumn () { int n; try { for ( int j = 0; j < 9; j++ ) { for ( int i = 1; i < 10; i++ ) { if ( de.halemba.helpers.SolveHelper.checkMissingInColumn ( i, j, grid ) ) { n = de.halemba.helpers.SolveHelper.checkSinglePossiblityColumn ( i, j, grid ) ; if ( n >= 0 ) { grid[n][j].setNumber ( i ) ; break; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { view = inflater.inflate ( R.layout.fragment_view_team_info, container, false ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamNumber = ( ( android.widget.TextView ) ( view.findViewById ( R.id.view_team_number ) ) ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamName = ( ( android.widget.TextView ) ( view.findViewById ( R.id.view_team_name ) ) ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamLocation = ( ( android.widget.TextView ) ( view.findViewById ( R.id.view_team_location ) ) ) ; try { com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamNotes = ( ( android.widget.TextView ) ( view.findViewById ( R.id.view_team_notes ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
public boolean redo () { try { if ( self.canRedo () ) { self.getDrawingData () .redo () ; self.nativeClear () ; self.nativeDrawData () ; if ( ( self.getDelegate () ) != null ) { self.getDelegate () .didChangeDrawing ( self, self.getDrawingData () .canUndo () , self.getDrawingData () .canRedo () ) ; } return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public java.lang.Boolean subscribeDoorOpensNextTime ( de.fau.cs.mad.fablab.rest.core.PushToken token ) { org.hibernate.Query query = super.currentSession () .createQuery ( "FROM PushToken WHERE token = :token AND triggerPushType = :trigger" ) ; try { query.setParameter ( "token", token.getToken () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } query.setParameter ( "trigger", token.getTriggerPushType () ) ; if ( ( query.list () .size () ) == 0 ) { token.setTriggerPushType ( TriggerPushType.DOOR_OPENS_NEXT_TIME ) ; persist ( token ) ; } return true; } 
public void setLongitude ( java.lang.String longitude ) { int[] longitudeDMS = fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility.decimalToDMSArray ( java.lang.Double.valueOf ( longitude ) ) ; latitudeDegreesEditText.setText ( java.lang.String.valueOf ( longitudeDMS[0] ) ) ; try { latitudeMinutesEditText.setText ( java.lang.String.valueOf ( longitudeDMS[1] ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } latitudeSecondsEditText.setText ( java.lang.String.valueOf ( longitudeDMS[2] ) ) ; longitudeCardinalDirectionSwitch.setChecked ( ( ( java.lang.Double.valueOf ( longitude ) ) >= 0 ) ) ; } 
private void fillLocalToolBar ( org.eclipse.jface.action.IToolBarManager manager ) { manager.add ( boldTextAction ) ; try { manager.add ( italicTextAction ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } manager.add ( underlineTextAction ) ; manager.add ( clearTextAction ) ; manager.add ( new org.eclipse.jface.action.Separator () ) ; manager.add ( addNewNoteAction ) ; manager.add ( clearNoteAction ) ; } 
public java.util.ArrayList<controller.ControllerCarro> getCarros () { java.util.ArrayList<controller.ControllerCarro> aux = new java.util.ArrayList<> () ; try { for ( int i = 0; i < ( this.counter ) ; i++ ) { aux.add ( this.carros.get ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return aux; } 
public java.lang.String getStringTodoList () { java.lang.String result = "\nItems to do: \n"; int index = 1; try { for ( TodoItem item : this.itemList ) { result += java.lang.String.format ( "%d. ", index ) ; if ( item.getIsDone () ) { result += "[x] "; } result += java.lang.String.format ( "%s%n", item.getName () ) ; index++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public void deleteCardList ( com.ske.minitrello.models.CardList cardList ) { dbHandler.deleteCardList ( cardList.getName () ) ; while ( ! ( cardList.getCards () .isEmpty () ) ) { deleteCard ( cardList.getCards () .get ( 0 ) ) ; } try { cardLists.remove ( cardList ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cardListMap.remove ( cardList ) ; } 
public void addColorTo ( metro.TrainManagement.Nodes.RailwayNode node, java.awt.Color color ) { if ( ! ( _mapOfColors.containsKey ( node ) ) ) _mapOfColors.put ( node, new java.util.ArrayList<java.awt.Color> () ) ; try { if ( ! ( _mapOfColors.get ( node ) .contains ( color ) ) ) _mapOfColors.get ( node ) .add ( color ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.view.View v ) { time = new java.lang.String[0]; temp = new java.lang.String[0]; bSave.setVisibility ( View.INVISIBLE ) ; mode = MODE_RECEIVE_CONFIG; Protocol.mode = Protocol.ESP8266_CONFIG; com.example.mydhcp.settingsActivity._BC_ACTION = new byte[2]; com.example.mydhcp.settingsActivity._BC_ACTION[0] = Protocol.READ_DAY_CONFIGS; com.example.mydhcp.settingsActivity._BC_ACTION[1] = ( ( byte ) ( 1 ) ) ; pb.setVisibility ( View.VISIBLE ) ; sDayType = "Рабочий день"; try { wifiRequestData ( MainDHCPActivity.curIPbytes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void letAImove () { int pushMousePointingColumn = mousePointingcolumn; boolean preEndGame = gameController.isFinish () ; try { if ( ( mousePointingcolumn = gameController.getAITurn () ) < 0 ) { mousePointingcolumn = pushMousePointingColumn; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( !preEndGame ) && ( ! ( fallingAnimationMutex ) ) ) { FallingAnimation () ; mousePointingcolumn = pushMousePointingColumn; } else { return; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( path = "/catalogue", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView printCatalogue () { try { com.springapp.model.ProductCatalogue.getProductCatalogue () .removeAllProducts () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.springapp.dao.ProductCatalogueDao productCatalogueDao = new com.springapp.dao.ProductCatalogueDaoImp () ; java.util.List<com.springapp.model.Product> list = productCatalogueDao.getAllProducts () ; com.springapp.model.ProductCatalogue.getProductCatalogue () .addListOfProducts ( list ) ; org.springframework.web.servlet.ModelAndView model = new org.springframework.web.servlet.ModelAndView ( "show_all" ) ; model.addObject ( "products", com.springapp.model.ProductCatalogue.getProductCatalogue () .getProducts () ) ; return model; } 
public int getInt ( int min, int max ) { java.lang.System.out.println ( "Enter a number: " ) ; int userInput = scanner.nextInt () ; scanner.nextLine () ; try { if ( ( userInput < min ) || ( userInput > max ) ) { java.lang.System.out.println ( "Invalid input" ) ; userInput = getInt ( min, max ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return userInput; } 
private void processAttributes ( android.content.Context context, android.util.AttributeSet attrs ) { android.content.res.TypedArray a = context.obtainStyledAttributes ( attrs, R.styleable.ColorButton ) ; final int N = a.getIndexCount () ; try { for ( int i = 0; i < N; ++i ) { int attr = a.getIndex ( i ) ; if ( attr == ( R.styleable.ColorButton_jr_color ) ) { mColor = a.getColor ( attr, 0 ) ; colorify () ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } a.recycle () ; } 
public void onBrowserEvent ( org.ovirt.engine.ui.common.widget.table.cell.Context context, com.google.gwt.dom.client.Element parent, C value, java.lang.String tooltipContent, com.google.gwt.dom.client.NativeEvent event, com.google.gwt.cell.client.ValueUpdater<C> valueUpdater ) { java.lang.String tooltip; try { if ( tooltipContent == null ) { tooltip = getTooltip ( value ) ; } else { tooltip = tooltipContent; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( BrowserEvents.MOUSEOVER.equals ( event.getType () ) ) { org.ovirt.engine.ui.common.widget.tooltip.ElementTooltipUtils.setTooltipOnElement ( tooltip, parent ) ; } else { super.onBrowserEvent ( context, parent, value, event, valueUpdater ) ; } } 
private void unbindConnection () { MyApplication.madcapLogger.d ( TAG, ( "Attempt to unbind self. Current bound status is " + ( mBound ) ) ) ; cacheCountUpdater.cancel ( true ) ; mDataCollectionService.setUploadStatusGuiListener ( null ) ; try { getActivity () .getApplicationContext () .unbindService ( mConnection ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.d ( TAG, "removed UploadListener" ) ; mBound = false; } 
public static void main ( java.lang.String[] args ) { java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; float sum = 0.0F; try { for ( int i = 0; i < ( q1004.Main.INPUT_COUNT ) ; i++ ) { float f = sc.nextFloat () ; if ( f <= 0 ) { continue; } sum += f; } } catch ( Exception ex ) { ex.printStackTrace () ; } sum /= q1004.Main.INPUT_COUNT; java.lang.System.out.println ( ( "$" + ( q1004.Main.shortenNumber ( sum ) ) ) ) ; } 
private static void deleteEstate () { int id = de.dis2011.FormUtil.readInt ( "ID der Immobilie" ) ; de.dis2011.data.Estate estate = de.dis2011.data.Estate.load ( id ) ; if ( estate == null ) { java.lang.System.out.println ( ( ( "Immobilie mit ID " + id ) + " existiert nicht." ) ) ; return; } estate.delete ( estate.getType () ) ; try { java.lang.System.out.println ( ( ( "Immobilie mit ID " + id ) + " wurde gelöscht." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> inviteToChannel ( com.ullink.slack.simpleslackapi.SlackChannel channel, com.ullink.slack.simpleslackapi.SlackUser user ) { com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> ( getNextMessageId () ) ; java.util.Map<java.lang.String, java.lang.String> arguments = new java.util.HashMap<> () ; arguments.put ( "token", authToken ) ; arguments.put ( "channel", channel.getId () ) ; arguments.put ( "user", user.getId () ) ; try { postSlackCommand ( arguments, com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_INVITE_COMMAND, handle ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return handle; } 
@ java.lang.Override public void onCraftMatrixChanged ( com.alxnns1.mobhunter.container.IInventory inventoryIn ) { reloadRecipes () ; java.lang.String log = "Recipes:\n"; try { for ( int i = 0; i < ( recipes.size () ) ; i++ ) { if ( recipesValid.get ( i ) ) log += "Y - "; else log += "N - "; log += recipes.get ( i ) .toString () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } detectAndSendChanges () ; } 
public java.lang.String toVCFAnnoString ( java.lang.String alt, boolean escape ) { de.charite.compbio.jannovar.annotation.VCFAnnotationData data = new de.charite.compbio.jannovar.annotation.VCFAnnotationData () ; data.effects = effects; data.impact = getPutativeImpact () ; data.setTranscriptAndChange ( transcript, change ) ; data.setAnnoLoc ( annoLoc ) ; try { data.isCoding = ( ( transcript ) == null ) ? false : transcript.isCoding () ; } catch ( Exception ex ) { ex.printStackTrace () ; } data.cdsNTChange = cdsNTChange; data.proteinChange = proteinChange; data.messages = messages; if ( escape ) return data.toString ( alt ) ; else return data.toUnescapedString ( alt ) ; } 
public java.util.Date getAsDate () { try { if ( ( isASAP () ) || ( isNEVER () ) ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.util.Date ( ( ( ( ( itsValue ) - ( ( atnf.atoms.time.DUTC.get ( itsValue ) ) * 1000000L ) ) - 3506716800000000L ) / 1000L ) ) ; } 
private void setStatusBarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat.getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; try { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window.addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window.setStatusBarColor ( palette.getDarkVibrantColor ( defaultDarkColor ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public won.protocol.model.MatchingBehaviorType getMatchingBehaviorTypeForMatchedNeed ( org.apache.solr.common.SolrDocument doc ) { won.protocol.model.MatchingBehaviorType matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL; java.lang.Object matchingBehaviorFieldValue = doc.getFieldValue ( won.matcher.solr.hints.HintBuilder.MATCHING_BEHAVIOR_SOLR_FIELD ) ; try { if ( matchingBehaviorFieldValue != null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.fromURI ( matchingBehaviorFieldValue.toString () ) ; if ( matchedNeedMatchingBehavior == null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return matchedNeedMatchingBehavior; } 
@ by.itechart.flowerty.web.controller.ResponseBody @by.itechart.flowerty.web.controller.RequestMapping ( value = "user/list/{page}" ) public org.springframework.data.domain.Page<by.itechart.flowerty.model.User> getPage ( @by.itechart.flowerty.web.controller.PathVariable ( value = "page" ) java.lang.Integer page ) throws java.lang.Exception { by.itechart.flowerty.web.controller.UserController.LOGGER.info ( "get page with number {}", page ) ; page = ( ( page == null ) || ( page < 1 ) ) ? 0 : --page; org.springframework.data.domain.Page<by.itechart.flowerty.model.User> pageUsers = userService.getPage ( page, 1 ) ; try { by.itechart.flowerty.web.controller.UserController.LOGGER.info ( "fetch {} users", pageUsers.getTotalElements () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return pageUsers; } 
private void decodeFrames ( io.netty.buffer.ByteBuf in, java.util.List<java.lang.Object> out ) throws java.lang.Exception { try { if ( ( in.readableBytes () ) >= ( com.mpush.api.protocol.Packet.HEADER_LEN ) ) { in.markReaderIndex () ; com.mpush.api.protocol.Packet packet = decodeFrame ( in ) ; if ( packet != null ) { out.add ( packet ) ; } else { in.resetReaderIndex () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testCustomWalltime () throws java.lang.Exception { final org.genepattern.server.config.GpServerProperties serverProperties = new org.genepattern.server.config.GpServerProperties.Builder () .addCustomProperty ( JobRunner.PROP_WALLTIME, "7-00:00:00" ) .build () ; final org.genepattern.server.config.GpConfig gpConfig = new org.genepattern.server.config.GpConfig.Builder () .serverProperties ( serverProperties ) .build () ; org.genepattern.drm.DrmJobSubmission drmJobSubmission = new org.genepattern.drm.DrmJobSubmission.Builder ( workingDir ) .jobContext ( jobContext ) .gpConfig ( gpConfig ) .build () ; try { assertEquals ( "set walltime in config", org.genepattern.drm.Walltime.fromString ( "7-00:00:00" ) , drmJobSubmission.getWalltime () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int roll () { if ( ( rollsSinceLastReseed ) >= 100000 ) { com.valkryst.VDice.DiceRoller.random.setSeed ( java.lang.System.currentTimeMillis () ) ; rollsSinceLastReseed = 0; } int total = 0; try { for ( final com.valkryst.VDice.Die die : dice ) { total += die.roll ( com.valkryst.VDice.DiceRoller.random ) ; ( rollsSinceLastReseed ) ++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return total; } 
public void addCell ( org.apache.cassandra.config.ColumnDefinition column, java.nio.ByteBuffer value, org.apache.cassandra.db.rows.LivenessInfo info ) { int idx = columns.simpleIdx ( column ) ; if ( idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + ( column.name ) ) + " in " ) + ( columns ) ) ) ; idx += base; try { data.setCell ( idx, value, info ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String showCityResources ( @org.springframework.web.bind.annotation.RequestParam java.util.Map<java.lang.String, java.lang.String> allRequestParams, org.springframework.ui.Model model ) { org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER.info ( ( "Requested params:" + allRequestParams ) ) ; commonCityService.buildQueuedBuildings ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; org.exschool.pocketworld.city.resources.dto.CityResourcesDto cityResourcesDto = cityResourcesService.cityResourcesInfo ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; model.addAttribute ( "dto", cityResourcesDto ) ; try { org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER.info ( ( "Out:" + model ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "city_resources"; } 
@ java.lang.Override public void grab () { if ( this.isClosing () ) { return; } while ( ! ( this.captureIpl.available () ) ) { waitForNextFrame () ; } captureIpl.read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl.getIplImage () ; try { if ( img != null ) { updateCurrentImage ( img ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setKeyAction () { android.os.Bundle args = getArguments () ; java.lang.String key = ( ( java.lang.String ) ( args.keySet () .toArray () [0] ) ) ; try { switch ( key ) { case "meetings_show_day_key": showDay = true; date = ( ( java.lang.String ) ( args.get ( key ) ) ) ; break; case "meetings_show_all_key": showAll = true; break; case "meetings_show_empty_key": isEmptyView = true; break; default: isEmptyView = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML void clearTabs () { javafx.scene.control.Tab[] temp = new javafx.scene.control.Tab[_tabpane.getTabs () .size () ]; try { temp = _tabpane.getTabs () .toArray ( temp ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( javafx.scene.control.Tab t : temp ) { if ( ( t != null ) && ( ! ( t.getText () .equals ( "Home" ) ) ) ) _tabpane.getTabs () .remove ( t ) ; } } 
public void setStatus ( double speed ) { try { if ( speed > 1.4 ) { this.status = 2; textStatus.setText ( "跑步" ) ; } else if ( speed < 1.0E-6 ) { this.status = 0; textStatus.setText ( "静止" ) ; } else { this.status = 1; textStatus.setText ( "步行" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onNavigationItemSelected ( @android.support.annotation.NonNull android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.home: onBackPressed () ; return true; case R.id.action_help: startInstruction () ; return true; case R.id.action_replay: speakTextInstruction ( currentTest ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onRequest () { org.apache.wicket.request.cycle.RequestCycle requestCycle = org.apache.wicket.request.cycle.RequestCycle.get () ; com.google.gson.JsonObject jsonObject = new com.google.gson.JsonObject () ; final com.google.gson.Gson gson = new com.google.gson.GsonBuilder () .create () ; final java.lang.String fieldJson = this.getModelAsJson () ; try { requestCycle.scheduleRequestHandlerAfterCurrent ( new org.apache.wicket.request.handler.TextRequestHandler ( "application/json", "UTF-8", fieldJson ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setSong ( info.dourok.android.lyrics.SongWrapper song ) { this.mSong = song; try { if ( ( song.getLyrics () ) != null ) { this.mLyrics = mSong.getLyrics () ; this.mLyricsItems = mLyrics.getLyricsItems () ; updateLyrics () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void convertInput () { java.lang.String input = com.vaynberg.wicket.select2.Select2MultiChoice.getWebRequest () .getRequestParameters () .getParameterValue ( com.vaynberg.wicket.select2.Select2MultiChoice.getInputName () ) .toString () ; final java.util.Collection<T> choices; if ( org.apache.wicket.util.string.Strings.isEmpty ( input ) ) { choices = new java.util.ArrayList<T> () ; } else { java.util.List<java.lang.String> ids = com.vaynberg.wicket.select2.Select2MultiChoice.splitInput ( input ) ; choices = com.vaynberg.wicket.select2.Select2MultiChoice.getProvider () .toChoices ( ids ) ; } try { com.vaynberg.wicket.select2.Select2MultiChoice.setConvertedInput ( choices ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setFragmentVisualizzaPrenotazioni () { fragmentManager = getFragmentManager () ; try { fragmentTransaction = fragmentManager.beginTransaction () ; } catch ( Exception ex ) { ex.printStackTrace () ; } visualizzaPrenotazioniFragment = new com.project.is.sportlink.ui.VisualizzaPrenotazioniFragment () ; fragmentTransaction.replace ( R.id.fragment_container, visualizzaPrenotazioniFragment ) ; fragmentTransaction.addToBackStack ( null ) ; android.support.v4.widget.DrawerLayout drawer = ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) ; if ( drawer.isDrawerOpen ( GravityCompat.START ) ) { drawer.closeDrawer ( GravityCompat.START ) ; } fragmentTransaction.commit () ; } 
protected void onSaveInstanceState ( android.os.Bundle outState ) { try { super.onSaveInstanceState ( outState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } outState.putByteArray ( "audio", this.getShareFragment () .getAudio () ) ; outState.putByteArray ( "pic", this.getShareFragment () .getPic () ) ; outState.putByteArray ( "video", this.getShareFragment () .getVideo () ) ; } 
public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( java.util.List<T> datas ) { this.mDatas = datas; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( mDatas ) ; try { viewPager.setAdapter ( pageAdapter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } viewPager.setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this; } 
public io.cattle.platform.servicediscovery.deployment.DeploymentUnitInstance start () { try { if ( this.isStarted () ) { return this; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( instance ) != null ) && ( InstanceConstants.STATE_STOPPED.equals ( instance.getState () ) ) ) { context.activityService.instance ( instance, "start", "Starting stopped instance", ActivityLog.INFO ) ; context.objectProcessManager.scheduleProcessInstanceAsync ( InstanceConstants.PROCESS_START, instance, null ) ; } return this; } 
@ java.lang.Override public void render ( float delta ) { if ( Gdx.input.justTouched () ) { game.setScreen ( new com.mygdx.magicappgame.States.PlayScreen ( game ) ) ; dispose () ; } try { Gdx.gl.glClearColor ( 0, 0, 0, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Gdx.gl.glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; stage.draw () ; } 
@ java.lang.Override public boolean onCreateActionMode ( com.actionbarsherlock.view.ActionMode mode, com.actionbarsherlock.view.Menu menu ) { mode.setTitle ( R.string.menu_restriction ) ; super.onCreateActionMode ( mode, menu ) ; try { logic.addSelectedRelationWay ( toWay ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } de.blau.android.osm.Relation restriction = logic.createRestriction ( fromWay, viaElement, toWay, ( ( fromWay ) == ( toWay ) ? de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.NO_U_TURN_VALUE : null ) ) ; android.util.Log.i ( "EasyEdit", "Created restriction" ) ; main.performTagEdit ( restriction, de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.RESTRICTION_TAG, false, false ) ; main.startActionMode ( new de.blau.android.easyedit.EasyEditManager.RelationSelectionActionModeCallback ( restriction ) ) ; return false; } 
@ java.lang.Override public void onViewCreated ( android.view.View view, android.os.Bundle savedInstanceState ) { super.onViewCreated ( view, savedInstanceState ) ; adapter = new com.vezikon.popularmovies.views.adapters.MoviesAdapter ( getActivity () , moviesList ) ; try { mGridView.setAdapter ( adapter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mGridView.setOnItemClickListener ( this ) ; if ( isEmpty ) { if ( com.vezikon.popularmovies.Utils.isNetworkAvailable ( getActivity () ) ) { showProgress ( true ) ; getMovies ( com.vezikon.popularmovies.fragments.MoviesFragment.TYPE_MOST_POPULAR ) ; } else { android.widget.Toast.makeText ( getActivity () , getString ( R.string.error_msg_no_connection ) , Toast.LENGTH_LONG ) .show () ; } } } 
private void Price () { java.lang.String priceWithCurrency = source.getElementsByClass ( "price-label" ) .text () .replaceAll ( "\\D+", "" ) ; try { if ( ( priceWithCurrency.length () ) == 0 ) { adBuilder.price ( null ) ; } else { adBuilder.price ( java.lang.Integer.parseInt ( priceWithCurrency ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.HashSet<dictionary.APIType> getTypesbyMethod ( java.lang.String name ) { java.util.HashSet<dictionary.APIType> types = new java.util.HashSet<dictionary.APIType> () ; java.util.HashSet<dictionary.APIMethod> methods = this.getMethodsByName ( name ) ; try { if ( methods != null ) { for ( dictionary.APIMethod method : methods ) types.add ( method.getType () ) ; return types; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( final java.lang.Class<?> concrete, final java.lang.Class<?> iface, final java.lang.Class<?> c, final java.lang.reflect.Type[] ts ) { try { for ( final java.lang.reflect.Type t : ts ) { final org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper.getType ( concrete, iface, c, t ) ; if ( p != null ) { return p; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void initialize ( java.net.URL url, java.util.ResourceBundle rb ) { DataModel = Model.Sync.getInstance () ; try { FencerColumn.setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory<> ( "fullName" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } FencingSchoolColumn.setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory<> ( "fencingSchool" ) ) ; AgeColumn.setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory<> ( "birthday" ) ) ; TournamentColumn.setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory<> ( "name" ) ) ; DateColumn.setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory<> ( "date" ) ) ; UpdateView () ; } 
public boolean onBlockDestroyed ( net.minecraft.item.ItemStack stack, net.minecraft.world.World worldIn, net.minecraft.block.state.IBlockState blockIn, net.minecraft.util.math.BlockPos pos, net.minecraft.entity.EntityLivingBase entityLiving ) { try { if ( ( ( double ) ( blockIn.getBlockHardness ( worldIn, pos ) ) ) != 0 ) { stack.damageItem ( 1, entityLiving ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String home ( java.util.Locale locale, org.springframework.ui.Model model ) { java.util.Date date = new java.util.Date () ; java.text.DateFormat dateFormat = java.text.DateFormat.getDateTimeInstance ( java.text.DateFormat.LONG, java.text.DateFormat.LONG, locale ) ; java.lang.String formattedDate = dateFormat.format ( date ) ; try { model.addAttribute ( "serverTime", formattedDate ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "index"; } 
protected int skipWSC () throws java.io.IOException, org.openrdf.rio.RDFHandlerException { int c = readCodePoint () ; while ( ( org.openrdf.rio.turtle.TurtleUtil.isWhitespace ( c ) ) || ( c == '#' ) ) { if ( c == '#' ) { processComment () ; } else if ( c == '\n' ) { ( lineNumber ) ++; } c = readCodePoint () ; } try { unread ( c ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return c; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/impcImages/laczimages/{acc}/{topLevelMa}" ) public java.lang.String laczImages ( @org.springframework.web.bind.annotation.PathVariable java.lang.String acc, @org.springframework.web.bind.annotation.PathVariable java.lang.String topLevelMa, org.springframework.ui.Model model ) throws java.io.IOException, java.net.URISyntaxException, org.apache.solr.client.solrj.SolrServerException { java.lang.System.out.println ( "calling laczImages web page" ) ; try { addGeneSymbolToPage ( acc, model ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } boolean overview = false; imageService.getLacDataForGene ( acc, topLevelMa, overview, false, model ) ; return "laczImages"; } 
@ java.lang.Override public void mouseDragged ( java.awt.event.MouseEvent e ) { try { if ( ( ( e.getX () ) >= 0 ) && ( ( e.getX () ) <= ( this.getWidth () ) ) ) { if ( knob1Picked ) { moveKnob1 ( java.lang.Math.abs ( e.getX () ) ) ; return; } if ( knob2Picked ) { moveKnob2 ( e.getX () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { int[] selectedRows = tablePositions.getSelectedRows () ; try { if ( ( selectedRows.length ) > 0 ) { getPositionsModel () .up ( selectedRows, 1 ) ; selectPositions ( increment ( selectedRows, ( -1 ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void loadProducts ( java.util.List<com.ariondan.vendor.model.ProductModel> productModels ) { layoutCart.setVisibility ( View.GONE ) ; this.productModels.clear () ; try { cartModels.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this.productModels.add ( product ) ; } if ( ( gridProducts.getAdapter () ) != null ) { gridProducts.getAdapter () .notifyDataSetChanged () ; } } 
private void makeNewHeader ( org.json.JSONObject transforms ) { try { for ( int x = 1; x < ( ( transforms.length () ) + 1 ) ; x++ ) { java.lang.String curTransform = "transform" + x; java.lang.String newField = getCurrTransformNewField ( transforms, curTransform ) ; if ( newField.equals ( "" ) ) { } else if ( checkHeaderDuplicate ( newHeader, newField ) ) { newHeader.put ( newHeader.length () , newField ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void processTransactionDetails ( com.example.danie.schoolcashless.Transaction transaction, org.json.JSONObject json ) throws org.json.JSONException { java.lang.Number completed = ( ( java.lang.Number ) ( json.get ( "completed" ) ) ) ; try { transaction.setUnixTime ( completed.intValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.json.JSONObject with = ( ( org.json.JSONObject ) ( json.get ( "with" ) ) ) ; java.lang.String name = with.getString ( "name" ) ; transaction.setWith ( name ) ; } 
public indexingTopology.util.BTreeNode insertKeyValue ( TKey key, TValue value ) throws indexingTopology.exception.UnsupportedGenericException { indexingTopology.util.BTreeNode node = null; keys.add ( key ) ; values.add ( new java.util.ArrayList<TValue> ( java.util.Arrays.asList ( value ) ) ) ; ++ ( keyCount ) ; try { if ( indexingTopology.util.BTreeLeafNode.isOverflow () ) { node = indexingTopology.util.BTreeLeafNode.dealOverflow () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return node; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; getWindow () .addFlags ( WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON ) ; setContentView ( R.layout.activity_allmachine ) ; android.util.Log.e ( TAG, "RawMaterial_onCreate" ) ; initDisplay () ; initTitleLayout () ; initCellTitle () ; initRecycleView () ; try { initBottomView () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.android.tedcoder.material.AllMachineActivity.requestHandler = new com.android.tedcoder.material.AllMachineActivity.RequestHandler () ; com.android.tedcoder.material.AllMachineActivity.requestHandler.sendEmptyMessage ( com.android.tedcoder.material.AllMachineActivity.SENDFLAG ) ; } 
@ java.lang.Override public java.lang.String decorMatrix ( int[][] matrix ) { java.lang.StringBuilder array = new java.lang.StringBuilder ( "" ) ; try { for ( int i = 0; i <= ( ( matrix.length ) - 1 ) ; i++ ) { array.append ( this.arrayToString ( matrix[i] ) ) ; array.append ( java.lang.System.lineSeparator () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.lang.String.format ( primitivesMatrixTemplate, array ) ; } 
@ org.junit.Test public void theUserReceiveAGoodQualificationThenYourPointsIncreaseAt500 () { unq.tpi.desapp.grupof.model.GoodQualification goodQualification = mock ( unq.tpi.desapp.grupof.model.GoodQualification.class ) ; when ( goodQualification.getPoints () ) .thenReturn ( 500 ) ; unq.tpi.desapp.grupof.model.User anUser = new unq.tpi.desapp.grupof.model.builder.UserDriverBuilder () .build () ; anUser.receiveAGoodQualification ( goodQualification ) ; try { org.junit.Assert.assertEquals ( 600, anUser.getScore () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String link = downloadFile.getText () .toString () ; intent = new android.content.Intent ( ctx, com.dirtyunicorns.duupdater2.services.DownloadService.class ) ; intent.putExtra ( "url", link ) ; intent.putExtra ( "fileName", fileName.getText () ) ; try { ctx.startService ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void inputDetection () { if ( Gdx.input.isKeyPressed ( Keys.SPACE ) ) { gameController.jumpRetroMan () ; } try { if ( Gdx.input.isKeyPressed ( Keys.RIGHT ) ) { gameController.goRightRetroMan () ; } else if ( Gdx.input.isKeyPressed ( Keys.LEFT ) ) { gameController.goLeftRetroMan () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.net.URLClassLoader createClassLoader () { boolean useBoot14Layout = false; try { for ( org.springframework.boot.loader.archive.Archive.Entry entry : archive ) { if ( entry.getName () .startsWith ( org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.BOOT_14_LIBS_LOCATION ) ) { useBoot14Layout = true; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.ClassLoaderExposingLauncher launcher = ( useBoot14Layout ) ? new org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.Boot14ClassLoaderExposingLauncher () : new org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.Boot13ClassLoaderExposingLauncher () ; return launcher.createClassLoader () ; } 
public org.exoplatform.portal.gadget.core.GadgetToken removeToken ( org.apache.shindig.gadgets.oauth.BasicOAuthStoreTokenIndex tokenKey ) { java.util.Map<java.lang.String, org.exoplatform.portal.gadget.core.GadgetTokenEntry> tokens = getGadgetTokens () ; try { for ( org.exoplatform.portal.gadget.core.GadgetTokenEntry tokenEntry : tokens.values () ) { org.apache.shindig.gadgets.oauth.BasicOAuthStoreTokenIndex key = tokenEntry.getKey () ; if ( tokenKey.equals ( key ) ) { org.exoplatform.portal.gadget.core.GadgetToken token = tokenEntry.getToken () ; tokenEntry.remove () ; return token; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public synchronized void onRequest ( java.lang.String ipAddress, java.sql.Timestamp time ) { ( requestTotal ) ++; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress, 1, time ) ; try { if ( ! ( requests.contains ( request ) ) ) { requests.add ( request ) ; } else { com.hula.domain.Request r = requests.get ( requests.indexOf ( request ) ) ; r.setRequestCount ( ( ( r.getRequestCount () ) + 1 ) ) ; r.setDateOfLastRequest ( time ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected static final void check ( final com.gamesbykevin.breakout.game.Game game ) { try { if ( ( game.getBricks () .getCount () ) <= 0 ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0; com.gamesbykevin.breakout.game.GameHelper.WIN = true; game.getScreen () .setState ( ScreenManager.State.GameOver ) ; } else if ( ( game.getBalls () .getCount () ) < 1 ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0; com.gamesbykevin.breakout.game.GameHelper.LOSE = true; ( com.gamesbykevin.breakout.game.GameHelper.LIVES ) --; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void switchCamera () { if ( backCamera ) { backCamera = false; } else { backCamera = true; } focusMode = camera1.getFocusMode () ; flashMode = camera1.getFlashMode () ; try { camera1.stopPreview () ; } catch ( Exception ex ) { ex.printStackTrace () ; } camera1.releaseCamera () ; isFocusModeSupported = false; openCameraAndStartPreview () ; } 
public void setFrequencyDays ( java.lang.String daysBitString ) { frequencyDays = daysBitString; java.util.Calendar calendar = java.util.Calendar.getInstance () ; int today = ( calendar.get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1; try { if ( frequencyDays.substring ( today, ( today + 1 ) ) .equals ( "1" ) ) { isToday = true; } else { isToday = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void deleteResidualDirectory ( java.util.Properties storageProperties ) { java.lang.String oldFileDirPath = storageProperties.getProperty ( org.jimple.planner.Constants.PROPERTIES_KEY_PREV_SAVEPATH ) ; try { oldFileDirPath = getFullFilePath ( oldFileDirPath, org.jimple.planner.Constants.DEFAULT_FILE_DIRECTORY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( oldFileDirPath.equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) ) { java.io.File oldFileDir = new java.io.File ( oldFileDirPath ) ; if ( oldFileDir.isDirectory () ) { oldFileDir.delete () ; } } } 
public java.lang.String toString () { java.lang.String cardSymbols = ""; java.lang.String values = ""; try { for ( int x = 0; x <= ( lastCard ) ; x++ ) { cardSymbols += ( CardUtils.cardToString ( cards[x] ) ) + " "; values += ( CardUtils.getValue ( cards[x] ) ) + " "; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( cardSymbols + "\n" ) + values ) + "\n"; } 
public void setIsWifiEnable ( boolean isWifiEnable ) { isWifiP2pEnable = isWifiEnable; if ( isRemainResult ) { remainWifiIsEnable = isWifiEnable; } try { if ( ( mOnWiFiRecevieListener ) != null ) { mOnWiFiRecevieListener.onWifiStatusResult ( isWifiEnable ) ; } else { if ( !isWifiEnable ) { } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected boolean onCanProcessClick ( android.view.View _view ) { try { switch ( _view.getId () ) { case R.id.btnAddPeriod: { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment.setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false; } case R.id.btnCalendar: { showFragment ( calFragment ) ; return false; } case R.id.btnPeriods: { periodsFragment.refrHasPeriods () ; showFragment ( periodsFragment ) ; return false; } default: { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void init ( javax.servlet.ServletContext servletContext ) { java.io.File repository = ( ( java.io.File ) ( servletContext.getAttribute ( "javax.servlet.context.tempdir" ) ) ) ; org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD, repository ) ) ; int uploadLimit = org.edagarli.framework.helper.ConfigHelper.getAppUploadLimit () ; try { if ( uploadLimit != 0 ) { org.edagarli.framework.helper.UploadHelper.servletFileUpload.setFileSizeMax ( ( ( uploadLimit * 1024 ) * 1024 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int logoutUser ( java.lang.String username ) { int state; boolean userExist; boolean active; userExist = database.usernameExist ( username ) ; try { active = database.getActive ( username ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( userExist && active ) { database.userActive ( username, false ) ; state = 1; } else { state = 0; } return state; } 
public void reset () { for ( int i = 0; i < ( numberOfDoFs ) ; i++ ) regularizationMatrix.set ( i, i, jointAccelerationRegularization.getDoubleValue () ) ; try { solverInput_H.zero () ; } catch ( Exception ex ) { ex.printStackTrace () ; } solverInput_f.zero () ; solverInput_Aeq.reshape ( 0, problemSize ) ; solverInput_beq.reshape ( 0, 1 ) ; if ( ! ( firstCall.getBooleanValue () ) ) addJointJerkRegularization () ; } 
@ java.lang.Override public int getCount () throws java.sql.SQLException { try { if ( ( filters.isEmpty () ) && ( orderBys.isEmpty () ) ) return ( ( int ) ( columnView.rowCount ( null ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return columnView.rowCount ( toQuery ( 0, filters ) ) ; } 
@ java.lang.Override public void onPrepared ( @android.support.annotation.NonNull com.devbrackets.android.playlistcore.api.MediaPlayerApi mediaPlayerApi ) { retryCount = 0; try { setPlaybackState ( com.devbrackets.android.playlistcore.service.PlaylistServiceCore.PlaybackState.PLAYING ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startMediaPlayer () ; if ( immediatelyPause ) { immediatelyPause = false; if ( mediaPlayerApi.isPlaying () ) { performPause () ; } } if ( ( seekToPosition ) > 0 ) { performSeek ( seekToPosition, false ) ; seekToPosition = -1; } updateRemoteViews () ; updateNotification () ; } 
public static void playGameSound () { com.badlogic.gdx.files.FileHandle file = Gdx.files.external ( "gamemusic.mp3" ) ; try { if ( file.exists () ) { java.lang.System.out.println ( "Externes audio." ) ; com.game.Audio.Sounds.music = Gdx.audio.newMusic ( Gdx.files.external ( "gamemusic.mp3" ) ) ; } else { com.game.Audio.Sounds.music = Gdx.audio.newMusic ( Gdx.files.internal ( "Game_Sound/gamemusic.mp3" ) ) ; com.game.Audio.Sounds.music.play () ; com.game.Audio.Sounds.music.setVolume ( com.game.Audio.Sounds.Game_Volume ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map ) ; com.dev.cromer.jason.whatsappening.activities.MapActivity.searchBarEditText = ( ( android.widget.EditText ) ( findViewById ( R.id.searchBarEditText ) ) ) ; com.dev.cromer.jason.whatsappening.activities.MapActivity.searchBarEditText.setOnClickListener ( this ) ; try { setUpGoogleApiClient () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.google.android.gms.maps.MapFragment mapFragment = ( ( com.google.android.gms.maps.MapFragment ) ( getFragmentManager () .findFragmentById ( R.id.map ) ) ) ; mapFragment.getMapAsync ( this ) ; } 
void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState, final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List<org.osgi.framework.BundleListener> listeners = bundleListeners.get ( bundleState ) ; try { if ( listeners != null ) { if ( ( listeners.size () ) > 1 ) listeners.remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void readExternal ( com.tangosol.io.pof.PofReader pofReader ) throws java.io.IOException { try { if ( ( pofReader.getVersionId () ) >= 1 ) { this.media = ( ( serializers.coherence.media.Media ) ( pofReader.readObject ( 0 ) ) ) ; this.images = ( ( java.util.List<serializers.coherence.media.Image> ) ( pofReader.readCollection ( 1, new java.util.ArrayList<serializers.coherence.media.Image> () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setBootstrapType ( java.lang.String bootstrapType ) { com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes type; type = ( roundedCorners ) ? com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMapRounded.get ( bootstrapType ) : com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMap.get ( bootstrapType ) ; type = ( type == null ) ? com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes.DEFAULT : type; layout.setBackgroundResource ( type.backgroundDrawable ) ; try { lblLeft.setTextColor ( getResources () .getColor ( type.textColour ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } lblMiddle.setTextColor ( getResources () .getColor ( type.textColour ) ) ; lblRight.setTextColor ( getResources () .getColor ( type.textColour ) ) ; } 
public void updateTheme () { this.primaryColor = SP.getInt ( "primary_color", android.support.v4.content.ContextCompat.getColor ( getApplicationContext () , R.color.md_indigo_500 ) ) ; this.accentColor = SP.getInt ( "accent_color", android.support.v4.content.ContextCompat.getColor ( getApplicationContext () , R.color.md_light_blue_500 ) ) ; darkTheme = SP.getBoolean ( "set_dark_theme", false ) ; coloredNavBar = SP.getBoolean ( "nav_bar", true ) ; oscuredStatusBar = SP.getBoolean ( "set_traslucent_statusbar", false ) ; try { applyThemeImgAct = SP.getBoolean ( "apply_theme_img_act", false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final java.lang.String start () throws java.lang.Exception { try { if ( ( getRemoteUser () ) != null ) { javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext.getRequest () ; javax.servlet.http.HttpSession session = request.getSession () ; chatBoxMap = chatManager.getOpenChats ( session ) ; chatManager.setOnlineStatus ( getRemoteUser () , ChatStatus.NO_CHANGE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return SUCCESS; } 
public void reduce ( org.apache.hadoop.io.Text key, java.lang.Iterable<org.apache.hadoop.io.DoubleWritable> values, org.apache.hadoop.mapreduce.Reducer.Context context ) throws java.io.IOException, java.lang.InterruptedException { double tmppr = 0.0; try { for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmppr += val.get () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } title.set ( key ) ; err.set ( java.lang.String.valueOf ( tmppr ) ) ; context.write ( title, err ) ; } 
public void setSelection ( T selection ) { try { for ( int i = 0, count = getItems () .size () ; i < count; i++ ) { T item = getItems () .get ( i ) ; if ( item instanceof java.lang.String ) { if ( item.equals ( selection ) ) { setSelection ( i ) ; return; } } else { if ( item == selection ) { setSelection ( i ) ; return; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private ludum.dare.collision.CollisionGroup getCollisions ( java.util.Map<java.lang.String, ludum.dare.collision.CollisionSequence> data ) { ludum.dare.utils.NamedAnimation animation = animations.getCurrentAnimation () ; java.lang.String name = animation.getName () ; try { if ( data.containsKey ( name ) ) { ludum.dare.collision.CollisionSequence sequence = data.get ( name ) ; if ( ( animation.getLastCalledFrame () ) < ( sequence.frames.length ) ) { return sequence.frames[animation.getLastCalledFrame () ]; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void setAltitude ( bwem.Altitude altitude ) { try { if ( ! ( ( isAltitudeMissing () ) && ( ( altitude.intValue () ) > 0 ) ) ) { throw new java.lang.IllegalStateException ( "Altitude is already set" ) ; } else if ( ! ( ( altitude.intValue () ) > 0 ) ) { throw new java.lang.IllegalArgumentException ( "invalid Altitude" ) ; } else { this.altitude = new bwem.Altitude ( altitude ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "add", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model, @org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user, @org.springframework.web.bind.annotation.RequestParam java.lang.String verify ) { try { if ( verify.equals ( user.getPassword () ) ) { model.addAttribute ( "title", "Add User" ) ; model.addAttribute ( "newUser", user.getUsername () ) ; model.addAttribute ( user ) ; org.launchcode.models.UserData.add ( user ) ; return "users/index"; } else { model.addAttribute ( "title", "Add User" ) ; model.addAttribute ( "error", "Passwords do not match" ) ; model.addAttribute ( user ) ; return "users/add"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean isNewHighScore ( java.lang.String lastScoreDeck ) { java.lang.String highScoreDeck = prefs.getString ( "highScoreDeck", "" ) ; try { if ( ( highScoreDeck.isEmpty () ) || ( ( lastScoreDeck.compareTo ( highScoreDeck ) ) < 0 ) ) { return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean step_100_startIngestJobs () { if ( this.hasError () ) { return false; } try { for ( edu.harvard.iq.dataverse.DataFile df : finalFileList ) { setNewlyAddedFile ( df ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } finalFileList.clear () ; msg ( "pre ingest start" ) ; ingestService.startIngestJobs ( dataset, dvRequest.getAuthenticatedUser () ) ; msg ( "post ingest start" ) ; return true; } 
@ java.lang.Override public void onBindViewHolder ( com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewHolder holder, int position, java.util.List<java.lang.Object> payloads ) { super.onBindViewHolder ( holder, position, payloads ) ; try { if ( ( payloads != null ) && ( ! ( payloads.isEmpty () ) ) ) { holder.setEntry ( ( ( com.example.brandon.habitlogger.HabitDatabase.DataModels.SessionEntry ) ( payloads.get ( 0 ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test ( groups = { "integration", "services", "httppatch", "virtual" }, description = "A negative integration test to verify the response code from a patch call" ) public void comparePatchResponseBadCode201Test () { com.google.gson.JsonObject request = new com.google.gson.JsonObject () ; request.addProperty ( "id", 1 ) ; request.addProperty ( "title", "foo1" ) ; request.addProperty ( "body", "bar" ) ; request.addProperty ( "userId", 4 ) ; com.coveros.selenified.services.Call call = this.calls.get () ; call.patch ( "posts/4", new com.coveros.selenified.services.Request ( request ) ) .assertEquals ( 201 ) ; try { finish ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void findMinFormat () { try { if ( ( isEmptyHeap () ) == true ) { java.lang.System.out.println ( "There are no ideas here" ) ; } else { java.lang.System.out.println ( ( ( ( ( ( "The best idea is Idea #" + ( heap[0].getSeqNum () ) ) + "/nrated at" ) + ( heap[0].getRating () ) ) + "here is the description: /n" ) + ( heap[0].getDesc () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.jupiter.api.Test void shouldInjectCustomInstanceAsParameter ( io.specto.hoverfly.junit.core.Hoverfly hoverfly ) { io.specto.hoverfly.junit5.HoverflyCustomCaptureTest.hoverflyInstance = hoverfly; try { org.assertj.core.api.Assertions.assertThat ( hoverfly.getMode () ) .isEqualTo ( HoverflyMode.CAPTURE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.assertj.core.api.Assertions.assertThat ( hoverfly.getHoverflyInfo () .getModeArguments () .getHeadersWhitelist () ) .containsExactly ( "*" ) ; } 
public static void main ( java.lang.String[] args ) { javax.swing.JFrame window = new javax.swing.JFrame ( "Main Window!" ) ; try { window.setContentPane ( new grts.Main.MainPanel () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } window.setResizable ( false ) ; window.pack () ; window.setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; window.setVisible ( true ) ; } 
public void stringToAllOtherUsers ( User author, java.lang.String s ) { try { for ( User u : users ) { if ( ! ( u.getName () .equalsIgnoreCase ( author.getName () ) ) ) { u.writeString ( s ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public <T> SigmaEC.util.Option<java.util.List<T>> getOptionalInstancesFromParameter ( final java.lang.String parameterName, final java.lang.Class expectedSuperClass ) { assert parameterName != null; assert ! ( parameterName.isEmpty () ) ; assert expectedSuperClass != null; try { if ( properties.containsKey ( parameterName ) ) return new SigmaEC.util.Option ( ( ( java.util.List<T> ) ( getInstancesFromParameter ( parameterName, expectedSuperClass ) ) ) ) ; else return Option.NONE; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void Initialize ( com.traintrax.navigation.service.mdu.MotionDetectionUnitInterface motionDetectionUnit, com.traintrax.navigation.service.TrackSwitchControllerInterface trackSwitchController, com.traintrax.navigation.service.TrainNavigationDatabaseInterface trainNavigationDatabase, com.traintrax.navigation.service.events.PublisherInterface<com.traintrax.navigation.service.TrainNavigationServiceEventSubscriber, com.traintrax.navigation.service.TrainNavigationServiceEvent> eventPublisher, com.traintrax.navigation.service.position.InertialMotionPositionAlgorithmInterface trainPositionAlgorithm, boolean useRfidTagsOnly ) { this.motionDetectionUnit = motionDetectionUnit; this.trackSwitchController = trackSwitchController; this.eventPublisher = eventPublisher; this.trainNavigationDatabase = trainNavigationDatabase; this.positionAlgorithm = trainPositionAlgorithm; this.useRfidTagsOnly = useRfidTagsOnly; this.timer = new java.util.Timer () ; this.motionDetectionUnit.setMduCallback ( this ) ; try { setupTimer () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionEvent () { try { if ( ( tfInput.getText () .length () ) > 0 ) { if ( ( controller.getSelectedUsers () ) != null ) { java.lang.String[] recipients = controller.getSelectedUsers () ; controller.send ( new chat_client.Message ( tfInput.getText () , recipients ) ) ; } else { controller.send ( new chat_client.Message ( tfInput.getText () , true ) ) ; } tfInput.setText ( "" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { SimpleDotCom hans = new SimpleDotCom () ; ReadyBakeInput inny = new ReadyBakeInput () ; boolean isAlive = true; java.lang.System.out.println ( "Hans the dotcom yet lives. Make him run! Enter numbers 0-6 to hit him. 3 consecutive hits will kill him. " ) ; try { while ( isAlive == true ) { java.lang.String playerGuess = inny.getUserInput ( "Enter a number 0-6: " ) ; java.lang.String result = hans.checkYourself ( playerGuess ) ; java.lang.System.out.println ( result ) ; if ( result == "kill" ) { isAlive = false; java.lang.System.out.println ( "Now, hans must run!" ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getClassName () { try { if ( mClassList.isEmpty () ) { return mClassName.isEmpty () ? null : mClassName; } else { java.lang.String class_name = mClassList.get ( 0 ) ; for ( int i = 1; i < ( mClassList.size () ) ; i++ ) { class_name = "," + ( mClassList.get ( i ) ) ; } return class_name; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setFilename ( java.lang.String filename ) { try { if ( filename != null ) { if ( filename.endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField.setText ( filename.substring ( 0, ( ( filename.length () ) - 3 ) ) ) ; else connField.setText ( filename ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean add ( org.eclipse.jetty.webapp.ClasspathPattern.Entry entry ) { java.lang.String name = entry.getName () ; try { if ( entry.isClassName () ) name += "$"; else if ( entry.isLocation () ) throw new java.lang.IllegalArgumentException ( entry.toString () ) ; else if ( ".".equals ( name ) ) name = ""; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( this._entries.get ( name ) ) != null ) return false; return this._entries.put ( name, entry ) ; } 
private static boolean collides ( int x, int y, int width, int height, java.lang.Iterable<com.polarbirds.huldra.model.world.SectionBounds> boundsList ) { try { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( boundsFromList.collides ( x, y, width, height ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { try { if ( ( dataSnapshot.getValue () ) != null ) { com.example.chowdi.qremind.infrastructure.QueueInfo queueInfo = dataSnapshot.getValue ( com.example.chowdi.qremind.infrastructure.QueueInfo.class ) ; if ( ( queueInfo.getCalling () ) != null ) { if ( ! ( com.example.chowdi.qremind.activities.BaseActivity.notificationPoppedOut ) ) popUpNotification ( queueNo ) ; if ( ! ( application.notificationSend ) ) application.showNotification ( this ) ; } } else { com.example.chowdi.qremind.activities.BaseActivity.fbRefQueueTurn.removeEventListener ( com.example.chowdi.qremind.activities.BaseActivity.queueTurnListener ) ; com.example.chowdi.qremind.utils.Commons.showToastMessage ( "You have been removed from queue!", getApplicationContext () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void makeNewLayer ( java.lang.String layerName ) { try { if ( ! ( layerName.isEmpty () ) ) { javafx.scene.canvas.Canvas canvas = new javafx.scene.canvas.Canvas ( Main.WIDTH, Main.HEIGHT ) ; Main.layerStrings.add ( layerName ) ; Main.layers.put ( layerName, canvas ) ; Main.layerSelector.getItems () .add ( layerName ) ; Main.layerSelector.setValue ( layerName ) ; Main.pane.getChildren () .add ( 0, canvas ) ; Main.cursorCanvas.toFront () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isLookaheadIgnoreWhitespace ( char expectedChar ) { int tempPos = ( pos ) + 1; try { if ( tempPos >= ( input.length () ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } char c = input.charAt ( tempPos ) ; while ( isWhitespace ( c ) ) { ++tempPos; if ( tempPos >= ( input.length () ) ) return false; c = input.charAt ( tempPos ) ; } return c == expectedChar; } 
@ java.lang.Override public void onBackPressed () { android.support.v4.widget.DrawerLayout drawer = ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) ; try { if ( drawer.isDrawerOpen ( GravityCompat.START ) ) { drawer.closeDrawer ( GravityCompat.START ) ; } else { super.onBackPressed () ; leaveGame () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void mathButton_ActionPerformed ( java.awt.event.ActionEvent evt ) { int[] rows = new int[mainTable_.getRowCount () ]; try { for ( int i = 0; i < ( rows.length ) ; i++ ) { java.lang.Integer j = ( ( java.lang.Integer ) ( mainTable_.getValueAt ( mainTable_.convertRowIndexToModel ( i ) , 0 ) ) ) ; rows[i] = j; } } catch ( Exception ex ) { ex.printStackTrace () ; } edu.valelab.gaussianfit.MathForm mf = new edu.valelab.gaussianfit.MathForm ( edu.valelab.gaussianfit.DataCollectionForm.studio_.getUserProfile () , rows, rows ) ; mf.setVisible ( true ) ; } 
@ org.junit.Test public void booleanWorks () { org.assertj.core.api.Assertions.assertThat ( prefs.hasGuestFlag () ) .isFalse () ; org.assertj.core.api.Assertions.assertThat ( prefs.getGuestFlag ( true ) ) .isTrue () ; prefs.putGuestFlag ( true ) ; org.assertj.core.api.Assertions.assertThat ( prefs.hasGuestFlag () ) .isTrue () ; try { org.assertj.core.api.Assertions.assertThat ( prefs.getGuestFlag () ) .isTrue () ; } catch ( Exception ex ) { ex.printStackTrace () ; } prefs.removeGuestFlag () ; org.assertj.core.api.Assertions.assertThat ( prefs.hasGuestFlag () ) .isFalse () ; } 
public void validate ( ca.nines.ise.dom.DOM dom ) { try { for ( ca.nines.ise.node.Node n : dom ) { if ( ( n.type () ) == ( ca.nines.ise.node.NodeType.END ) ) { switch ( n.getName () .toLowerCase () ) { case "ornament": process_end ( ( ( ca.nines.ise.node.EndNode ) ( n ) ) ) ; break; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean contains ( java.lang.String key ) { int[] hashes = getHashes ( key ) ; try { for ( int hash : hashes ) { if ( ! ( store.getBit ( ( hash % ( capacity ) ) ) ) ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private test.Type visitType ( test.TypeContext type ) { try { if ( type.getText () .equals ( "int" ) ) { return new test.IntegerType () ; } else if ( type.getText () .equals ( "boolean" ) ) { return new test.BooleanType () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public android.graphics.Bitmap rotate ( android.graphics.Bitmap bmp ) { android.graphics.Matrix matrix = new android.graphics.Matrix () ; try { matrix.postRotate ( 90 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.graphics.Bitmap b1 = android.graphics.Bitmap.createBitmap ( bmp, 0, 0, bmp.getWidth () , bmp.getHeight () , matrix, true ) ; return b1; } 
public void update ( by.expertsoft.butko.phone.Phone phone ) { java.util.Map<java.lang.String, java.lang.Object> params = new java.util.HashMap<> () ; params.put ( "name", phone.getName () ) ; try { params.put ( "cost", phone.getPrice () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } params.put ( "p_id", phone.getManufacturer () .getId () ) ; namedParameterJdbcTemplate.update ( by.expertsoft.butko.dao.phone.JdbcPhoneDao.SQL_UPDATE_MOBILEPHONES, params ) ; } 
public void initView () { butterknife.ButterKnife.bind ( this ) ; try { setSupportActionBar ( toolbar ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getSupportActionBar () ) != null ) { getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar () .setDisplayShowTitleEnabled ( false ) ; } toolbar.setNavigationOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( v.getContext () , com.jerry.notes.Activities.Login.class ) ; startActivity ( intent ) ; } } ) ; } 
private android.support.v7.widget.CardView buildCommentItem ( final com.floatingmuseum.mocloud.data.entity.Comment comment ) { android.support.v7.widget.CardView comment_item = ( ( android.support.v7.widget.CardView ) ( android.view.LayoutInflater.from ( this ) .inflate ( R.layout.comment_item, commentContainer, false ) ) ) ; try { if ( enableColorful () ) { initCommentItem ( this, comment_item, comment, mainSwatch, itemSwatch, false ) ; } else { initCommentItem ( this, comment_item, comment, null, null, false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return comment_item; } 
public void insertOrder ( Simulator.Order order ) { long price = order.getPrice () ; java.util.TreeMap<java.lang.Long, java.util.LinkedList<Simulator.Order>> sideBook = getSideBook ( order.getSide () ) ; try { if ( sideBook.containsKey ( price ) ) { java.util.LinkedList<Simulator.Order> entries = sideBook.get ( price ) ; entries.add ( order ) ; } else { java.util.LinkedList<Simulator.Order> entries = new java.util.LinkedList () ; entries.add ( order ) ; sideBook.put ( price, entries ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void ifThereIsMatchAddItToTotalTokens ( char[] tokenBuffer ) { try { if ( ( ( tokenLength ) > 0 ) && ( ( termAtt.length () ) > 0 ) ) { final java.lang.String token = java.lang.String.copyValueOf ( tokenBuffer, 0, termAtt.length () ) ; totalTokens.put ( token, new java.lang.Integer[] { tokenStart, tokenEnd, token.length () , 1 } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testConnectionNonExistentUser () { final com.blackducksoftware.integration.hub.jenkins.PostBuildScanDescriptor descriptor = new com.blackducksoftware.integration.hub.jenkins.PostBuildScanDescriptor () ; final hudson.util.FormValidation form = descriptor.doTestConnection ( com.blackducksoftware.integration.hub.jenkins.tests.PostBuildScanDescriptorTest.testProperties.getProperty ( "TEST_HUB_SERVER_URL" ) , "NONEXITENTCREDENTIAL", "120" ) ; junit.framework.Assert.assertEquals ( FormValidation.Kind.ERROR, form.kind ) ; try { junit.framework.Assert.assertTrue ( form.getMessage () , form.getMessage () .contains ( "User needs to specify which credentials to use." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { dao.CustomerDB db = new dao.CustomerDB ( "remoteuser", "password" ) ; java.lang.String[][] stringValues = db.readAllValues () ; try { for ( int i = 0; i < ( stringValues.length ) ; i++ ) { for ( int j = 1; j < 7; j++ ) { java.lang.System.out.print ( ( ( stringValues[i][j] ) + " " ) ) ; } java.lang.System.out.println () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getHtml () throws java.io.IOException { java.lang.String[] keys = new java.lang.String[] { "#RECEIPT", "#JSONDATA" }; java.lang.String[] values = new java.lang.String[] { getReceiptType () .toString () , getJsonString () }; try { if ( values[0].equals ( "17" ) ) { return new co.celloscope.printingdemo.HtmlHelper ( this ) .getHtml ( co.celloscope.printingdemo.MainActivity.MINI_STATEMENT_TEMPLATE_HTML, keys, values ) ; } else { return new co.celloscope.printingdemo.HtmlHelper ( this ) .getHtml ( co.celloscope.printingdemo.MainActivity.TEMPLATE_HTML, keys, values ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void filterAdminOnlyFlowParams ( azkaban.user.UserManager userManager, azkaban.executor.ExecutionOptions options, azkaban.user.User user ) throws azkaban.executor.ExecutorManagerException { try { if ( ( options == null ) || ( ( options.getFlowParameters () ) == null ) ) return; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Map<java.lang.String, java.lang.String> params = options.getFlowParameters () ; if ( ! ( azkaban.server.HttpRequestUtils.hasPermission ( userManager, user, Type.ADMIN ) ) ) { params.remove ( ExecutionOptions.FLOW_PRIORITY ) ; } else { azkaban.server.HttpRequestUtils.validateIntegerParam ( params, ExecutionOptions.FLOW_PRIORITY ) ; } } 
private java.util.List<java.lang.String> getAllObjects ( java.lang.String path ) { java.util.List<java.lang.String> objects = new java.util.ArrayList<java.lang.String> () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client.listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () .withBucketName ( bucketName ) .withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; try { for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing.getObjectSummaries () ) { if ( ! ( objectSummary.getKey () .equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects.add ( objectSummary.getKey () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return objects; } 
@ java.lang.Override public void onDepthFrameEvent ( short[] depthFrame, byte[] playerIndex, float[] xyz, float[] uv ) { try { if ( ( this.lock ) != null ) { synchronized ( this.lock ) { this.lock.notifyAll () ; this.lock = null; } } } catch ( Exception ex ) { ex.printStackTrace () ; } de.gocodinggroup.multiplicationtable.input.kinect.EventManager.dispatchAndWait ( new de.gocodinggroup.multiplicationtable.input.kinect.KinectDepthFrameEvent ( depthFrame, xyz ) ) ; } 
public void setZoom ( double zoom ) { try { if ( ( getMagnification () ) > zoom ) { while ( ( getMagnification () ) > zoom ) zoomOut ( 0, 0 ) ; } else { while ( ( getMagnification () ) < zoom ) zoomIn ( 0, 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getMagnification () ) <= 1.0 ) imp.repaintWindow () ; } 
@ java.lang.Override public void stopVideoTimeCountingThread ( java.lang.String roomId ) { java.util.Iterator<com.benlinus92.synchronize.model.FutureHolder> it = countThreadFutureList.iterator () ; int index = 0; try { while ( it.hasNext () ) { if ( it.next () .getRoomId () .equals ( roomId ) ) { cancelThreadTaskByFuture ( countThreadFutureList.get ( index ) .getFuture () ) ; countThreadFutureList.remove ( index ) ; } else index++; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void back ( de.hhu.propra16.coastal.tddt.ITDDTextArea taeditor, de.hhu.propra16.coastal.tddt.ITDDTextArea tatest, de.hhu.propra16.coastal.tddt.ITDDLabel lbstatus, javafx.scene.control.Button btback ) { try { btback.setDisable ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } taeditor.setText ( de.hhu.propra16.coastal.tddt.CompilerReport.previousCode ) ; lbstatus.setText ( "RED" ) ; lbstatus.setId ( "red" ) ; de.hhu.propra16.coastal.tddt.TDDController.toTestEditor ( taeditor, tatest ) ; de.hhu.propra16.coastal.tddt.CompilerReport.target = CompileTarget.TEST; TDDTMenu.baby.editor.setText ( TDDTMenu.baby.oldEditorText ) ; } 
public recruitment.business.ApplicantDTO registerApplicant ( java.lang.String firstname, java.lang.String lastname, java.lang.String dateofbirth, java.lang.String email, java.lang.String username, java.lang.String password ) { try { if ( ( em.find ( recruitment.business.Applicant.class, username ) ) != null ) { throw new javax.persistence.EntityExistsException ( ( "Account already exists with username " + username ) ) ; } else { recruitment.business.Applicant newApplicant = new recruitment.business.Applicant ( firstname, lastname, dateofbirth, email, username, password ) ; em.persist ( newApplicant ) ; return newApplicant; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent, android.support.design.widget.AppBarLayout child, android.view.View directTargetChild, android.view.View target, int nestedScrollAxes, int type ) { try { if ( super.onStartNestedScroll ( parent, child, directTargetChild, target, nestedScrollAxes, type ) ) { bindChild ( child ) ; mOriginTop = child.getY () ; mAppBarLayout.stopScrollAnimation () ; return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void upsertCF ( com.datastax.driver.core.Session session ) { try { session.execute ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE IF NOT EXISTS " + ( TableName ) ) + " ( \"_id\" text PRIMARY KEY, name list<text> ) WITH bloom_filter_fp_chance = 0.01 " ) + " AND caching = \'{\"keys\":\"ALL\", \"rows_per_partition\":\"NONE\"}\'" ) + " AND comment = 'Auto-created by Elassandra' " ) + " AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'} " ) + " AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'} " ) + " AND dclocal_read_repair_chance = 0.1 " ) + " AND default_time_to_live = 0 " ) + " AND gc_grace_seconds = 864000 " ) + " AND max_index_interval = 2048 " ) + " AND memtable_flush_period_in_ms = 0 " ) + " AND min_index_interval = 128 " ) + " AND read_repair_chance = 0.0 " ) + " AND speculative_retry = '99.0PERCENTILE'; " ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } session.execute ( "CREATE CUSTOM INDEX elastic_external_name_idx ON customer.external ( name ) USING 'org.elasticsearch.cassandra.index.ExtendedElasticSecondaryIndex';" ) ; } 
@ java.lang.Override public void onCompletion ( com.app.sircle.WebService.PostResponse postResponse, com.app.sircle.Utility.AppError error ) { try { if ( postResponse != null ) { android.widget.Toast.makeText ( getActivity () , postResponse.getMessage () , Toast.LENGTH_SHORT ) .show () ; if ( ( postResponse.getStatus () ) == 200 ) { android.content.Intent homeIntent = new android.content.Intent ( getActivity () , com.app.sircle.UI.Activity.BaseActivity.class ) ; startActivity ( homeIntent ) ; } } else { android.widget.Toast.makeText ( getActivity () , "some error occurred", Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void registerBuiltInServices ( org.terracotta.passthrough.PassthroughConnection pseudoConnection ) { org.terracotta.passthrough.PassthroughCommunicatorServiceProvider communicatorServiceProvider = new org.terracotta.passthrough.PassthroughCommunicatorServiceProvider () ; try { this.serverProcess.registerBuiltInServiceProvider ( communicatorServiceProvider, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.terracotta.passthrough.PassthroughMessengerServiceProvider messengerServiceProvider = new org.terracotta.passthrough.PassthroughMessengerServiceProvider ( pseudoConnection ) ; this.serverProcess.registerBuiltInServiceProvider ( messengerServiceProvider, null ) ; org.terracotta.passthrough.PassthroughPlatformServiceProvider passthroughPlatformServiceProvider = new org.terracotta.passthrough.PassthroughPlatformServiceProvider ( this ) ; this.serverProcess.registerBuiltInServiceProvider ( passthroughPlatformServiceProvider, null ) ; } 
private void setMinDateInMs ( long minDateInMs ) { this.minDateInMs = minDateInMs; try { if ( ( this.minDateInMs ) > 0 ) { addSubmissionsToMap ( this.googleMap.getProjection () .getVisibleRegion () ) ; } else { addSubmissionsToMap ( this.googleMap.getProjection () .getVisibleRegion () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } buildObjectGraphAndInject () ; if ( isDebug () ) { for ( timber.log.Timber.Tree tree : getDebugTrees () ) { timber.log.Timber.plant ( tree ) ; } } else { for ( timber.log.Timber.Tree tree : getReleaseTrees () ) { timber.log.Timber.plant ( tree ) ; } } } 
public static de.beacon.tom.viibenav_radiomapper.model.Orientation getOrientationFromSensorHelper () { try { if ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) >= 90 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) < 270 ) ) return Orientation.back; else if ( ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) >= 0 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) < 90 ) ) || ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) >= 270 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) <= 360 ) ) ) return Orientation.front; else return Orientation.undetermined; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.firebase.client.Firebase.setAndroidContext ( this ) ; setContentView ( R.layout.activity_friend_list ) ; super.onCreateDrawer () ; if ( savedInstanceState == null ) { getSupportFragmentManager () .beginTransaction () .add ( R.id.container, new com.gatech.objectsanddesign.shoppingwithfriends.FriendList.PlaceholderFragment () ) .commit () ; } } 
public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner; java.util.ArrayList<java.lang.String> words = new java.util.ArrayList<java.lang.String> () ; scanner = new java.util.Scanner ( requestLine ) ; try { while ( scanner.hasNext () ) { words.add ( scanner.next () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } scanner.close () ; if ( ( words.size () ) == 3 ) { return words.get ( 2 ) ; } return "HTTP/1.1"; } 
@ org.junit.Test public void testSimpleLdcw () throws java.io.IOException { machine = pad.ijvm.MachineFactory.createIJVMInstance ( new java.io.File ( "files/task4/LoadTest1.ijvm" ) ) ; machine.step () ; assertEquals ( "The first constant should be 1", machine.topOfStack () , 1 ) ; machine.step () ; assertEquals ( "The second constant should be 2", machine.topOfStack () , 2 ) ; try { machine.step () ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( "The third constant shoult be 3", machine.topOfStack () , 3 ) ; } 
public static void init ( final java.lang.String keyFiles, final java.lang.String pageRankFile ) throws java.io.IOException { try { if ( ! ( de.citec.sc.templates.TopicSpecificPageRankTemplate.isInitialized ) ) { final java.util.Set<java.lang.Integer> indicies; de.citec.sc.templates.TopicSpecificPageRankTemplate.log.info ( "Load topic specific page rank file..." ) ; indicies = de.citec.sc.templates.TopicSpecificPageRankTemplate.loadTopicSpecificPageRanks ( pageRankFile ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log.info ( "Done, loading topic specific page rank index mapping file" ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log.info ( "Load topic specific page rank index mapping file..." ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.loadIndexMapping ( keyFiles, indicies ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log.info ( "Done, loading topic specific page rank index mapping file" ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.isInitialized = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onBlockActivated ( net.minecraft.entity.player.EntityPlayer entityPlayer, mods.eln.misc.Direction side, float vx, float vy, float vz ) { try { if ( onBlockActivatedRotate ( entityPlayer ) ) { return true; } else { return inventory.take ( entityPlayer.getCurrentEquippedItem () , this, false, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public atv.model.TreeNode createNode ( java.lang.String locationlevel, java.lang.String locationname ) { atv.model.TreeNode node = new atv.model.TreeNode ( locationname, locationlevel ) .setViewHolder ( new atv.holder.SelectableItemHolder ( getActivity () , ( locationlevel + ": " ) ) ) ; try { node.setSelectable ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return node; } 
@ android.support.annotation.RequiresApi ( api = Build.VERSION_CODES.LOLLIPOP ) @java.lang.Override public void run () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; android.util.Log.d ( "--------->", "run: " ) ; iv.setImageDrawable ( mContext.getResources () .getDrawable ( mDot[1], null ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.leftMargin = ( ( int ) ( mDotGroup.getChildAt ( 0 ) .getX () ) ) ; params.gravity = android.view.Gravity.BOTTOM; try { mFrameLayout.addView ( iv, params ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mSelectedDot = mFrameLayout.getChildAt ( 1 ) ; } 
static final int getPartitionForProcedure ( org.voltdb.catalog.Procedure procedure, org.voltdb.StoredProcedureInvocation task ) { final org.voltdb.CatalogContext.ProcedurePartitionInfo ppi = ( ( org.voltdb.CatalogContext.ProcedurePartitionInfo ) ( procedure.getAttachment () ) ) ; try { if ( procedure.getSinglepartition () ) { return org.voltdb.InvocationDispatcher.getPartitionForProcedure ( ppi.index, ppi.type, task ) ; } else { return org.voltdb.iv2.MpInitiator.MP_INIT_PID; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void init ( net.sickill.off.common.OffListModel model ) { this.model = model; final java.util.List<java.lang.String> sourceGroups = java.util.Collections.singletonList ( net.sickill.off.FakeProject.PROJECT_ROOT ) ; java.lang.String projectRootDir = net.sickill.off.FakeProject.PROJECT_ROOT; try { this.model.reinit ( sourceGroups ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( net.sickill.off.common.ProjectFile pf : col ) { this.model.addFile ( pf ) ; } } 
public void refreshListView () { if ( ( currentRegisteredUser ) != null ) { journals = selectMyJournalsFromDB ( mEmail ) ; } else { journals = dbLink.selectAvailableJournals () ; } try { if ( ( journals ) != null ) { com.journee.utils.AlbumRecycleViewAdapter adapter = new com.journee.utils.AlbumRecycleViewAdapter ( this, journals ) ; mRecyclerView.setAdapter ( adapter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void stop () { if ( ( filesToPlay ) != null ) { filesToPlay.clear () ; } if ( ( mediaPlayer ) != null ) { mediaPlayer.stop () ; } try { if ( ( ctx ) != null ) { abandonAudioFocus () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void gameCycle ( java.awt.Color color ) { try { if ( color == ( chosenColor ) ) { gui.ColorGameGUI.finalScore = ( gui.ColorGameGUI.finalScore ) + 100; setWord () ; setColor () ; count = ( count ) + 1; } else { setWord () ; setColor () ; count = ( count ) + 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( count ) == 5 ) { endGame () ; } } 
@ java.lang.SuppressWarnings ( value = "null" ) @java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { java.util.LinkedList<java.lang.Long> expList = new java.util.LinkedList<java.lang.Long> () ; expList = de.mpa.client.ui.dialogs.SelectExperimentDialog.showDialog ( de.mpa.client.ui.ClientFrame.getInstance () , "Select experiments" ) ; try { if ( ! ( expList.isEmpty () ) ) { new de.mpa.client.ui.panels.ResultsPanel.FetchResultsTask ( expList ) .execute () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setTaskTime ( defaultPart.Task task, java.lang.String timeString ) { try { defaultPart.Logic.logger.log ( java.util.logging.Level.FINER, "Setting task time using \"{0}\"", timeString ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String[] startAndEndTime = timeString.split ( "-", 2 ) ; assert ( startAndEndTime.length ) > 0; task.setStartTime ( getTimeFromString ( startAndEndTime[0] ) ) ; if ( ( startAndEndTime.length ) == 2 ) { task.setEndTime ( getTimeFromString ( startAndEndTime[1] ) ) ; } } 
public void centerModel ( org.gearvrf.GVRSceneObject model ) { org.gearvrf.GVRSceneObject.BoundingVolume bv = model.getBoundingVolume () ; float sf = 1; model.getTransform () .setScale ( sf, sf, sf ) ; bv = model.getBoundingVolume () ; try { model.getTransform () .setPosition ( ( - ( bv.center.x ) ) , ( - ( bv.center.y ) ) , ( ( - ( bv.center.z ) ) - ( 1.5F * ( bv.radius ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void pushUp ( int i ) { try { while ( ( i > 1 ) && ( ( compare2 ( heap.get ( i ) , heap.get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i, ( i / 2 ) ) ; i /= 2; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( final java.lang.String[] args ) throws java.lang.Exception { java.util.List<quickdt.Instance> diaInstances = quickdt.Benchmarks.loadDiabetesDataset () ; quickdt.Benchmarks.testWithInstances ( "diabetes", diaInstances ) ; final java.util.List<quickdt.Instance> moboInstances = quickdt.Benchmarks.loadMoboDataset () ; try { quickdt.Benchmarks.testWithInstances ( "mobo", moboInstances ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void createPeriodTable ( android.database.sqlite.SQLiteDatabase sqLiteDatabase ) { try { sqLiteDatabase.execSQL ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( TABLE_PERIOD ) ) + " ( " ) + ( PERIOD_COLUMN_ID ) ) + " INTEGER PRIMARY KEY NOT NULL, " ) + ( PERIOD_COLUMN_SCHOOL_HOUR_NO ) ) + "INTEGER NOT NULL, " ) + ( PERIOD_COLUMN_STARTTIME ) ) + " TIME NOT NULL, " ) + ( PERIOD_COLUMN_ENDTIME ) ) + " TIME NOT NULL ) " ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void playGame () { Engine.printBoard () ; Engine.printHand () ; while ( ( Engine.handIsOver () ) == false ) { Engine.playerAction () ; Engine.computerAction () ; Engine.dealerAction () ; Engine.printBoard () ; Engine.printHand () ; } Engine.determineWinners () ; try { Engine.splitWinnings () ; } catch ( Exception ex ) { ex.printStackTrace () ; } Engine.askForNewRound () ; } 
@ java.lang.Override public void autonomousInit () { java.lang.String mode = ( ( java.lang.String ) ( modeChooser.getSelected () ) ) ; try { if ( mode == "forward" ) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString ( "", "Test Forward" ) ; } else if ( mode == "gear" ) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString ( "", "Test Gear" ) ; } else { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString ( "", "Test Nothing" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( autonomousCommand ) != null ) autonomousCommand.start () ; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { int hour = timeSetter.getCurrentHour () ; int minute = timeSetter.getCurrentMinute () ; java.util.Calendar cal = java.util.Calendar.getInstance () ; try { cal.set ( java.util.Calendar.HOUR, hour ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cal.set ( java.util.Calendar.MINUTE, minute ) ; cal.set ( java.util.Calendar.SECOND, 0 ) ; timeToggle.setChecked ( true ) ; timerWindow.dismiss () ; alarm.setExact ( AlarmManager.RTC_WAKEUP, cal.getTimeInMillis () , pendingPandoraIntent ) ; } 
private com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey generateZoneKey ( final org.xbill.DNS.Name name, final java.util.List<org.xbill.DNS.Record> list, final boolean dynamicRequest, final boolean dnssecRequest ) { try { if ( dynamicRequest && ( !dnssecRequest ) ) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey ( name, list ) ; } else if ( ( isDnssecEnabled ( name ) ) && ( name.subdomain ( com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneManager.getTopLevelDomain () ) ) ) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.SignedZoneKey ( name, list ) ; } else { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey ( name, list ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean checkAnswer ( int answer ) { try { java.lang.System.out.println ( ( "answer: " + answer ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( answer == ( currAnswer ) ) { hintArea.setText ( "" ) ; if ( ( game.getRemainingHints () ) == 0 ) game.finish () ; playGame () ; return true; } return false; } 
@ java.lang.Override public void doFilter ( com.cdi.crud.infra.filter.ServletRequest req, com.cdi.crud.infra.filter.ServletResponse resp, com.cdi.crud.infra.filter.FilterChain chain ) throws com.cdi.crud.infra.filter.ServletException, java.io.IOException { req.setCharacterEncoding ( "UTF-8" ) ; resp.setCharacterEncoding ( "UTF-8" ) ; javax.servlet.http.HttpServletResponse httpResp = ( ( javax.servlet.http.HttpServletResponse ) ( resp ) ) ; try { requestHolder.get () .setCurrentRequest ( ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } httpResp.setHeader ( "X-UA-Compatible", "IE=Edge" ) ; chain.doFilter ( req, resp ) ; } 
public boolean fireProjectile ( final java.lang.Class<? extends MarsRoverKata.Projectile> type ) { MarsRoverKata.Projectile projectileToFire = com.google.common.collect.Iterables.get ( com.google.common.collect.Collections2.filter ( projectiles, new com.google.common.base.Predicate<MarsRoverKata.Projectile> () { @java.lang.Override public boolean apply ( MarsRoverKata.Projectile input ) { return input.getClass () .isAssignableFrom ( type ) ; } } ) , 0, null ) ; if ( projectileToFire == null ) { return false; } projectileToFire.launch ( getFacing () , getLocation () ) ; try { projectiles.remove ( projectileToFire ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public java.lang.String toString () { SinglyLinkedNode<E> current = head; if ( this.isEmpty () ) { return "[]"; } java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb.append ( ( "[" + ( current.data ) ) ) ; while ( ( current.next ) != null ) { current = current.next; sb.append ( ", " ) .append ( current.data ) ; } try { sb.append ( "]" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return sb.toString () ; } 
public void keyPressed ( java.awt.event.KeyEvent keyPressed ) { try { if ( ( keyPressed.getKeyCode () ) == ( java.awt.event.KeyEvent.VK_ENTER ) ) { command = inArea.getText () ; tcpService.sendCommand ( command.trim () ) ; inArea.setText ( "" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.Date getCommentDate ( int postId, int commentId ) { try { if ( ( posts.get ( postId ) ) == null ) { return new java.util.Date ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( posts.get ( postId ) .comments ) == null ) { return new java.util.Date ( 0 ) ; } for ( me.dibber.blablablapp.core.Post.Comment c : posts.get ( postId ) .comments ) { if ( ( c.id ) == commentId ) { return c.date; } } return new java.util.Date ( 0 ) ; } 
@ java.lang.Override public void preProcessData () { org.matsim.core.api.experimental.events.EventsManager eventsManager = org.matsim.core.events.EventsUtils.createEventsManager () ; org.matsim.contrib.emissions.events.EmissionEventsReader emissionReader = new org.matsim.contrib.emissions.events.EmissionEventsReader ( eventsManager ) ; eventsManager.addHandler ( this.warmHandler ) ; eventsManager.addHandler ( this.coldHandler ) ; try { emissionReader.parse ( this.emissionEventsFile ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { java.lang.String input = "In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to eat: it was a hobbit-hole and that means comfort."; org.aas.ga.examples.AsciiMatcherGA ga = new org.aas.ga.examples.AsciiMatcherGA ( org.aas.ga.chromo.ChromosomeFactory.createDefaultChromosomes ( new org.aas.ga.genes.AsciiGene ( 1 ) , input.length () , 200 ) , 50000, 0.6, 0.4, 0.6, 0.5, input ) ; ga.setInverseFitnessRanking ( true ) ; try { ga.run () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void btTestarMouseReleased ( java.awt.event.MouseEvent evt ) { if ( "".equals ( tfSite.getText () ) ) { Pingador.Shell.atualizaOutput ( Pingador.ft1.taOutput, "Alvo invalido" ) ; return; } if ( ( java.lang.Integer.parseInt ( spQtPack.getValue () .toString () ) ) < 3 ) { Pingador.ft1.ESTADO.setc ( 3 ) ; } try { ftcn () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int compareTo ( de.uniks.template.TemplateFragment other ) { if ( ( other.getKey () ) == ( key ) ) { if ( other.getValue () .equals ( value ) ) { return 0; } return -1; } try { if ( ( other.getKey () ) > ( key ) ) { return -1; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 1; } 
public final byte[] memOrLoad () { byte[] mem = _mem; if ( mem != null ) return mem; water.Freezable pojo = _pojo; try { if ( pojo != null ) return _mem = pojo.asBytes () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( _max ) == 0 ) return _mem = new byte[0]; return _mem = loadPersist () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { v.setOnClickListener ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String num = ev.getText () .toString () .trim () ; if ( ( num == null ) || ( "".equals ( num ) ) ) return; double n = parseDouble ( num ) ; if ( n == 0 ) setText ( "Error: Divide by zero." ) ; else setText ( inIntTermsOfAny ( ( n / ( currentValue ) ) ) , ev ) ; v.setVisibility ( View.GONE ) ; } 
@ java.lang.Override public void onPause () { android.util.Log.d ( com.dxyh.fqrtmpplayer.FQRtmpPusher.TAG, "onPause" ) ; mPausing = true; try { mSensorManager.unregisterListener ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( mFirstTimeInitialized ) { mOrientationListener.disable () ; } stopPreview () ; closeCamera () ; resetScreenOn () ; mHandler.removeMessages ( com.dxyh.fqrtmpplayer.FQRtmpPusher.FIRST_TIME_INIT ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent.getStringExtra ( MainActivity.LOCATION_KEY ) ; android.util.Log.d ( "intent", ( "Location: " + location ) ) ; android.widget.TextView textView = new android.widget.TextView ( this ) ; textView.setTextSize ( 40 ) ; try { textView.setText ( ( ( ( getString ( R.string.display_location_text ) ) + ": " ) + location ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( textView ) ; } 
private void showUpdateViews () { try { switch ( mTypeDataRecyclerViewAdapter ) { case com.example.framgia.hrm_10.controller.recyclerviewdata.DataRecyclerViewAdapter.TYPE_DEPARTMENT: mDepartmentsList.clear () ; mDepartmentsList.addAll ( mDbHelper.getDbDepartment () .getAllDepartments () ) ; mAdapterRecyclerView.notifyDataSetChanged () ; break; case com.example.framgia.hrm_10.controller.recyclerviewdata.DataRecyclerViewAdapter.TYPE_STAFF: mStaffList.clear () ; getListStaff ( Settings.START_INDEX_DEFAULT ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { if ( resultCode == ( RESULT_OK ) ) { if ( requestCode == ( com.example.deepak.socialnetworkingapp.upload.SELECT_PICTURE ) ) { android.net.Uri selectedImageUri = data.getData () ; if ( null != selectedImageUri ) { imgView.setImageURI ( selectedImageUri ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mainActivity.isWorking () ) ) { android.widget.Toast.makeText ( mainActivity, "请先开启服务", Toast.LENGTH_SHORT ) .show () ; return; } android.content.Intent intent = new android.content.Intent ( getContext () , com.crossbow.app.x_timer.app_list.AddAppActivity.class ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPreExecute () { android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( mContext.getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo activeNetwork = cm.getActiveNetworkInfo () ; boolean isConnected = ( activeNetwork != null ) && ( activeNetwork.isConnectedOrConnecting () ) ; try { if ( isConnected ) { showProgressDialogue () ; } else { android.widget.Toast.makeText ( mContext, mContext.getString ( R.string.toast_no_internet_connection ) , Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startJanekBujButtonActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ! ( areGameButtonsStatesOk ( org.stepinterpreter.janek.GameChoiceJPanel.janekBuj ) ) ) { javax.swing.JOptionPane.showMessageDialog ( this, "Masz odpaloną już inną grę" ) ; return; } interpreter = new org.stepinterpreter.janek.JanekBujInterpreter () ; thread = new java.lang.Thread ( interpreter ) ; try { thread.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( "Akcja!" ) ; showDeactivationButton () ; } 
private void handleAutoImprov ( int slotInPlayback ) { int gap = lickgenFrame.getGap () ; try { if ( ( lickgenFrame.getRecurrent () ) && ( slotInPlayback >= ( ( stopPlaybackAtSlot ) - gap ) ) ) { ( recurrentIteration ) ++; setFirstChorus ( false ) ; setStatus ( ( "Chorus " + ( recurrentIteration ) ) ) ; originalGenerate ( lickgen, improviseStartSlot, improviseEndSlot ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { if ( isInCommingCall ) { stopIncomeCallTimer () ; android.util.Log.d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG, ( "isInCommingCall - " + ( isInCommingCall ) ) ) ; } com.quickblox.sample.videochatwebrtcnew.SessionManager.setCurrentSession ( null ) ; android.util.Log.d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG, "Stop session" ) ; try { stopTimer () ; } catch ( Exception ex ) { ex.printStackTrace () ; } closeByWifiStateAllow = true; finish () ; } 
public org.nusco.narjillos.shared.things.Thing findClosestTo ( org.nusco.narjillos.shared.things.Thing thing, java.lang.String labelRegExp ) { if ( isEmpty () ) return null; java.util.Set<org.nusco.narjillos.shared.things.Thing> nearbyNeighbors = getNearbyNeighbors ( thing, labelRegExp ) ; if ( ! ( nearbyNeighbors.isEmpty () ) ) return findClosestTo_Amongst ( thing, nearbyNeighbors, labelRegExp ) ; try { synchronized ( allTheThings ) { return findClosestTo_Amongst ( thing, allTheThings, labelRegExp ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void runIntent () { try { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this, com.kumar.shirtstore.service.MyService.class ) ; intent.setData ( android.net.Uri.parse ( com.kumar.shirtstore.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast.makeText ( this, "Network not available", Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void handleRecv ( long latency ) { ( recvCountInterval ) ++; ( recvCountTotal ) ++; if ( latency > 0 ) { minLatency = java.lang.Math.min ( minLatency, latency ) ; maxLatency = java.lang.Math.max ( maxLatency, latency ) ; cumulativeLatencyInterval += latency; cumulativeLatencyTotal += latency; ( latencyCountInterval ) ++; ( latencyCountTotal ) ++; } try { report () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int simpleComputeNextLineIndentLevel ( int indentLevel, java.util.List<groovyjarjarantlr.Token> tokens ) { int adjust = getOpenVersusCloseBalance ( tokens ) ; try { if ( adjust > 0 ) { indentLevel += getPrefs () .getIndentationSize () ; } else if ( adjust < 0 ) { indentLevel -= getPrefs () .getIndentationSize () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return indentLevel; } 
public void onApplicationEvent ( org.springframework.context.event.ContextRefreshedEvent contextRefreshedEvent ) { if ( alreadySetup ) { return; } twitter.entity.Privilege viewPagesPrivilege = createPrivilegeIfNotFound ( RolesAndPrivileges.VIEW_PAGES_PRIVILEGE ) ; java.util.List<twitter.entity.Privilege> userPrivileges = java.util.Arrays.asList ( viewPagesPrivilege ) ; createRoleIfNotFound ( RolesAndPrivileges.ROLE_ADMIN, userPrivileges ) ; createRoleIfNotFound ( RolesAndPrivileges.ROLE_USER, userPrivileges ) ; try { createAdminIfNotExists () ; } catch ( Exception ex ) { ex.printStackTrace () ; } createDefaultImgIfDoesNotExist ( InitialPhotoSettings.DEFAULT_IMG_PATH ) ; alreadySetup = true; } 
public java.util.List<com.JJ.controller.invoicemanagement.vo.InvoiceVO> getAllInvoiceByIdList ( java.util.List<java.lang.Integer> idList ) { try { if ( ( idList != null ) && ( ! ( idList.isEmpty () ) ) ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample.createCriteria () .andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) .andInvoiceIdIn ( idList ) ; invoiceDbObjectExample.setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper.selectByExample ( invoiceDbObjectExample ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.util.ArrayList<com.JJ.controller.invoicemanagement.vo.InvoiceVO> () ; } 
@ java.lang.Override protected void onPause () { super.onPause () ; android.util.Log.d ( com.example.administrator.alarm.MainActivity.TAG, "onPause E" ) ; com.example.administrator.alarm.AlarmStorage.saveState ( this, mToggleBtn.isChecked () ) ; try { com.example.administrator.alarm.AlarmStorage.saveAllSetting ( this, start_hourOfDay, start_min, stop_hourOfDay, stop_min, ( mCheckBtn.isChecked () ? 1 : 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.openrubicon.social.database.models.Friend getRelation ( org.bukkit.OfflinePlayer p2 ) { com.openrubicon.social.database.models.Friend model = new com.openrubicon.social.database.models.Friend () ; try { model.setPlayer2_id ( p2.getUniqueId () .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } model.setPlayer1_id ( user.getUniqueId () .toString () ) ; model = model.selectRelation () ; return model; } 
private void fileChangeUpdate () { this.filenameLabel.setText ( currentFileName ) ; java.lang.System.out.println ( currentExtension ) ; try { if ( currentExtension.equals ( "txt" ) ) { this.sourceTypeLabel.setText ( "PlainText Mode" ) ; } else if ( currentExtension.equals ( "cpp" ) ) { this.sourceTypeLabel.setText ( "CPP Mode" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testOverflow3 () throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, org.spf4j.zel.vm.CompileException { org.spf4j.zel.vm.Program p = org.spf4j.zel.vm.Program.compile ( ( ( ( "" + ( java.lang.Long.MIN_VALUE ) ) + " - " ) + ( java.lang.Long.MAX_VALUE ) ) ) ; java.lang.System.out.println ( p ) ; java.math.BigInteger result = ( ( java.math.BigInteger ) ( p.execute () ) ) ; try { org.junit.Assert.assertEquals ( java.math.BigInteger.valueOf ( java.lang.Long.MIN_VALUE ) .subtract ( java.math.BigInteger.valueOf ( java.lang.Long.MAX_VALUE ) ) , result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test ( timeout = 1000 ) public void randomMovement () { java.lang.String rID = "1"; java.lang.String bID = "0"; edu.vt.ece5574.agents.User oUsr = new edu.vt.ece5574.agents.User ( sim, rID, bID, true, 1, 1 ) ; try { sim.addAgent ( oUsr ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } double initial_x = oUsr.getX () ; double initial_y = oUsr.getY () ; oUsr.createRandomMovement ( sim ) ; assertFalse ( ( ( ( oUsr.getX () ) == initial_x ) && ( ( oUsr.getY () ) == initial_y ) ) ) ; } 
private void roamDirectory ( java.io.File directory ) { java.io.File[] fileList = directory.listFiles ( interestingFilesFilter ) ; if ( fileList != null ) { for ( java.io.File file : fileList ) { searchListener.onInterestingFileFound ( file ) ; addChecked ( file ) ; } } java.io.File[] dirs = directory.listFiles ( directoryFileFilter ) ; try { if ( dirs != null ) { for ( java.io.File dir : dirs ) { roamDirectory ( dir ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { try { notesAdmin.updateNote ( tbNoteTitel.getText () , tbNoteSubTitel.getText () , taUpdateNoteText.getText () , timestampe, currentUser.getId () , "keine quelle", currentNotebook.getId () , currentNote, new com.google.gwt.user.client.rpc.AsyncCallback<java.lang.Void> () { @java.lang.Override public void onSuccess ( java.lang.Void result ) { de.hdm.itprojekt.noteit.client.EditNotes.this.hide () ; de.hdm.itprojekt.noteit.client.Homepage.updateNotesCellList ( currentNotebook.getId () ) ; } @java.lang.Override public void onFailure ( java.lang.Throwable caught ) { } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void winGame () { try { runOnUiThread ( new java.lang.Runnable () { @java.lang.Override public void run () { endGameHandler.postDelayed ( new java.lang.Runnable () { public void run () { spaceShip.win () ; } }, 300 ) ; endGame () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGetUsers () throws java.lang.Exception { com.cmartin.learn.mybank.api.UserFilter userFilter = this.filterManger.buildUserFilter () ; try { org.mockito.Mockito.when ( this.bankApi.getUsers ( org.mockito.Matchers.any ( com.cmartin.learn.mybank.api.UserFilter.class ) ) ) .thenReturn ( com.cmartin.learn.mybank.test.TestUtils.createUsers ( 2 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.mockMvc.perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get ( "/users" ) ) .andDo ( org.springframework.test.web.servlet.result.MockMvcResultHandlers.print () ) .andExpect ( com.cmartin.learn.mybank.web.WebTest.statusOk ) ; } 
public void loadImages ( java.util.List<com.albums.model.Album> albums ) { try { if ( ( albums != null ) && ( ( albums.size () ) > 0 ) ) { waitMb.show ( baseAlbumActivity ) ; this.unprocessedAlbums = new java.util.ArrayList<com.albums.model.Album> ( albums ) ; for ( int i = 0; i < ( albums.size () ) ; i++ ) { com.albums.util.ImageLoader imageLoader = new com.albums.util.ImageLoader ( baseAlbumActivity, this ) ; imageLoader.execute ( albums.get ( i ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void skipComment () { com.rezzedup.map.Source.Character peek = source.peekNextCharacter () ; while ( ( ( ( peek.character ) != null ) && ( ( peek.character ) != '#' ) ) && ( ( peek.character ) != '\n' ) ) { source.getNextCharacter () ; peek = source.peekNextCharacter () ; } try { if ( ( peek.character ) == '#' ) { source.getNextCharacter () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void ToggleCircleColor ( com.google.android.gms.maps.model.Circle circle ) { int strokeColor = ( circle.getStrokeColor () ) ^ 52224; try { circle.setStrokeColor ( strokeColor ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } circle.setStrokeWidth ( ( ( circle.getStrokeWidth () ) == 3 ? 6 : 3 ) ) ; } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest, int flags ) { try { dest.writeString ( this.email ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dest.writeString ( this.label ) ; dest.writeLong ( this.uid ) ; dest.writeLong ( this.receivedDateInMillisecond ) ; dest.writeLong ( this.sentDateInMillisecond ) ; dest.writeStringArray ( this.from ) ; dest.writeStringArray ( this.to ) ; dest.writeString ( this.subject ) ; dest.writeStringArray ( this.flags ) ; } 
public void update ( float dt ) { handleInput ( dt ) ; try { minerPos = miner.b2body.getPosition () ; } catch ( Exception ex ) { ex.printStackTrace () ; } world.step ( ( 1 / 60.0F ) , 6, 2 ) ; updateCamera ( gameCam, getMapPixelWidth () , getMapPixelHeight () ) ; renderer.setView ( gameCam ) ; } 
public boolean borrowBook ( Library lib, java.lang.String title ) { try { if ( lib.bookList.containsKey ( title ) ) { borrowedBooks.add ( lib.bookList.get ( title ) .get ( 0 ) ) ; lib.bookList.get ( title ) .remove ( 0 ) ; return true; } else { java.lang.System.out.println ( "Book not Found" ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage placeOrder ( @org.springframework.web.bind.annotation.RequestParam java.lang.String utoken, @org.springframework.web.bind.annotation.RequestParam java.lang.String order ) { try { if ( ( org.apache.commons.lang3.StringUtils.isBlank ( utoken ) ) || ( org.apache.commons.lang3.StringUtils.isBlank ( order ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST; } catch ( Exception ex ) { ex.printStackTrace () ; } com.alibaba.fastjson.JSONObject orderJson = com.alibaba.fastjson.JSON.parseObject ( order ) ; orderJson.put ( "customerId", userServiceApi.USER.get ( utoken ) .getId () ) ; dealServiceApi.ORDER.add ( orderJson ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS; } 
private void visitYieldExpression ( com.google.javascript.rhino.Node n ) { try { if ( n.getParent () .isExprResult () ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( decomposer.canExposeExpression ( n ) ) != ( ExpressionDecomposer.DecompositionType.UNDECOMPOSABLE ) ) { decomposer.exposeExpression ( n ) ; compiler.reportCodeChange () ; } else { compiler.report ( com.google.javascript.jscomp.JSError.make ( n, Es6ToEs3Converter.CANNOT_CONVERT, "Undecomposable expression" ) ) ; } } 
public com.badlogic.poker.core.logic.WinCondition checkCombination () { com.badlogic.poker.core.logic.Card[] cardsOnDesk = game.getTable () .getCardsOnDesk () ; try { java.lang.System.out.println ( ( "cards on table: " + ( cardsOnDesk.length ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.badlogic.poker.core.logic.WinCondition win = checkForKind ( cardsOnDesk ) ; game.drawTable () ; game.changeMoney ( win.getCost () ) ; return win; } 
@ java.lang.Override public int hashCode () { int hcode = java.util.Objects.hash ( getDisplayName () , getSummandExpression () ) ; java.util.Iterator<?> vmIter = this.getMatchers () .iterator () ; try { while ( vmIter.hasNext () ) { hcode += vmIter.next () .hashCode () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return hcode; } 
private void executeAlarm () { java.util.List<com.doers.wakemeapp.common.model.audio.Song> songs = mCurrentAlarm.getPlaylist () .getSongs () ; int randSong = new java.util.Random () .nextInt ( songs.size () ) ; com.doers.wakemeapp.common.model.audio.Song selectedSong = songs.get ( randSong ) ; java.lang.String songPath = selectedSong.getPath () ; startSoundService ( songPath ) ; try { displayNotification ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Deprecated @android.support.annotation.Nullable public java.lang.String toLegacyString () { java.lang.String string = ( ( this ) == ( org.wikipedia.page.Namespace.MAIN ) ) ? null : this.name () ; try { if ( string != null ) { string = org.wikipedia.util.StringUtil.capitalizeFirstChar ( string.toLowerCase () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return string; } 
public cs446.mezzo.music.playlists.Playlist getPlaylist ( java.lang.String playlistName ) { try { if ( playlistName.equals ( cs446.mezzo.music.playlists.PlaylistManager.FAVOURITES ) ) { return mFavourites; } else if ( mUserPlaylists.containsKey ( playlistName ) ) { return mUserPlaylists.get ( playlistName ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } final cs446.mezzo.music.playlists.AutoPlaylist autoPlaylist = cs446.mezzo.music.playlists.AutoPlaylist.get ( playlistName ) ; if ( autoPlaylist == null ) { return null; } return autoPlaylist.getPlaylist ( mLocalMusicFetcher, mStatCollector ) ; } 
@ java.lang.Override public java.lang.String generateUri ( java.io.File file, java.lang.String id ) { java.lang.String uri = file.toURI () .toString () ; uri = ( ( getOutputUriReplace () ) != null ) ? applyOutputUriReplace ( uri, getOutputUriReplace () ) : uri; try { uri = ( ( getOutputUriPrefix () ) != null ) ? ( getOutputUriPrefix () ) + uri : uri; } catch ( Exception ex ) { ex.printStackTrace () ; } uri = ( ( getOutputUriSuffix () ) != null ) ? uri + ( getOutputUriSuffix () ) : uri; return uri; } 
@ java.lang.Override public void onSuccess ( java.lang.Object object ) { try { if ( null != object ) { heroes = ( ( com.example.pratik.dota2profile.beans.Heroes ) ( object ) ) ; for ( com.example.pratik.dota2profile.beans.Hero i : heroes.getResult () .getHeroes () ) { heroesMap.put ( java.lang.Integer.parseInt ( i.getId () ) , i.getLocalizedName () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void fakeBtnFb () { playSound ( R.raw.touch_sound ) ; try { if ( ( com.oic.game.ailatrieuphu.util.NetworkUtils.checkInternetConnection ( this ) ) && ( mSocketAltp.isConnected () ) ) { int permissionCheck = android.support.v4.content.ContextCompat.checkSelfPermission ( this, Manifest.permission.READ_PHONE_STATE ) ; if ( permissionCheck != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat.requestPermissions ( this, new java.lang.String[] { Manifest.permission.READ_PHONE_STATE }, com.oic.game.ailatrieuphu.ui.activity.LoginScreen.REQUEST_READ_PHONE_STATE ) ; } else { mLoginButtonFb.performClick () ; } } else { connectionDialog.show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { java.util.Calendar cal = java.util.Calendar.getInstance () ; try { new android.app.DatePickerDialog ( context, dateSetListener, cal.get ( java.util.Calendar.YEAR ) , ( ( cal.get ( java.util.Calendar.MONTH ) ) + 1 ) , cal.get ( java.util.Calendar.DAY_OF_MONTH ) ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final void setMaximized ( boolean maximized ) { try { if ( ( ( isMaximizable () ) && ( ! ( isMaximized () ) ) ) && maximized ) { fireMaximizeEvent () ; maximizedProperty.set ( true ) ; } else if ( ( !maximized ) && ( isMaximized () ) ) { fireRestoreEvent () ; maximizedProperty.set ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public cn.edu.nju.software.entity.User addOrUpdateUser ( cn.edu.nju.software.entity.User user ) { if ( ( ( user.getId () ) != null ) && ( ( user.getId () ) != 0 ) ) { boolean up = userDao.updateUser ( user ) ; return up ? user : null; } boolean res = userDao.saveUser ( user ) ; try { if ( res ) { user.setId ( userDao.getNewestId () ) ; return user; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override protected void reset ( float pos1, float pos2 ) { squadSelectButton = mainButton.addSelectButton ( this ) ; try { super.reset ( pos1, pos2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } inventory.reset () ; this.setSelected ( true ) ; selectKey = com.esbjon.entities.Squad.handler.findOrAssignKey ( this ) ; this.stop () ; } 
@ java.lang.Override public void call ( java.lang.reflect.Method method ) { java.lang.Class<?>[] parameterTypes = method.getParameterTypes () ; com.androidyuan.rxbus.component.Subscribe subscribeAnnotation = method.getAnnotation ( com.androidyuan.rxbus.component.Subscribe.class ) ; try { if ( subscribeAnnotation != null ) { java.lang.Class<?> eventType = parameterTypes[0]; java.lang.String key = eventType.getName () ; putObject ( key, subscriber ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super.onSaveInstanceState ( outState ) ; try { outState.putString ( "query", query ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mRecipeAdapter.getItemCount () ) != 0 ) { mRecipeList = mRecipeAdapter.getData () ; outState.putParcelableArrayList ( BUNDLE_RECIPE_ARRAY, mRecipeList ) ; } } 
public static boolean matchTypes ( com.jetbrains.ther.typing.types.TheRType type, com.jetbrains.ther.typing.types.TheRType replacementType ) { try { if ( type instanceof com.jetbrains.ther.typing.types.TheRUnionType ) { return ( ( com.jetbrains.ther.typing.types.TheRUnionType ) ( type ) ) .contains ( replacementType ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( type.equals ( replacementType ) ) || ( com.jetbrains.ther.typing.TheRTypeProvider.isSubtype ( replacementType, type ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.data.domain.Pageable pageable, org.springframework.ui.Model uiModel ) { org.springframework.data.domain.Page<com.appspot.gardemallorie.domain.Location> page = locationService.findAllLocations ( pageable ) ; try { uiModel.addAttribute ( "locations", page.getContent () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } uiModel.addAttribute ( "maxPages", page.getTotalPages () ) ; return "locations/list"; } 
public void onBreakBlock ( net.minecraft.world.World worldIn ) { if ( worldIn.isRemote ) return; net.minecraftforge.fml.common.FMLLog.info ( "onBreakBlock in TileEntity" ) ; for ( com.balrog.InfernalTech.energy.IEnergyChannel channel : this.channels ) { channel.removeChannelConnection ( worldIn, this ) ; } try { this.channels.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.receivers = new cofh.api.energy.IEnergyReceiver[6]; com.balrog.InfernalTech.energy.EnergyNetwork network = this.getNetwork () ; if ( network != null ) network.destroy () ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { userInput.setMax ( maxResults.getValue () ) ; userInput.setRadius ( radius.getValue () ) ; savedSettings.edit () .putInt ( "se.deltazulu.www.sl_closeby.maxResults", userInput.getMax () ) .apply () ; savedSettings.edit () .putInt ( "se.deltazulu.www.sl_closeby.radius", userInput.getRadius () ) .apply () ; try { getStationsList () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<com.audit.bl.beans.Loan> getUserLoans ( com.audit.bl.beans.User user ) { java.util.List<com.audit.bl.beans.Loan> loanList = null; java.lang.String sql = loanSqls.getProperty ( "user.select" ) ; org.hibernate.Query query = getSessionFactory () .getCurrentSession () .createQuery ( sql ) ; try { query.setLong ( "fromUser", user.getUserId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } query.setLong ( "toUser", user.getUserId () ) ; loanList = ( ( java.util.List<com.audit.bl.beans.Loan> ) ( query.list () ) ) ; return loanList; } 
private void addHistoryToDb () { com.example.run.RunHistory newHistory = new com.example.run.RunHistory ( mStartTime.getTime () , mRunnerData.getTime () , mRunnerData.getDistance () , mRunnerFilename ) ; com.example.run.DatabaseHelper dbHelper = new com.example.run.DatabaseHelper ( this ) ; try { if ( ( mRouteId ) == ( HistoryActivity.NO_ROUTE_FLAG ) ) { dbHelper.addHistory ( newHistory ) ; } else if ( ( mRouteId ) == ( HistoryActivity.NEW_ROUTE_FLAG ) ) { dbHelper.newRoute ( newHistory, com.example.run.MapsActivity.mRouteNamePrefix ) ; } else { dbHelper.appendRunToRoute ( newHistory, mRouteId ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void insert ( com.bergamin.contactlist.model.Contact contact ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues data = new android.content.ContentValues () ; data.put ( "name", contact.getName () ) ; data.put ( "address", contact.getAddress () ) ; data.put ( "phone", contact.getPhone () ) ; try { data.put ( "webSite", contact.getWebSite () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } db.insert ( "Contacts", null, data ) ; } 
public java.lang.Thread addPerson ( int sourceFloor, int destinationFloor ) { java.lang.Thread person = new java.lang.Thread ( new com.ru.usty.elevator.Person ( sourceFloor, destinationFloor, this ) ) ; try { person.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } personCount.set ( sourceFloor, ( ( personCount.get ( sourceFloor ) ) + 1 ) ) ; return null; } 
@ org.junit.Test public void getUsersResultsAllUsernamesNotEmpty () { user.UserSearch searcher = new user.UserSearch ( "" ) ; java.util.ArrayList<user.User> users = ( ( java.util.ArrayList<user.User> ) ( searcher.getUsers () ) ) ; try { for ( user.User user : users ) { assertFalse ( "".equals ( user.getUsername () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.bftcom.timesheet.export.WorklogExportParams projects ( java.util.Collection<java.lang.String> projectNames ) { try { if ( ( projectNames == null ) || ( ( projectNames.size () ) == 0 ) ) { this.projects = java.util.Collections.emptyList () ; } else { this.projects = transformProjects ( ( ( java.lang.String[] ) ( projectNames.toArray () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
private io.github.mariandcrafter.devathlon2.runde1.game.GameMap getRandomFreeMap () { java.util.List<io.github.mariandcrafter.devathlon2.runde1.game.GameMap> maps = new java.util.ArrayList<io.github.mariandcrafter.devathlon2.runde1.game.GameMap> ( io.github.mariandcrafter.devathlon2.runde1.Main.getConfiguration () .getGameMaps () ) ; for ( io.github.mariandcrafter.devathlon2.runde1.game.Match match : matches ) { maps.remove ( match.getGameMap () ) ; } try { if ( ( maps.size () ) == 0 ) return null; } catch ( Exception ex ) { ex.printStackTrace () ; } return maps.get ( this.random.nextInt ( maps.size () ) ) ; } 
@ java.lang.Override public void onAccountCreatorIsPhoneNumberUsed ( org.linphone.core.LinphoneAccountCreator accountCreator, org.linphone.core.LinphoneAccountCreator.Status status ) { try { if ( ( org.linphone.assistant.AssistantActivity.instance () ) == null ) { apply.setEnabled ( true ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( status.equals ( LinphoneAccountCreator.Status.PhoneNumberUsedAccount ) ) || ( status.equals ( LinphoneAccountCreator.Status.PhoneNumberUsedAlias ) ) ) { accountCreator.recoverPhoneAccount () ; } else { apply.setEnabled ( true ) ; org.linphone.LinphoneUtils.displayErrorAlert ( org.linphone.LinphoneUtils.errorForStatus ( status ) , org.linphone.assistant.AssistantActivity.instance () ) ; } } 
@ org.androidannotations.annotations.Click ( value = R.id.fragment_bt_scan_qr ) protected void scannerQrCode () { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( getActivity () ) ; integrator.setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator.setPrompt ( "Scan QR" ) ; try { integrator.setCameraId ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } integrator.setBeepEnabled ( false ) ; integrator.setBarcodeImageEnabled ( false ) ; integrator.initiateScan () ; } 
@ java.lang.Override public void loadMoreFinish ( boolean emptyResult, boolean hasMore ) { mLoadError = false; mListEmpty = emptyResult; mIsLoading = false; mHasMore = hasMore; if ( ( mLoadMoreUIHandler ) != null ) { mLoadMoreUIHandler.onLoadFinish ( this, emptyResult, hasMore ) ; } try { if ( ( mFooterView ) != null ) { if ( hasMore ) { mFooterView.setVisibility ( com.being.base.ui.widget.ptr.loadmore.VISIBLE ) ; } else { mFooterView.setVisibility ( com.being.base.ui.widget.ptr.loadmore.GONE ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int sign = e.getWheelRotation () ; try { if ( sign < 0 ) { this.cam_zoom_increase () ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( sign > 0 ) { this.cam_zoom_decrease () ; return; } } 
public int getScaleQual () { int qual = dlConfig.getAsInt ( "default-quality" ) ; try { if ( hasOption ( "q0" ) ) qual = 0; else if ( hasOption ( "q1" ) ) qual = 1; else if ( hasOption ( "q2" ) ) qual = 2; } catch ( Exception ex ) { ex.printStackTrace () ; } return qual; } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } int orderId = getIntent () .getIntExtra ( OrderStatusNotification.ORDER_ID, ( -1 ) ) ; if ( orderId != ( -1 ) ) navTo ( new activity.OrderDetailFragment () .setOrder ( new model.Order ( orderId ) ) ) ; } 
public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { try { currentActorOption.loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback<java.util.List<gov.nist.toolkit.results.client.TestInstance>> () { @java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable.getMessage () ) ) ) ; } @java.lang.Override public void onSuccess ( java.util.List<gov.nist.toolkit.results.client.TestInstance> testInstances ) { loadingMessage.setHTML ( "Loading..." ) ; displayTests ( testsPanel, testInstances, allowRun () ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void displayMaze ( algorithms.mazeGenerators.Maze3d m, java.lang.String name ) { maze = new view.Maze3dDisplay ( shell, org.eclipse.swt.SWT.BORDER, this ) ; maze.setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL, org.eclipse.swt.SWT.FILL, true, true, 1, 1 ) ) ; menu.displayGoalGuide () ; try { menu.setGoalFloorText ( m.getGoalPosition () .z ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } maze.initMaze ( m, name, "images/fly.png" ) ; maze.moveAbove ( welcome ) ; welcome.dispose () ; shell.layout ( true ) ; } 
@ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent, float pTouchAreaLocalX, float pTouchAreaLocalY ) { try { if ( pSceneTouchEvent.isActionDown () ) { setCurrentTileIndex ( 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( pSceneTouchEvent.isActionUp () ) { setCurrentTileIndex ( 0 ) ; setPause ( false ) ; } return true; } 
@ java.lang.Override public void onSuccess ( long reqId, java.lang.String header, java.lang.String sequence, java.util.List<biospectra.classify.beans.SearchResultEntry> result, biospectra.classify.beans.ClassificationResult.ClassificationResultType type, java.lang.String taxonRank ) { try { if ( ( responseHandler ) != null ) { responseHandler.onSuccess ( reqId, header, sequence, result, type, taxonRank ) ; } else { biospectra.classify.ClassifierClient.LOG.error ( "responseHandler is not set" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBackPressed () { java.lang.String displayedFragment = contactsModel.getProperty ( io.craigmiller160.contacts5.util.ContactsConstants.DISPLAYED_FRAGMENT, java.lang.String.class ) ; try { if ( ( displayedFragment != null ) && ( displayedFragment.equals ( io.craigmiller160.contacts5.util.ContactsConstants.TABS_FRAGMENT_TAG ) ) ) { finish () ; } else { backAction () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public it.blogspot.geoframe.SewerPipeDimensioning.Pipe run ( final it.blogspot.geoframe.SewerPipeDimensioning.Pipe pipe ) { try { setPipe ( pipe ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( pipeSlope ) >= ( minSlope ) ) { this.pipe.buildPipe ( elevationEndPoint, computeDiameter ( pipeSlope ) , it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient, computeVelocity () ) ; } else { this.pipe.buildPipe ( computeElevationEndPoint ( minSlope ) , diameter, it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient, computeVelocity () ) ; } return this.pipe; } 
public boolean insert ( int newData ) { Node newestNode = new Node () ; try { if ( newestNode == null ) { java.lang.System.out.println ( "Out of memory error." ) ; return false; } else { newestNode.setData ( newData ) ; newestNode.setNext ( head.getNext () ) ; head.setNext ( newestNode ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.StringBuilder getHtmlBody () { java.lang.StringBuilder html = new java.lang.StringBuilder () ; try { if ( ! ( this.body.isEmpty () ) ) { html.append ( "<tbody>" ) ; for ( com.github.dandelion.datatables.core.html.HtmlRow row : this.body ) { html.append ( row.toHtml () ) ; } html.append ( "</tbody>" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return html; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.System.out.println ( "Onclick choose call" ) ; android.content.Intent i = new android.content.Intent () ; i.putExtra ( this.getString ( R.string.intent_extra_directory ) , m_directory.getCurrentDirectory () .getAbsolutePath () ) ; this.setResult ( Activity.RESULT_OK, i ) ; try { this.finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showMoreBooks ( int itemsPerPage ) { int start = lessBooks.size () ; int end = start + itemsPerPage; try { for ( int i = start; i < end; i++ ) { lessBooks.add ( books.get ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { super.onRestoreInstanceState ( savedInstanceState ) ; long progressTime = savedInstanceState.getLong ( app.park.com.vr.VrVideoActivity.STATE_PROGRESS_TIME ) ; mVrVideoView.seekTo ( progressTime ) ; isPaused = savedInstanceState.getBoolean ( app.park.com.vr.VrVideoActivity.STATE_IS_PAUSED ) ; try { if ( isPaused ) { pauseVideo () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String export ( be.nikiroo.gofetch.data.Story story ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; append ( builder, story, false ) ; try { builder.append ( "i\r\n" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( story.getComments () ) != null ) { for ( be.nikiroo.gofetch.data.Comment comment : story.getComments () ) { append ( builder, comment, "" ) ; } } builder.append ( "i\r\n" ) ; return builder.toString () ; } 
private static java.lang.String getPath ( @org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile root, @org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile file ) { java.lang.String path = com.intellij.openapi.util.text.StringUtil.notNullize ( mobi.hsz.idea.gitignore.util.Utils.getRelativePath ( root, file ) ) ; path = mobi.hsz.idea.gitignore.util.Utils.escapeChar ( path, '[' ) ; path = mobi.hsz.idea.gitignore.util.Utils.escapeChar ( path, ']' ) ; try { path = com.intellij.openapi.util.text.StringUtil.trimLeading ( path, VfsUtil.VFS_PATH_SEPARATOR ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( com.intellij.openapi.vfs.VfsUtil.VFS_PATH_SEPARATOR ) + path; } 
public static play.mvc.Result tracks () { play.data.Form<models.TrackRegistration> form = play.data.Form.form ( models.TrackRegistration.class ) ; java.lang.String currentUserAddress = models.utility.AST.getUserAddress () ; try { controllers.Tracks.getTrack () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ok ( views.html.member.tracks.render ( form, currentUserAddress ) ) ; } 
@ java.lang.Override public boolean isDisabled ( java.lang.String layerName ) { uk.ac.rdg.resc.edal.catalogue.jaxb.VariableConfig xmlVariable = getXmlVariable ( layerName ) ; try { if ( xmlVariable != null ) { return xmlVariable.isDisabled () ; } else { uk.ac.rdg.resc.edal.ncwms.config.NcwmsDynamicService dynamicService = getDynamicServiceFromLayerName ( layerName ) ; if ( dynamicService != null ) { return dynamicService.isDisabled () ; } else { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onTouch ( android.view.View v, android.view.MotionEvent event ) { try { switch ( event.getAction () ) { case android.view.MotionEvent.ACTION_DOWN: this.x = event.getX () ; this.y = event.getY () ; return true; case android.view.MotionEvent.ACTION_UP: this.detectMovement ( event.getX () , event.getY () ) ; return true; default: return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_main ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v4.view.ViewPager viewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.vp_mainActivity ) ) ) ; com.example.emcako.birthdayreminder.MainActivity.mainPageAdapter = new com.example.emcako.birthdayreminder.MainActivity.MainPageAdapter ( getSupportFragmentManager () ) ; viewPager.setAdapter ( com.example.emcako.birthdayreminder.MainActivity.mainPageAdapter ) ; } 
@ java.lang.Override protected void onNewIntent ( android.content.Intent intent ) { super.onNewIntent ( intent ) ; try { if ( intent.hasExtra ( info.schnatterer.nusic.android.activities.MainActivity.EXTRA_ACTIVE_TAB ) ) { info.schnatterer.nusic.android.activities.MainActivity.currentTab = ( ( info.schnatterer.nusic.android.activities.MainActivity.TabDefinition ) ( intent.getExtras () .get ( info.schnatterer.nusic.android.activities.MainActivity.EXTRA_ACTIVE_TAB ) ) ) ; android.support.v4.view.ViewPager pager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.mainPager ) ) ) ; pager.setCurrentItem ( info.schnatterer.nusic.android.activities.MainActivity.currentTab.position ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startId ) { try { android.util.Log.i ( "LocalService", ( ( ( "Received start id " + startId ) + ": " ) + intent ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mIsPersistent = true; if ( intent != null ) { android.content.Intent target = intent.getParcelableExtra ( "notificationTarget" ) ; if ( target != null ) showNotification ( target ) ; } return START_STICKY; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { view = inflater.inflate ( R.layout.memory_add_wrapper, container, false ) ; butterknife.ButterKnife.bind ( this, view ) ; _selectedItem = ( ( com.oneupapplications.bucketapp.API.DataModel.Memory ) ( getActivity () .getIntent () .getSerializableExtra ( MemoryDetailActivity.EXTRA_MEMORY_ID ) ) ) ; setupNavigation () ; try { fillItemView ( _selectedItem ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
private <T> T getObject ( java.lang.String url, java.lang.Class<T> type ) { this.services = client.target ( ( ( com.excilys.formation.computerdb.ui.RestCLI.BASE_URL ) + url ) ) ; try { java.lang.System.out.println ( ( ( com.excilys.formation.computerdb.ui.RestCLI.BASE_URL ) + url ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } javax.ws.rs.client.Invocation.Builder request = this.services.request ( MediaType.APPLICATION_JSON ) ; javax.ws.rs.core.Response response = request.get () ; if ( ( response.getStatus () ) == 200 ) { return response.readEntity ( type ) ; } return null; } 
private com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto readAmrProfileStatusCode ( final org.openmuc.jdlms.datatypes.DataObject amrProfileStatusData ) throws org.osgp.adapter.protocol.dlms.exceptions.ProtocolAdapterException { try { if ( ! ( amrProfileStatusData.isNumber () ) ) { throw new org.osgp.adapter.protocol.dlms.exceptions.ProtocolAdapterException ( "Could not read AMR profile register data. Invalid data type." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } final java.util.Set<com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeFlagDto> flags = this.amrProfileStatusCodeHelperService.toAmrProfileStatusCodeFlags ( ( ( java.lang.Number ) ( amrProfileStatusData.value () ) ) ) ; return new com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto ( flags ) ; } 
private void getDeviceLocation () { if ( ( android.support.v4.content.ContextCompat.checkSelfPermission ( getActivity () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { mLocationPermissionGranted = true; } else { android.support.v4.app.ActivityCompat.requestPermissions ( getActivity () , new java.lang.String[] { android.Manifest.permission.ACCESS_FINE_LOCATION }, me.kahlout.rangebuddy.DistanceFragment.PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION ) ; } try { if ( mLocationPermissionGranted ) { mCurrentLocation = LocationServices.FusedLocationApi.getLastLocation ( mGoogleApiClient ) ; LocationServices.FusedLocationApi.requestLocationUpdates ( mGoogleApiClient, mLocationRequest, this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Deprecated public java.util.List<teammates.common.datatransfer.attributes.StudentProfileAttributes> getAllStudentProfiles () { java.util.List<teammates.common.datatransfer.attributes.StudentProfileAttributes> list = new java.util.LinkedList<> () ; java.util.List<teammates.storage.entity.StudentProfile> entities = getStudentProfileEntities () ; try { for ( teammates.storage.entity.StudentProfile student : entities ) { list.add ( new teammates.common.datatransfer.attributes.StudentProfileAttributes ( student ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return list; } 
private void init () { android.graphics.Point displaySize = new android.graphics.Point () ; try { getWindowManager () .getDefaultDisplay () .getSize ( displaySize ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fr.pchab.AndroidRTC.PeerConnectionParameters params = new fr.pchab.AndroidRTC.PeerConnectionParameters ( true, false, displaySize.x, displaySize.y, 30, 1, fr.pchab.AndroidRTC.RTCActivity.VIDEO_CODEC_VP9, true, 1, fr.pchab.AndroidRTC.RTCActivity.AUDIO_CODEC_OPUS, true ) ; org.webrtc.PeerConnectionFactory.initializeAndroidGlobals ( this, true, true, params.videoCodecHwAcceleration, org.webrtc.VideoRendererGui.getEGLContext () ) ; client = new fr.pchab.AndroidRTC.WebRtcClient ( this, mSocketAddress, params ) ; } 
@ java.lang.Override public int newNet ( java.lang.String shortName, int cloneId, int width ) { java.lang.System.out.println ( ( ( ( ( ( "newNet " + shortName ) + " " ) + cloneId ) + " " ) + width ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList.get ( ( ( fCurrentEvent ) ++ ) ) ; assertEquals ( event.fType, VCDLoaderTest.ExpectTraceBuilder.EXPECT_NET ) ; assertEquals ( event.fName, shortName ) ; assertEquals ( event.fId, cloneId ) ; try { assertEquals ( event.fWidth, width ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( fNextNetId ) ++; } 
public void endSection ( int section ) { lcm.spy.ObjectPanel.Section cs = sections.get ( section ) ; if ( ( collapse_depth ) == 0 ) { unindent () ; } if ( sections.get ( section ) .collapsed ) { ( collapse_depth ) --; } try { spacer () ; } catch ( Exception ex ) { ex.printStackTrace () ; } endColorBlock () ; spacer () ; } 
private static java.lang.Boolean ReadVerifyStoreDumpPage ( net.basov.nfc.NFCaDump dump, java.lang.String line ) { java.lang.Boolean rc = false; try { if ( ( line.matches ( "-?[0-9a-fA-F]+" ) ) && ( ( line.length () ) == 8 ) ) { dump.addPage ( net.basov.util.FileIO.hexStringToByteArray ( line ) ) ; rc = true; } else { dump.appendRemark ( ( ( "E: :" + line ) + ":\n" ) ) ; rc = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return rc; } 
public boolean creatObject ( java.lang.String name, java.lang.String modelPath, int coordinateSystemID, int x, int y ) { if ( end ) return false; try { view.queueEvent ( new gameSystem.gameObjectSystem.ObjectCreator ( sdk, modelPath, coordinateSystemID, objects, OIR.getSoldierInfoByName ( name ) , x, y ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public java.util.List<de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState> process ( final de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState oldState, final de.uni_freiburg.informatik.ultimate.model.boogie.ast.Statement statement ) { mReturnState = new java.util.ArrayList<> () ; assert oldState != null; assert statement != null; mOldState = oldState; mLhsVariable = null; processStatement ( statement ) ; try { assert ( ( oldState.getVariables () .size () ) == 0 ) || ( ( mReturnState.size () ) != 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return mReturnState; } 
public void setDockBatteryController ( com.android.systemui.statusbar.policy.DockBatteryController dockBatteryController ) { com.android.systemui.DockBatteryMeterView v = ( ( com.android.systemui.DockBatteryMeterView ) ( findViewById ( R.id.dock_battery ) ) ) ; try { if ( dockBatteryController != null ) { v.setBatteryStateRegistar ( dockBatteryController ) ; if ( ( mDockBatteryLevel ) != null ) { mDockBatteryLevel.setBatteryStateRegistar ( dockBatteryController ) ; } } else { if ( v != null ) { removeView ( v ) ; } if ( ( mDockBatteryLevel ) != null ) { removeView ( mDockBatteryLevel ) ; mDockBatteryLevel = null; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void playMusic ( android.view.View view ) { if ( DEBUG ) android.util.Log.d ( com.vibejukebox.jukebox.activities.JukeboxPlaylistActivity.TAG, "playMusic -- ( View ) " ) ; android.widget.ImageButton playButton = ( ( android.widget.ImageButton ) ( findViewById ( R.id.playButton ) ) ) ; try { if ( mCurrentPlayerState.playing ) { mChangeTrack = false; mPlayer.pause () ; playButton.setImageDrawable ( getResources () .getDrawable ( R.drawable.play ) ) ; } else { mPlayer.resume () ; mChangeTrack = true; playButton.setImageDrawable ( getResources () .getDrawable ( R.drawable.pause ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void uploadPicture ( com.pervasive.sth.network.Media mediaFile ) throws java.lang.Exception { try { android.util.Log.d ( LOG_TAG, "Uploading picture on web server." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.json.JSONObject jsonPicture = new org.json.JSONObject () ; jsonPicture.put ( "PIC_NAME", mediaFile.getMediaName () ) ; byte[] pictureData = mediaFile.getData () ; java.lang.String encodedData = android.util.Base64.encodeToString ( pictureData, Base64.DEFAULT ) ; jsonPicture.put ( "PIC_DATA", encodedData ) ; pictureClient.executePost ( jsonPicture.toString () ) ; } 
@ java.lang.Override public void afterTextChanged ( android.text.Editable s ) { java.lang.String text = s.toString () .trim () ; savedApis.clear () ; for ( int i = 0; i < ( allsavedApis.size () ) ; i++ ) { if ( allsavedApis.get ( i ) .getName () .toLowerCase () .contains ( text.toLowerCase () ) ) { savedApis.add ( allsavedApis.get ( i ) ) ; } } mAdapter.notifyDataSetChanged () ; try { setEmptyText () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean collidesWithFace ( entities.Ball b ) { org.lwjgl.util.vector.Vector3f closest = toolbox.Maths.closestPtPointTriangle ( b.getPosition () , point1, point2, point3 ) ; try { org.lwjgl.util.vector.Vector3f.sub ( b.getPosition () , closest, dist ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( dist.length () ) <= ( entities.Ball.RADIUS ) ) return true; return false; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( makeupCount ) < ( saveBitmap.size () ) ) { ( makeupCount ) ++; temp = saveBitmap.get ( makeupCount ) .copy ( temp.getConfig () , true ) ; imageView.setImageBitmap ( temp ) ; android.util.Log.d ( ( ( fyp.hkust.facet.activity.ColorizeFaceActivity.TAG ) + " redo " ) , ( ( ( saveBitmap.size () ) + " " ) + ( makeupCount ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void doPowerup ( java.lang.String which ) { try { if ( which.equals ( "left" ) ) { if ( GameLogic.leftPlayerPowerup.isEmpty () ) return; else startLeftPowerup ( GameLogic.leftPlayerPowerup.pop () ) ; } else if ( which.equals ( "right" ) ) { if ( GameLogic.rightPlayerPowerup.isEmpty () ) return; else startRightPowerup ( GameLogic.rightPlayerPowerup.pop () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void firstRun ( int currentVersion ) { android.content.Intent activity = new android.content.Intent ( this, es.ugr.swad.swadroid.sync.AccountAuthenticator.class ) ; es.ugr.swad.swadroid.preferences.Preferences.setSyncTime ( java.lang.String.valueOf ( Constants.DEFAULT_SYNC_TIME ) ) ; try { startActivity ( activity ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } es.ugr.swad.swadroid.preferences.Preferences.setLastVersion ( currentVersion ) ; firstRun = true; es.ugr.swad.swadroid.preferences.Preferences.initializeSelectedCourse () ; } 
public void Proceed () { turnState = org.tilegames.hexicube.cah.client.neoteny.gameState.GameLogic.TurnState.ADDING_TO_PILE; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardsLayer.ClearPile () ; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardGame.SetNotification ( "" ) ; subCards.clear () ; try { for ( org.tilegames.hexicube.cah.client.neoteny.gameState.DummyPlayer dum : dummies ) { if ( ( czar.id ) != ( dum.me.id ) ) { dum.RequestCardSubmit () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void setGoodNight ( org.springframework.scheduling.TaskScheduler scheduler, resources.internal.Hue hue ) { try { if ( hue.getScene () .getGoodNight () .isEnabled () ) { scheduler.schedule ( com.sonie.web.util.RunnableUtil.setGoodNight ( com.sonie.web.util.CronJobUtil.LOG, hue ) , new org.springframework.scheduling.support.CronTrigger ( com.sonie.web.util.DateUtil.getCronDate ( hue.getScene () .getGoodNight () .getTime () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static Chat.Builder buildMockChat () { java.util.Random random = new java.util.Random () ; sjchat.messages.Chat.Builder chatBuilder = sjchat.messages.Chat.newBuilder () ; try { chatBuilder.setId ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } chatBuilder.setTitle ( ( "Test chat " + ( chatBuilder.getId () ) ) ) ; return chatBuilder; } 
@ java.lang.Override public char[] getPassword () throws java.io.IOException { char[] password = new char[0]; java.lang.System.out.print ( "Password: " ) ; final jline.console.ConsoleReader reader = new jline.console.ConsoleReader () ; java.lang.String passwordStr = reader.readLine ( '*' ) ; password = passwordStr.toCharArray () ; passwordStr = null; try { java.lang.System.gc () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return password; } 
@ java.lang.Override public void update ( float delta ) { com.osreboot.ridhvl.painter.HvlCamera.setX ( ( ( com.osreboot.ridhvl.painter.HvlCamera.getX () ) + ( ( ( HvlInputSeriesAction.HORIZONTAL.getCurrentOutput () ) * delta ) * 256.0F ) ) ) ; com.osreboot.ridhvl.painter.HvlCamera.setY ( ( ( com.osreboot.ridhvl.painter.HvlCamera.getY () ) + ( ( ( HvlInputSeriesAction.VERTICAL.getCurrentOutput () ) * delta ) * 256.0F ) ) ) ; try { if ( ( tilemaps ) != null ) { tilemaps.update ( delta ) ; tilemaps.draw ( delta ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void render ( float delta ) { Gdx.gl.glClearColor ( 0, 0, 0, 1 ) ; Gdx.gl.glClear ( GL30.GL_COLOR_BUFFER_BIT ) ; camera.update () ; game.batch.setProjectionMatrix ( camera.combined ) ; game.shapeRenderer.setProjectionMatrix ( camera.combined ) ; try { map.draw ( game.batch ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } entityManager.draw () ; debugRenderer.render ( world, camera.combined ) ; } 
@ org.junit.Test public void testStart () { java.lang.System.out.println ( "Testing OrionCKANSink.start" ) ; attrPersistence = "row"; enableGrouping = "true"; org.apache.flume.Context context = createContext ( attrPersistence, enableGrouping ) ; sink.configure ( context ) ; sink.setChannel ( new org.apache.flume.channel.MemoryChannel () ) ; sink.start () ; try { assertTrue ( ( ( sink.getPersistenceBackend () ) != null ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( LifecycleState.START, sink.getLifecycleState () ) ; } 
@ org.junit.Test public void testCreateArtWithNullCreationDate () { try { thrown.expect ( exceptions.ConstraintViolationException.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } thrown.expectMessage ( org.hamcrest.core.StringStartsWith.startsWith ( "Validation failed" ) ) ; thrown.expectMessage ( org.hamcrest.CoreMatchers.containsString ( "Please provide creation date or use right constructor" ) ) ; new dto.Art.ArtBuilder ( "Mona lisa", constants.ArtType.PAINTING, "Leonard Di Vinci", null ) .build () ; } 
@ java.lang.SuppressWarnings ( value = "PMD" ) @org.junit.Test public void securityTest3 () { request = makeRequest ( 3, nc.sumy.edu.webcontainer.sequrity.ServerSecurityTest.IP_VAR1 ) ; nc.sumy.edu.webcontainer.sequrity.ServerSecurity serverSecurity = new nc.sumy.edu.webcontainer.sequrity.ServerSecurity ( request, serverConfiguration ) ; org.junit.Assert.assertEquals ( serverSecurity.isAllow () , true ) ; request = makeRequest ( 3, "93.49.37.56" ) ; serverSecurity = new nc.sumy.edu.webcontainer.sequrity.ServerSecurity ( request, serverConfiguration ) ; try { org.junit.Assert.assertEquals ( serverSecurity.isAllow () , false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void canReturnCorrectScoreIfGameEndsInATie () throws java.lang.Exception { com.tictactoe.Board board = new com.tictactoe.Board () ; populateBoard_GameEndsInATie ( board ) ; com.tictactoe.Rules rules = new com.tictactoe.RulesFor3x3 () ; com.tictactoe.Minimax minimax = new com.tictactoe.Minimax ( rules, board, "X", "O" ) ; int score = minimax.minimax ( board, true, 0 ) ; try { org.junit.Assert.assertEquals ( 0, score ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getLabel () { try { if ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } return algoParent.getCommandDescription () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return kernel.printVariableName ( label ) ; } 
private void play () { this.showBoard () ; try { do { players[current].makeMove ( board ) ; this.showBoard () ; current = ( ( current ) + 1 ) % 2; } while ( ( ! ( board.hasWinner () ) ) && ( ! ( board.isFull () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.printResult () ; } 
public static com.packt.service.BookService getInstance () { java.util.ServiceLoader<com.packt.spi.BookServiceProvider> sl = java.util.ServiceLoader.load ( com.packt.spi.BookServiceProvider.class ) ; java.util.Iterator<com.packt.spi.BookServiceProvider> iter = sl.iterator () ; try { if ( ! ( iter.hasNext () ) ) throw new java.lang.RuntimeException ( "No service providers found!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.packt.spi.BookServiceProvider provider = null; while ( iter.hasNext () ) { provider = iter.next () ; java.lang.System.out.println ( provider.getClass () ) ; } return provider.getBookService () ; } 
public stamboom.domain.Gezin getGezin ( int gezinsNr ) { try { if ( ( ( ( gezinnen ) != null ) && ( 1 <= gezinsNr ) ) && ( 1 <= ( gezinnen.size () ) ) ) { return gezinnen.get ( ( gezinsNr - 1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ org.junit.Test public void whenSpeedBelow10KmItHasExpressData () { org.highway.whatsup.data.physics.SpeedMeter.Progression progressionSpeed = actionCreator.getProgression ( 2 ) ; try { org.hamcrest.MatcherAssert.assertThat ( progressionSpeed, org.hamcrest.CoreMatchers.is ( SpeedMeter.Progression.LOW_SPEED ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.highway.whatsup.domain.data.ExpressData expressData = actionCreator.getExpressWayData ( 2, lat, lng, progressionSpeed ) ; org.hamcrest.MatcherAssert.assertThat ( expressData, org.hamcrest.CoreMatchers.notNullValue () ) ; org.hamcrest.MatcherAssert.assertThat ( expressData.getCctvUrl () , org.hamcrest.CoreMatchers.notNullValue () ) ; org.hamcrest.MatcherAssert.assertThat ( expressData.getMsg () , org.hamcrest.CoreMatchers.notNullValue () ) ; } 
@ org.springframework.context.annotation.Bean @org.springframework.context.annotation.Primary public com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper () { final com.fasterxml.jackson.databind.ObjectMapper objectMapper = new com.fasterxml.jackson.databind.ObjectMapper () .setPropertyNamingStrategy ( com.fasterxml.jackson.databind.PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES ) ; objectMapper.registerModule ( enumModule () ) ; try { objectMapper.registerModule ( new com.fasterxml.jackson.datatype.jdk8.Jdk8Module () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } objectMapper.registerModule ( new org.zalando.problem.ProblemModule () ) ; return objectMapper; } 
public boolean waterWeakest () throws battlecode2017.GameActionException { battlecode2017.TreeInfo weakest = trees.getWeakestTreeWithinInteract ( team ) ; try { if ( ( ( weakest != null ) && ( ( weakest.health ) <= ( TREE_WATERING_THRESHOLD ) ) ) && ( rc.canWater ( weakest.location ) ) ) { rc.water ( weakest.location ) ; return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void refreshContent () { thestral.agc.events.EventDownloadTask eventDownloadTask = new thestral.agc.events.EventDownloadTask ( getActivity () , true ) ; thestral.agc.BackgroundDownloader backgroundDownloader = new thestral.agc.BackgroundDownloader ( getActivity () ) ; try { backgroundDownloader.executeOnExecutor ( AsyncTask.THREAD_POOL_EXECUTOR, eventDownloadTask ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateContent () ; this.swipeRefreshLayout.setRefreshing ( false ) ; } 
public void updateAirCondition () { java.util.List<java.lang.String> devices = deviceStatusDao.selectAllActiveDevices () ; java.util.List<model.CleanerStatus> cleanerStatusList = new java.util.ArrayList<model.CleanerStatus> () ; try { for ( java.lang.String deviceID : devices ) { model.CleanerStatus cleanerStatus = getCleanerStatus ( deviceID ) ; if ( ( cleanerStatus != null ) && ( ( cleanerStatus.getDeviceID () ) != null ) ) { cleanerStatusList.add ( cleanerStatus ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } boolean update = deviceStatusDao.insertDeviceStatus ( cleanerStatusList ) ; } 
public void loadAlbums ( android.content.Context context, boolean hidden ) { this.hidden = hidden; java.util.ArrayList<org.fossasia.phimpme.leafpic.data.Album> list; org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; try { list = p.getAlbums ( context, hidden ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dispAlbums = list; sortAlbums ( context ) ; } 
@ java.lang.Override public boolean onItemUse ( net.minecraft.item.ItemStack stack, @org.jetbrains.annotations.NotNull net.minecraft.entity.player.EntityPlayer playerIn, @org.jetbrains.annotations.NotNull net.minecraft.world.World worldIn, @org.jetbrains.annotations.NotNull net.minecraft.util.BlockPos pos, net.minecraft.util.EnumFacing side, float hitX, float hitY, float hitZ ) { try { playerIn.triggerAchievement ( ModAchievements.achievementWandOfbuilding ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( worldIn.isRemote ) { MineColonies.proxy.openBuildToolWindow ( pos.offset ( side ) ) ; return true; } return false; } 
private boolean isOwnProfile ( javax.faces.context.FacesContext fctx ) { try { if ( fctx.getViewRoot () .getViewId () .endsWith ( "profile.xhtml" ) ) { int userID = java.lang.Integer.parseInt ( javax.faces.context.FacesContext.getCurrentInstance () .getExternalContext () .getRequestParameterMap () .get ( "userID" ) ) ; if ( ( sessionUser.getUserID () ) == userID ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void initView () { mobileNumber = getIntent () .getStringExtra ( "NUMBER" ) ; android.widget.TextView mobileNum = getView ( R.id.editText_mobileNumber ) ; profilePic = getView ( R.id.profile_thumb ) ; mobileNum.setText ( ( ( getResources () .getString ( R.string.string_plus ) ) + ( mobileNumber ) ) ) ; emailEditText = getView ( R.id.editText_email ) ; try { nameEditText = getView ( R.id.editText_name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateReady ( java.util.List<com.kilobolt.framework.Input.TouchEvent> touchEvents ) { try { if ( ! ( otherSizeIsSet ) ) { bluetoothModule.sendMessage ( java.lang.String.format ( "%s %d %d", com.wanlin.androidgame.pikachuvolleyball.GameScreen.SCREEN_SIZE_KEY, com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenWidth, com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenHeight ) ) ; otherSizeIsSet = true; } else { if ( ( touchEvents.size () ) > 0 ) { stargGame () ; bluetoothModule.sendMessage ( java.lang.String.valueOf ( com.wanlin.androidgame.pikachuvolleyball.GameScreen.START_THAT_FUKING_GAMEEEE ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ juja.microservices.teams.controller.PutMapping ( value = "/users/{uuid}", produces = "application/json" ) public org.springframework.http.ResponseEntity<?> dismissTeam ( @juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger.debug ( "Received dismiss team request. User id in Team: {}", uuid ) ; juja.microservices.teams.entity.Team team = teamService.dismissTeam ( uuid ) ; try { logger.info ( "Team dismissed. Team Id: {}", team.getId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } logger.debug ( "Request dismiss team returned {}", team.toString () ) ; return org.springframework.http.ResponseEntity.ok ( team ) ; } 
@ java.lang.Override public fi.nls.oskari.domain.map.view.View getViewWithConf ( java.lang.String viewName ) { try { if ( ( viewName != null ) && ( ! ( viewName.isEmpty () ) ) ) { for ( fi.nls.oskari.domain.map.view.View item : list ) { if ( viewName.equals ( item.getName () ) ) { return item; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public com.buyhatke.core.Entry get ( java.lang.String key ) { com.buyhatke.core.Entry entry = getInMemoryEntry ( key ) ; try { if ( entry == null ) { entry = checkInFileSystem ( key ) ; if ( entry != null ) { if ( ! ( com.buyhatke.core.PersistenceManager.isExpired ( entry ) ) ) { this.put ( entry ) ; } else { return null; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return entry; } 
private void clearFields () { bookTitle.setText ( "" ) ; try { bookSubtitle.setText ( "" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } authorsText.setText ( "" ) ; categoriesText.setText ( "" ) ; bookContainer.setVisibility ( View.INVISIBLE ) ; scanButton.setVisibility ( View.VISIBLE ) ; if ( it.jaschke.alexandria.activities.MainActivity.IS_TABLET ) { saveButton.setVisibility ( View.GONE ) ; deleteButton.setVisibility ( View.GONE ) ; } else { saveButton.setVisibility ( View.GONE ) ; deleteButton.setVisibility ( View.GONE ) ; } } 
private java.lang.String getPlaylist () { int entryCount = java.lang.Integer.parseInt ( getConfiguration () .getProperty ( "playlist.entry.count" ) ) ; java.lang.StringBuilder playlist = new java.lang.StringBuilder () ; try { for ( int i = 1; i < entryCount; i++ ) { playlist.append ( i ) ; playlist.append ( "/ " ) ; playlist.append ( getConfiguration () .getProperty ( ( "playlist.entry.name." + i ) ) ) ; playlist.append ( "\n" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return playlist.toString () ; } 
private void changeValue ( boolean add ) { oldValue = value; if ( add ) { value = java.lang.Math.min ( maxValue, ( ( value ) + ( step ) ) ) ; } else { value = java.lang.Math.max ( minValue, ( ( value ) - ( step ) ) ) ; } try { if ( ( onValueChangedListener ) != null ) { onValueChangedListener.onValueChanged ( this, value, oldValue, minValue, maxValue, false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean accept ( java.io.File pathname ) { try { if ( pathname.getName () .contains ( EInternalTemplate.HEADER_ADDITIONAL.toString () ) ) { if ( pathname.getName () .contains ( ( ( language.getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public java.lang.Void doNotify () { logger.info ( "[notifyUpstreamChanged]{},{},{},{},{}", clusterName, shardName, ip, port, dc.getDcName () ) ; try { metaServerConsoleServiceManagerWrapper.get ( dc.getDcName () ) .upstreamChange ( clusterName, shardName, ip, port ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { android.content.Intent intent = new android.content.Intent ( getBaseContext () , a15s.android.datamatiker.mini_projekt1.TestWaresList.class ) ; try { intent.putExtra ( ShoppingListDetail.EXTRA_LISTNO, list_id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } intent.putExtra ( TestWaresList.EXTRA_STORE_ID, ( ( int ) ( id ) ) ) ; startActivity ( intent ) ; } 
@ org.junit.Test public void setSelectRename_smallerThanPrevious () { selectValuesMeta.setSelectRename ( new java.lang.String[] { org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.FIRST_FIELD, org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.SECOND_FIELD } ) ; try { selectValuesMeta.setSelectRename ( new java.lang.String[] { org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.FIRST_FIELD } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertArrayEquals ( new java.lang.String[] { org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.FIRST_FIELD, null }, selectValuesMeta.getSelectRename () ) ; } 
@ java.lang.Override public void populate () { get () .getNode ( "world", "inventory", "separate" ) .setValue ( false ) .setComment ( "Toggles separate inventories between worlds." ) ; get () .getNode ( "world", "inventory", "groups" ) .setComment ( "Contains all world inventory groups." ) ; try { get () .getNode ( "world", "inventory", "groups", "example" ) .setValue ( "world, DIM1, DIM-1" ) .setComment ( "Example world inventory group." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } get () .getNode ( "world", "weather", "locked" ) .setComment ( "Worlds listed here, will not change weather." ) ; } 
@ java.lang.Override public org.lemurproject.galago.core.parse.Document nextDocument () throws java.io.IOException { org.lemurproject.galago.core.parse.Document doc = super.nextDocument () ; try { if ( ! ( doc == null ) ) { org.lemurproject.galago.core.parse.Document nerDoc = new org.lemurproject.galago.core.parse.Document () ; nerDoc.text = doNER ( doc.text ) ; nerDoc.metadata = doc.metadata; nerDoc.name = doc.name; java.lang.System.out.println ( nerDoc.text ) ; ciir.proteus.parse.NamedEntityRecorder ner = new ciir.proteus.parse.NamedEntityRecorder ( outputPath ) ; ner.record ( nerDoc ) ; doc = nerDoc; } } catch ( Exception ex ) { ex.printStackTrace () ; } return doc; } 
private void fromPayload ( java.lang.String partContent ) { java.lang.String[] parts = partContent.split ( Constants.CRLFCRLF, 2 ) ; try { if ( 2 == ( parts.length ) ) { parseHeaders ( parts[0] ) ; mContent = parts[1].substring ( 0, parts[1].lastIndexOf ( Constants.CRLF ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setCelebFields ( com.example.jeka.movieshelper.model.Celebrity celebrity, java.lang.String jsonValue, java.lang.String value ) { try { switch ( jsonValue ) { case com.example.jeka.movieshelper.network.CelebFetch.PERSON_NAME: celebrity.setName ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_BIRTHDAY: celebrity.setBirthday ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_PLACE_OF_BIRTH: celebrity.setPlaceOfBirth ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_BIOGRAPHY: celebrity.setBiography ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_HOMEPAGE: celebrity.setHomepage ( value ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onMeasure ( int widthSpec, int heightSpec ) { try { super.onMeasure ( widthSpec, heightSpec ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( pullView ) != null ) { pullView.measure ( widthSpec, 0 ) ; setMeasuredDimension ( getMeasuredWidth () , ( ( getMeasuredHeight () ) + ( pullView.getMeasuredHeight () ) ) ) ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference, java.lang.Object data ) { final int pinStringLength = data.toString () .length () ; try { if ( pinStringLength != ( info.dvkr.screenstream.SettingsActivity.PIN_DIGITS_COUNT ) ) { android.widget.Toast.makeText ( getActivity () .getApplicationContext () , getResources () .getString ( R.string.pin_digits_count ) , Toast.LENGTH_LONG ) .show () ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public boolean leaveGroup ( long userId, long courseId, long courseSkuId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId, courseSkuId ) ; if ( ! ( group.exists () ) ) return false; try { if ( doLeaveGroup ( userId, group.getGroupId () ) ) { deleteGroupMembersLog ( group.getGroupId () , com.google.common.collect.Sets.newHashSet ( userId ) ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void changeState ( java.lang.String recordingId, java.lang.String state ) { try { if ( state.equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir, recordingId, state ) ; } else if ( state.equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir, recordingId, state ) ; } else if ( state.equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir, recordingId, state ) ; changeState ( unpublishedDir, recordingId, state ) ; changeState ( deletedDir, recordingId, state ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void comChoiceS () { java.util.Random rand = new java.util.Random () ; int comPick = ( rand.nextInt ( 3 ) ) + 1; try { if ( comPick == 1 ) { java.lang.System.out.println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main.resultsL () ; } else if ( comPick == 2 ) { java.lang.System.out.println ( "I chose paper and you chose scissors...I guess you win : ( " ) ; com.bleh.Main.resultsW () ; } else if ( comPick == 3 ) { java.lang.System.out.println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main.resultsT () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public io.netty.util.concurrent.Future<java.lang.Boolean> removeAllAsync ( java.util.Collection<?> c ) { try { if ( c.isEmpty () ) { return org.redisson.RedissonSet.newSucceededFuture ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<java.lang.Object> args = new java.util.ArrayList<java.lang.Object> ( ( ( c.size () ) + 1 ) ) ; args.add ( getName () ) ; args.addAll ( c ) ; return commandExecutor.writeAsync ( getName () , codec, RedisCommands.SREM_SINGLE, args.toArray () ) ; } 
private static void addGenericItem ( net.minecraft.item.Item item ) { com.xplosivesnet.explochem.xplosivesnet_items.items[com.xplosivesnet.explochem.xplosivesnet_items.counter] = item; if ( ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) != 0 ) item.setContainerItem ( com.xplosivesnet.explochem.xplosivesnet_items.items[0] ) ; ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) ++; try { cpw.mods.fml.common.registry.GameRegistry.registerItem ( item, item.getUnlocalizedName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setBrightness ( final int pRenderLayerIndex, final double pBrightness ) { mBrightness[pRenderLayerIndex] = ( ( float ) ( clearvolume.renderer.ClearVolumeRendererBase.clamp ( pBrightness, 0, ( ( getBytesPerVoxel () ) == 1 ? 16 : 256 ) ) ) ) ; try { notifyUpdateOfVolumeRenderingParameters () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void inMailSystemMenuShouldChangeGreeting () { phone.speak ( ConnectionTestMailboxMenu.MAILBOX_MENU_TEXT ) ; connection.dial ( "3" ) ; connection.record ( "Greeting" ) ; connection.dial ( "#" ) ; org.mockito.Mockito.verify ( currentMailbox ) .setGreeting ( "Greeting" ) ; try { assert connection.isInMailBoxMenu () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.mockito.Mockito.verify ( phone ) .speak ( ConnectionTestMailboxMenu.MAILBOX_MENU_TEXT ) ; } 
private java.util.ArrayList<org.Point> finalLocs () { java.util.ArrayList<org.Point> ret = new java.util.ArrayList<> () ; try { for ( javafx.scene.control.ChoiceBox cb : locations ) { if ( ( cb.getValue () ) != null ) { ret.add ( ( ( org.Point ) ( cb.getValue () ) ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ret; } 
protected void writeResults () throws java.io.IOException { try { org.apache.commons.io.FileUtils.write ( new java.io.File ( outputFolder, de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.UNKNOWN_WORDS_FINE ) , java.lang.String.format ( "%.1f", ( ( outvocabAccuracy ) * 100 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.apache.commons.io.FileUtils.write ( new java.io.File ( outputFolder, de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.KNOWN_WORDS_FINE ) , java.lang.String.format ( "%.1f", ( ( invocabAccuracy ) * 100 ) ) ) ; } 
private static void calculateDiscount () { java.util.Collections.sort ( Constants.quotes ) ; double higherValue = Constants.quotes.get ( 0 ) .getThreeYearTotal () ; try { if ( higherValue > 0 ) { for ( com.amazon.proposalcalculator.bean.Quote q : com.amazon.proposalcalculator.utils.Constants.quotes ) { q.setDiscount ( ( 1 - ( ( q.getThreeYearTotal () ) / higherValue ) ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void doRefreshVisual ( org.eclipse.gef.fx.nodes.GeometryNode<org.eclipse.gef.geometry.planar.IGeometry> visual ) { if ( ( getAnchoragesUnmodifiable () .size () ) != 1 ) { return; } org.eclipse.gef.geometry.planar.IGeometry feedbackGeometry = getFeedbackGeometry () ; if ( feedbackGeometry == null ) { return; } if ( feedbackGeometry instanceof org.eclipse.gef.geometry.planar.ICurve ) { visual.setStrokeType ( javafx.scene.shape.StrokeType.CENTERED ) ; } else { visual.setStrokeType ( javafx.scene.shape.StrokeType.OUTSIDE ) ; } try { visual.setGeometry ( feedbackGeometry ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void render () { Gdx.gl.glClearColor ( 1, 1, 1, 1 ) ; try { Gdx.gl.glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } stage.act () ; stage.draw () ; if ( ( ( showProgressUntilTime ) < ( com.badlogic.gdx.utils.TimeUtils.millis () ) ) && ( ( showProgressUntilTime ) != 0 ) ) { if ( ( progressDialog ) != null ) { showProgressUntilTime = 0; progressDialog.dismiss () ; } } } 
protected void onPostExecute ( java.lang.Boolean result ) { try { loadingDialog.cancel () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( result ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent.setType ( "text/plain" ) ; intent.putExtra ( Intent.EXTRA_STREAM, android.net.Uri.fromFile ( targetFile ) ) ; startActivity ( intent ) ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { if ( ( requestCode == ( com.ww23.l_band.ListenActivity.REQUEST_ENABLE_BT ) ) && ( resultCode == ( android.app.Activity.RESULT_CANCELED ) ) ) { toast ( getString ( R.string.deny_open_bluetooth ) ) ; finish () ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onActivityResult ( requestCode, resultCode, data ) ; } 
public void interact ( Entity ent ) { try { if ( ent instanceof Player ) { if ( ( GameStats.getPowerupState () ) == 0 ) { ent.setHeight ( ( ( ent.getHeight () ) * 2 ) ) ; ent.setY ( ( ( ent.getY () ) - ( ( ent.getHeight () ) / 2 ) ) ) ; GameStats.setPowerupState ( 1 ) ; } GameStats.incrementScore ( 1000 ) ; remove ( getGame () .getControlVar () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Object pop () { final int n = stack.size () ; if ( n == 0 ) { return 0L; } try { for ( int i = ( marks.size () ) - 1; i >= 0; --i ) { if ( ( marks.get ( i ) ) == n ) { marks.set ( i, ( n - 1 ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return stack.remove ( ( n - 1 ) ) ; } 
private static java.lang.String filterChars ( java.lang.String s ) { if ( s == null ) { return null; } java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try { for ( char c : s.toCharArray () ) { if ( ( "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf ( c ) ) >= 0 ) { sb.append ( c ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return sb.toString () ; } 
@ org.junit.Test public void detectListenerWithStartProximityDetectionWithCustomThreshold () { try { addSensor ( android.hardware.Sensor.TYPE_PROXIMITY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.github.nisrulz.sensey.ProximityDetector.ProximityListener fakeListener = org.mockito.Mockito.mock ( com.github.nisrulz.sensey.ProximityDetector.ProximityListener.class ) ; sensey.startProximityDetection ( 10.0F, fakeListener ) ; com.github.nisrulz.sensey.ProximityDetector detector = getDetector ( fakeListener, com.github.nisrulz.sensey.ProximityDetector.class ) ; if ( detector != null ) { org.junit.Assert.assertTrue ( "Sensor Manager must contain sensor event listener for proximity", shadowSensorManager.hasListener ( detector ) ) ; } else { org.junit.Assert.fail ( "There should be proximity detector in sensey. If not, please, check last version of class and update reflection accessing to it field" ) ; } } 
@ java.lang.Override public boolean onLongClick ( android.view.View v ) { if ( ! ( v.isInTouchMode () ) ) return false; if ( ( mNextPage ) != ( INVALID_PAGE ) ) return false; try { if ( ( ! ( mLauncher.isAllAppsVisible () ) ) || ( mLauncher.getWorkspace () .isSwitchingState () ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } return beginDragging ( v ) ; } 
public java.lang.String arrayToString ( java.lang.Object[] array ) { java.lang.StringBuilder buffer = new java.lang.StringBuilder () ; try { for ( int i = 0; i < ( array.length ) ; i++ ) { if ( i > 0 ) { buffer.append ( dk.lessismore.nojpa.reflection.attributeconverters.AttributeConverter.arraySeparator ) ; } buffer.append ( objectToString ( array[i] ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return buffer.toString () ; } 
public void remove () { if ( ( parent ) == null ) { root = null; return; } try { parent.children.remove ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( parent.children.isEmpty () ) { parent.remove () ; } else { parent.computeMBR () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "sltMTechDetailListAjax" }, method = org.springframework.web.bind.annotation.RequestMethod.POST ) @org.springframework.web.bind.annotation.ResponseBody public com.abilists.bean.para.profile.MTechDetailListAjax sltMTechDetailListAjax ( @org.springframework.web.bind.annotation.RequestBody com.abilists.bean.para.admin.SltMTechDetailPara sltMTechDetailPara, javax.servlet.http.HttpSession session ) throws java.lang.Exception { this.handleSessionInfo ( session, sltMTechDetailPara ) ; sltMTechDetailPara.setMlCode ( sltMTechDetailPara.getLang () ) ; java.util.List<com.abilists.bean.model.MTechDetailModel> mTechDetailList = adminMasterService.sltMTechDetailList ( sltMTechDetailPara ) ; try { logger.info ( ( "mTechDetailList size = " + ( mTechDetailList.size () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.abilists.bean.para.profile.MTechDetailListAjax mTechDetailListAjax = new com.abilists.bean.para.profile.MTechDetailListAjax () ; mTechDetailListAjax.setmTechDetailList ( mTechDetailList ) ; return mTechDetailListAjax; } 
void printPanden () { try { for ( Pand element : lijst ) { java.lang.System.out.println ( ( ( ( ( ( ( ( ( ( ( ( element.date ) + " " ) + ( element.objectNummer ) ) + " " ) + ( element.naam ) ) + " " ) + ( element.adres ) ) + " " ) + ( element.kamers ) ) + " " ) + ( element.prijs ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void saveUser ( com.tribuo.backend.jpa.User user ) { user.setPassword ( bCryptPasswordEncoder.encode ( user.getPassword () ) ) ; user.setActive ( 1 ) ; com.tribuo.backend.jpa.Role userRole = roleRepo.findByRole ( "ADMIN" ) ; try { user.setRoles ( new java.util.HashSet<com.tribuo.backend.jpa.Role> ( java.util.Arrays.asList ( userRole ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } usuRepo.save ( user ) ; } 
@ java.lang.Override public boolean loadActiveUserInfo ( java.lang.Object context ) { android.content.SharedPreferences appPrefs = getAppSharedPreferences ( ( ( android.content.Context ) ( context ) ) ) ; currentUsername = appPrefs.getString ( com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTUSER, null ) ; try { currentAuth = appPrefs.getString ( com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTAUTH, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( currentUsername ) != null ) { xapiAgent = com.ustadmobile.nanolrs.core.endpoints.XapiAgentEndpoint.createOrUpdate ( context, null, currentUsername, com.ustadmobile.core.util.UMTinCanUtil.getXapiServer ( context ) ) ; } this.userPreferences = null; return true; } 
@ org.junit.Test public void testNewInstance () { com.graphaware.integration.es.domain.ExternalResult externalResult = new com.graphaware.integration.es.domain.ExternalResult ( "123", 23.8F ) ; assertEquals ( "123", externalResult.getObjectId () ) ; try { assertEquals ( 23.8F, externalResult.getScore () , 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertNotNull ( externalResult.getObjectId () ) ; } 
public crazy.vo.User update ( crazy.vo.User user ) { if ( ( ( user.getEmail () ) == null ) || ( ! ( user.getEmail () .equals ( email ) ) ) ) { user.setEmail ( email ) ; user.setEmailActivated ( false ) ; } user.setPhone ( phone ) ; try { user.setSociolname ( sociolname ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } user.setStudentid ( studentid ) ; user.setProvinceid ( provinceid ) ; user.setCollegeid ( collegeid ) ; user.setInstituteid ( instituteid ) ; return user; } 
@ java.lang.Override public model.Cell put ( model.Position key, model.Cell value ) { model.Cell previousValue = get ( key ) ; try { remove ( key ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( value instanceof model.ActiveCell ) { activeCells.put ( key, ( ( model.ActiveCell ) ( value ) ) ) ; } else { staticCells.put ( key, value ) ; } return previousValue; } 
private void handleLevelUp () { try { if ( ( xpSinceLastLevelUp () ) >= ( nettoXpNeededForLevel ( ( ( plevel ) + 1 ) ) ) ) { ( this.maxHealth ) ++; ( plevel ) ++; psprint += 0.1; maxTimeSprint += 20; MojamComponent.soundPlayer.playSound ( "/sound/levelUp.wav", ( ( float ) ( pos.x ) ) , ( ( float ) ( pos.y ) ) , true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void editPatientProf ( android.view.View v ) { try { if ( ! ( mEditTextCustomerFName.isEnabled () ) ) { setFieldsEnability ( true ) ; if ( ( mAddrLayout.getVisibility () ) != ( android.view.View.VISIBLE ) ) { com.extenprise.mapp.medico.util.Utility.collapseExpand ( mAddrLayout ) ; com.extenprise.mapp.medico.util.Utility.collapseExpand ( mContLay ) ; } } else { setFieldsEnability ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void soundDb ( double ampl ) { try { if ( ( 20 * ( java.lang.Math.log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) > 0 ) values.add ( ( 20 * ( java.lang.Math.log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.d ( "Sound", java.lang.String.valueOf ( ( 20 * ( java.lang.Math.log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) ) ) ; } 
private boolean setupWorldEdit () { org.bukkit.plugin.Plugin test = this.getServer () .getPluginManager () .getPlugin ( "WorldEdit" ) ; try { if ( ( svenbrnn.orerespawn.oreRespawn.worldEdit ) == null ) { if ( test != null ) { svenbrnn.orerespawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out.println ( "[OreRespawn] WorldEdit detected!" ) ; return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public boolean remove ( net.osmand.osm.edit.Relation.RelationMember key ) { try { if ( ( members ) != null ) { java.util.Iterator<net.osmand.osm.edit.Relation.RelationMember> it = members.iterator () ; while ( it.hasNext () ) { net.osmand.osm.edit.Relation.RelationMember rm = it.next () ; if ( rm == key ) { it.remove () ; return true; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void vote () throws java.lang.ClassNotFoundException, java.sql.SQLException { try { java.lang.System.out.print ( "\nPlease select the note you want to vote for ( 0-7 ) :" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int vote = scan.nextInt () ; if ( ( vote <= 7 ) && ( vote > 0 ) ) { java.lang.System.out.println ( "Attempting vote registration." ) ; registerVote ( vote ) ; } else { java.lang.System.out.println ( "Select a note between 0 and 7." ) ; vote () ; } } 
@ java.lang.Override public java.util.Optional<java.lang.String> start ( de.chrthms.hmatic4j.event.client.HMEventExecution execution ) { this.execution = execution; de.chrthms.hmatic4j.event.core.HMEventRegistry registry = de.chrthms.hmatic4j.event.core.impl.HMEventRegistryImpl.getInstance () ; try { registryId = registry.register ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( onceOnly ) { return java.util.Optional.empty () ; } return java.util.Optional.of ( registryId ) ; } 
@ java.lang.Override public java.lang.Object execute ( org.eclipse.core.commands.ExecutionEvent event ) throws org.eclipse.core.commands.ExecutionException { try { if ( eu.modelwriter.configuration.internal.AlloyUtilities.isExists () ) { this.candidateToTypeChanging = new java.util.ArrayList<org.eclipse.core.resources.IMarker> () ; addRemoveType () ; } else { org.eclipse.jface.dialogs.MessageDialog infoDialog = new org.eclipse.jface.dialogs.MessageDialog ( eu.modelwriter.marker.MarkerActivator.getShell () , "System Information", null, "You dont have any registered alloy file to system.", org.eclipse.jface.dialogs.MessageDialog.INFORMATION, new java.lang.String[] { "OK" }, 0 ) ; infoDialog.open () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { final int index = tblProducts.getSelectedRow () ; final io.github.davidg95.JTill.jtillserver.WasteItem it = wasteItems.get ( index ) ; final io.github.davidg95.JTill.jtillserver.Product p = it.getProduct () ; if ( index == ( -1 ) ) { return; } try { if ( ( javax.swing.JOptionPane.showInternalConfirmDialog ( this, ( "Are you sure you want to remove this item?\n" + p ) , "Stock Item", javax.swing.JOptionPane.YES_NO_OPTION ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { wasteItems.remove ( index ) ; updateTable () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean checkAvailability ( int position, java.lang.String posis ) { try { if ( map1[position].equals ( posis ) ) { return true; } else { switch ( map1[position] ) { case "d": return false; case "e": return false; case "f": return false; case "g": return false; case "h": return false; case "i": return false; case "3": return false; case "5": return false; default: return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static boolean licenseFileExists () { if ( ( org.eclipse.titan.regressiontests.MainTestSuite.LICENSE_FILE ) != null ) { java.io.File licenseFile = new java.io.File ( org.eclipse.titan.regressiontests.MainTestSuite.LICENSE_FILE ) ; if ( ( licenseFile != null ) && ( licenseFile.exists () ) ) { return true; } } final java.lang.String licenseFromEnv = java.lang.System.getenv ( "TTCN3_LICENSE_FILE" ) ; try { if ( licenseFromEnv != null ) { java.io.File licenseFile = new java.io.File ( licenseFromEnv ) ; if ( ( licenseFile != null ) && ( licenseFile.exists () ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override @java.lang.SuppressWarnings ( value = "unchecked" ) public boolean allowTarget ( final org.wirez.core.graph.Node target, final org.wirez.core.graph.Edge<org.wirez.core.graph.content.view.View<?>, org.wirez.core.graph.Node> connector, final int magnet ) { try { if ( ( null != ( canvasHandler ) ) && ( null != target ) ) { org.wirez.core.command.CommandResult<org.wirez.core.client.command.CanvasViolation> violations = canvasCommandManager.allow ( canvasHandler, canvasCommandFactory.SET_TARGET_NODE ( target, connector, magnet ) ) ; return isAccept ( violations ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void updateResults () { int lastIndex; if ( isLoading ) { lastIndex = results.size () ; } else { lastIndex = ( results.size () ) - 1; } fireContentsChanged ( this, oldLength, oldLength ) ; fireIntervalAdded ( this, oldLength, lastIndex ) ; try { oldLength = results.size () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { omacka = 0; try { switch ( position ) { case 0: setIngedience ( val ) ; break; case 1: omacka += 1; setIngedience ( val ) ; break; case 2: omacka += 2; setIngedience ( val ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void numDoors () { int door = 0; try { for ( clueGame.BoardCell[] i : tests.clueBoardTests.board.getBoard () ) { for ( clueGame.BoardCell j : i ) { if ( ( j != null ) && ( j.isDoorway () ) ) { ++door; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( tests.clueBoardTests.NUM_DOORS, door ) ; } 
public void updateSystemCount () throws java.lang.NumberFormatException { numSystems = java.lang.Math.abs ( java.lang.Integer.parseInt ( _FormattedTF_NumSystems.getText () ) ) ; try { if ( ( numSystems ) > 60 ) { numSystems = 60; _FormattedTF_NumSystems.setValue ( new java.lang.Integer ( "60" ) ) ; } else if ( ( numSystems ) <= 0 ) { numSystems = 0; _FormattedTF_NumSystems.setValue ( new java.lang.Integer ( "0" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } cs.getRackIndex ( _ComboBox_Racks.getSelectedIndex () ) .getSuctionGroupIndex ( _ComboBox_SuctionGroups.getSelectedIndex () ) .setNumSystems ( numSystems ) ; } 
@ java.lang.Override public void onLocationChange ( android.location.Location location, gps.fhv.at.gps_hawk.domain.events.NewLocationEventData data ) { data.setTrack ( mCurrentTrack ) ; gps.fhv.at.gps_hawk.domain.Waypoint waypoint = gps.fhv.at.gps_hawk.workers.WaypointFactory.getInstance () .createWaypoint ( location, data ) ; android.content.Intent intent = new android.content.Intent ( gps.fhv.at.gps_hawk.Constants.BROADCAST_NEW_WAYPOINT ) ; try { intent.putExtra ( Constants.EXTRA_WAYPOINT, waypoint ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v4.content.LocalBroadcastManager.getInstance ( mContext ) .sendBroadcast ( intent ) ; } 
private metaopt.Operation chooseOpToSchedule ( java.util.ArrayList<metaopt.Operation> conflicts ) { int index = java.lang.Math.abs ( ( ( randomNumber ) % ( conflicts.size () ) ) ) ; try { for ( metaopt.Operation op : schedulable ) { if ( conflicts.get ( index ) .equals ( op ) ) { schedulable.remove ( op ) ; return op; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private javafx.collections.ObservableList<java.lang.Integer> populateTrackNumberComboBox () { javafx.collections.ObservableList<java.lang.Integer> options; try { if ( ( ui.Slave.getSequence () ) != null ) { options = javafx.collections.FXCollections.observableArrayList () ; for ( int i = 0; i < ( ui.Slave.getSequence () .getTracks () .length ) ; i++ ) { java.lang.System.out.println ( i ) ; options.add ( i ) ; } } else { options = javafx.collections.FXCollections.observableArrayList ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return options; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startId ) { android.app.Notification noti = new android.app.Notification.Builder ( this ) .setContentTitle ( "^____^" ) .setContentText ( "I'm Your Pet!" ) .setSmallIcon ( R.mipmap.ic_launcher ) .setOngoing ( true ) .build () ; try { startForeground ( com.air.petphone.KillNotificationService.NOTIFICATION_ID, noti ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return START_STICKY; } 
private void startDownload ( java.lang.String idLesson, java.lang.String url, java.lang.String downloadType ) { intentDownloadAll = new android.content.Intent ( getActivity () , com.erpdevelopment.vbvm.service.DownloadAllService.class ) ; try { intentDownloadAll.putExtra ( "idLesson", idLesson ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } intentDownloadAll.putExtra ( "url", url ) ; intentDownloadAll.putExtra ( "downloadType", downloadType ) ; getActivity () .startService ( intentDownloadAll ) ; com.erpdevelopment.vbvm.service.DownloadAllService.incrementCount () ; } 
@ org.junit.Test public void testGetPart () { org.junit.Assert.assertEquals ( 123456789, getPart ( 123456789, 0, 9 ) ) ; org.junit.Assert.assertEquals ( 23456789, getPart ( 123456789, 1, 9 ) ) ; org.junit.Assert.assertEquals ( 12345678, getPart ( 123456789, 0, 8 ) ) ; try { org.junit.Assert.assertEquals ( 345, getPart ( 123456789, 2, 5 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public PokemonSpecies findCaughtSpeciesData ( java.lang.String speciesName ) throws PokedexException { try { for ( int i = 0; i < ( pokedex.size () ) ; i++ ) { PokemonSpecies poke = pokedex.get ( i ) ; if ( poke.getSpeciesName () .equals ( speciesName ) ) { if ( poke.isEmpty () ) { throw new PokedexException ( Config.UNCAUGHT_POKEMON ) ; } else { return poke; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new PokedexException ( Config.UNSEEN_POKEMON ) ; } 
@ java.lang.Override public int compare ( rdoshi.codepath.todoapp.TaskItem t1, rdoshi.codepath.todoapp.TaskItem t2 ) { try { if ( ( t1.getDueDate () ) == null ) { return ( t2.getDueDate () ) == null ? 0 : -1; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( t2.getDueDate () ) == null ) { return 1; } return t2.getDueDate () .compareTo ( t1.getDueDate () ) ; } 
public static java.lang.String toPascalCase ( java.lang.String string ) { java.lang.StringBuilder nb = new java.lang.StringBuilder () ; try { for ( java.lang.String word : com.psddev.dari.util.StringUtils.splitString ( string ) ) { if ( ! ( word.isEmpty () ) ) { nb.append ( java.lang.Character.toUpperCase ( word.charAt ( 0 ) ) ) .append ( word.substring ( 1 ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return nb.toString () ; } 
@ java.lang.Override public io.reactivex.ObservableSource<prada.lab.android.pingo.model.Tag> apply ( prada.lab.android.pingo.model.Tag tag ) throws java.lang.Exception { prada.lab.android.pingo.model.PingoPlace place = findPlaceById ( placeId ) ; place.getTags () .add ( tag ) ; mPlaces.remove ( place ) ; try { mPlaces.add ( 0, place ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mPlacesSubject.onNext ( mPlaces ) ; java.util.List<prada.lab.android.pingo.model.Tag> tags = mTagSub.getValue () ; tags.add ( tag ) ; mTagSub.onNext ( tags ) ; return io.reactivex.Observable.just ( tag ) ; } 
public java.lang.String getNodeName ( java.lang.String id ) { try { for ( int i = 0; i < ( nodeList.size () ) ; i++ ) { if ( nodeList.get ( i ) .getID () .equals ( id ) ) { return nodeList.get ( i ) .getName () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void write ( final me.noize.chemistry.io.Entry<T> entry ) throws me.noize.chemistry.io.ChemistryIOException { try { if ( ! ( this.streams.isEmpty () ) ) { if ( this.streams.peek () .hasEntries () ) { this.streams.peek () .write ( entry ) ; } else { me.noize.chemistry.io.EntryOutputStream<T> old = this.streams.poll () ; old.close () ; this.write ( entry ) ; } } else { throw new me.noize.chemistry.io.ChemistryIOException ( "Stream could not be advanced" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void resize () { java.lang.Object[] temp = new java.lang.Object[ ( storage.length ) * 2]; try { java.lang.System.arraycopy ( storage, head, temp, 0, ( ( storage.length ) - ( head ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.arraycopy ( storage, 0, temp, ( ( storage.length ) - ( head ) ) , tail ) ; head = ( temp.length ) - 1; tail = storage.length; storage = temp; } 
public int adjustComputerBuilders ( int amount ) { int difference = amount; if ( ( ( computerBuilders ) < ( java.lang.Math.abs ( difference ) ) ) && ( amount < 0 ) ) { difference = ( - ( computerBuilders ) ) + 1; computerBuilders = 1; } else { computerBuilders += amount; } try { if ( difference != 0 ) gi.setComputerBuildersLabelChangeText ( difference ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return difference; } 
@ java.lang.Override public void done ( com.parse.ParseObject parseObject, com.parse.ParseException e ) { try { if ( e == null ) { java.lang.System.out.println ( "null score" ) ; com.parse.ParseObject userscore = new com.parse.ParseObject ( "Scores" ) ; userscore.put ( "score", com.cards.flash.testez.TallyScore.getScore () ) ; userscore.put ( "user", com.parse.ParseUser.getCurrentUser () ) ; saveScoreObject ( userscore ) ; com.cards.flash.testez.TallyScore.resetScore () ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{password}" }, method = RequestMethod.GET, produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @com.chronicle.controller.PathVariable java.lang.Long id, @com.chronicle.controller.PathVariable java.lang.String password ) { logger.info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService.findById ( id ) ; java.lang.System.out.println ( user.getPassword () ) ; try { java.lang.System.out.println ( password ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( user.getPassword () .equals ( password ) ) { return user.getRole () ; } else { return "User Doesn't exist"; } } 
public void manualCtl () { double y = m_liftStick.getY ( GenericHID.Hand.kLeft ) ; m_robot.logger.debug ( ( "manualCtl:" + y ) ) ; try { if ( ( isAnyLimitSwitchClosed () ) || ( ( java.lang.Math.abs ( y ) ) < ( k_minJoystickValue ) ) ) { stopMotor () ; } else { startMotor () ; m_mainMotor.set ( y ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onConfigurationChanged ( android.content.res.Configuration newConfig ) { try { super.onConfigurationChanged ( newConfig ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( notFirstRun ) || ( ! ( com.brainicism.projectrito.MainActivity.summonerName.equals ( "" ) ) ) ) { com.brainicism.projectrito.MainActivity.checkValidSummoner check = new com.brainicism.projectrito.MainActivity.checkValidSummoner () ; check.execute () ; } } 
public void setItemSelected ( int pos, boolean selected, android.view.View view ) { if ( ( pos < 0 ) || ( pos >= ( mAdapter.getItemCount () ) ) ) return; try { if ( selected ) { mSelectedItems.put ( pos, selected ) ; } else { mSelectedItems.delete ( pos ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } view.setSelected ( selected ) ; } 
private void setUpMapIfNeeded () { try { if ( ( com.mycompany.behear.MainActivity.mMap ) == null ) { com.mycompany.behear.MainActivity.mMap = ( ( com.google.android.gms.maps.SupportMapFragment ) ( getSupportFragmentManager () .findFragmentById ( R.id.map ) ) ) .getMap () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( com.mycompany.behear.MainActivity.mMap ) == null ) { return; } } 
public static void logShortError ( java.lang.Exception e, int lines ) { java.lang.String s = e.toString () ; int i = 0; try { for ( java.lang.StackTraceElement er : e.getStackTrace () ) { if ( i == lines ) { break; } s += "\n\tat " + ( er.toString () ) ; i++; } } catch ( Exception ex ) { ex.printStackTrace () ; } e.printStackTrace () ; global.record.Log.log ( "ERROR", s ) ; } 
@ java.lang.Override public synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil.getEntityManager () ; em.persist ( scrim ) ; try { em.getTransaction () .begin () ; } catch ( Exception ex ) { ex.printStackTrace () ; } em.flush () ; em.getTransaction () .commit () ; em.refresh ( scrim ) ; em.close () ; master.WebSocketChannelManager.broadcastMsg ( "scrimmage", "INSERT_TABLE_ROW", ( ( ( scrim.getId () ) + "," ) + ( scrim.getFileName () ) ) ) ; startRun () ; } 
@ java.lang.Override public boolean next () throws java.io.IOException { unpinCurrentPage () ; assertPagedFileStillMapped () ; if ( ( nextPageId ) > ( lastPageId ) ) { if ( ( ( pf_flags ) & ( org.neo4j.io.pagecache.PagedFile.PF_NO_GROW ) ) != 0 ) { return false; } else { pagedFile.increaseLastPageIdTo ( nextPageId ) ; } } try { pin ( nextPageId, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentPageId = nextPageId; ( nextPageId ) ++; return true; } 
@ org.junit.Test public void test_dropTable () { try { org.mockito.Mockito.when ( metadataMapper.apply ( org.mockito.Matchers.any () ) ) .thenReturn ( hiveTable ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.trustedanalytics.datasetpublisher.boundary.Metadata metadata = new org.trustedanalytics.datasetpublisher.boundary.Metadata () ; metadata.setOrgUUID ( "cccccf34-f597-4634-8dd2-1875c06b9c4c" ) ; sut.dropTable ( metadata ) ; org.mockito.Mockito.verify ( hiveService, org.mockito.Mockito.times ( 1 ) ) .dropTable ( org.mockito.Matchers.any () , org.mockito.Matchers.any () ) ; } 
@ org.junit.Test public void get_GivenUnknownIdShouldReturnNotFoundStatus () throws com.nextlunch.api.service.exception.ReadException { try { org.mockito.Mockito.when ( service.getWinnerOfDay ( org.mockito.Matchers.any ( java.util.Date.class ) ) ) .thenThrow ( new com.nextlunch.api.service.exception.ReadException ( com.nextlunch.api.service.exception.enums.ReadExceptionMessageEnum.NOT_FOUND ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } @java.lang.SuppressWarnings ( value = "rawtypes" ) org.springframework.http.ResponseEntity responseEntity = controller.getWinnerOfDay () ; org.springframework.http.HttpStatus httpStatus = responseEntity.getStatusCode () ; org.hamcrest.MatcherAssert.assertThat ( "Wrong HTTP status for unknown ID", httpStatus, org.hamcrest.Matchers.equalTo ( HttpStatus.NOT_FOUND ) ) ; org.mockito.Mockito.verify ( service, org.mockito.Mockito.times ( 1 ) ) .getWinnerOfDay ( org.mockito.Matchers.any ( java.util.Date.class ) ) ; } 
@ java.lang.Override @java.lang.SuppressWarnings ( value = "unchecked" ) public org.backmeup.model.BackMeUpUser findByName ( java.lang.String username ) { javax.persistence.Query q = em.createQuery ( "SELECT u FROM BackMeUpUser u WHERE username = :username" ) ; try { q.setParameter ( "username", username ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<org.backmeup.model.BackMeUpUser> users = q.getResultList () ; org.backmeup.model.BackMeUpUser u = ( ! ( users.isEmpty () ) ) ? users.get ( 0 ) : null; return u; } 
private java.lang.Double whichOperator ( java.lang.String inputOperator, java.lang.String num1, java.lang.String num2 ) { try { if ( inputOperator.equals ( "+" ) ) return addFn ( num1, num2 ) ; else if ( inputOperator.equals ( "-" ) ) return subtractFn ( num1, num2 ) ; else if ( inputOperator.equals ( "*" ) ) return multiplyFn ( num1, num2 ) ; else return divideFn ( num1, num2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String subtract ( java.lang.String x, java.lang.String y ) { java.math.BigDecimal i = new java.math.BigDecimal ( getValue ( x ) .toString () ) ; java.math.BigDecimal j = new java.math.BigDecimal ( getValue ( y ) .toString () ) ; java.math.BigDecimal k = j.subtract ( i ) ; try { k = k.stripTrailingZeros () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return k.toPlainString () ; } 
public final void moveItem ( T item, int toPosition ) { int fromPosition = mItems.indexOf ( item ) ; mItems.remove ( fromPosition ) ; mItems.add ( toPosition, item ) ; com.github.gfranks.dynamiccard.adapter.DynamicCardAdapter.notifyItemMoved ( fromPosition, toPosition ) ; try { if ( ( mCallback ) != null ) { mCallback.onDynamicCardPositionChanged ( this, fromPosition, toPosition ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void parseRobotoReply ( java.lang.String resp ) { java.lang.String cmd = resp.substring ( 0, 1 ) ; try { if ( cmd.equals ( MsRobotoLab4.ROBOTO_SIMPLE_REPLY ) ) { message = "Success - command done"; } else if ( cmd.equals ( MsRobotoLab4.ROBOTO_RESULT_REPLY ) ) { message = "Success - "; result = java.lang.Integer.parseInt ( resp.split ( " " ) [1] ) ; } else { message = "Error - "; message += resp; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.brashmonkey.spriter.file.Reference findReferenceByFileNameAndFolder ( java.lang.String fileName, java.lang.String folderName, boolean withoutExtension ) { com.brashmonkey.spriter.file.Reference[] refs = this.findReferencesByFolderName ( folderName ) ; try { for ( com.brashmonkey.spriter.file.Reference ref : refs ) { java.lang.String file = ref.fileName.replaceAll ( ( folderName + "/" ) , "" ) ; if ( withoutExtension ) file = file.replaceAll ( ".png", "" ) ; if ( file.toLowerCase () .equals ( fileName ) ) return ref; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void afterTextChanged ( android.text.Editable s ) { try { if ( ( weightPrevLength ) > ( s.length () ) ) { com.kq.liftplusone.models.ExerciseSet set = mSets.get ( position ) ; set.setWeight ( ( ( s.length () ) > 0 ? java.lang.Float.parseFloat ( s.toString () ) : 0 ) ) ; mSets.set ( position, set ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void configuresMultipleCuriesWithoutDefaultCorrectly () { org.springframework.hateoas.hal.DefaultCurieProvider provider = new org.springframework.hateoas.hal.DefaultCurieProvider ( org.springframework.hateoas.hal.DefaultCurieProviderUnitTest.getCuries () ) ; assertThat ( provider.getCurieInformation ( new org.springframework.hateoas.Links () ) , hasSize ( 2 ) ) ; try { assertThat ( provider.getNamespacedRelFor ( "some" ) , is ( "some" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.hauldata.util.tokenizer.Token nextToken () throws java.io.IOException, java.util.InputMismatchException { com.hauldata.util.tokenizer.Token token; try { if ( position.hasNext () ) { token = position.next () ; } else { token = super.getToken () ; if ( token != null ) { position.add ( token ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return token; } 
public static java.lang.String PaymentAuth ( long cardAmount, int cash, int TotalPay ) { java.util.Scanner ms = new java.util.Scanner ( java.lang.System.in ) ; try { java.lang.System.out.println ( "Payment Option: Cash or Card?" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String option = ms.next () ; if ( option == "Cash" ) { if ( cash == TotalPay ) { return "Success! Payment has been authorized"; } else { return "Payment fail! Please check amount"; } } else if ( option == "Card" ) { if ( cardAmount == TotalPay ) { return "Success! Payment has been authorized"; } else { return "Payment fail! Please check card or amount"; } } return null; } 
void mergeSort ( int[] a, int[] p, int[] c, int l, int r ) { if ( l >= r ) { return; } int m = ( l + r ) / 2; try { mergeSort ( a, p, c, l, m ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mergeSort ( a, p, c, ( m + 1 ) , r ) ; merge ( a, p, c, l, m, r ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { android.util.Log.i ( com.polito.mad17.madmax.activities.ProfileEdit.TAG, "save clicked" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( updateAccount () ) { android.widget.Toast.makeText ( this, "Saved", Toast.LENGTH_SHORT ) .show () ; android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.polito.mad17.madmax.activities.MainActivity.class ) ; startActivity ( i ) ; finish () ; } } 
@ org.junit.Test public void primitiveTypesToJSON () { try { org.junit.Assert.assertEquals ( gson.toJson ( 15 ) , ru.otus.homework_08.JSON.toJSON ( 15 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( gson.toJson ( 'c' ) , ru.otus.homework_08.JSON.toJSON ( 'c' ) ) ; org.junit.Assert.assertEquals ( gson.toJson ( true ) , ru.otus.homework_08.JSON.toJSON ( true ) ) ; } 
@ org.junit.Test public void idTest () { org.marc.everest.datatypes.II id = clinicalDocument.getId () ; org.junit.Assert.assertNotNull ( id ) ; try { org.junit.Assert.assertEquals ( Constants.Runtime.VALID_DEMOGRAPHIC.toString () , id.getExtension () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertFalse ( org.oscarehr.e2e.util.EverestUtils.isNullorEmptyorWhitespace ( id.getRoot () ) ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; try { if ( requestCode == ( felixwiemuth.lincal.ui.AddCalendarActivity.RESULT_CODE_SELECT_FILE ) ) { if ( data != null ) { int takeFlags = data.getFlags () ; takeFlags &= ( android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION ) | ( android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION ) ; getContentResolver () .takePersistableUriPermission ( data.getData () , takeFlags ) ; fileEditText.setText ( data.getDataString () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void delete ( java.io.File f ) throws java.io.IOException { if ( f == null ) return; try { if ( f.isDirectory () ) { for ( java.io.File c : f.listFiles () ) { org.ohmage.Utilities.delete ( c ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } f.delete () ; } 
@ android.support.annotation.Nullable public android.os.Bundle onProvideTransientParamsImpl ( @android.support.annotation.NonNull V v, @android.support.annotation.NonNull android.view.View view, @android.support.annotation.Nullable android.os.Bundle params ) { VP presenter = getPresenter ( v, false ) ; allowScreenViewCalls = true; android.os.Bundle b = v.onProvideParams ( view, params ) ; if ( b != null ) params = b; allowScreenViewCalls = false; try { if ( presenter != null ) { b = presenter.onProvideTransientParams ( v, view, params ) ; if ( b != null ) params = b; } } catch ( Exception ex ) { ex.printStackTrace () ; } return params; } 
public void resetUsed () { try { for ( int i = 0; i < ( team.size () ) ; i++ ) { team.get ( i ) .getAttributes () .setUsed ( ( i == ( frontIndex ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean validate ( Model.Tile.BuildTile target, Model.Utility.ILocation loc ) { if ( ( slots.isEmpty () ) && ( buildMap.locationInBounds ( loc ) ) ) { return true; } try { if ( ( ( buildMap.tileExistsAt ( loc ) ) || ( ! ( this.slotExistsAt ( loc ) ) ) ) || ( ! ( buildMap.locationInBounds ( loc ) ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } Model.Map.Slot mySlot = slots.get ( loc ) ; return mySlot.checkMatch ( target.getEdges () ) ; } 
@ java.lang.Override public void dragTo ( final illarion.client.world.interactive.InteractiveInventorySlot targetSlot ) { if ( ! ( isValidItem () ) ) { return; } final illarion.client.net.client.DragInvInvCmd cmd = illarion.client.net.CommandFactory.getInstance () .getCommand ( CommandList.CMD_DRAG_INV_INV, illarion.client.net.client.DragInvInvCmd.class ) ; cmd.setDrag ( getSlotId () , targetSlot.getSlotId () ) ; try { cmd.send () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String getValue () { java.util.List<org.roda.core.data.v2.TransferredResource> items = display.getVisibleItems () ; try { if ( ( items.size () ) == 0 ) { return ""; } else { long totalSize = 0; for ( org.roda.core.data.v2.TransferredResource item : items ) { totalSize += item.getSize () ; } return totalSize > 0 ? org.roda.wui.common.client.tools.Humanize.readableFileSize ( totalSize ) : ""; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void saveToStorage () throws java.lang.Exception { w094j.ctrl8.database.Storage googleStorage = new w094j.ctrl8.database.GoogleStorage ( this.file, this.gson ) ; try { googleStorage.storeData () ; } catch ( Exception ex ) { ex.printStackTrace () ; } w094j.ctrl8.database.Storage diskStorage = new w094j.ctrl8.database.DiskStorage ( this.file, this.path, this.gson ) ; diskStorage.storeData () ; } 
public static void main ( java.lang.String[] args ) { com.alvarpq.GOTF.coreGame.board.BoardHalf half1 = new com.alvarpq.GOTF.coreGame.board.BoardHalf ( 5, 3, 8 ) ; com.alvarpq.GOTF.coreGame.board.BoardHalf half2 = new com.alvarpq.GOTF.coreGame.board.BoardHalf ( 5, 3, 8 ) ; try { half1.addUnit ( new com.alvarpq.GOTF.coreGame.units.KinfolkBrave ( 0, 0 ) , half2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } half2.addUnit ( new com.alvarpq.GOTF.coreGame.units.KinfolkBrave ( 0, 2 ) , half1 ) ; half1.getUnitAt ( 0, 0 ) .attack ( half1, half2 ) ; java.lang.System.out.println ( half2.getUnitAt ( 0, 2 ) ) ; } 
private boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor, boolean mainBlock, de.fhg.iais.roberta.syntax.Phrase<java.lang.Void> phrase ) { try { if ( ( phrase.getKind () .getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor.nlIndent () ; } else if ( ! ( phrase.getKind () .hasName ( "LOCATION" ) ) ) { mainBlock = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return mainBlock; } 
@ java.lang.Override public void onFocusChange ( android.view.View v, boolean hasFocus ) { try { if ( !hasFocus ) { if ( ( ( mCardNumber ) != null ) && ( ( mCardNumber.length () ) > 12 ) ) { if ( ( mType ) == ( com.vinaygaba.creditcardview.CardType.AUTO ) ) { mCardTypeView.setBackgroundResource ( getLogo () ) ; } mCardNumberView.setText ( getFormattedCardNumber ( addSpaceToCardNumber () ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void whenModuleHasNoName_thenCorrespondingFitnessFeatureShouldBeTrue () { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito.mock ( org.corpus_tools.pepper.modules.PepperModule.class ) ; org.mockito.Mockito.when ( module.getName () ) .thenReturn ( null ) ; try { org.assertj.core.api.Assertions.assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () .checkFitness ( module ) .getFitness ( FitnessFeature.HAS_NAME ) ) .isEqualTo ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testEncodeAndDecodeWithPrefix () throws java.lang.Exception { java.lang.String encodedWithPrefix = org.datacleaner.util.SecurityUtils.encodePasswordWithPrefix ( org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE ) ; assertEquals ( org.datacleaner.util.SecurityUtilsTest.ENCODED_VALUE_WITH_PREFIX, encodedWithPrefix ) ; java.lang.String decoded = org.datacleaner.util.SecurityUtils.decodePasswordWithPrefix ( encodedWithPrefix ) ; assertEquals ( org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE, decoded ) ; decoded = org.datacleaner.util.SecurityUtils.decodePasswordWithPrefix ( org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE ) ; try { assertEquals ( org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE, decoded ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void effect () { try { for ( int i = ( effects.size () ) - 1; i >= 0; i-- ) { effects.get ( i ) .update ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = ( effects.size () ) - 1; i >= 0; i-- ) { if ( effects.get ( i ) .killMe ) { effects.get ( i ) .end ( this ) ; effects.remove ( i ) ; } } } 
@ java.lang.Override public boolean contains ( java.lang.Object o ) { try { if ( o instanceof java.lang.Number ) { java.lang.Number n = ( ( java.lang.Number ) ( o ) ) ; int index = n.intValue () ; return ( ( index > 0 ) && ( index < ( selectedIndices.length () ) ) ) && ( selectedIndices.get ( index ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void validateEditing ( com.webapplication.entity.AuctionItem auctionItem ) throws java.lang.Exception { try { if ( ( auctionItem.getBidsNo () ) != 0 ) throw new com.webapplication.exception.auctionitem.AuctionAlreadyInProgressException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_ALREADY_IN_PROGRESS ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( auctionItem.getEndDate () ) != null ) && ( new java.util.Date () .after ( auctionItem.getEndDate () ) ) ) throw new com.webapplication.exception.auctionitem.AuctionExpiredException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_EXPIRED ) ; } 
protected void prepare () throws java.lang.IllegalStateException { startLoading () ; this.videoIsReady = false; this.initialMovieHeight = -1; this.initialMovieWidth = -1; this.mediaPlayer.setOnPreparedListener ( this ) ; this.mediaPlayer.setOnErrorListener ( this ) ; this.mediaPlayer.setOnSeekCompleteListener ( this ) ; this.mediaPlayer.setAudioStreamType ( AudioManager.STREAM_MUSIC ) ; this.currentState = com.github.rtoshiro.view.video.FullscreenVideoView.State.PREPARING; try { this.mediaPlayer.prepareAsync () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List<de.micromata.opengis.kml.v_2_2_0.Feature> features = document.getFeature () ; try { for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; entity.addChild ( child ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return entity; } 
public void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60; final long minute = ( milliseconds / 60000 ) % 60; final long hour = ( milliseconds / 3600000 ) % 24; final long day = milliseconds / 86400000; final java.lang.String text = java.lang.String.format ( mTimeFormat, day, hour, minute, seconds ) ; try { setText ( text ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void MedienBrowser ( javafx.event.ActionEvent event ) { javafx.stage.FileChooser fileChooser = new javafx.stage.FileChooser () ; fileChooser.setTitle ( "Open Media File" ) ; java.io.File file = fileChooser.showOpenDialog ( this.getScene () .getWindow () ) ; try { if ( file != null ) { tbxMedienBrowser.setUserData ( file ) ; tbxMedienBrowser.setText ( file.getAbsolutePath () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean privatePerformZoom ( boolean byGesture, float scale, int centerX, int centerY, boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; try { if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener.onZoomEnd ( byGesture, 1, centerX, centerY ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } zoomAnimated ( byGesture, realScale, centerX, centerY, shouldCallback ) ; return true; } 
public int execute ( java.lang.String goal, java.lang.String pathToPom ) { try { java.lang.System.setProperty ( "maven.multiModuleProjectDirectory", pathToPom ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; int result = cli.doMain ( new java.lang.String[] { "clean", goal }, pathToPom, java.lang.System.out, java.lang.System.err ) ; return result; } 
@ java.lang.Override public void onPositiveActionClicked ( com.rey.material.app.DialogFragment fragment ) { com.rey.material.app.TimePickerDialog dialog = ( ( com.rey.material.app.TimePickerDialog ) ( fragment.getDialog () ) ) ; android.widget.Toast.makeText ( fragment.getDialog () .getContext () , ( "Time is " + ( dialog.getFormattedTime ( java.text.SimpleDateFormat.getTimeInstance () ) ) ) , Toast.LENGTH_SHORT ) .show () ; try { fragment.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean isChunkEnd ( @javax.annotation.Nonnull org.jenkinsci.plugins.workflow.graph.FlowNode current, @javax.annotation.CheckForNull org.jenkinsci.plugins.workflow.graph.FlowNode previous ) { if ( previous == null ) { return false; } try { if ( current instanceof org.jenkinsci.plugins.workflow.graph.BlockEndNode ) { org.jenkinsci.plugins.workflow.graph.BlockStartNode bsn = ( ( org.jenkinsci.plugins.workflow.graph.BlockEndNode ) ( previous ) ) .getStartNode () ; if ( isChunkStart ( bsn, null ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return isChunkStart ( previous, null ) ; } 
private hudson.plugins.timestamper.annotator.ConsoleLogParser.Result parseFromFinish ( java.io.InputStream inputStream ) throws java.io.IOException { hudson.plugins.timestamper.annotator.ConsoleLogParser.Result result = new hudson.plugins.timestamper.annotator.ConsoleLogParser.Result () ; result.lineNumber = -1; int value = inputStream.read () ; result.atNewLine = isNewLine ( value ) ; try { while ( ( value = inputStream.read () ) != ( -1 ) ) { if ( isNewLine ( value ) ) { ( result.lineNumber ) --; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public boolean usesAttributes ( java.lang.String tagName ) { try { tagName = tagName.toLowerCase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } boolean usesAttributes = ! ( ( ( tagName.equals ( "cfset" ) ) || ( tagName.equals ( "cfif" ) ) ) || ( tagName.equals ( "cfelseif" ) ) ) ; return usesAttributes; } 
private javafx.scene.text.Text createSummaryText () { summaryText = new javafx.scene.text.Text ( appointment.getSummary () ) ; summaryText.getStyleClass () .add ( "AppointmentLabel" ) ; summaryText.setX ( layoutHelp.paddingProperty.get () ) ; try { summaryText.setY ( summaryText.prefHeight ( 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } layoutHelp.clip ( this, summaryText, widthProperty () .subtract ( layoutHelp.paddingProperty ) , heightProperty () .subtract ( 0.0 ) , true ) ; return summaryText; } 
public final nez.util.UList<nez.expr.Expression> toList () { nez.util.UList<nez.expr.Expression> l = new nez.util.UList<nez.expr.Expression> ( new nez.expr.Expression[this.size () ] ) ; try { if ( ( this.size () ) > 1 ) { for ( nez.expr.Expression e : this ) { l.add ( e ) ; } } else { l.add ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return l; } 
public int attack ( edu.cis232.gwasos.resources.Combat enemy ) { java.util.Random rand = new java.util.Random () ; int monsterCurrentHp = enemy.getHp () ; try { if ( ( rand.nextInt ( ( ( 5 + ( enemy.getAgility () ) ) - ( getAgility () ) ) ) ) <= 3 ) { setMissed ( false ) ; enemy.damage ( power ) ; setPreviousAttackDamage ( ( monsterCurrentHp - ( enemy.getHp () ) ) ) ; } else { setMissed ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return previousAttackDamage; } 
private void moveClient ( org.zapto.mike.mrstreamserver.Channel channel, org.zapto.mike.mrstreamserver.ClientHandler client ) { boolean canJoin = true; try { if ( canJoin && ( channel != ( client.getChannel () ) ) ) { client.setChannel ( channel ) ; channel.addClient ( client ) ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () .inflate ( R.menu.menu, menu ) ; android.support.v7.widget.SearchView searchView = ( ( android.support.v7.widget.SearchView ) ( android.support.v4.view.MenuItemCompat.getActionView ( menu.findItem ( R.id.action_search ) ) ) ) ; android.app.SearchManager searchManager = ( ( android.app.SearchManager ) ( getSystemService ( com.example.karthik.listview.SEARCH_SERVICE ) ) ) ; searchView.setSearchableInfo ( searchManager.getSearchableInfo ( getComponentName () ) ) ; try { searchView.setOnQueryTextListener ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR, ignoreCancelled = true ) public void onEntityTame ( org.bukkit.event.entity.EntityTameEvent event ) { if ( ! ( ( event.getOwner () ) instanceof org.bukkit.entity.Player ) ) return; org.bukkit.entity.Player player = ( ( org.bukkit.entity.Player ) ( event.getOwner () ) ) ; if ( ! ( com.frdfsnlght.inquisitor.PlayerStats.isStatsPlayer ( player ) ) ) return; try { PlayerStats.group.getStatistics ( player.getName () ) .incr ( "animalsTamed", com.frdfsnlght.inquisitor.Utils.normalizeEntityTypeName ( event.getEntityType () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void setChecked ( android.widget.TextView t1, android.widget.TextView t2, android.widget.ImageView i1, java.lang.String description_in ) { i1.setImageResource ( R.drawable.ic_check_box_black_24dp ) ; try { t1.setTextColor ( android.support.v4.content.ContextCompat.getColor ( getApplicationContext () , R.color.PrimaryPink ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( t2 != null ) && ( ! ( description_in.isEmpty () ) ) ) { t2.setText ( description_in ) ; } } 
@ java.lang.Override public byte[] getX2 ( byte[] Y1Bytes ) { org.bouncycastle.math.ec.ECPoint.Fp Y1 = null; try { Y1 = ( ( org.bouncycastle.math.ec.ECPoint.Fp ) ( de.tsenger.animamea.tools.Converter.byteArrayToECPoint ( Y1Bytes, curve ) .normalize () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return getX2 ( Y1 ) .getEncoded ( false ) ; } 
@ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( org.openide.filesystems.FileObject fileObject ) { try { if ( fileObject != null ) { fileObject = org.gephi.io.importer.api.ImportUtils.getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder.buildImporter () ; return fi; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public static void sendExtras ( android.os.Bundle extras ) { try { if ( extras != null ) { if ( ( ( com.plugin.gcm.PushPlugin.gECB ) != null ) && ( ( com.plugin.gcm.PushPlugin.gWebView ) != null ) ) { com.plugin.gcm.PushPlugin.sendJavascript ( com.plugin.gcm.PushPlugin.convertBundleToJson ( extras ) ) ; } else { com.plugin.gcm.PushPlugin.gCachedExtras = extras; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.xebialabs.deployit.plugin.api.udm.Deployed<?, ?> getDeployed ( java.lang.String version, java.lang.String name ) { com.xebialabs.deployit.plugin.api.udm.Deployed<?, ?> puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils.newInstance ( "puppet.ModuleSpec", name ) ) ) , container, "puppet.Module" ) ; puppetModule.setProperty ( "version", version ) ; try { puppetModule.setProperty ( "force", true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } puppetModule.setProperty ( "ignoreDependencies", false ) ; return puppetModule; } 
public void changeDragonLeft ( android.view.View view ) { try { if ( ( currDragon ) == 0 ) { currDragon = ( dragons.size () ) - 1; addAccessory ( dragons.get ( currDragon ) ) ; } else { currDragon -= 1; addAccessory ( dragons.get ( currDragon ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public double getMinZ () { try { if ( ! ( java.lang.Double.isNaN ( zMin ) ) ) return zMin; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < ( getXyz () [0].length ) ; i++ ) { final double z = getXyz ( 0, i, 2 ) ; if ( ( z <= ( zMin ) ) || ( java.lang.Double.isNaN ( zMin ) ) ) zMin = z; } return zMin; } 
@ com.facebook.react.bridge.ReactMethod public void isSimCardValid ( com.facebook.react.bridge.Callback callback ) { android.telephony.TelephonyManager tm = ( ( android.telephony.TelephonyManager ) ( this.reactContext.getSystemService ( Context.TELEPHONY_SERVICE ) ) ) ; java.lang.Boolean isSimCardValid = ( tm.getSimState () ) == ( android.telephony.TelephonyManager.SIM_STATE_READY ) ; try { callback.invoke ( isSimCardValid ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean configure ( org.kohsuke.stapler.StaplerRequest req, net.sf.json.JSONObject formData ) throws com.amazonaws.codedeploy.FormException { awsAccessKey = formData.getString ( "awsAccessKey" ) ; awsSecretKey = formData.getString ( "awsSecretKey" ) ; proxyHost = formData.getString ( "proxyHost" ) ; proxyPort = java.lang.Integer.parseInt ( formData.getString ( "proxyPort" ) ) ; try { req.bindJSON ( this, formData ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } save () ; return super.configure ( req, formData ) ; } 
public void addExp ( int addedExp ) { m_exp += addedExp; try { while ( ( m_exp ) >= ( 100 * ( this.getLevel () ) ) ) { levelUp ( ( ( m_exp ) - ( 100 * ( this.getLevel () ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.androidannotations.annotations.AfterViews void init () { customNumberList = com.pawansinghchouhan05.callcustomizer.core.utils.Utils.retriveCustomNumberListToFCMDatabase () ; mobileNumberAdapter = new com.pawansinghchouhan05.callcustomizer.home.adapters.MobileNumberAdapter ( customNumberList.getCustomNumberList () ) ; recyclerView.setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getContext () ) ) ; recyclerView.setAdapter ( mobileNumberAdapter ) ; try { mobileNumberAdapter.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.w3c.dom.Node isMultiplicativeOp () { org.w3c.dom.Element parent = doc.createElement ( "MultiplicativeOp" ) ; try { if ( isAMultiplicativeOp () ) { java.lang.String sym = ( ( currentTokenType () ) == ( JParserSym.MULTIPLICATION ) ) ? "*" : ( currentTokenType () ) == ( JParserSym.DIVISION ) ? "/" : "and"; parent.setTextContent ( sym ) ; ( tokenIndex ) ++; return parent; } } catch ( Exception ex ) { ex.printStackTrace () ; } ( tokenIndex ) ++; return null; } 
@ java.lang.Override protected void actionPerformed ( net.minecraft.client.gui.GuiButton button ) throws java.io.IOException { try { if ( ( button.id ) == 0 ) { mc.displayGuiScreen ( parent ) ; } else { if ( button.displayString.equals ( "Enable" ) ) { button.displayString = "Disable"; } else { button.displayString = "Enable"; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<com.kencook.sharpspring.Event> getEvents ( java.lang.String timestamp ) throws com.kencook.sharpspring.SharpspringException { com.kencook.sharpspring.SharpspringRequest request = com.kencook.sharpspring.SharpspringRequestBuilder.request ( 1, SharpspringMethod.GET_EVENTS ) .where ( "createTimestamp" ) .is ( timestamp ) .build () ; com.kencook.sharpspring.responses.GetEventsResponse result = operations.query ( request, com.kencook.sharpspring.responses.GetEventsResponse.class ) ; try { if ( ( result.getError () ) != null ) throw new com.kencook.sharpspring.SharpspringException ( result.getError () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result.getResult () .getEvent () ; } 
public void newTurn () { mana.rebase ( ( ( mana.base () ) + 1 ) ) ; mana.reset () ; mana.alter ( ( - ( overloadMana.value () ) ) ) ; if ( ( mana.value () ) < 0 ) { mana.set ( 0 ) ; } overloadMana.rebase ( 0 ) ; draw ( 1 ) ; field.updateSleepTimes () ; try { field.updateFreezeTimes () ; } catch ( Exception ex ) { ex.printStackTrace () ; } field.resetAttackCapacities () ; } 
@ javax.annotation.Nonnull protected javax.ws.rs.core.UriBuilder getBaseUriBuilder () { try { if ( ( m_bUseStaticServerInfo ) && ( com.helger.web.servlet.server.StaticServerInfo.isSet () ) ) { return javax.ws.rs.core.UriBuilder.fromUri ( ( ( ( com.helger.web.servlet.server.StaticServerInfo.getInstance () .getFullServerPath () ) + "/" ) + ( m_aUriInfo.getPath ( false ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return m_aUriInfo.getBaseUriBuilder () ; } 
@ java.lang.Override public void onConnected ( @android.support.annotation.Nullable android.os.Bundle bundle ) { mLocationRequest = com.google.android.gms.location.LocationRequest.create () ; try { mLocationRequest.setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mLocationRequest.setInterval ( 2000 ) ; if ( ( android.support.v4.content.ContextCompat.checkSelfPermission ( getApplicationContext () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { LocationServices.FusedLocationApi.requestLocationUpdates ( mGoogleApiClient, mLocationRequest, this ) ; } } 
private static void flushConfig () { MyStaticValue.ENV.clear () ; if ( ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings ) != null ) { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.initConfig ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings ) ; } try { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.setGlobalVar ( MyStaticValue.ENV ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path ) != null ) { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.initConfig ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path, true ) ; } else { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.initConfig ( new java.io.File ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.configDir, "ansj_library.properties" ) .getAbsolutePath () , false ) ; } } 
public void addNotification ( @com.flair.blurb.Constants.CategoryDef java.lang.String category, android.service.notification.StatusBarNotification notification, android.service.notification.NotificationListenerService service ) { java.lang.String key = com.flair.blurb.Util.getKey ( notification ) ; try { android.util.Log.d ( com.flair.blurb.data.Notifications.TAG, ( ( ( "addNotification: " + category ) + " key " ) + key ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.concurrent.ConcurrentHashMap<java.lang.String, android.service.notification.StatusBarNotification> map = getMapByCategory ( category ) ; com.flair.blurb.Util.mergeNotifications ( map, notification, service ) ; map.put ( com.flair.blurb.Util.getKey ( notification ) , notification ) ; } 
private org.ethereum.jsonrpc.Block getByJsonBlockId ( java.lang.String id ) { try { if ( "earliest".equalsIgnoreCase ( id ) ) { return blockchain.getBlockByNumber ( 0 ) ; } else if ( "latest".equalsIgnoreCase ( id ) ) { return blockchain.getBestBlock () ; } else if ( "pending".equalsIgnoreCase ( id ) ) { return null; } else { long blockNumber = StringHexToBigInteger ( id ) .longValue () ; return blockchain.getBlockByNumber ( blockNumber ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private ConcreteTree.ITypeIdent typeIdent () throws parser.GrammarErrorException { java.lang.System.out.println ( "typedIdent ::= IDENT COLON TYPE" ) ; parser.ConcreteTree.TypeIdent ret = null; parser.IdentToken ident = ( ( parser.IdentToken ) ( consume ( Terminals.IDENT ) ) ) ; try { consume ( Terminals.COLON ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } parser.TypeToken type = ( ( parser.TypeToken ) ( consume ( Terminals.TYPE ) ) ) ; ret = new parser.ConcreteTree.TypeIdent ( ident, new parser.ColonToken () , type ) ; return ret; } 
public void queuePlayList ( com.sedmelluq.discord.lavaplayer.track.AudioPlaylist playlist ) { java.util.List<com.sedmelluq.discord.lavaplayer.track.AudioTrack> list = playlist.getTracks () ; try { for ( int i = 0; i < ( list.size () ) ; i++ ) { if ( ! ( this.player.startTrack ( list.get ( i ) , true ) ) ) { this.queue.add ( list.get ( i ) ) ; this.playlist.add ( list.get ( i ) .getInfo () .title ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void printAll () { uic.project.commuter.carPoolData.iterator.CarPoolIterator iter = this.getIterator () ; try { while ( iter.hasNext ( this ) ) { uic.project.commuter.carPoolData.iterator.CarPoolComponent currentObject = iter.next ( this ) ; currentObject.printSelf () ; uic.project.commuter.carPoolData.iterator.CarPoolIterator tier2Iter = this.getIterator () ; if ( ( currentObject.getClass () ) == ( this.getClass () ) ) { while ( tier2Iter.hasNext ( currentObject ) ) { tier2Iter.next ( currentObject ) .printSelf () ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public byte[] openBytes ( int no, byte[] buf, int x, int y, int w, int h ) throws java.io.IOException, loci.formats.FormatException { try { loci.formats.FormatTools.checkPlaneParameters ( this, no, buf.length, x, y, w, h ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } long planeSize = loci.formats.FormatTools.getPlaneSize ( this ) ; pixelFile.seek ( ( ( pixelOffset ) + ( no * planeSize ) ) ) ; readPlane ( pixelFile, x, y, w, h, buf ) ; return buf; } 
public void onClick ( android.content.DialogInterface dialog, int id ) { int newActionId = com.ha81dn.webausleser.backend.DatabaseHandler.getNewId ( db, "actions" ) ; copyAction ( db, a.getId () , newActionId, sortNr, com.ha81dn.webausleser.backend.DatabaseHandler.getUniqueCopiedActionName ( activity, db, input.getText () .toString () .trim () , com.ha81dn.webausleser.MainActivity.sourceId ) , idShow, false ) ; try { com.ha81dn.webausleser.MainActivity.appActionMode.finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } db.close () ; com.ha81dn.webausleser.MainActivity.displaySection ( activity, "SOURCE", idShow, null, newActionId ) ; } 
@ java.lang.Override public net.minecraft.item.ItemStack insertItem ( int slot, net.minecraft.item.ItemStack stack, boolean simulate ) { int index = getIndexForSlot ( slot ) ; net.minecraftforge.items.IItemHandlerModifiable handler = getHandlerFromIndex ( index ) ; try { slot = getSlotFromIndex ( slot, index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return handler.insertItem ( slot, stack, simulate ) ; } 
public void removePerson ( int id ) { mDBOpenHelper = new cbpos1989.com.sqlitedatabase.DBOpenHelper ( mContext ) ; try { mDatabase = mDBOpenHelper.getWritableDatabase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mDatabase.execSQL ( ( ( ( ( ( "DELETE FROM " + ( DBFeederContract.PersonTable.TABLE_NAME ) ) + " WHERE " ) + ( DBFeederContract.PersonTable._ID ) ) + " = " ) + id ) ) ; mDatabase.close () ; mDBOpenHelper.close () ; mDatabase = null; mDBOpenHelper = null; } 
private float getNoise ( float x, float y, mapChooser.PerlinNoiseGenerator noise, float scale ) { float n = 0; float weight = 1; float curFrequency = 1; try { for ( int i = 0; i < ( frequencies ) ; i++ ) { n += weight * ( noise.noise2 ( ( curFrequency * x ) , ( curFrequency * y ) ) ) ; weight /= 2; curFrequency += 2; } } catch ( Exception ex ) { ex.printStackTrace () ; } return n; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( mListener ) != null ) { java.lang.String toText = mToTextView.getText () .toString () ; if ( ! ( getResString ( R.string.to_hint ) .equals ( toText ) ) ) { mListener.onToClick ( toText ) ; } else { mListener.onToClick ( null ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.lirazs.gbackbone.client.core.collection.Collection set ( org.lirazs.gbackbone.client.core.data.Options[] objects, org.lirazs.gbackbone.client.core.data.Options options ) { java.util.List<T> models = new java.util.ArrayList<T> () ; try { for ( org.lirazs.gbackbone.client.core.data.Options object : objects ) { T model = prepareModel ( object, options ) ; if ( model != null ) { models.add ( model ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return set ( models, options ) ; } 
@ java.lang.SuppressWarnings ( value = "unused" ) public void onEvent ( de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductClickedEvent event ) { de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductDialogFragment dialogFragment = new de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductDialogFragment () ; android.os.Bundle arguments = new android.os.Bundle () ; try { arguments.putSerializable ( ProductDialogFragmentViewModel.KEY_PRODUCT, event.getProduct () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dialogFragment.setArguments ( arguments ) ; dialogFragment.show ( getFragmentManager () , "ProductDialogFragment" ) ; } 
public void testRetrieveTodoByDate () { java.util.ArrayList<object.Todo> expectedList = new java.util.ArrayList<object.Todo> () ; try { expectedList.add ( todo3 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } expectedList.add ( todo7 ) ; expectedList.add ( todo5 ) ; java.util.ArrayList<object.Todo> actualList = storagetest.FileHandlerTest.fh.retrieveTodoByDate ( "20 oct 2000" ) ; } 
public int decr ( java.lang.String address, int port ) { try { for ( org.openstack4j.model.compute.Image image : this.getImages () ) { if ( address.equals ( image.getAddress () ) ) { image.setNbRequest ( ( ( image.getNbRequest () ) - 1 ) ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return 1; } 
@ java.lang.Override public void onCreate () { super.onCreate () ; player = new android.media.MediaPlayer () ; player.setWakeMode ( getApplicationContext () , PowerManager.PARTIAL_WAKE_LOCK ) ; player.setAudioStreamType ( AudioManager.STREAM_MUSIC ) ; player.setOnPreparedListener ( this ) ; try { player.setOnErrorListener ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } player.setOnCompletionListener ( this ) ; if ( new com.odong.buddhismhomework.utils.KvHelper ( this ) .get ( "mp3.replay", java.lang.Boolean.class, false ) ) { player.setLooping ( true ) ; } } 
public T removeLast () { try { checkRange () ; } catch ( Exception ex ) { ex.printStackTrace () ; } T retVal = _end.getCargo () ; _end = _end.getPrev () ; if ( ( _end ) == null ) { _front = null; } else { _end.setNext ( null ) ; } ( _size ) --; return retVal; } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference, java.lang.Object o ) { try { if ( sp_autocheck.isChecked () ) { check_list.setEnabled ( true ) ; startTimer () ; } else { if ( ( cdt ) != null ) cdt.cancel () ; check_list.setEnabled ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public java.util.Collection<prompto.declaration.IMethodDeclaration> findPotentialMethods () { prompto.expression.MethodSelector selector = methodCall.getMethod () ; java.util.Collection<prompto.declaration.IMethodDeclaration> candidates = selector.getCandidates ( context, false ) ; try { if ( ( candidates.size () ) == 0 ) throw new prompto.error.SyntaxError ( ( "No method named:" + ( methodCall.getMethod () .getName () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return filterPotential ( candidates ) ; } 
@ org.junit.jupiter.api.Test @org.junit.jupiter.api.DisplayName ( value = "Standard headers" ) void standardHeaders () { java.lang.String headers = new jbs.response.HeadersBuilder ( this.requestData, 200 ) .toString () ; try { org.junit.jupiter.api.Assertions.assertEquals ( ( ( ( ( ( ( ( ( "HTTP/1.1 200 \n" + "Date: " ) + ( this.date ) ) + "\n" ) + "X-XSS-Protection: 1; mode=block\n" ) + "X-Frame-Options: DENY\n" ) + "Content-Type: text/plain\n" ) + "\n" ) + "" ) , headers ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.miradi.migrations.forward.DateUnitEffortList getAdjustedDateUnitEffortListForAssignments ( org.miradi.migrations.forward.DateUnitEffortList dateUnitEffortListToAdjust, org.miradi.migrations.forward.RawObject rawObject ) throws java.lang.Exception { java.util.ArrayList<org.miradi.migrations.forward.RawObject> childTasks = getChildTasks ( rawObject ) ; try { for ( org.miradi.migrations.forward.RawObject task : childTasks ) { java.util.ArrayList<org.miradi.objecthelpers.ORef> childAssignmentRefs = getAssignments ( task ) ; for ( org.miradi.objecthelpers.ORef childAssignmentRef : childAssignmentRefs ) { org.miradi.migrations.forward.RawObject childAssignment = getRawProject () .findObject ( childAssignmentRef ) ; dateUnitEffortListToAdjust = getAdjustedDateUnitEffortListForAssignment ( dateUnitEffortListToAdjust, childAssignment ) ; } dateUnitEffortListToAdjust = getAdjustedDateUnitEffortListForAssignments ( dateUnitEffortListToAdjust, task ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return dateUnitEffortListToAdjust; } 
public void openFragment ( android.support.v4.app.Fragment fragment, boolean addToBackStack ) { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction transaction = fragmentManager.beginTransaction () ; try { transaction.replace ( R.id.container, fragment ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } transaction.setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; if ( addToBackStack ) { transaction.addToBackStack ( null ) ; } transaction.commit () ; updateViewFromFragment ( fragment ) ; } 
protected int createNewEntry ( java.io.File f ) { int id = getNextFreeFileID () ; de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile file = new de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile () ; file.ID = id; file.path = f.getPath () ; file.timestamp = f.lastModified () ; file.references = 1; try { list.add ( file ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return id; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { try { if ( ( mVideoFilesVector.size () ) > 0 ) { mAdIndex = ( ( ( mAdIndex ) + ( mVideoFilesVector.size () ) ) - 1 ) % ( mVideoFilesVector.size () ) ; java.lang.String filePath = ( ( java.lang.String ) ( mVideoFilesVector.get ( mAdIndex ) ) ) ; mVideoView.setVideoURI ( android.net.Uri.parse ( filePath ) ) ; mVideoView.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected int draw () { mSurfaceTexture.updateTexImage () ; float[] matrix = new float[16]; mSurfaceTexture.getTransformMatrix ( matrix ) ; mEffect.setTextureTransformMatrix ( matrix ) ; int textureId = mEffect.draw ( mSurfaceTextureId ) ; try { if ( ( mEncoder ) != null ) { start = java.lang.System.currentTimeMillis () ; mHandler.sendEmptyMessage ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mRendererScreen.draw ( textureId, mCubeBuffer, mTextureBuffer ) ; return 0; } 
private void select ( int index ) { assert index < 3; try { if ( ( suggestions[index] ) == "" ) { processor.addWord ( new java.util.ArrayList<com.shiweinan.ckeyboard.Point> () ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } processor.addWord ( screenPoints ) ; screenPoints.clear () ; processor.showCorrectionHints ( screenPoints ) ; } 
private void assertDeepEqualsGuests ( java.util.List<cz.muni.fi.pv168.project.Guest> expectedList, java.util.List<cz.muni.fi.pv168.project.Guest> actualList ) { expectedList.sort ( cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest ) ; actualList.sort ( cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest ) ; assertEquals ( expectedList, actualList ) ; try { for ( int i = 0; i < ( expectedList.size () ) ; i++ ) { cz.muni.fi.pv168.project.Guest expected = expectedList.get ( i ) ; cz.muni.fi.pv168.project.Guest actual = actualList.get ( i ) ; assertDeepEquals ( expected, actual ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void saveUserMetrics ( android.content.Context context ) { android.content.SharedPreferences sharedPref = context.getSharedPreferences ( "HearthTrackerSharedPreferences", Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = sharedPref.edit () ; editor.putString ( "ActiveDeckName", dumplingyzr.hearthtracker.Utils.sActiveDeckName ) ; editor.putString ( "UserName", dumplingyzr.hearthtracker.Utils.sUserName ) ; editor.putStringSet ( "UserDeckNames", dumplingyzr.hearthtracker.Utils.sUserDeckNames ) ; try { editor.apply () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void googleAuthentification ( final io.nearby.android.data.source.local.UserLoginStatusCallback callback ) { com.google.android.gms.common.api.OptionalPendingResult<com.google.android.gms.auth.api.signin.GoogleSignInResult> resultOptionalPendingResult = Auth.GoogleSignInApi.silentSignIn ( mGoogleApiClient ) ; try { if ( resultOptionalPendingResult.isDone () ) { handleGoogleResult ( resultOptionalPendingResult.get () , callback ) ; } else { resultOptionalPendingResult.setResultCallback ( new com.google.android.gms.common.api.ResultCallback<com.google.android.gms.auth.api.signin.GoogleSignInResult> () { @java.lang.Override public void onResult ( @android.support.annotation.NonNull com.google.android.gms.auth.api.signin.GoogleSignInResult googleSignInResult ) { handleGoogleResult ( googleSignInResult, callback ) ; } } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void mouseDragged ( int oldx, int oldy, int newx, int newy ) { if ( ! ( active ) ) return; consumeEvent () ; int diff = newy - oldy; try { if ( diff != 0 ) scrolling.dragged ( ( -diff ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void start () { try { if ( ( ( id ) == null ) || ( ( ( finishedAt ) == null ) || ( ( ( java.lang.System.currentTimeMillis () ) - ( finishedAt ) ) > ( sessionPendingMillis ) ) ) ) { id = java.util.UUID.randomUUID () .toString () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } finishedAt = null; } 
@ com.squareup.otto.Subscribe public void onLastLocation ( today.gacha.android.services.GachaLocationService.LastLocationEvent event ) { try { if ( event.isSuccess () ) { animateGoogleMapCamera ( event.getData () ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.d ( today.gacha.android.ui.MapsActivity.TAG, ( "Get last location failed - " + ( event.getThrowableMessage () ) ) ) ; locationService.requestCurrentLocation () ; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { try { switch ( position ) { case 0: return ruhrpott.owasp.com.vuln_app_1.Hello_Page.newInstance () ; case 1: return ruhrpott.owasp.com.vuln_app_1.Prepare.newInstance () ; case 2: return ruhrpott.owasp.com.vuln_app_1.Basic_Http.newInstance () ; case 3: return ruhrpott.owasp.com.vuln_app_1.Logcat_Output.newInstance () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int getTeamLinks ( org.bukkit.scoreboard.Team team ) { int result = 0; try { if ( ( ( getGameMgr () .getGame ( team ) ) != null ) && ( beaconLinks.containsKey ( getGameMgr () .getGame ( team ) ) ) ) { for ( com.wasteofplastic.beaconz.BeaconLink pair : beaconLinks.get ( getGameMgr () .getGame ( team ) ) ) { if ( pair.getOwner () .equals ( team ) ) { result++; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void receive ( long timeStamp, org.wso2.siddhi.core.event.Event[] inEvents, org.wso2.siddhi.core.event.Event[] removeEvents ) { org.wso2.siddhi.core.util.EventPrinter.print ( timeStamp, inEvents, removeEvents ) ; eventArrived = true; try { if ( inEvents != null ) { ( value ) ++; } else if ( ( value ) == 1 ) { junit.framework.Assert.assertNull ( inEvents ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private double stdDev ( java.util.LinkedList<java.lang.Double> list ) { double mean = mean ( list ) ; double sumOfDiffToMeanSq = 0; double length = list.size () ; try { for ( double i : list ) { double diffToMeanSq = java.lang.Math.pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq; } } catch ( Exception ex ) { ex.printStackTrace () ; } double meanOfDiffs = sumOfDiffToMeanSq / length; return java.lang.Math.sqrt ( meanOfDiffs ) ; } 
public java.lang.String printForwards ( int numToPrint ) { LLNode<E> item = first; java.lang.String finalString = ""; try { if ( ( size () ) == 0 ) return finalString; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < numToPrint; i++ ) { finalString += ( item.toString () ) + "\n"; item = item.getNext () ; } return finalString; } 
public final void setFPS ( int fps ) { if ( fps <= 0 ) { throw new java.lang.RuntimeException ( "Attempted to run a CellGame at a non-positive FPS" ) ; } this.fps = fps; msPerFrame = 1000 / ( ( double ) ( fps ) ) ; try { if ( ( game.getContainer () ) != null ) { game.getContainer () .setTargetFrameRate ( fps ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean authenticate ( final java.lang.String iUserName, final java.lang.String iPassword, final java.lang.String iResourceToCheck ) { final com.orientechnologies.orient.server.config.OServerUserConfiguration user = getUser ( iUserName ) ; try { if ( ( user != null ) && ( user.password.equals ( iPassword ) ) ) { if ( user.resources.equals ( "*" ) ) return true; java.lang.String[] resourceParts = user.resources.split ( "," ) ; for ( java.lang.String r : resourceParts ) if ( r.equals ( iResourceToCheck ) ) return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void setTimerView ( long secUntilFinished ) { java.lang.String sec = java.lang.String.format ( "%02d", ( ( secUntilFinished / 1000 ) % 60 ) ) ; java.lang.String min = java.lang.String.format ( "%02d", ( ( secUntilFinished / 1000 ) / 60 ) ) ; textViewText = ( min + ":" ) + sec; try { textView.setText ( textViewText ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } progressBar.setProgress ( ( ( int ) ( ( secUntilFinished * 1000 ) / ( default_StudyTime ) ) ) ) ; } 
private void clearData () { try { selectedFaculties.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } chosenFaculties = ""; questions.clear () ; newDate = ""; for ( int i = 0; i < ( checked.length ) ; i++ ) { checked[i] = false; } aSpinner1.setSelection ( 0 ) ; } 
@ java.lang.Override public boolean canDrain ( net.minecraft.util.EnumFacing from, net.minecraftforge.fluids.Fluid fluid ) { try { if ( ( hasFrequency () ) && ( ( configComponent.getOutput ( TransmissionType.FLUID, from, facing ) .ioState ) == ( mekanism.common.SideData.IOState.OUTPUT ) ) ) { return ( fluid == null ) || ( fluid == ( frequency.storedFluid.getFluid () .getFluid () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
protected void setSelectedPanel ( processing.app.contrib.ContributionPanel contributionPanel ) { try { contributionTab.contributionManagerDialog.updateStatusPanel ( contributionPanel ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( selectedPanel ) == contributionPanel ) { selectedPanel.setSelected ( true ) ; } else { processing.app.contrib.ContributionPanel lastSelected = selectedPanel; selectedPanel = contributionPanel; if ( lastSelected != null ) { lastSelected.setSelected ( false ) ; } contributionPanel.setSelected ( true ) ; updateColors () ; requestFocusInWindow () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item.getItemId () ; try { if ( id == ( R.id.action_filter ) ) { com.aftersapp.fragments.FilterFragment filterFragment = new com.aftersapp.fragments.FilterFragment () ; getFragmentManager () .beginTransaction () .replace ( R.id.fragment_frame_lay, filterFragment, "FilterFragment" ) .commit () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onOptionsItemSelected ( item ) ; } 
private void handleTakePictureResult ( int resultCode, android.content.Intent resultIntent ) { try { if ( resultCode == ( RESULT_OK ) ) { android.widget.ImageView imgView = ( ( android.widget.ImageView ) ( findViewById ( R.id.imgShowImage ) ) ) ; mPhotoPathName = mPhotoPathUri.getPath () ; com.example.a454203.aone_sample.PhotoHelper.addPhotoToMediaStoreAndDisplayThumbnail ( mPhotoPathName, this, imgView ) ; } else { mPhotoPathUri = null; mPhotoPathName = null; android.widget.Toast.makeText ( this, "User cancelled", Toast.LENGTH_LONG ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML private void apriCorpiOrb () { dati.spazio.CorpoCeleste corpoSel = tabCor.getSelectionModel () .getSelectedItem () ; try { if ( corpoSel != null ) { java.util.List<? extends dati.spazio.CorpoCeleste> corpi = corpoSel.getListaCorpiOrbitanti () ; java.lang.String nomeCorpoFuoco = tabCor.getSelectionModel () .getSelectedItem () .getNome () ; simulazionesistemaplanetario.gui.tabelle.TabellaController.launchTabellaController ( nomeCorpoFuoco, corpi ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addConstraint ( mondrian.rolap.sql.SqlQuery sqlQuery, mondrian.rolap.sql.RolapCube baseCube, mondrian.rolap.aggmatcher.AggStar aggStar ) { try { for ( int i = 0; i < ( columnList.size () ) ; i++ ) { mondrian.olap.MondrianDef.Expression expression = columnList.get ( i ) ; if ( expression != null ) { final java.lang.Comparable value = valueList.get ( i ) ; final mondrian.spi.Dialect.Datatype datatype = datatypeList.get ( i ) ; sqlQuery.addWhere ( mondrian.rolap.sql.SqlConstraintUtils.constrainLevel2 ( sqlQuery, expression, datatype, value ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void iand () { compiler.Ecriture.ecrireStringln ( flux, ";iand" ) ; try { compiler.Ecriture.ecrireStringln ( flux, "pop bx" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } compiler.Ecriture.ecrireStringln ( flux, "pop ax" ) ; compiler.Ecriture.ecrireStringln ( flux, "and ax,bx" ) ; compiler.Ecriture.ecrireStringln ( flux, "push ax" ) ; } 
private void jumpToPage () { java.lang.Integer targetPage = pageField.getTextAsInteger () ; if ( targetPage == null ) { return; } if ( ( targetPage != null ) && ( ! ( ( targetPage >= 1 ) && ( targetPage <= ( totalPages ) ) ) ) ) { showErrorMessage ( "Invalid page" ) ; return; } currentPage = targetPage - 1; try { displayPage ( currentPage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updatePageNumberLabelAndNavigation () ; } 
@ java.lang.Override public void initComponent () { io.github.maddouri.intellij.OnlineSearch.state.PluginSettings settings = io.github.maddouri.intellij.OnlineSearch.state.PluginSettings.getInstance () ; com.intellij.openapi.actionSystem.ActionManager am = com.intellij.openapi.actionSystem.ActionManager.getInstance () ; com.intellij.openapi.actionSystem.DefaultActionGroup menuManager = ( ( com.intellij.openapi.actionSystem.DefaultActionGroup ) ( am.getAction ( io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchActionRegistration.COMPONENT_GROUP ) ) ) ; for ( io.github.maddouri.intellij.OnlineSearch.state.PluginSettings.SearchEngine engine : settings.searchEngines ) { io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchAction action = new io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchAction ( engine ) ; am.registerAction ( io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchActionRegistration.getActionId ( action ) , action ) ; menuManager.add ( action ) ; } try { menuManager.addSeparator () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean checkToken ( fundata.model.Token model ) { if ( model == null ) { return false; } java.lang.String token = ( ( java.lang.String ) ( redisTemplate.boundValueOps ( model.getUserId () ) .get () ) ) ; if ( ( token == null ) || ( ! ( token.equals ( model.getToken () ) ) ) ) { return false; } try { redisTemplate.boundValueOps ( model.getUserId () ) .expire ( Constants.TOKEN_EXPIRES_HOUR, java.util.concurrent.TimeUnit.HOURS ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private edu.princeton.cs.algs4.Stack<edu.princeton.cs.algs4.Point2D> range ( edu.princeton.cs.algs4.RectHV rect, KdTree.Node node, edu.princeton.cs.algs4.Stack<edu.princeton.cs.algs4.Point2D> points ) { if ( node == null ) return points; try { if ( rect.contains ( node.p ) ) points.push ( node.p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( rect.intersects ( node.rect ) ) { points = range ( rect, node.lb, points ) ; points = range ( rect, node.rt, points ) ; } return points; } 
public final void hide () { try { if ( ( this.runtime ) != null ) { this.runtime.runOnPhysicsThread ( new java.lang.Runnable () { @java.lang.Override public void run () { for ( final com.thommil.libgdx.runtime.actor.physics.Collidable collidable : collidables ) { setCollidablesState ( collidable, false ) ; } hidden = true; onHide () ; } } ) ; } else { hidden = true; onHide () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void controlUpdate ( float tpf ) { try { if ( ! ( com.nx.util.jme3.base.SpatialUtil.hasControl ( originalSpatial, skeletonControl ) ) ) { cachedControls.remove ( skeletonControl ) ; removeFromDebug ( originalSpatial, skeletonDebugger ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( skeletonDebugger.getLocalTransform () .equals ( originalSpatial.getWorldTransform () ) ) ) { skeletonDebugger.setLocalTransform ( originalSpatial.getWorldTransform () ) ; } } 
private void updateBestTimes ( float recentTime ) { curTime.setText ( ( "current time: " + ( java.lang.String.valueOf ( recentTime ) ) ) ) ; if ( recentTime <= ( bestTimeTracker ) ) { bestTimeTracker = recentTime; } if ( recentTime >= ( worstTimeTracker ) ) { worstTimeTracker = recentTime; } try { bestTime.setText ( ( "best time: " + ( bestTimeTracker ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } worstTime.setText ( ( "worst time: " + ( worstTimeTracker ) ) ) ; } 
public void setScore ( java.lang.String name, int point ) { try { for ( org.bukkit.scoreboard.Scoreboard sb : scoreboards.values () ) { org.bukkit.scoreboard.Objective obj = sb.getObjective ( org.bitbucket.ucchy.fnafim.game.ScoreboardDisplay.OBJECTIVE_NAME ) ; if ( point == 0 ) { getScoreItem ( obj, name ) .setScore ( 1 ) ; } getScoreItem ( obj, name ) .setScore ( point ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setImageSource ( java.lang.Object object ) { imageSources = new java.util.ArrayList<org.appcelerator.titanium.view.TiDrawableReference> () ; try { if ( object instanceof java.lang.Object[] ) { for ( java.lang.Object o : ( ( java.lang.Object[] ) ( object ) ) ) { imageSources.add ( org.appcelerator.titanium.view.TiDrawableReference.fromObject ( getProxy () , o ) ) ; } } else { imageSources.add ( org.appcelerator.titanium.view.TiDrawableReference.fromObject ( getProxy () , object ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void fillMap () { values.clear () ; mMap.clear () ; cursor = getActivity () .getContentResolver () .query ( EcoMapContract.ProblemsEntry.CONTENT_URI, null, null, null, null, null ) ; try { while ( cursor.moveToNext () ) { org.ecomap.android.app.Problem p = new org.ecomap.android.app.Problem ( cursor, getActivity () ) ; values.add ( p ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } cursor.close () ; setUpClusterer () ; } 
protected void initialize () { new com.googlecode.kanbanik.client.components.common.PicturePreviewHandler ( pictureUrl, assiggneePicturePreview, assigneePicturePreviewLabel, assiggneePicturePreviewErrorLabel ) .initialize () ; permissionsEditingComponent = new com.googlecode.kanbanik.client.components.security.PermissionsEditingComponent () ; java.util.List<com.googlecode.kanbanik.client.api.Dtos.PermissionDto> permissions = ( ( oldDto ) != null ) ? oldDto.getPermissions () : java.util.Collections.EMPTY_LIST; permissions = ( permissions != null ) ? permissions : java.util.Collections.EMPTY_LIST; permissionsEditingComponent.init ( permissions, oldDto ) ; try { permissionsPanel.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } permissionsPanel.add ( permissionsEditingComponent ) ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call<java.util.List<com.namclu.android.deputyscheduler.models.Shift>> call, retrofit2.Response<java.util.List<com.namclu.android.deputyscheduler.models.Shift>> response ) { int statusCode = response.code () ; java.util.List<com.namclu.android.deputyscheduler.models.Shift> shifts = response.body () ; try { recyclerView.setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void parseAssociatedNames ( hudson.model.Job<?, ?> job, java.util.Collection<com.cloudbees.jenkins.GitHubRepositoryName> result ) { try { if ( job instanceof jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util.filter ( p.getTriggers () .values () , com.cloudbees.jenkins.GitHubTrigger.class ) ) { result.addAll ( ght.getGitHubRepositories () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean accepts ( rocnikovyprojekt.Word w ) { rocnikovyprojekt.FSA m = determinize () ; java.lang.Object p = m.initialStates.iterator () .next () ; try { for ( int i = 0; i < ( w.length () ) ; i++ ) { java.lang.Object a = w.symbolAt ( i ) ; p = m.delta.get ( p, a ) .iterator () .next () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return m.finalStates.contains ( p ) ; } 
@ java.lang.Override public void kill () { java.util.ArrayList<com.watabou.pixeldungeon.effects.SystemFloatingText> stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks.get ( key ) ; try { if ( stack != null ) { stack.remove ( this ) ; if ( stack.isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks.remove ( key ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } super.kill () ; } 
public java.lang.String getAnnotatedHTML () { java.lang.String html = new java.lang.String ( text ) ; java.lang.String tagged; try { for ( org.openmrs.module.bannerprototype.SofaTextMention m : sofaTextMention ) { tagged = wrapInMentionTypeTag ( m.getMentionText () , m.getMentionType () ) ; if ( ! ( m.getSofaTextMentionConcept () .isEmpty () ) ) tagged = wrapInConceptTag ( tagged, m ) ; html = html.replace ( m.getMentionText () , tagged ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return html; } 
public void assignForm ( int govid, sample.ApplicationData unAssignedForm ) throws java.sql.SQLException { int resultCount; stmt = conn.createStatement () ; java.lang.String query = ( ( ( "UPDATE FORM SET FORM.STATUS = 'ASSIGNED', FORM.GOVID = " + govid ) + " WHERE TTBID = '" ) + ( unAssignedForm.getTtbID () ) ) + "'"; try { stmt.executeUpdate ( query ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.map_location: if ( ( android.support.v4.content.ContextCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { mLocationManager.requestLocationUpdates ( LocationManager.NETWORK_PROVIDER, 0, 0, this ) ; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void startElement ( java.lang.String uri, java.lang.String localName, java.lang.String qName, org.xml.sax.Attributes atts ) throws org.xml.sax.SAXException { if ( ( depth ) == 1 ) captureElements = jaxbReader.elementChecker.isParentInfoElement ( uri, localName ) ; try { if ( captureElements ) tmp.startElement ( uri, localName, qName, atts ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( depth ) ++; } 
private void clearResults () { tvResultsWillShowIf.setVisibility ( ( isActivity ? android.view.View.GONE : android.view.View.VISIBLE ) ) ; tilIP.setError ( "Invalid IP" ) ; tilIP.setErrorEnabled ( true ) ; cvHomeAddressRange.setVisibility ( View.GONE ) ; try { cvBroadcastAddress.setVisibility ( View.GONE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cvNetworkAddress.setVisibility ( View.GONE ) ; } 
public void refresh () { try { if ( this.status ) { World.currentWorld.set_Case ( this.dest_add, this.to_add ) ; java.lang.System.out.println ( "Refreshing replacing case" ) ; java.lang.System.out.println ( this.to_add ) ; this.notifyObserver () ; } else { World.currentWorld.set_Case ( this.dest_add, this.replaced ) ; java.lang.System.out.println ( "Refreshing normal case" ) ; java.lang.System.out.println ( this.dest_add ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public T dequeue () { try { if ( isEmpty () ) return null; } catch ( Exception ex ) { ex.printStackTrace () ; } T x = queueArray[front]; queueArray[ ( ( front ) ++ ) ] = null; if ( ( front ) == ( n ) ) front = 0; return x; } 
@ java.lang.Override public synchronized net.torocraft.toroquest.civilization.Province register ( int chunkX, int chunkZ ) { net.torocraft.toroquest.civilization.Province province = atLocation ( chunkX, chunkZ ) ; try { if ( province != null ) { updateExistingProvince ( province, chunkX, chunkZ ) ; } else { province = buildNewProvince ( chunkX, chunkZ ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } markDirty () ; return province; } 
@ org.junit.Test public void withEndGreaterThanStringLength () { try { for ( int i = 1; i < 10; i++ ) { final int end = ( string.getCharacters () .length ) + i; final com.valkryst.VTerminal.misc.IntRange range = new com.valkryst.VTerminal.misc.IntRange ( 0, end ) ; org.junit.Assert.assertFalse ( string.isRangeValid ( range ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.eclipse.titan.runtime.core.TitanBoolean isBound () { try { for ( int i = 0; i < ( array_size ) ; ++i ) { if ( array_elements.get ( i ) .isBound () .getValue () ) { return new org.eclipse.titan.runtime.core.TitanBoolean ( true ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.eclipse.titan.runtime.core.TitanBoolean ( false ) ; } 
protected org.rikai.dictionary.edict.EdictEntry buildEntry ( org.rikai.dictionary.db.ResultCursor cursor, org.rikai.deinflector.DeinflectedWord variant ) { java.lang.String reason = ""; try { if ( ! ( variant.getReason () .equals ( "" ) ) ) { reason = ( ( "< " + ( variant.getReason () ) ) + " < " ) + ( variant.getOriginalWord () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return makeEntry ( variant, cursor.getValue ( "kanji" ) , cursor.getValue ( "kana" ) , cursor.getValue ( "entry" ) , reason ) ; } 
@ java.lang.Override public boolean onScale ( android.view.ScaleGestureDetector detector ) { scale *= detector.getScaleFactor () ; try { scale = java.lang.Math.max ( 0.2F, java.lang.Math.min ( scale, 3.0F ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.i ( ca.sapphire.schview.SchViewActivity.TAG, ( "Scale: " + ( scale ) ) ) ; return true; } 
@ java.lang.Override public void connectionChanged ( final org.csstudio.dal2.service.IPvAccess<java.lang.String> source, final boolean isConnected ) { if ( isConnected ) { _alreadyConnected.incrementAndGet () ; } try { org.csstudio.alarm.service.internal.AlarmConnectionDAL2Impl.ListenerItem.LOG_INNER.trace ( "received connection change to {} for pv {} ", new java.lang.Object[] { source.getPVAddress () .getAddress () , isConnected } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } _alarmListener.onMessage ( org.csstudio.alarm.service.internal.AlarmMessageDAL2Impl.newAlarmMessage ( _pvAccess, new java.util.Date () ) ) ; } 
protected long _daysLate ( com.born2go.lazzybee.db.Card card ) { try { if ( ( card.getQueue () ) != ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) return 0; } catch ( Exception ex ) { ex.printStackTrace () ; } long due = card.getDue () ; long now = com.born2go.lazzybee.algorithms.Utils.intNow () ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math.max ( 0, diff_day ) ; } 
public void reaction () { nbasim.Team defense = game.other ( offense ) ; try { if ( made ) { offense.defense () ; defense.offense () ; } else { offense.limbo () ; defense.limbo () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void computeOutputs ( org.apache.beam.runners.spark.SparkRunner.Evaluator evaluator, boolean debugPipelineMode ) { try { if ( debugPipelineMode && ( evaluator instanceof org.apache.beam.runners.spark.SparkNativePipelineVisitor ) ) { org.apache.beam.runners.spark.translation.EvaluationContext.LOG.info ( ( "Translated Native Spark pipeline:\n" + ( ( ( org.apache.beam.runners.spark.SparkNativePipelineVisitor ) ( evaluator ) ) .getDebugString () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( org.apache.beam.runners.spark.translation.Dataset dataset : leaves ) { dataset.cache ( storageLevel () ) ; if ( !debugPipelineMode ) { dataset.action () ; } else { dataset.printDebugString () ; } } } 
private soaringcoach.Flight analyse ( soaringcoach.Flight f ) throws soaringcoach.analysis.AnalysisException { try { f = new soaringcoach.analysis.CirclingAnalysis () .analyse ( f ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } f = new soaringcoach.analysis.ThermalAnalysis () .analyse ( f ) ; f = new soaringcoach.analysis.WindAnalysis () .analyse ( f ) ; f = new soaringcoach.analysis.CentringAnalysis () .analyse ( f ) ; f = new soaringcoach.analysis.ShortStraightPhasesAnalysis () .analyse ( f ) ; f = new soaringcoach.analysis.DistanceAnalysis () .analyse ( f ) ; f = new soaringcoach.analysis.FlightSummaryAnalysis () .analyse ( f ) ; return f; } 
@ java.lang.Override public java.lang.Object visit ( IC.AST.LocalVariable localVariable ) { java.lang.String localVariableStr = ""; try { if ( localVariable.hasInitValue () ) { target = freshRegister () ; localVariableStr = localVariableStr.concat ( ( ( java.lang.String ) ( localVariable.getInitValue () .accept ( this ) ) ) ) ; localVariableStr = localVariableStr.concat ( Emit ( localVariable.getName () , target ) ) ; localVariable.getEnclosingScope () .setVaraibleReg ( localVariable.getName () , c ) ; return localVariableStr; } } catch ( Exception ex ) { ex.printStackTrace () ; } return localVariable.getName () ; } 
public int calMaxSubseqSum2 () { try { this.getInputs () ; } catch ( Exception ex ) { ex.printStackTrace () ; } int thisSum; int maxSum = 0; for ( int i = 0; i < ( sequence.length ) ; i++ ) { thisSum = 0; for ( int j = i; j < ( sequence.length ) ; j++ ) { thisSum += sequence[j]; if ( thisSum > maxSum ) { maxSum = thisSum; } } } return maxSum; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/tarefa/{id}", method = org.springframework.web.bind.annotation.RequestMethod.GET, produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) public org.springframework.http.ResponseEntity<br.edu.ifsp.dsw.model.Tarefa> buscarTarefa ( @org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id ) { try { java.lang.System.out.println ( ( "Buscando tarefa de id: " + id ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } br.edu.ifsp.dsw.model.Tarefa tarefa = tarefaService.buscarPorId ( id ) ; if ( tarefa == null ) { java.lang.System.out.println ( ( ( "Tarefa de id :" + id ) + " nao foi encontrada." ) ) ; return new org.springframework.http.ResponseEntity<br.edu.ifsp.dsw.model.Tarefa> ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } return new org.springframework.http.ResponseEntity<br.edu.ifsp.dsw.model.Tarefa> ( tarefa, org.springframework.http.HttpStatus.OK ) ; } 
@ java.lang.Override public void onDrawerOpened ( android.view.View drawerView ) { super.onDrawerOpened ( drawerView ) ; if ( ! ( isAdded () ) ) { return; } try { if ( ! ( mUserLearnedDrawer ) ) { mUserLearnedDrawer = true; android.content.SharedPreferences sp = android.preference.PreferenceManager.getDefaultSharedPreferences ( getActivity () ) ; sp.edit () .putBoolean ( com.martin.martinthorneprojects.NavigationDrawerFragment.PREF_USER_LEARNED_DRAWER, true ) .commit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } getActivity () .supportInvalidateOptionsMenu () ; } 
public static org.jboss.reddeer.common.context.ExecutionSetting getInstance () { try { if ( ( org.jboss.reddeer.common.context.ExecutionSetting.instance ) == null ) { org.jboss.reddeer.common.context.ExecutionSetting.instance = new org.jboss.reddeer.common.context.ExecutionSetting () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.pauseFailedTest = RedDeerProperties.PAUSE_FAILED_TEST.getBooleanSystemValue () ; java.lang.String logMessageFilterText = RedDeerProperties.LOG_MESSAGE_FILTER.getSystemValue () ; java.lang.String logLevel = RedDeerProperties.LOG_LEVEL.getSystemValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.logLevel = LogLevel.ALL.fromString ( logLevel ) .getValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.parseLogMessageFilter ( logMessageFilterText ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return org.jboss.reddeer.common.context.ExecutionSetting.instance; } 
@ java.lang.Override public int requestEnergy ( int energy, boolean simulate ) { int given = this.storage.extractEnergy ( energy, simulate ) ; try { if ( !simulate ) { this.markDirty () ; if ( ! ( worldObj.isRemote ) ) { this.lastOut += given; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return given; } 
public void showDate ( int year, int month ) { try { if ( ( mAdapter ) != null ) { mAdapter.setDate ( year, month ) ; initDateText () ; if ( ( onCalendarChangeListener ) != null ) onCalendarChangeListener.onMonthChanged ( year, ( month + 1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startId ) { android.content.Context mContext = getApplicationContext () ; ru.meefik.linuxdeploy.MainActivity.notification ( mContext, null ) ; java.lang.String command = intent.getStringExtra ( "command" ) ; try { new ru.meefik.linuxdeploy.ExecScript ( mContext, command ) .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onStartCommand ( intent, flags, startId ) ; } 
public static org.talend.designer.components.hashfile.common.MATCHING_MODE parse ( java.lang.String matchingMode ) { org.talend.designer.components.hashfile.common.MATCHING_MODE[] multipleMatchingModes = org.talend.designer.components.hashfile.common.MATCHING_MODE.values () ; try { for ( org.talend.designer.components.hashfile.common.MATCHING_MODE multipleMatchingMode : multipleMatchingModes ) { if ( multipleMatchingMode.toString () .equals ( matchingMode ) ) { return multipleMatchingMode; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public com.youcruit.billogram.objects.response.billogram.BillogramResponse commandCredit ( java.lang.String billogramId, java.math.BigDecimal amount, com.youcruit.billogram.client.BillogramClient.CreditMode creditMode ) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Object> creditRequest = new java.util.HashMap<> () ; creditRequest.put ( "mode", creditMode ) ; try { creditRequest.put ( "amount", amount ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final java.net.URI uri = httpClient.pathToUri ( "billogram", billogramId, "command", "credit" ) ; return httpClient.sync ( uri, creditRequest, com.youcruit.billogram.client.http.HttpClient.Method.POST, com.youcruit.billogram.objects.response.billogram.BillogramResponse.class ) ; } 
private void initGui () { setContentView ( R.layout.activity_main ) ; try { butterknife.ButterKnife.bind ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } navView.setNavigationItemSelectedListener ( this ) ; navView.getMenu () .getItem ( 0 ) .setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView.getHeaderView ( 0 ) ) ) ; navHeader.setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout.closeDrawer ( GravityCompat.START ) ; } } ) ; } 
public int showMaximumIndependentSet () { java.util.Set<no.uib.ii.algo.st8.start.UnVertex> cover = no.uib.ii.algo.st8.algorithms.ExactVertexCover.findExactVertexCover ( graph.getGraph () ) ; try { clearAll () ; } catch ( Exception ex ) { ex.printStackTrace () ; } markedVertices.addAll ( graph.getVertices () ) ; markedVertices.removeAll ( cover ) ; return markedVertices.size () ; } 
private java.lang.String showEnterNameDialog () { javafx.scene.control.TextInputDialog dialog = new javafx.scene.control.TextInputDialog ( "walter" ) ; try { dialog.setTitle ( this.res.enterNameDialogTitle ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dialog.setHeaderText ( this.res.enterNameDialogHeaderText ) ; dialog.setContentText ( this.res.enterNameDialogContentText ) ; java.util.Optional<java.lang.String> result = dialog.showAndWait () ; if ( result.isPresent () ) { java.lang.System.out.println ( ( "Your name: " + ( result.get () ) ) ) ; return result.get () ; } return null; } 
private java.lang.String calc ( java.lang.String input ) { if ( input == null ) { return ""; } java.lang.String word = ""; try { for ( int i = 0; i < ( input.length () ) ; i++ ) { word += ( input.charAt ( i ) ) + 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } return word; } 
private void writeData ( org.n52.io.response.dataset.DataCollection<org.n52.io.response.dataset.measurement.MeasurementData> data, java.io.OutputStream stream ) throws java.io.IOException { try { for ( org.n52.io.response.dataset.DatasetOutput metadata : seriesMetadatas ) { org.n52.io.response.dataset.measurement.MeasurementData series = data.getSeries ( metadata.getId () ) ; writeData ( metadata, ( ( org.n52.io.response.dataset.measurement.MeasurementData ) ( series ) ) , stream ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDraw ( android.graphics.Canvas canvas ) { try { super.onDraw ( canvas ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } gridHeight = getHeight () ; gridWidth = getWidth () ; if ( ( triangulation ) != null ) { plotOnCanvas ( canvas ) ; } else { generateAndInvalidate () ; } } 
@ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = child.getAttributeByName ( attributeName ) ; try { if ( ( attribute != null ) && ( attributeValue.equals ( attribute.getAttributeValue () ) ) ) { matchingTags.add ( child ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.editor_layout ) ; progressBar = new android.app.ProgressDialog ( this ) ; progressBar.setProgressStyle ( ProgressDialog.STYLE_SPINNER ) ; progressBar.setTitle ( "Work in Progress" ) ; progressBar.setCancelable ( false ) ; try { progressBar.setButton ( DialogInterface.BUTTON_NEGATIVE, "Cancel", new android.content.DialogInterface.OnClickListener () { @java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { handler.sendEmptyMessage ( Utility.STOP_PROGRESS_MSG ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } initUI () ; } 
@ org.junit.Test public void testRemoveVmsFromExistingAffinityGroup () { org.ovirt.engine.core.common.scheduling.AffinityGroup existing = dao.get ( FixturesTool.EXISTING_AFFINITY_GROUP_ID ) ; org.junit.Assert.assertFalse ( existing.getEntityNames () .isEmpty () ) ; existing.getEntityIds () .clear () ; dao.update ( existing ) ; org.ovirt.engine.core.common.scheduling.AffinityGroup fetched = dao.get ( existing.getId () ) ; try { org.junit.Assert.assertTrue ( fetched.getEntityNames () .isEmpty () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeFieldListItem ( java.lang.String getter, java.lang.String childListName, java.lang.String selectionName ) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.NoSuchMethodException, java.lang.SecurityException, java.lang.reflect.InvocationTargetException { java.lang.reflect.Method mthGetSelected = this.getClass () .getMethod ( ( "get" + ( com.mcmatica.entity.webui.common.Utility.capitalize ( selectionName ) ) ) ) ; java.lang.Object itemselected; try { itemselected = mthGetSelected.invoke ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.removeFieldListItem ( getter, childListName, itemselected ) ; } 
private int getWordId ( @javax.annotation.Nonnull final java.lang.String word ) { try { if ( word2index.containsKey ( word ) ) { return word2index.get ( word ) ; } else { int w = word2index.size () ; word2index.put ( word, w ) ; return w; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getFormattedDateString_6days () { try { org.hamcrest.MatcherAssert.assertThat ( com.ddiehl.timesincetextview.TimeSince.getFormattedDateString ( ( ( ( mTime ) - ( ( ( 7 * 24 ) * 60 ) * 60 ) ) + 1 ) , mTime, false, getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.is ( getQuantityString ( R.plurals.tstv_timespan_days, 6 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setTimePeriod ( java.lang.Long startTimeParam, java.lang.Long endTimeParam ) { long startTime = ( startTimeParam == null ) ? 0L : startTimeParam; long endTime = ( endTimeParam == null ) ? teammates.common.util.TimeHelper.now ( 0.0 ) .getTimeInMillis () : endTimeParam; try { query.startTimeMillis ( startTime ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } query.endTimeMillis ( endTime ) ; this.startTime = startTime; this.endTime = endTime; } 
public void resetItems () { try { if ( ( swipeListView.getAdapter () ) != null ) { int count = swipeListView.getAdapter () .getCount () ; int size = opened.size () ; for ( int i = size; i < count; i++ ) { opened.add ( false ) ; openedRight.add ( false ) ; checked.add ( false ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void toEntity () throws java.lang.Exception { com.duoec.commons.pojo.house.House house = houseDao.find ( com.mongodb.client.model.Filters.eq ( "_id", 14607 ) ) .first () ; org.bson.Document doc = com.duoec.commons.mongo.MongoConverter.toDocument ( house ) ; com.duoec.commons.pojo.house.House house2 = com.duoec.commons.mongo.MongoConverter.toEntity ( doc, com.duoec.commons.pojo.house.House.class ) ; try { assertEquals ( house, house2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean regConsumer ( com.seveniu.consumer.Consumer consumer ) { try { if ( this.consumerMap.containsKey ( consumer.getName () ) ) { logger.warn ( "consumer '{}' has reg", consumer.getName () ) ; return false; } else { this.consumerMap.put ( consumer.getName () , consumer ) ; logger.info ( "reg consumer : {}", consumer ) ; consumer.start () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void flushTicketsInFile ( java.lang.String fileName ) { javax.swing.tree.DefaultTreeModel defaultModel = ( ( javax.swing.tree.DefaultTreeModel ) ( taskTree.getModel () ) ) ; try { if ( ( fileToNodes.get ( fileName ) ) != null ) { for ( javax.swing.tree.DefaultMutableTreeNode node : fileToNodes.get ( fileName ) ) { defaultModel.removeNodeFromParent ( node ) ; fileToNodes.get ( fileName ) .remove ( node ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onGenerated ( android.support.v7.graphics.Palette palette ) { try { mCollapsingToolbar.setContentScrimColor ( palette.getVibrantColor ( R.attr.colorPrimary ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mCollapsingToolbar.setStatusBarScrimColor ( palette.getDarkVibrantColor ( R.attr.colorPrimaryDark ) ) ; com.centerstage.limelight.MovieFragment fragment = ( ( com.centerstage.limelight.MovieFragment ) ( getSupportFragmentManager () .findFragmentById ( R.id.movie_fragment ) ) ) ; if ( fragment != null ) fragment.onPaletteGenerated ( palette ) ; } 
public void testCombat () throws java.lang.Exception, java.sql.SQLException { try { this.benchmark.createDatabase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.oltpbenchmark.api.Worker w = workers.get ( 0 ) ; com.oltpbenchmark.benchmarks.galaxy.procedures.Combat proc = w.getProcedure ( com.oltpbenchmark.benchmarks.galaxy.procedures.Combat.class ) ; if ( proc != null ) { new com.oltpbenchmark.benchmarks.galaxy.util.TestCombat () .run ( conn, proc, new java.util.Random () ) ; } } 
protected void initialize () { try { setTimeout () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setTitle ( getStringResource ( "title" ) ) ; add ( new org.apache.wicket.markup.html.basic.Label ( "pageTitle", new org.apache.wicket.model.PropertyModel<java.lang.String> ( this, "title" ) ) ) ; add ( new org.dcache.webadmin.view.panels.header.HeaderPanel ( "headerPanel" ) ) ; add ( new org.dcache.webadmin.view.panels.userpanel.UserPanel ( "userPanel" ) ) ; add ( new org.dcache.webadmin.view.panels.navigation.BasicNavigationPanel ( "navigationPanel", this.getClass () ) ) ; } 
private static kafka.consumer.ConsumerConfig createConsumerConfig ( java.lang.String zkConnect, java.lang.String groupId ) { java.util.Properties props = new java.util.Properties () ; props.put ( "zookeeper.connect", zkConnect ) ; props.put ( "group.id", groupId ) ; props.put ( "zookeeper.session.timeout.ms", "400" ) ; props.put ( "zookeeper.sync.time.ms", "200" ) ; try { props.put ( "auto.commit.interval.ms", "1000" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new kafka.consumer.ConsumerConfig ( props ) ; } 
public static java.lang.String superDecrypt ( java.lang.String start ) { try { if ( ( start.length () ) < 1 ) return start; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < 3; i++ ) { start = Encryption.keyDecrypt ( 7, start ) ; start = Encryption.descramble ( start, 7 ) ; } return start; } 
public void modulo ( pl.kryptografia.rabin.bignum.BigNum modulus ) { try { while ( absGreaterOrEqualTo ( modulus ) ) { pl.kryptografia.rabin.bignum.BigNum x = new pl.kryptografia.rabin.bignum.BigNum ( modulus ) ; int shift = findMaximumLeftShift ( x ) ; x.shiftLeft ( shift ) ; absSubtract ( x ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( sign ) == ( -1 ) ) { add ( modulus ) ; sign = 1; } } 
@ java.lang.Override public void setup ( edu.gsgp.experiment.data.Dataset dataset, edu.gsgp.nodes.Node tree ) { super.setup ( dataset, tree ) ; double value; try { for ( edu.gsgp.experiment.data.Instance instance : dataset ) { value = eval ( instance ) ; min = java.lang.Math.min ( min, value ) ; max = java.lang.Math.max ( max, value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean removeGeofence ( long id ) { try { if ( ! ( mGoogleApiClient.isConnected () ) ) { android.util.Log.i ( hk.ust.cse.comp4521.reminder.ReminderDataController.TAG, "Cannot connect to Google Service" ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent intent = new android.content.Intent ( context, hk.ust.cse.comp4521.reminder.GeofenceTransitionIntentService.class ) ; android.app.PendingIntent pendingIntent = android.app.PendingIntent.getService ( context, ( ( ( int ) ( id ) ) * 7 ) , intent, PendingIntent.FLAG_NO_CREATE ) ; if ( pendingIntent == null ) return true; LocationServices.GeofencingApi.removeGeofences ( mGoogleApiClient, pendingIntent ) .setResultCallback ( this ) ; return true; } 
public boolean isUserNewRecord ( java.lang.String username, int score ) { try { for ( int record = 0; record < ( this.highscores.size () ) ; record++ ) { CK.FileIO.Highscore.Highscore scoreNow = this.highscores.get ( record ) ; if ( ( scoreNow.getUsername () .equals ( username ) ) && ( ( scoreNow.getScore () ) < score ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void dispose () { super.dispose () ; player.dispose () ; com.xeranas.lkj.util.AudioUtils.cleanUp () ; try { world.dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } backgroundImg.dispose () ; map.dispose () ; tmr.dispose () ; rayHandler.dispose () ; } 
private static boolean pathIsValid ( java.lang.String strPath ) { try { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath, existFile ) .getAbsoluteFile () ; if ( ! ( path.exists () ) ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public boolean onEditorAction ( io.github.mthli.Ninja.Activity.TextView v, int actionId, io.github.mthli.Ninja.Activity.KeyEvent event ) { if ( ( currentAlbumController ) == null ) { return false; } java.lang.String query = inputBox.getText () .toString () .trim () ; if ( query.isEmpty () ) { io.github.mthli.Ninja.Activity.NinjaToast.show ( this, R.string.toast_input_empty ) ; return true; } updateAlbum ( query ) ; try { hideSoftInput ( inputBox ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onClick ( final android.view.View v ) { try { if ( mediaPlayer.isPlaying () ) { mediaPlayer.stop () ; mediaPlayer.reset () ; ( ( android.widget.ImageButton ) ( v ) ) .setImageResource ( R.drawable.ic_track_play ) ; } else { mediaPlayer.start () ; ( ( android.widget.ImageButton ) ( v ) ) .setImageResource ( R.drawable.ic_track_stop ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) throws java.lang.Exception { java.util.Map<java.lang.String, java.lang.String> conf = cs.nuim.ie.worflowHelper.FileHelper.myFileReader ( "veriGT.conf" ) ; cs.nuim.ie.workflowRunner.xpandExec.projName = conf.get ( "projname" ) ; cs.nuim.ie.workflowRunner.xpandExec.dirs = cs.nuim.ie.worflowHelper.FileHelper.myFileCreator ( cs.nuim.ie.workflowRunner.xpandExec.base, cs.nuim.ie.workflowRunner.xpandExec.projName ) ; cs.nuim.ie.workflowRunner.xpandExec.genMetamodels ( cs.nuim.ie.workflowRunner.xpandExec.projName ) ; cs.nuim.ie.workflowRunner.xpandExec.genExecSem ( cs.nuim.ie.workflowRunner.xpandExec.projName ) ; cs.nuim.ie.workflowRunner.xpandExec.genRuntime ( cs.nuim.ie.workflowRunner.xpandExec.projName ) ; try { cs.nuim.ie.workflowRunner.xpandExec.genExternalConfigruation ( cs.nuim.ie.workflowRunner.xpandExec.projName, "_TranslationValidation" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public cn.com.hellowood.rocketmq.util.SendResult sendOneWayMessage ( cn.com.hellowood.rocketmq.util.Message message ) { cn.com.hellowood.rocketmq.util.ProducerHelper.logger.info ( "MQ start send ONE_WAY message " ) ; long startTimestamp = java.lang.System.currentTimeMillis () ; producer.sendOneway ( message ) ; long costTime = ( java.lang.System.currentTimeMillis () ) - startTimestamp; try { cn.com.hellowood.rocketmq.util.ProducerHelper.logger.info ( ( ( "MQ completed send ONE_WAY message in " + costTime ) + " ms" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public boolean doAction ( java.lang.String value ) { char choice = value.toUpperCase () .charAt ( 0 ) ; try { switch ( choice ) { case 'D': this.startDropTNT () ; break; case 'U': this.startUseTNT () ; break; case 'B': return true; default: this.console.println ( "\n*** Invalid selection*** Try again" ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public java.lang.String put ( java.lang.String key, java.lang.String value ) { try { if ( ( size ) == ( ( capacity ) * ( averageListCapacity ) ) ) { resize () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } ru.spbau.mit.java.fall2017.containers.LinkedList l = table[indexByKey ( key ) ]; java.lang.String oldValue = table[indexByKey ( key ) ].add ( key, value ) ; if ( oldValue != null ) { return oldValue; } else { ++ ( size ) ; return null; } } 
private void addFragment () { mAnswerImageFragment = com.kania.set2.ui.AnswerImageFragment.newInstance () ; mNineCardFragment = com.kania.set2.ui.NineCardFragment.newInstance ( NineCardFragment.CARD_TYPE_FILL_AS_PATTERN, true, this ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction () ; fragmentTransaction.add ( R.id.timeattack_container_answer, mAnswerImageFragment ) ; fragmentTransaction.add ( R.id.timeattack_container_ninecard, mNineCardFragment ) ; try { fragmentTransaction.commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.ArrayList<com.nakamagaming.dd5espells.Spell> filterByClass ( java.util.ArrayList<com.nakamagaming.dd5espells.Spell> list, java.util.ArrayList<com.nakamagaming.dd5espells.helpers.ClassType> classTypes ) { java.util.ArrayList<com.nakamagaming.dd5espells.Spell> result = new java.util.ArrayList<> () ; try { for ( com.nakamagaming.dd5espells.Spell spell : list ) { for ( com.nakamagaming.dd5espells.helpers.ClassType classType : spell.getClassTypes () ) { if ( classTypes.contains ( classType ) ) { result.add ( spell ) ; break; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public void testPutDocument () { org.elasticsearch.client.Client client = getClient () ; client.prepareIndex ( index, "doc", "1" ) .setSource ( "foo", "bar" ) .get () ; client.admin () .indices () .prepareRefresh ( index ) .get () ; org.elasticsearch.action.search.SearchResponse searchResponse = client.prepareSearch ( index ) .get () ; try { assertThat ( searchResponse.getHits () .getTotalHits () , org.hamcrest.CoreMatchers.is ( 1L ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void drawCurMarker () { try { if ( ( ( cLatitude ) != 0.0 ) || ( ( cLongitude ) != 0.0 ) ) { com.skp.Tmap.TMapPoint tMapPoint = new com.skp.Tmap.TMapPoint ( cLatitude, cLongitude ) ; com.skp.Tmap.TMapMarkerItem tItem = new com.skp.Tmap.TMapMarkerItem () ; tItem.setTMapPoint ( tMapPoint ) ; com.example.youngseok.myapplication.MainActivity.tMapView.addMarkerItem ( "현재위치", tItem ) ; com.example.youngseok.myapplication.MainActivity.tMapView.setCenterPoint ( cLongitude, cLatitude, false ) ; com.example.youngseok.myapplication.MainActivity.tMapView.setZoomLevel ( 15 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void ShareData ( java.lang.String content, java.lang.String title ) { android.content.Intent i = new android.content.Intent () ; i.setAction ( Intent.ACTION_SEND ) ; i.putExtra ( Intent.EXTRA_TEXT, ( ( title + "\n" ) + content ) ) ; try { i.setType ( "text/plain" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( android.content.Intent.createChooser ( i, "Choose App to Share" ) ) ; } 
@ java.lang.Override protected void listItemClicked ( int position ) { try { if ( position != 0 ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter.getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity.class ) ; intent.putExtra ( Constants.ROUTE_ID_KEY, routeId ) ; intent.putExtra ( Constants.STOP_ID_KEY, stop.getId () ) ; startActivity ( intent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { try { switch ( mPosition ) { case 0: getMenuInflater () .inflate ( R.menu.main, menu ) ; break; case 1: getMenuInflater () .inflate ( R.menu.zone, menu ) ; break; default: getMenuInflater () .inflate ( R.menu.zone, menu ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public java.util.List<io.mapsquare.osmcontributor.model.utils.OpeningHours> fromValue ( java.lang.String value ) { if ( value.trim () .isEmpty () ) { return null; } java.util.List<io.mapsquare.osmcontributor.model.utils.OpeningHours> openingHoursList = new java.util.ArrayList<> () ; java.lang.String[] openingHours = value.split ( io.mapsquare.osmcontributor.ui.adapters.parser.OpeningHoursValueParser.HOURS_SEP ) ; try { for ( java.lang.String o : openingHours ) { if ( ! ( o.trim () .isEmpty () ) ) { fromSingleValue ( o, openingHoursList ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return openingHoursList; } 
static void create ( io.realm.Realm realm, java.lang.String noteText ) { com.odinuts.memo.model.Parent parent = realm.where ( com.odinuts.memo.model.Parent.class ) .findFirst () ; io.realm.RealmList<com.odinuts.memo.model.Note> notes = parent.getNoteList () ; try { realm.beginTransaction () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.odinuts.memo.model.Note note = realm.createObject ( com.odinuts.memo.model.Note.class, com.odinuts.memo.model.Note.increment () ) ; note.setNote ( noteText ) ; notes.add ( note ) ; realm.commitTransaction () ; } 
@ java.lang.Override public java.lang.String[] getAllPropertyNames () { java.util.List<java.lang.String> names = new java.util.ArrayList<java.lang.String> () ; try { for ( com.samdlc.jini.IProperty prop : properties ) { names.add ( prop.getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return names.toArray ( new java.lang.String[0] ) ; } 
public int getTagNameId ( java.lang.CharSequence tagName ) { int id; try { if ( ! ( tagNames.containsKey ( tagName ) ) ) { id = tagNames.size () ; tagNames.put ( tagName, id ) ; } else { id = tagNames.get ( tagName ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return id; } 
@ org.junit.Test public void run8 () throws java.lang.Throwable { java.util.List<java.lang.String> list = new java.util.ArrayList<java.lang.String> () ; list.add ( "Did you try and take us back to our own time? DOCTOR: Well, I got you away from that other time, didn't I? IAN: That isn't what I asked you." ) ; java.util.Collection<java.lang.String> lines = org.swtk.eng.preprocess.functions.CreateSentences.process ( list ) ; try { org.junit.Assert.assertNotNull ( lines ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( 3, lines.size () ) ; } 
public int getNumberOfWorkingDays () { java.util.List<java.lang.String> distinctPeriods = new java.util.ArrayList<> () ; try { for ( com.jpa.entities.Period period : getAllPeriods () ) { if ( ! ( distinctPeriods.contains ( period.getDay () ) ) ) { distinctPeriods.add ( period.getDay () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return distinctPeriods.size () ; } 
public void advanceTime ( double timeElapsed ) throws java.lang.IllegalArgumentException, jumpingalien.model.IllegalPositionException, jumpingalien.model.IllegalTimeException { if ( java.lang.Double.isNaN ( timeElapsed ) ) throw new java.lang.IllegalArgumentException ( "The elapsed time must be a number." ) ; updateCollisionTimers ( getAlien () , timeElapsed ) ; getAlien () .advanceTime ( timeElapsed ) ; centerWindow ( timeElapsed ) ; try { alienObjectCollisionEffects () ; } catch ( Exception ex ) { ex.printStackTrace () ; } geoCollisionEffects ( getAlien () ) ; for ( jumpingalien.model.GameObject gameobject : this.gameobjects ) { updateCollisionTimers ( gameobject, timeElapsed ) ; gameobject.advanceTime ( timeElapsed ) ; geoCollisionEffects ( gameobject ) ; } } 
@ org.junit.Test public void testCreateBeanForPeriod () { java.time.Period sourcePeriod = java.time.Period.of ( 2015, 11, 8 ) ; java.time.Period destinationPeriod = null; when ( periodCreatorMock.create ( sourcePeriod ) ) .thenReturn ( sourcePeriod ) ; java.lang.Object actualPeriod = objectUnderTest.convert ( destinationPeriod, sourcePeriod, java.time.Period.class, java.time.Period.class ) ; try { assertThat ( actualPeriod, org.hamcrest.CoreMatchers.instanceOf ( java.time.Period.class ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( sourcePeriod, actualPeriod ) ; verify ( periodCreatorMock, times ( 1 ) ) .create ( sourcePeriod ) ; } 
@ java.lang.Override public boolean onMarkerClick ( com.google.android.gms.maps.model.Marker marker ) { try { if ( ( LocationUtil.mMarkers.get ( marker ) ) != null ) { mMarkerId = LocationUtil.mMarkers.get ( marker ) ; android.util.Log.i ( "Position of arraylist", ( ( mMarkerId ) + "" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent, float pTouchAreaLocalX, float pTouchAreaLocalY ) { try { if ( pSceneTouchEvent.isActionDown () ) { setTouchAreaBindingOnActionDownEnabled ( false ) ; setTouchAreaBindingOnActionMoveEnabled ( false ) ; gameHud.dispose () ; gameHud.setVisible ( false ) ; detachChild ( gameHud ) ; myGarbageCollection () ; com.matedevs.protectthetown.manager.SceneManager.getInstance () .loadGameScene ( engine, this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { try { super.onRestoreInstanceState ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( savedInstanceState.containsKey ( sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO ) ) { mCurrentPhotoLarge = savedInstanceState.getParcelable ( sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO ) ; android.widget.ImageView im = ( ( android.widget.ImageView ) ( findViewById ( R.id.img_addcar_car ) ) ) ; im.setImageBitmap ( mCurrentPhotoLarge ) ; } } 
public com.jme3.math.Vector3f warp ( com.jme3.math.Vector3f newPos ) { com.jme3.math.Vector3f newPos2d = new com.jme3.math.Vector3f ( newPos.x, position.y, newPos.z ) ; currentCell = navMesh.findClosestCell ( newPos2d ) ; currentPos3d.set ( navMesh.snapPointToCell ( currentCell, newPos2d ) ) ; currentPos3d.setY ( newPos.getY () ) ; try { currentPos.set ( currentPos3d.getX () , currentPos3d.getZ () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return currentPos3d; } 
@ se.sjtu.formfoss.controller.RequestMapping ( path = "/add" ) @se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @se.sjtu.formfoss.controller.RequestParam java.lang.String userName, @se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword, @se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail, @se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser.setUserName ( userName ) ; newUser.setUserPassword ( userPassword ) ; try { newUser.setUserEmail ( userEmail ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( userPhone != null ) { newUser.setUserPhone ( userPhone ) ; } userRepository.save ( newUser ) ; return "{\"message\": \"success\"}"; } 
public entities.Tile remove () { entities.Tile oldTile = this.tile; this.selected = false; try { if ( ( this.jIndex ) == 0 ) { this.tile = new entities.Tile ( 5, 5 ) ; } else { this.tile = parentBoard.getSquare ( iIndex, ( ( jIndex ) - 1 ) ) .remove () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return oldTile; } 
@ java.lang.Override public void run () { try { if ( ( LoginActivity.user_ref ) != null ) { academy_selected = LoginActivity.user_ref.getInstitution () ; fillSpinnerData ( R.id.spinner_faculty, ( ( "Academy/" + ( academy_selected ) ) + "/Faculty" ) , com.example.academyreviewandrating.NavigationFregmentRankAndReview.spinnerEnum.FACULTY ) ; } else { android.widget.Toast.makeText ( getActivity () , "Timeout has accured", Toast.LENGTH_LONG ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addText ( java.awt.Graphics2D g2d, java.lang.String text, int x, int y, java.awt.Color color, int size ) { g2d.setFont ( new java.awt.Font ( "Arial", java.awt.Font.BOLD, size ) ) ; g2d.setColor ( color ) ; try { g2d.drawString ( text, ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void DepthFirstSearch_Visit ( graph.CapGraph theGraph, java.lang.Integer vertex, java.util.HashSet<java.lang.Integer> visited, java.util.Stack<java.lang.Integer> finished ) { visited.add ( vertex ) ; try { for ( java.lang.Integer neighbor : theGraph.getGraph () .get ( vertex ) ) { if ( ! ( visited.contains ( neighbor ) ) ) { graph.DepthFirstSearch.DepthFirstSearch_Visit ( theGraph, neighbor, visited, finished ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } finished.push ( vertex ) ; } 
public boolean outsideBoard ( int boardRows ) { try { for ( tetris.Point loc : tetris.Grids.allPointsOf ( this ) ) { if ( ( ( piece.cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) .row ) >= boardRows ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void put ( java.lang.Class<? extends net.tridentsdk.server.packet.Packet> cls, net.tridentsdk.server.net.NetClient.NetState state, net.tridentsdk.server.packet.Packet.Bound bound, int id ) { int identifier = net.tridentsdk.server.packet.PacketRegistry.shift ( state, bound, id ) ; try { net.tridentsdk.server.packet.PacketRegistry.PACKET_IDS.put ( cls, identifier ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( bound == ( net.tridentsdk.server.packet.Packet.Bound.SERVER ) ) { net.tridentsdk.server.packet.PacketRegistry.PACKETS.put ( identifier, cls ) ; net.tridentsdk.server.packet.PacketRegistry.CTORS.put ( cls, com.esotericsoftware.reflectasm.ConstructorAccess.get ( cls ) ) ; } } 
private double average ( double[] returns, java.util.function.Predicate<java.lang.Integer> filter ) { double sum = 0; int count = 0; try { for ( int ii = 0; ii < ( returns.length ) ; ii++ ) { if ( ! ( filter.test ( ii ) ) ) continue; sum += returns[ii]; count++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return sum / count; } 
@ com.facebook.react.uimanager.annotations.ReactProp ( name = "polylines" ) public void setPolylines ( com.baidu.mapapi.map.MapView mapView, com.facebook.react.bridge.ReadableArray options ) { try { for ( int i = 0; i < ( options.size () ) ; i++ ) { com.facebook.react.bridge.ReadableMap option = options.getMap ( i ) ; org.lovebing.reactnative.baidumap.MarkerUtil.addPolyline ( mapView, option.getString ( "color" ) , option.getInt ( "width" ) , option.getArray ( "points" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onConnected ( final android.bluetooth.BluetoothDevice device ) { mLogger.fine ( ( ( "HeartRateConnectEventListener#onConnected: [" + device ) + "]" ) ) ; org.deviceconnect.android.deviceplugin.heartrate.data.HeartRateDevice hr = findRegisteredHeartRateDeviceByAddress ( device.getAddress () ) ; if ( hr == null ) { hr = registerHeartRateDevice ( device ) ; } else { hr.setConnectFlag ( true ) ; } if ( ! ( mConnectedDevices.contains ( hr ) ) ) { mConnectedDevices.add ( hr ) ; } try { if ( ( mHRDiscoveryListener ) != null ) { mHRDiscoveryListener.onConnected ( device ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void gpsCallback () { try { if ( ( GlobalVariables.ALL_EVENTS_DATA.size () ) > 0 ) { com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data.clear () ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data = getSortedListByDist () ; java.util.List<com.example.FundigoApp.Events.EventInfo> tempFilteredList = com.example.FundigoApp.StaticMethod.FilterMethods.filterByFilterName ( GlobalVariables.CURRENT_FILTER_NAME, GlobalVariables.CURRENT_SUB_FILTER, GlobalVariables.CURRENT_DATE_FILTER, GlobalVariables.CURRENT_PRICE_FILTER, com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data ) ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_filtered.clear () ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_filtered.addAll ( tempFilteredList ) ; eventsGridAdapter.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } turnOnGPS.setVisibility ( View.GONE ) ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onJoin ( net.minecraftforge.fml.common.network.FMLNetworkEvent.ClientConnectedToServerEvent event ) { boolean singleplayer = net.minecraft.client.Minecraft.getMinecraft () .isSingleplayer () ; try { if ( !singleplayer ) { java.lang.String ip = net.minecraft.client.Minecraft.getMinecraft () .getCurrentServerData () .serverIP; if ( ip.contains ( ".hypixel.net" ) ) { QuickPlay.onHypixel = true; java.lang.System.out.println ( "Currently on Hypixel!" ) ; } else { QuickPlay.onHypixel = false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void mergeDelimitedFrom ( com.google.protobuf.Message.Builder builder, java.io.InputStream in ) throws java.io.IOException { final int firstByte = in.read () ; try { if ( firstByte == ( -1 ) ) { } else { final int size = com.google.protobuf.CodedInputStream.readRawVarint32 ( firstByte, in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in, size ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream.newInstance ( limitedInput ) ; codedInput.setSizeLimit ( size ) ; builder.mergeFrom ( codedInput ) ; codedInput.checkLastTagWas ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void save ( java.lang.Object editingObject ) throws java.lang.Exception { org.uengine.modeling.resource.resources.ProcessDefinition definition = ( ( org.uengine.modeling.resource.resources.ProcessDefinition ) ( editingObject ) ) ; try { definition.setName ( getDisplayName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } separateGlobalDefinition ( definition ) ; super.save ( editingObject ) ; definitionFactory.removeFromCache ( getPath () ) ; } 
private void onConnectionChanged ( android.content.Intent intent ) { android.net.NetworkInfo networkInfo = intent.getParcelableExtra ( WifiP2pManager.EXTRA_NETWORK_INFO ) ; try { if ( ( networkInfo.isConnected () ) && ( ! ( isConnected () ) ) ) { android.util.Log.d ( TAG, "No socket open. Trying to connect" ) ; mIsTryingToConnect = true; mManager.requestConnectionInfo ( mChannel, this ) ; } else { this.disconnected () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addRoute ( java.lang.Class<?> target, java.lang.reflect.Method execMethod, java.lang.String url, blade.route.HttpMethod method ) { blade.route.RouteMatcher entry = new blade.route.RouteMatcher () ; entry.target = target; entry.execMethod = execMethod; entry.httpMethod = method; entry.path = url; if ( blade.Blade.debug () ) { blade.route.DefaultRouteMatcher.LOGGER.debug ( ( "Add Route：" + entry ) ) ; } try { routes.add ( entry ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setElements ( java.util.List<?> texts, boolean[] selected ) { int size = ( texts == null ) ? 0 : texts.size () ; try { setElements ( texts.toArray ( new java.lang.String[size] ) , null, selected ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void enqueueDownload () { java.lang.String url = Data.sampleUrls[0]; java.lang.String filePath = ( com.tonyodev.fetchdemo.Data.getSaveDir () ) + "/fragments/smallFile.txt"; com.tonyodev.fetch.request.Request request = new com.tonyodev.fetch.request.Request ( url, filePath ) ; try { downloadId = fetch.enqueue ( request ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( downloadId ) == ( -1 ) ) { android.widget.Toast.makeText ( this, R.string.enqueue_error, Toast.LENGTH_SHORT ) .show () ; } progressFragment1.setDownloadId ( downloadId ) ; progressFragment2.setDownloadId ( downloadId ) ; } 
private int dateByWeekday ( java.lang.String date, java.lang.String weekday ) { boolean nextDate = false; int min; try { do { min = dateToMin ( date, "00:00", nextDate ) ; nextDate = true; while ( ! ( bots.CalendarBot.CalDateFormat.minToWeekday ( min, firstYear ) .equals ( weekday ) ) ) { min++; } } while ( min < ( bots.CalendarBot.CurrentDate.getDateInMin ( firstYear ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return min + ( 8 * 60 ) ; } 
private org.embulk.input.kafka.data.Record getRecord ( byte[] message ) throws org.embulk.input.kafka.exception.DataTypeNotFoundException { org.embulk.input.kafka.data.Record record = null; try { switch ( format ) { case Csv: record = org.embulk.input.kafka.data.DataConverter.convert ( message, ",", enclosedChar ) ; break; case Tsv: record = org.embulk.input.kafka.data.DataConverter.convert ( message, "\t", enclosedChar ) ; break; case Ltsv: record = org.embulk.input.kafka.data.DataConverter.convertFromLtsv ( message, enclosedChar ) ; break; case Json: record = org.embulk.input.kafka.data.DataConverter.convertFromJson ( message ) ; break; case MessagePack: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return record; } 
@ java.lang.Override protected T convertValue ( java.lang.String[] value ) throws org.apache.wicket.util.convert.ConversionException { this.convertValue = true; try { if ( ( value != null ) && ( ( value.length ) > 0 ) ) { this.convertedInput = this.provider.toChoice ( value[0] ) ; return this.convertedInput; } else { this.convertedInput = null; return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void connectSimModel ( final thesis.core.SimModel simModel, final thesis.gui.mainwindow.actions.Actions actions ) { renderWorld = new thesis.core.world.RenderSimState ( simModel ) ; this.addMouseListener ( mouseState ) ; this.addMouseMotionListener ( mouseState ) ; try { renderWorld.setBounds ( 0, 0, getWidth () , getHeight () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( thesis.gui.mainwindow.actions.renderopts.RenderOptAction action : actions.getRenderOptions () ) { action.connectToModel ( renderWorld.getRenderOptions () ) ; } } 
protected java.util.List<java.lang.String> createPackageList ( java.util.List<java.lang.String> pkgs, java.lang.String code, java.lang.String delim ) { java.util.List<java.lang.String> pkg = new java.util.ArrayList<java.lang.String> ( pkgs ) ; try { if ( code != null ) { java.lang.String[] codes = code.split ( delim ) ; for ( java.lang.String c : codes ) { if ( ( c.length () ) > 0 ) { pkg.add ( c ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return pkg; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ! ( flipped ) ) { flipped = true; com.yiyangzhu.yydictionary.Word word = com.yiyangzhu.yydictionary.YoudaoDictionary.get ( show.getText () .toString () ) ; if ( word != null ) { show.setText ( word.toString () ) ; show.setGravity ( Gravity.NO_GRAVITY ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected boolean updateVideoSize ( int width, int height ) { try { matrixManager.setIntrinsicVideoSize ( width, height ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateMatrixOnLayout () ; videoSize.x = width; videoSize.y = height; return ( width != 0 ) && ( height != 0 ) ; } 
public java.lang.Boolean checkActive ( int x ) { try { java.lang.System.out.println ( this.getX () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( this.getX () ) >= ( x - 60 ) ) && ( ( this.getX () ) <= ( x + 120 ) ) ) { setInActive () ; return true; } return false; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int permission = android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.WRITE_EXTERNAL_STORAGE ) ; if ( permission != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat.requestPermissions ( this, com.example.qmma.featuredetection.SplashActivity.PERMISSIONS_STORAGE, com.example.qmma.featuredetection.SplashActivity.REQUEST_EXTERNAL_STORAGE ) ; } else { com.example.qmma.featuredetection.SplashActivity.Loader loader = new com.example.qmma.featuredetection.SplashActivity.Loader () ; loader.execute ( this ) ; } } 
public websays.accounting.CommissionItem createCommissionItem ( websays.accounting.BilledItem bi ) { double fee = websays.core.utils.CurrencyUtils.toEuros ( bi.getFee () , bi.getCurrency () ) ; int monthsFromStartOfContract = ( websays.core.utils.JodaUtils.monthsDifference ( bi.period.contractStart, bi.period.periodEnd ) ) + 1; try { fee = computeCommission ( fee, monthsFromStartOfContract ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new websays.accounting.CommissionItem ( commissionnee, fee, this, bi ) ; } 
public void addMachine ( de.prob2.ui.project.Machine machine ) { java.util.List<de.prob2.ui.project.Machine> machinesList = this.getMachines () ; machinesList.add ( machine ) ; try { this.update ( new de.prob2.ui.project.Project ( this.getName () , this.getDescription () , machinesList, this.getPreferences () , this.getRunconfigurations () , this.getLocation () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void delete ( java.lang.String id ) { try { for ( int i = 0; i < ( arraySize ) ; i++ ) { if ( ( simpleArray.get ( i ) .getId () .equals ( id ) ) && ( ( simpleArray.get ( i ) ) != null ) ) { this.simpleArray.delete ( java.lang.Integer.parseInt ( simpleArray.get ( i ) .getId () ) ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.tut.beans.Utilisateur connecterUtilisateur ( javax.servlet.http.HttpServletRequest request ) { java.lang.String email = getValeurChamp ( request, com.tut.forms.ConnexionForm.CHAMP_IDF ) ; java.lang.String motDePasse = getValeurChamp ( request, com.tut.forms.ConnexionForm.CHAMP_PASS ) ; com.tut.beans.Utilisateur utilisateur = new com.tut.beans.Utilisateur () ; utilisateur = traiterEmail ( email, utilisateur ) ; traiterMotDePasse ( motDePasse, utilisateur ) ; try { if ( erreurs.isEmpty () ) { resultat = "Succès de la connexion."; } else { resultat = "Echec de la connexion"; } } catch ( Exception ex ) { ex.printStackTrace () ; } return utilisateur; } 
@ java.lang.Override public int getTotalProtection () { int totalProtection = getProtection () ; try { if ( ( ( getAnchorPoints () .get ( "body" ) ) != null ) && ( ( getAnchorPoints () .get ( "body" ) .getClass () ) == ( game.Armor.class ) ) ) { game.Armor armor = ( ( game.Armor ) ( getAnchorPoints () .get ( "body" ) ) ) ; totalProtection += armor.getActualProtection () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return totalProtection; } 
@ java.lang.Override public void uploadProgress ( com.lzy.okgo.model.Progress innerProgress ) { if ( rawCall.isCanceled () ) return; try { if ( ( progress.status ) != ( com.lzy.okgo.model.Progress.LOADING ) ) { rawCall.cancel () ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } progress.from ( innerProgress ) ; postLoading ( progress ) ; } 
@ org.junit.Test public void testEquals () throws java.lang.Exception { model.data.CombinedDataTable comb = new model.data.CombinedDataTable ( dataTables.get ( 1 ) , dataTables.get ( 0 ) , dataTables.get ( 2 ) ) ; model.data.CombinedDataTable copy = new model.data.CombinedDataTable ( dataTables.get ( 1 ) , dataTables.get ( 0 ) , dataTables.get ( 2 ) ) ; try { assertTrue ( comb.equals ( copy ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateAdd () { try { for ( de.kuschku.libquassel.message.Message message : unfiltered ) { if ( ( ! ( filterItem ( message ) ) ) && ( ! ( filtered.contains ( message ) ) ) ) { java.lang.String simpleName = getClass () .getSimpleName () ; android.util.Log.e ( simpleName, ( "Unfiltered: " + message ) ) ; filtered.add ( message ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.io.File startCameraVideo () { android.content.Intent intent = new android.content.Intent ( android.provider.MediaStore.ACTION_VIDEO_CAPTURE ) ; android.net.Uri toAdd = org.dvaletin.apps.nabludatel.ABSNabludatelActivity.getOutputMediaFileUri ( Consts.MEDIA_TYPE_VIDEO ) ; videoFileUri.add ( toAdd ) ; intent.putExtra ( MediaStore.EXTRA_OUTPUT, toAdd ) ; try { startActivityForResult ( intent, Consts.CAPTURE_VIDEO_ACTIVITY_REQUEST_CODE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.io.File ( videoFileUri.get ( ( ( videoFileUri.size () ) - 1 ) ) .getPath () ) ; } 
@ org.junit.Test public void shouldReturnNullOnGettingEmptyEventsListToSubscribe () throws java.io.IOException { org.mockito.Mockito.doReturn ( com.google.common.collect.Lists.newArrayList ( repo ) ) .when ( active ) .resolve ( org.mockito.Matchers.any ( com.google.common.base.Predicate.class ) ) ; org.mockito.Mockito.when ( repo.hasAdminAccess () ) .thenReturn ( true ) ; try { org.junit.Assert.assertThat ( "empty events list not allowed to be registered", org.jenkinsci.plugins.github.webhook.WebhookManager.forHookUrl ( org.jenkinsci.plugins.github.webhook.WebhookManagerTest.HOOK_ENDPOINT ) .createHookSubscribedTo ( java.util.Collections.<org.kohsuke.github.GHEvent>emptyList () , null ) .apply ( active ) , org.hamcrest.Matchers.nullValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean isUnique ( final java.lang.String string ) { java.util.Set<java.lang.Character> set = new java.util.HashSet<> () ; try { for ( int i = 0; i < ( string.length () ) ; i++ ) { set.add ( string.charAt ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( set.size () ) == ( string.length () ) ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = com.latmod.modularpipes.data.ModularPipesPlayerData.get ( event.getPlayer () ) ; event.getConfig () .setGroupName ( ModularPipes.MOD_ID, new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; try { event.getConfig () .add ( ModularPipes.MOD_ID, "dev_mode", data.devMode ) .setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.apache.hadoop.hbase.Cell next () throws java.io.IOException { if ( ( type ) == ( MemStoreScanType.UNDEFINED ) ) type = MemStoreScanType.USER_SCAN_FORWARD; assert ( type ) != ( MemStoreScanType.USER_SCAN_BACKWARD ) ; try { for ( org.apache.hadoop.hbase.Cell currentCell = forwardHeap.next () ; currentCell != null; currentCell = forwardHeap.next () ) { if ( ( currentCell.getSequenceId () ) > ( readPoint ) ) continue; if ( ( type ) == ( MemStoreScanType.COMPACT_FORWARD ) ) { } return currentCell; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override protected void onPostExecuteSuccess ( gcum.gcumfisher.connection.Server.GetListResult photos ) { try { if ( photos != null ) { final java.util.List<gcum.gcumfisher.connection.ServerPhoto> list = photos.getPhotos () ; showPhotos ( list ) ; latest = ( list.isEmpty () ) ? null : list.get ( ( ( list.size () ) - 1 ) ) .getId () ; ( ( android.widget.Button ) ( findViewById ( R.id.more ) ) ) .setText ( getResources () .getString ( R.string.more_nb_after, photos.getNbAfter () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read, final java.util.List<org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence> evidenceList ) { final java.util.List<htsjdk.samtools.CigarElement> cigarElements = read.getCigar () .getCigarElements () ; try { if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier.hasInitialSoftClip ( cigarElements, read ) ) { evidenceList.add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read, readMetadata, true ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier.hasFinalSoftClip ( cigarElements, read ) ) { evidenceList.add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read, readMetadata, false ) ) ; } checkBigIndel ( cigarElements, read, evidenceList ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup parent, android.os.Bundle savedInstanceState ) { super.onCreateView ( inflater, mMapView, savedInstanceState ) ; android.view.View v = inflater.inflate ( R.layout.fragment_discover, parent, false ) ; mMapView = ( ( com.google.android.gms.maps.MapView ) ( v.findViewById ( R.id.mapview ) ) ) ; try { mMapView.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mGoogleMap = mMapView.getMap () ; mGoogleMap.getUiSettings () .setMyLocationButtonEnabled ( false ) ; mGoogleMap.setMyLocationEnabled ( true ) ; return v; } 
private void updateCVRUnderAudit ( final int the_index ) { int index = the_index; my_cvr_under_audit = -1; try { while ( index < ( my_submitted_audit_cvrs.size () ) ) { if ( ( my_submitted_audit_cvrs.get ( index ) ) == ( java.lang.Long.MIN_VALUE ) ) { my_cvr_under_audit = index; break; } index = index + 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setup () throws java.lang.Exception { this.method = org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolverTests.class.getDeclaredMethod ( "handle", org.springframework.messaging.Message.class, org.springframework.messaging.Message.class, org.springframework.messaging.Message.class, org.springframework.messaging.Message.class, org.springframework.messaging.support.ErrorMessage.class ) ; try { this.converter = mock ( org.springframework.messaging.converter.MessageConverter.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.resolver = new org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolver ( this.converter ) ; } 
public java.lang.Object remove ( int index ) { try { ensureIndex ( index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Object temp = elementData[index]; java.lang.System.arraycopy ( elementData, ( index + 1 ) , elementData, index, ( ( ( size ) - index ) - 1 ) ) ; elementData[ ( ( size ) - 1 ) ] = null; ( size ) --; return temp; } 
public int getSbOperationRowNum ( java.lang.String operator, java.lang.String opration, int startRow, int endRow, java.util.List<java.util.List<java.lang.String>> data ) { int oprationRowNum = 0; try { for ( int x = startRow; x <= endRow; x++ ) { if ( ( data.get ( x ) .get ( 4 ) .equalsIgnoreCase ( operator ) ) && ( data.get ( x ) .get ( 5 ) .equalsIgnoreCase ( opration ) ) ) { oprationRowNum = x; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return oprationRowNum; } 
public void setDisplayName ( final org.bukkit.entity.Player player ) { final java.lang.String prefix = searchNodes ( player, "prefix" ) ; final java.lang.String suffix = ( searchNodes ( player, "suffix" ) ) + "§f"; player.setDisplayName ( ( ( prefix + ( org.bukkit.ChatColor.stripColor ( player.getName () ) ) ) + suffix ) ) ; try { players.put ( player.getName () , player.getWorld () .getUID () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.awt.image.BufferedImage resizeImage ( java.awt.image.BufferedImage originalImage, com.images3.data.impl.ResizingConfig resizingConfig ) { java.awt.image.BufferedImage resizedImage = null; try { if ( resizingConfig.isKeepProportions () ) { resizedImage = org.imgscalr.Scalr.resize ( originalImage, Scalr.Method.SPEED, Scalr.Mode.AUTOMATIC, resizingConfig.getWidth () , resizingConfig.getHeight () ) ; } else { resizedImage = org.imgscalr.Scalr.resize ( originalImage, Scalr.Method.SPEED, Scalr.Mode.FIT_EXACT, resizingConfig.getWidth () , resizingConfig.getHeight () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return resizedImage; } 
private int getStartSelectItem () { int currentItem = ( java.lang.Integer.MAX_VALUE ) / 2; if ( ( currentItem % ( getRealCount () ) ) == 0 ) { return currentItem; } try { while ( ( currentItem % ( getRealCount () ) ) != 0 ) { currentItem++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return currentItem; } 
@ com.modeliosoft.modelio.javadesigner.annotations.objid ( value = "22963c8e-9140-49f2-beb7-3b2458a06c51" ) private java.util.List<java.lang.Integer> bootstrapAttr ( java.util.List<java.lang.Integer> attr ) { java.util.ArrayList<java.lang.Integer> rand = new java.util.ArrayList<java.lang.Integer> ( attrN ) ; try { for ( int i = 1; i < ( ( attrN ) + 1 ) ; i++ ) { rand.add ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Collections.shuffle ( rand ) ; attr = rand.subList ( 0, attrSampleN ) ; return attr; } 
@ java.lang.Override public void onBackPressed () { try { if ( drawer.isDrawerOpen ( GravityCompat.START ) ) { drawer.closeDrawer ( GravityCompat.START ) ; } else if ( ! ( pageHistory.empty () ) ) { saveToHistory = false; viewPager.setCurrentItem ( pageHistory.pop () .intValue () ) ; saveToHistory = true; } else { super.onBackPressed () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void init ( com.chariotsolutions.nfc.plugin.CallbackContext callbackContext ) { android.util.Log.d ( com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, ( "Enabling plugin " + ( getIntent () ) ) ) ; try { startNfc () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( inReaderMode ) { if ( ( savedTag ) != null ) { handleTag () ; } } else if ( ! ( recycledIntent () ) ) { parseMessage () ; } callbackContext.success () ; } 
public void switchTurn () { turn = ( ( turn ) + 1 ) % ( getNumberOfPlayers () ) ; try { if ( getCurrentPlayer () .isInJail () ) { gui.setGetOutOfJailEnabled ( true ) ; } else { gui.setGetOutOfJailEnabled ( false ) ; gui.setBuyHouseEnabled ( getCurrentPlayer () .canBuyHouse () ) ; gui.setTradeEnabled ( turn, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } gui.enablePlayerTurn ( turn ) ; } 
public void updateFixedPrincipalAmount ( final java.math.MathContext mc, final int periodNumber, final org.apache.fineract.organisation.monetary.domain.Money outstandingAmount ) { final java.lang.Integer numberOfPrincipalPaymentPeriods = org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms.calculateNumberOfRemainingPrincipalPaymentPeriods ( this.actualNumberOfRepayments, this.getRecurringMoratoriumOnPrincipalPeriods () , this.getPrincipalGrace () , ( periodNumber - 1 ) ) ; org.apache.fineract.organisation.monetary.domain.Money principal = outstandingAmount.dividedBy ( ( ( numberOfPrincipalPaymentPeriods - periodNumber ) + 1 ) , mc.getRoundingMode () ) ; try { this.fixedPrincipalAmount = principal.getAmount () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addSelectButton ( javax.swing.JPanel panel ) { java.awt.GridBagConstraints c = ip.setGrids ( 2, 0 ) ; try { selectButton = ip.createButton ( "SELECT", context.healthinformatics.GUI.InputPageComponents.DIMESIONWIDTH, context.healthinformatics.GUI.InputPageComponents.DIMESIONHEIGHT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } selectButton.addActionListener ( this ) ; c.insets = new java.awt.Insets ( context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS, context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS, context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS, context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS ) ; panel.add ( selectButton, c ) ; } 
public void setUnit ( unitCalc.Unit unit ) { this.value = this.value.multiply ( unit.baseRelation ) ; this.measure = unit.measure; this.siBase = new int[7]; try { java.lang.System.arraycopy ( unit.measure.siBase, 0, this.siBase, 0, 7 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( this.isConstant ) { this.id = "var"; this.name = null; } } 
private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper, int spriteCount, int index ) { try { for ( int i = 0; i < spriteCount; i++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) .type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder.prepareTiledUV ( mapper, attributeData, ( index + i ) ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) .type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) { } else { throw new java.lang.IllegalArgumentException () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void save () { int bugTrackerCount = bugTrackers.length; try { for ( int i = 0; i < bugTrackerCount; i++ ) { if ( bugTrackers[i].equals ( "github" ) ) { githubIssue.raise ( this ) ; } else if ( bugTrackers[i].equals ( "bugzilla" ) ) { } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void executeEventCommands ( com.github.nthportal.uhc.core.Context context, java.lang.String event, java.util.List<java.util.function.Function<java.lang.String, java.lang.String>> replaceFunctions ) { lombok.val commands = context.plugin () .getConfig () .getStringList ( event ) ; try { for ( java.lang.String command : commands ) { if ( command.startsWith ( "/" ) ) { command = command.substring ( 1 ) ; } for ( lombok.val function : replaceFunctions ) { command = function.apply ( command ) ; } com.github.nthportal.uhc.util.CommandUtil.executeCommand ( context, command ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) { return true; } try { if ( ( o == null ) || ( ( getClass () ) != ( o.getClass () ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } io.druid.java.util.common.granularity.PeriodSegmentGranularity that = ( ( io.druid.java.util.common.granularity.PeriodSegmentGranularity ) ( o ) ) ; return periodGranularity.equals ( that.periodGranularity ) ; } 
public void toggleComplete ( int id ) { try { if ( id != 0 ) { com.anoopkini.dotodo.web.models.TaskObject newTask = taskObjectDao.getTaskById ( id ) ; if ( newTask != null ) { if ( newTask.isComplete () ) { newTask.setComplete ( false ) ; newTask.setCompletedTS ( null ) ; } else { newTask.setComplete ( true ) ; newTask.setCompletedTS ( new java.util.Date () ) ; } newTask.setModifiedTS ( new java.util.Date () ) ; taskObjectDao.update ( newTask ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean inferBound ( wyopcl.translator.bound.Bounds bnd ) { bnd.isChanged = false; max_x = bnd.getUpper ( x ) ; min_x = bnd.getLower ( x ) ; max_y = bnd.getUpper ( y ) ; min_y = bnd.getLower ( y ) ; if ( ( min_x ) != ( min_y ) ) { bnd.isChanged |= bnd.setLowerBound ( x, min_y ) ; } try { if ( ( max_x ) != ( max_y ) ) { bnd.isChanged |= bnd.setUpperBound ( x, max_y ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return bnd.isChanged; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( ! ( mInteractivePlayerView.isPlaying () ) ) { mInteractivePlayerView.start () ; fab.setImageResource ( R.drawable.ic_action_pause ) ; } else { mInteractivePlayerView.stop () ; fab.setImageResource ( R.drawable.ic_action_play ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( this.equals ( other ) ) return true; try { if ( ( this.checkIn.isBefore ( other.getCheckOutDate () ) ) && ( this.checkOut.isBefore ( other.getCheckInDate () ) ) ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public static java.util.ArrayList<java.lang.String> eightDirections () { java.util.ArrayList<java.lang.String> directions = new java.util.ArrayList<java.lang.String> () ; directions.add ( "N" ) ; directions.add ( "NE" ) ; directions.add ( "E" ) ; directions.add ( "SE" ) ; directions.add ( "S" ) ; try { directions.add ( "SW" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } directions.add ( "W" ) ; directions.add ( "NW" ) ; return directions; } 
@ java.lang.Override public void onStart () { super.onStart () ; try { menuButtons.collapse () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.SharedPreferences settings = getActivity () .getSharedPreferences ( getString ( R.string.PREFERENCE_FILE_KEY ) , 0 ) ; isToSum = settings.getBoolean ( "isToSum", false ) ; updateFieldActivity () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.util.Log.d ( "click listener", "working!" ) ; int itemPosition = getLayoutPosition () ; android.content.Intent intent = new android.content.Intent ( mContext, com.epicodus.a4u2poo.DetailActivity.class ) ; try { intent.putExtra ( "position", itemPosition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } intent.putExtra ( "restrooms", org.parceler.Parcels.wrap ( mRestrooms ) ) ; mContext.startActivity ( intent ) ; } 
protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap<K, V>.TreeNode node ) { int leftDepth = 0; int rightDepth = 0; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } try { if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 1 + ( java.lang.Math.max ( leftDepth, rightDepth ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { calculation () ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentAction = v.getContentDescription () .toString () ; expressionField.setText ( ( ( decimalFormat.format ( valueOne ) ) + ( currentAction ) ) ) ; resultField.setText ( null ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { android.content.Intent myIntent = new android.content.Intent ( ctx, com.historicar.app.activity.ResultActivity.class ) ; myIntent.putExtra ( Constants.PLACA_KEY, carros.get ( position ) .getPlaca () .replaceAll ( " - ", "" ) ) ; try { startActivity ( myIntent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int getSpanSize ( int position ) { try { if ( ( ( isHeader ( position ) ) || ( isFooter ( position ) ) ) || ( isLoadMore ( position ) ) ) { return gridLayoutManager.getSpanCount () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( spanSizeLookup != null ) { return spanSizeLookup.getSpanSize ( position ) ; } return 1; } 
@ java.lang.Override protected void execClickAction () { org.eclipse.scout.demo.wrappedform.client.ui.forms.AbstractDetachableForm form = createFormCopy () ; form.setDetached ( true ) ; form.setDisplayParent ( org.eclipse.scout.demo.wrappedform.client.ClientSession.get () .getDesktop () ) ; form.setDisplayHint ( IForm.DISPLAY_HINT_POPUP_WINDOW ) ; form.setAskIfNeedSave ( false ) ; try { form.startPageForm () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onFinishInflate () { super.onFinishInflate () ; try { mFrame = new android.widget.FrameLayout ( getContext () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mFrame.setLayoutParams ( new android.view.ViewGroup.LayoutParams ( ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT ) ) ; for ( int i = 0; i < ( getChildCount () ) ; ++i ) { android.view.View child = getChildAt ( i ) ; removeView ( child ) ; mFrame.addView ( child ) ; } addView ( mFrame ) ; } 
@ org.junit.Test public void shouldRegisterIndexes_withIndexDefinitions () throws java.lang.Exception { final java.util.Collection<com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.IndexDefinition> indexDefinitions = java.util.Arrays.asList ( new com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.IndexDefinition ( "stringProperty", IndexFieldType.LITERAL ) ) ; final java.lang.String namespace = com.clicktravel.common.random.Randoms.randomString ( 10 ) ; final java.lang.Class<? extends com.clicktravel.cheddar.infrastructure.persistence.document.search.Document> documentClass = com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.StubDocument.class; final com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.DocumentConfiguration documentConfiguration = new com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.DocumentConfiguration ( documentClass, namespace ) ; try { documentConfiguration.registerIndexes ( indexDefinitions ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( new java.util.ArrayList ( indexDefinitions ) , new java.util.ArrayList ( documentConfiguration.indexDefinitions () ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { com.stemmeter.stem_meter.SensorConfig config = new com.stemmeter.stem_meter.SensorConfig ( ( finalPosition + 1 ) ) ; try { config.setFreq ( sensorFragInterface.getSensorConfig ( ( finalPosition + 1 ) ) .getFreq () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( sdCheck.isChecked () ) { sdCheck.setChecked ( false ) ; config.setSDLogging ( false ) ; } else { sdCheck.setChecked ( true ) ; config.setSDLogging ( true ) ; } sensorFragInterface.sensorConfigWrite ( config ) ; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { db.execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.routes.createTable () ) ; db.execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.goals.createTable () ) ; db.execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.notes.createTable () ) ; db.execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.locations.createTable () ) ; try { db.execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.settings.createTable () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean isOn () { boolean bRet = false; try { if ( ! ( this.getStatus () .equals ( "" ) ) ) { if ( ( this.getMatchRegexOn () ) == 1 ) { bRet = this.getStatus () .equals ( this.getRegexStatus () ) ; } else { bRet = ! ( this.getStatus () .equals ( this.getRegexStatus () ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return bRet; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { boolean retval = true; try { switch ( item.getItemId () ) { case android.R.id.home: onBackPressed () ; break; case R.id.change_password: changeAccountPassword ( account ) ; break; case R.id.delete_account: openAccountRemovalConfirmationDialog ( account ) ; break; default: retval = super.onOptionsItemSelected ( item ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return retval; } 
private boolean calcInitTime () { boolean valid = calcTimeMoved () ; try { if ( valid ) { if ( ! ( java.lang.Double.isNaN ( finalTime ) ) ) initTime = ( finalTime ) - ( timeMoved ) ; else initTime = 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( java.lang.Double.isNaN ( initTime ) ) ) { return true; } return valid; } 
@ java.lang.Override public boolean accept ( ccl.v2_1.cat.CclCodeBlock infos ) { if ( ( infos.getKeyword () ) == null ) return false; try { if ( csy.block.FunctionBlockSystem.DEF_PATTERN.matcher ( infos.getKeyword () ) .matches () ) { ( csy.block.FunctionBlockSystem.count ) ++; this.name = extractName ( infos.getKeyword () ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void douAALUnregistering () { org.universAAL.hw.exporter.zigbee.ha.devices.listeners.OnOffLightListener.log.debug ( "Removing all instances of these devices in uAAL" ) ; java.util.Iterator iter = onOffLigthDevices.keySet () .iterator () ; try { for ( ; iter.hasNext () ; ) { org.osgi.framework.ServiceReference sref = ( ( org.osgi.framework.ServiceReference ) ( iter.next () ) ) ; ( ( org.universAAL.hw.exporter.zigbee.ha.devices.OnOffLightCallee ) ( onOffLigthDevices.get ( sref ) ) ) .unregister () ; iter.remove () ; context.ungetService ( sref ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } onOffLigthDevices.clear () ; } 
public mcjty.lib.tools.ItemStackList getCraftableItems () { mcjty.lib.tools.ItemStackList items = mcjty.lib.tools.ItemStackList.create () ; try { for ( net.minecraft.util.math.BlockPos p : processorList ) { net.minecraft.tileentity.TileEntity te = getWorld () .getTileEntity ( p ) ; if ( te instanceof mcjty.rftoolscontrol.blocks.processor.ProcessorTileEntity ) { mcjty.rftoolscontrol.blocks.processor.ProcessorTileEntity processor = ( ( mcjty.rftoolscontrol.blocks.processor.ProcessorTileEntity ) ( te ) ) ; processor.getCraftableItems ( items ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return items; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { outState.putShort ( slapshotapp.game.tictactoe.SetUpGame.GAME_BOARD_DIMENSION_KEY, _GameBoardDimensions ) ; outState.putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_ONE_NAME_KEY, _PlayerOne.GetName () ) ; outState.putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_ONE_ICON_KEY, _PlayerOne.GetSymbolValue () ) ; outState.putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_TWO_NAME_KEY, _PlayerTwo.GetName () ) ; try { outState.putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_TWO_ICON_KEY, _PlayerTwo.GetSymbolValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onSaveInstanceState ( outState ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( mContext, io.geeteshk.hyper.activity.ProjectActivity.class ) ; intent.putExtra ( "project", mObjects.get ( newPos ) ) ; try { intent.addFlags ( Intent.FLAG_ACTIVITY_MULTIPLE_TASK ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( Build.VERSION.SDK_INT ) >= 21 ) { intent.addFlags ( Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ; } ( ( android.support.v7.app.AppCompatActivity ) ( mContext ) ) .startActivityForResult ( intent, 0 ) ; } 
@ java.lang.Override @javax.jws.WebMethod ( exclude = true ) public void setState ( java.net.URI nodeInstanceID, javax.xml.namespace.QName state ) throws org.opentosca.instancedata.service.ReferenceNotFoundException { java.util.List<org.opentosca.model.instancedata.NodeInstance> nodeInstances = this.niDAO.getNodeInstances ( null, null, null, nodeInstanceID ) ; try { if ( ( nodeInstances == null ) || ( ( nodeInstances.size () ) != 1 ) ) { java.lang.String msg = java.lang.String.format ( "Failed to set State of NodeInstance: '%s' - does it exist?", nodeInstanceID ) ; org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.LOG.warn ( msg ) ; throw new org.opentosca.instancedata.service.ReferenceNotFoundException ( msg ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.niDAO.setState ( nodeInstances.get ( 0 ) , state ) ; } 
public static org.sbolstandard.core2.SBOLDocument read ( java.io.BufferedInputStream in ) throws java.io.IOException, org.sbolstandard.core2.SBOLValidationException { org.sbolstandard.core2.SBOLDocument doc = new org.sbolstandard.core2.SBOLDocument () ; try { doc.setCreateDefaults ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( org.sbolstandard.core2.GenBank.URIPrefix ) != null ) { throw new org.sbolstandard.core2.SBOLValidationException ( "No URI prefix has been provided." ) ; } doc.setDefaultURIprefix ( org.sbolstandard.core2.GenBank.URIPrefix ) ; org.sbolstandard.core2.GenBank.read ( doc, in ) ; return doc; } 
public void onConnectionStateChange ( android.bluetooth.BluetoothGatt gatt, int status, int newState ) { java.lang.String intentAction; try { java.lang.System.out.println ( status ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( newState == ( android.bluetooth.BluetoothProfile.STATE_CONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_CONNECTED; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_CONNECTED; broadcastUpdate ( intentAction ) ; mBluetoothGatt.discoverServices () ; } else if ( newState == ( android.bluetooth.BluetoothProfile.STATE_DISCONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_DISCONNECTED; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_DISCONNECTED; broadcastUpdate ( intentAction ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_home ) ; try { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } homePresenter = new com.srijan.motosports.features.home.HomePresenter ( this ) ; setSupportActionBar ( toolbar ) ; setUpNavigationDrawer () ; setFragment ( new com.srijan.motosports.features.home.fragment.HomeFragment () ) ; getSupportActionBar () .setTitle ( "Srijan Motosports" ) ; } 
public static com.github.vincent_fuchs.comprehensive_testing.model.Risk getEnum ( java.lang.String risk ) { com.github.vincent_fuchs.comprehensive_testing.model.Risk[] values = com.github.vincent_fuchs.comprehensive_testing.model.Risk.values () ; try { for ( com.github.vincent_fuchs.comprehensive_testing.model.Risk value : values ) { if ( risk.equals ( value.toString () ) ) { return value; } } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new java.lang.UnsupportedOperationException ( ( "Could not find Risk enum for " + risk ) ) ; } 
public static void main ( java.lang.String[] args ) throws java.net.UnknownHostException { for ( int i = 0; i < 10; i++ ) { java.lang.System.out.println ( ( "Free port: " + ( voip.NetUtils.findFreePort () ) ) ) ; } java.net.InetAddress address = java.net.InetAddress.getByName ( "192.168.1.1" ) ; java.lang.System.out.println ( address.toString () ) ; java.lang.System.out.println ( voip.NetUtils.getIpByInetAddress ( address ) ) ; try { java.lang.System.out.println ( voip.NetUtils.getLocalIpAddress () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void givenVideoInputWithSubtitlesWhenScanningShouldReturnVideoWithSubtitles () throws java.lang.Exception { try { for ( net.cserny.videosMover.model.Video video : videosScanned ) { if ( video.getInput () .toString () .contains ( service.DOWNLOADS_MOVIE_WITH_SUBTITLE ) ) { java.util.List<java.nio.file.Path> subtitles = video.getSubtitles () ; assertNotNull ( subtitles ) ; assertFalse ( subtitles.isEmpty () ) ; assertEquals ( 1, subtitles.size () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onErrorResponse ( com.android.volley.VolleyError error ) { java.util.HashMap<java.lang.String, java.lang.String> errorProperties = new java.util.HashMap<> () ; errorProperties.put ( org.wordpress.android.ui.accounts.login.MagicLinkRequestFragment.ERROR_KEY, error.getMessage () ) ; try { org.wordpress.android.analytics.AnalyticsTracker.track ( AnalyticsTracker.Stat.LOGIN_MAGIC_LINK_FAILED, errorProperties ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getView () ) != null ) { android.support.design.widget.Snackbar.make ( getView () , R.string.magic_link_unavailable_error_message, Snackbar.LENGTH_SHORT ) ; } if ( ( mListener ) != null ) { mListener.onEnterPasswordRequested () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { v.setActivated ( ( ! ( v.isActivated () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent intent = new android.content.Intent ( getActivity () , org.akvo.akvoqr.CameraActivity.class ) ; intent.putExtra ( Constant.BRAND, brand ) ; startActivity ( intent ) ; } 
public int NumSubMbPart ( java.lang.String type ) { try { if ( type.equals ( "P_L0_8x8" ) ) { return 1; } else if ( type.equals ( "P_L0_8x4" ) ) { return 2; } else if ( type.equals ( "P_L0_4x8" ) ) { return 2; } else if ( type.equals ( "P_L0_4x4" ) ) { return 4; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( BuildConfig.DEBUG ) com.facebook.stetho.Stetho.initializeWithDefaults ( this ) ; android.os.StrictMode.setThreadPolicy ( new android.os.StrictMode.ThreadPolicy.Builder () .detectDiskReads () .detectDiskWrites () .detectNetwork () .penaltyLog () .penaltyDialog () .build () ) ; android.os.StrictMode.setVmPolicy ( new android.os.StrictMode.VmPolicy.Builder () .detectLeakedSqlLiteObjects () .detectLeakedClosableObjects () .penaltyLog () .build () ) ; } 
private boolean urlInHashSet ( java.net.URL url, java.util.HashSet<java.lang.String> set ) { boolean returnBoolean = false; try { for ( java.lang.String setItem : set ) { if ( com.wordpress.httpspandareaktor.scrapetest.NetworkUtils.urlHostPathMatch ( com.wordpress.httpspandareaktor.scrapetest.NetworkUtils.makeURL ( setItem ) , url ) ) { returnBoolean = true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return returnBoolean; } 
@ org.junit.Test @org.springframework.security.test.context.support.WithMockUser ( username = "servicetester", roles = { "SERVICE" } ) public void testAddInvoice_shouldAddInvoice () throws com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException, com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException, com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = new com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice () ; invoice.setTime ( java.time.LocalDateTime.now () ) ; invoice.setGross ( new java.math.BigDecimal ( "15.6" ) ) ; try { invoice.setCreator ( creator1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } invoiceService.addInvoice ( invoice ) ; verify ( invoiceDAO ) .create ( invoice ) ; } 
@ org.junit.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException.class ) @org.springframework.security.test.context.support.WithMockUser ( username = "servicetester", roles = { "SERVICE" } ) public void testAddInvoice_shouldFailWithNullGrossAmount () throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException, com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = new com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice () ; invoice.setTime ( java.time.LocalDateTime.now () ) ; invoice.setCreator ( creator1 ) ; doThrow ( new com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException ( "" ) ) .when ( invoiceValidator ) .validateForCreate ( invoice ) ; try { invoiceService.addInvoice ( invoice ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onAttachedToWindow () { try { super.onAttachedToWindow () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Context context = getContext () ; android.widget.FrameLayout headViewLayout = new android.widget.FrameLayout ( context ) ; com.cjj.LayoutParams layoutParams = new com.cjj.LayoutParams ( ViewGroup.LayoutParams.MATCH_PARENT, 0 ) ; layoutParams.gravity = android.view.Gravity.TOP; headViewLayout.setLayoutParams ( layoutParams ) ; mHeadLayout = headViewLayout; this.addView ( mHeadLayout ) ; mChildView = getChildAt ( 0 ) ; } 
@ java.lang.Override public java.util.ArrayList<Tuple.Tuple> writeToFile () { Tuple.Tuple a = getNextTuple () ; java.util.ArrayList<Tuple.Tuple> result = new java.util.ArrayList<Tuple.Tuple> () ; try { while ( a != null ) { result.add ( a ) ; a = getNextTuple () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void simpleInitApp () { setPauseOnLostFocus ( false ) ; this.gamePlayers = new java.util.ArrayList () ; this.gamePlayerCharacters = new java.util.ArrayList () ; this.player = null; this.pac = null; createSkybg () ; initLightandShadow () ; initMaterial () ; initKeys () ; initGui () ; try { initNifty () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mazeCreated = false; clientMaze = new client.Maze ( 40, 30, false ) ; connect () ; } 
protected void readGraphicsFromLibrary ( int templateID, double xCoor, double yCoor ) { if ( ( com.nkoiv.mists.game.Mists.structureLibrary ) != null ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary.create ( templateID ) ; if ( dummy == null ) return; this.graphics = dummy.graphics; this.extraSprites = dummy.extraSprites; } else this.graphics = new com.nkoiv.mists.game.sprites.Sprite () ; try { this.setPosition ( xCoor, yCoor ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static int findLeftPivot ( int[] array, int k ) { try { if ( k == ( -1 ) ) return -1; else if ( ( array.length ) > 0 ) { if ( k == 0 ) return -1; else { int i = project2.NonInitiator.randRange ( 0, k ) ; return array[i]; } } else return -1; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getSubCommandDescriptions ( net.minecraft.command.ICommandSender sender ) { final java.lang.StringBuilder builder = new java.lang.StringBuilder () ; try { for ( final net.minecraft.command.ICommand command : this.getSubCommands () ) { builder.append ( ( "\n" + ( command.getUsage ( sender ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return builder.toString () ; } 
@ java.lang.Override public void run () { try { while ( true ) { if ( ( application.Controller.getInstance ( 0 ) .mutexLock ) == ( !true ) ) { application.Controller.getInstance ( 0 ) .mutexLock = true; application.Controller.getInstance ( 0 ) .decode () ; application.Controller.getInstance ( 0 ) .mutexLock = false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( ( selectedDevelopment ) != null ) && ( ! ( selectedDevelopment.isEmpty () ) ) ) { mSharedPrefEditor.putString ( Constants.KEY_HOUSING_DEVELOPMENT, selectedDevelopment ) .apply () ; android.content.Intent intent = new android.content.Intent ( this, com.nychareport.backlog.activities.HomePageActivity.class ) ; startActivity ( intent ) ; finish () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testIsGCEResultValid () throws java.lang.InterruptedException { latch = new java.util.concurrent.CountDownLatch ( com.elorri.android.builditbigger.ApplicationTest.COUNT_LATCH ) ; com.elorri.android.builditbigger.GCEndpointsApiService task = new com.elorri.android.builditbigger.GCEndpointsApiService ( null ) ; task.execute ( getContext () ) ; task.setListener ( new com.elorri.android.builditbigger.GCEndpointsApiService.GCEndpointsApiServiceListener () { @java.lang.Override public void onCompleted ( java.lang.String joke ) { result = joke; latch.countDown () ; } } ) ; latch.await () ; try { assertNotNull ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( "This is a joke from a Java Library", result ) ; } 
@ java.lang.Override public java.util.List<org.opennms.web.enlinkd.LldpLinkNode> getLldpLinks ( int nodeId ) { java.util.List<org.opennms.web.enlinkd.LldpLinkNode> nodelinks = new java.util.ArrayList<org.opennms.web.enlinkd.LldpLinkNode> () ; try { for ( org.opennms.netmgt.model.LldpLink link : m_lldpLinkDao.findByNodeId ( java.lang.Integer.valueOf ( nodeId ) ) ) { nodelinks.add ( convertFromModel ( nodeId, link ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return nodelinks; } 
public static int updateWhitelist () { java.util.HashMap<java.lang.String, java.util.Set<java.lang.String>> cachedWhitelist = net.quetzi.whitelister.Whitelister.whitelist; int successCount = 0; net.quetzi.whitelister.Whitelister.whitelist = new java.util.HashMap<java.lang.String, java.util.Set<java.lang.String>> () ; try { for ( java.lang.String url : net.quetzi.whitelister.Whitelister.urlList ) { if ( net.quetzi.whitelister.util.WhitelistFetcher.getRemoteWhitelist ( url ) ) { successCount++; } else { Whitelister.log.warn ( ( ( "Failed to fetch whitelist from " + url ) + " using cached list for this source" ) ) ; Whitelister.whitelist.put ( url, cachedWhitelist.get ( url ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return successCount; } 
public int getPlayerRank () { int rank = -1; int count = 0; try { for ( int i = 0; i < ( Game.HI_SCORES.size () ) ; i++ ) { if ( ( player.getScore () ) >= ( Game.HI_SCORES.get ( i ) .getScore () ) ) rank = ( Game.HI_SCORES.size () ) - ( ++count ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return rank; } 
private java.lang.String editCmd ( java.lang.String s ) { try { if ( s.contains ( "CMD" ) ) { java.lang.String c = s.replaceAll ( ".*?CMD ", "" ) .replaceAll ( "\\[", "" ) .replaceAll ( "\\]", "" ) .replaceAll ( "\"", "" ) ; return c; } else return null; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addUser ( final java.lang.String iName, java.lang.String iPassword, final java.lang.String iPermissions ) throws java.io.IOException { if ( iPassword == null ) iPassword = com.orientechnologies.orient.core.security.OSecurityManager.instance () .digest2String ( java.lang.String.valueOf ( random.nextLong () ) , false ) ; try { iPassword = com.orientechnologies.orient.core.security.OSecurityManager.instance () .digest2String ( iPassword, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } serverCfg.setUser ( iName, iPassword, iPermissions ) ; serverCfg.saveConfiguration () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { final boolean star = ! ( bundle.getBoolean ( Constants.STAR ) ) ; final int starDrawable = ( star ) ? R.drawable.ic_star_selected : R.drawable.ic_star_unselected; starView.setImageDrawable ( android.support.v4.content.ContextCompat.getDrawable ( getActivity () .getApplicationContext () , starDrawable ) ) ; bundle.putBoolean ( Constants.STAR, star ) ; android.util.Log.d ( "id", java.lang.String.valueOf ( id ) ) ; try { onCreateView ( inflater, container, savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.util.List<java.lang.String> validateNoIntersectingInterval ( com.jraska.vsb.or1.data.Output output ) { java.util.List<com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper>[] machineIntervals = getIntervalsForMachines ( output ) ; java.util.List<java.lang.String> validationErrors = new java.util.ArrayList<java.lang.String> () ; try { for ( int machineIndex = 0; machineIndex < ( output.getMachinesCount () ) ; machineIndex++ ) { java.util.List<com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper> intervals = machineIntervals[machineIndex]; validationErrors.addAll ( checkForIntersectionErrors ( intervals ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return validationErrors; } 
public Protocol.Log toProtocol () { retroscope.net.protocol.Protocol.Log.Builder builder = super.toProtocol () .toBuilder () ; try { if ( ( head ) != null ) { builder.setDataMap ( retroscope.net.protocol.ProtocolHelpers.retroMapToProtocol ( dataMap, this.name, head.getTime () .toLong () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return builder.build () ; } 
private void incrementScore () { ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ++; highScoreTV.setText ( java.lang.String.valueOf ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ) ; try { if ( ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) > ( com.syzible.irishnoungenders.utils.LocalStorage.getHighScore ( getActivity () ) ) ) { com.syzible.irishnoungenders.utils.LocalStorage.setHighScore ( getActivity () , com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ; if ( ! ( hasAnimatedNewHighScore ) ) { hasAnimatedNewHighScore = true; com.syzible.irishnoungenders.utils.PulseAnimation.animateView ( highScoreTV ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void createTransactionWindow () { transactionStage = new javafx.stage.Stage () ; isTransactionWindowActive = true; javafx.scene.layout.BorderPane borderRoot = new javafx.scene.layout.BorderPane () ; borderRoot.setTop ( transactionsMenuBar () ) ; updateTransactionLabel () ; borderRoot.setCenter ( transactionLabel ) ; transactionStage.setTitle ( "Transactions" ) ; transactionStage.setScene ( new javafx.scene.Scene ( borderRoot, 450, 450 ) ) ; transactionStage.setX ( 100 ) ; try { transactionStage.setY ( 50 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } transactionStage.show () ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { java.lang.String point = cmdAnimator.Prompts.promptUserForPoint () ; try { cmdAnimator.GUI.getInstance () .buttonExecuteCalled = true; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( point != null ) && ( point.equalsIgnoreCase ( "background" ) ) ) { cmdAnimator.GuiCommands.executeBackgroundImageAdditionCommand ( cmdAnimator.GUI.getInstance () , canvasImage.getImageFilename () ) ; } else cmdAnimator.GuiCommands.executeImageAdditionCommand ( cmdAnimator.GUI.getInstance () , canvasImage.getImageFilename () , point ) ; } 
private void removeInteractorLink ( org.reactome.web.diagram.client.InteractorLink link ) { org.reactome.web.diagram.data.InteractorsContent interactors = context.getInteractors () ; if ( link instanceof org.reactome.web.diagram.client.DynamicLink ) { org.reactome.web.diagram.client.DynamicLink aux = ( ( org.reactome.web.diagram.client.DynamicLink ) ( link ) ) ; org.reactome.web.diagram.client.InteractorEntity entity = aux.getInteractorEntity () ; entity.removeLink ( aux ) ; if ( entity.getLinks () .isEmpty () ) interactors.removeFromView ( currentResource, entity ) ; } interactors.removeInteractorLink ( currentResource, link ) ; try { interactors.removeFromView ( currentResource, link ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.util.Calendar date = java.util.Calendar.getInstance () ; try { date.setTime ( mDate ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.app.DatePickerDialog dialog = new android.app.DatePickerDialog ( this, mDateListener, date.get ( java.util.Calendar.YEAR ) , date.get ( java.util.Calendar.MONTH ) , date.get ( java.util.Calendar.DAY_OF_MONTH ) ) ; dialog.show () ; } 
@ java.lang.Override @javax.transaction.Transactional public edu.hs.bremen.model.dto.OrderDto deleteBasketEntry ( java.lang.String userUuid, edu.hs.bremen.model.dto.BasketEntryDto basketEntryDto ) { final edu.hs.bremen.model.UserEntity userEntity = userManager.getUser ( userUuid ) ; final edu.hs.bremen.model.BasketEntryEntity basketEntryEntity = basketManager.getUpdatedBasketEntry ( userEntity, basketEntryDto, java.lang.Boolean.TRUE ) ; try { if ( ( basketEntryEntity.getProductCount () ) <= 0 ) { basketManager.deleteBasketEntryFromOrder ( userEntity, basketEntryEntity ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return edu.hs.bremen.model.dto.OrderDto.fromOrder ( orderManager.getOrder ( userEntity ) ) ; } 
private void show () { currentTime.setVisibility ( View.VISIBLE ) ; finalTime.setVisibility ( View.VISIBLE ) ; try { pause.setVisibility ( View.VISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } seekBar.setVisibility ( View.VISIBLE ) ; title.setVisibility ( View.VISIBLE ) ; note.setVisibility ( View.VISIBLE ) ; add.setVisibility ( View.VISIBLE ) ; edit.setVisibility ( View.VISIBLE ) ; t.setVisibility ( View.VISIBLE ) ; } 
public static boolean isSerializedType ( final java.lang.reflect.Field iField ) { final com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedSchema = com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.getCurrentSerializedSchema () ; if ( serializedSchema == null ) return false; try { if ( ! ( serializedSchema.classes.contains ( iField.getDeclaringClass () ) ) ) com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.registerCallbacks ( iField.getDeclaringClass () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Map<java.lang.reflect.Field, java.lang.Class<?>> serializerFields = serializedSchema.serializedFields.get ( iField.getDeclaringClass () ) ; return ( serializerFields != null ) && ( ( serializerFields.get ( iField ) ) != null ) ; } 
@ org.junit.Test public void SaveCourse () { java.util.UUID uuid = java.util.UUID.randomUUID () ; OTS.Aig.KnowledgeMapDataServices.CourseElement courseElement = new OTS.Aig.KnowledgeMapDataServices.CourseElement () ; try { courseElement.Id = uuid.toString () ; } catch ( Exception ex ) { ex.printStackTrace () ; } courseElement.Name = "Testing and Test"; courseElement.Createdby = 2; OTS.Aig.KnowledgeMapDataServices.CourseDataService courseDataService = new OTS.Aig.KnowledgeMapDataServices.CourseDataService ( new OTS.DataModels.MySqlDataSource () ) ; OTS.Aig.KnowledgeMapDataServices.TransactionResult result = courseDataService.CreateNewCourse ( courseElement ) ; org.eclipse.persistence.jpa.jpql.Assert.isTrue ( ( ( result.ActionResultType ) == ( OTS.Aig.KnowledgeMapDataServices.ActionResultType.ok ) ) , "" ) ; } 
public static org.openqa.selenium.WebDriver remoteDriver () { org.openqa.selenium.remote.DesiredCapabilities caps = org.openqa.selenium.remote.DesiredCapabilities.chrome () ; caps.setCapability ( "platform", "Windows 10" ) ; caps.setCapability ( "version", "57.0" ) ; try { caps.setCapability ( "screenResolution", "1280x1024" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.openqa.selenium.remote.RemoteWebDriver driver = new org.openqa.selenium.remote.RemoteWebDriver ( com.epam.jdi.uitests.web.selenium.driver.SauceLabRunner.getSauceUrl () , caps ) ; driver.executeScript ( ( ( "sauce:job-name= Autotest from travis job #" + ( java.lang.System.getenv ( "TRAVIS_JOB_NUMBER" ) ) ) + "\"" ) ) ; return driver; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton compoundButton, boolean b ) { try { switch ( compoundButton.getId () ) { case R.id.cod_client_fragment: break; case R.id.qr_client_fragment: if ( b ) _qrAmountll.setVisibility ( View.VISIBLE ) ; else _qrAmountll.setVisibility ( View.GONE ) ; break; case R.id.bt_client_fragment: if ( b ) _btAmountll.setVisibility ( View.VISIBLE ) ; else _btAmountll.setVisibility ( View.GONE ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; android.os.Bundle b = getArguments () ; java.lang.String fileName = b.getString ( com.koroshiya.fragments.ReadFragment.ARG_FILE, "" ) ; try { android.util.Log.i ( "FLA", ( "Create: " + fileName ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int page = b.getInt ( com.koroshiya.fragments.ReadFragment.ARG_PAGE, ( -1 ) ) ; reset ( fileName, page, false ) ; } 
private void load () { try { if ( ( realMap ) == null ) { realMap = WPI.CampusMap.Recording.Serialization.Serializer.realLoad ( mapName ) ; if ( ( realMap ) == null ) { realMap = new WPI.CampusMap.Backend.Core.Map.RealMap ( mapName ) ; } realMap.validatePoints () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.UUID getSnomedDescriptionType ( int type ) { try { switch ( type ) { case 0: return IsaacMetadataAuxiliaryBinding.DEFINITION_DESCRIPTION_TYPE.getPrimodialUuid () ; case 2: return IsaacMetadataAuxiliaryBinding.SYNONYM.getPrimodialUuid () ; case 3: return IsaacMetadataAuxiliaryBinding.FULLY_SPECIFIED_NAME.getPrimodialUuid () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new java.lang.RuntimeException ( ( "Unhandled description type " + type ) ) ; } 
public void run () { try { if ( ( ( this.getMappingsLocation () ) != null ) && ( ( this.getSrcLocation () ) != null ) ) { this.sendToConsole ( ( ( ( ( "Preparing to apply mappings to '" + ( this.getSrcLocation () ) ) + "' from '" ) + ( this.getMappingsLocation () ) ) + "'" ) ) ; ( remapper = new com.arisux.mappingpatcher.Remapper ( this ) ) .start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { try { if ( pMatrixMode != ( this.mMatrixMode ) ) { this.mMatrixMode = pMatrixMode; switch ( this.mMatrixMode ) { case PROJECTION: this.mCurrentGLMatrixStack = this.mProjectionGLMatrixStack; return; case MODELVIEW: this.mCurrentGLMatrixStack = this.mModelViewGLMatrixStack; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode.class.getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.main_menu ) ; findViewById ( R.id.new_game_button ) .setOnClickListener ( this ) ; findViewById ( R.id.records_button ) .setOnClickListener ( this ) ; try { findViewById ( R.id.about_the_game_button ) .setOnClickListener ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } findViewById ( R.id.quit_button ) .setOnClickListener ( this ) ; } 
public int getXLocation ( int position, com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { try { switch ( orientation ) { case Top: case Bottom: return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left: return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private final java.lang.Float calculateRate ( final java.lang.Long counterValue, final java.lang.Long durationInNs, final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null; try { if ( ( ( counterValue != null ) && ( durationInNs != null ) ) && ( ( durationInNs.longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS.convert ( 1, timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public com.simpledb.result.Result call () throws java.lang.Exception { com.simpledb.memtable.Memtable<java.lang.String, java.lang.String> memtable = processor.getMemTable () ; java.lang.Object value = memtable.getValue ( input.trim () ) ; com.simpledb.result.Result result = null; try { if ( value != null ) { result = new com.simpledb.result.Result ( value.toString () ) ; } else { result = new com.simpledb.result.Result ( "the data should be in the LookupIndex Stack... but this hasn't been implemented yet : ( " ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } outputResult ( result ) ; return result; } 
public Key delMax () { Key max = pq[1]; pq[1] = pq[N]; pq[N] = null; ( N ) --; try { sink () ; } catch ( Exception ex ) { ex.printStackTrace () ; } pq = ( ( Key[] ) ( utils.Utils.resizeArray ( pq, ( ( N ) + 1 ) ) ) ) ; return max; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String movieId = ( ( java.lang.String ) ( v.getTag ( R.id.poster_image_view ) ) ) ; android.content.Intent detailsActivityIntent = new android.content.Intent ( getActivity () , br.com.dgimenes.popmovies.DetailsActivity.class ) ; try { detailsActivityIntent.putExtra ( DetailsActivity.MOVIE_ID_PARAM, movieId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( detailsActivityIntent ) ; } 
public void updateResults () { try { if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName.equalsIgnoreCase ( "Firefox" ) ) { if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass ) com.testing.Cliniops.Cliniops_ReusableMethodsTest.firefoxRes = "Pass"; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.firefoxRes = "Fail"; } else if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName.equalsIgnoreCase ( "Chrome" ) ) { if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass ) com.testing.Cliniops.Cliniops_ReusableMethodsTest.chromeRes = "Pass"; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.chromeRes = "Fail"; } else if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName.equalsIgnoreCase ( "IE" ) ) { if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass ) com.testing.Cliniops.Cliniops_ReusableMethodsTest.ieRes = "Pass"; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.ieRes = "Fail"; } } catch ( Exception ex ) { ex.printStackTrace () ; } com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass = true; } 
public java.lang.String leftShift ( java.lang.String input, int times ) { java.lang.String temp = input; java.lang.StringBuilder strb = new java.lang.StringBuilder () ; try { for ( int i = 0; i < times; i++ ) { strb.append ( temp.substring ( 1 ) ) ; strb.append ( temp.substring ( 0, 1 ) ) ; temp = strb.toString () ; strb = new java.lang.StringBuilder () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return temp; } 
@ java.lang.Override protected void execLoadSession () throws org.eclipse.scout.commons.exception.ProcessingException { java.lang.Boolean createTunnelToServerBeans = org.eclipse.scout.rt.platform.config.CONFIG.getPropertyValue ( org.eclipse.scout.rt.shared.SharedConfigProperties.CreateTunnelToServerBeansProperty.class ) ; createTunnelToServerBeans = false; if ( !createTunnelToServerBeans ) { org.eclipsescout.demo.widgets.client.ClientSession.logger.info ( "starting client without a server!" ) ; } org.eclipse.scout.rt.shared.services.common.code.CODES.getAllCodeTypes ( "org.eclipsescout.demo.widgets.shared" ) ; setLocale ( java.util.Locale.ENGLISH ) ; setDesktop ( new org.eclipsescout.demo.widgets.client.ui.desktop.Desktop () ) ; try { if ( createTunnelToServerBeans ) { org.eclipse.scout.rt.platform.BEANS.get ( org.eclipse.scout.rt.client.services.common.bookmark.IBookmarkService.class ) .loadBookmarks () ; org.eclipse.scout.rt.platform.BEANS.get ( org.eclipse.scout.rt.shared.services.common.ping.IPingService.class ) .ping ( "ping" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test @org.apache.sis.test.DependsOnMethod ( value = "testPropertyOverride" ) public void testPropertyDuplication () { org.apache.sis.feature.DefaultFeatureType city = org.apache.sis.feature.DefaultFeatureTypeTest.city () ; city = new org.apache.sis.feature.DefaultFeatureType ( org.apache.sis.feature.DefaultFeatureTypeTest.name ( "New-City" ) , false, new org.apache.sis.feature.DefaultFeatureType[] { org.apache.sis.feature.DefaultFeatureTypeTest.city () }, city.getProperty ( "city" ) ) ; try { org.apache.sis.feature.DefaultFeatureTypeTest.assertPropertiesEquals ( city, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.apache.sis.feature.DefaultFeatureTypeTest.assertPropertiesEquals ( city, true, "city", "population" ) ; } 
private void setupLogo () { android.app.Fragment fragmentLogo = fm.findFragmentById ( R.id.fragmentContainer ) ; try { if ( fragmentLogo == null ) { fragmentLogo = new testproject.halfmoonstudios.com.ponder.LogoFragment () ; fm.beginTransaction () .add ( R.id.fragmentContainer, fragmentLogo ) .commit () ; cd = new android.os.CountDownTimer ( 2000, 10000 ) { @java.lang.Override public void onTick ( long millisUntilFinished ) { } @java.lang.Override public void onFinish () { replaceMenuFragment () ; replaceOptionsFragment () ; } }; cd.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String getMessage () { try { if ( ( e ) instanceof cz.upol.vanusanik.paralang.runtime.PLClass ) { cz.upol.vanusanik.paralang.runtime.PLClass c = ( ( cz.upol.vanusanik.paralang.runtime.PLClass ) ( e ) ) ; cz.upol.vanusanik.paralang.plang.PLangObject runnable = c.__getkey ( BaseException.__messageGetter ) ; if ( runnable != null ) { cz.upol.vanusanik.paralang.plang.PLangObject str = cz.upol.vanusanik.paralang.runtime.PLRuntime.getRuntime () .run ( runnable, c ) ; return str.toString ( str ) ; } else { return c.toString ( c ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return e.getMessage () ; } 
public void modifyautosmssms ( int id, java.lang.String number, java.lang.String message ) { android.content.ContentValues values = new android.content.ContentValues () ; values.put ( com.abezukor.abezukor.autosms.DBHandler.COLUMN_NUMBER, number ) ; try { values.put ( com.abezukor.abezukor.autosms.DBHandler.COLUMN_MESSAGE, message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db.update ( com.abezukor.abezukor.autosms.DBHandler.TABLE_AUTOSMSTABLE, values, ( "_id=" + id ) , null ) ; db.close () ; } 
public java.util.List<com.manev.quislisting.service.taxonomy.dto.DlCategoryDTO> dlCategoryToDlCategoryDtoFlat ( org.springframework.data.domain.Page<com.manev.quislisting.domain.taxonomy.discriminator.DlCategory> page ) { java.util.Set<java.lang.Long> ids = new java.util.HashSet<> () ; java.util.List<com.manev.quislisting.service.taxonomy.dto.DlCategoryDTO> result = new java.util.ArrayList<> () ; try { for ( com.manev.quislisting.domain.taxonomy.discriminator.DlCategory dlCategory : page ) { doMappingAndFillDepthLevel ( dlCategory, ids, result ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public WPI.CampusMap.Backend.ConnectionPoint getConnectionPoint () { WPI.CampusMap.Backend.ConnectionPoint temp = new WPI.CampusMap.Backend.ConnectionPoint ( this.getCoord () , this.getType () , this.getId () , this.getMap () , "", "" ) ; try { for ( WPI.CampusMap.Backend.Point point : this.getNeighborsP () ) { java.lang.System.out.println ( point ) ; temp.addNeighbor ( point ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return temp; } 
@ java.lang.Override public void onDestroyView () { try { super.onDestroyView () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.dcxz.designdigger.app.App.getQueue () .cancelAll ( subTag ) ; org.dcxz.designdigger.app.App.getQueue () .cancelAll ( ShotsAdapter.TAG ) ; if ( ( receiver ) != null ) { getActivity () .unregisterReceiver ( receiver ) ; } } 
public boolean cancelSeats ( int no ) { try { if ( ( no > ( this.booked ) ) && ( no > 0 ) ) { return false; } else { this.booked = -no; this.availability += no; this.setChanged () ; this.notifyObservers ( this.availability ) ; this.clearChanged () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View loadedFragment = inflater.inflate ( R.layout.fragment_manage_group_products, container, false ) ; initializeWidgets ( loadedFragment ) ; try { setupToolbar () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setupAddProductButtonListener () ; setupRecyclerView () ; populateProductList () ; return loadedFragment; } 
@ java.lang.Override public void validate ( java.lang.Object target, org.springframework.validation.Errors errors ) { com.pce.domain.dto.PukGroupForPukDto pukGroupDto = ( ( com.pce.domain.dto.PukGroupForPukDto ) ( target ) ) ; try { if ( pukGroupDto != null ) { long pukGroupId = pukGroupDto.getPukGroupId () ; java.util.Optional<com.pce.domain.PukGroup> pukGroupById = pukGroupService.getPukGroupById ( pukGroupId ) ; if ( ! ( pukGroupById.isPresent () ) ) { errors.rejectValue ( "pukGroupId", "pukGroup.not.exists", ( ( "Puk Group " + pukGroupId ) + " is not exists in the system, please select different one" ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.support.annotation.NonNull public java.lang.String getDefinition () { java.lang.StringBuilder definition = new java.lang.StringBuilder () ; try { definition.append ( getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( hasAlias () ) { definition.append ( " AS " ) .append ( getAliasName () ) ; } return definition.toString () ; } 
@ java.lang.Override protected void onLayout ( boolean changed, int l, int t, int r, int b ) { if ( !changed ) return; updateBottomViews () ; try { if ( ( mOnLayoutListeners ) != null ) for ( int i = 0; i < ( mOnLayoutListeners.size () ) ; i++ ) { mOnLayoutListeners.get ( i ) .onLayout ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String calculateStatus ( org.traccar.model.Position position ) { try { if ( position.getAttributes () .containsKey ( Event.KEY_ALARM ) ) { return "0xF841"; } else if ( ( position.getSpeed () ) < 1.0 ) { return "0xF020"; } else { return "0xF11C"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected boolean isFinished () { try { switch ( m_state ) { case ON: if ( ( m_terminateWhenEmpty ) && ( m_launcher.isEmpty () ) ) return true; else return false; case OFF: return true; case SINGLE: if ( m_launcher.isSingleShotDone () ) return true; else return false; case UNJAM: return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public java.lang.String getValue ( mage.game.Game game ) { java.lang.StringBuilder sb = mage.cards.CardsImpl.threadLocalBuilder.get () ; java.util.List<java.lang.String> cards = new java.util.ArrayList<> () ; for ( java.util.UUID cardId : this ) { mage.cards.Card card = game.getCard ( cardId ) ; cards.add ( card.getName () ) ; } java.util.Collections.sort ( cards ) ; try { for ( java.lang.String name : cards ) { sb.append ( name ) .append ( ":" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return sb.toString () ; } 
public void next () { final net.teamfruit.signpic.manager.scan.Scanner scanner = this.current.getScanner ( null ) ; try { if ( scanner != null ) { if ( ( scanner.getState () ) == ( net.teamfruit.signpic.manager.scan.Scanner.ScanState.DONE ) ) { this.current = null; final net.teamfruit.signpic.manager.scan.ScanManager.ScanTask task = this.queue.poll () ; if ( task != null ) scan ( task ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void undoAdd () { seedu.taskell.logic.commands.UndoCommand.clearCommandHistory () ; seedu.taskell.testutil.TestTask[] currentList = td.getTypicalTasks () ; seedu.taskell.testutil.TestTask taskToAdd = td.holdMeeting; commandBox.runCommand ( taskToAdd.getAddCommand () ) ; assertAddSuccess ( taskToAdd, currentList ) ; currentList = seedu.taskell.testutil.TestUtil.addTasksToList ( currentList, taskToAdd ) ; commandBox.runCommand ( "undo 1" ) ; assertDeleteSuccess ( currentList.length, currentList ) ; try { seedu.taskell.logic.commands.UndoCommand.clearCommandHistory () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void removeReplacementSpan ( java.lang.Class<?> clazz, int start ) { java.lang.Object replacementSpan = getAssignSpan ( replaceMap.get ( clazz ) .clazz, start, start ) ; getEditableText () .removeSpan ( replacementSpan ) ; getEditableText () .delete ( ( start - 1 ) , start ) ; try { replaceMap.get ( clazz ) .position = -1; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public double[] getPhaseTable () { for ( int i = 0; i < 1024; i++ ) re[i] = data[i]; try { cafe.analysis.cafe.analysis.FFT.fft ( re, im, 10, ( -1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } double[] temp1 = cafe.analysis.cafe.analysis.FFT.get_theta () ; return temp1; } 
public java.util.Iterator<E> minimumSpanningTree () { java.util.Set<E> set = new java.util.HashSet<E> () ; try { for ( E e = pq.poll () ; ! ( pq.isEmpty () ) ; e = pq.poll () ) { set.add ( e ) ; if ( checkForCycle ( set, e.getSource () , e.getDest () ) ) { set.remove ( e ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return set.iterator () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET ) @org.springframework.web.bind.annotation.ResponseBody public java.util.Map<java.lang.String, java.lang.Object> executeOperation ( @org.springframework.web.bind.annotation.RequestHeader ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.REQUEST_HEADER_NAME_SESSION_ID ) java.lang.String sessionId, @org.springframework.web.bind.annotation.RequestParam ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_QUERY_KEY ) java.lang.String query, @org.springframework.web.bind.annotation.RequestParam ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_OPERATION_NAME, required = false ) java.lang.String operationName, @org.springframework.web.bind.annotation.RequestParam ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_VARIABLES_KEY, required = false ) java.lang.String variables ) throws java.io.IOException { log.debug ( "sessionId={}", sessionId ) ; java.lang.String username = authenticationService.authenticate ( sessionId ) ; log.trace ( "username={}", username ) ; try { log.debug ( "query={}, operationName={}, variables={}", query, operationName, variables ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return graphqlService.executeQuery ( query, operationName, new org.ow2.proactive.scheduling.api.graphql.common.GraphqlContext ( username, sessionId ) , decodeIntoMap ( variables ) ) ; } 
@ java.lang.Override protected byte[] getFromStore ( long uid ) throws java.io.IOException { int docid = mapDocId ( uid ) ; if ( docid < 0 ) return null; org.apache.lucene.index.IndexReader reader = null; if ( ( _currentReaderData ) != null ) { reader = _currentReaderData.reader; } try { if ( ( docid >= 0 ) && ( reader != null ) ) { org.apache.lucene.document.Document doc = reader.document ( docid ) ; if ( doc != null ) { return doc.getBinaryValue ( _field ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public boolean percolates () { try { for ( int i = 0; i < ( site[ ( ( site[0].length ) - 1 ) ].length ) ; i++ ) { if ( isFull ( ( ( site[0].length ) - 1 ) , i ) ) return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void uninstallClientDecorations ( javax.swing.JRootPane root ) { uninstallBorder ( root ) ; try { uninstallWindowListeners ( root ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setTitlePane ( root, null ) ; uninstallLayout ( root ) ; int style = com.jtattoo.plaf.DecorationHelper.getWindowDecorationStyle ( root ) ; if ( style == ( com.jtattoo.plaf.BaseRootPaneUI.NONE ) ) { root.repaint () ; root.revalidate () ; } if ( ( ( window ) != null ) && ( ( savedCursor ) != null ) ) { window.setCursor ( savedCursor ) ; savedCursor = null; } window = null; } 
@ org.junit.Test public void testList () { java.util.List<java.net.Proxy> result = this.selector.select ( TestUtil.HTTP_TEST_URI ) ; org.junit.Assert.assertEquals ( 2, result.size () ) ; try { org.junit.Assert.assertEquals ( TestUtil.HTTP_TEST_PROXY, result.get ( 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( TestUtil.HTTPS_TEST_PROXY, result.get ( 1 ) ) ; } 
public void handleMessage ( android.os.Message msg ) { if ( ! ( com.fionera.cleaner.utils.DroidWallApi.hasRootAccess ( mContext, true ) ) ) { return; } if ( com.fionera.cleaner.utils.DroidWallApi.applyIpTablesRules ( mContext, true ) ) { com.fionera.cleaner.utils.ShowToast.show ( "规则已应用" ) ; } try { if ( ( progress ) != null ) { progress.dismiss () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityCreated ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super.onActivityCreated ( savedInstanceState ) ; setEmptyText ( "No entry found" ) ; mAdapter = new com.example.daniel.todule_android.adapter.HistoryAdapter ( getActivity () , null, 0 ) ; try { setListAdapter ( mAdapter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getActivity () .getSupportLoaderManager () .initLoader ( com.example.daniel.todule_android.activities.ToduleHistoryFragment.LOADER_ID, null, this ) ; } 
public void startTestMenuItemAction () { try { if ( ( mainView.getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object[] options = new java.lang.Object[] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES[1], com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES[2] }; int languageToTest = mainView.showOptionDialog ( "Which language would you like to test?", "Please enter option", options, Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView.getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent intent ) { try { super.onActivityResult ( requestCode, resultCode, intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( requestCode == 1 ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { android.util.Log.i ( "addpost", "back button clicked 2" ) ; currentUser = intent.getParcelableExtra ( "user" ) ; currentUserToken = intent.getParcelableExtra ( "accessToken" ) ; } } } 
public void Promote () { chessgame.Queen Promotion; if ( ( player ) == 1 ) { Promotion = new chessgame.Queen ( "WhitePromotedPawn" ) ; Promotion.setIcon ( WhiteQueenImg ) ; current.removePiece () ; current.setPiece ( Promotion ) ; } else { Promotion = new chessgame.Queen ( "BlackPromotedPawn" ) ; Promotion.setIcon ( BlackQueenImg ) ; current.removePiece () ; current.setPiece ( Promotion ) ; } try { current.repaint () ; } catch ( Exception ex ) { ex.printStackTrace () ; } current.validate () ; } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void setupSettingsFilters () { try { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter.getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () .setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) .build () ; filters = new java.util.ArrayList<> () ; filters.add ( new android.bluetooth.le.ScanFilter.Builder () .setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) .build () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void doPost ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response ) throws java.io.IOException, javax.servlet.ServletException { java.io.PrintWriter out = response.getWriter () ; response.setContentType ( com.foodstore.serg.controller.CONTENT_TYPE ) ; java.util.List<com.foodstore.serg.model.Meal> meals = com.foodstore.serg.service.MealService.getAll () ; if ( meals.isEmpty () ) { request.setAttribute ( "success_message", com.foodstore.serg.controller.NO_PRODUCT ) ; } else { request.setAttribute ( "success_message", com.foodstore.serg.controller.LIST_OF_MEALS ) ; request.setAttribute ( "food", meals ) ; } try { getServletContext () .getRequestDispatcher ( "/dashboard.jsp" ) .forward ( request, response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ butterknife.OnClick ( value = R.id.icon ) void version () { android.widget.Toast.makeText ( this, ( ( ( ( ( ( getString ( R.string.version ) ) + ( cc.haoduoyu.umaru.BuildConfig.VERSION_NAME ) ) + "\n\n" ) + ( cc.haoduoyu.umaru.utils.PreferencesUtils.getAll ( this ) ) ) + "\n\n" ) + ( cc.haoduoyu.umaru.utils.SettingUtils.getAll () ) ) , Toast.LENGTH_LONG ) .show () ; try { com.apkfuns.logutils.LogUtils.d ( cc.haoduoyu.umaru.utils.PreferencesUtils.getAll ( this ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.apkfuns.logutils.LogUtils.d ( cc.haoduoyu.umaru.utils.SettingUtils.getAll () ) ; } 
public static void main ( java.lang.String[] args ) { java.util.Map<Node, java.lang.Integer> topology = new java.util.HashMap<Node, java.lang.Integer> () ; try { topology.put ( new Node ( 1 ) , 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } topology.put ( new Node ( 2 ) , 4 ) ; Network net = new Network ( topology ) ; java.lang.System.out.println ( net ) ; } 
public void startFailureMode () { android.util.Log.d ( "BROWSERTESTING", ( ( "failuremode: checking if network is online before continuing." + " Setting URL to this fallback in the meantime: " ) + ( fallbackURL ) ) ) ; if ( ( ( fallbackURL ) != null ) && ( ! ( fallbackURL.equals ( "PROPERTY_NOT_FOUND" ) ) ) ) runOnUiThread ( changeToFallbackURL ) ; final java.lang.Runnable refresher = new java.lang.Runnable () { public void run () { if ( isOnline () ) switchToStandardMode () ; } }; try { refresherHandle = scheduler.scheduleAtFixedRate ( refresher, 0, 5, java.util.concurrent.TimeUnit.SECONDS ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean putNewTask ( TASK newTask ) { java.lang.String url = newTask.getKey () ; boolean s = mExecuteQueue.offer ( newTask ) ; android.util.Log.w ( com.arialyy.aria.core.queue.pool.ExecutePool.TAG, ( "任务添加" + ( s ? "成功" : ( "失败，【" + url ) + "】" ) ) ) ; try { if ( s ) { mExecuteArray.put ( com.arialyy.aria.util.CommonUtil.keyToHashKey ( url ) , newTask ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return s; } 
public boolean sendToServer ( org.bukkit.entity.Player player, java.lang.String destination, boolean callEvent ) { try { if ( callEvent ) { com.yahoo.tracebachi.DeltaEssentials.Events.PlayerServerSwitchEvent event = new com.yahoo.tracebachi.DeltaEssentials.Events.PlayerServerSwitchEvent ( player, destination ) ; org.bukkit.Bukkit.getPluginManager () .callEvent ( event ) ; if ( event.isCancelled () ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } com.google.common.io.ByteArrayDataOutput output = com.google.common.io.ByteStreams.newDataOutput () ; output.writeUTF ( "Connect" ) ; output.writeUTF ( destination ) ; player.sendPluginMessage ( this, "BungeeCord", output.toByteArray () ) ; return true; } 
protected void wasShoot () { wasJustShoot = true; armLengt -= BACK_FIRE; explostions.add ( new float[] { aimAtX, aimAtY, ( se.BaseUlterior.Aim.AimBulletWeapon.SMOKE_LENGTH ) / 2 } ) ; try { rays.add ( new float[] { gunFireStartAtX, gunFireStartAtY, aimAtX, aimAtY, se.BaseUlterior.Aim.AimBulletWeapon.SMOKE_LENGTH } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void execute ( java.lang.String command ) { try { for ( int i = 0; i < ( command.length () ) ; i++ ) { switch ( command.charAt ( i ) ) { case Command.FORWARD: case Command.BACKWARD: if ( ! ( move ( command.charAt ( i ) ) ) ) { return; } break; case Command.RIGHT: case Command.LEFT: rotate ( command.charAt ( i ) ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static double S ( double t ) { double count = SIRModel.getRecord ( SIRModel.S_HIST, t ) ; try { if ( count >= 0 ) { return count; } else { double lt = t - ( SIRModel.DT ) ; double newCount = ( SIRModel.S ( lt ) ) + ( SIRModel.dS ( t ) ) ; SIRModel.S_HIST.add ( newCount ) ; return newCount; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected boolean mouseOnMaximize () { try { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse.getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse.getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ org.junit.Test ( timeout = 10000 ) public void ensureObjectsAreSynchronizedIfOnlyNodeHasObjects () throws java.lang.Exception { ch.dissem.bitmessage.networking.NetworkHandlerTest.peerInventory.init () ; try { ch.dissem.bitmessage.networking.NetworkHandlerTest.nodeInventory.init ( "V1Msg.payload" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Thread t = ch.dissem.bitmessage.networking.NetworkHandlerTest.networkHandler.synchronize ( java.net.InetAddress.getLocalHost () , 6001, org.mockito.Mockito.mock ( NetworkHandler.MessageListener.class ) , 10 ) ; t.join () ; assertInventorySize ( 1, ch.dissem.bitmessage.networking.NetworkHandlerTest.nodeInventory ) ; assertInventorySize ( 1, ch.dissem.bitmessage.networking.NetworkHandlerTest.peerInventory ) ; } 
@ java.lang.Override public void run ( org.zstack.network.service.eip.FlowTrigger trigger, java.util.Map data ) { org.zstack.network.service.eip.EipBackend bkd = getEipBackend ( providerType ) ; try { bkd.applyEip ( struct, new org.zstack.header.core.Completion ( trigger ) { @java.lang.Override public void success () { trigger.next () ; } @java.lang.Override public void fail ( org.zstack.header.errorcode.ErrorCode errorCode ) { trigger.fail ( errorCode ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.drmattyg.nanokaraoke.TrackEvent next () { com.drmattyg.nanokaraoke.TrackEvent evt = com.drmattyg.nanokaraoke.TrackEvent.getInstance ( tc, iteratorOffset ) ; try { if ( evt.hasStatusbyte () ) { setLastStatusByte ( evt.getStatusByte () ) ; } else { evt.setStatusByte ( ( ( getLastStatusByte () ) & 255 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } iteratorOffset += evt.getTotalLength () ; return evt; } 
public static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String[] lines = text.split ( "\n" ) ; try { for ( int i = 0; i < ( lines.length ) ; i++ ) { if ( ( lines[i].trim () .length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.isLineShortDate ( lines[i] ) ) return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String SQL_CREATE_SHOES_TABLE = ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.TABLE_NAME ) ) + " ( " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry._ID ) ) + " INTEGER PRIMARY KEY AUTOINCREMENT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_BRAND ) ) + " INTEGER NOT NULL, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_NAME ) ) + " TEXT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_QUANTITY ) ) + " INTEGER NOT NULL DEFAULT 0, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_PRICE ) ) + " INTEGER NOT NULL ) ;"; try { db.execSQL ( SQL_CREATE_SHOES_TABLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void render ( float dt ) { update ( dt ) ; Gdx.gl.glClearColor ( 0.0F, 0.0F, 0.0F, 1.0F ) ; Gdx.gl.glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; try { game.batch.setProjectionMatrix ( cam.combined ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } rayHandler.setCombinedMatrix ( cam ) ; if ( com.develorain.game.Screens.PlayScreen.DEBUG_MODE ) b2dr.render ( world, cam.combined ) ; rayHandler.render () ; game.batch.setProjectionMatrix ( hud.stage.getCamera () .combined ) ; hud.stage.draw () ; } 
public static void initializeCustomWorld ( java.util.Scanner input, boolean[][] world ) { boolean done = false; try { GameOfLife.clearWorld ( world ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.printf ( "Enter a pattern using %c for alive and %c as dead cells.\n", Config.ALIVE, Config.DEAD ) ; java.lang.System.out.println ( "To end the pattern, type END on its own line." ) ; for ( int i = 0; !done; i++ ) { done = GameOfLife.initializeCustomRow ( input, i, world ) ; } } 
@ java.lang.Override protected void initiateAutomaticSync () { try { if ( ( tagData ) != null ) { long lastAutoSync = com.todoroo.andlib.utility.Preferences.getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData.getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities.now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void shutdown () { if ( ( eventLoopGroup ) != null ) { eventLoopGroup.shutdownGracefully () ; } try { if ( ( serverThread ) != null ) { org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.LOGGER.debug ( "shutting down monitor server thread" ) ; joinServerThread () ; serverThread = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( udpStreamProcessor ) != null ) { udpStreamProcessor.shutdown () ; } } 
@ java.lang.Override public java.lang.String visitSimple_stmt ( lessa.ExprParser.Simple_stmtContext ctx ) { try { java.lang.System.out.println ( "simple_stmt -> small_stmt ( ';' small_stmt ) * ';' " ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String ret = ( visit ( ctx.small_stmt ( 0 ) ) ) + "\n"; int i = 1; while ( ( ctx.small_stmt ( i ) ) != null ) { ret += ( visit ( ctx.small_stmt ( i ) ) ) + "\n"; i++; } return ret; } 
private void updateUI_2_Dashboard () { if ( ( _dashboard_PageBook ) == null ) { return; } final boolean isBrowserAvailable = ( _browser ) != null; _dashboard_PageBook.showPage ( ( isBrowserAvailable ? _dashboardPage_WithBrowser : _dashboardPage_NoBrowser ) ) ; if ( !isBrowserAvailable ) { return; } final java.lang.String html = createHTML () ; _isBrowserCompleted = false; try { _browser.setText ( html ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.oasisfeng.android.ui.Dialogs.Builder buildAlert ( final android.content.Context context, final java.lang.CharSequence title, final java.lang.CharSequence message ) { final com.oasisfeng.android.ui.Dialogs.Builder builder = new com.oasisfeng.android.ui.Dialogs.Builder ( context ) ; try { builder.setCancelable ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( title != null ) builder.setTitle ( title ) ; if ( message != null ) builder.setMessage ( message ) ; return builder; } 
public void updateIndex () { org.elasticsearch.common.settings.Settings settings = org.elasticsearch.common.settings.Settings.settingsBuilder () .put ( "number_of_replicas", 5 ) .build () ; org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsResponse updateSettingsResponse = client.admin () .indices () .prepareUpdateSettings ( "productindex" ) .setSettings ( settings ) .execute () .actionGet () ; try { com.test.java.search.elasticsearch.TestElasticSearch.LOGGER.info ( updateSettingsResponse ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> getRecentVideos ( java.lang.Integer pageNo, java.lang.Integer pageSize ) { java.util.List<java.util.Map<java.lang.String, java.lang.Object>> result = null; int offset = ( ( pageNo - 1 ) * pageSize ) + 1; java.lang.String selectQuery = "SELECT * FROM ( SELECT * FROM v_online_videos ) AS tbl WHERE tbl.sl_no BETWEEN ? AND ? "; try { result = getJdbcTemplate () .query ( selectQuery, new java.lang.Object[] { offset, offset + pageSize }, new org.springframework.jdbc.core.ColumnMapRowMapper () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void onClick ( android.view.View view ) { johnsmith.haruhi.co.refrigerator.Model.Unit.Item item = itemList.get ( position ) ; try { if ( itemList.contains ( item ) ) { listener.onDeleteClick ( item.getName () , item.getId () ) ; itemList.remove ( position ) ; notifyItemRemoved ( position ) ; notifyItemRangeChanged ( position, itemList.size () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean execute ( com.intellij.openapi.compiler.CompileContext context ) { try { for ( com.intellij.openapi.module.Module module : com.intellij.openapi.module.ModuleManager.getInstance ( context.getProject () ) .getModules () ) { com.google.cloud.tools.intellij.jps.model.impl.StackdriverProperties configuration = com.intellij.facet.FacetManager.getInstance ( module ) .getFacetByType ( com.google.cloud.tools.intellij.stackdriver.facet.StackdriverFacetType.ID ) .getConfiguration () .getState () ; configuration.setCloudSdkPath ( com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance () .getSdkHomePath () .toString () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public static boolean isInteger ( java.lang.String str ) { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile ( "^[-\\+]?[\\d]*$" ) ; try { if ( ( str != null ) && ( ( pattern.matcher ( str ) ) != null ) ) return pattern.matcher ( str ) .matches () ; else return false; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void getResultsFromApi () { try { if ( ! ( isDeviceOnline () ) ) { android.util.Log.i ( kelvinycchan.a12googlesheetcheck_insystem.CheckInActivity.TAG, "No network connection available." ) ; android.widget.Toast.makeText ( this, "No network connection available.", Toast.LENGTH_LONG ) .show () ; } else { new kelvinycchan.a12googlesheetcheck_insystem.CheckInActivity.MakeRequestTask ( credential ) .execute () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void closeToLeft () { try { if ( viewDragHelper.smoothSlideViewTo ( dragView, ( - ( transformer.getOriginalWidth () ) ) , ( ( getHeight () ) - ( transformer.getMinHeightPlusMargin () ) ) ) ) { android.support.v4.view.ViewCompat.postInvalidateOnAnimation ( this ) ; notifyCloseToLeftListener () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ rest.controller.RequestMapping ( value = "/user/", method = RequestMethod.POST ) public org.springframework.http.ResponseEntity<java.lang.Void> createUser ( @rest.controller.RequestBody rest.model.User user, org.springframework.web.util.UriComponentsBuilder uriComponentsBuilder ) { if ( userService.isUserExist ( user ) ) { return new org.springframework.http.ResponseEntity<java.lang.Void> ( org.springframework.http.HttpStatus.CONFLICT ) ; } userService.saveUser ( user ) ; org.springframework.http.HttpHeaders httpHeaders = new org.springframework.http.HttpHeaders () ; try { httpHeaders.setLocation ( uriComponentsBuilder.path ( "/user/{id}" ) .buildAndExpand ( user.getId () ) .toUri () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.springframework.http.ResponseEntity<java.lang.Void> ( httpHeaders, org.springframework.http.HttpStatus.CREATED ) ; } 
public int hamming () { int count = 0; try { for ( int i = 0; i < ( N ) ; i++ ) { for ( int j = 0; j < ( N ) ; j++ ) { if ( ( ( pieces[i][j] ) != ( goalValueAt ( i, j ) ) ) && ( ( pieces[i][j] ) != 0 ) ) { count++; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return count; } 
public void shuffle () { sorted = false; try { for ( int i = ( topCard ) - 1; i > 0; i-- ) { int randomPos = ( ( int ) ( ( java.lang.Math.random () ) * ( topCard ) ) ) ; Card temp = cards[i]; cards[i] = cards[randomPos]; cards[randomPos] = temp; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void alimentarMatriz ( int[][] matriz ) { try { for ( int linha = 0; linha < ( matriz.length ) ; linha++ ) { for ( int coluna = 0; coluna < ( matriz[0].length ) ; coluna++ ) { java.util.Random random = new java.util.Random () ; matriz[linha][coluna] = random.nextInt ( 11 ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
static java.lang.Object getEnumValue ( final java.lang.Class<?> enumType, final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result; try { if ( enumType != null ) { final java.lang.reflect.Method method = enumType.getDeclaredMethod ( "valueOf", java.lang.String.class ) ; result = method.invoke ( enumType, name ) ; } else { result = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public static void setTotals () { try { if ( ( com.tanghe.garben.capitalbooze.OrderFragment.totalPrice ) > 0.0 ) { com.tanghe.garben.capitalbooze.OrderFragment.mTotalPrice.setText ( java.lang.String.format ( java.util.Locale.getDefault () , "€%.2f", com.tanghe.garben.capitalbooze.OrderFragment.totalPrice ) ) ; } else { com.tanghe.garben.capitalbooze.OrderFragment.totalPrice = 0.0; com.tanghe.garben.capitalbooze.OrderFragment.mTotalPrice.setText ( java.lang.String.format ( java.util.Locale.getDefault () , "€%.2f", com.tanghe.garben.capitalbooze.OrderFragment.totalPrice ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } com.tanghe.garben.capitalbooze.OrderFragment.mTotalSquares.setText ( java.lang.String.format ( java.util.Locale.getDefault () , "#%1d", com.tanghe.garben.capitalbooze.OrderFragment.totalSquares ) ) ; com.tanghe.garben.capitalbooze.OrderFragment.mTotalCount.setText ( java.lang.String.format ( java.util.Locale.getDefault () , "%1d", com.tanghe.garben.capitalbooze.OrderFragment.totalCount ) ) ; } 
@ org.junit.Test public void testCache () throws java.lang.Exception { org.uli.gcb.GuavaCacheKo gc = new org.uli.gcb.GuavaCacheKo () ; assertEquals ( 0, gc.cnt ) ; java.lang.String s = gc.getPair ( 1, 2 ) ; assertEquals ( 1, gc.cnt ) ; assertEquals ( "this pair is ( 1,2 ) : 1", s ) ; java.lang.String s2 = gc.getPair ( 2, 3 ) ; try { assertEquals ( 2, gc.cnt ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( "this pair is ( 2,3 ) : 2", s2 ) ; gc.getPair ( 1, 2 ) ; } 
protected static java.lang.String oldFileNameToViewName ( java.lang.String fileName ) throws com.couchbase.lite.CouchbaseLiteException { try { if ( ( ! ( fileName.endsWith ( com.couchbase.lite.store.ForestDBViewStore.kViewIndexPathExtension ) ) ) || ( fileName.startsWith ( "." ) ) ) throw new com.couchbase.lite.CouchbaseLiteException ( com.couchbase.lite.Status.BAD_PARAM ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String viewName = fileName.substring ( 0, fileName.indexOf ( "." ) ) ; return viewName.replaceAll ( ":", "/" ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_course_selection ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } se.kth.csc.iprog.dinnerplanner.model.DinnerModel model = ( ( se.kth.csc.iprog.dinnerplanner.android.DinnerPlannerApplication ) ( this.getApplication () ) ) .getModel () ; new se.kth.csc.iprog.dinnerplanner.android.view.course.CourseTopView ( findViewById ( R.id.this_is_course_top_view_id ) , model ) ; new se.kth.csc.iprog.dinnerplanner.android.view.course.TotalCostView ( findViewById ( R.id.this_is_total_cost_id ) , model ) ; new se.kth.csc.iprog.dinnerplanner.android.view.course.CourseDownView ( findViewById ( R.id.this_is_course_down_view_id ) , model ) ; } 
@ java.lang.Override public void onLoadFinished ( android.support.v4.content.Loader<android.database.Cursor> loader, android.database.Cursor data ) { forecastAdapter.swapCursor ( data ) ; if ( ( selectedPosition ) != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { recyclerView.smoothScrollToPosition ( selectedPosition ) ; android.support.v7.widget.RecyclerView.ViewHolder selectedViewHolder = recyclerView.findViewHolderForAdapterPosition ( selectedPosition ) ; } try { updateEmptyViewStatusText () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private final boolean is7BitClean ( org.forgerock.opendj.ldap.ByteSequence value ) { try { for ( int i = 0; i < ( value.length () ) ; i++ ) { byte b = value.byteAt ( i ) ; if ( ( b & ( org.opends.server.plugins.SevenBitCleanPlugin.MASK ) ) != b ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public boolean canConfirmOrderOfCart ( io.muic.ooc.model.Cart cart ) { java.util.Set<io.muic.ooc.model.CartProduct> cartProductSet = cartProductService.findCartProductsByCart ( cart ) ; try { if ( ( cartProductSet == null ) || ( ( cartProductSet.size () ) == 0 ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public model.modelClasses.mainData.BibleChapterModel getBibleChapter ( android.content.Context context, int chapterNumber ) { this.getBibleChildModels ( context ) ; java.util.Collections.sort ( this.bibleChapterModels ) ; try { if ( chapterNumber > ( this.bibleChapterModels.size () ) ) { return null; } else { for ( model.modelClasses.mainData.BibleChapterModel chapter : bibleChapterModels ) { if ( ( java.lang.Integer.parseInt ( chapter.number.trim () ) ) == chapterNumber ) { return chapter; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { javax.swing.JFileChooser jfc = new javax.swing.JFileChooser () ; int result = jfc.showOpenDialog ( view.getFrame () ) ; if ( result == ( javax.swing.JFileChooser.APPROVE_OPTION ) ) model.loadPathbaseFile ( jfc.getSelectedFile () .getAbsolutePath () ) ; try { center.aggiorna ( ( -1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b, java.lang.String fmt ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes.getView ( b ) ; try { if ( buffer != null ) { return buffer; } else { throw org.python.core.Py.TypeError ( java.lang.String.format ( fmt, b.getType () .fastGetName () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onGetDataShareWithFinish ( com.owncloud.android.lib.common.operations.RemoteOperationResult result ) { ( ( com.owncloud.android.ui.activity.ShareActivity ) ( getActivity () ) ) .dismissLoadingDialog () ; if ( ( result != null ) && ( result.isSuccess () ) ) { com.owncloud.android.lib.common.utils.Log_OC.d ( com.owncloud.android.ui.fragment.ShareFileFragment.TAG, "Get Data Share With finishes sucessfully" ) ; } try { refreshUsersOrGroupsListFromDB () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = { "unchecked", "rawtypes" } ) private void addNewGoogleGuavaClasses () { nl.jqno.equalsverifier.internal.ConditionalInstantiator range = new nl.jqno.equalsverifier.internal.ConditionalInstantiator ( ( ( nl.jqno.equalsverifier.JavaApiPrefabValues.GUAVA_PACKAGE ) + "Range" ) , false ) ; addValues ( range.resolve () , range.callFactory ( "open", classes ( java.lang.Comparable.class, java.lang.Comparable.class ) , objects ( 1, 2 ) ) , range.callFactory ( "open", classes ( java.lang.Comparable.class, java.lang.Comparable.class ) , objects ( 3, 4 ) ) ) ; java.lang.String optional = "com.google.common.base.Optional"; try { addFactory ( classForName ( optional ) , new nl.jqno.equalsverifier.ReflectiveGenericContainerFactory ( optional ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void next () { this.index += 1; int tempIndex = this.index; try { while ( ( ( this.index ) < ( this.menuSize ) ) && ( ( menu.get ( tempIndex ) .price ) >= ( this.price ) ) ) { this.index += 1; tempIndex += 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void click_deleteButton ( android.view.View v ) { for ( int position : win.successlvchao.android.moneypocket.MainActivity.checkedIndexList.keySet () ) { mCostBeanList.remove ( position ) ; mDatabaseHelper.deleteSpecificItem ( win.successlvchao.android.moneypocket.MainActivity.checkedIndexList.get ( position ) ) ; } win.successlvchao.android.moneypocket.MainActivity.checkedIndexList.clear () ; win.successlvchao.android.moneypocket.MainActivity.checkBoxList.clear () ; try { mAdapter.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } findViewById ( R.id.deleteButton ) .setVisibility ( View.INVISIBLE ) ; findViewById ( R.id.cancelButton ) .setVisibility ( View.INVISIBLE ) ; } 
private void findNextTurn () { java.lang.Boolean found = false; try { nextTurn () ; } catch ( Exception ex ) { ex.printStackTrace () ; } while ( !found ) { if ( ( ! ( currentPlayer.getPass () ) ) && ( ! ( currentPlayer.getWon () ) ) ) { found = true; } else { nextTurn () ; } } } 
@ java.lang.Override public void handleMessage ( android.os.Message inputMessage ) { org.mobicents.restcomm.android.client.sdk.SignalingMessage message = ( ( org.mobicents.restcomm.android.client.sdk.SignalingMessage ) ( inputMessage.obj ) ) ; try { if ( ( message.type ) == ( SignalingMessage.MessageType.OPEN_REPLY ) ) { listener.onOpenReply ( message.id, message.status, message.text ) ; } else if ( ( message.type ) == ( SignalingMessage.MessageType.CALL_REPLY ) ) { } else if ( ( message.type ) == ( SignalingMessage.MessageType.CALL_EVENT ) ) { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public nl.renarj.jasdb.api.properties.Property removeValue ( nl.renarj.jasdb.api.properties.Value v ) { try { for ( java.util.Iterator i = values.iterator () ; i.hasNext () ; ) { if ( i.next () .equals ( v ) ) { i.remove () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
private java.util.ArrayList<java.lang.Integer> list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v, java.lang.String v ) { java.util.ArrayList<java.lang.Integer> list_numbers_equal_values = new java.util.ArrayList<> () ; try { for ( int i = 0; i < ( ja_equal_words_v.length () ) ; i++ ) { if ( ja_equal_words_v.get ( i ) .toString () .toLowerCase () .equals ( v ) ) { list_numbers_equal_values.add ( ( i + 1 ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return list_numbers_equal_values; } 
@ java.lang.Override public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { try { if ( ( javax.swing.JOptionPane.showConfirmDialog ( null, "Wollen sie Speicher und Schließen?", "Wirklich schließen?", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { if ( save () ) { javax.swing.JOptionPane.showMessageDialog ( null, "Der Zustand wurde gespeichert.", "Speichern", javax.swing.JOptionPane.INFORMATION_MESSAGE ) ; java.lang.System.exit ( 0 ) ; } else { javax.swing.JOptionPane.showMessageDialog ( null, "Fehler beim Speichern", "Speichern", javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } else { java.lang.System.exit ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkExistenceOfRequiredTranslations ( java.util.Set<java.io.File> filesInResourceBundle ) { final java.lang.String fullBundleName = getFullBundleName ( filesInResourceBundle ) ; try { for ( java.lang.String languageCode : requiredTranslations ) { final java.lang.String translationFileName = ( fullBundleName + '_' ) + languageCode; final boolean missing = com.puppycrawl.tools.checkstyle.checks.TranslationCheck.isMissing ( translationFileName, filesInResourceBundle ) ; if ( missing ) { final java.lang.String missingTranslationFileName = formMissingTranslationName ( fullBundleName, languageCode ) ; logMissingTranslation ( missingTranslationFileName ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private xl.playground.algo.tree.BinarySearchTree.Node<Item> addNode ( xl.playground.algo.tree.BinarySearchTree.Node<Item> root, Item value ) { if ( root == null ) { return new xl.playground.algo.tree.BinarySearchTree.Node<> ( value ) ; } if ( ( root.value.compareTo ( value ) ) >= 0 ) { root.left = addNode ( root.left, value ) ; } else { root.right = addNode ( root.right, value ) ; } try { root.count = 1 + ( countChildren ( root ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return root; } 
@ java.lang.Override public boolean onRequest ( final android.content.Intent request, final android.content.Intent response ) { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE.addEvent ( request ) ; try { if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response, DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils.setUnknownError ( response ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mLogger.exiting ( this.getClass () .getName () , "onPutOnPhoto" ) ; return true; } 
public void setTagline () { try { if ( ( ( mMovie.getTagline () ) != null ) && ( ( mMovie.getTagline () .length () ) != 0 ) ) { ( ( android.widget.TextView ) ( mRootView.findViewById ( R.id.banner_title ) ) ) .setText ( ( ( "\"" + ( mMovie.getTagline () ) ) + "\"" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void syncNewDriver ( java.lang.String name, java.lang.String street, java.lang.String city, java.lang.String state, java.lang.String zip ) { com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver sendInfoDriver = new com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver () ; org.json.JSONObject json; int oldID = db.addDriver ( name, street, city, arrayOfStates[java.lang.Integer.parseInt ( state ) ].valueOf ( arrayOfStates[java.lang.Integer.parseInt ( state ) ].name () ) .toString () , zip ) ; try { sendInfoDriver.addDriver ( oldID, name, street, city, state, zip ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( mCurrentPage ) < ( mNumberPages ) ) { mRightButton.setEnabled ( false ) ; mCurrentPage += 1; mImageAdapter.invalidateData () ; mPagerAdapter.notifyDataSetChanged () ; getAllPopularPhotos () ; } else { android.widget.Toast.makeText ( getBaseContext () , "Already at last page", Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFocusChange ( android.view.View view, boolean hasFocus ) { try { if ( hasFocus ) { bottomNavigationBar.hide () ; android.util.Log.d ( "~focus", ( ( bottomNavigationBar.isHidden () ) + "" ) ) ; } else { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getActivity () .getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm.hideSoftInputFromWindow ( view.getWindowToken () , 0 ) ; bottomNavigationBar.show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addLoop () { currentLoop = new ir.cfgraph.Loop () ; try { if ( ( startingBlock ) == null ) { currentBlock = startingBlock = currentLoop; } else if ( ( currentBlock ) instanceof ir.cfgraph.ControlFlow ) { ir.cfgraph.ControlFlow cf = ( ( ir.cfgraph.ControlFlow ) ( currentBlock ) ) ; controlFlowStack.push ( currentBlock ) ; if ( cf.isComplete () ) currentBlock.setSuccessor ( currentBranch ) ; else cf.addBlock ( currentLoop ) ; } else currentBlock.setSuccessor ( currentLoop ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentBlock = currentLoop; } 
private edu.utsa.fileflow.client.fileflow.VariableAutomaton getValue ( edu.utsa.fileflow.client.fileflow.FileFlowAnalysisDomain domain, edu.utsa.fileflow.cfg.FlowPointContext context ) { edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ctx = ( ( edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ) ( context.getContext () ) ) ; edu.utsa.fileflow.antlr.FileFlowParser.ValueContext v = ctx.value ( 0 ) ; try { if ( ( v.Variable () ) != null ) return domain.table.get ( v.Variable () .getText () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new edu.utsa.fileflow.client.fileflow.VariableAutomaton ( v.String () .getText () ) ; } 
private se.fredsfursten.donationboardplugin.PlayerInfo getOrAddPlayerInfo ( org.bukkit.entity.Player player ) { se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = this._knownPlayers.get ( player ) ; try { if ( playerInfo == null ) { playerInfo = new se.fredsfursten.donationboardplugin.PlayerInfo ( player ) ; this._knownPlayers.put ( player, playerInfo ) ; int toLevel = this._model.getDonationLevel ( 0 ) ; playerInfo.demoteOrPromote ( toLevel ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return playerInfo; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder () .permitAll () .build () ; try { android.os.StrictMode.setThreadPolicy ( policy ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_scan ) ; integrator = new com.google.zxing.integration.android.IntentIntegrator ( this ) ; integrator.setDesiredBarcodeFormats ( IntentIntegrator.ONE_D_CODE_TYPES ) ; integrator.setPrompt ( "Scan a barcode" ) ; integrator.setBeepEnabled ( true ) ; integrator.initiateScan () ; } 
private java.util.Vector calculateMeanPoint ( java.util.List<? extends data.Data> dataSet ) { double[] meanPoint = new double[argumentsCount]; for ( data.Data data : dataSet ) { for ( int i = 0; i < ( argumentsCount ) ; i++ ) { meanPoint[i] += data.getValueAt ( i ) ; } } try { for ( int i = 0; i < ( argumentsCount ) ; i++ ) { meanPoint[i] /= dataSet.size () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.util.Vector ( meanPoint ) ; } 
public static java.lang.Throwable getRootCause ( java.lang.Throwable t ) { if ( t == null ) { return null; } java.lang.Throwable rootCause = t; java.lang.Throwable cause = rootCause.getCause () ; try { while ( ( cause != null ) && ( cause != rootCause ) ) { rootCause = cause; cause = cause.getCause () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return rootCause; } 
public void testPlayer ( java.lang.String player, org.bukkit.command.CommandSender sender ) { try { if ( playerOnline ( player ) ) { sender.sendMessage ( ( ( ( ( ( ( ( ( ( ( ( ( ChatColor.GOLD ) + "" ) + ( ChatColor.MAGIC ) ) + "aaaaa" ) + ( ChatColor.RED ) ) + player ) + ( ChatColor.GOLD ) ) + "is online!" ) + ( ChatColor.MAGIC ) ) + "aaaaa" ) + ( ChatColor.GOLD ) ) + "\nRejoice!" ) ) ; } else { sender.sendMessage ( ( player + "is not online!" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { if ( requestCode == ( CAMERA_PIC_REQUEST ) ) { if ( data != null ) { android.graphics.Bitmap image = ( ( android.graphics.Bitmap ) ( data.getExtras () .get ( "data" ) ) ) ; android.widget.ImageView imageview = ( ( android.widget.ImageView ) ( findViewById ( R.id.imglogo ) ) ) ; imageview.setImageBitmap ( image ) ; new com.example.audi.uaspenir.Main.PostTask () .execute ( imageToString ( image ) , "test" ) ; buatsnackbar ( "Uploading image . . ." ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onTriggered () { try { if ( ( tilemap ) != null ) { int[] dims = getNumberPair ( "Please enter the new dimensions?" ) ; if ( dims == null ) return; for ( int i = 0; i < ( tilemap.getLayerCount () ) ; i++ ) { tilemap.getLayer ( i ) .resize ( dims[0], dims[1] ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addNewLevelUpEvent ( long buildingID ) { com.greenfox.jasper.domain.Building temporaryBuilding = buildingServices.findOneBuilding ( ( ( int ) ( buildingID ) ) ) ; com.greenfox.jasper.services.MainEvent levelUpEvent = new com.greenfox.jasper.services.LevelUpEvent ( ( ( java.lang.System.currentTimeMillis () ) + ( calculateBuildingTime ( temporaryBuilding ) ) ) , buildingID ) ; try { mainEventRepo.save ( levelUpEvent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public android.view.View getView ( int position, android.view.View convertView, android.view.ViewGroup parent ) { android.widget.ImageView imageView = new android.widget.ImageView ( context ) ; android.graphics.Bitmap ThumbImage = android.media.ThumbnailUtils.extractThumbnail ( android.graphics.BitmapFactory.decodeFile ( imageIDs.get ( position ) ) , 200, 200 ) ; imageView.setImageBitmap ( ThumbImage ) ; try { imageView.setLayoutParams ( new android.widget.Gallery.LayoutParams ( 200, 200 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return imageView; } 
public void removeStatsProvider ( org.osgi.framework.ServiceReference<org.inaetics.demonstrator.api.stats.StatsProvider> serviceRef, org.inaetics.demonstrator.api.stats.StatsProvider provider ) { if ( "true".equals ( serviceRef.getProperty ( "aggregator" ) ) ) { m_aggregator = null; } java.lang.String type = "" + ( serviceRef.getProperty ( "type" ) ) ; try { if ( "processor".equalsIgnoreCase ( type ) ) { m_processorCount.decrementAndGet () ; } else if ( "producer".equalsIgnoreCase ( type ) ) { m_producerCount.decrementAndGet () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } m_providerStats.remove ( serviceRef ) ; info ( ( "added statsprovider of type " + type ) ) ; } 
public java.util.ArrayList<java.lang.String> getTables () { if ( ( _primary ) == null ) { return null; } java.util.ArrayList<ragnardb.parser.ast.TableOrSubquery> tables = _primary.getTablesAndSubqueries () ; java.util.ArrayList<java.lang.String> out = new java.util.ArrayList<> () ; try { for ( ragnardb.parser.ast.TableOrSubquery table : tables ) { out.add ( table.getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return out; } 
public java.lang.String parseStepsHash () { java.lang.String outputString = ""; try { for ( java.lang.String term : steps.keySet () ) { java.lang.String value = steps.get ( term ) ; java.lang.String lineToAdd = ( ( ( ( ( "\"" + term ) + "\"" ) + ": " ) + value ) + "," ) + "\n"; outputString = outputString + lineToAdd; } } catch ( Exception ex ) { ex.printStackTrace () ; } return outputString; } 
public void start () { try { if ( ! ( mRunning ) ) { android.util.Log.i ( ch.logixisland.anuto.game.GameEngine.TAG, "Starting game loop" ) ; mRunning = true; mGameHandler.post ( new java.lang.Runnable () { @java.lang.Override public void run () { tick () ; } } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void printPlainMessage ( objects.PlainMessage message ) { java.lang.System.out.println () ; java.lang.System.out.println ( message.getMessageText () ) ; try { java.lang.System.out.println ( java.util.Arrays.toString ( message.getMessageDecimalArray () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( message.getMessageHex () ) ; java.lang.System.out.println ( message.getMessageBinary () ) ; } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth ) { monthOfYear = monthOfYear + 1; try { dates = ( ( ( ( java.lang.Integer.toString ( dayOfMonth ) ) + "/" ) + ( java.lang.Integer.toString ( monthOfYear ) ) ) + "/" ) + ( java.lang.Integer.toString ( year ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void increaseWorkSpaceLevel ( de.dfki.vsm.editor.Node node ) { mIgnoreMouseInput = true; clearCurrentWorkspace () ; de.dfki.vsm.model.sceneflow.SuperNode superNode = ( ( de.dfki.vsm.model.sceneflow.SuperNode ) ( node.getDataNode () ) ) ; getSceneFlowManager () .addActiveSuperNode ( superNode ) ; mSceneFlowEditor.addPathComponent ( superNode ) ; mGridManager.update ( superNode ) ; try { showCurrentWorkSpace () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected sentimentAnalysis.ScoreNode getNode ( edu.emory.clir.clearnlp.dependency.DEPNode node, java.util.Map<java.lang.String, java.lang.Double> map ) { double score = 0; double intensity = getIntensity ( node ) ; try { if ( map.containsKey ( node.getLemma () ) ) { score = map.get ( node.getLemma () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } sentimentAnalysis.ScoreNode sNode = new sentimentAnalysis.ScoreNode ( node.getLemma () , score, intensity ) ; return sNode; } 
protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @org.jetbrains.annotations.NotNull java.lang.String name ) { org.apache.ignite.configuration.CacheConfiguration<?, ?> cache = defaultCacheConfiguration () ; try { cache.setName ( name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cache.setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache.setBackups ( 1 ) ; cache.setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache.setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; return cache; } 
static java.util.Optional<edu.cwru.eecs.clipper.Models.UserAccount> convertToUserAccount ( org.bson.Document result ) { java.util.Optional<edu.cwru.eecs.clipper.Models.UserAccount> userAccountOptional = java.util.Optional.empty () ; try { if ( ( result != null ) && ( ! ( result.getBoolean ( "isDeleted", false ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager.convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional.of ( userAccount ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return userAccountOptional; } 
protected static java.lang.String getBNpos_ro ( java.util.Map<java.lang.String, it.uniroma1.lcl.babelnet.data.BabelPOS> posMapping, java.lang.String pos ) { java.lang.String pos5chars = ""; if ( ( pos.length () ) > 1 ) { pos5chars = pos.substring ( 0, 5 ) ; } else { return null; } it.uniroma1.lcl.babelnet.data.BabelPOS bnPos = posMapping.get ( pos5chars.toUpperCase () ) ; try { if ( bnPos == null ) { return null; } else { return bnPos.toString () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setNetworkProperties ( java.util.Collection<org.ndexbio.model.object.NdexPropertyValuePair> properties, java.util.Collection<org.ndexbio.model.object.SimplePropertyValuePair> presentationProperties ) { try { if ( properties != null ) { this.network.getProperties () .addAll ( properties ) ; this.networkDoc.field ( NdexClasses.ndexProperties, properties ) .save () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onInitViewContent () { super.onInitViewContent () ; try { formSwitcher.setText ( R.string.show_more_details ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( org.unicef.rapidreg.base.record.RecordActivity ) ( getActivity () ) ) .getCurrentFeature () .isDetailMode () ) { editButton.setVisibility ( View.VISIBLE ) ; } } 
public java.util.List<org.egov.works.models.masters.ScheduleOfRate> getSORList () { try { if ( ( ( estimateId ) != null ) && ( ( estimateDate ) != null ) ) return scheduleOfRateService.getScheduleOfRatesByCodeAndScheduleOfCategories ( query, scheduleCategoryId.toString () , estimateDate ) ; else if ( ( estimateDate ) != null ) return scheduleOfRateService.getScheduleOfRatesByCodeAndScheduleOfCategories ( query, scheduleCategoryId.toString () , estimateDate ) ; else return scheduleOfRateService.getScheduleOfRatesByCodeAndScheduleOfCategories ( query, scheduleCategoryId.toString () , estimateDate ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.BeforeClass public static void setUpClass () { org.holodeckb2b.integ.OutFlowIT.itHelper = new org.holodeckb2b.integ.ITHelper () ; org.holodeckb2b.integ.OutFlowIT.itHelper.unzipHolodeckDistribution ( org.holodeckb2b.integ.OutFlowIT.dADirName ) ; org.holodeckb2b.integ.OutFlowIT.itHelper.unzipHolodeckDistribution ( org.holodeckb2b.integ.OutFlowIT.dBDirName ) ; org.holodeckb2b.integ.OutFlowIT.itHelper.copyPModeDescriptor ( org.holodeckb2b.integ.OutFlowIT.dADirName, "ex-pm-push-init.xml" ) ; org.holodeckb2b.integ.OutFlowIT.itHelper.copyPModeDescriptor ( org.holodeckb2b.integ.OutFlowIT.dBDirName, "ex-pm-push-resp.xml" ) ; org.holodeckb2b.integ.OutFlowIT.itHelper.modifyAxisServerPort ( org.holodeckb2b.integ.OutFlowIT.dBDirName, "9090" ) ; try { org.holodeckb2b.integ.OutFlowIT.itHelper.startHolodeckB2BInstances ( org.holodeckb2b.integ.OutFlowIT.dADirName, org.holodeckb2b.integ.OutFlowIT.dBDirName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.holodeckb2b.integ.OutFlowIT.itHelper.copyExampleDataToMsgOutDir ( org.holodeckb2b.integ.OutFlowIT.dADirName ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group, int checkedId ) { int selected = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) .getCheckedRadioButtonId () ; if ( selected == ( R.id.createMatchRadioButtonJunior ) ) { radioGroupLevelSelection = 1; } else if ( selected == ( R.id.createMatchRadioButtonSenior ) ) { radioGroupLevelSelection = 2; } try { filterAndRefresh ( radioGroupLevelSelection ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void registerSingleThreadVirtualTarget ( java.lang.Thread thread, java.lang.String targetName ) { pj.pr.target.VirtualTarget virtualTarget = pj.PjRuntime.targetExecutorMap.get ( targetName ) ; try { if ( null == virtualTarget ) { virtualTarget = new pj.pr.target.SingleThreadVirtualTarget ( targetName, thread ) ; pj.PjRuntime.targetExecutorMap.put ( targetName, virtualTarget ) ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString.equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random.nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES[ind]; } try { getOptimalResultForBoardPosition ( board, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return optimalMoveFromBoardPosition.get ( boardAsString ) ; } 
@ java.lang.Override public void calculateRedpacksPrize ( cn.wisdom.lottery.dao.vo.Lottery lottery ) { try { if ( cn.wisdom.lottery.common.utils.CollectionUtils.isNotEmpty ( lottery.getRedpacks () ) ) { int totalBonus = lottery.getPeriods () .get ( 0 ) .getPrizeBonus () ; float bonus = 0; for ( cn.wisdom.lottery.dao.vo.LotteryRedpack lotteryRedpack : lottery.getRedpacks () ) { bonus = ( totalBonus * ( lotteryRedpack.getRate () ) ) / 100; lotteryRedpack.setPrizeBonus ( bonus ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void passMessagesToLeaves ( int i ) { node.Node from = getNodeFromId ( i ) ; if ( from.isLeaf () ) { from = from.getNeighborList () .get ( 0 ) ; } try { for ( node.Node to : from.getNeighborList () ) { from.passMessageTo ( to ) ; passMessagesToLeaves2 ( to, from ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter> encountersSince ( org.joda.time.LocalDate dateOfBirth ) { java.util.ArrayList<org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter> encounters = new java.util.ArrayList<org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter> () ; org.joda.time.LocalDate currentDate = dateOfBirth; org.joda.time.LocalDate today = new org.joda.time.LocalDate () ; try { while ( currentDate.isBefore ( today ) ) { encounters.add ( encounterGenerator.nextEncounter ( currentDate ) ) ; currentDate = currentDate.plusDays ( ( ( int ) ( ( ( java.lang.Math.random () ) * 365 ) * ( org.neo4j.data.generator.domains.medicalrecords.encounters.EncounterSequenceGenerator.MAX_YEARS_BETWEEN_ENCOUNTERS ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return encounters; } 
private void setMediaSessionMetaData () { if ( ( mediaSession ) == null ) { return; } android.support.v4.media.MediaMetadataCompat.Builder builder = new android.support.v4.media.MediaMetadataCompat.Builder () .putString ( MediaMetadataCompat.METADATA_KEY_ARTIST, metaDataArtist ) .putString ( MediaMetadataCompat.METADATA_KEY_ALBUM, metaDataAlbum ) .putString ( MediaMetadataCompat.METADATA_KEY_TITLE, metaDataTitle ) .putBitmap ( MediaMetadataCompat.METADATA_KEY_ALBUM_ART, android.graphics.BitmapFactory.decodeResource ( getResources () , R.drawable.icon ) ) ; if ( ( textInterface ) != null ) { builder.putLong ( MediaMetadataCompat.METADATA_KEY_DURATION, textInterface.getTotalDuration () ) ; } try { mediaSession.setMetadata ( builder.build () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void captureTerritory ( gottesman.risk.Player activePlayer, gottesman.risk.Territory selectedTerritory, gottesman.risk.map.TerritoryView territoryView, gottesman.risk.Territory territory ) { int battalionNum = java.lang.Integer.parseInt ( javax.swing.JOptionPane.showInputDialog ( null, "Enter the amount of battalions you would like to move." ) ) ; try { if ( battalionNum >= ( selectedTerritory.getBattalions () ) ) { javax.swing.JOptionPane.showMessageDialog ( selectedTerritoryView, "Cannot move this amount of battalions. Try again." ) ; return; } else { territory.occupy ( activePlayer ) ; selectedTerritory.moveBattalionsTo ( territory, battalionNum ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } selectedTerritoryView.repaint () ; territoryView.repaint () ; selectTerritory ( territoryView ) ; } 
public static com.badlogic.gdx.scenes.scene2d.ui.CheckBox addCheckBox ( java.lang.String labelText, com.badlogic.gdx.scenes.scene2d.ui.Table parent, com.badlogic.gdx.scenes.scene2d.ui.Skin skin ) { com.badlogic.gdx.scenes.scene2d.ui.CheckBox info = new com.badlogic.gdx.scenes.scene2d.ui.CheckBox ( labelText, skin ) ; try { parent.add ( info ) .right () .fillX () .expandX () .row () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return info; } 
@ java.lang.Override public void tick ( kcl.teamIndexZero.traffic.simulator.data.SimulationTick tick ) { CurrentDate = ( new java.util.Date () .getTime () ) / 1000; try { if ( ( ( CurrentDate ) - ( lastChange ) ) > ( timer ) ) { if ( ( modelSet ) != null ) { modelSet.changeColour ( model, model.currentState ) ; lastChange = CurrentDate; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onKey ( android.view.View v, int keyCode, android.view.KeyEvent event ) { try { if ( ( event.getAction () ) == ( android.view.KeyEvent.ACTION_DOWN ) ) { switch ( keyCode ) { case android.view.KeyEvent.KEYCODE_ENTER: rightGuess () ; return true; default: break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void handleIntent ( android.content.Intent intent ) { try { if ( Intent.ACTION_SEARCH.equals ( intent.getAction () ) ) { java.lang.String query = intent.getStringExtra ( SearchManager.QUERY ) ; cursor = com.example.adao1.project2.DatabaseHelper.getInstance ( this ) .getShop ( query ) ; searchCursorAdapter.swapCursor ( cursor ) ; searchCursorAdapter.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String optionsToString () { java.lang.StringBuilder b = new java.lang.StringBuilder () ; b.append ( index ) .append ( "\n" ) ; b.append ( heightLevel ) .append ( "\n" ) ; b.append ( oceanLevel ) .append ( "\n" ) ; try { b.append ( getOceanReplacement () ) .append ( "\n" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } b.append ( cloudLevel ) .append ( "\n" ) ; b.append ( ( geostrataGen ? 1 : 0 ) ) ; return b.toString () ; } 
public com.emc.hpux.model.HpuxVersion getHpuxMinimumVersion ( boolean forceLookup ) { try { if ( forceLookup || ( ( hpuxVersion ) == null ) ) { java.lang.String versionProp = this.getSysProperty ( com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP ) ; if ( isValidVersionNumber ( versionProp ) ) { hpuxVersion = new com.emc.hpux.model.HpuxVersion ( versionProp ) ; } else { hpuxVersion = null; throw new java.lang.IllegalStateException ( java.lang.String.format ( "System property for HPUX Version Number ( %s ) is invalid - value is '%s'", com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP, versionProp ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return hpuxVersion; } 
public void inverseClicked ( android.view.View v ) { android.widget.TextView textView2 = ( ( android.widget.TextView ) ( findViewById ( R.id.textView2 ) ) ) ; try { tempNum = java.lang.Double.parseDouble ( textView2.getText () .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tempNum = ( tempNum ) * ( -1 ) ; textView2.setText ( java.lang.String.valueOf ( tempNum ) ) ; } 
@ org.junit.Test public void testResultReturnsModelAndView () throws java.lang.Exception { org.springframework.mock.web.MockHttpSession session = new org.springframework.mock.web.MockHttpSession () ; org.springframework.web.servlet.ModelAndView actual = portal.result ( session, "", "", "", "" ) ; org.junit.Assert.assertEquals ( "result", actual.getViewName () ) ; try { org.junit.Assert.assertEquals ( null, actual.getModel () .get ( "themes" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( "", actual.getModel () .get ( "query" ) ) ; } 
@ java.lang.Override public void run () { if ( ( getAudioService () ) != null ) { setMilliseconds ( ( ( ( drawSurfaceWidth / ( ( float ) ( getAudioService () .getSampleRate () ) ) ) * 1000 ) / 2 ) ) ; } try { setMillivolts ( ( ( ( ( ( ( float ) ( drawSurfaceHeight ) ) / 4.0F ) / 24.5F ) / 1000 ) * ( com.backyardbrains.utils.BYBConstants.millivoltScale ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean refreshUser () { try { mUser = mSession.getDataHandler () .getStore () .getUser ( mMemberId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( null == ( mUser ) ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId; mUser.displayname = getIntent () .getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils.isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId; } mUser.avatar_url = getIntent () .getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; return true; } return false; } 
private boolean validateQuantity () { int quantity = java.lang.Integer.valueOf ( subgroupsQuantity.getText () .toString () ) ; try { if ( quantity > ( getMaximumQuantity () ) ) { subgroupsQuantityLayout.setError ( getString ( R.string.nwinners_msg_validate_quantity, getMaximumQuantity () ) ) ; requestFocus ( subgroupsQuantity ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private static void addBodyIfExists ( java.net.HttpURLConnection connection, com.android.volley.Request<?> request ) throws com.android.volley.AuthFailureError, java.io.IOException { byte[] body = request.getBody () ; try { connection.addRequestProperty ( com.android.volley.toolbox.HurlStack.HEADER_CONTENT_TYPE, request.getBodyContentType () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( body != null ) { connection.setDoOutput ( true ) ; java.io.DataOutputStream out = new java.io.DataOutputStream ( connection.getOutputStream () ) ; out.write ( body ) ; out.close () ; } } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, @android.support.annotation.NonNull java.lang.String[] permissions, @android.support.annotation.NonNull int[] grantResults ) { com.iven.i7helper.util.LocationUtil lu = com.iven.i7helper.util.LocationUtil.getLocationUtil () ; try { switch ( requestCode ) { case 1: if ( ( grantResults.length ) > 0 ) { for ( int i : grantResults ) { if ( i != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { com.iven.i7helper.util.ToolUtil.showMessage ( this, "不给权限会导致记录不准确" ) ; return; } } lu.requestLocation () ; } break; default: } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.List<java.lang.String> pick ( java.util.HashMap<java.lang.String, java.lang.Integer> map, int n ) { wedt.finder.ActualWikiFinder.ValueComparator bvc = new wedt.finder.ActualWikiFinder.ValueComparator ( map ) ; java.util.TreeMap<java.lang.String, java.lang.Integer> sorted = new java.util.TreeMap<> ( bvc ) ; sorted.putAll ( map ) ; java.util.ArrayList<java.lang.String> keys = new java.util.ArrayList<> () ; try { keys.addAll ( sorted.keySet () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( keys.size () ) > n ? keys.subList ( 0, n ) : keys; } 
private void updateLength () { int newLength = net.decix.jipfix.header.SetHeader.HEADERLENGTH; try { for ( net.decix.jipfix.header.TemplateRecord template : templateRecords ) { newLength += template.getLength () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( net.decix.jipfix.header.OptionTemplateRecord optionTemplate : optionTemplateRecords ) { newLength += optionTemplate.getLength () ; } for ( net.decix.jipfix.header.DataRecord record : dataRecords ) { newLength += record.getLength () ; } this.length = newLength; } 
private static java.lang.String loadECoreFile ( final java.lang.String name ) throws java.lang.Exception { try { assertTrue ( new java.io.File ( name ) .exists () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler.readDataFromXML ( name ) ; return umple.generateUmple () ; } 
public static java.util.List<com.teinproductions.tein.papyrosprogress.Milestone> getMilestones ( java.lang.String json ) throws java.text.ParseException, org.json.JSONException { org.json.JSONArray jArray = new org.json.JSONArray ( json ) ; java.util.List<com.teinproductions.tein.papyrosprogress.Milestone> result = new java.util.ArrayList<> () ; try { for ( int i = 0; i < ( jArray.length () ) ; i++ ) { result.add ( com.teinproductions.tein.papyrosprogress.JSONUtils.getMilestone ( jArray.getJSONObject ( i ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public static void addPlayer ( java.lang.String name ) { reachForTheTop.IO.createOutputFile ( ( ( "Scores\\" + name ) + ".reach" ) ) ; reachForTheTop.IO.println ( "times played: 0" ) ; reachForTheTop.IO.println ( "total: 0" ) ; try { reachForTheTop.IO.closeOutputFile () ; } catch ( Exception ex ) { ex.printStackTrace () ; } reachForTheTop.IO.createOutputFile ( "Scores\\names.txt", true ) ; reachForTheTop.IO.println ( name ) ; reachForTheTop.IO.closeOutputFile () ; } 
@ java.lang.Override public void start () { scenes.WorldScene.WorldSystem.NPC n = ( ( scenes.WorldScene.WorldSystem.WorldSystem ) ( parent ) ) .activeNPC; java.awt.FontMetrics fm = javax.swing.JFrame.getFrames () [0].getGraphics () .getFontMetrics () ; try { dialog = engine.StringUtils.wrap ( n.getDialog () , fm, ( ( engine.ContentPanel.INTERNAL_RES_W ) - 10 ) ) .toArray ( new java.lang.String[] {} ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } index = 0; } 
public boolean createNamedTerminal ( java.lang.String caption ) { if ( org.rstudio.core.client.StringUtil.isNullOrEmpty ( caption ) ) { createNewTerminal () ; return true; } try { if ( ! ( isCaptionAvailable ( caption ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } startTerminal ( nextTerminalSequence () , null, caption, null, true, ConsoleProcessInfo.DEFAULT_COLS, ConsoleProcessInfo.DEFAULT_ROWS, TerminalShellInfo.SHELL_DEFAULT, false, null ) ; return true; } 
public void writeToFile () throws java.io.IOException { currentCollection = modelCol.getCollection () ; skrivFil1 = new java.io.FileWriter ( selectedCollection ) ; java.io.BufferedWriter writer = new java.io.BufferedWriter ( skrivFil1 ) ; java.io.PrintWriter printer = new java.io.PrintWriter ( writer ) ; for ( Item i : currentCollection ) { java.lang.String s = i.toString () ; printer.println ( s ) ; } try { if ( currentCollection.isEmpty () ) { skrivFil1 = new java.io.FileWriter ( selectedCollection ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } printer.close () ; } 
public void afterPropertiesSet () throws java.lang.Exception { int roundId = getRoundId () ; if ( roundId < 1 ) { return; } round = org.powertac.tournament.beans.Round.getRoundFromId ( roundId, false ) ; try { loadRoundInfo () ; } catch ( Exception ex ) { ex.printStackTrace () ; } loadParticipantInfo () ; loadCsvLinks () ; loadMaps () ; } 
private static boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref.getString ( Common.KEY_MODE, Common.VALUE_MODE_BLACKLIST ) ; try { if ( mode.equals ( Common.VALUE_MODE_AUTO ) ) { return true; } else if ( mode.equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref.getBoolean ( pkgName, false ) ; } else { return ! ( tw.fatminmin.xposed.minminguard.Main.pref.getBoolean ( tw.fatminmin.xposed.minminguard.Common.getWhiteListKey ( pkgName ) , false ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void doWithLockNoResult () { if ( ! ( sdSvc.isActiveService ( service ) ) ) { return; } java.util.List<io.cattle.platform.servicediscovery.deployment.impl.DeploymentUnit> units = unitInstanceFactory.collectDeploymentUnits ( services, new io.cattle.platform.servicediscovery.deployment.impl.DeploymentManagerImpl.DeploymentServiceContext () ) ; boolean needToReconcile = needToReconcile ( services, units ) ; if ( !needToReconcile ) { return; } try { activateServices ( service, services ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } activateDeploymentUnits ( services, units ) ; } 
@ java.lang.Override public void onTick ( net.frozenbit.plugin5zig.cubecraft.gamemodes.DuelsGameMode gameMode ) { super.onTick ( gameMode ) ; try { if ( ( gameMode.getState () ) != ( eu.the5zig.mod.server.GameState.LOBBY ) ) { ( timer ) ++; if ( ( ( timer ) % ( net.frozenbit.plugin5zig.cubecraft.listeners.DuelsListener.OPPONENT_UPDATE_INTERVAL ) ) == 0 ) { updateOpponentInfo ( gameMode ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.tvCensusForms: android.content.Intent categoryIntent = new android.content.Intent ( this, com.example.knbs.censusapp.CategoryActivity.class ) ; startActivity ( categoryIntent ) ; break; case R.id.tvEnumID: android.content.Intent enumeratorID = new android.content.Intent ( this, com.example.knbs.censusapp.EnumeratorIDActivity.class ) ; startActivity ( enumeratorID ) ; break; case R.id.tvTaskList: android.content.Intent taskList = new android.content.Intent ( this, com.example.knbs.censusapp.TaskLIstActivity.class ) ; startActivity ( taskList ) ; break; default: android.util.Log.i ( "DEFAULT ONCLICK OPT", "This is default switch mode" ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void nextSlide () { ( slide ) ++; try { if ( ( ( slide ) % 4 ) == 1 ) { Objectives () ; } else if ( ( ( slide ) % 4 ) == 2 ) { Turn () ; } else if ( ( ( slide ) % 4 ) == 3 ) { unitTable () ; } else if ( ( ( slide ) % 4 ) == 4 ) { shortcuts () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void handleIntent ( android.content.Intent intent ) { final int configScreenId = intent.getIntExtra ( org.droidplanner.android.activities.ConfigurationActivity.EXTRA_CONFIG_SCREEN_ID, mConfigScreenId ) ; final android.support.v4.app.Fragment currentFragment = getCurrentFragment () ; try { if ( ( currentFragment == null ) || ( ( getIdForFragment ( currentFragment ) ) != configScreenId ) ) { mConfigScreenId = configScreenId; getSupportFragmentManager () .beginTransaction () .replace ( R.id.configuration_screen, getFragmentForId ( configScreenId ) ) .commit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void usePotion () { try { for ( int i = 2; i >= 0; i-- ) { if ( ( this.potions[i] ) != null ) { heal ( 50 ) ; this.potions[i] = null; return; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { char letter; int a; final int MIN = 65; final int MAX = 122; final int STOPLINE1 = 85; final int STOPLINE2 = 122; for ( a = MIN; a <= MAX; a++ ) { letter = ( ( char ) ( a ) ) ; java.lang.System.out.print ( ( " " + letter ) ) ; if ( ( a == STOPLINE1 ) || ( a == STOPLINE2 ) ) java.lang.System.out.println () ; } try { java.lang.System.out.println ( "\nEnd of application" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setSPenToolActionWithAllCanvases ( int toolAction ) { try { for ( int i = 0; i < ( numWritableCharBoxCols ) ; i++ ) { for ( int j = 0; j < ( numCharBoxesInCol ) ; j++ ) { mCharBoxes[i][j].setToolTypeAction ( SpenSurfaceView.TOOL_SPEN, toolAction ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return; } 
@ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { mTextSeekBar.setText ( ( ( ( "Shutter Speed ( in ns ) :" + ( ( mSeekbar.getProgress () ) + ShutterSpeed1 ) ) + "/" ) + ( java.lang.Math.round ( ( ( mSeekbar.getMax () ) + ShutterSpeed1 ) ) ) ) ) ; try { android.widget.Toast.makeText ( getApplicationContext () , "Setting Shutter Speed", Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } ShutterSpeedValue = ( mSeekbar.getProgress () ) + ShutterSpeed1; if ( ( AutoNumber ) != 1 ) { AutoNumber = 1; } startPreview () ; } 
public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException, org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char[] cbuf = new char[1024]; int length; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; try { while ( ( length = reader.read ( cbuf ) ) != ( -1 ) ) { strBuffer.append ( cbuf, 0, length ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String strSource = strBuffer.toString () ; return parse ( strSource ) ; } 
public org.tiogasolutions.couchace.core.api.request.PutDesignRequest design ( java.lang.String designName, java.net.URL designFile, java.lang.String documentRevision ) { org.tiogasolutions.couchace.core.internal.util.ArgUtil.assertNotNull ( designName, "designName" ) ; org.tiogasolutions.couchace.core.internal.util.ArgUtil.assertNotNull ( designFile, "designFile" ) ; try { org.tiogasolutions.couchace.core.internal.util.ArgUtil.assertNotNull ( documentRevision, "documentRevision" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String designBody = org.tiogasolutions.couchace.core.internal.util.IOUtil.readText ( designFile ) ; return new org.tiogasolutions.couchace.core.api.request.PutDesignRequest ( requestExecutor, designName, designBody, documentRevision ) ; } 
public void hideSoftInput () { android.view.View view = ( ( android.app.Activity ) ( context ) ) .getCurrentFocus () ; if ( view == null ) view = new android.view.View ( context ) ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( context.getSystemService ( Activity.INPUT_METHOD_SERVICE ) ) ) ; if ( imm == null ) return; try { imm.hideSoftInputFromWindow ( view.getWindowToken () , 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean configChanged () { int currentConfigHash = this.configProps.hashCode () ; boolean configChanged = ( ( propsHashCode ) != null ) && ( ( this.propsHashCode ) != currentConfigHash ) ; try { if ( configChanged && ( net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER.isDebugEnabled () ) ) net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER.debug ( "Changes in configuration properties file detected." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.propsHashCode = currentConfigHash; return configChanged; } 
public static void showErroDialog ( android.content.Context c ) { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( c ) ; alert.setMessage ( "哎呀，居然发生错误了，是不是没有安装这个程序呢 : ( " ) ; alert.setPositiveButton ( "确定", null ) ; alert.setCancelable ( false ) ; try { alert.create () ; } catch ( Exception ex ) { ex.printStackTrace () ; } alert.show () ; } 
private void updateYData () { try { top = - ( ( int ) ( java.lang.Math.round ( ( ( ( roundY2 ) - ( roundY1 ) ) / 2.0 ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bottom = ( ( top ) + ( roundY2 ) ) - ( roundY1 ) ; } 
public void onAudioFocusChange ( int focusChange ) { try { if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT ) ) { mPlayTimer.stop () ; mMediaPlayer.pause () ; } else if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_GAIN ) ) { } else if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_LOSS ) ) { mAudioManager.abandonAudioFocus ( this ) ; mPlayTimer.stop () ; mMediaPlayer.pause () ; unregisterAudio () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mContext.updateSongView () ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View v = inflater.inflate ( R.layout.second_frag, container, false ) ; try { currentCarIndex = getArguments () .getInt ( "current_car", 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentCar = com.twild.gastracker.ActivityListOfCars.carList.get ( currentCarIndex ) ; return v; } 
@ java.lang.Override @java.lang.SuppressWarnings ( value = "unchecked" ) public java.util.List<org.n52.series.api.v1.db.da.beans.ProcedureEntity> getAllInstances ( org.n52.series.api.v1.db.da.DbQuery parameters ) throws org.n52.series.api.v1.db.da.DataAccessException { org.hibernate.Criteria criteria = getDefaultCriteria ( "procedure" ) ; try { if ( hasTranslation ( parameters, org.n52.series.api.v1.db.da.beans.I18nProcedureEntity.class ) ) { parameters.addLocaleTo ( criteria, org.n52.series.api.v1.db.da.beans.I18nProcedureEntity.class ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } criteria = parameters.addDetachedFilters ( "procedure", criteria ) ; parameters.addPagingTo ( criteria ) ; return ( ( java.util.List<org.n52.series.api.v1.db.da.beans.ProcedureEntity> ) ( criteria.list () ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( view.getContext () , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( view.getContext () , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } try { locationManager.requestLocationUpdates ( "gps", 5000, 0, locationListener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void restartGame () { this.instanceGame.getScheduler () .restoreSpeed () ; deleteArray ( snake ) ; deleteArray ( foodInBonus ) ; matrix[xFood][yFood].setBackground ( this.instanceGame.getBackgroundGame () ) ; matrix[xFood][yFood].setIcon ( null ) ; startGame () ; try { this.instanceGame.updateScore ( score ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String getDomainName ( java.lang.String url ) throws java.net.URISyntaxException { java.net.URI uri = new java.net.URI ( url ) ; java.lang.String domain = uri.getHost () ; try { if ( domain == null ) { return url.replaceAll ( "www.", "" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return domain.replaceAll ( "www.", "" ) ; } 
private void addDeveloperFromInput () { int id = readIdFromInput () ; com.homelearning.model.Developer developer = developerController.getById ( id ) ; try { if ( developer == null ) { developerController.save ( new com.homelearning.model.Developer ( id, readFirstNameFromInput () , readLastNameFromInput () , readSpecialtyFromInput () , readExperienceFromInput () , readSalaryFromInput () ) ) ; } else { java.lang.System.out.printf ( "Developer with id %d already exists:\n", id ) ; java.lang.System.out.println ( developer ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { mProfile = dataSnapshot.getValue ( mobi.devteam.demofalldetector.model.Profile.class ) ; if ( ( mProfile ) == null ) return; age = mProfile.getAge () ; bmi = ( mProfile.getWeight () ) / ( java.lang.Math.sqrt ( mProfile.getHeight () ) ) ; isMale = mProfile.isMale () ; threshold_1 = mProfile.getThresh1 () ; threshold_2 = mProfile.getThresh2 () ; threshold_3 = mProfile.getThresh3 () ; try { add_threshold_value () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public net.openchrom.msd.converter.supplier.cms.model.IIonMeasurement getIonMeasurement ( int scanIndex ) { try { if ( ! ( isMinMaxSignalCalculated () ) ) { updateSignalLimits () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( scanIndex >= 0 ) && ( scanIndex < ( ionMeasurements.size () ) ) ) { return ionMeasurements.get ( scanIndex ) ; } else { return null; } } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { try { if ( ( ( remain.length () ) == 0 ) && ( ( e.getKeyCode () ) != ( java.awt.event.KeyEvent.VK_ENTER ) ) ) { e.consume () ; retype () ; } else { java.lang.String item = "%d %d 0"; long curTime = java.lang.System.currentTimeMillis () ; records.add ( java.lang.String.format ( item, curTime, e.getKeyCode () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.util.Optional<java.nio.file.Path> expandFilename ( java.lang.String filename, java.nio.file.Path directory ) { java.util.Objects.requireNonNull ( filename ) ; try { java.util.Objects.requireNonNull ( directory ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.nio.file.Path file = java.nio.file.Paths.get ( filename ) ; if ( filename.isEmpty () ) { return java.util.Optional.of ( directory ) ; } java.nio.file.Path resolvedFile = directory.resolve ( file ) ; if ( java.nio.file.Files.exists ( resolvedFile ) ) { return java.util.Optional.of ( resolvedFile ) ; } else { return java.util.Optional.empty () ; } } 
@ java.lang.Override public int hashCode () { int hash = 7; try { hash = ( 53 * hash ) + ( this.topLeft.hashCode () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } hash = ( 53 * hash ) + ( this.bottomRight.hashCode () ) ; return hash; } 
public void clear () { mTotal = 0; mLayoutManager.setLayoutHelpers ( null ) ; try { for ( android.util.Pair<com.alibaba.android.vlayout.DelegateAdapter.AdapterDataObserver, com.alibaba.android.vlayout.DelegateAdapter.Adapter> p : mAdapters ) { p.second.unregisterAdapterDataObserver ( p.first ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mItemTypeAry.clear () ; mAdapters.clear () ; } 
protected boolean setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { try { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView.equals ( newView ) ) ) ) return false; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView; currentNetworkView = newView; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels.values () ) tp.update ( false ) ; firePropertyChange ( "currentNetworkView", oldView, newView ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void start () { try { if ( ! ( lazyMode ) ) { if ( ! ( ( ( itemProperty () .getValue () ) == null ) && ( ( beanProperty () .getValue () ) == null ) ) ) { reSchedule ( null ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void removeTransform ( org.bukkit.entity.Player player ) { try { org.bukkit.Bukkit.getServer () .dispatchCommand ( org.bukkit.Bukkit.getConsoleSender () , ( "clearskin " + ( player.getName () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sendMessage ( player, "You look like yourself again." ) ; sendMessage ( player, strWarnMessage ) ; } 
public ar.edu.unq.chasqui.model.Direccion obtenerDireccionPredeterminada () { try { for ( ar.edu.unq.chasqui.model.Direccion d : this.getDireccionesAlternativas () ) { if ( d.getPredeterminada () ) { return d; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( this.getDireccionesAlternativas () ) != null ) && ( ( this.getDireccionesAlternativas () .size () ) > 0 ) ? this.getDireccionesAlternativas () .get ( 0 ) : null; } 
public void startTournament () throws java.lang.Exception { try { for ( int p1 = 0; p1 < ( players.size () ) ; p1++ ) { for ( int p2 = 0; p2 < ( players.size () ) ; p2++ ) { if ( p1 != p2 ) { startGame ( players.get ( p1 ) , players.get ( p2 ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.support.annotation.Nullable static android.net.Uri safeUri ( @android.support.annotation.NonNull java.lang.String url ) { try { if ( android.text.TextUtils.isEmpty ( url ) ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } android.net.Uri uri = android.net.Uri.parse ( url ) ; if ( ( android.text.TextUtils.isEmpty ( uri.getScheme () ) ) || ( android.text.TextUtils.isEmpty ( uri.getHost () ) ) ) { return null; } return uri; } 
@ java.lang.Override public void setRawData ( java.util.List<float[]> data ) { this.centroids = null; this.data = new edu.uc.rphash.tests.clusterers.KMeans2.PointND[data.size () ]; try { for ( int i = 0; i < ( data.size () ) ; i++ ) { this.data[i] = new edu.uc.rphash.tests.clusterers.KMeans2.PointND ( data.get ( i ) , 1, 0.0F ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void actOnResource ( org.fogbowcloud.blowout.pool.AbstractResource resource, java.util.List<org.fogbowcloud.blowout.core.model.Task> tasks ) { if ( resource.getState () .equals ( ResourceState.IDLE ) ) { org.fogbowcloud.blowout.core.model.Task task = chooseTaskForRunning ( resource, tasks ) ; if ( task != null ) { runTask ( task, resource ) ; } } try { if ( resource.getState () .equals ( ResourceState.TO_REMOVE ) ) { runningTasks.remove ( resource ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item ) { try { if ( item.getNodeName () .contentEquals ( "image" ) ) { com.badlogic.gdx.math.Vector2 offset = new com.badlogic.gdx.math.Vector2 () ; return com.emergentorganization.cellrpg.tools.map.MapLoader.parseImage ( item, offset ) ; } else if ( item.getNodeName () .contentEquals ( "#text" ) ) { } else { com.emergentorganization.cellrpg.tools.map.MapLoader.print ( ( ( "parsing for item " + ( item.getNodeName () ) ) + " is unsupported" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void reiniciar () throws java.lang.InterruptedException { damas_v1.Ficha f = new damas_v1.Ficha ( "·" ) ; try { for ( int i = 0; i < ( MAXFILAS ) ; i++ ) { for ( int j = 0; j < ( MAXCOLUMNAS ) ; j++ ) { casillero[i][j] = f; setChanged () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void editNoteFromTable ( java.lang.String title, java.lang.String text, java.lang.String deadline ) { com.leofesk.quicktodomanager.model.Database.updateCurrentNoteFromDatabase ( com.leofesk.quicktodomanager.controller.DataBaseWorker.currentNoteID, title, text, deadline, com.leofesk.quicktodomanager.controller.DataBaseWorker.note.getCreatedTime () , com.leofesk.quicktodomanager.controller.DataBaseWorker.note.getEndTime () , com.leofesk.quicktodomanager.controller.DataBaseWorker.note.getStatus () ) ; try { java.lang.System.out.println ( com.leofesk.quicktodomanager.controller.DataBaseWorker.note.getStatus () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.leofesk.quicktodomanager.controller.DataBaseWorker.updateTableData () ; } 
@ java.lang.Override public void seekToUs ( long positionUs ) { try { com.google.android.exoplayer.util.Assertions.checkState ( prepared ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.google.android.exoplayer.util.Assertions.checkState ( ( ( enabledTrackCount ) > 0 ) ) ; long currentPositionUs = ( isPendingReset () ) ? pendingResetPositionUs : downstreamPositionUs; downstreamPositionUs = positionUs; lastSeekPositionUs = positionUs; if ( currentPositionUs == positionUs ) { return; } seekToInternal ( positionUs ) ; } 
private android.graphics.Bitmap setBitmapSize ( int iconId, int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeResource ( getContext () .getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap.getWidth () ) ; try { bitmap = android.graphics.Bitmap.createScaledBitmap ( bitmap, ( ( int ) ( ( bitmap.getWidth () ) * s ) ) , ( ( int ) ( ( bitmap.getHeight () ) * s ) ) , true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return bitmap; } 
void onScanFilterEnableDisabled ( int action, int status, int clientIf ) { try { if ( com.android.bluetooth.gatt.GattService.DBG ) { android.util.Log.d ( com.android.bluetooth.gatt.GattService.TAG, ( ( ( ( ( "onScanFilterEnableDisabled () - clientIf=" + clientIf ) + ", status=" ) + status ) + ", action=" ) + action ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( status != 0 ) { } mStateMachine.callbackDone () ; } 
private void excludeCols ( final boolean[] checkedItems ) { int i = 1; assert null != checkedItems; assert null != ( this.templateModel ) ; try { for ( final boolean checkedItem : checkedItems ) { if ( checkedItem ) this.templateModel.addExcludeCol ( i ) ; i++; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private final boolean _log ( simple.util.logging.LogLevel type, java.lang.Object msg, byte options ) { try { if ( ! ( simple.util.logging.Log.isSet ( options, type ) ) ) return _out.checkError () ; } catch ( Exception ex ) { ex.printStackTrace () ; } synchronized ( writeSync ) { _out.print ( _getPreMessage ( type ) ) ; _out.print ( _cName ) ; _out.print ( ": " ) ; _out.println ( msg ) ; } return _out.checkError () ; } 
public static void find ( java.lang.String arg, java.util.List<java.lang.String> list ) { try { if ( ( list.indexOf ( arg ) ) == ( -1 ) ) { java.lang.System.out.printf ( "%s not in list\n", arg ) ; } else { java.lang.System.out.printf ( "%s in list at index %d\n", arg, list.indexOf ( arg ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean checkForAKind () { try { if ( ( ( findSameRank ( ( ( PJ5.SimplePoker.numberOfCards ) - 1 ) ) ) < 0 ) && ( ( kindCounter ) == 4 ) ) { java.lang.System.out.println ( "Four of a kind!" ) ; kindCounter = 0; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } kindCounter = 0; if ( ( ( findSameRank ( ( ( PJ5.SimplePoker.numberOfCards ) - 1 ) ) ) < 0 ) && ( ( kindCounter ) == 3 ) ) { java.lang.System.out.println ( "Three of a kind!" ) ; kindCounter = 0; return true; } kindCounter = 0; return false; } 
@ java.lang.Override public java.lang.String toString () { if ( ( id ) < 0 ) return "< New Session >"; java.lang.String result; org.joda.time.DateTime dt = new org.joda.time.DateTime ( date ) ; org.joda.time.format.DateTimeFormatter dtf = org.joda.time.format.DateTimeFormat.forPattern ( "E, MMM dd yyyy" ) ; try { result = dtf.print ( dt ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( sequenceNum ) > 0 ) { result += ( " ( " + ( sequenceNum ) ) + " ) "; } return result; } 
@ java.lang.Override public java.util.List<java.lang.String> getProperties ( java.lang.String player ) { java.util.List<java.lang.String> propertyList = new java.util.ArrayList<java.lang.String> () ; try { for ( a4.domain.Property curr : properties ) { if ( ( curr.getOwner () ) != null ) if ( curr.getOwner () .toString () .equals ( player ) ) { propertyList.add ( curr.toString () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return propertyList; } 
@ java.lang.Override public boolean onTouch ( android.view.View view, android.view.MotionEvent motionEvent ) { try { switch ( motionEvent.getAction () ) { case android.view.MotionEvent.ACTION_DOWN: password.setTransformationMethod ( null ) ; return true; case android.view.MotionEvent.ACTION_UP: password.setTransformationMethod ( new android.text.method.PasswordTransformationMethod () ) ; return false; default: return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setSize ( final java.lang.Long size ) { if ( ( ( getPrev () ) != null ) && ( ( getPrev () ) != 0 ) ) { final java.lang.Long prevSize = getObject () .getIntegerKey ( ASAtom.SIZE ) ; if ( prevSize > size ) { return; } } try { getObject () .setIntegerKey ( ASAtom.SIZE, size ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void init ( android.util.AttributeSet attrs, int defStyleAttr ) { android.content.res.TypedArray a = getContext () .obtainStyledAttributes ( attrs, R.styleable.SVGView, defStyleAttr, 0 ) ; svgId = a.getResourceId ( R.styleable.SVGView_carbon_src, 0 ) ; try { setColorFilter ( a.getColorStateList ( R.styleable.SVGView_carbon_filterColor ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } a.recycle () ; } 
public boolean validateDayOfWeek ( java.time.LocalDateTime currentTime ) { application.main.Business business = new application.main.Business () ; for ( int i = 0; i < ( business.getOpeningDays () .size () ) ; i++ ) { if ( business.getOpeningDays () .get ( i ) .equals ( currentTime.getDayOfWeek () ) ) { application.main.Utility.LOGGER.info ( "Valid business time" ) ; return true; } } try { application.main.Utility.LOGGER.info ( "Invalid business time" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_sub_category_layout ) ; mMainCategoryItem = ( ( com.accessbox.category.MainCategoryItem ) ( getIntent () .getSerializableExtra ( "Category" ) ) ) ; position = getIntent () .getIntExtra ( "position", 0 ) ; try { setupFab () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setUpAdapter () ; } 
public void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this, com.juliansparber.vpnMITM.UserAlertDialog.class ) ; try { intent.addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } intent.putExtra ( UserAlertDialog.PAYLOAD, ( ( java.lang.String[] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.String res ) { super.onPostExecute ( res ) ; try { if ( ( showRouteHandler ) != null ) { android.os.Message msg = showRouteHandler.obtainMessage ( com.jstakun.gms.android.ui.AsyncTaskManager.SHOW_ROUTE_MESSAGE, filename ) ; showRouteHandler.handleMessage ( msg ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( silent ) ) { intents.showInfoToast ( res ) ; } } 
public int compareTo ( main.hibernate.dao.RankingDao o ) { try { if ( ( this.betScore ) > ( o.getBetScore () ) ) return -1; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( this.betScore ) < ( o.getBetScore () ) ) return 1; return 0; } 
@ java.lang.Override public void onSuggestionClicked ( final com.arlib.floatingsearchview.suggestions.model.SearchSuggestion searchSuggestion ) { android.util.Log.d ( me.digi.examples.ca.MainActivity.TAG, "onSuggestionClicked () " ) ; mLastQuery = searchSuggestion.getBody () ; android.content.Intent i = new android.content.Intent ( this, me.digi.examples.ca.ProfileActivity.class ) ; try { i.putExtra ( "name", mLastQuery ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( i ) ; } 
public void onBindViewHolder ( com.example.android.windsordesignstudio.movieviewr.MovieFavoritesAdapter.MovieFavoritesAdapterViewHolder holder, int position ) { if ( ! ( mCursor.moveToPosition ( position ) ) ) return; android.content.Context context = holder.mMoviePoster.getContext () ; java.lang.String moviePoster = mCursor.getString ( mCursor.getColumnIndex ( FavoritesContract.FavoriteEntry.COLUMN_POSTER_FULL_PATH ) ) ; android.widget.ImageView poster = holder.mMoviePoster; try { com.squareup.picasso.Picasso.with ( context ) .load ( moviePoster ) .resize ( 600, 900 ) .into ( poster ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void keyDown ( java.lang.Integer keyInfo ) { java.lang.Integer count = 0; if ( com.Hook.common.RecordKeyboard.keyboardCount.containsKey ( keyInfo ) ) { count = com.Hook.common.RecordKeyboard.keyboardCount.get ( keyInfo ) ; } try { com.Hook.common.RecordKeyboard.keyboardCount.put ( keyInfo, ( ++count ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ++ ( com.Hook.common.RecordKeyboard.pressCount ) ; if ( ( ( com.Hook.common.RecordKeyboard.pressCount ) >= ( com.Hook.common.RecordKeyboard.flagTime ) ) && ( ( ( com.Hook.common.RecordKeyboard.pressCount ) % ( com.Hook.common.RecordKeyboard.flagTime ) ) == 0 ) ) { write () ; } } 
@ java.lang.Override public void subscribe ( final com.github.rxsockets.ObservableEmitter<io.socket.client.Socket> emitter ) throws java.lang.Exception { try { if ( ! ( connected.get () ) ) { if ( autoDisconnect ) { emitter.setDisposable ( new com.github.rxsockets.SocketConnectionDisposable ( socket, connected ) ) ; } socket.connect () ; connected.set ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } emitter.onNext ( socket ) ; } 
public void close ( ch.ninecode.cim.connector.CIMConnection connection ) { try { if ( null != connection ) if ( connection._Valid ) { connection.invalidate () ; javax.resource.spi.ConnectionEvent event = new javax.resource.spi.ConnectionEvent ( this, javax.resource.spi.ConnectionEvent.CONNECTION_CLOSED ) ; event.setConnectionHandle ( connection ) ; for ( javax.resource.spi.ConnectionEventListener listener : _Listeners ) listener.connectionClosed ( event ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String toString () { if ( ( head ) == null ) { return null; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head; while ( ( currentNode.getNext () ) != null ) { sb.append ( ( ( currentNode.getData () ) + " -> " ) ) ; currentNode = currentNode.getNext () ; } try { sb.append ( currentNode.getData () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return sb.toString () ; } 
public com.epam.indigo.IndigoObject exactMatch ( com.epam.indigo.IndigoObject obj1, com.epam.indigo.IndigoObject obj2, java.lang.String flags ) { if ( flags == null ) flags = ""; com.epam.indigo.IndigoObject[] parent = new com.epam.indigo.IndigoObject[] { obj1, obj2 }; try { setSessionID () ; } catch ( Exception ex ) { ex.printStackTrace () ; } int match = com.epam.indigo.Indigo.checkResult ( this, parent, com.epam.indigo.Indigo._lib.indigoExactMatch ( obj1.self, obj2.self, flags ) ) ; if ( match == 0 ) return null; return new com.epam.indigo.IndigoObject ( this, match, parent ) ; } 
public void update ( int direction ) { try { switch ( direction ) { case fr.esiea.ga.tetris.client.Model.Piece.DIR_BOTTOM: savePrevPosPiece () ; ( xPos ) ++; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_RIGHT: savePrevPosPiece () ; ( yPos ) ++; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_LEFT: savePrevPosPiece () ; ( yPos ) --; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_TOP: savePrevPosPiece () ; rotatePieceLeft () ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onScrollStateChanged ( android.support.v7.widget.RecyclerView recyclerView, int newState ) { try { super.onScrollStateChanged ( recyclerView, newState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int initialItemCount = mGridLayoutManager.findFirstCompletelyVisibleItemPosition () ; int totalItemCount = mGridLayoutManager.getItemCount () ; int lastVisisbleItemPosition = mGridLayoutManager.findLastCompletelyVisibleItemPosition () ; if ( ( ( totalItemCount - 1 ) == lastVisisbleItemPosition ) && ( initialItemCount > 0 ) ) { mInfiniteScrollListener.loadMoreData () ; } } 
private void createPanel () { final javax.swing.JPanel textPanel = createTextPanel ( "Instructions", getInstructions () ) ; try { this.add ( textPanel, java.awt.BorderLayout.NORTH ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } productSetPanel = new org.esa.snap.graphbuilder.rcp.dialogs.ProductSetPanel ( org.esa.snap.rcp.SnapApp.getDefault () .getAppContext () , null, new org.esa.snap.graphbuilder.rcp.dialogs.support.FileTable () , true, true ) ; this.add ( productSetPanel, java.awt.BorderLayout.CENTER ) ; } 
@ java.lang.Override public void doWrite ( java.io.DataOutput out ) throws java.io.IOException { out.writeInt ( this.seedList.size () ) ; try { for ( ml.shifu.shifu.core.dvarsel.CandidateSeed seed : this.seedList ) { out.writeInt ( seed.getId () ) ; java.util.List<java.lang.Integer> columnIdList = seed.getColumnIdList () ; out.writeInt ( columnIdList.size () ) ; for ( java.lang.Integer columnId : columnIdList ) { out.writeInt ( columnId ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean pressed ( java.lang.String key ) { try { if ( ( key == null ) || ( ( apcs.Window.keyMap ) == null ) ) return false; else if ( apcs.Window.keyMap.containsKey ( key ) ) return apcs.Window.getInstanceFromThread () .isVirtualKeyPressed ( apcs.Window.keyMap.get ( key ) ) ; else if ( ( key.length () ) > 0 ) return apcs.Window.key.pressed ( key.charAt ( 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void receive ( final org.thingml.java.ext.Event event, final org.thingml.java.Port p ) { try { if ( active.get () ) { event.setPort ( p ) ; queue.offer ( event ) ; if ( ( ( root ) == null ) && ( active.get () ) ) { for ( org.thingml.java.Component child : forks ) { final org.thingml.java.ext.Event child_e = event.clone () ; child.receive ( child_e, p ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @org.springframework.web.bind.annotation.RequestBody @javax.validation.Valid com.github.visola.familymenu.model.Person person, @org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository.findByName ( familyName ) ; try { if ( ( ( person.getFamily () ) != null ) && ( ! ( java.util.Objects.equals ( person.getFamily () .getId () , loadedFamily.getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } person.setFamily ( loadedFamily ) ; return personRepository.save ( person ) ; } 
@ java.lang.Override protected void init () throws cc.redpen.RedPenException { super.init () ; try { if ( ( getSymbolTable () .getLang () .equals ( "ja" ) ) && ( ! ( getConfigAttribute ( "min_len" ) .isPresent () ) ) ) getProperties () .put ( "min_len", 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void callbackRegister ( mcp.mobius.waila.api.IWailaRegistrar registrar ) { blusunrize.immersiveengineering.common.util.compat.waila.IEWailaDataProvider dataProvider = new blusunrize.immersiveengineering.common.util.compat.waila.IEWailaDataProvider () ; registrar.registerBodyProvider ( dataProvider, blusunrize.immersiveengineering.common.blocks.plant.BlockIECrop.class ) ; try { registrar.registerBodyProvider ( dataProvider, blusunrize.immersiveengineering.common.blocks.wooden.TileEntityWoodenBarrel.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } registrar.registerNBTProvider ( dataProvider, blusunrize.immersiveengineering.common.blocks.wooden.TileEntityWoodenBarrel.class ) ; registrar.registerStackProvider ( dataProvider, blusunrize.immersiveengineering.common.blocks.TileEntityMultiblockPart.class ) ; registrar.registerBodyProvider ( dataProvider, blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver.class ) ; registrar.registerNBTProvider ( dataProvider, blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver.class ) ; registrar.registerBodyProvider ( dataProvider, blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxProvider.class ) ; registrar.registerNBTProvider ( dataProvider, blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxProvider.class ) ; } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { int x; int y; try { if ( ( drag ) && ( ! ( move ) ) ) { deselectAll () ; target.clear () ; x = e.getX () ; y = e.getY () ; for ( main.GObject go : gObjects ) { if ( go.covered ( eX, eY, x, y ) ) { target.add ( go ) ; go.selected () ; } } repaint () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private Hex getWord ( Hex index ) { int i = index.toInt () ; try { if ( ( i > ( ( Simpletron.MEMORY_SIZE ) - 1 ) ) || ( i < 0 ) ) fatalError ( "*** index out of bounds ***" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Hex word = new Hex ( memory[i] ) ; if ( ( ( word.compareTo ( Simpletron.MAX_WORD ) ) > 0 ) || ( ( word.compareTo ( Simpletron.MIN_WORD ) ) < 0 ) ) { fatalError ( "*** overflow occured ***" ) ; } return word; } 
private static <T> void addGroupAtId ( java.util.List<T> seqResGroups, T group, int sequenceIndexId ) { while ( ( seqResGroups.size () ) <= sequenceIndexId ) { seqResGroups.add ( null ) ; } try { if ( sequenceIndexId >= 0 ) { seqResGroups.set ( sequenceIndexId, group ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db.delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES, ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db.delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES, ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; try { db.delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES, ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void resolveForwardReferences () throws org.exist.xquery.XPathException { try { while ( ! ( forwardReferences.isEmpty () ) ) { final org.exist.xquery.FunctionCall call = forwardReferences.pop () ; final org.exist.xquery.UserDefinedFunction func = call.getContext () .resolveFunction ( call.getQName () , call.getArgumentCount () ) ; if ( func == null ) { throw new org.exist.xquery.XPathException ( call, ErrorCodes.XPST0017, ( "Call to undeclared function: " + ( call.getQName () .getStringValue () ) ) ) ; } else { call.resolveForwardReference ( func ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean addEdge ( boolean isAnySymbol, java.lang.String transition, int sourceVertex, int sinkVertex ) { try { if ( ( sourceVertex < ( graphStructure.size () ) ) && ( sinkVertex < ( graphStructure.size () ) ) ) { graphStructure.get ( sourceVertex ) .getValue () .add ( new com.sonechka.graph.Edge ( isAnySymbol, transition, sourceVertex, sinkVertex ) ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onPermissionGranted () { final com.afollestad.materialdialogs.MaterialDialog dialog = jahirfiquitiva.iconshowcase.dialogs.ISDialogs.showBuildingRequestDialog ( context ) ; dialog.show () ; try { com.pitchedapps.butler.iconrequest.IconRequest.get () .send ( new com.pitchedapps.butler.iconrequest.IconRequest.OnRequestReady () { @java.lang.Override public void doWhenReady () { dialog.dismiss () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public V getOther ( E e, V oneEnd ) { if ( ! ( edges.containsKey ( e ) ) ) throw new graph.Graph.NotInGraphException ( "Can't find other endpoint of edge", e ) ; graph.Graph<V, E>.Edge edge = edges.get ( e ) ; try { if ( edge._1.v.equals ( oneEnd ) ) return edge._3.v; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( edge._3.v.equals ( oneEnd ) ) return edge._1.v; return null; } 
@ java.lang.Override public void onCityLoaded ( java.util.List<com.zfwl.entity.Area> citys ) { if ( ( ( mAddress ) != null ) && ( ( mAddress.getCity () ) != null ) ) { mCurrentCity = mAddress.getCity () ; mSelectAreaPresenter.loadNextDistrict ( mCurrentCity.getId () ) ; } else { } try { cityAdapter.setDatas ( citys ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mCurrentCity ) != null ) { cityAdapter.setSelectArea ( mCurrentCity.getId () ) ; } cityAdapter.notifyDataSetChanged () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { switch ( view.getId () ) { case R.id.previous_button: int index = ( questionPager.getCurrentItem () ) - 1; questionPager.setCurrentItem ( ( index >= 0 ? index : ( questionAdapter.getCount () ) - 1 ) ) ; break; case R.id.next_button: questionPager.setCurrentItem ( ( ( ( questionPager.getCurrentItem () ) + 1 ) % ( questionAdapter.getCount () ) ) ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { try { if ( position == 0 ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; intent.setType ( "image/*" ) ; startActivityForResult ( android.content.Intent.createChooser ( intent, "Deep Life" ) , 1 ) ; } else { Show_DialogBox ( position ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setLanguage ( java.lang.String lang ) { java.util.Locale locale = null; if ( lang == null ) { locale = java.util.Locale.getDefault () ; } else { locale = new java.util.Locale ( lang ) ; } try { map = be.nikiroo.jvcard.resources.Bundles.getBundle ( "resources", locale ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void visit ( final boa.compiler.visitors.FixPStatement n ) { final boa.compiler.visitors.Identifier id = ( ( boa.compiler.visitors.Identifier ) ( n.getParam1 () .getType () ) ) ; final java.lang.String token = id.getToken () ; try { befores.add ( token ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final boa.compiler.visitors.Identifier id1 = ( ( boa.compiler.visitors.Identifier ) ( n.getParam2 () .getType () ) ) ; final java.lang.String token1 = id1.getToken () ; befores.add ( token1 ) ; } 
private static java.lang.StringBuffer generateData ( java.util.List<mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO> measures, java.lang.String sensorName ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; try { json.append ( "\"key\":\"" ) .append ( sensorName ) .append ( "\"," ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } json.append ( "\"values\":[" ) .append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils.generateArray ( measures ) ) .append ( "]" ) ; return json; } 
public com.squareup.okhttp.HttpUrl.Builder newBuilder () { com.squareup.okhttp.HttpUrl.Builder result = new com.squareup.okhttp.HttpUrl.Builder () ; result.scheme = scheme; result.encodedUsername = encodedUsername () ; result.encodedPassword = encodedPassword () ; result.host = host; result.port = ( ( port ) != ( com.squareup.okhttp.HttpUrl.defaultPort ( scheme ) ) ) ? port : -1; result.encodedPathSegments.clear () ; result.encodedPathSegments.addAll ( encodedPathSegments () ) ; result.encodedQuery ( encodedQuery () ) ; try { result.encodedFragment = encodedFragment () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public void computeCheck ( core.agent.Message message ) { core.restaurant.agent.Waiter waiter = message.get ( 0 ) ; core.restaurant.agent.Customer customer = message.get ( 1 ) ; java.lang.String choice = message.get ( 2 ) ; try { m_checks.add ( new core.restaurant.Check ( waiter, customer, choice ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } print ( ( ( ( ( "Computing " + ( customer.getName () ) ) + "'s check for his/her " ) + choice ) + "." ) ) ; stateChanged () ; } 
public static float harmonic () { float oldSum = 0.0F; float sum = 1.0F; int n = 1; while ( oldSum < sum ) { oldSum = sum; sum += 1.0F / n; n += 1; if ( ( n % 100000 ) == 0 ) { java.lang.System.out.println ( ( ( ( "n = " + n ) + ", sum = " ) + sum ) ) ; } } try { java.lang.System.out.println ( ( ( ( "n = " + n ) + ", sum = " ) + sum ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return sum; } 
protected void addRequestTime ( long requestTime, java.util.Map<java.lang.String, java.lang.Object> map ) { try { if ( ( this.includeRequestTime ) && ( requestTime > 0 ) ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS.toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS.toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS.toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String.format ( "%01d.%03d", sec, ms ) ; if ( time != null ) { map.put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME, time ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void parseContentStream () { this.contentStreams = new java.util.ArrayList ( MAX_NUMBER_OF_ELEMENTS ) ; org.verapdf.model.impl.pd.PDPage page = ( ( org.verapdf.model.impl.pd.PDPage ) ( this.simplePDObject ) ) ; try { if ( ( page.getContent () ) != null ) { org.verapdf.model.impl.pd.util.PDResourcesHandler resourcesHandler = org.verapdf.model.impl.pd.util.PDResourcesHandler.getInstance ( page.getResources () , page.isInheritedResources () ) ; org.verapdf.model.impl.pd.GFPDContentStream contentStream = new org.verapdf.model.impl.pd.GFPDContentStream ( page.getContent () , resourcesHandler ) ; this.containsTransparency |= contentStream.isContainsTransparency () ; contentStreams.add ( contentStream ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { if ( requestCode == ( ReminderBottomSheetDialog.UPDATE_REMINDER_REQUEST_CODE ) ) { long timestamp = data.getLongExtra ( ReminderBottomSheetDialog.TIMESTAMP_BUNDLE_KEY, 0 ) ; java.util.Calendar calendar = java.util.Calendar.getInstance () ; calendar.setTime ( new java.util.Date ( timestamp ) ) ; onReminderUpdated ( calendar ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public jp.hazuki.yuzubrowser.webkit.CustomWebView makeWebView ( boolean cacheType ) { jp.hazuki.yuzubrowser.webkit.CustomWebView web = ( cacheType ) ? new jp.hazuki.yuzubrowser.webkit.CacheWebView ( this ) : new jp.hazuki.yuzubrowser.webkit.SwipeWebView ( this ) ; web.getWebView () .setDrawingCacheEnabled ( true ) ; web.getWebView () .buildDrawingCache () ; initWebSetting ( web ) ; try { web.setAcceptThirdPartyCookies ( android.webkit.CookieManager.getInstance () , ( ( ( ! ( AppData.private_mode.get () ) ) && ( AppData.accept_cookie.get () ) ) && ( AppData.accept_third_cookie.get () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return web; } 
@ org.junit.Test public void testRFC6265_SidExample () { java.lang.String rawCookie = "SID=31d4d96e407aad42"; javax.servlet.http.Cookie[] cookies = parseCookieHeaders ( rawCookie ) ; org.junit.Assert.assertThat ( "Cookies.length", cookies.length, org.hamcrest.Matchers.is ( 1 ) ) ; try { assertCookie ( "Cookies[0]", cookies[0], "SID", "31d4d96e407aad42", 0, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setValue ( float v ) { if ( v < 0 ) v = 0; else if ( v > 1 ) v = 1; float newy = ( getY () ) + ( v * ( ( getHeight () ) - ( h.getHeight () ) ) ) ; try { h.setPosition ( h.getX () , newy ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test ( description = "Test the client connection establishment and broadcast." ) public void testClientConnected () { java.lang.String expectedText = "new client connected"; org.wso2.carbon.messaging.CarbonMessage client1Message = org.ballerinalang.testutils.MessageUtils.generateWebSocketOnOpenMessage ( session1, uri ) ; org.wso2.carbon.messaging.CarbonMessage client2Message = org.ballerinalang.testutils.MessageUtils.generateWebSocketOnOpenMessage ( session2, uri ) ; try { org.ballerinalang.testutils.Services.invoke ( client1Message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.ballerinalang.testutils.Services.invoke ( client2Message ) ; org.testng.Assert.assertEquals ( session1.getTextReceived () , expectedText ) ; } 
public static int getDepth ( java.lang.String line ) { int depth = 1; try { for ( int i = 0; i < ( line.length () ) ; i++ ) { if ( ( ( line.charAt ( i ) ) == '\t' ) || ( ( line.charAt ( i ) ) == ' ' ) ) { depth++; } else { break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return depth; } 
private void showAboutZanteDialog () { android.app.FragmentTransaction ft = getFragmentManager () .beginTransaction () ; android.app.Fragment prev = getFragmentManager () .findFragmentByTag ( "shownDialog" ) ; if ( prev != null ) { ft.remove ( prev ) ; } ft.addToBackStack ( null ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment = extinctspecie.com.zantetravel.fragments.MyDialogFragment.newInstance ( extinctspecie.com.zantetravel.activities.MainActivity.CUSTOM_DIALOG_ID_FOR_ABOUT_APP ) ; try { extinctspecie.com.zantetravel.activities.MainActivity.newFragment.setCancelable ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } extinctspecie.com.zantetravel.activities.MainActivity.newFragment.show ( ft, "shownDialog" ) ; } 
@ java.lang.Override public void onHeadHit () { try { Gdx.app.log ( "Coin", "Collision" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getCell () .getTile () .getId () ) == ( BLANK_COIN ) ) MarioBros.manager.get ( "audio/sounds/bump.wav", com.badlogic.gdx.audio.Sound.class ) .play () ; else MarioBros.manager.get ( "audio/sounds/coin.wav", com.badlogic.gdx.audio.Sound.class ) .play () ; getCell () .setTile ( com.mkemp.mariobros.Sprites.Coin.tileSet.getTile ( BLANK_COIN ) ) ; com.mkemp.mariobros.Scenes.Hud.addScore ( 100 ) ; } 
@ java.lang.Override public void onUpdate ( net.minecraft.item.ItemStack stack, net.minecraft.world.World world, net.minecraft.entity.Entity player, int slot, boolean isCurrent ) { try { if ( ( stack != null ) && ( ( stack.getTagCompound () ) != null ) ) { net.minecraft.nbt.NBTTagCompound nbt = stack.getTagCompound () ; if ( ( nbt.hasKey ( "IsOpenDummy" ) ) == true ) { nbt.removeTag ( "IsOpenDummy" ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void dataUpdated ( java.lang.Integer i ) { float maxVolume = java.lang.Math.min ( dataManager.getGlobalMaxVolumeValue () , 1000 ) ; transferFunction.setMaxOrdinates ( new java.awt.geom.Point2D.Float ( dataManager.getGlobalMaxVolumeValue () , 1.0F ) ) ; float lowestDataPoint = dataManager.getGlobalLowestVolumeValue () ; try { transferFunction.resetColors () ; } catch ( Exception ex ) { ex.printStackTrace () ; } transferFunction.setColor ( new java.awt.geom.Point2D.Float ( ( ( maxVolume / ( dataManager.getGlobalMaxVolumeValue () ) ) * lowestDataPoint ) , 0.001F ) , transferFunction.getColors () .firstEntry () .getValue () ) ; } 
public void setAllGames ( modeling.GameList allGames ) { try { if ( ( allGames.getGames () .size () ) != 0 ) { this.allGames = allGames.getGames () ; if ( ( currGame ) != null ) { setCurrGame ( allGames.findGame ( currGame.getGameID () ) ) ; } setChanged () ; notifyObservers ( allGames ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void printFac () { try { switch ( type ) { case "integer": java.lang.System.out.print ( value ) ; break; case "id": java.lang.System.out.print ( id ) ; break; case "exp": java.lang.System.out.print ( " ( " ) ; exp.printExp () ; java.lang.System.out.print ( " ) " ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isSatisfiedByBefore ( java.util.Date date ) { java.util.Calendar testDateCal = java.util.Calendar.getInstance ( getTimeZone () ) ; try { testDateCal.setTime ( date ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } testDateCal.set ( java.util.Calendar.MILLISECOND, 0 ) ; java.util.Date originalDate = testDateCal.getTime () ; testDateCal.add ( java.util.Calendar.SECOND, 1 ) ; java.util.Date timeBefore = getTimeBefore ( testDateCal.getTime () ) ; return ( timeBefore != null ) && ( timeBefore.equals ( originalDate ) ) ; } 
private void UpdatePlayerTable () { playerTable.clearChildren () ; try { playerTable.add ( new io.github.teamfractal.actors.Label ( "List of Players for the Game", this.game.skin ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } playerTable.row () ; for ( int i = 0; i < ( newPlayerNames.size () ) ; i++ ) { playerTable.add ( new io.github.teamfractal.actors.Label ( newPlayerNames.get ( i ) , this.game.skin ) ) ; playerTable.row () ; } } 
@ com.jobmatch.controllers.RequestMapping ( value = "/create", method = RequestMethod.GET ) public java.lang.String createJob ( org.springframework.ui.Model model ) { com.jobmatch.models.JobPost newJobPost = new com.jobmatch.models.JobPost () ; try { model.addAttribute ( "title", "Create job post" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } model.addAttribute ( "skills", new com.jobmatch.viewmodels.RankMap ( newJobPost.getSkills () ) ) ; model.addAttribute ( "skillOptions", skillRepository.getMap () ) ; model.addAttribute ( "jobPost", newJobPost ) ; model.addAttribute ( "countries", com.jobmatch.models.JobPost.getCountries () ) ; return "/jobs/edit"; } 
@ org.junit.Test public void getThread_Id_Page () throws java.lang.Exception { java.lang.Thread thread = mapper.getThread ( 1, 7 ) ; assertNotNull ( thread.getPosts () ) ; try { assertEquals ( 7, thread.getPosts () .getPage () .intValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( 180, thread.getPosts () .getOffset () .intValue () ) ; } 
public void setTopic ( java.lang.String topic ) throws java.io.IOException { this.topic = topic; try { for ( com.rbruno.irc.templates.Client current : clients ) current.getConnection () .send ( Reply.RPL_TOPIC, current, ( ( ( this.getName () ) + " " ) + ( this.getTopic () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
java.util.List<ru.yakovburtsev.socialnetwork.core.model.UserInfo> findByNameAndSurname ( java.lang.String name, java.lang.String surname ) { try { log.info ( "find by name={} and surname={}", name, surname ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ru.yakovburtsev.socialnetwork.core.model.UserInfo userInfo = new ru.yakovburtsev.socialnetwork.core.model.UserInfo () ; userInfo.setName ( name ) ; userInfo.setSurname ( surname ) ; userInfoMessageSender.send ( userInfo, ru.yakovburtsev.socialnetwork.webclient.controller.AbstractUserController.FIND_USERS, ru.yakovburtsev.socialnetwork.webclient.controller.AbstractUserController.TRUE ) ; return userInfoMessageReceiver.receiveList ( ru.yakovburtsev.socialnetwork.webclient.controller.AbstractUserController.FIND_USERS_SELECTOR ) ; } 
protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session session, java.lang.Class childType, java.util.Collection keys ) { try { if ( ! ( keys.isEmpty () ) ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session.proxy ( childType, ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session.retrieveAll ( childType, keys ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void setFloat ( java.lang.String group, java.lang.String param, float value ) { if ( ! ( Config.data.hasKey ( group ) ) ) Config.data.setJSONObject ( group, new processing.data.JSONObject () ) ; processing.data.JSONObject grp = Config.data.getJSONObject ( group ) ; try { grp.setFloat ( param, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Config.data.setJSONObject ( group, grp ) ; Config.modified = true; } 
private void initializeParameters ( com.bow3n.controller.server.model.Task task ) { try { task.setFinished ( java.lang.Boolean.FALSE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( task.getProject () ) != null ) && ( ( task.getProject () .getId () ) != null ) ) { task.setProject ( projectRepository.findOne ( task.getProject () .getId () ) ) ; } } 
public void setConsumptionValue ( int value, com.freedomotic.model.ds.Config params, boolean fireCommand ) { try { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG.log ( java.util.logging.Level.WARNING, ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this.getPojo () .getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } consumption.setValue ( value ) ; setChanged ( true ) ; } 
public void saveNewInputToProfile ( android.view.View view ) { editMyProfileView.saveTextFieldsToProfile ( myProfile ) ; try { if ( ! ( canceledByError ) ) { android.content.Intent intent = new android.content.Intent () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle.putSerializable ( "sendProfile", myProfile ) ; intent.putExtras ( bundle ) ; setResult ( 2, intent ) ; finish () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initStreamAudioToServer () throws java.lang.Exception { android.util.Log.d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG, "Connecting..." ) ; try { this.encoder.initEncoderWithUploader ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( this.sConfig.isSSL ) this.trustServer () ; boolean rc; rc = this.connectBlocking () ; if ( rc ) { android.util.Log.d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG, "Connected" ) ; this.sendSpeechHeader () ; } else { android.util.Log.e ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG, "Connection failed!" ) ; this.uploadPrepared = false; throw new java.lang.Exception ( "Connection failed!" ) ; } } 
public boolean allClientsAhead ( java.lang.Long workQueueHeadTime ) { try { synchronized ( lock ) { for ( net.grigoriadi.sc.domain.Client client : registeredClients ) { java.lang.Long time = lastItemTimesByClient.get ( client.getClientId () ) ; if ( ( time == null ) || ( workQueueHeadTime >= time ) ) { return false; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public int compare ( ScoredDocument doc1, ScoredDocument doc2 ) { try { if ( ( doc1.getScore () ) < ( doc2.getScore () ) ) { return 1; } else if ( ( doc1.getScore () ) > ( doc2.getScore () ) ) { return -1; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
@ java.lang.Override public com.itis.model.Post update ( com.itis.model.Post post, com.itis.form.PostCreationForm form ) { com.itis.model.Post post1 = transformer.apply ( form ) ; try { post.setTitle ( post1.getTitle () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } post.setText ( post1.getText () ) ; return postRepository.save ( post ) ; } 
public static boolean listContainsArray ( java.util.List<char[]> list, char[] array ) { try { for ( char[] element : list ) { if ( java.util.Arrays.equals ( element, array ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
protected void doUpgrade ( at.pcgamingfreaks.Configuration oldConfiguration ) { logger.info ( "No custom config upgrade code implemented! Copying all data from old config to new one." ) ; try { for ( java.lang.String key : config.getKeys ( true ) ) { if ( oldConfiguration.config.isSet ( key ) ) { if ( key.equals ( "Version" ) ) continue; config.set ( key, oldConfiguration.config.getString ( key, null ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initMargins ( android.graphics.Rect margins, android.view.View view ) { android.view.ViewGroup.LayoutParams layoutParams = ( view != null ) ? view.getLayoutParams () : null; try { if ( ( layoutParams != null ) && ( layoutParams instanceof android.view.ViewGroup.MarginLayoutParams ) ) { initMarginRect ( margins, ( ( android.view.ViewGroup.MarginLayoutParams ) ( layoutParams ) ) ) ; } else { margins.set ( 0, 0, 0, 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void paint ( java.awt.Graphics g ) { java.awt.Graphics2D ga = ( ( java.awt.Graphics2D ) ( g ) ) ; try { ga.setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING, java.awt.RenderingHints.VALUE_ANTIALIAS_ON ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setText ( ALLQ[choosedSub][CurrentNum[choosedSub]] ) ; drawaString ( g, ALLQ[choosedSub][CurrentNum[choosedSub]], 20, 32 ) ; } 
@ java.lang.Override public org.apache.jmeter.report.processor.ResultData customizeResult ( org.apache.jmeter.report.processor.ResultData result ) { org.apache.jmeter.report.processor.MapResultData customizedResult = new org.apache.jmeter.report.processor.MapResultData () ; customizedResult.setResult ( org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_RESULT, result ) ; try { if ( ( extraOptions ) != null ) { org.apache.jmeter.report.processor.MapResultData extraResult = new org.apache.jmeter.report.processor.MapResultData () ; for ( java.util.Map.Entry<java.lang.String, java.lang.String> extraEntry : extraOptions.getProperties () .entrySet () ) { extraResult.setResult ( extraEntry.getKey () , new org.apache.jmeter.report.processor.ValueResultData ( extraEntry.getValue () ) ) ; } customizedResult.setResult ( org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_EXTRA_OPTIONS, extraResult ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return customizedResult; } 
public void testIterFilterLimit () { java.lang.Iterable<siena.base.test.model.PersonUUID> people = pm.createQuery ( siena.base.test.model.PersonUUID.class ) .filter ( "n>", 1 ) .order ( "n" ) .iter ( 1 ) ; try { assertNotNull ( people ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } siena.base.test.model.PersonUUID[] array = new siena.base.test.model.PersonUUID[] { siena.base.test.BaseAsyncTest.UUID_CURIE }; int i = 0; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array[i], PersonIntKey ) ; i++; } } 
public static void main ( java.lang.String[] args ) throws java.lang.Exception { weka.core.Instances trainingCancer = HomeWork2.MainHW2.loadData ( "cancer_train.txt" ) ; weka.core.Instances testingCancer = HomeWork2.MainHW2.loadData ( "cancer_test.txt" ) ; weka.core.Instances validationCancer = HomeWork2.MainHW2.loadData ( "cancer_validation.txt" ) ; try { java.lang.System.out.println ( trainingCancer.get ( 3 ) .classValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } HomeWork2.DecisionTree tree = new HomeWork2.DecisionTree () ; tree.buildClassifier ( trainingCancer ) ; } 
public void eliminationTournament () { try { while ( ( players.size () ) > 1 ) { swissTournamentRunner.GUI.wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings ( 0 ) ; pollForResults () ; elimination () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super.onActivityCreated ( savedInstanceState ) ; try { adapter = new android.widget.ArrayAdapter ( getActivity () , android.R.layout.simple_list_item_1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setEmptyText ( "No data, please add from menu." ) ; setListAdapter ( adapter ) ; setListShown ( false ) ; getLoaderManager () .initLoader ( ch.ronoli.tensing.fragments.CategoryFragment.LOADER_ID, null, this ) ; } 
@ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { try { if ( t == null ) { if ( ( ( this.currentOwner ) == null ) || ( ! ( this.currentOwner.isAlive () ) ) ) return true; else return false; } else if ( t.isAlive () ) { if ( ( this.currentOwner ) == t ) return true; else return false; } else return false; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testIssuerName () throws gov.hhs.fha.nhinc.properties.PropertyAccessException { final gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties callbackProps = org.mockito.Mockito.mock ( gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties.class ) ; java.lang.String sIssuer = callbackProps.getIssuer () ; gov.hhs.fha.nhinc.properties.PropertyAccessor propAccessor = createPropertyAccessor () ; try { sIssuer = propAccessor.getProperty ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_FILE_NAME, gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_NAME ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_VALUE_STRING, sIssuer ) ; sIssuer = sIssuer.replace ( "%", "," ) ; } 
@ java.lang.Override protected void registerArgumentValueAnalyses ( edu.psu.cse.siis.ic3.Ic3CommandLineArguments commandLineArguments ) { edu.psu.cse.siis.coal.arguments.ArgumentValueManager.v () .registerDefaultArgumentValueAnalyses () ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager.v () .registerArgumentValueAnalysis ( "classType", new edu.psu.cse.siis.ic3.ClassTypeValueAnalysis () ) ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager.v () .registerArgumentValueAnalysis ( "authority", new edu.psu.cse.siis.ic3.AuthorityValueAnalysis () ) ; try { edu.psu.cse.siis.coal.arguments.ArgumentValueManager.v () .registerArgumentValueAnalysis ( "path", new edu.psu.cse.siis.ic3.PathValueAnalysis () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.List<java.lang.Integer> getNotCheckedList () { java.util.List<java.lang.Integer> result = new java.util.ArrayList<> () ; try { for ( java.util.Map.Entry<java.lang.Integer, java.lang.Boolean> checkedEntry : checkedMap.entrySet () ) { if ( ( checkedEntry.getValue () ) == false ) { result.add ( checkedEntry.getKey () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec, org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO, codec ) ; if ( ( meta == null ) && ( codec != ( org.jcodec.common.Codec.H264 ) ) ) { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } try { track.addVideoSampleEntry ( meta ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return track; } 
@ java.lang.Override public int hashCode () { final int prime = 31; int result = 1; try { result = ( prime * result ) + ( ( discordUserInfo ) == null ? 0 : discordUserInfo.hashCode () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } result = ( prime * result ) + ( ( kagName ) == null ? 0 : kagName.toLowerCase () .hashCode () ) ; return result; } 
public synchronized void removeFromCursor ( com.gdo.stencils.StclContext stclContext, com.gdo.stencils.key.IKey key ) { com.gdo.stencils.plug.PStcl stcl = _stencils.get ( key ) ; _stencils.remove ( key ) ; _modified.remove ( key ) ; try { _locked.remove ( key ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( stcl != null ) { } } 
public po.GoodsModelPO set_signal_name ( vo.GoodsVO goods ) throws java.lang.Exception { java.util.HashMap<java.lang.String, po.GoodsModelPO> goodsModels = goodsListPO () .getGoodsModels () ; po.GoodsModelPO temp = goodsModels.get ( goods.id ) ; temp.setName ( goods.name ) ; if ( ( goods.amount ) < 0 ) { return null; } try { temp.setSignal ( goods.amount ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return temp; } 
private void fakeRegisteredServiceEventForExistingServices ( final org.osgi.framework.BundleContext bundleContext, org.osgi.framework.ServiceListener sl, java.lang.String filter ) throws org.osgi.framework.InvalidSyntaxException { org.osgi.framework.ServiceReference<?>[] servicesPresent = bundleContext.getServiceReferences ( ( ( java.lang.String ) ( null ) ) , filter ) ; try { if ( servicesPresent != null ) { for ( org.osgi.framework.ServiceReference<?> serviceReference : servicesPresent ) { sl.serviceChanged ( new org.osgi.framework.ServiceEvent ( org.osgi.framework.ServiceEvent.REGISTERED, serviceReference ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.bukkit.event.EventHandler @java.lang.SuppressWarnings ( value = "unused" ) public void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent ev ) { final org.bukkit.entity.Player p = ev.getPlayer () ; if ( ( p.hasPermission ( "multispawn.noteleport" ) ) || ( ( plugin.getSpawns ( p ) ) == null ) ) { return; } try { plugin.sendPlayerToSpawn ( p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test public void testUseIndexWithOr () throws java.lang.Exception { long idxUsagesBefore = indexUsages ( db ) ; java.util.List<com.orientechnologies.orient.core.record.impl.ODocument> qResult = db.command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select * from foo where bar = 2 or name ='a' and bar >= 0" ) ) .execute () ; try { assertEquals ( qResult.size () , 2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( indexUsages ( db ) , ( idxUsagesBefore + 2 ) ) ; } 
protected amidst.map.layers.EndCityLayer.ChunkProbability hasSuitableIslandFoundation ( amidst.map.Fragment_TheEnd frag, int chunkX, int chunkZ ) { amidst.map.layers.EndCityLayer.ChunkProbability result = amidst.map.layers.EndCityLayer.ChunkProbability.None; float requiredInfluence = 60; java.util.List<amidst.map.EndIsland> islands = frag.getEndIslands () ; try { for ( amidst.map.EndIsland island : islands ) { float influence = island.influenceAtChunk ( chunkX, chunkZ ) ; if ( influence >= 0.0 ) { if ( influence >= requiredInfluence ) { result = amidst.map.layers.EndCityLayer.ChunkProbability.Likely; break; } else { result = amidst.map.layers.EndCityLayer.ChunkProbability.Possible; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public final void clear () { final java.util.Iterator<com.github.veqryn.collect.Node<K, V>> iter = new NodePrefixSubMapIterator ( key, includePrefixOfKey, keyInclusive, includePrefixedByKey, canBeEmpty ) ; try { while ( iter.hasNext () ) { iter.next () ; iter.remove () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1.destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2.destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams.get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet.getPlayers () [0].getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet.getPlayers () [1].getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; try { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1.spawn () ; } catch ( Exception ex ) { ex.printStackTrace () ; } de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2.spawn () ; } 
private void handleIntent ( android.content.Intent intent ) { try { if ( ( ( intent.getAction () ) != null ) && ( intent.getAction () .equals ( Intent.ACTION_SEARCH ) ) ) { java.lang.String query = intent.getStringExtra ( SearchManager.QUERY ) ; android.widget.Toast.makeText ( mContext, query, Toast.LENGTH_SHORT ) .show () ; android.provider.SearchRecentSuggestions suggestions = new android.provider.SearchRecentSuggestions ( this, com.quartzodev.provider.SuggestionProvider.AUTHORITY, com.quartzodev.provider.SuggestionProvider.MODE ) ; suggestions.saveRecentQuery ( query, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateNotifyMenu ( boolean flag ) { if ( ( menu ) == null ) return; menu.clear () ; try { if ( ( cn.edu.jxnu.awesome_campus.MainActivity.presenter.getCurrentSelectedID () ) == ( DrawerItem.HOME.getId () ) ) { if ( flag ) { getMenuInflater () .inflate ( R.menu.menu_notify_unread, menu ) ; } else { getMenuInflater () .inflate ( R.menu.menu_notify_none, menu ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID", Managers.ShoppingCartHolder.getRandomID () ) ; response.addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; try { Managers.ShoppingCartHolder.getInstance () .AddCart ( cart, cookie.getValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setDataTermino ( java.lang.String dataTermino ) { int dia = java.lang.Integer.parseInt ( dataTermino.substring ( 0, 2 ) ) ; int mes = ( java.lang.Integer.parseInt ( dataTermino.substring ( 3, 5 ) ) ) - 1; int ano = java.lang.Integer.parseInt ( dataTermino.substring ( 6 ) ) ; java.util.Calendar c = java.util.Calendar.getInstance () ; try { c.set ( ano, mes, dia ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.dataTermino = c; } 
@ java.lang.Override public net.minecraft.item.ItemStack getStack () { try { if ( ! ( ( this.inventory ) instanceof infiniteinvo.inventory.BigInventoryPlayer ) ) { return this.inventory.getStackInSlot ( this.slotIndex ) ; } else if ( ( ( ( infiniteinvo.inventory.BigInventoryPlayer ) ( this.inventory ) ) .getUnlockedSlots () ) > ( this.slotIndex ) ) { return this.inventory.getStackInSlot ( this.slotIndex ) ; } else { return lockedStack.copy () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.Result visitDefCall ( com.jetbrains.jetpad.vclang.term.Abstract.DefCallExpression expr, com.jetbrains.jetpad.vclang.term.expr.type.Type expectedType ) { com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.PreResult result = myTypeCheckingDefCall.typeCheckDefCall ( expr ) ; try { if ( ( result == null ) || ( ! ( checkPath ( result, expr ) ) ) ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return checkResultImplicit ( expectedType, checkDefCall ( result, expr ) , expr ) ; } 
@ org.junit.Test public void shouldNotFlushCacheWhenBaseUrlConfigIsNotChanged () { com.thoughtworks.go.server.cache.GoCache cache = mock ( com.thoughtworks.go.server.cache.GoCache.class ) ; com.thoughtworks.go.listener.BaseUrlChangeListener listener = new com.thoughtworks.go.listener.BaseUrlChangeListener ( new com.thoughtworks.go.domain.ServerSiteUrlConfig ( "" ) , new com.thoughtworks.go.domain.ServerSiteUrlConfig ( "" ) , cache ) ; com.thoughtworks.go.config.CruiseConfig newCruiseConfig = new com.thoughtworks.go.config.BasicCruiseConfig () ; newCruiseConfig.setServerConfig ( serverConfigWith ( "", "" ) ) ; listener.onConfigChange ( newCruiseConfig ) ; try { verifyZeroInteractions ( cache ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void update ( float delta ) { elapsed += delta; try { runnable.pitch = ionium.util.MathHelper.lerp ( init, end, com.badlogic.gdx.math.MathUtils.clamp ( ( ( elapsed ) / ( ( time ) <= 0 ? 1 : 0 ) ) , 0.0F, 1.0F ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Gdx.app.postRunnable ( runnable ) ; } 
@ java.lang.Override protected void onResume () { super.onResume () ; isFirstScan = true; registerReceiver ( mWifiScanReceiver, new android.content.IntentFilter ( android.net.wifi.WifiManager.SCAN_RESULTS_AVAILABLE_ACTION ) ) ; android.content.IntentFilter filter = new android.content.IntentFilter () ; filter.addAction ( WifiManager.NETWORK_STATE_CHANGED_ACTION ) ; try { filter.addAction ( ConnectivityManager.CONNECTIVITY_ACTION ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } registerReceiver ( mWifiChangeReceiver, filter ) ; boolean mSuccess = false; mSuccess = mWifiManger.startScan () ; showProgressDialog ( "Scan WiFi..." ) ; } 
public static boolean setByteFile ( java.lang.String fileName, java.lang.String hex ) { if ( ( MockFTPServerJulia.fakeFtpServer.getFileSystem () ) == null ) { org.mockftpserver.fake.filesystem.FileSystem fileSystem = new org.mockftpserver.fake.filesystem.UnixFakeFileSystem () ; MockFTPServerJulia.fakeFtpServer.setFileSystem ( fileSystem ) ; } org.mockftpserver.fake.filesystem.FileEntry file = new org.mockftpserver.fake.filesystem.FileEntry ( fileName ) ; try { file.setContents ( MockFTPServerJulia.hexStringToByteArray ( hex ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } MockFTPServerJulia.fakeFtpServer.getFileSystem () .add ( file ) ; return true; } 
private void writeImports ( java.io.Writer writer, java.lang.String className ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor.getPackageName ( className ) ; try { if ( ! ( currentPackageName.isEmpty () ) ) { writer.append ( "package " ) .append ( currentPackageName ) .append ( ";" ) .append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void robotInit () { try { java.lang.System.out.println ( "TEST" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } stick = new edu.wpi.first.wpilibj.Joystick ( 1 ) ; org.usfirst.frc.team5026.robot.Robot.hardware = new org.usfirst.frc.team5026.robot.Hardware () ; drive = new org.usfirst.frc.team5026.robot.subsystems.Drive () ; org.usfirst.frc.team5026.robot.Robot.oi = new org.usfirst.frc.team5026.robot.OI () ; chooser = new edu.wpi.first.wpilibj.smartdashboard.SendableChooser () ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putData ( "Auto mode", chooser ) ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber ( "Motor Output", 0.5 ) ; } 
public void menuRespuestaTruco () { Truco.InputProvider input = new Truco.InputProvider () ; java.lang.Integer num1; try { do { java.lang.System.out.println ( "El oponente canto truco: " ) ; java.lang.System.out.println ( "1 ) Quiero" ) ; java.lang.System.out.println ( "2 ) No quiero" ) ; java.lang.System.out.println ( "3 ) Quiero retruco" ) ; num1 = input.getIntegerInput () ; } while ( ! ( input.controladorInput ( num1, 1, 3 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.Set<sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile> unitTestFiles () { java.util.Set<sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile> output = new java.util.HashSet<> () ; try { if ( ! ( ( testFiles ) == null ) ) { for ( sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile f : testFiles ) if ( ! ( f.isRunTest () ) ) output.add ( f ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return output; } 
@ java.lang.Override public void Process () { setAirplaneState ( StateAirplane.LoadingPassagers ) ; enstabretagne.base.time.LogicalDuration t = enstabretagne.base.time.LogicalDuration.ofSeconds ( ( 20 * 60 ) ) ; try { Post ( new enstabretagne.SimEntity.airplane.Airplane.RollingToTrack () , getCurrentLogicalDate () .add ( t ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } enstabretagne.base.utility.Logger.Information ( this.Owner () , "LoadingPassagers", Messages.LoadingPassagers ) ; } 
private static java.util.List<Tile> createGameBoard ( final Board.Builder builder ) { final Tile[] tiles = new Tile[BoardUtils.NUM_TILES]; try { for ( int i = 0; i < ( BoardUtils.NUM_TILES ) ; i++ ) { tiles[i] = Tile.createTile ( i, builder.boardConfig.get ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.util.Arrays.asList ( tiles ) ; } 
protected com.sproutigy.libs.luceneplus.core.indices.LuceneIndex instantiate ( java.lang.String name ) throws java.io.IOException { com.sproutigy.libs.luceneplus.core.indices.LuceneIndex index = instantiated.get ( name ) ; try { if ( index == null ) { synchronized ( lock ) { index = instantiated.get ( name ) ; if ( index == null ) { index = prepareIndex ( name, provideDirectorySupplier ( name ) ) ; if ( isAutoOpen () ) { index.open () ; } onInstantiate ( index, name ) ; instantiated.put ( name, index ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return index; } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest, int flags ) { dest.writeString ( this.id ) ; try { dest.writeString ( this.title ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dest.writeString ( this.subtitle ) ; dest.writeLong ( this.chatTime ) ; dest.writeString ( this.image ) ; dest.writeByte ( ( this.isGroup ? ( ( byte ) ( 1 ) ) : ( ( byte ) ( 0 ) ) ) ) ; } 
@ java.lang.Override public void removeChildGui ( org.eclipse.e4.ui.model.application.ui.MUIElement child, org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement> element ) { org.eclipse.e4.ui.model.application.ui.advanced.MPerspectiveStack stack = ( ( org.eclipse.e4.ui.model.application.ui.advanced.MPerspectiveStack ) ( ( org.eclipse.e4.ui.model.application.ui.MElementContainer<?> ) ( element ) ) ) ; org.eclipse.e4.ui.model.application.ui.advanced.MPerspective p = ( ( org.eclipse.e4.ui.model.application.ui.advanced.MPerspective ) ( child ) ) ; com.vaadin.ui.Button button = perspective_button.remove ( p ) ; try { if ( button != null ) { perspectiveSwitcherPanel.removeComponent ( button ) ; button2ContextMenu.remove ( button ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } refreshPerspectiveStackVisibility ( stack ) ; } 
public void learning () { calculateReward () ; copyCurrentSVIntoPrevSV () ; generateCurrentStateVector () ; getQfromNet () ; qFunction () ; resetReward () ; doAction () ; try { setTurnGunRight ( robocode.util.Utils.normalRelativeAngleDegrees ( enemyBearingFromGun ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setTurnRadarRight ( robocode.util.Utils.normalRelativeAngleDegrees ( enemyBearingFromRadar ) ) ; scan () ; execute () ; } 
private void SendFileContent ( java.net.Socket conn, java.io.InputStream fileIs ) throws java.io.IOException { java.io.OutputStream os = conn.getOutputStream () ; byte[] b = new byte[1024]; int x = fileIs.read ( b ) ; try { while ( x != ( -1 ) ) { if ( x < 1024 ) { b = java.util.Arrays.copyOf ( b, x ) ; } os.write ( b ) ; x = fileIs.read ( b ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final java.util.Map<java.lang.String, java.lang.Object> getUserData () { final java.util.Map<java.lang.String, java.lang.Object> userData = new java.util.HashMap<> () ; userData.put ( UserDataFields.PVP_STATUS, hasPvPEnabled () ) ; userData.put ( UserDataFields.TOGGLE_TIME, getToggleTime () ) ; try { userData.put ( UserDataFields.NEWBIE, isNewbie () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } userData.put ( UserDataFields.NEWBIE_TIMELEFT, ( ( newbieTask ) != null ? newbieTask.getTimeleft () : 0 ) ) ; return userData; } 
public org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result combine ( org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result other ) { int cAllows = ( allows ) | ( org.apache.jackrabbit.core.security.authorization.Permission.diff ( other.allows, denies ) ) ; int cDenies = ( denies ) | ( org.apache.jackrabbit.core.security.authorization.Permission.diff ( other.denies, allows ) ) ; org.apache.jackrabbit.core.security.authorization.PrivilegeBits cAPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits.getInstance ( allowPrivileges ) ; cAPrivs.addDifference ( other.allowPrivileges, denyPrivileges ) ; org.apache.jackrabbit.core.security.authorization.PrivilegeBits cdPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits.getInstance ( denyPrivileges ) ; try { cdPrivs.addDifference ( other.denyPrivileges, allowPrivileges ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result ( cAllows, cDenies, cAPrivs, cdPrivs ) ; } 
public void Is_Valid_Person_Name ( android.widget.EditText edt ) throws java.lang.NumberFormatException { try { if ( ( edt.getText () .toString () .length () ) <= 0 ) { valid_name = null; } else if ( ! ( edt.getText () .toString () .matches ( "[a-zA-Z ]+" ) ) ) { valid_name = null; } else { valid_name = edt.getText () .toString () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void extendProgram () { try { notNullVariables.set ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } insertAdditionalVariables () ; org.teavm.model.Variable[] parameters = new org.teavm.model.Variable[ ( methodDescriptor.parameterCount () ) + 1]; for ( int i = 0; i < ( parameters.length ) ; ++i ) { parameters[i] = program.variableAt ( i ) ; } phiUpdater = new org.teavm.model.util.PhiUpdater () ; phiUpdater.updatePhis ( program, parameters ) ; collectAdditionalVariables () ; } 
public void add ( cque.INodePool pool, E e ) { assert e != null; cque.Node<E> n = getNode ( pool, e ) ; if ( ( tail ) == null ) { assert ( head ) == null; head = n; tail = n; return; } try { tail.setNext ( n ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tail = n; } 
public int getTotalPoints () { int points = 0; try { for ( int i = 0; i < ( this.cards.size () ) ; i++ ) { points += this.cards.get ( i ) .getPoints () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return points; } 
@ java.lang.Override public void dispose () { if ( ( timer ) != null ) timer.stop () ; byte option = ( ( byte ) ( javax.swing.JOptionPane.showConfirmDialog ( this, "Exit all programs?", "Exit Confirmation", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION ) ) ) ; try { if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { java.lang.System.exit ( 0 ) ; } else if ( option == ( javax.swing.JOptionPane.NO_OPTION ) ) { super.dispose () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final void backup ( java.lang.String extension ) throws java.io.IOException { javi.FileDescriptor.LocalFile file2 = FileDescriptor.LocalFile.make ( ( ( prop.fdes.shortName ) + extension ) ) ; if ( ( ! ( prop.fdes.canWrite () ) ) && ( "Microsoft Corp.".equals ( java.lang.System.getProperty ( "java.vendor" ) ) ) ) history.Tools.execute ( null, ( "d:\\cygwin\\bin\\chmod +w " + ( prop.fdes.canonName ) ) ) ; prop.fdes.renameTo ( file2 ) ; try { prop.fdes.writeAll ( getStringIter () , prop.getSeperator () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setReadOnly ( false ) ; } 
public boolean updateStorageLocation ( android.content.Context ctx, java.lang.String mount ) { if ( ( mount == null ) || ( mount.equals ( "" ) ) ) { return updateStorageLocation ( ctx ) ; } java.lang.String currentLocation = this.getStorageLocation ( ctx ) ; if ( currentLocation.startsWith ( mount ) ) { return true; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy.getInternalBasePath ( ctx ) ) ; try { updateLocationPreference ( ctx, location ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ org.junit.Test public void testRemoveBookingWithPreviousBookingButUnendedRemoveCandidate () { testee.addBooking ( testBookings, de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.ACTIVITY1, de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.TIME1 ) ; de.lgblaumeiser.ptm.datamanager.model.Booking testBooking = testee.addBooking ( testBookings, de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.ACTIVITY2, de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.TIME2 ) ; try { testee.removeBooking ( testBookings, testBooking ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( 1, testBookings.getBookings () .size () ) ; org.junit.Assert.assertEquals ( de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.TIME1, testBookings.getLastBooking () .getStarttime () ) ; org.junit.Assert.assertTrue ( testBookings.getLastBooking () .hasEndtime () ) ; } 
private boolean assertContiguous ( gnu.trove.list.TIntList list ) { if ( ( list.size () ) < 2 ) { return true; } int prev = list.get ( 0 ) ; try { for ( int i = 1; i < ( list.size () ) ; ++i ) { int v = list.get ( i ) ; if ( v == ( prev + 1 ) ) { prev = v; continue; } return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void setPortraitAspectRatio () { double param = ( ( double ) ( mDisplayMetrics.widthPixels ) ) / ( ( double ) ( mDisplayMetrics.heightPixels ) ) ; try { for ( com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes size : com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes.values () ) { if ( ( param > ( ( size.getRatio () ) - 0.01 ) ) && ( param < ( ( size.getRatio () ) + 0.01 ) ) ) { setAspectRatio ( size.getWidth () , size.getHeight () ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML public void onGroundedClick () { interactor.emptyQueue () ; logic.Extension grounded = argumentFramework.getGroundedExtension ( previousCheckBox.isSelected () ) ; if ( grounded != null ) { java.lang.System.out.println ( ( ( "{" + ( grounded.getArgumentNames () ) ) + "}" ) ) ; } try { setUI () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean playerIsLastToClose ( int number ) { try { for ( spare.n52.yadarts.entity.Player p : this.cricketScores.keySet () ) { spare.n52.yadarts.games.cricket.CricketScore s = this.cricketScores.get ( p ) ; if ( ( p != ( this.currentPlayer ) ) && ( ! ( s.playerHasOpened ( number ) ) ) ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void run () { try { com.vessel.VesselAB.setABListener ( new com.vessel.interfaces.ABListener () { @java.lang.Override public void testNotAvailable ( final com.vessel.enums.VesselEnums.TestVariation testVariation ) { callbackContext.success ( testVariation.toString () ) ; } @java.lang.Override public void testLoading () { } @java.lang.Override public void testLoaded ( java.lang.String testName, final com.vessel.enums.VesselEnums.TestVariation testVariation ) { callbackContext.success ( testVariation.toString () ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt, net.minecraft.util.math.BlockPos pos ) { nbt.setBoolean ( "found", true ) ; nbt.removeTag ( "searchStarted" ) ; nbt.setInteger ( "posX", pos.getX () ) ; try { nbt.setInteger ( "posZ", pos.getZ () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.transaction.annotation.Transactional public de.tum.in.www1.exerciseapp.domain.Result retreiveBuildDetailsFromBambooAndStoreThem ( de.tum.in.www1.exerciseapp.domain.Result result ) { de.tum.in.www1.exerciseapp.domain.Participation participation = result.getParticipation () ; java.util.Map buildDetails = continuousIntegrationService.get () .getLatestBuildResultDetails ( participation ) ; java.util.HashSet<de.tum.in.www1.exerciseapp.domain.Feedback> feedbacks = continuousIntegrationService.get () .createFeedbacksForResult ( buildDetails ) ; result.setFeedbacks ( feedbacks ) ; try { result = resultRepository.save ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.SuppressWarnings ( value = "deprecation" ) @java.lang.Override protected void onResume () { super.onResume () ; android.util.Log.i ( "GameActivity", "onResume" ) ; try { if ( ! ( mIsResumed ) ) { mIsResumed = true; tryRunning () ; if ( ( mSensorController ) != null ) { mSensorController.onResume () ; } mGameSidebar.setBackgroundDrawable ( new paulscode.android.mupen64plusae.DrawerDrawable ( mGlobalPrefs.displayActionBarTransparency ) ) ; mMogaController.onResume () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean onMenuItemClick ( android.view.MenuItem menuItem ) { ticketList.add ( new Data.Ticket ( "00:00", menuItem.getTitle () .toString () ) ) ; userData.setTicketList ( ticketList ) ; try { applicationTimeTracker.setUserData ( userData ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } adapter.notifyDataSetChanged () ; return true; } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { try { for ( com.firebase.client.DataSnapshot child : dataSnapshot.getChildren () ) { email = ( ( java.lang.String ) ( child.child ( "email" ) .getValue () ) ) ; java.lang.System.out.println ( ( "email:" + ( email ) ) ) ; if ( userId.equals ( myRef.getAuth () .getUid () ) ) { groupid.add ( email ) ; inGroup = true; } members.add ( email ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void invoke ( java.util.List<java.lang.String> args ) { final java.lang.String message = args.get ( 0 ) ; args.remove ( 0 ) ; try { if ( ( message.length () ) > 0 ) { conversation.add ( message ) ; } else { java.lang.System.out.println ( "ERROR: Messages must contain text" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.Iterable<java.lang.Object> asList ( java.lang.Object x ) { try { if ( x instanceof java.lang.Iterable ) { return ( ( java.lang.Iterable<java.lang.Object> ) ( x ) ) ; } else { java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object> ( 1 ) ; list.add ( x ) ; return list; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean canDelete ( java.util.List<org.eclipse.core.resources.IResource> resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false; } try { if ( resources.isEmpty () ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < ( resources.size () ) ; i++ ) { org.eclipse.core.resources.IResource resource = resources.get ( i ) ; if ( resource.isPhantom () ) { return false; } } return true; } 
@ org.gbif.occurrence.persistence.Test public void testDeleteExists () throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService.delete ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; try { assertEquivalence ( occ ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ.getKey () ) ; org.gbif.api.model.occurrence.Occurrence test = occurrenceService.get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertNull ( test ) ; } 
public static void releaseBatches ( org.apache.drill.exec.record.RecordBatch incoming ) { if ( incoming instanceof org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator ) { incoming = ( ( org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator ) ( incoming ) ) .getIncoming () ; } try { if ( incoming instanceof org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) { org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch esb = ( ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) ( incoming ) ) ; if ( ( esb.resultsIterator ) != null ) { esb.resultsIterator.close () ; esb.resultsIterator = null; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { enterClear ( enterPressed ) ; try { if ( textview.getText () .equals ( "" ) ) { textview.setText ( ( ( ans ) + "+" ) ) ; } else if ( ! ( isOperator ( textview.getText () .toString () ) ) ) { textview.append ( "+" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "static-access" ) @java.lang.Override public void onDisable () { this.plugin = null; this.versions.clear () ; try { this.entities.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.kickMessage = null; this.versionMsg = null; this.manager = null; this.minProtocolVersion = null; this.maxProtocolVersion = null; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == null ) return false; if ( obj == ( this ) ) return true; try { if ( ( obj.getClass () ) == ( this.getClass () ) ) { return ( this.id ) == ( ( ( Person ) ( obj ) ) .getId () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public java.lang.instrument.ClassFileTransformer getTransformer ( java.lang.ClassLoader classLoader, java.lang.String targetClassName ) { if ( transformerMap.isEmpty () ) { return null; } final com.navercorp.pinpoint.profiler.DefaultDynamicTransformerRegistry.TransformerKey key = new com.navercorp.pinpoint.profiler.DefaultDynamicTransformerRegistry.TransformerKey ( classLoader, targetClassName ) ; final java.lang.instrument.ClassFileTransformer transformer = transformerMap.remove ( key ) ; try { if ( logger.isDebugEnabled () ) { logger.info ( "removed dynamic transformer classLoader: {}, className: {}, registry size: {}", classLoader, targetClassName, transformerMap.size () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return transformer; } 
@ org.junit.Test public void testKillNonExisitingJob () throws java.lang.Exception { java.util.UUID jobId = java.util.UUID.randomUUID () ; io.crate.action.sql.SQLResponse killResponse = execute ( "KILL ?", new java.lang.Object[] { jobId } ) ; assertThat ( killResponse.rowCount () , is ( 0L ) ) ; io.crate.action.sql.SQLResponse logResponse = execute ( "select * from sys.jobs_log where error = ?", new java.lang.Object[] { "KILLED" } ) ; try { assertThat ( logResponse.rowCount () , is ( 0L ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateLocation ( android.location.Location location ) { mCurrentLocation = location; double latitude = mCurrentLocation.getLatitude () ; double longitude = mCurrentLocation.getLongitude () ; stationManager.updateLocation ( latitude, longitude ) ; try { route = stationManager.updateNexttation ( route ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setRouteTravel () ; binding.estimateTime.setText ( ( ( ( ( "ถึงสถานี" + ( desName ) ) + " ในอีก " ) + ( stationManager.updateTimeToArrive () ) ) + " นาที" ) ) ; } 
@ javax.annotation.Nullable @java.lang.Override @java.lang.SuppressWarnings ( value = "unchecked" ) public java.lang.Object getTransferLocation ( @javax.annotation.Nonnull java.lang.Object object, @javax.annotation.Nonnull java.lang.String key ) { com.google.common.collect.Multimap<java.lang.Class<?>, org.squiddev.plethora.api.transfer.ITransferProvider<?>> map = primary; java.lang.String[] parts = key.split ( "\\." ) ; try { for ( java.lang.String part : parts ) { java.lang.Object next = getTransferPart ( object, part, map ) ; if ( next == null ) { return null; } else { object = next; map = secondary; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return object; } 
protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { switch ( requestCode ) { case net.lorenzobianconi.wwatcher.WWatcher.REQ_ENABLE_BT: btEnabled = resultCode == ( RESULT_OK ) ; configureButton ( btEnabled, false ) ; break; case net.lorenzobianconi.wwatcher.WWatcher.REQ_PICK_DEV: if ( data != null ) { java.lang.String addr = data.getExtras () .getString ( "device" ) ; android.bluetooth.BluetoothDevice device = inqMap.get ( addr ) ; new net.lorenzobianconi.wwatcher.WWatcher.BtConnect () .execute ( device ) ; } break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean checkCollision ( worldObjects.WorldObject w ) { try { for ( worldObjects.WorldObject obj : controller.WorldController.getWorld () .getObjects () ) { if ( ( ! ( obj.equals ( w ) ) ) && ( controller.CollisionChecker.overlap ( w, obj ) ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.btn__download_map: mDownloadingCountry = mCurrentCountry; com.mapswithme.maps.downloader.MapManager.nativeDownload ( mCurrentCountry.id ) ; break; case R.id.btn__select_map: getMwmActivity () .replaceFragment ( com.mapswithme.maps.downloader.DownloaderFragment.class, null, null ) ; break; case R.id.wpv__download_progress: com.mapswithme.maps.downloader.MapManager.nativeCancel ( mDownloadingCountry.id ) ; Statistics.INSTANCE.trackEvent ( Statistics.EventName.DOWNLOADER_CANCEL, com.mapswithme.util.statistics.Statistics.params () .add ( Statistics.EventParam.FROM, "search" ) ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getSystemName ( java.lang.String systemID ) { java.lang.String systemName = null; java.lang.String message = "Enter the name for " + systemID; systemName = javax.swing.JOptionPane.showInputDialog ( null, message ) ; EFBOUserInterfaceManager.progressBar.setValue ( 10 ) ; try { java.lang.System.out.println ( ( "System ID: " + systemID ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( ( "Name : " + systemName ) ) ; return systemName; } 
@ java.lang.Override public void initialize ( io.dropwizard.setup.Bootstrap<io.dropwizard.example.JobsApplicationConfiguration> bootstrap ) { com.hubspot.dropwizard.guice.GuiceBundle<io.dropwizard.example.JobsApplicationConfiguration> guiceBundle = com.hubspot.dropwizard.guice.GuiceBundle.<io.dropwizard.example.JobsApplicationConfiguration>newBuilder () .addModule ( new io.dropwizard.example.JobsApplicationModule () ) .setConfigClass ( io.dropwizard.example.JobsApplicationConfiguration.class ) .build () ; bootstrap.addBundle ( guiceBundle ) ; try { bootstrap.addBundle ( new de.spinscale.dropwizard.jobs.GuiceJobsBundle ( guiceBundle.getInjector () .getParent () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void genWidget () throws java.lang.Exception { java.lang.String jsonStr = org.talend.daikon.serialize.jsonschema.JsonSchemaUtilTest.readJson ( "FullExampleUiSchema.json" ) ; org.talend.daikon.serialize.FullExampleProperties properties = new org.talend.daikon.serialize.FullExampleProperties ( "fullexample" ) ; properties.init () ; org.talend.daikon.serialize.jsonschema.UiSchemaGenerator generator = new org.talend.daikon.serialize.jsonschema.UiSchemaGenerator () ; try { assertEquals ( jsonStr, generator.genWidget ( properties, Form.MAIN ) .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { xaurora.ChromeServer chromeSvr = new xaurora.ChromeServer ( 6789 ) ; xaurora.WordServer wordSvr = new xaurora.WordServer ( 23333 ) ; java.lang.Thread chromeSvrThread = new java.lang.Thread ( chromeSvr ) ; java.lang.Thread wordSvrThread = new java.lang.Thread ( wordSvr ) ; try { chromeSvrThread.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } wordSvrThread.start () ; xaurora.ui.LoginUI.main ( null ) ; } 
protected void shiftRight ( int index ) { try { if ( isFull () ) throw new java.lang.IllegalStateException ( "Le tableau est plein" ) ; else if ( isEmpty () ) { return; } else if ( index > ( lastIndex ) ) { return; } else { for ( int i = lastIndex; i >= index; i-- ) { myList[ ( i + 1 ) ] = myList[i]; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int next ( int digit, int size ) { int nextVal = 0; try { while ( odometer.Odometer.isValid ( digit, size ) ) { nextVal = digit++; if ( ( ( digit % 10 ) ^ ( size + 1 ) ) == 1 ) { nextVal = 1; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return nextVal; } 
@ java.lang.Override public void render ( java.awt.Graphics g ) { try { if ( ( ( this.width ) == 30 ) && ( ( this.height ) == 30 ) ) { g.setColor ( java.awt.Color.RED ) ; g.drawRect ( x, y, width, height ) ; } else { g.setColor ( java.awt.Color.RED ) ; g.drawRect ( x, y, width, height ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.List<java.lang.String> getHeaders () { java.util.List<java.lang.String> headers = new java.util.ArrayList<java.lang.String> () ; headers.add ( "Definition URL" ) ; try { headers.add ( "Title" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } headers.add ( "Definition" ) ; headers.add ( "Creator" ) ; headers.add ( "PreLabel" ) ; return headers; } 
private java.lang.String[] arrayListToArray ( java.util.ArrayList<java.lang.String> needingConversion ) { int count = needingConversion.size () ; java.lang.String[] converted = new java.lang.String[count]; try { for ( int i = 0; i < count; i++ ) { converted[i] = needingConversion.get ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return converted; } 
@ org.junit.Test public void testValidateCredentialsUserOnly () throws java.lang.Exception { expectedMessages.add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; expectedMessages.add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; final com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder builder = new com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder () ; builder.setHost ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_HOST ) ; try { builder.setUsername ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_USERNAME ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } builder.setPassword ( "" ) ; final com.blackducksoftware.integration.hub.builder.ValidationResults<com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum, com.blackducksoftware.integration.hub.global.HubProxyInfo> result = new com.blackducksoftware.integration.hub.builder.ValidationResults<com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum, com.blackducksoftware.integration.hub.global.HubProxyInfo> () ; builder.validateCredentials ( result ) ; org.junit.Assert.assertFalse ( result.isSuccess () ) ; actualMessages = getMessages ( result ) ; } 
public void removeAndFail ( java.lang.Throwable cause ) { assert ctx.executor () .inEventLoop () ; if ( cause == null ) { throw new java.lang.NullPointerException ( "cause" ) ; } io.netty.channel.PendingWriteQueue.PendingWrite write = head; if ( write == null ) { return; } io.netty.util.ReferenceCountUtil.safeRelease ( write.msg ) ; io.netty.channel.ChannelPromise promise = write.promise; io.netty.channel.PendingWriteQueue.safeFail ( promise, cause ) ; try { recycle ( write, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void draw ( java.awt.Graphics g, boolean showEdges, boolean showDelaunay, boolean showSites, boolean showData ) { this.g = g; g2 = ( ( java.awt.Graphics2D ) ( g ) ) ; g2.setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING, java.awt.RenderingHints.VALUE_ANTIALIAS_ON ) ; checkMovement () ; drawVoronoiArea () ; try { drawBounding () ; } catch ( Exception ex ) { ex.printStackTrace () ; } drawVoronoiCluster () ; drawClusterNodes ( showSites, showData ) ; drawDelaunay ( showDelaunay ) ; drawEdges ( showEdges ) ; drawTestEdge () ; drawNodes () ; } 
private void findHrefs () { java.util.regex.Matcher matcher = hrefPattern.matcher ( Html ) ; java.lang.String link = ""; try { while ( matcher.find () ) { link = matcher.group ( 1 ) ; if ( ( ( ! ( Suspectedlinks.contains ( link ) ) ) && ( ! ( CrawlerHandler.CheckIfUrlBeenCrawled ( link ) ) ) ) && ( isValidDomain ( link ) ) ) { Suspectedlinks.add ( link ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean closeWindow ( uniol.aptgui.mainwindow.WindowId id ) { if ( id.getType () .isEditorWindow () ) { uniol.aptgui.editor.document.Document<?> doc = getDocument ( id ) ; if ( ( doc.hasUnsavedChanges () ) && ( askSaveDocument ( id, getDocument ( id ) ) ) ) { return false; } } if ( ( activeWindow ) == id ) { activeWindow = null; } mainWindow.removeWindow ( id ) ; try { documents.remove ( id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ org.junit.Test public void should_return_root_project_uuids_for_group () { setupData ( "should_return_root_project_keys_for_group" ) ; java.util.Collection<java.lang.String> rootProjectUuids = authorization.selectAuthorizedRootProjectsUuids ( org.sonar.core.user.AuthorizationDaoTest.USER, "user" ) ; org.assertj.core.api.Assertions.assertThat ( rootProjectUuids ) .containsOnly ( "ABCD" ) ; try { rootProjectUuids = authorization.selectAuthorizedRootProjectsKeys ( org.sonar.core.user.AuthorizationDaoTest.USER, "admin" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.assertj.core.api.Assertions.assertThat ( rootProjectUuids ) .isEmpty () ; } 
public java.util.Optional<java.nio.file.Path> findIn ( java.util.List<java.nio.file.Path> directories ) { java.nio.file.Path file = java.nio.file.Paths.get ( link.get () ) ; try { if ( ( file.isAbsolute () ) || ( directories.isEmpty () ) ) { return java.util.Optional.of ( file ) ; } else { return org.jabref.model.util.FileHelper.expandFilenameAsPath ( link.get () , directories ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onBlockDialogInitialize () { int phoneId = getActivePhoneId () ; try { com.android.incallui.Log.d ( this, ( ( ( "onBlock mCallId:" + ( mCallId ) ) + "phoneId:" ) + phoneId ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( phoneId == ( -1 ) ) { return; } com.android.incallui.Call call = mCall[phoneId]; final java.lang.String number = call.getNumber () ; final android.content.Context context = getUi () .getContext () ; mBlockContactHelper = new com.android.contacts.common.util.BlockContactHelper ( context ) ; mBlockContactHelper.setContactInfo ( number ) ; } 
private void pickOut ( courier.Parcel pickOut ) { pickOut.arriveTime = map.schedule.getSteps () ; try { if ( carrying.remove ( pickOut ) ) { spaceRemaining += pickOut.weight; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( pickOut instanceof courier.CarCaller ) ) { printParcelUnloadLog ( pickOut ) ; currStation.pArrived.add ( pickOut ) ; ( map.parcelTotal ) --; tryTerminate () ; } else { carCallerConvertParcel ( ( ( courier.CarCaller ) ( pickOut ) ) ) ; printCarCallerUnloadLog ( ( ( courier.CarCaller ) ( pickOut ) ) ) ; } } 
@ java.lang.Override public void onSuccess ( com.google.common.base.Optional<org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.fabric.attributes.Options> result ) { try { if ( result.isPresent () ) { org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.fabric.attributes.Options opt = result.get () ; org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior behavior = opt.getTrafficBehavior () ; ctx.setTrafficBehavior ( ( behavior == null ? org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior.Normal : behavior ) ) ; } else { ctx.setTrafficBehavior ( TrafficBehavior.Normal ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } openflow13Provider.updateTrafficBehavior ( ctx.getDpid () , ctx.getTrafficBehavior () , true ) ; } 
protected long getNumberRecursion ( long n ) { int sum = 0; if ( n == 0 ) return 1; else if ( n == 1 ) return 0; else if ( n == 2 ) return 1; try { for ( int k = 1; k <= n; k++ ) { sum += ( sequenceGeneratorA008472.getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return sum / n; } 
@ java.lang.Override protected boolean onBalloonTap ( int index, com.google.android.maps.OverlayItem item ) { try { if ( item instanceof nu.placebo.whatsup.model.ExtendedOverlayItem ) { android.content.Intent startAnnotation = new android.content.Intent ( activity, nu.placebo.whatsup.activity.AnnotationActivity.class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle.putInt ( "nid", ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) .getId () ) ; startAnnotation.putExtras ( bundle ) ; activity.startActivity ( startAnnotation ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ controllers.Transactional public static models.UserImpl fetchUser ( java.lang.String username ) { javax.persistence.EntityManager em = play.db.jpa.JPA.em () ; try { if ( ( em.find ( models.UserImpl.class, username ) ) == null ) { java.lang.System.out.println ( "ERROR NULL" ) ; return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return em.find ( models.UserImpl.class, username ) ; } 
@ org.junit.Test public void getDurationInfo () throws java.lang.Exception { com.ptc.taskanalyse.services.TaskService service = new com.ptc.taskanalyse.services.TaskService ( repo ) ; repo.setPerformed ( 2, 5 ) ; repo.setPerformed ( 1, 5 ) ; com.ptc.taskanalyse.models.TaskDurationInfo durInfo = repo.getDurationInfo ( 2 ) ; try { org.junit.Assert.assertEquals ( "There should be 1 finished task", 1, durInfo.getNumOfFinishedTasks () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void settleHeader () { try { if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) && ( ( currentHeader.getTag () ) != null ) ) { currentHeader.setTag ( null ) ; currentHeader.animate () .z ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static <T> boolean noneOf ( final java.lang.Iterable<T> source, final int begin, final int end, java.util.function.Predicate<T> pred ) { final java.util.Iterator<T> iter = getIteratorAtIndex ( source, begin ) ; try { for ( int i = begin; i != end; ++i ) { assert iter.hasNext () ; if ( pred.test ( iter.next () ) ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void setUserType ( org.trakhound.www.trakhound.device_list.ListAdapter.ViewHolder holder ) { if ( ( holder.SelectionArrow ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) > 0 ) ) holder.SelectionArrow.setVisibility ( View.VISIBLE ) ; else holder.SelectionArrow.setVisibility ( View.GONE ) ; } try { if ( ( holder.OeeLayout ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) > 0 ) ) holder.OeeLayout.setVisibility ( View.VISIBLE ) ; else holder.OeeLayout.setVisibility ( View.GONE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { try { if ( r != null ) { results = r.select ( " tr.productListing-odd" ) ; resultsEven = r.select ( " tr.productListing-even" ) ; for ( int j = 0; j < ( resultsEven.size () ) ; j++ ) { results.add ( resultsEven.get ( j ) ) ; } java.lang.System.out.println ( ( ( results.size () ) + " Results have been returned from CanadaComputers." ) ) ; return results; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDisable () { try { if ( ( npcm ) != null ) { for ( net.techcable.npclib.NPC npc : npcm.getNPCs () ) { java.util.UUID uuid = npcm.getNPCIdFromEntity ( npc.getEntity () ) ; despawnNPC ( uuid, NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log.info ( ( "[CombatTag] Disabling npc with ID of: " + uuid ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } com.trc202.CombatTag.CombatTag.log.info ( "[CombatTag] Disabled" ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.main_activity ) ; preferences = getSharedPreferences ( com.yubico.yubioath.MainActivity.NEO_STORE, Context.MODE_PRIVATE ) ; keyManager = new com.yubico.yubioath.model.KeyManager ( preferences ) ; openFragment ( new com.yubico.yubioath.fragments.SwipeListFragment () ) ; try { tagDispatcher = nordpol.android.TagDispatcher.get ( this, this, false, false, true, false, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.HashSet<Tile> getKnownBombs () { java.util.HashSet<Tile> s = new java.util.HashSet<Tile> () ; try { if ( ( config_list.size () ) == 0 ) return s; else { s = new java.util.HashSet<Tile> ( config_list.get ( 0 ) ) ; for ( java.util.HashSet<Tile> h : config_list ) { s.retainAll ( h ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return s; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { try { if ( e.getActionCommand () .contentEquals ( "OK" ) ) { setDifficulty ( ( ( org.jtrfp.trcl.game.TVF3Game.Difficulty ) ( cbDifficulty.getSelectedItem () ) ) ) ; setCallSign ( txtCallsign.getText () ) ; setBeginMission ( true ) ; setVisible ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void buildCharToIntMap () { charToIntMap.put ( 'a', 0 ) ; charToIntMap.put ( 'b', 1 ) ; charToIntMap.put ( 'c', 2 ) ; charToIntMap.put ( 'd', 3 ) ; try { charToIntMap.put ( 'e', 4 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } charToIntMap.put ( 'f', 5 ) ; charToIntMap.put ( 'g', 6 ) ; charToIntMap.put ( 'h', 7 ) ; } 
public void sendMessage ( java.lang.String desintationUser, java.lang.String body, java.lang.String message ) { Controller.Message newMessage = new Controller.Message ( this.currentUser.getUsername () , desintationUser, body, message ) ; try { java.lang.System.out.println ( this.currentUser.getUsername () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } messageManager.init () ; messageManager.addData ( newMessage ) ; messageManager.closeConnection () ; } 
void addTunesToTuneListScreen ( java.util.ArrayList<java.lang.String> tuneNamesArray ) { if ( ( ( tuneLinks.size () ) < 1 ) && ( ( recursions ) < 5 ) ) { searchForTunes ( "remote" ) ; ( recursions ) ++; return; } android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.company.rorywalsh.folkthis.TuneListScreen.class ) ; try { i.putExtra ( "location", fileLocation ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } i.putStringArrayListExtra ( "tuneNames", tuneNamesArray ) ; i.putStringArrayListExtra ( "tuneLinks", tuneLinks ) ; startActivity ( i ) ; } 
@ java.lang.Override public void removeGroups ( org.bukkit.entity.Player player, java.lang.String world ) { if ( plugin.config.isDefaultrankallworlds () ) { world = null; } try { if ( ( plugin.config.permissionpluginhasworldsupport () ) == false ) { world = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String[] list = net.slipcor.classranks.handlers.HandleVaultPerms.permission.getPlayerGroups ( world, player ) ; if ( list != null ) { for ( java.lang.String sRank : list ) { net.slipcor.classranks.handlers.HandleVaultPerms.permission.playerRemoveGroup ( world, player, sRank ) ; } } } 
@ javafx.fxml.FXML void testServerConnection () { if ( debug ) log.info ( ( "Testing connection to server on address: " + ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) ) ) ; java.lang.String alertMessage; try { if ( ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) != null ) { return; } else { alertMessage = ( "Address " + ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) ) + ",that you entered, is invalid! Please enter valid IPv4 address."; showAlert ( javafx.scene.control.Alert.AlertType.ERROR, "Invalid IP address!", alertMessage ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @java.lang.Override public void handle ( javafx.event.ActionEvent event ) { try { if ( ( event.getSource () ) instanceof javafx.scene.control.ComboBox ) { java.lang.Integer bassTrack = ( ( javafx.scene.control.ComboBox<java.lang.Integer> ) ( event.getSource () ) ) .getValue () ; ui.Slave.setBassTrack ( bassTrack ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { try { if ( ! ( mNavigationDrawerFragment.isDrawerOpen () ) ) { switch ( internal_layout ) { case LAYOUT_LIST: getMenuInflater () .inflate ( R.menu.main, menu ) ; break; case LAYOUT_TRACKING: case LAYOUT_SEARCH: case LAYOUT_ABOUT: default: getMenuInflater () .inflate ( R.menu.main_reduced, menu ) ; break; } restoreActionBar () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onCreateOptionsMenu ( menu ) ; } 
private eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType calculateMessageValidationStatus ( eu.europa.ec.fisheries.uvms.rules.model.dto.ValidationResultDto validationResult ) { try { if ( validationResult != null ) { if ( validationResult.isError () ) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.FAILED; } else if ( validationResult.isWarning () ) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL_WITH_WARNINGS; } else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL; } } else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.UNKNOWN; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void pauseCallBack () { android.widget.ImageButton ib1 = ( ( android.widget.ImageButton ) ( findViewById ( firstID.intValue () ) ) ) ; android.widget.ImageButton ib2 = ( ( android.widget.ImageButton ) ( findViewById ( secondID.intValue () ) ) ) ; try { ib1.setEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setImage ( ib2, "blank" ) ; setImage ( ib1, "blank" ) ; guard = 0; } 
public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { try { for ( java.util.Map.Entry<ch.entwine.weblounge.common.site.Site, org.osgi.framework.Bundle> entry : siteBundles.entrySet () ) { if ( bundle.equals ( entry.getValue () ) ) return entry.getKey () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ org.junit.Test public void testGetErrorMessage_multipleErrors () { java.util.List<com.isroot.stash.plugin.errors.YaccError> errors = new java.util.ArrayList<> () ; errors.add ( new com.isroot.stash.plugin.errors.YaccError ( "commit error" ) ) ; try { errors.add ( new com.isroot.stash.plugin.errors.YaccError ( "another error" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String message = yaccErrorBuilder.getErrorMessage ( errors ) ; org.assertj.core.api.Assertions.assertThat ( message ) .isEqualTo ( ( ( ( ( ( ( "\n" + ( com.isroot.stash.plugin.errors.YaccErrorBuilder.ERROR_BEARS ) ) + "\n\n" ) + "commit error\n" ) + "\n" ) + "another error\n" ) + "\n" ) ) ; } 
@ org.junit.Test public void exercizeParser () { java.lang.String json = "{\"a\":\"y e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\": trUe, \"nullname\":nuLl, \"nottrue\":False}"; int[] expEventSeq = new int[] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ, org.jsonps.GeneralEx.TestListener.EVENT_NAME, org.jsonps.GeneralEx.TestListener.EVENT_VALUE, org.jsonps.GeneralEx.TestListener.EVENT_NAME, org.jsonps.GeneralEx.TestListener.EVENT_VALUE, org.jsonps.GeneralEx.TestListener.EVENT_NAME, org.jsonps.GeneralEx.TestListener.EVENT_VALUE, org.jsonps.GeneralEx.TestListener.EVENT_NAME, org.jsonps.GeneralEx.TestListener.EVENT_STARTARR, org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ, org.jsonps.GeneralEx.TestListener.EVENT_NAME, org.jsonps.GeneralEx.TestListener.EVENT_STARTARR, org.jsonps.GeneralEx.TestListener.EVENT_ENDARR, org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ, org.jsonps.GeneralEx.TestListener.EVENT_ENDARR, org.jsonps.GeneralEx.TestListener.EVENT_NAME, org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ, org.jsonps.GeneralEx.TestListener.EVENT_NAME, org.jsonps.GeneralEx.TestListener.EVENT_NUM, org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ, org.jsonps.GeneralEx.TestListener.EVENT_NAME, org.jsonps.GeneralEx.TestListener.EVENT_SEQ, org.jsonps.GeneralEx.TestListener.EVENT_NAME, org.jsonps.GeneralEx.TestListener.EVENT_SEQ, org.jsonps.GeneralEx.TestListener.EVENT_NAME, org.jsonps.GeneralEx.TestListener.EVENT_SEQ, org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ }; try { testInstance ( json, expEventSeq ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkValue () throws jjcron.polankam.ms.mff.cuni.cz.FormatException { try { switch ( unit.valueType ) { case ASTERISK: break; case PERIOD: isValueValid ( unit.values.get ( 0 ) ) ; if ( ( ( unit.values.get ( 0 ) ) == 0 ) || ( ( ( maxValue ) % ( unit.values.get ( 0 ) ) ) != 0 ) ) { throw new jjcron.polankam.ms.mff.cuni.cz.FormatException ( "GeneralUnit period value is not divisible" ) ; } break; case LIST: for ( java.lang.Integer number : unit.values ) { isValueValid ( number ) ; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void stopSparkProgram () { try { if ( ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper.getSparkContext () ) != null ) { if ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper.isScalaProgram () ) { ( ( co.cask.cdap.api.spark.SparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper.getSparkContext () .getOriginalSparkContext () ) ) .stop () ; } else { ( ( co.cask.cdap.internal.app.runtime.spark.JavaSparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper.getSparkContext () .getOriginalSparkContext () ) ) .stop () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void finalizar ( java.lang.Integer idTarea ) { android.content.ContentValues valores = new android.content.ContentValues () ; valores.put ( ProyectoDBMetadata.TablaTareasMetadata.FINALIZADA, 1 ) ; android.database.sqlite.SQLiteDatabase mydb = dbHelper.getWritableDatabase () ; try { mydb.update ( ProyectoDBMetadata.TABLA_TAREAS, valores, "_id=?", new java.lang.String[] { idTarea.toString () } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public synchronized void shutdown () { while ( clientHandlerAdapter.isConnected () ) { clientHandlerAdapter.shutdown () ; } workerGroup.shutdownGracefully () ; try { while ( ( ( tunnelHandler ) != null ) && ( tunnelHandler.isConnected () ) ) { tunnelHandler.shutdown () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int findHistoryRecord ( java.lang.String placeId ) { try { for ( int i = 0; i < ( HISTORY_SIZE ) ; ++i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0; if ( ( placeInfo.placeId ) == placeId ) { return i + 1; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
public static java.lang.String getProductPathFile ( java.lang.String productId, java.lang.String productName ) { java.lang.String path = ( ( ( ( ( com.tana.utilities.VariableUtility.getCurrentDir () ) + ( com.tana.utilities.VariableUtility.IMG_PATH_PRODUCTS ) ) + productId ) + "_" ) + ( productName.trim () ) ) + "/"; try { com.tana.utilities.VariableUtility.LOGGER.info ( ( "Get product path file : " + path ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return path; } 
private java.util.List<com.netcracker.entity.helper.TaxiOrderHistory> getHistory ( java.lang.Integer pageNumber, javax.servlet.http.HttpServletRequest req ) { com.netcracker.ejb.TaxiOrderBeanLocal taxiOrderBeanLocal = getTaxiOrderBean ( req ) ; java.util.List<com.netcracker.entity.helper.TaxiOrderHistory> list = taxiOrderBeanLocal.getTaxiOrderHistory ( pageNumber, com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize, findCurrentUser () ) ; try { if ( ( ( list.size () ) == 0 ) && ( pageNumber > 1 ) ) { pageNumber--; getServletContext () .setAttribute ( "pageNumber", pageNumber ) ; list = taxiOrderBeanLocal.getTaxiOrderHistory ( pageNumber, com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize, findCurrentUser () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return list; } 
public boolean isSet ( lk.filetributed.client.rpc.services.services.joinRequest_args._Fields field ) { if ( field == null ) { throw new java.lang.IllegalArgumentException () ; } try { switch ( field ) { case IP_ADDRESS: return isSetIpAddress () ; case PORT: return isSetPort () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new java.lang.IllegalStateException () ; } 
public static void main ( java.lang.String[] args ) { me.sergienko.dao.StudentJdbcDAOImpl studentJdbcDAO = new me.sergienko.dao.StudentJdbcDAOImpl () ; me.sergienko.model.Student st = new me.sergienko.model.Student () ; try { st.setGroup_id ( 150 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } st.setName ( "Лера" ) ; st.setSur_name ( "Лысова" ) ; st.setRating_ege ( 80.99 ) ; st.setEnrolment_date ( new java.sql.Date ( java.util.Calendar.getInstance () .getTimeInMillis () ) ) ; java.lang.System.out.println ( studentJdbcDAO.createStudent ( st ) ) ; } 
@ java.lang.Override public void handleResult ( com.google.zxing.Result rawResult ) { try { new android.app.AlertDialog.Builder ( getActivity () ) .setTitle ( "Scanned Message" ) .setMessage ( rawResult.getText () ) .setPositiveButton ( "OK", new android.content.DialogInterface.OnClickListener () { @java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface, int i ) { resumeCamera () ; } } ) .create () .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public void enqueue ( java.lang.Object element ) { int s = size () ; try { if ( s == ( ( n ) - 1 ) ) resize () ; } catch ( Exception ex ) { ex.printStackTrace () ; } queueArray[ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) rear = 0; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.Object src = e.getSource () ; try { if ( src == ( begin ) ) l = new Brain.TemporalLobe.Locked ( "LOCKED", c ) ; else if ( src == ( back ) ) c.changePanel ( "3" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean contains ( java.lang.String s ) { try { if ( ( _value ) != null ) { int compr = s.compareTo ( _value ) ; if ( compr == 0 ) return true; else if ( ( compr < 0 ) && ( ( _left ) != null ) ) return _left.contains ( s ) ; else if ( ( compr > 0 ) && ( ( _right ) != null ) ) return _right.contains ( s ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
protected int addView ( com.tonicartos.superslim.LayoutState.View child, int position, com.tonicartos.superslim.LayoutManager.Direction direction, com.tonicartos.superslim.LayoutState state ) { int addIndex; if ( direction == ( LayoutManager.Direction.START ) ) { addIndex = 0; } else { addIndex = mLayoutManager.getChildCount () ; } state.decacheView ( position ) ; try { mLayoutManager.addView ( child.view, addIndex ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return addIndex; } 
private void writeVariableCopy ( wyil.lang.SyntaxTree.Location<wyil.lang.Bytecode.VariableAccess> loc ) { wyil.lang.SyntaxTree.Location<wyil.lang.Bytecode.VariableDeclaration> vd = getVariableDeclaration ( loc.getOperand ( 0 ) ) ; try { if ( isCopyable ( vd.getType () , loc ) ) { out.print ( vd.getBytecode () .getName () ) ; } else { out.print ( ( ( "wyjs.copy ( " + ( vd.getBytecode () .getName () ) ) + " ) " ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void init () { try { initTouchpad () ; } catch ( Exception ex ) { ex.printStackTrace () ; } Gdx.input.setInputProcessor ( touchPadHelper.getStage () ) ; camera = new com.badlogic.gdx.graphics.OrthographicCamera ( com.platform.rider.utils.GameConstants.APP_WIDTH, com.platform.rider.utils.GameConstants.APP_HEIGHT ) ; viewport = new com.badlogic.gdx.utils.viewport.FitViewport ( com.platform.rider.utils.GameConstants.APP_WIDTH, com.platform.rider.utils.GameConstants.APP_HEIGHT, camera ) ; initPhysics () ; world.setContactListener ( new com.platform.rider.world.WorldController.reactorContactListener () ) ; } 
public void normatizarComponentes () { try { this.corredor.setTransform ( this.corredor.getPosition () , ( ( this.normatizador.normatizar ( getAnguloCorredor_Graus () ) ) * ( com.badlogic.gdx.math.MathUtils.degreesToRadians ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.anguloCalculado = this.normatizador.normatizar ( this.anguloCalculado ) ; } 
@ java.lang.Override public void writeBuffer ( java.nio.ByteBuffer byteBuffer, int offset, int length ) { try { if ( byteBuffer.hasArray () ) { writeBytes ( byteBuffer.array () , offset, length ) ; } else { for ( int pos = offset; pos < ( offset + length ) ; pos++ ) { writeByte ( byteBuffer.get ( pos ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public cpw.mods.fml.common.network.simpleimpl.IMessage onMessage ( shedar.mods.ic2.nuclearcontrol.network.message.PacketServerUpdate message, cpw.mods.fml.common.network.simpleimpl.MessageContext ctx ) { net.minecraft.item.ItemStack stack = message.itemstack; try { if ( ( stack != null ) && ( ( stack.getItem () ) instanceof shedar.mods.ic2.nuclearcontrol.items.ItemCardBase ) ) { shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl helper = new shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl ( stack, 0 ) ; shedar.mods.ic2.nuclearcontrol.api.CardState state = ( ( shedar.mods.ic2.nuclearcontrol.api.IPanelDataSource ) ( stack.getItem () ) ) .update ( ContainerRemoteMonitor.panel, helper, 100 ) ; return new shedar.mods.ic2.nuclearcontrol.network.message.PacketClientRemoteMonitor ( helper.getUpdateSet () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void toggleAlarm ( android.view.View view ) { com.example.alexfaber.sumanalarm.Alarm.getAlarm () .turnedOff () ; if ( alarmTone.isPlaying () ) toggleAlarmSound () ; android.widget.Button button = ( ( android.widget.Button ) ( findViewById ( R.id.toggleButton ) ) ) ; button.setEnabled ( false ) ; android.content.Intent mainActivityIntent = new android.content.Intent ( this, com.example.alexfaber.sumanalarm.Activities.MainActivity.class ) ; try { startActivity ( mainActivityIntent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setupViews () { fragmentList = ( ( org.distantshoresmedia.wifiDirect.DeviceListFragment ) ( getSupportFragmentManager () .findFragmentById ( R.id.frag_list ) ) ) ; try { fragmentDetails = ( ( org.distantshoresmedia.wifiDirect.DeviceDetailFragment ) ( getSupportFragmentManager () .findFragmentById ( R.id.frag_detail ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( selectedUri ) == null ) { android.view.View view = findViewById ( R.id.device_detail_fragment_base_view ) ; if ( view != null ) { view.setVisibility ( View.GONE ) ; } } } 
public boolean addAtBegining ( E data ) { try { if ( isLinkedListEmpty () ) { root.setData ( data ) ; tail = root; ( size ) ++; return true; } else { datastructures.linkedlist.Node<E> newNode = new datastructures.linkedlist.Node<E> ( data ) ; newNode.setNext ( root ) ; root.setPrev ( newNode ) ; root = newNode; ( size ) ++; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { super.onResume () ; try { if ( ( toolbar ) == null ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar.setDisplayOptions ( ActionBar.DISPLAY_SHOW_CUSTOM ) ; bar.setCustomView ( R.layout.custom_action_bar ) ; bar.setDisplayHomeAsUpEnabled ( true ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } displayCurrentStep () ; } 
public void updateUI () { int prevBtnVisibility = android.view.View.VISIBLE; int nextBtnVisibility = android.view.View.VISIBLE; if ( ( itemIndex ) == 0 ) { prevBtnVisibility = android.view.View.INVISIBLE; } if ( ( itemIndex ) == ( ( shareClipExperience.getChildrenContents () .size () ) - 1 ) ) { nextBtnVisibility = android.view.View.INVISIBLE; } prevClipButton.setVisibility ( prevBtnVisibility ) ; nextClipButton.setVisibility ( nextBtnVisibility ) ; try { mediaController.hide () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isValidated () { try { if ( ! ( org.easystogu.utils.Strings.isDateValidate ( date ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( ( ( ( this.majorNetIn ) == 0 ) && ( ( this.biggestNetIn ) == 0 ) ) && ( ( this.bigNetIn ) == 0 ) ) && ( ( this.midNetIn ) == 0 ) ) && ( ( this.smallNetIn ) == 0 ) ) return false; return true; } 
@ java.lang.Override public void call ( com.moac.android.refuge.activity.MainActivity.CirclesViewModel circlesViewModel ) { mapFragment.clear () ; try { if ( ( circlesViewModel.maxFlow ) > 0 ) { com.moac.android.refuge.util.Visualizer.drawCountries ( refugeeDataStore, mapFragment, circlesViewModel.countries, circlesViewModel.maxFlow ) ; } else if ( ! ( circlesViewModel.countries.isEmpty () ) ) { android.widget.Toast.makeText ( this, "No refugee flows found", Toast.LENGTH_LONG ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test @org.chromium.base.test.util.Feature ( value = { "OfflinePages" } ) public void testOpenItemByGuid () { org.chromium.chrome.browser.offlinepages.downloads.OfflinePageDownloadItem item = createDownloadItem1 () ; org.mockito.Mockito.doReturn ( null ) .when ( mBridge ) .nativeGetOfflineUrlByGuid ( org.mockito.Mockito.anyLong () , org.mockito.Mockito.eq ( item.getGuid () ) ) ; try { mBridge.openItem ( item.getGuid () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.mockito.Mockito.verify ( mBridge, org.mockito.Mockito.times ( 1 ) ) .nativeGetOfflineUrlByGuid ( org.mockito.Mockito.eq ( 0L ) , org.mockito.Mockito.eq ( item.getGuid () ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Spinner fishList = ( ( android.widget.Spinner ) ( findViewById ( R.id.fishCaughtSpinner ) ) ) ; int index = fishList.getSelectedItemPosition () ; android.content.Intent intent = new android.content.Intent ( v.getContext () , com.app.fish.catchreport.LiveAddFishActivity.class ) ; try { intent.putExtra ( "TripInfo", trip ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } intent.putExtra ( "Fish", index ) ; startActivity ( intent ) ; } 
public void onClick ( android.view.View v ) { com.cards.flash.testez.BaseFunction.hideKeyboard ( getContext () , v ) ; if ( com.cards.flash.testez.EditCardFragment.hasTakenQuiz ) { com.cards.flash.testez.EditCardFragment.hasTakenQuiz = false; updateScores () ; } android.content.Intent intent = new android.content.Intent ( getContext () , com.cards.flash.testez.ScoreBoard.class ) ; intent.putExtra ( "cat", MainActivity.cateList.get ( com.cards.flash.testez.NavigationDrawerFragment.getCurrentSelectedPos () ) .getObjectId () ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testSendNonMatchingMessage () throws java.lang.Exception { org.apache.camel.CamelContext camelctx = new org.apache.camel.impl.DefaultCamelContext () ; camelctx.addRoutes ( getRouteBuilder () ) ; camelctx.start () ; org.apache.camel.ProducerTemplate producer = camelctx.createProducerTemplate () ; java.lang.String result = producer.requestBodyAndHeader ( "direct:start", "mybody", "foo", "bad", java.lang.String.class ) ; try { org.junit.Assert.assertEquals ( "mybody unmatched", result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void onUserReceived ( com.pdrogfer.onstage.model.User user ) { try { android.util.Log.i ( com.pdrogfer.onstage.ui.PresentationActivity.TAG, ( "onUserReceived: " + ( user.toString () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.pdrogfer.onstage.Utils.storeUserToSharedPrefs ( user.getUid () , user.getName () , user.getEmail () , user.getUserType () , this ) ; goToListActivity () ; } 
@ org.junit.Test public void testSimpleSingleNew_withOnce () throws java.lang.Exception { samples.expectnew.ExpectNewDemo tested = new samples.expectnew.ExpectNewDemo () ; samples.newmocking.MyClass myClassMock1 = mock ( samples.newmocking.MyClass.class ) ; whenNew ( samples.newmocking.MyClass.class ) .withNoArguments () .thenReturn ( myClassMock1 ) ; tested.simpleSingleNew () ; try { verifyNew ( samples.newmocking.MyClass.class ) .withNoArguments () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String image () { if ( top.has ( Trait.strapped ) ) { return "doggy_ff_strapped.jpg"; } try { if ( top.useFemalePronouns () ) { if ( bottom.hasDick () ) { return "futa_futa_doggy.jpg"; } return "futa_doggy.jpg"; } } catch ( Exception ex ) { ex.printStackTrace () ; } return "doggy.jpg"; } 
private void stopped () { try { com.couchbase.lite.util.Log.d ( Log.TAG_CHANGE_TRACKER, "%s: Change tracker in stopped () ", this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( client ) != null ) { com.couchbase.lite.util.Log.d ( Log.TAG_CHANGE_TRACKER, "%s: Change tracker calling changeTrackerStopped, client: %s", this, client ) ; client.changeTrackerStopped ( this ) ; } else { com.couchbase.lite.util.Log.d ( Log.TAG_CHANGE_TRACKER, "%s: Change tracker not calling changeTrackerStopped, client == null", this ) ; } client = null; running = false; } 
public void colsum ( int[] histogram ) { col_idx[0] = 0; int index = 0; for ( int i = 1; i <= ( numCols ) ; i++ ) { col_idx[i] = index += histogram[ ( i - 1 ) ]; } java.lang.System.arraycopy ( col_idx, 0, histogram, 0, numCols ) ; nz_length = index; try { growMaxLength ( nz_length, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setName ( eu.etaxonomy.cdm.model.name.TaxonName name ) { if ( ( ( this.name ) != null ) && ( ! ( this.name.equals ( name ) ) ) ) { this.name.getRegistrations () .remove ( this ) ; } try { if ( ( name != null ) && ( ! ( name.equals ( this.name ) ) ) ) { name.getRegistrations () .add ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.name = name; } 
public void addJet ( java.lang.String model, double speed, double range, int capacity ) { week2.Jets[] addJets = new week2.Jets[ ( jets.length ) + 1]; for ( int i = 0; i < ( ( addJets.length ) - 1 ) ; i++ ) { addJets[i] = jets[i]; } addJets[jets.length] = new week2.Jets ( model, speed, range, capacity ) ; jets = addJets; try { printJets () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean smartShoot ( int x, int y ) { try { grid[x][y].setShot ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( shotCount ) ++; if ( grid[x][y].getBoat () ) { ( hitCount ) ++; if ( ! ( getBoatSunk () ) ) { hits.push ( new battleship.service.Coordinate ( x, y ) ) ; } return true; } return false; } 
public java.lang.String login () { co.edu.unal.kwinty.BusinessLogic.Controller.LoginUser log = new co.edu.unal.kwinty.BusinessLogic.Controller.LoginUser () ; try { message = log.start ( this.username, this.password ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.err.println ( ( "Este es el mensaje" + ( message ) ) ) ; if ( ( message ) != null ) { return message; } else { return "welcome"; } } 
@ org.junit.Test public void testRead () throws org.pentaho.metastore.api.exceptions.MetaStoreException { java.lang.String testName = "testName"; org.pentaho.big.data.impl.cluster.NamedClusterImpl namedCluster = new org.pentaho.big.data.impl.cluster.NamedClusterImpl () ; try { when ( metaStoreFactory.loadElement ( testName ) ) .thenReturn ( namedCluster ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertTrue ( ( namedCluster == ( namedClusterManager.read ( testName, metaStore ) ) ) ) ; } 
public short getShort () throws com.wiredtiger.db.WiredTigerPackingException { boolean signed = true; try { format.checkType ( 'h', false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( format.getType () ) == 'H' ) { signed = false; } format.consume () ; return unpackShort ( signed ) ; } 
public void setMotorSpeeds ( double left, double right, boolean usePID ) { double scale = java.lang.Math.max ( java.lang.Math.abs ( left ) , java.lang.Math.abs ( right ) ) ; if ( scale > 1 ) { left = left / scale; right = right / scale; } mLeftDrive.setSpeed ( left ) ; try { mLeftDrive.setUsePID ( usePID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mRightDrive.setSpeed ( right ) ; mRightDrive.setUsePID ( usePID ) ; } 
@ java.lang.Override public void onComplete ( @android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task ) { try { if ( ! ( task.isSuccessful () ) ) { regErrLbl.setText ( "Error Signing Up" ) ; } else { com.lintech.yougo.User user = new com.lintech.yougo.User ( name, email, task.getResult () .getUser () .getUid () ) ; com.lintech.yougo.Trip trip = new com.lintech.yougo.Trip ( "", "0", "0", "0", "" ) ; newUser ( user, trip ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void init () { try { if ( ! ( initialized ) ) { synchronized ( this ) { if ( ! ( initialized ) ) { if ( ( beanManager () ) != null ) { elResolver.setDelegate ( beanManager () .getELResolver () ) ; } initialized = true; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.ggp.base.util.statemachine.MachineState toGdl ( org.apache.lucene.util.OpenBitSet state ) { java.util.Set<org.ggp.base.util.gdl.grammar.GdlSentence> bases = new java.util.HashSet<org.ggp.base.util.gdl.grammar.GdlSentence> () ; int[] baseProps = propNet.getBasePropositions () ; try { for ( int i = state.nextSetBit ( 0 ) ; i != ( -1 ) ; i = state.nextSetBit ( ( i + 1 ) ) ) { bases.add ( gdlSentenceMap.get ( ( ( baseOffset ) + i ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.ggp.base.util.statemachine.MachineState ( bases ) ; } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { try { ( ( com.project.locateme.mainViews.homeFragment.HomeFragment ) ( mainViewsAdapter.getFragment ( 0 ) ) ) .updateMarkers () ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( ( com.project.locateme.mainViews.PlaceFragment ) ( mainViewsAdapter.getFragment ( 1 ) ) ) .updateEventListViewItems () ; ( ( com.project.locateme.mainViews.PlaceFragment ) ( mainViewsAdapter.getFragment ( 1 ) ) ) .updatePlaceListViewItems () ; android.util.Log.e ( this.getLocalClassName () , "update initiated" ) ; } 
@ java.lang.Override public void visitMethodInsn ( int opcode, java.lang.String owner, java.lang.String name, java.lang.String desc ) { try { if ( ( ( done ) || ( opcode != ( org.objectweb.asm.Opcodes.INVOKESPECIAL ) ) ) || ( ! ( org.caesarj.runtime.mixer.ConstructorMixer.isConstructor ( name ) ) ) ) { super.visitMethodInsn ( opcode, owner, name, desc ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } done = true; super.visitMethodInsn ( opcode, this.owner, name, this.desc ) ; } 
private void showCompleteBusRouteGoing ( int busLineId, java.lang.String busLineName ) { mBusLineId = busLineId; mGoingSwitch.setChecked ( false ) ; mToolbar.setVisibility ( View.GONE ) ; mGoingAndReturnLayout.setVisibility ( View.VISIBLE ) ; try { if ( mMyBusMap.completeRouteExists ( busLineId ) ) { mMyBusMap.showCompleteRouteGoing ( busLineId ) ; mMyBusMap.zoomOutCompleteBusRouteGoing ( busLineId ) ; } else { showProgressDialog ( getString ( R.string.searching_complete_route ) ) ; com.mybus.service.ServiceFacade.getInstance () .getCompleteBusRoute ( busLineId, busLineName, this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.blazingkin.interpreter.executor.lambda.LambdaExpression getLambdaExpression ( java.lang.String name, java.lang.String[] args ) { try { if ( ( name.contains ( " ( " ) ) && ( name.contains ( " ) " ) ) ) { com.blazingkin.interpreter.executor.lambda.LambdaExpression le = com.blazingkin.interpreter.executor.lambda.LambdaParser.parseLambdaExpression ( name.toUpperCase () ) ; return ( ( com.blazingkin.interpreter.executor.lambda.LambdaExpression ) ( le.getValue () .value ) ) .cloneWithArgs ( args ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return com.blazingkin.interpreter.executor.lambda.LambdaRegistrar.runtimeDefinedLambdaExpressions.get ( name.toUpperCase () ) .cloneWithArgs ( args ) ; } 
@ java.lang.Override public void execute () { double translationPower = leftJoystick.getVector () .getMagnitude () ; try { setTargetHeading () ; } catch ( Exception ex ) { ex.printStackTrace () ; } double headingError = poseSubsystem.getCurrentHeading () .difference ( targetHeadingSupplier.getAsDouble () ) ; double rotationPower = - ( headingDrivePid.calculate ( 0, headingError ) ) ; driveSubsystem.tankDrivePowerMode ( ( translationPower - rotationPower ) , ( translationPower + rotationPower ) ) ; } 
@ java.lang.Override public java.util.Collection<org.openhab.binding.zwave.internal.protocol.SerialMessage> getDynamicValues ( boolean refresh ) { java.util.ArrayList<org.openhab.binding.zwave.internal.protocol.SerialMessage> result = new java.util.ArrayList<org.openhab.binding.zwave.internal.protocol.SerialMessage> () ; if ( refresh == true ) { initialiseName = false; initialiseLocation = false; } if ( ( initialiseName ) == false ) { result.add ( getNameMessage () ) ; } try { if ( ( initialiseLocation ) == false ) { result.add ( getLocationMessage () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public static java.lang.String toSUMO ( edu.stanford.nlp.util.IntPair ip, java.util.List<edu.stanford.nlp.ling.CoreLabel> tokens ) { java.lang.String NERclass = tokens.get ( ( ( ip.getSource () ) - 1 ) ) .ner () ; try { if ( NERclass.equals ( "PERSON" ) ) return "Human"; else if ( NERclass.equals ( "LOCATION" ) ) return "GeographicArea"; else if ( NERclass.equals ( "ORGANIZATION" ) ) return "Organization"; } catch ( Exception ex ) { ex.printStackTrace () ; } return ""; } 
public java.util.ArrayList<rifGenericLibrary.taxonomyServices.TaxonomyTerm> getImmediateChildTerms ( final java.lang.String parentTermIdentifier ) throws rifGenericLibrary.system.RIFServiceException { java.util.ArrayList<rifGenericLibrary.taxonomyServices.TaxonomyTerm> results = new java.util.ArrayList<rifGenericLibrary.taxonomyServices.TaxonomyTerm> () ; if ( parentTermIdentifier == null ) { return results; } rifGenericLibrary.taxonomyServices.TaxonomyTerm parentTerm = getTerm ( parentTermIdentifier ) ; try { if ( parentTerm == null ) { rifGenericLibrary.system.RIFServiceExceptionFactory rifServiceExceptionFactory = new rifGenericLibrary.system.RIFServiceExceptionFactory () ; throw rifServiceExceptionFactory.createNonExistentTaxonomyTerm ( taxonomyServiceID, parentTermIdentifier ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return parentTerm.getChildTerms () ; } 
@ org.junit.Test public void createObservableSuccess () { rx.observers.TestSubscriber<io.techery.janet.model.TestAction> subscriber = new rx.observers.TestSubscriber<io.techery.janet.model.TestAction> () ; io.techery.janet.model.TestAction action = new io.techery.janet.model.TestAction () ; actionPipe.createObservableSuccess ( action ) .subscribe ( subscriber ) ; io.techery.janet.AssertUtil.assertSubscriberWithSingleValue ( subscriber ) ; try { subscriber.assertValue ( action ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void handleChangeTurn ( es.ucm.fdi.tp.views.swing.Board board, es.ucm.fdi.tp.views.swing.Piece turn ) { this.turn = turn; this.board = board; boardComponent.setEnabled ( isPieceTurn ( turn ) ) ; try { if ( turn.equals ( WINDOW_OWNER ) ) { WINDOW.toFront () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } requestAutomaticMove () ; redrawBoard () ; } 
boolean add ( E item ) { boolean newItem = ! ( this.linkedHashSet.remove ( item ) ) ; this.linkedHashSet.add ( item ) ; try { if ( ( this.linkedHashSet.size () ) >= ( com.box.sdk.LRUCache.MAX_SIZE ) ) { java.util.Iterator<E> it = this.linkedHashSet.iterator () ; it.next () ; it.remove () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return newItem; } 
public void remove ( java.lang.String[] parm ) { java.lang.String nId = parm[0]; try { org.zywx.wbpalmstar.plugin.uexLocalNotification.EAlarmReceiver.cancelAlerm ( mContext, nId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map ) != null ) && ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map.containsKey ( nId ) ) ) { int id = org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map.get ( nId ) ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map.remove ( nId ) ; if ( ( notificationManager ) != null ) { notificationManager.cancel ( id ) ; } } } 
@ java.lang.Override public void onEvent () { try { if ( ( ! ( this.getIsClosingOrClosed () ) ) && ( ( ( sendLink.getLocalState () ) == ( org.apache.qpid.proton.engine.EndpointState.CLOSED ) ) || ( ( sendLink.getRemoteState () ) == ( org.apache.qpid.proton.engine.EndpointState.CLOSED ) ) ) ) { recreateSendLink () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void parseCommandObject ( common.CommandObject commandObj, boolean isUndoAction, boolean isRedoAction ) { if ( ! ( isUndoAction || isRedoAction ) ) { commandObj.setLastSearchedIndex ( lastSearchedIndex ) ; } logic.CommandFacade commandFacade = new logic.CommandFacade ( taskList, undoList, redoList, lastOutputTaskList, commandObj, isUndoAction, isRedoAction ) ; try { commandFacade.run () ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateLists ( commandFacade ) ; } 
public void freePearlFromMercury ( vg.civcraft.mc.prisonpearl.PrisonPearl pp, java.lang.String reason, java.lang.String server ) { storage.removePearl ( pp, reason ) ; try { if ( ( server != null ) && ( ( pp.getImprisonedPlayer () ) != null ) ) { respawnPlayerCorrectly ( pp.getImprisonedPlayer () , pp, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Response<com.birdcopy.BirdCopyApp.Http.CallResultCode> response ) { com.birdcopy.BirdCopyApp.Http.CallResultCode result = response.body () ; try { if ( "1".equals ( result.getRc () ) ) { if ( "-1".equalsIgnoreCase ( result.getRs () ) ) { if ( delegate != null ) { delegate.completion ( false ) ; } } else { if ( delegate != null ) { delegate.completion ( true ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<chipmunk.segmenter.Word> map ( java.util.List<chipmunk.segmenter.Word> words ) { getData () ; java.util.List<chipmunk.segmenter.Word> new_words = new java.util.LinkedList<> () ; try { for ( chipmunk.segmenter.Word word : words ) { chipmunk.segmenter.Word new_word = vocab_.get ( word.getWord () ) ; assert new_word != null; new_words.add ( new_word ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new_words; } 
public void loginButtonPressed ( android.view.View v ) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException { hideKeyboard () ; loginInfo.setText ( "" ) ; try { accountName = inputUsername.getText () .toString () ; } catch ( Exception ex ) { ex.printStackTrace () ; } password = inputPassword.getText () .toString () ; if ( ( ! ( accountName.equals ( "" ) ) ) && ( ! ( password.equals ( "" ) ) ) ) { loginProgressBar.setVisibility ( View.VISIBLE ) ; thorleifz.wakeup.LogIn.LoginTask loginTask = new thorleifz.wakeup.LogIn.LoginTask () ; loginTask.execute () ; } } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group, @android.support.annotation.IdRes int checkedId ) { rb = ( ( android.widget.RadioButton ) ( findViewById ( checkedId ) ) ) ; gender = rb.getText () .toString () ; try { if ( gender.equals ( "Male" ) ) { profileColor = "BLUE"; } else { profileColor = "GREEN"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call<com.movielist.aishwarytandon.movielist.MovieResponse> call, retrofit2.Response<com.movielist.aishwarytandon.movielist.MovieResponse> response ) { java.util.List<com.movielist.aishwarytandon.movielist.Movie> movies = response.body () .getResults () ; if ( recyclerView != null ) { recyclerView.setAdapter ( new com.movielist.aishwarytandon.movielist.MovieAdapter ( movies, R.layout.list_item_movie, getApplicationContext () ) ) ; } try { android.util.Log.d ( com.movielist.aishwarytandon.movielist.MainActivity.TAG, ( "Number of movies received: " + ( movies.size () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( video.isPlaying () ) { switchPlayOrPausButtonState ( video.isPlaying () ) ; video.pause () ; } else { switchPlayOrPausButtonState ( video.isPlaying () ) ; video.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<hr.fer.tki.evolution_algorithm.chromosome.IChromosome> getBestSolutions ( int num ) { java.util.List<hr.fer.tki.evolution_algorithm.chromosome.IChromosome> solutions = new java.util.ArrayList<> () ; for ( int i = 0; i < num; i++ ) { solutions.add ( this.population.get ( i ) ) ; } try { for ( hr.fer.tki.evolution_algorithm.chromosome.IChromosome chromosome : solutions ) { java.lang.System.out.println ( chromosome.getFitness () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return solutions; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { super.onActivityResult ( requestCode, resultCode, data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( resultCode != ( RESULT_OK ) ) return; switch ( requestCode ) { case ya.haojun.roadtoadventure.activity.MainActivity.REQUEST_PROFILE: if ( ( data != null ) && ( data.getBooleanExtra ( "logout", false ) ) ) { ya.haojun.roadtoadventure.helper.SPHelper.clearUser ( this ) ; openActivity ( ya.haojun.roadtoadventure.activity.PermissionActivity.class ) ; finish () ; } else { rv_drawer.getAdapter () .notifyItemChanged ( 0 ) ; } break; } } 
public org.osgl.util.S.Buffer prepend ( java.lang.StringBuffer sb ) { if ( sb == null ) return appendNull () ; int len = sb.length () ; ensureCapacityInternal ( ( ( count ) + len ) ) ; try { java.lang.System.arraycopy ( value, 0, value, len, count ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sb.getChars ( 0, len, value, 0 ) ; count += len; return this; } 
private boolean projectHasItestsDependency () { java.util.List<org.apache.maven.model.Dependency> deps = project.getDependencies () ; boolean containsItests = false; java.util.Iterator i = deps.iterator () ; try { while ( ( i.hasNext () ) && ( !containsItests ) ) { org.apache.maven.model.Dependency d = ( ( org.apache.maven.model.Dependency ) ( i.next () ) ) ; containsItests |= ( d.getArtifactId () .equals ( "itests" ) ) && ( d.getGroupId () .equals ( "org.universAAL.support" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return containsItests; } 
@ org.junit.Test public void addGenreToFilm_ByGenreAndFilmId () { try { director = new am.aca.dao.impljdbc.DirectorDaoJdbc () .addDirector ( "Matt Ross", false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } film.setTitle ( "Captain Fantastic" ) ; film.addDirector ( director ) ; film.addGeners ( Genre.DRAMA ) ; filmDao.addFilm ( film ) ; assertTrue ( filmDao.addGenreToFilm ( film.getGeners () .get ( 0 ) , film.getId () ) ) ; } 
protected java.util.List retrieveClassesForIngredients () { if ( ( getFixSpace () .strategy () .equals ( IngredientSpaceStrategy.LOCAL ) ) || ( getFixSpace () .strategy () .equals ( IngredientSpaceStrategy.PACKAGE ) ) ) return originalVariant.getAffectedClasses () ; try { if ( getFixSpace () .strategy () .equals ( IngredientSpaceStrategy.GLOBAL ) ) return this.mutatorSupporter.getFactory () .Type () .getAll () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { accessToken = loginResult.getAccessToken () ; userProfile = com.facebook.Profile.getCurrentProfile () ; try { if ( ( userProfile ) != null ) { com.andela.bark.models.User user = com.andela.bark.models.User.createFacebookUser ( userProfile ) ; com.andela.bark.GKprManger gKprManger = new com.andela.bark.GKprManger ( user, activity ) ; if ( gKprManger.isAuthenticated ) { android.content.Intent i = new android.content.Intent ( activity, com.andela.bark.FragmentHostActivity.class ) ; activity.startActivity ( i ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void toHTMLTable ( java.io.PrintWriter output ) { T tmp; output.print ( "<table>" ) ; try { while ( this.results.hasNext () ) { tmp = this.results.next () ; output.print ( tmp.toHTMLTableRow () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } output.print ( "</table>" ) ; output.flush () ; } 
public org.test.framework.core.runtime.TestResult execute () { org.test.framework.core.runtime.TestResult result = new org.test.framework.core.runtime.TestResult () ; try { for ( java.lang.Class<?> cl : classList ) { org.test.framework.core.runtime.TestSuite suite = new org.test.framework.core.runtime.TestSuite () ; java.util.List<java.lang.String> names = getMethodNames ( org.test.framework.core.runtime.Runtime.ANNOTATION, cl ) ; for ( java.lang.String methodName : names ) { suite.add ( new org.test.framework.core.runtime.TestCase ( methodName ) ) ; } suite.run ( result, cl ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( holder.joinButton.getText () .equals ( getString ( R.string.game_lobby_button_join_team ) ) ) { if ( dbTeam.addDBPlayer ( dbTeam.getName () ) ) { holder.joinButton.setText ( getString ( R.string.game_lobby_button_leave_team ) ) ; } else { android.widget.Toast.makeText ( getActivity () .getApplicationContext () , "This team is full", Toast.LENGTH_SHORT ) .show () ; } } else { dbTeam.removeDBPlayer ( getRef ( position ) ) ; holder.joinButton.setText ( getString ( R.string.game_lobby_button_join_team ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void init ( org.magic.api.beans.MagicDeck deck ) { cards = new java.util.ArrayList<org.magic.api.beans.MagicCard> () ; if ( deck != null ) if ( ( deck.getMap () ) != null ) for ( java.util.Map.Entry<org.magic.api.beans.MagicCard, java.lang.Integer> cci : deck.getMap () .entrySet () ) { org.magic.api.beans.MagicCard mc = cci.getKey () ; for ( int i = 0; i < ( cci.getValue () ) ; i++ ) cards.add ( mc ) ; } try { refresh () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { if ( resultCode == ( RESULT_OK ) ) { io.emqtt.emqandroidtoolkit.model.Connection connection = data.getParcelableExtra ( ConnectionActivity.EXTRA_CONNECTION ) ; if ( null != connection ) { switch ( requestCode ) { case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_ADD: mConnectionAdapter.notifyItemInserted ( ( ( mConnectionResults.size () ) - 1 ) ) ; break; case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_EDIT: mConnectionAdapter.notifyItemChanged ( mPosition ) ; break; default: break; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { setTaskImage () ; try { if ( isTeamATurn ) android.widget.Toast.makeText ( com.example.michael.archerygame.GameActivity.getGameContext () , getNextPlayerTeamA () , Toast.LENGTH_SHORT ) .show () ; else android.widget.Toast.makeText ( com.example.michael.archerygame.GameActivity.getGameContext () , getNextPlayerTeamB () , Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } isTeamATurn = ! ( isTeamATurn ) ; } 
private void handleByTerminatingIfWithinDialog ( android.javax.sip.ClientTransaction clientTransaction ) { logger.debug ( "{} request failed because call or transaction did not exist.", clientTransaction.getRequest () .getMethod () ) ; android.javax.sip.Dialog dialog = clientTransaction.getDialog () ; try { if ( ( dialog != null ) && ( ! ( ( ( dialog.getState () ) == ( android.javax.sip.DialogState.EARLY ) ) || ( ( dialog.getState () ) == ( android.javax.sip.DialogState.TERMINATED ) ) ) ) ) { sendByeRequest ( dialog ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void assertEquals ( java.lang.Object expected, java.lang.Object actual, java.lang.String message ) { boolean condition; try { if ( expected == null ) { condition = actual == null; } else { condition = expected.equals ( actual ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } com.triangleleft.assertdialog.AssertDialog.assertTrue ( condition, message ) ; } 
public void update () { width = display.getFrame () .getWidth () ; try { height = display.getFrame () .getHeight () ; } catch ( Exception ex ) { ex.printStackTrace () ; } keyManager.update () ; if ( ( dev.Same4254.ThisGame.States.State.getCurrentState () ) != null ) dev.Same4254.ThisGame.States.State.getCurrentState () .update () ; repaint () ; } 
public boolean canAdvance ( java.lang.Integer[] counters, java.lang.Integer[] boundaries ) { try { for ( int cElem = 0; ( cElem < ( counters.length ) ) && ( cElem < ( boundaries.length ) ) ; ++cElem ) { if ( ! ( counters[cElem].equals ( boundaries[cElem] ) ) ) return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public com.example.vincentzhang.Sprite.AbstractSprite detectCollide ( com.example.vincentzhang.Sprite.ImageSprite imgSprite ) { try { for ( com.example.vincentzhang.Sprite.AbstractCollidableSprite bomb : bombs ) { if ( bomb.detectCollide ( imgSprite ) ) return bomb; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.example.vincentzhang.Sprite.AbstractCollidableSprite explosion : explosions ) { if ( explosion.detectCollide ( imgSprite ) ) return null; } return null; } 
public void init () { try { library.activity.VinhNT_Common.init () ; } catch ( Exception ex ) { ex.printStackTrace () ; } icon = new android.widget.ImageView ( this ) ; icon.setImageResource ( R.mipmap.icon_default ) ; requestHTTP = new library.connect.VinhNT_HTTP ( this ) ; android.widget.LinearLayout mainView = new android.widget.LinearLayout ( this ) ; setContentView ( mainView ) ; mainView.setOrientation ( LinearLayout.VERTICAL ) ; library.activity.VinhNT_Header header = new library.activity.VinhNT_Header ( this ) ; mainView.addView ( header, VinhNT_Common.size_10_per_HORIZONTAL ) ; mainView.addView ( getContent () , VinhNT_Common.size_80_per_HORIZONTAL ) ; mainView.addView ( getFooter () , VinhNT_Common.size_10_per_HORIZONTAL ) ; } 
public java.lang.Integer getGratitudesComplete () { java.lang.Integer gratitudeComplete = 0; try { for ( java.lang.String gratitude : gratitudes ) { gratitudeComplete += java.lang.Math.min ( 100, ( ( ( gratitude.length () ) * 100 ) / ( ai.victorl.toda.data.entry.Entry.MIN_ENTRY_LENGTH ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.lang.Math.min ( 100, java.lang.Long.valueOf ( java.lang.Math.round ( ( gratitudeComplete / 3.0 ) ) ) .intValue () ) ; } 
@ java.lang.Override public org.junit.runners.model.Statement apply ( org.junit.runners.model.Statement base, org.junit.runner.Description description ) { org.junit.runners.model.Statement newStatement = base; try { for ( org.junit.runners.model.TestClass extension : extensions ) { newStatement = prepareBeforeClasses ( extension, newStatement ) ; newStatement = prepareAfterClasses ( extension, newStatement ) ; newStatement = prepareRules ( extension, newStatement, description ) ; newStatement = prepareBefores ( extension, newStatement, null ) ; newStatement = prepareAfters ( extension, newStatement, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return newStatement; } 
public static com.drewhannay.chesscrafter.models.PieceType getKingPieceType () { java.util.Map<com.drewhannay.chesscrafter.models.Direction, java.lang.Integer> movements = com.google.common.collect.Maps.newHashMap () ; try { for ( com.drewhannay.chesscrafter.models.Direction direction : com.drewhannay.chesscrafter.models.Direction.values () ) { movements.put ( direction, 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new com.drewhannay.chesscrafter.models.PieceType ( "King", movements, null ) ; } 
private void init ( com.jaspersoft.jasperserver.jaxrs.client.core.SessionStorage sessionStorage ) { com.jaspersoft.jasperserver.jaxrs.client.core.RestClientConfiguration configuration = sessionStorage.getConfiguration () ; try { contentType = ( ( configuration.getContentMimeType () ) == ( com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON ) ) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML; } catch ( Exception ex ) { ex.printStackTrace () ; } acceptType = ( ( configuration.getAcceptMimeType () ) == ( com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON ) ) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML; headers = new javax.ws.rs.core.MultivaluedHashMap<java.lang.String, java.lang.String> () ; usersWebTarget = sessionStorage.getRootTarget () .path ( "/rest_v2" ) ; } 
@ org.testng.annotations.Test ( groups = { "integration", "services", "httpdelete", "virtual" }, description = "A negative integration test to verify the response code from a delete call" ) public void compareDeleteResponseBadCode201Test () { com.google.gson.JsonObject request = new com.google.gson.JsonObject () ; request.addProperty ( "id", 1 ) ; request.addProperty ( "title", "foo1" ) ; try { request.addProperty ( "body", "bar" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } request.addProperty ( "userId", 5 ) ; com.coveros.selenified.services.Call call = this.calls.get () ; call.delete ( "posts/5", new com.coveros.selenified.services.Request ( request ) ) .assertEquals ( 201 ) ; finish ( 1 ) ; } 
@ org.springframework.context.annotation.Bean public javax.persistence.EntityManagerFactory entityManagerFactory () { java.util.logging.Logger.getLogger ( "org.hibernate" ) .setLevel ( java.util.logging.Level.INFO ) ; org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter () ; vendorAdapter.setShowSql ( false ) ; vendorAdapter.setGenerateDdl ( false ) ; vendorAdapter.setDatabasePlatform ( "org.hibernate.dialect.PostgreSQLDialect" ) ; org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean factory = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean () ; factory.setJpaVendorAdapter ( vendorAdapter ) ; try { factory.setPackagesToScan ( "com.teamd.taxi.entity" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } factory.setDataSource ( dataSource () ) ; factory.afterPropertiesSet () ; return factory.getObject () ; } 
private void buildItemWithTwoRows () { createDVPanels () ; java.lang.String text = getLatexString ( isInputTreeItem () , org.geogebra.web.web.gui.view.algebra.RadioTreeItem.LATEX_MAX_EDIT_LENGHT ) ; latex = text != null; try { ihtml.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( updateDefinitionPanel () ) { plainTextItem.clear () ; plainTextItem.add ( definitionPanel ) ; } if ( updateValuePanel ( text ) ) { outputPanel.add ( valuePanel ) ; plainTextItem.add ( outputPanel ) ; } ihtml.add ( plainTextItem ) ; } 
@ org.junit.Test public void testRegexGetsRootWithAccidental () { java.lang.String chord = "Bb"; try { parser.run ( chord ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } junit.framework.Assert.assertEquals ( "Bb", parser.getRoot () ) ; java.lang.String otherChord = "F#"; parser.run ( otherChord ) ; junit.framework.Assert.assertEquals ( "F#", parser.getRoot () ) ; } 
@ org.testng.annotations.Test ( enabled = true ) public void pingRequestShouldBeValid () throws java.lang.Exception { context.start () ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = getMockEndpoint ( "mock:ping" ) ; try { mockEndpoint.expectedMinimumMessageCount ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mockEndpoint.expectedMessagesMatches ( isValidPingRequest ( testMessage ) ) ; template () .requestBody ( "direct:testShs2riv", testMessage ) ; mockEndpoint.assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS.toMillis ( 10 ) ) ; } 
public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id, java.lang.String name, java.lang.String password, codeu.chat.common.Time creationTime ) { codeu.chat.common.User user = null; try { if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id, name, creationTime ) ; model.add ( user, password ) ; codeu.chat.server.Controller.LOG.info ( "newUser with password success ( user.id=%s user.name=%s user.time=%s ) ", id, name, creationTime ) ; } else { codeu.chat.server.Controller.LOG.info ( "newUser fail - id in use ( user.id=%s user.name=%s user.time=%s ) ", id, name, creationTime ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return user; } 
public void cleanUp () { try { switch ( templateSelection ) { case SPECIFIC_VALUE: single_value = null; break; case VALUE_LIST: case COMPLEMENTED_LIST: value_list.clear () ; value_list = null; break; case VALUE_RANGE: min_value = null; max_value = null; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } templateSelection = template_sel.UNINITIALIZED_TEMPLATE; } 
private void copyId ( java.lang.String id ) { android.content.ClipboardManager clipboard = ( ( android.content.ClipboardManager ) ( getSystemService ( Context.CLIPBOARD_SERVICE ) ) ) ; android.content.ClipData clip = android.content.ClipData.newPlainText ( "ID", id ) ; try { clipboard.setPrimaryClip ( clip ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.CharSequence dialogText = "Object id copied to clipboard"; int duration = android.widget.Toast.LENGTH_SHORT; android.widget.Toast.makeText ( this, dialogText, duration ) .show () ; } 
public final boolean newProject ( java.lang.String projectName ) { final de.dfki.vsm.editor.project.ProjectEditor editor = new de.dfki.vsm.editor.project.ProjectEditor ( true ) ; try { editor.getSceneFlowEditor () .getSceneFlow () .setName ( editor.getEditorProject () .getEditorConfig () .sMAINSUPERNODENAME ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } addProjectTab ( projectName, editor ) ; if ( ( mProjectEditors.getTabCount () ) == 1 ) { setContentPane ( mProjectEditors ) ; mEditorMenuBar.setVisible ( true ) ; } refresh () ; return true; } 
private void sendPackets ( java.util.ArrayList<sr.Packet> packets ) throws java.io.IOException { try { while ( ( m_lastSent ) != ( m_winUpper ) ) { sr.Packet p = packets.get ( m_actual ) ; m_socket.send ( p.getDatagramPacket ( m_destAddr, m_destPort ) ) ; m_timeouts.startTimer ( p, sr.SelectiveRepeatUnit.PACKET_TIMEOUT ) ; m_lastSent = ( ( m_lastSent ) + 1 ) % ( m_modulo ) ; m_actual = m_actual += 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( duringDetail.getVisibility () ) == ( android.view.View.GONE ) ) { duringDetail.setVisibility ( View.VISIBLE ) ; duringDetail.startAnimation ( fadeIn ) ; } else { duringDetail.setVisibility ( View.GONE ) ; duringDetail.startAnimation ( fadeOut ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void newArray ( int size ) { com.himamis.retex.editor.share.meta.MetaArray meta = formula.getMetaModel () .getArray () ; com.himamis.retex.editor.share.model.MathArray array = new com.himamis.retex.editor.share.model.MathArray ( meta, size ) ; currentField.addArgument ( currentOffset, array ) ; com.himamis.retex.editor.share.model.MathSequence field = new com.himamis.retex.editor.share.model.MathSequence () ; array.setArgument ( 0, field ) ; try { for ( int i = 1; i < size; i++ ) { array.setArgument ( i, new com.himamis.retex.editor.share.model.MathSequence () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } currentField = field; currentOffset = 0; } 
@ org.junit.Test public void add_same_num_Test () { Chronotimer c0 = new Chronotimer () ; c0.power () ; assertEquals ( true, c0.newRun () ) ; try { assertEquals ( true, c0.num ( "12" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( false, c0.num ( "12" ) ) ; } 
@ java.lang.Override public java.lang.Long createPost ( java.lang.Long userId, edu.iis.mto.blog.api.request.PostRequest postRequest ) { edu.iis.mto.blog.domain.model.User user = userRepository.findOne ( userId ) ; edu.iis.mto.blog.domain.model.BlogPost post = mapper.mapToEntity ( postRequest ) ; post.setUser ( user ) ; try { blogPostRepository.save ( post ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return post.getId () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.common_names_description ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.os.Bundle extras = getIntent () .getExtras () ; common_name_rowid = extras.getLong ( CommonNamesAdapter.COMMON_NAME_ROWID ) ; common_name = extras.getString ( CommonNamesAdapter.COMMON_NAME ) ; common_name_count = extras.getString ( CommonNamesAdapter.COMMON_NAME_COUNT ) .toString () ; description = ( ( common_name_count ) + ( text ) ) + ( common_name ) ; balu.android.CommonNameDescription.tv = ( ( android.widget.TextView ) ( findViewById ( R.id.common_name_description_text ) ) ) ; balu.android.CommonNameDescription.tv.setText ( description ) ; } 
private void attachReactions () { client.MainListener controller = new client.MainListener ( this ) ; settings.addMouseListener ( controller ) ; close.addMouseListener ( controller ) ; logout.addMouseListener ( controller ) ; try { trayIcon.addMouseListener ( controller ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } reload.addMouseListener ( controller ) ; } 
public long getNextChapterStart ( long position ) { long ret = com.monsterbutt.homeview.plex.media.PlexVideoItem.BAD_CHAPTER_START; try { if ( hasChapters () ) { for ( com.monsterbutt.homeview.plex.media.Chapter chapter : mVideo.getChapters () ) { if ( ( chapter.getStartTimeOffset () ) >= position ) { ret = chapter.getStartTimeOffset () ; break; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ret; } 
private void updateFaceCentroid () { faceCentroid.setToZero () ; for ( int i = 0; i < ( edges.size () ) ; i++ ) faceCentroid.add ( edges.get ( i ) .getOriginVertex () ) ; try { faceCentroid.scale ( ( 1.0 / ( edges.size () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.lang.String getAsBroadcast ( io.minimum.minecraft.superbvote.votes.Vote vote ) { org.bukkit.entity.Player onlineVoted = org.bukkit.Bukkit.getPlayerExact ( vote.getName () ) ; java.lang.String replaced = message; try { for ( io.minimum.minecraft.superbvote.configuration.message.placeholder.PlaceholderProvider provider : io.minimum.minecraft.superbvote.configuration.message.PlainStringMessage.PROVIDER_LIST ) { if ( provider.canUse () ) { replaced = provider.applyForBroadcast ( onlineVoted, replaced, vote ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return replaced; } 
private void save ( T value ) { try { switch ( storageType ) { case LOCAL: net.wbz.moba.controlcenter.web.client.LocalStorage.getInstance () .set ( getConfigKey () , convertValueToString ( value ) ) ; setValue ( value ) ; break; case REMOTE: net.wbz.moba.controlcenter.web.client.ServiceUtils.getConfigService () .saveValue ( getConfigKey () , convertValueToString ( value ) , new net.wbz.moba.controlcenter.web.client.util.EmptyCallback<java.lang.Void> () ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { switch ( view.getId () ) { case R.id.btn_start: startLevel ( 0 ) ; break; case R.id.btn_level_easy: startLevel ( 1 ) ; break; case R.id.btn_level_medium: startLevel ( 2 ) ; break; case R.id.btn_level_difficult: startLevel ( 3 ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void index () { com.google.gson.Gson gson = new com.google.gson.Gson () ; int statsCount = ( ( int ) ( controllers.DailyStat.count () ) ) ; java.util.List<controllers.DailyStat> dailyStats = controllers.DailyStat.all () .from ( ( statsCount - 5 ) ) .fetch ( 5 ) ; try { if ( dailyStats != null ) { render ( dailyStats ) ; } else { renderHtml ( "empty" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void deleteTask ( java.lang.String[] taskString ) { try { for ( int i = 0; i < ( tasks.size () ) ; i++ ) { if ( taskString[0].equals ( tasks.get ( i ) .getTitle () ) ) { if ( taskString[1].equals ( tasks.get ( i ) .getDescription () ) ) { tasks.remove ( i ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public Move makeMove ( BoardAndRack bar ) { java.lang.System.out.println ( "Input word including tiles on board, ex. \"DOG\"" ) ; java.lang.String word = getNextLine () ; try { java.lang.System.out.println ( "Input starting position ( leftmost or topmost ) including tiles on board ex. \" ( 1,3 ) \"" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Position p = new Position ( getNextLine () ) ; java.lang.System.out.println ( "Is horizontal move? Y/N ex. \"Y\"" ) ; boolean isHorizontal = s.nextLine () .equals ( "Y" ) ; Move m = bar.board.convertToMove ( new PossibleMove ( word, p.x, p.y, isHorizontal ) ) ; java.lang.System.out.println ( m.toString () ) ; return m; } 
private void notifyRendering () { if ( ( drawTask ) != null ) { drawTask.requestClear () ; } try { if ( mUpdateInNewThread ) { synchronized ( this ) { mDrawTimes.clear () ; } synchronized ( drawTask ) { drawTask.notifyAll () ; } } else { mDrawTimes.clear () ; removeMessages ( master.flame.danmaku.controller.DrawHandler.UPDATE ) ; sendEmptyMessage ( master.flame.danmaku.controller.DrawHandler.UPDATE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mRenderingState.inWaitingState = false; } 
@ java.lang.Override public void setComparisonMatches ( java.util.List<uk.ac.ebi.pride.spectracluster.util.ComparisonMatch> comparisonMatches ) { try { this.bestComparisonMatches.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( comparisonMatches != null ) && ( ( comparisonMatches.size () ) > 0 ) ) { this.bestComparisonMatches.addAll ( comparisonMatches ) ; java.util.Collections.sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches.get ( 0 ) .getSimilarity () ; } else { lowestBestComparisonSimilarity = 0; } bestComparisonMatchIds = null; } 
@ java.lang.Override public void in ( java.lang.String token ) { messageToken = token; l ( ( token + " is in" ) ) ; l ( java.lang.String.valueOf ( session.getWits () .size () ) ) ; org.json.JSONObject attr = new org.json.JSONObject () ; try { session.sendTo ( localStream, true, attr, token ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void resolveCollision ( asteroids.model.WorldObject other ) { try { if ( other instanceof asteroids.model.Ship ) this.resolveCollision ( ( ( asteroids.model.Ship ) ( other ) ) ) ; else if ( other instanceof asteroids.model.Bullet ) this.resolveCollision ( ( ( asteroids.model.Bullet ) ( other ) ) ) ; else if ( other instanceof asteroids.model.MinorPlanet ) this.resolveCollision ( ( ( asteroids.model.MinorPlanet ) ( other ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean checkForWinner () { try { for ( Car c : cars ) if ( c.checkWin () ) { javax.swing.JOptionPane.showMessageDialog ( null, ( ( ( ( ( "We have a winner!\nCar " + ( c.getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c.getRacingNumber () ) ) + " : " ) + ( c.getDistanceTraveled () ) ) ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public static synchronized <T> T provide ( final java.lang.Class<T> clz ) { try { if ( io.demor.nuts.lib.eventbus.ListenerBus.mMethodProvider.containsKey ( clz ) ) { return ( ( T ) ( io.demor.nuts.lib.eventbus.ListenerBus.mMethodProvider.get ( clz ) .mProxy ) ) ; } else { return io.demor.nuts.lib.eventbus.ListenerBus.addClz ( clz ) .mProxy; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void generateStaticKeyFunctionForRole ( pt.ist.fenixframework.dml.Role role, java.io.PrintWriter out ) { try { if ( ( role.getMultiplicityUpper () ) != 1 ) { println ( out, generateMapKeyFunction ( role.getName () , role.getType () .getFullName () , "Comparable<?>", "Oid", false ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkMinutesSinceLastAction () { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction; } try { if ( ( minutesSinceLastAction ) >= ( settings.getIdleTime () ) ) { stateMachine.reset () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void importConcept_shouldAddNewDescriptionsToConcept () throws java.lang.Exception { org.openmrs.module.openconceptlab.client.OclConcept oclConcept = newOclConcept () ; importer.importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , update, oclConcept ) ; org.openmrs.module.openconceptlab.client.OclConcept.Description desc1 = new org.openmrs.module.openconceptlab.client.OclConcept.Description () ; desc1.setDescription ( "test oclConceptDescription" ) ; desc1.setLocale ( org.openmrs.api.context.Context.getLocale () ) ; try { oclConcept.getDescriptons () .add ( desc1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } importer.importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , update, oclConcept ) ; assertImported ( oclConcept ) ; } 
public se.rydberg.handla.model.TextNumber splitNumericAndStingIfFirstLetterIsDigit ( java.lang.String word ) { se.rydberg.handla.model.TextNumber textNumber = new se.rydberg.handla.model.TextNumber () ; try { if ( java.lang.Character.isDigit ( word.charAt ( 0 ) ) ) { return splitNumericAndString ( word ) ; } else { textNumber.setText ( word ) ; textNumber.setNumber ( "" ) ; return textNumber; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException, jxl.read.biff.BiffException { assertTrue ( ( ( workbook.getSheets () .length ) > 0 ) ) ; for ( java.lang.String name : workbook.getSheetNames () ) { if ( name.equals ( getResources ( activityTestRule ) .getString ( R.string.default_sheet_name ) ) ) { return workbook.getSheet ( name ) ; } } try { workbook.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public java.util.List<java.lang.Object> getPacketData ( java.util.List<java.lang.Object> list ) { try { for ( org.halvors.electrometrics.common.component.IComponent component : components ) { if ( component instanceof org.halvors.electrometrics.common.tile.component.ITileNetworkableComponent ) { org.halvors.electrometrics.common.tile.component.ITileNetworkableComponent tileComponent = ( ( org.halvors.electrometrics.common.tile.component.ITileNetworkableComponent ) ( component ) ) ; list.addAll ( tileComponent.getPacketData ( new java.util.ArrayList<> () ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return list; } 
public int run () { int exponent = 1000; java.math.BigInteger base = java.math.BigInteger.valueOf ( 2 ) ; java.math.BigInteger value = java.math.BigInteger.ZERO; int sum = 0; try { value = base.pow ( exponent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String str = value.toString () ; for ( int i = 0; i < ( str.length () ) ; i++ ) sum += ( ( int ) ( ( str.charAt ( i ) ) - '0' ) ) ; return sum; } 
@ java.lang.Override public void getValue () { try { rawMoney = com.sungjae.app.showmethemoney.data.DataMap.readFloat ( DataMapKey.MONEY_VALUE_RAW ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } coinValue = com.sungjae.app.showmethemoney.data.DataMap.readFloat ( DataMapKey.COIN_AMOUNT ) ; totalValue = com.sungjae.app.showmethemoney.data.DataMap.readFloat ( DataMapKey.TOTAL_VALUE_RAW ) ; enabled = com.sungjae.app.showmethemoney.activity.setting.ConfigurationConstants.getEnabledMoneyKeeper () ; if ( enabled ) requestToKeep = com.sungjae.app.showmethemoney.activity.setting.ConfigurationConstants.getKeepValueMoneyKeeper () ; else requestToKeep = 0; } 
public static int findMaxArg ( int upperBound, int lowerBound, int page ) { int maxCandidate = 0; java.lang.Double maxCandidateValue = 0.0; try { for ( int i = lowerBound; i < upperBound; i++ ) { if ( ( pagenumber.Viterbi.viterbiPages.get ( page ) .get ( i ) ) > maxCandidateValue ) { maxCandidateValue = pagenumber.Viterbi.viterbiPages.get ( page ) .get ( i ) ; maxCandidate = i; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return maxCandidate; } 
public static void activeClock ( int id ) { mine.android.api.modules.ClockEntry clockEntry = mine.android.api.ClockEntryAPI.getById ( id ) ; java.util.Calendar nextAlarmTime = mine.android.api.AlarmAPI.getNextAlarmTime ( clockEntry ) ; try { android.util.Log.i ( ( "next alarm time for id: " + id ) , nextAlarmTime.getTime () .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mine.android.api.AlarmAPI.setTimer ( id, nextAlarmTime ) ; } 
public void setPageLength ( int pLength ) { try { if ( ( pageLength ) != pLength ) { pageLength = pLength; page = ( startIndex ) / pLength; checkPageCount () ; if ( ( grid ) != null ) { grid.setHeightByRows ( pLength ) ; grid.setHeightMode ( HeightMode.ROW ) ; } if ( ! ( setStartIndex () ) ) { fireItemSetChange () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void validate ( java.lang.Object obj, org.springframework.validation.Errors err ) { boolean isAllNull = true; edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm workspaceForm = ( ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm ) ( obj ) ) ; java.util.List<edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace> workspaceList = workspaceForm.getWorkspaceList () ; if ( workspaceList != null ) { for ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace workspace : workspaceList ) { java.lang.String internalId = workspace.getId () ; if ( internalId != null ) { isAllNull = false; break; } } } try { if ( isAllNull ) { err.reject ( "workspace_selection.required" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void sendEvent ( final com.facebook.react.bridge.ReactContext context, final java.lang.String eventName, final com.facebook.react.bridge.WritableMap params ) { try { if ( context.hasActiveCatalystInstance () ) { context.getJSModule ( DeviceEventManagerModule.RCTDeviceEventEmitter.class ) .emit ( eventName, params ) ; } else { android.util.Log.d ( io.fullstack.firestack.FirestackUtils.TAG, "Waiting for CatalystInstance before sending event" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onError ( java.lang.String message, java.lang.String code, java.lang.Exception e ) { com.facebook.react.bridge.WritableMap params = com.facebook.react.bridge.Arguments.createMap () ; params.putString ( "eventName", "connectionStateChange" ) ; try { params.putString ( "message", message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } params.putString ( "code", code ) ; sendEvent ( params ) ; } 
@ java.lang.Override public void onBindViewHolder ( com.example.sergio.spotify_angular.adapters.CategoriesAdapter.CategoriesViewHolder holder, int position ) { kaaes.spotify.webapi.android.models.Category category = data.get ( position ) ; holder.setName ( category.name ) ; bindToListener ( holder ) ; try { com.squareup.picasso.Picasso.with ( context ) .load ( category.icons.get ( 0 ) .url ) .placeholder ( R.drawable.ic_categories ) .into ( holder.getImage () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { if ( bundleExtra != null ) { if ( ( user.getDisplayName () ) != null ) { artRated = ( ( java.util.HashMap<java.lang.String, java.lang.String> ) ( dataSnapshot.child ( "Users" ) .child ( user.getDisplayName () ) .child ( "rated" ) .getValue () ) ) ; updateRatingView () ; addClickListeners () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getTime () { java.lang.String ret = ""; if ( ( hour ) < 10 ) ret += "0"; ret += ( java.lang.String.valueOf ( hour ) ) + " : "; if ( ( minute ) < 10 ) ret += "0"; try { ret += java.lang.String.valueOf ( minute ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ret; } 
private void setUpLocationRequest () { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest.setInterval ( java.util.concurrent.TimeUnit.SECONDS.toMillis ( java.lang.Integer.parseInt ( android.support.v7.preference.PreferenceManager.getDefaultSharedPreferences ( mContext ) .getString ( mContext.getString ( R.string.pref_key_measure_interval ) , mContext.getString ( R.string.pref_key_measure_interval_def ) ) ) ) ) ; mLocationRequest.setFastestInterval ( mLocationRequest.getInterval () ) ; try { mLocationRequest.setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateLifelinesPosition () { java.util.Iterator<uml.sequencediagram.Lifeline> it = lifelines.iterator () ; ( currentTimePosition ) ++; try { while ( it.hasNext () ) { ( ( uml.sequencediagram.Lifeline ) ( it.next () ) ) .setCurrentPosition ( currentTimePosition ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void init () { try { cd4017be.lib.BlockItemRegistry.registerItemStack ( new net.minecraft.item.ItemStack ( this, 1, cd4017be.circuits.block.BlockRSPipe1.ID_Transport ) , "rsp1bitN" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cd4017be.lib.BlockItemRegistry.registerItemStack ( new net.minecraft.item.ItemStack ( this, 1, cd4017be.circuits.block.BlockRSPipe1.ID_Extraction ) , "rsp1bitO" ) ; cd4017be.lib.BlockItemRegistry.registerItemStack ( new net.minecraft.item.ItemStack ( this, 1, cd4017be.circuits.block.BlockRSPipe1.ID_Injection ) , "rsp1bitI" ) ; } 
private void setValues ( java.lang.Number n ) { java.util.Map<java.lang.String, java.lang.Number> m = new java.util.HashMap<java.lang.String, java.lang.Number> () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m.put ( ce.name () .toLowerCase () , n ) ; } try { setValues ( m ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { try { if ( isPlaying ) { audio.stop () ; isPlaying = false; button.setText ( "Play" ) ; } else { audio.play () ; isPlaying = true; button.setText ( "Pause" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addMPButtonActionPerformed ( java.awt.event.ActionEvent evt ) { es.upc.fib.prop.usParlament.presentation.State st = ( ( es.upc.fib.prop.usParlament.presentation.State ) ( stateComboBox.getSelectedItem () ) ) ; if ( ( ( java.lang.String ) ( districtComboBox.getSelectedItem () ) ) == null ) return; java.lang.Integer dt = java.lang.Integer.parseInt ( ( ( java.lang.String ) ( districtComboBox.getSelectedItem () ) ) ) ; try { pc.addMPToCommunity ( cNumb, st, dt ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } pops.updateMPsInCommunityTable () ; updateBoxes () ; } 
@ java.lang.Override public void tickPrice ( int orderId, int field, double price, int canAutoExecute ) { try { if ( ( ( TickType.BID ) == field ) || ( ( TickType.ASK ) == field ) ) java.lang.System.out.println ( ( ( ( ( ( "Ticker ID " + orderId ) + " FIELD " ) + field ) + " PRICE " ) + price ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () throws java.io.IOException { subTasks = new java.util.ArrayList<> () ; try { org.apache.commons.io.FileUtils.forceMkdir ( new java.io.File ( PATH_DOWNLOADED ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mediaStorageClient = new eu.europeana.harvester.db.filesystem.FileSystemMediaStorageClientImpl ( PATH_DOWNLOADED ) ; slaveProcessor = new eu.europeana.harvester.cluster.slave.processing.SlaveProcessor ( new eu.europeana.harvester.cluster.slave.processing.metainfo.MediaMetaInfoExtractor ( PATH_COLORMAP ) , new eu.europeana.harvester.cluster.slave.processing.thumbnail.ThumbnailGenerator ( PATH_COLORMAP ) , new eu.europeana.harvester.cluster.slave.processing.color.ColorExtractor ( PATH_COLORMAP ) , mediaStorageClient ) ; taskDocumentReference = new eu.europeana.harvester.cluster.slave.processing.ProcessingJobTaskDocumentReference ( DocumentReferenceTaskType.UNCONDITIONAL_DOWNLOAD, "source-reference-1", subTasks ) ; } 
public android.support.v4.content.Loader<java.util.ArrayList<gov.wa.wsdot.android.wsdot.shared.AmtrakCascadesServiceItem>> onCreateLoader ( int id, android.os.Bundle args ) { try { if ( gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.fromLocation.equalsIgnoreCase ( gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.toLocation ) ) { return new gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.DepartingTrainsLoader ( getActivity () ) ; } else { return new gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.DepartingArrivingTrainsLoader ( getActivity () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void destroyTool ( int slot ) { if ( ( slot == ( -1 ) ) || ( ( slots[slot] ) == null ) ) return; try { if ( ( com.vanhal.progressiveautomation.ref.ToolHelper.tinkersType ( slots[slot].getItem () ) ) >= 0 ) { addToInventory ( slots[slot] ) ; } else { if ( ! ( com.vanhal.progressiveautomation.PAConfig.destroyTools ) ) { addToInventory ( slots[slot] ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } slots[slot] = null; } 
private static int getMinMatchingLabel ( LabeledNeighbor[] neighbors, byte currentColorValue ) { int minMatchingLabel = java.lang.Integer.MAX_VALUE; try { for ( LabeledNeighbor neighbor : neighbors ) { int label = neighbor.getLabel () ; if ( ( ( label > 0 ) && ( label < minMatchingLabel ) ) && ( currentColorValue == ( neighbor.getColor () ) ) ) { minMatchingLabel = label; } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( minMatchingLabel != ( java.lang.Integer.MAX_VALUE ) ) { return minMatchingLabel; } else { return 0; } } 
public synchronized void releaseAllLocks ( simpledb.TransactionId tid, boolean commit ) throws java.io.IOException { java.util.HashSet<simpledb.PageId> pids = this.getAllPagesByTid ( tid ) ; if ( pids == null ) { return; } java.util.HashSet<simpledb.PageId> cloneSet = ( ( java.util.HashSet<simpledb.PageId> ) ( pids.clone () ) ) ; try { for ( simpledb.PageId pid : cloneSet ) { this.releaseLock ( tid, pid ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { super.onDestroy () ; if ( ( mReceivedPermissions ) == null ) { return; } try { for ( int i = 0; i < ( mReceivedPermissions.length ) ; i++ ) { java.lang.String permission = mReceivedPermissions[i]; int result = mReceivedPermissionsResults[i]; io.jasonatwood.permissionmanager.PermissionManager.onPermissionResponse ( permission, result ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void setPollution ( double newPollution, net.minecraft.world.World world, net.minecraft.util.math.BlockPos chunkPos ) { try { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey.getKey ( world, chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData.get ( world ) ; instance.hashMap.put ( key, value ) ; instance.markDirty () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn, org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil.findCorrespondingOlapTable ( relationalColumn.getLogicalTable () , olapModel ) ; try { if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable.getLogicalColumns () ) { if ( col.getPhysicalColumn () .getId () .equals ( relationalColumn.getPhysicalColumn () .getId () ) ) { return col; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void execute () throws org.apache.maven.plugin.MojoExecutionException, org.apache.maven.plugin.MojoFailureException { if ( ( source ) == null ) { throw new org.apache.maven.plugin.MojoFailureException ( this, "The source is null", "" ) ; } if ( ( target ) == null ) { throw new org.apache.maven.plugin.MojoFailureException ( this, "The target is null!", ( "The target path for the " + "module-fragment.xml is null. Please provide a target path." ) ) ; } com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser parser = new com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser ( source, target, project ) ; try { parser.parseModuleVm () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void fullConfig () throws java.lang.Exception { try { dir = testDir ( "fullConfig" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } new com.github.zhongl.ipage.KVEngineBuilder ( dir ) .backlog ( 10 ) .initialBucketSize ( 256 ) .chunkCapacity ( 4096 ) .flushByCount ( 5 ) .flushByElapseMilliseconds ( 500L ) .build () ; } 
public net.sf.memoranda.EventsManager.Month getMonth ( int m ) { nu.xom.Elements ms = yearElement.getChildElements ( "month" ) ; java.lang.String mm = java.lang.Integer.toString ( m ) ; try { for ( int i = 0; i < ( ms.size () ) ; i++ ) if ( ms.get ( i ) .getAttribute ( "month" ) .getValue () .equals ( mm ) ) return new net.sf.memoranda.EventsManager.Month ( ms.get ( i ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private void generateJava () throws io.konig.gae.datastore.CodeGeneratorException, java.io.IOException { try { if ( ( java ) != null ) { if ( ( java.getJavaDir () ) == null ) { throw new io.konig.gae.datastore.CodeGeneratorException ( "javaCodeGenerator.javaDir must be defined" ) ; } java.getJavaDir () .mkdirs () ; if ( java.isGenerateCanonicalJsonReaders () ) { generateCanonicalJsonReaders () ; } generateJavaCode () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getAnswerTest () { com.github.solairerove.woodstock.domain.Answer savedAnswer = com.github.solairerove.woodstock.utils.AnswerGenerator.generateAnswer () ; com.github.solairerove.woodstock.domain.Question savedQuestion = com.github.solairerove.woodstock.utils.QuestionGenerator.generateQuestion () ; savedQuestion.getAnswers () .add ( savedAnswer ) ; java.lang.Long questionId = questionRepository.save ( savedQuestion ) .getId () ; java.lang.Long answerId = savedAnswer.getId () ; try { org.junit.Assert.assertEquals ( savedAnswer, answerService.get ( questionId, answerId ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testAcceptHeaderLocale3 () throws java.lang.Exception { try { mockMvc.perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get ( "/index.page" ) .locale ( java.util.Locale.forLanguageTag ( "en-US" ) ) ) .andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers.status () .isOk () ) .andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers.content () .string ( org.hamcrest.core.StringContains.containsString ( "Welcome" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String _stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { getContents ( scope ) ; final java.lang.StringBuilder sb = new java.lang.StringBuilder ( ( ( getBuffer () .length ( scope ) ) * 200 ) ) ; try { for ( final java.lang.Object s : getBuffer () .iterable ( scope ) ) { sb.append ( s ) .append ( "\n" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } sb.setLength ( ( ( sb.length () ) - 1 ) ) ; return sb.toString () ; } 
@ java.lang.Override public void run () { java.lang.String s = ""; try { if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TWICE_TURN_WRIST ) ) { s = "turn wrist twice"; new com.theteamgo.fancywatch.MainActivity.StartGestureMessageTask () .execute ( Constant.CONTROL_TYPE_NEXT ) ; } else if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_UP ) ) { s = "turn wrist up"; } else if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_DOWN ) ) { s = "turn wrist down"; } else { s = "unknown gesture"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testEnabledFilterClearsFlow () throws java.lang.Exception { io.reactivex.observers.TestObserver<com.github.e13mort.stf.model.device.Device> testObserver = io.reactivex.Observable.fromArray ( getMock ( true, true, false ) , getMock ( true, true, true ) , getMock ( true, false, false ) , getMock ( false, true, false ) , getMock ( false, false, false ) ) .filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( true ) ) .test () ; try { testObserver.assertValueCount ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.inva.hipstertest.freemarker.controllers.RequestMapping ( value = "/freemarker/teacher/schedule/forms-wp", method = RequestMethod.POST ) @com.inva.hipstertest.freemarker.controllers.ResponseBody public java.util.List<com.inva.hipstertest.service.dto.FormDTO> getAvailableFormsBySearchCriteria ( @com.inva.hipstertest.freemarker.controllers.RequestBody com.inva.hipstertest.freemarker.searchcriteria.SearchCriteria searchCriteria ) { org.apache.commons.lang3.Validate.notNull ( searchCriteria.getLessonPosition () , "Field 'lessonPosition' on formSearchCriteria can not be null." ) ; try { org.apache.commons.lang3.Validate.notNull ( searchCriteria.getDate () , "Field 'Date' on formSearchCriteria can not be null." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( searchCriteria.getId () ) != null ) { return formService.findAllAvailablePlusOneById ( searchCriteria ) ; } return formService.findAvailableFormsByCurrentSchoolAndSearchCriteria ( searchCriteria ) ; } 
@ java.lang.Override public r48.RubyIO targetToBound ( r48.RubyIO target ) { long t = target.fixnumVal; long type = 0; if ( t >= 10000 ) { t -= 10000; type++; } r48.RubyIO base = new r48.RubyIO () ; base.arrVal = new r48.RubyIO[2]; base.type = '['; try { base.arrVal[0] = new r48.RubyIO () .setFX ( type ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } base.arrVal[1] = new r48.RubyIO () .setFX ( t ) ; return base; } 
@ org.junit.Test public void testEndPositionWithWhiteWordAndWithoutEndPeriod () { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile ( "\\." ) ; java.lang.String str = "He is Mr. United States"; java.util.List<java.lang.String> whiteList = cc.redpen.util.EndOfSentenceDetectorTest.generateUmList ( "Mr." ) ; cc.redpen.util.EndOfSentenceDetector detector = new cc.redpen.util.EndOfSentenceDetector ( pattern, whiteList ) ; try { org.junit.Assert.assertEquals ( ( -1 ) , detector.getSentenceEndPosition ( str, 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static short categoryLevel ( java.lang.String category ) { try { for ( short level = 1; level < 101; level++ ) for ( short level = 1; level < 101; level++ ) { for ( Controlleur.Question q : Controlleur.JavaOverflow.database.getQuestions () ) { } } } catch ( Exception ex ) { ex.printStackTrace () ; } return 100; } 
private boolean createBridges ( org.onosproject.netvirt.configuration.Node node, org.onosproject.net.Network network ) throws java.lang.Exception { org.onosproject.ovsdb.providers.Status status; java.lang.String brInt = org.onosproject.ovsdb.providers.constant.ConfigurationConstants.INTEGRATION_BRIDGE; status = this.addBridge ( node, brInt, null, null ) ; try { if ( ! ( status.isSuccess () ) ) { org.onosproject.ovsdb.providers.impl.CfgAdapterProviderImpl.LOG.error ( "{} Bridge Creation Status: {}", brInt, status ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } org.onosproject.ovsdb.providers.impl.CfgAdapterProviderImpl.LOG.info ( "createNetNetwork: node: {}, status: success", node ) ; return true; } 
private void sendNextPacket () { Packet toSend = new Packet ( packetArrayList.get ( nextSeqNum ) ) ; java.lang.System.out.println ( ( "SENDER GBN SENDING: " + ( toSend.toString () ) ) ) ; try { nl.sendPacket ( toSend, to ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( base ) == ( nextSeqNum ) ) { tl.startTimer ( timeOut, me ) ; } ( numTransmissions ) ++; ( nextSeqNum ) ++; } 
public static void main ( java.lang.String[] args ) { java.util.Scanner scanIn = new java.util.Scanner ( java.lang.System.in ) ; long n; try { java.lang.System.out.print ( "Nhap so n: " ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } n = scanIn.nextInt () ; java.lang.System.out.print ( ( ( ( "Tong cac so chan nho hon " + n ) + " la:" ) + ( tinhtongdemo.TinhTongDemo.TinhTong ( n ) ) ) ) ; } 
private void deployProcess () { org.activiti.engine.RepositoryService repositoryService = processEngine.getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService.createProcessDefinitionQuery () .processDefinitionKey ( processDefinitionKey ) .latestVersion () .singleResult () ; try { if ( null == processDefinition ) repositoryService.createDeployment () .addClasspathResource ( definitionClasspath ) .deploy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.List<de.grau.organizer.classes.Notes> filterNotes () { java.util.List<de.grau.organizer.classes.Notes> retNotes = new java.util.ArrayList<de.grau.organizer.classes.Notes> () ; try { for ( android.widget.EditText et_note : layout_notelist ) { if ( et_note.getText () .toString () .trim () .isEmpty () ) continue; de.grau.organizer.classes.Notes curNote = new de.grau.organizer.classes.Notes () ; curNote.setText ( et_note.getText () .toString () ) ; retNotes.add ( curNote ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return retNotes; } 
@ java.lang.Override public void onLoaded ( com.solid.ad.Ad ad ) { try { super.onLoaded ( ad ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.solid.news.logic.NewsCacheMgr.firstAd = ad; this.isLoadADing = false; com.solid.news.sdk.NewsSdk.getInstance () .getReportListener () .sendEvent ( "news_lista_show_facebook_native_ad", "status", java.lang.Long.valueOf ( ( cached ? 1L : 2L ) ) ) ; } 
protected java.util.List<com.orientechnologies.orient.server.distributed.ODistributedResponse> getConflictResponses () { final java.util.List<com.orientechnologies.orient.server.distributed.ODistributedResponse> servers = new java.util.ArrayList<com.orientechnologies.orient.server.distributed.ODistributedResponse> () ; int bestGroupSoFar = getBestResponsesGroup () ; try { for ( int i = 0; i < ( responseGroups.size () ) ; ++i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups.get ( i ) ) servers.add ( r ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return servers; } 
public void update ( float deltaTime ) { try { this.levelController.update ( deltaTime ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.frogManager.update ( deltaTime ) ; if ( ( this.hud.getLifeCounter () .getLife () ) <= 0 ) { game.setScreen ( new com.mygdx.game.screens.GameOverScreen ( this.game ) ) ; com.mygdx.game.sprites.SpritesDrawer.getInstance () .removeAllSprites () ; Gdx.input.setInputProcessor ( null ) ; } } 
public boolean isDeflated () { try { for ( java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> entry : this.entrySet () ) { java.lang.String key = entry.getKey () ; if ( key == null ) { continue; } for ( java.lang.String value : entry.getValue () ) { if ( ( key.equalsIgnoreCase ( "content-type" ) ) && ( value.toLowerCase () .contains ( "application/x-deflate" ) ) ) { return true; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void buildQuad ( int index, com.nucleus.shader.ShaderProgram program, com.nucleus.vecmath.Rectangle rectangle ) { int vertexStride = program.getVertexStride () ; float[] quadPositions = com.nucleus.geometry.MeshBuilder.createQuadPositionsIndexed ( rectangle, vertexStride, 0 ) ; try { com.nucleus.geometry.MeshBuilder.buildQuad ( this, program, index, quadPositions ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } prepareUV ( mapper, 1, index ) ; } 
public static synchronized com.android.dialer.calllog.DefaultVoicemailNotifier getInstance ( android.content.Context context ) { try { if ( ( com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance ) == null ) { android.app.NotificationManager notificationManager = ( ( android.app.NotificationManager ) ( context.getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; android.content.ContentResolver contentResolver = context.getContentResolver () ; com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance = new com.android.dialer.calllog.DefaultVoicemailNotifier ( context, notificationManager, com.android.dialer.calllog.DefaultVoicemailNotifier.createNewCallsQuery ( context, contentResolver ) , com.android.dialer.calllog.DefaultVoicemailNotifier.createNameLookupQuery ( context, contentResolver ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance; } 
@ java.lang.Override public java.util.List<java.lang.Class<? extends org.adligo.tests4j.system.shared.trials.I_Trial>> getTrials () { java.util.List<java.lang.Class<? extends org.adligo.tests4j.system.shared.trials.I_Trial>> trials = new java.util.ArrayList<java.lang.Class<? extends org.adligo.tests4j.system.shared.trials.I_Trial>> () ; trials.addAll ( new org.adligo.fabricate_tests.common.A_CommonPkgTrials () .getTrials () ) ; try { trials.addAll ( new org.adligo.fabricate_tests.files.A_FilesTrials () .getTrials () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } trials.add ( org.adligo.fabricate_tests.FabPackagesTrial.class ) ; return trials; } 
public void add ( int index, double element ) { try { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System.arraycopy ( array, index, array, ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index, element ) ; increasedSize ( 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected java.util.Map<java.lang.String, java.lang.String> getParams () throws com.android.volley.AuthFailureError { java.util.Map<java.lang.String, java.lang.String> params = new java.util.HashMap<> () ; try { params.put ( "writing_no", writing_no_param ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } params.put ( "content", Reply_Content ) ; params.put ( "email", shared_email ) ; return params; } 
public void setEndTime ( java.time.LocalTime end_time2 ) { try { if ( end_time2 == null ) { java.time.LocalTime localtime = java.time.LocalTime.MAX; end_time_string = ""; end_time = end_time2; value = getStartTime () ; } else { end_time_string = end_time2.format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) .toString () ; end_time = end_time2; if ( ( end_time ) != null ) { value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; } else { value = getStartTime () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
final synchronized void setResponse ( com.basho.riak.client.core.RiakMessage rawResponse ) { stateCheck ( com.basho.riak.client.core.FutureOperation.State.CREATED, com.basho.riak.client.core.FutureOperation.State.WRITTEN, com.basho.riak.client.core.FutureOperation.State.RETRY ) ; U decodedMessage = decode ( rawResponse ) ; try { this.rawResponse.add ( decodedMessage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } exception = null; if ( done ( decodedMessage ) ) { ( remainingTries ) --; if ( ( retrier ) != null ) { retrier.operationComplete ( this, remainingTries ) ; } state = com.basho.riak.client.core.FutureOperation.State.COMPLETE; latch.countDown () ; fireListeners () ; } } 
public void replaceValue ( T newValue, int index ) { if ( ! ( indexCheck ( index ) ) ) return; linkedList.Node<T> currentNode = this.start; for ( int i = 0; i < index; i++ ) { currentNode = currentNode.getTail () ; } try { currentNode.setHead ( newValue ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void printEditedDetails () { java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.lang.Object contact : repeater.getBeanList () ) { buf.append ( contact ) .append ( '\n' ) ; } try { console.setText ( buf.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void loadConfiguration () { try { if ( ! ( getConfig () .contains ( ".GoodGames" ) ) ) { logger.info ( "Config not found! Creating config." ) ; getConfig () .addDefault ( ".GoodGames.Guess the Number.Highest Number", 50 ) ; getConfig () .addDefault ( ".GoodGames.Guess the Number.Number of tries", 52 ) ; getConfig () .set ( ".GoodGames.Guess the Number.Highest Number", 50 ) ; getConfig () .addDefault ( ".GoodGames.Guess the Number.Number of tries", 52 ) ; getConfig () .options () .copyDefaults ( true ) ; saveConfig () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showFrame () { javax.swing.JFrame frame = new javax.swing.JFrame ( "MainUI" ) ; try { frame.setContentPane ( new MainUI () .main_panel ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } frame.setPreferredSize ( new java.awt.Dimension ( 720, 500 ) ) ; frame.setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame.pack () ; new MainUI.MenuUI () .showMenu ( frame ) ; frame.setResizable ( false ) ; frame.setVisible ( true ) ; } 
private void setEventLatestState ( final java.lang.Long revision ) { redis.clients.jedis.Jedis jedi = pool.getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap<java.lang.String, java.lang.String> state = new java.util.HashMap<> () ; state.put ( "revision", java.lang.Long.toString ( revision ) ) ; try { jedi.hmset ( key, state ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { java.util.List<Coordinate<java.lang.Double>> test = MercatorMapping.MM ( args[0], false ) ; java.lang.System.out.println ( ( ( ">> The mapped data has " + ( test.size () ) ) + " entries." ) ) ; java.lang.System.out.println ( ">> The mapped data has COM: " ) ; try { java.lang.System.out.println ( List_ops.getCOM ( test ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( ">> The mapped data contains:" ) ; List_ops.print_coordlist_double ( test ) ; } 
private java.lang.annotation.Annotation[] merge ( java.lang.annotation.Annotation[] annotations, java.lang.annotation.Annotation[] annotations2 ) { java.util.List<java.lang.annotation.Annotation> mergedAnnotations = new java.util.ArrayList<java.lang.annotation.Annotation> () ; mergedAnnotations.addAll ( java.util.Arrays.asList ( annotations ) ) ; try { mergedAnnotations.addAll ( java.util.Arrays.asList ( annotations2 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return mergedAnnotations.toArray ( new java.lang.annotation.Annotation[0] ) ; } 
@ java.lang.Override public boolean hasNext () { if ( ! ( peekingIterator.hasNext () ) ) { return false; } denominator.ultradns.model.DirectionalRecord record; try { while ( true ) { if ( peekingIterator.hasNext () ) { record = peekingIterator.peek () ; if ( record.isNoResponseRecord () ) { peekingIterator.next () ; } else { return true; } } else { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.lang.String parseFile ( java.lang.String data, ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = ""; try { switch ( configFileFormat ) { case XML: convertedConfig = data; break; case YML: convertedConfig = ConfigUtil2.parseYML ( data ) ; break; case PROPERTIES: convertedConfig = ConfigUtil2.parseProperties ( data ) ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return convertedConfig; } 
public static void main ( java.lang.String[] args ) { double[] l = new double[] { 1, 2, 3, 4 }; Matrix m = new Matrix ( 2, 2, l ) ; try { java.lang.System.out.println ( m.inverse () .multiply ( m ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeContact ( com.addressbook.thorrism.addressbook.Contact contact, int position ) { mBook.removeEntry ( position ) ; mContactHeaders.remove ( position ) ; mBook.saveEventually () ; contact.deleteInBackground ( new com.parse.DeleteCallback () { @java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e.printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; try { displayList () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void exitGame ( edu.chalmers.vaporwave.model.menu.MenuState destinationMenu ) { this.gameMusic.stopSound () ; this.arenaModel.getArenaMovables () .clear () ; this.arenaModel.clearTiles () ; this.enemies.clear () ; this.deadEnemies.clear () ; try { edu.chalmers.vaporwave.event.GameEventBus.getInstance () .post ( new edu.chalmers.vaporwave.event.ExitToMenuEvent ( destinationMenu, this.players, this.gameType ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void publishResults ( java.lang.CharSequence constraint, com.alex.develop.adapter.FilterResults results ) { stocks = ( ( java.util.List<com.alex.develop.adapter.Stock> ) ( results.values ) ) ; try { if ( 0 < ( results.count ) ) { notifyDataSetChanged () ; } else { notifyDataSetInvalidated () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mListener.find ( results.count ) ; } 
public void calculateFragLen () { java.util.Collections.sort ( getPosTags () ) ; try { for ( int posValue : getPosTags () ) { java.util.Set<java.lang.Integer> subList = getNegTags () .subSet ( posValue, ( posValue + 5000 ) ) ; for ( int negValue : subList ) { fragLen = negValue - posValue; if ( ( ( fragLen ) > 0 ) && ( ( fragLen ) <= 2000 ) ) { ( getCounts () [ ( ( fragLen ) - 1 ) ] ) ++; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void addTurretAngle ( float deltaTurretAngle, int delta ) { float cleanDeltaTurret = kylevedder.com.github.utils.Utils.wrapAngleDelta ( deltaTurretAngle ) ; float turretRateCap = ( delta > 0 ) ? ( ( this.TURRET_TURN_RATE ) / 1000 ) * delta : 0; try { this.turretAngle = kylevedder.com.github.utils.Utils.wrapAngle ( this.turretAngle, kylevedder.com.github.utils.Utils.clampFloat ( cleanDeltaTurret, ( -turretRateCap ) , turretRateCap ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String save ( com.sia.main.domain.SatManMK satManMK ) { try { if ( ( satManMK.getIdSatManMK () ) != null ) { java.lang.System.out.println ( satManMK.getIdSatManMK () ) ; satManMKRepo.update ( satManMK ) ; return satManMK.getIdSatManMK () .toString () ; } else { return satManMKRepo.insert ( satManMK ) .toString () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { double inches; double meters; int counter; counter = 0; try { for ( inches = 1; inches <= 144; inches++ ) { meters = inches / 39.37; java.lang.System.out.println ( ( ( ( inches + "inches is " ) + meters ) + "meters." ) ) ; counter++; if ( counter == 12 ) { java.lang.System.out.println () ; counter = 0; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.context.annotation.Bean public org.springframework.scheduling.quartz.SchedulerFactoryBean schedulerFactoryBean ( javax.sql.DataSource dataSource, org.quartz.spi.JobFactory jobFactory, @org.springframework.beans.factory.annotation.Qualifier ( value = "sampleJobTrigger" ) org.quartz.Trigger sampleJobTrigger ) throws java.io.IOException { org.springframework.scheduling.quartz.SchedulerFactoryBean factory = new org.springframework.scheduling.quartz.SchedulerFactoryBean () ; factory.setOverwriteExistingJobs ( true ) ; try { factory.setDataSource ( dataSource ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } factory.setJobFactory ( jobFactory ) ; factory.setQuartzProperties ( quartzProperties () ) ; return factory; } 
private void matchLookAhead ( core.Token token ) throws parser.ParseException { if ( ( lookahead ) != token ) { throw new parser.ParseException ( java.lang.String.format ( "Parse error on line %s, col %s. Found %s, expected %s.", dispatcher.getLine () , dispatcher.getColumn () , lookahead, token ) ) ; } try { lookahead = dispatcher.nextToken () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initTracks () { tracks = new java.util.ArrayList<Track> () ; boolean alreadyExist; try { for ( TrainStation station1 : Control.stations ) { for ( TrainStation station2 : Control.stations ) { if ( station1.equals ( station2 ) ) continue; alreadyExist = false; for ( Track track : tracks ) { if ( track.compareTrack ( station1, station2 ) ) alreadyExist = true; } if ( !alreadyExist ) tracks.add ( new Track ( station1, station2 ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public Common.Message toMessage () { Common.Message listMsg; java.lang.String content = ""; int i = 0; try { for ( Common.User item : this.usersList ) { if ( i == 0 ) { content = item.getUsername () ; } else { content = ( content + " " ) + ( item.getUsername () ) ; } i++; } } catch ( Exception ex ) { ex.printStackTrace () ; } listMsg = new Common.Message ( content, new Common.User ( "Server" ) , MessageType.DATA ) ; return listMsg; } 
@ java.lang.Override public void onNavigationEvent ( int navigationEvent, android.os.Bundle extras ) { try { super.onNavigationEvent ( navigationEvent, extras ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( navigationEvent == ( NAVIGATION_FINISHED ) ) && ( ( index ) <= ( urls.length ) ) ) { android.support.customtabs.CustomTabsIntent.Builder builder = new android.support.customtabs.CustomTabsIntent.Builder ( session ) ; builder.setToolbarColor ( android.support.v4.content.ContextCompat.getColor ( activity, R.color.accent ) ) ; android.support.customtabs.CustomTabsIntent customTabsIntent = builder.build () ; customTabsIntent.launchUrl ( activity, android.net.Uri.parse ( urls[ ( ( index ) ++ ) ] ) ) ; } } 
private short getCheckedValue ( long address ) { try { if ( address > ( handlerBlock.getAddressEnd () ) ) { return 13567; } else { return ( ( short ) ( ( data.get ( ( ( int ) ( address ) ) ) ) & 255 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handleMessage ( android.os.Message message ) { try { if ( ( message.arg2 ) == 1 ) { switch ( message.arg1 ) { case 1: thread1JobDone = true; break; case 2: thread2JobDone = true; break; case 3: thread3JobDone = true; break; } if ( ( ( thread1JobDone ) && ( thread2JobDone ) ) && ( thread3JobDone ) ) { themeAll.sortIndex () ; } adapterAll.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final void stopLevel () { level.stop () ; try { for ( gamelogic.Game.GameObserver o : observers ) { o.resetBoard () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( gamelogic.Game.GameObserver o : observers ) { if ( level.checkHassucceeded () ) { o.levelscreen () ; } else { o.gameoverscreen () ; } } } 
public void setReturnDate ( long returnDate, android.content.Context context ) { this.returnDate = returnDate; try { if ( ( returnDate < ( loanDate ) ) && ( returnDate != ( -1 ) ) ) { android.util.Log.i ( org.bbt.kiakoa.model.Loan.TAG, "return date should not be lower than loan date" ) ; setLoanDate ( returnDate, context ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { final int musicVolume = getConfig () .getVolume () ; float volume = 1 - ( ( float ) ( ( java.lang.Math.log ( 0 ) ) / ( java.lang.Math.log ( musicVolume ) ) ) ) ; mediaPlayer.setVolume ( volume, volume ) ; try { mediaPlayer.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.util.ArrayList<java.lang.String> getLabelsFromData () { int size = ( ( chartView.data.size () ) > 0 ) ? chartView.data.get ( 0 ) .size () : 0; java.util.ArrayList<java.lang.String> result = new java.util.ArrayList<java.lang.String> ( size ) ; try { for ( int i = 0; i < size; i++ ) result.add ( chartView.data.get ( 0 ) .getLabel ( i ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
private synchronized void openNextDeath () { nextElementToDie = sortedElementsSet.first () ; timerTask = new java.util.TimerTask () { @java.lang.Override public void run () { killNextElement () ; } }; long deathTimeMillis = nextElementToDie.deathTime.toDateTime () .getMillis () ; long nowMillis = new org.joda.time.LocalDateTime () .toDateTime () .getMillis () ; long delay = java.lang.Math.max ( 0, ( deathTimeMillis - nowMillis ) ) ; try { timer.schedule ( timerTask, delay ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void playAgain () { try { java.lang.System.out.println ( "Do You Want To Give It Another Go? \n1. Yea, I\'m Game \n2. Nah, Let\'s Try Something Else" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int response = cs1.Keyboard.readInt () ; if ( response == 1 ) { CardGame.reset () ; CardGame.main ( null ) ; } else if ( response == 2 ) { CardGame.reset () ; Woo.main ( null ) ; } else { java.lang.System.out.println ( "I don't understand, so I'll ask again" ) ; CardGame.playAgain () ; } } 
protected void getFillersFromFile ( org.w3c.dom.Document doc, edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc.getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser.getElement ( element, edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement.getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; try { for ( int i = 0; i < ( fillerNl.getLength () ) ; ++i ) readFiller ( fillerNl.item ( i ) , nerView ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getTotalSequencesIterated () throws java.lang.Exception { randoop.generation.exhaustive.SequenceGenerator<java.lang.String> sgenLarger = new randoop.generation.exhaustive.SequenceGenerator ( largerSet ) ; long beforeIterateLarger = sgenLarger.getTotalSequencesIterated () .longValue () ; int numberOfSequencesToGenerate = 13; for ( int i = 0; i < numberOfSequencesToGenerate; i++ ) { sgenLarger.next () ; } try { org.junit.Assert.assertEquals ( 0, beforeIterateLarger ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( numberOfSequencesToGenerate, sgenLarger.getTotalSequencesIterated () .intValue () ) ; } 
public boolean determineSize ( long recordsReadInCurrentPass, java.lang.Integer lengthVarFieldsInCurrentRecord ) throws java.io.IOException { try { if ( readPage () ) { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( processPageData ( ( ( int ) ( recordsReadInCurrentPass ) ) ) ) { return true; } lengthVarFieldsInCurrentRecord = -1; return checkVectorCapacityReached () ; } 
public boolean updateIndentString ( com.hlz.webModel.IndentModel model, java.lang.String reserve, java.lang.String fulfill ) { com.hlz.entity.Indent indent = dao.updateIndent ( model, reserve, fulfill ) ; try { if ( indent != null ) { messaging.convertAndSend ( "/topic/update", indent.getId () ) ; rabbitTemplate.convertAndSend ( "update-indent", indent.getId () ) ; return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public N getNodeAt ( int index ) { try { if ( ( ( sourceNodes ) != null ) && ( index < ( sourceNodes.size () ) ) ) { return sourceNodes.get ( index ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( sinkNodes ) != null ) { int sinkIndex = ( ( sourceNodes ) == null ) ? index : index - ( sourceNodes.size () ) ; return sinkNodes.get ( sinkIndex ) ; } throw new java.lang.IndexOutOfBoundsException () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_main ) ; if ( savedInstanceState == null ) { com.plorial.exoroplayer.views.FileExplorerFragment fileExplorerFragment = new com.plorial.exoroplayer.views.FileExplorerFragment () ; android.app.FragmentTransaction transaction = getFragmentManager () .beginTransaction () ; transaction.add ( R.id.fragment_container, fileExplorerFragment ) ; transaction.addToBackStack ( FileExplorerFragment.CLASS_NAME ) ; transaction.commit () ; } } 
@ org.junit.Test public void testToString () { assertEquals ( "kg", KILO ( UCUM.GRAM ) .toString () ) ; assertEquals ( "lb", UCUM.POUND.toString () ) ; assertEquals ( "oz", UCUM.OUNCE.toString () ) ; try { assertEquals ( "g", UCUM.GRAM.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( "lb", UCUM.POUND.toString () ) ; } 
private void jButton1ActionPerformed ( java.awt.event.ActionEvent evt ) { mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jTableHotels.getModel () ) ) ; if ( ( jTableHotels.getSelectedRowCount () ) == 0 ) { javax.swing.JOptionPane.showMessageDialog ( this, "please select the Hotel to delete" ) ; return; } java.lang.String HotelName; int TempSelectRow = jTableHotels.getSelectedRow () ; HotelName = mdHotels.getValueAt ( TempSelectRow, 0 ) .toString () ; deleteHotel ( HotelName ) ; try { mdHotels.removeRow ( jTableHotels.getSelectedRow () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test public void testUDFEnoughInput () throws java.lang.Exception { org.apache.pig.data.Tuple tuple = org.apache.pig.data.TupleFactory.getInstance () .newTuple ( 31 ) ; try { for ( int i = 0; i < 31; i++ ) { tuple.set ( i, 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } tuple.set ( 0, "M" ) ; org.apache.pig.data.DataBag dataBag = instance.exec ( tuple ) ; org.testng.Assert.assertEquals ( 31, dataBag.size () ) ; org.testng.Assert.assertEquals ( dataBag.iterator () .next () .size () , 5 ) ; } 
public void analyze ( semanticAnalyzer.AssignStatementTail AST ) { output.accept ( ( ( AST.getLine () ) + ": analyze AssignStatementTail\n" ) ) ; try { if ( ( AST.getAddExpression () ) != null ) { analyze ( AST.getAddExpression () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } analyze ( AST.getExp () ) ; } 
public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null; if ( ( contains ( toAdd ) ) && ( ! ( toAdd.getCategories () .contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } try { internalList.add ( toAdd ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onTransaction ( final org.sigmah.offline.indexeddb.Transaction<org.sigmah.offline.indexeddb.Store> transaction ) { final java.util.List<org.sigmah.shared.dto.ProjectDTO> projects = new java.util.ArrayList<org.sigmah.shared.dto.ProjectDTO> () ; final org.sigmah.offline.dao.RequestManager<java.util.List<org.sigmah.shared.dto.ProjectDTO>> requestManager = new org.sigmah.offline.dao.RequestManager<java.util.List<org.sigmah.shared.dto.ProjectDTO>> ( projects, callback ) ; try { getProjectsByIndex ( Indexes.PROJECT_FUNDEDS, id, requestManager, transaction ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getProjectsByIndex ( Indexes.PROJECT_FUNDINGS, id, requestManager, transaction ) ; requestManager.ready () ; } 
@ java.lang.Override public void run () { java.lang.String mess; java.lang.String sIndex = java.lang.String.valueOf ( index ) ; if ( ! ( Config.contains ( ( "Messages." + sIndex ) ) ) ) { index = 1; } mess = Config.getString ( ( "Messages." + sIndex ) ) ; if ( mess.contains ( "&" ) ) mess = mess.replace ( "&", "�" ) ; try { sendBossBar ( mess, 10 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } index = ( index ) + 1; } 
public void scan () { if ( ! ( checkLoginStatus () ) ) { return; } try { if ( ! ( checkNet () ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent scan_int = new android.content.Intent ( context, com.zbar.lib.CaptureActivity.class ) ; android.support.v7.app.AppCompatActivity activity = ( ( android.support.v7.app.AppCompatActivity ) ( context ) ) ; activity.startActivityForResult ( scan_int, wale_tech.tryon.ScanAction.REQUEST_MAIN ) ; } 
@ java.lang.Override public void execute ( network.Session session, game.model.Game game ) { game.util.GameRenderer gameRenderer = game.getGameRenderer () ; if ( ( this.backgroundValue ) != null ) { gameRenderer.setBackgroundColor ( this.backgroundValue ) ; } try { if ( ( this.foregroundValue ) != null ) { gameRenderer.setForegroundColor ( this.foregroundValue ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; com.innovationplayground.sessionexecutiontestclient.communication.authapi.AuthProxy authProxy = new com.innovationplayground.sessionexecutiontestclient.communication.authapi.AuthProxy () ; com.innovationplayground.sessionexecutiontestclient.storage.Storage storage = com.innovationplayground.sessionexecutiontestclient.storage.Storage.getInstance ( getActivity () ) ; clientAuthenticator = new com.innovationplayground.sessionexecutiontestclient.business.ClientAuthenticator ( authProxy, storage ) ; try { if ( ! ( com.innovationplayground.sessionexecutiontestclient.PermissionUtil.hasWriteExternalStoragePermission ( getActivity () ) ) ) { com.innovationplayground.sessionexecutiontestclient.PermissionUtil.requestWriteExternalStoragePermission ( getActivity () ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } loadClients () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/getGeneratedCode", method = org.springframework.web.bind.annotation.RequestMethod.POST ) @org.springframework.web.bind.annotation.ResponseBody public java.lang.String getGeneratedCode ( @org.springframework.web.bind.annotation.RequestParam ( value = "name", required = true ) java.lang.String name, @org.springframework.web.bind.annotation.RequestParam ( value = "tbName", required = true ) java.lang.String tbName ) throws java.lang.Exception { java.lang.String generatedCode = ""; try { if ( ( name.length () ) > 100 ) { return generatedCode; } } catch ( Exception ex ) { ex.printStackTrace () ; } sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables tbEnum = sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables.valueOf ( tbName ) ; if ( tbEnum == null ) { return generatedCode; } generatedCode = new sg.com.fbs.services.common.codegen.mgr.CodeGeneratorManagerBD () .getGeneratedCode ( tbEnum.getTableName () , name ) ; return generatedCode; } 
public static org.opengis.referencing.operation.MathTransform1D create ( final double base, final double offset ) { org.apache.sis.util.ArgumentChecks.ensureStrictlyPositive ( "base", base ) ; try { if ( base == 10 ) { return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.Base10.create ( offset ) ; } else { return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.NATURAL.concatenate ( ( 1 / ( java.lang.Math.log ( base ) ) ) , offset ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void clear () { try { if ( ( graphics2D ) != null ) { graphics2D.setPaint ( java.awt.Color.white ) ; graphics2D.fillRect ( 0, 0, getSize () .width, getSize () .height ) ; graphics2D.setPaint ( java.awt.Color.black ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void showBottomLoading ( boolean show ) { try { if ( ( mShowBottomLoading ) != show ) { if ( show ) { mShowBottomLoading = true; com.livae.android.loading.RecyclerAdapter.notifyItemInserted ( getBottomLoadingPosition () ) ; } else { com.livae.android.loading.RecyclerAdapter.notifyItemRemoved ( getBottomLoadingPosition () ) ; mShowBottomLoading = false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean equals ( java.lang.Object other ) { try { if ( ! ( other instanceof oharaShapes3D.CubicShape ) ) throw new java.lang.IllegalArgumentException ( "Compared object must be a CubicShape" ) ; else { oharaShapes3D.CubicShape cs = ( ( oharaShapes3D.CubicShape ) ( other ) ) ; return ( ( ( this.getLength () ) == ( cs.getLength () ) ) && ( ( this.getWidth () ) == ( cs.getWidth () ) ) ) && ( ( this.getHeight () ) == ( cs.getHeight () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int toInteger ( org.jackace.jawascriptexecutive.Executor.JawaObjectRef o ) throws org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException { try { if ( ( o.object ) instanceof java.lang.Double ) { int magnitude = ( ( int ) ( ( long ) ( java.lang.Math.floor ( java.lang.Math.abs ( ( ( java.lang.Double ) ( o.object ) ) ) ) ) ) ) ; int sign = ( ( ( java.lang.Double ) ( o.object ) ) >= 0 ) ? 1 : -1; return magnitude * sign; } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException ( "Not yet implemented conversion." ) ; } 
@ java.lang.Override public void handleEvent ( org.matsim.api.core.v01.events.PersonLeavesVehicleEvent event ) { try { if ( ! ( event.getVehicleId () .toString () .contains ( "_" ) ) ) { inVehicle.put ( event.getVehicleId () , false ) ; travelTimes.remove ( event.getPersonId () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item.getItemId () ; try { switch ( id ) { case android.R.id.home: android.util.Log.d ( "hi", android.support.v4.app.NavUtils.getParentActivityName ( this ) ) ; android.support.v4.app.NavUtils.navigateUpFromSameTask ( this ) ; return true; case R.id.action_settings: return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onOptionsItemSelected ( item ) ; } 
public void playGame () { boolean gameIsActive = true; try { while ( gameIsActive ) { for ( int indexPlayer = 0; indexPlayer < ( players.length ) ; indexPlayer++ ) { if ( indexPlayer == ( humanPlayerId ) ) { java.lang.System.out.println ( "THIS IS A HUMAN" ) ; showPlayerTurn () ; } else { java.lang.System.out.println ( "This is a bot" ) ; showBotTurn () ; } } gameIsActive = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void quitarTagArbol ( com.PubliciBot.DM.ArbolTags arbolTags, com.PubliciBot.DM.Tag tag ) { java.util.ArrayList<com.PubliciBot.DM.Tag> hijos = buscarTagPorPadre ( arbolTags, tag ) ; for ( com.PubliciBot.DM.Tag tagtemp : hijos ) { quitarTagArbol ( arbolTags, tagtemp ) ; arbolTags.getTags () .remove ( tagtemp ) ; } try { arbolTags.getTags () .remove ( tag ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onNavigationItemSelected ( int position, long id ) { try { if ( com.antisocial.app.util.BlockUtils.isBlockServiceRunning ( this, com.antisocial.app.service.CoreService.class ) ) { getActionBar () .setSelectedNavigationItem ( currentSelectedItem ) ; if ( ( currentSelectedItem ) != position ) { alert = new android.app.AlertDialog.Builder ( this ) .setTitle ( "Alert" ) .setMessage ( "Block is running" ) .setPositiveButton ( "OK", null ) .show () ; } } else { com.antisocial.app.util.BlockUtils.setCurrentMode ( profileList[position] ) ; currentSelectedItem = position; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void close () { listeners.clear () ; if ( ( chatToggleCommand ) != null ) { chatToggleCommand.close () ; chatToggleCommand = null; } try { if ( ( chatListenCommand ) != null ) { chatListenCommand.close () ; chatListenCommand = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.facebook.react.bridge.ReactMethod public void get ( java.lang.String key, java.lang.String bucketName, com.facebook.react.bridge.Callback callback ) { android.content.SharedPreferences preferences = getBucket ( bucketName ) ; java.lang.Object value = preferences.getAll () .get ( key ) ; try { if ( value != null ) { callback.invoke ( value.toString () ) ; } else { callback.invoke () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test ( dependsOnMethods = "testTagGet" ) public void testTagAddUsers () throws java.lang.Exception { java.util.List<java.lang.String> userIds = new java.util.ArrayList<java.lang.String> () ; userIds.add ( ( ( me.chanjar.weixin.cp.api.ApiTestModule.WxXmlCpInMemoryConfigStorage ) ( configStorage ) ) .getUserId () ) ; try { wxService.tagAddUsers ( tagId, userIds, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { com.parse.ParseFacebookUtils.logInWithReadPermissionsInBackground ( this, java.util.Arrays.asList ( "user_location, email, user_birthday" ) , new com.parse.LogInCallback () { @java.lang.Override public void done ( com.parse.ParseUser parseUser, com.parse.ParseException e ) { showProgress ( true ) ; if ( parseUser == null ) { } else if ( parseUser.isNew () ) { getFacebookInfo () ; } else { android.util.Log.d ( com.trytara.tara.LoginActivity.TAG, ( "CURRENT USER: " + ( parseUser.toString () ) ) ) ; } } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () { java.lang.String field1 = "id"; java.lang.String field2 = "name"; java.lang.String[] fields = new java.lang.String[] { field1 }; root = new cn.ac.ucas.operator.AggregatorOperator ( fields ) ; filter = new cn.ac.ucas.operator.MockFilterOperator () ; project = new cn.ac.ucas.operator.MockProjectOperator ( fields ) ; source = new cn.ac.ucas.operator.MockSourceOperator () ; try { org.junit.Assert.assertNotNull ( source ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } project.setChild ( source ) ; filter.setChild ( project ) ; root.setChild ( filter ) ; } 
boolean canBeMerged ( final com.orientechnologies.orient.core.sql.OIndexSearchResult searchResult ) { if ( ( lastField.isLong () ) || ( searchResult.lastField.isLong () ) ) { return false; } try { if ( ( ! ( lastOperator.canBeMerged () ) ) || ( ! ( searchResult.lastOperator.canBeMerged () ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( com.orientechnologies.orient.core.sql.OIndexSearchResult.isIndexEqualityOperator ( lastOperator ) ) || ( com.orientechnologies.orient.core.sql.OIndexSearchResult.isIndexEqualityOperator ( searchResult.lastOperator ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( savedInstanceState == null ) { android.content.Intent intent = getIntent () ; if ( intent.getBooleanExtra ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.EXTRA_SKIP_WELCOME, false ) ) { next ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.PAGE_WELCOME, null, true ) ; } else { next ( ( ( java.lang.String ) ( null ) ) , null ) ; } } else { android.util.Log.w ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.TAG, "onCreate () savedInstanceState != null" ) ; } } 
@ java.lang.Override public void stop () throws java.lang.Exception { java.lang.System.out.println ( "Stopping application, saving config" ) ; config.pos_x = mainStage.getX () ; config.pos_y = mainStage.getY () ; try { config.width = mainStage.getWidth () ; } catch ( Exception ex ) { ex.printStackTrace () ; } config.height = mainStage.getHeight () ; org.szernex.java.jtwitchuserlistgrabber.Config.save ( config, java.nio.file.Paths.get ( R.CONFIG_FILE ) ) ; } 
public java.util.ArrayList<org.bitbucket.ucchy.undine.MailData> getTrashboxMails ( org.bitbucket.ucchy.undine.sender.MailSender sender ) { if ( ! ( isLoaded ) ) { return null; } java.util.ArrayList<org.bitbucket.ucchy.undine.MailData> box = new java.util.ArrayList<org.bitbucket.ucchy.undine.MailData> () ; try { for ( org.bitbucket.ucchy.undine.MailData mail : mails ) { if ( ( mail.isRelatedWith ( sender ) ) && ( mail.isSetTrash ( sender ) ) ) { box.add ( mail ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } org.bitbucket.ucchy.undine.MailManager.sortNewer ( box ) ; return box; } 
@ java.lang.Override public android.database.Cursor loadInBackground () { android.database.Cursor result = super.loadInBackground () ; try { if ( ( ! ( mEnableCapture ) ) || ( ! ( com.zhihu.matisse.internal.utils.MediaStoreCompat.hasCameraFeature ( getContext () ) ) ) ) { return result; } } catch ( Exception ex ) { ex.printStackTrace () ; } android.database.MatrixCursor dummy = new android.database.MatrixCursor ( com.zhihu.matisse.internal.loader.AlbumMediaLoader.PROJECTION ) ; dummy.addRow ( new java.lang.Object[] { com.zhihu.matisse.internal.entity.Item.ITEM_ID_CAPTURE, com.zhihu.matisse.internal.entity.Item.ITEM_DISPLAY_NAME_CAPTURE, "", 0, 0 } ) ; return new android.database.MergeCursor ( new android.database.Cursor[] { dummy, result } ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = ""; try { if ( v == ( this.lblBitcoinAddress ) ) address = this.getActivity () .getString ( R.string.bitcoin_address ) ; else if ( v == ( this.lblLitecoinAddress ) ) address = this.getActivity () .getString ( R.string.litecoin_address ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } net.alegen.android.netclip.util.Clipboard.getInstance ( this.getActivity () ) .setClipboardText ( address ) ; } 
@ org.junit.Test public void getCurrentCallValue_input_returns () { int smallBlind = 30; int credits = 100; try { pokerController.setDealer ( pokerController.getPlayerList () .get ( 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } pokerController.setStartCredits ( credits ) ; pokerController.setBlinds ( smallBlind ) ; pokerController.startGame ( 0 ) ; org.junit.Assert.assertEquals ( pokerController.getPlayerList () .get ( 0 ) , pokerController.getCurrentPlayer () ) ; int callValue = pokerController.getCurrentCallValue () ; org.junit.Assert.assertEquals ( ( smallBlind * 2 ) , callValue ) ; } 
private void saveUserInformation () { java.lang.String name = editTextName.getText () .toString () ; java.lang.String add = editTextAddress.getText () .toString () ; fluffystudios.firebaseauthdemo.UserInformation userInformation = new fluffystudios.firebaseauthdemo.UserInformation ( name, add ) ; com.google.firebase.auth.FirebaseUser user = firebaseAuth.getCurrentUser () ; try { databaseReference.child ( user.getUid () ) .setValue ( userInformation ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.widget.Toast.makeText ( this, "Information Saved...", Toast.LENGTH_SHORT ) .show () ; } 
public void speakAloud ( android.view.View v ) { try { if ( ( currVocab.getSpeech () ) != null ) { playSound ( currVocab.getSpeech () ) ; } else { com.example.sco.imuvo.HelperClasses.WebServiceHelper webServiceHelper = new com.example.sco.imuvo.HelperClasses.WebServiceHelper () ; webServiceHelper.setWebServiceHelperListener ( new com.example.sco.imuvo.HelperClasses.WebServiceHelperListener () { @java.lang.Override public void onWebServiceReturnResult ( byte[] result ) { currVocab.setSpeech ( result ) ; com.example.sco.imuvo.HelperClasses.VocabDatabaseHelper.update ( currVocab ) ; playSound ( result ) ; } } ) ; webServiceHelper.getSpeechAsync ( currVocab ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGetProps () { org.talend.components.api.properties.ComponentProperties props = new org.talend.components.splunk.TSplunkEventCollectorDefinition () .createProperties () ; org.talend.daikon.properties.presentation.Form f = props.getForm ( Form.MAIN ) ; org.talend.components.api.test.ComponentTestUtils.checkSerialize ( props, errorCollector ) ; org.talend.daikon.properties.presentation.Form advancedF = props.getForm ( Form.ADVANCED ) ; java.lang.System.out.println ( f ) ; java.lang.System.out.println ( advancedF ) ; java.lang.System.out.println ( props ) ; try { assertEquals ( Form.MAIN, f.getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( Form.ADVANCED, advancedF.getName () ) ; } 
private void printAll () { java.lang.System.out.println ( "------Server Data------" ) ; java.lang.System.out.println ( ( "username: " + ( username ) ) ) ; java.lang.System.out.println ( ( "password: " + ( password ) ) ) ; java.lang.System.out.println ( ( "salt: " + ( salt ) ) ) ; try { java.lang.System.out.print ( ( "challengeAnswer: " + ( challengeAnswer ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( "" ) ; java.lang.System.out.println ( ( "timesToRunHash: " + ( timesToRunHash ) ) ) ; java.lang.System.out.println ( ( "Hash bit length: " + ( HASH_BIT_LENGTH ) ) ) ; java.lang.System.out.println ( "------ENd Server Data--------" ) ; } 
@ java.lang.Override void startElement ( java.lang.String uri, java.lang.String localName, java.lang.String qName, long attributePointer, int attributeCount ) throws org.xml.sax.SAXException { try { if ( ( ( depth ) ++ ) > 0 ) { super.startElement ( uri, localName, qName, attributePointer, attributeCount ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public MiniJavaVar findVar ( java.lang.String varName ) { int n = contexts.size () ; try { for ( n -= 1; n >= 0; n-- ) { MiniJavaVar findRes = contexts.get ( n ) .vars.get ( varName ) ; if ( findRes != null ) { return findRes; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public boolean f ( com.google.gwt.user.client.Event e ) { com.google.gwt.query.client.GQuery el = $ ( e.getEventTarget () ) ; com.cgxlib.core.component.tab.ViewHandler<?> viewHandler = com.cgxlib.core.component.tab.CGXHelper.getViewHandlerAsData ( el ) ; try { if ( ( viewHandler != null ) && ( viewHandler instanceof com.cgxlib.core.component.tab.TabView.ViewHandler ) ) { el.as ( CGXlib.CGX ) .as ( com.cgxlib.core.component.tab.Tab.CGX, viewHandler ) .show () ; } else { el.as ( com.cgxlib.core.component.tab.Tab.CGX ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void setTime ( java.util.Calendar calendar ) { try { setDate ( calendar.get ( java.util.Calendar.DAY_OF_MONTH ) , ( ( calendar.get ( java.util.Calendar.MONTH ) ) + 1 ) , calendar.get ( java.util.Calendar.YEAR ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setTime ( calendar.get ( java.util.Calendar.HOUR_OF_DAY ) , calendar.get ( java.util.Calendar.MINUTE ) ) ; timeChosen = calendar; } 
@ java.lang.Override public void onSharedPreferenceChanged ( android.content.SharedPreferences sharedPreferences, java.lang.String key ) { try { switch ( key ) { case com.feresr.rxweather.UI.SettingsActivity.PREF_UNIT: if ( sharedPreferences.getString ( key, "celsius" ) .equals ( "celsius" ) ) { citiesView.showTemperatureInCelsius () ; } else { citiesView.showTemperatureInFahrenheit () ; } break; case com.feresr.rxweather.UI.SettingsActivity.GRIDVIEW: if ( sharedPreferences.getBoolean ( key, false ) ) { citiesView.setSetColumns ( 2 ) ; } else { citiesView.setSetColumns ( 1 ) ; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void processInput ( com.lumens.engine.TransformComponent src, java.lang.String targetName, java.util.List<com.lumens.model.Element> input ) { try { if ( log.isDebugEnabled () ) log.debug ( java.lang.String.format ( "Component '%s' input size '%d' target => '%s'", src.getName () , ( input != null ? input.size () : 0 ) , targetName ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } processElementList ( input ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { try { if ( ( null == ( rootView ) ) || ( cacheContentData ) ) { rootView = onCreateFragmentView ( inflater, container, savedInstanceState ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } unbinder = butterknife.ButterKnife.bind ( this, rootView ) ; return rootView; } 
public void updateParticles () { try { if ( ! ( particles.isEmpty () ) ) { java.util.ArrayList<com.bmesta.powermode.Particle> tempParticles = new java.util.ArrayList ( particles ) ; final java.util.Iterator<com.bmesta.powermode.Particle> particleIterator = tempParticles.iterator () ; while ( particleIterator.hasNext () ) { if ( particleIterator.next () .update () ) { particleIterator.remove () ; } } particles = tempParticles; this.repaint () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Object pre ( int t ) { if ( t == 0 ) { return ref; } t = t - 1; checkCapacity ( t ) ; try { if ( t >= ( size ) ) { return bonsai.runtime.core.Cast.toLattice ( name, ref ) .bottom () ; } else { return stream[preIndex ( t ) ]; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void onPlayerTeleport ( org.bukkit.entity.Player player, org.bukkit.Location to ) { if ( ! ( com.frdfsnlght.inquisitor.PlayerStats.started ) ) { return; } try { if ( com.frdfsnlght.inquisitor.PlayerStats.isStatsPlayer ( player ) ) { com.frdfsnlght.inquisitor.PlayerStats.PlayerState state = com.frdfsnlght.inquisitor.PlayerStats.playerStates.get ( player.getName () ) ; if ( state != null ) { com.frdfsnlght.inquisitor.PlayerStats.onPlayerMove ( player, player.getLocation () ) ; state.lastLocation = to; state.lastTime = java.lang.System.currentTimeMillis () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.boxfox.dms.utilities.json.EasyJsonObject action ( org.boxfox.dms.utilities.actions.support.Sender sender, int command, org.boxfox.dms.utilities.json.EasyJsonObject requestObject ) throws java.sql.SQLException { java.lang.String title = requestObject.getString ( "title" ) ; java.lang.String content = requestObject.getString ( "question_content" ) ; java.lang.String writer = requestObject.getString ( "writer" ) ; boolean privacy = requestObject.getBoolean ( "privacy" ) ; int status = database.executeUpdate ( "INSERT INTO qna ( title, question_content, question_date, writer, privacy ) VALUES ( '", title, "', '", content, "', now () , '", writer, "', ", privacy, " ) " ) ; try { responseObject.put ( "status", status ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return responseObject; } 
int getSessionStartPointerMillis () { try { if ( ( ( this ) == ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition ) ) && ( ( mSessionStartPointerMillis ) == ( java.lang.Integer.MIN_VALUE ) ) ) return ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mNowPosition.getSessionStartPointerMillis () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( this ) != ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition ) ) && ( ( mSessionStartPointerMillis ) < ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition.getSessionStartPointerMillis () ) ) ) return ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition.getSessionStartPointerMillis () ; return mSessionStartPointerMillis; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/friends", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String addFriend ( java.security.Principal principal, @org.springframework.web.bind.annotation.RequestParam ( value = "id" ) java.lang.Long id ) { java.lang.String username = principal.getName () ; com.jennbowers.library.models.User fromUser = userRepo.findByUsername ( username ) ; com.jennbowers.library.models.User toUser = userRepo.findOne ( id ) ; com.jennbowers.library.models.FriendRequest friendRequest = new com.jennbowers.library.models.FriendRequest () ; friendRequest.setTouser ( toUser ) ; try { friendRequest.setFromuser ( fromUser ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } friendRequest.setActive ( false ) ; friendRequest.setPending ( true ) ; friendRequestRepo.save ( friendRequest ) ; return "friendAll"; } 
@ java.lang.Override public void onStart () { super.onStart () ; final android.content.Context context = getApplicationContext () ; try { if ( ( org.droidplanner.android.utils.Utils.getAppVersionCode ( context ) ) > ( mAppPrefs.getSavedAppVersionCode () ) ) { org.droidplanner.android.dialogs.DialogMaterialFragment changelog = new org.droidplanner.android.dialogs.DialogMaterialFragment () ; changelog.show ( getSupportFragmentManager () , "Changelog Dialog" ) ; mAppPrefs.updateSavedAppVersionCode ( context ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void makeURL () { java.lang.String URL = ( MainActivity2.URL ) + ( MainActivity2.USN ) ; android.content.Intent i = new android.content.Intent ( getActivity () , com.teamidentiti.fastvturesults.Services.SemestersService.class ) ; try { i.putExtra ( "URL", URL ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } i.putExtra ( "USN", MainActivity2.USN ) ; getActivity () .startService ( i ) ; } 
@ java.lang.Override public void characters ( char[] ch, int start, int length ) throws org.xml.sax.SAXException { try { if ( isWithinBodyElement ) { bodyText.append ( ch, start, length ) ; if ( anchorFlag ) { anchorText.append ( new java.lang.String ( ch, start, length ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { if ( ( this.variables ) == null ) { return null; } try { for ( int i = ( this.variables.size () ) - 1; i >= 0; i-- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this.variables.get ( i ) ; if ( ( variable.getName () ) == name ) { return variable; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/books", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String getBooks ( org.springframework.ui.Model model ) { java.lang.System.out.println ( "ALl the books" ) ; model.addAttribute ( "book", new edu.mum.cs545.lms.domain.Book () ) ; model.addAttribute ( "bookTypes", java.util.Arrays.asList ( edu.mum.cs545.lms.domain.BookType.values () ) ) ; try { model.addAttribute ( "bookCategories", java.util.Arrays.asList ( edu.mum.cs545.lms.domain.BookCategory.values () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "books"; } 
public int getMaxEggGroupID () { android.database.Cursor cursor = database.query ( EGG_GROUPS_TABLE, null, null, null, null, null, null ) ; try { cursor.moveToLast () ; } catch ( Exception ex ) { ex.printStackTrace () ; } int maxEggGroupID = cursor.getInt ( cursor.getColumnIndex ( EGG_GROUP_ID ) ) ; if ( PRINT_DEBUG ) android.util.Log.v ( "Database Access", ( "Max eggGroupID is: " + ( java.lang.String.valueOf ( maxEggGroupID ) ) ) ) ; cursor.close () ; return maxEggGroupID + 1; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_main ) ; int weekday = 5; int weekend = 9; int optimalHours = 7 * 8; int actualHours = weekday * 5; actualHours = actualHours + ( weekend * 2 ) ; int solution = optimalHours - actualHours; display ( solution ) ; } 
private boolean isPromotion ( final de.htwsaar.chessbot.engine.model.Position start, final de.htwsaar.chessbot.engine.model.Position target ) { try { if ( isWhite () ) { if ( ( ( start.rank () ) == 7 ) && ( ( target.rank () ) == 8 ) ) return true; } else { if ( ( ( start.rank () ) == 2 ) && ( ( target.rank () ) == 1 ) ) return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void refreshMap () { try { if ( ( ( mMap ) != null ) && ( ( myRoute.size () ) > 0 ) ) { com.google.android.gms.maps.model.LatLng temp1 = new com.google.android.gms.maps.model.LatLng ( myRoute.get ( 0 ) .getLatitude () , myRoute.get ( 0 ) .getLongitude () ) ; mMap.moveCamera ( com.google.android.gms.maps.CameraUpdateFactory.newLatLng ( temp1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return; } 
public static java.lang.Character loadCharacter ( int Id ) { com.tda367.infinityrun.Utils.LoadCharacter loader = new com.tda367.infinityrun.Utils.LoadCharacter ( Id ) ; int[] levels = loader.getSaveData () ; java.lang.Character loadedCharacter = new java.lang.Character ( levels[0], levels[1], levels[2], levels[3], levels[3], levels[5], levels[6], levels[7], levels[8], levels[9] ) ; try { loadedCharacter.setCharacterID ( Id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return loadedCharacter; } 
@ java.lang.Override public minetweaker.api.item.IItemStack transform ( minetweaker.api.item.IItemStack item, minetweaker.api.player.IPlayer byPlayer ) { try { if ( ( item.getAmount () ) > 1 ) { byPlayer.give ( withItem ) ; return item; } else { return withItem.withAmount ( withItem.getAmount () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBindViewHolder ( final com.thanhtuan.delivery.adapter.ListNghiemThuAdapter.NghiemThuViewHolder holder, int position ) { final com.thanhtuan.delivery.model.Photo photo = photos.get ( position ) ; holder.ibtnIMG.setImageBitmap ( photo.getImage () ) ; try { holder.txtvLydo.setText ( photo.getDescription () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } holder.data = photo; } 
@ java.lang.Override public void storePublishForFuture ( org.eclipse.moquette.spi.impl.events.PublishEvent evt ) { java.util.List<org.eclipse.moquette.spi.impl.storage.StoredPublishEvent> storedEvents; java.lang.String clientID = evt.getClientID () ; try { if ( ! ( m_persistentMessageStore.containsKey ( clientID ) ) ) { storedEvents = new java.util.ArrayList<> () ; } else { storedEvents = m_persistentMessageStore.get ( clientID ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } storedEvents.add ( convertToStored ( evt ) ) ; m_persistentMessageStore.put ( clientID, storedEvents ) ; org.eclipse.moquette.spi.persistence.MapDBPersistentStore.LOG.debug ( "Stored published message for client <{}> on topic <{}>", clientID, evt.getTopic () ) ; } 
@ java.lang.Override protected void onPreExecute () { ( ( android.app.Activity ) ( context ) ) .getWindow () .addFlags ( WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON ) ; this.loadingDialog.setIndeterminate ( true ) ; this.loadingDialog.setCancelable ( false ) ; try { this.loadingDialog.setTitle ( getString ( R.string.settings_downloadHDSpots_button_label ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.loadingDialog.setMessage ( ( "Downloading: " + ( lstToDownload ) ) ) ; this.loadingDialog.show () ; } 
private void checkFirePrimary () { try { if ( ( input.isFirePrimaryWeapon () ) && ( ( counter ) > 30 ) ) { model.Bubble bubble = new model.Bubble ( getX () , getY () , 0, 0, 0, 0, facingRight, levelController ) ; bubbles.add ( bubble ) ; levelController.getScreenController () .addToSprites ( bubble ) ; counter = 0; } else { ( counter ) ++; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
java.util.ArrayList getArrayAbschnitt ( java.util.ArrayList list, int i, int j ) { java.lang.System.out.println ( ( "list vor Abschnitt " + list ) ) ; java.util.ArrayList abschnitt = new java.util.ArrayList<> () ; for ( int k = i; k < ( j + 1 ) ; k++ ) { abschnitt.add ( list.get ( k ) ) ; } try { java.lang.System.out.println ( ( ( ( ( ( "list nach Abschnitt von" + i ) + "bis" ) + j ) + "ist" ) + abschnitt ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return abschnitt; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent arg0 ) { parking.house.gui.AddVehicleDialog dialog = new parking.house.gui.AddVehicleDialog ( shell ) ; try { dialog.open () ; } catch ( Exception ex ) { ex.printStackTrace () ; } parking.house.model.Vehicle v = dialog.getVehicle () ; if ( v != null ) { java.lang.System.out.println ( ( "Choosed vehicle:" + v ) ) ; setValue ( v ) ; } } 
@ java.lang.Override public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder ) { mItemRemovedSnackbar = android.support.design.widget.Snackbar.make ( mSetsView, R.string.program_exercise_activity_set_deleted_message, Snackbar.LENGTH_INDEFINITE ) ; try { mItemRemovedSnackbar.setAction ( R.string.cancel_button_text, new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { mSetsAdapter.notifyItemInserted ( mModel.restoreLastRemoved () ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mItemRemovedSnackbar.show () ; } 
public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { s.setBrTel ( txtBrTel.getText () ) ; s.setEmail ( txtEmail.getText () ) ; try { s.setUplaceno ( java.lang.Integer.parseInt ( txtUplaceno.getText () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } controller.GUIKontroler.osvezi ( s ) ; controller.GUIKontroler.pokreniDodajCasProzor ( s ) ; } 
public void throwDices () { cup.reset () ; diceRoll.play ( 1.0F ) ; try { generateRandomDices () ; } catch ( Exception ex ) { ex.printStackTrace () ; } stillHasToThrow = false; canViewOwnThrow = true; allowedToCall = true; cup.unlock () ; leftDice.unlock () ; middleDice.unlock () ; rightDice.unlock () ; userInterface.log ( "Now enter your call ..." ) ; } 
@ butterknife.OnClick ( value = R.id.show_info_full_c ) public void showInfo () { cv.setVisibility ( View.VISIBLE ) ; showAnim.cancel () ; cv.startAnimation ( showAnim ) ; try { showInfo.setVisibility ( View.INVISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } btnFadeOutAnim.cancel () ; showInfo.startAnimation ( btnFadeOutAnim ) ; if ( ( activity ) instanceof com.engstuff.coloriphornia.interfaces.HideInfoListener ) { ( ( com.engstuff.coloriphornia.interfaces.HideInfoListener ) ( activity ) ) .onHideInfoInvoked ( false ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String EventName; try { EventName = eventName.getText () .toString () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( EventName.isEmpty () ) { android.widget.Toast.makeText ( context, "Please enter a Name for the event", Toast.LENGTH_LONG ) .show () ; } else { } } 
@ java.lang.Override protected void onPostExecute ( K keys ) { super.onPostExecute ( keys ) ; if ( keys == null ) { return; } android.app.Activity context = base.ContextHolder.getContext () ; android.content.Intent openWeb = new android.content.Intent ( context, ly.loud.loudly.AuthActivity.class ) ; openWeb.putExtra ( "URL", getAuthUrl () ) ; try { openWeb.putExtra ( "KEYS", keys ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } openWeb.putExtra ( "AUTHORIZER", copy ) ; context.startActivity ( openWeb ) ; } 
public void displayRecyclerView ( boolean editable ) { mPlayerRecyclerView.setVisibility ( View.VISIBLE ) ; mLayoutManager = new android.support.v7.widget.LinearLayoutManager ( this ) ; try { mPlayerRecyclerView.setLayoutManager ( mLayoutManager ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mPlayerListAdapter = new io.github.sdsstudios.ScoreKeeper.Adapters.PlayerListAdapter ( editable, mRelativeLayout, this ) ; mPlayerRecyclerView.setAdapter ( mPlayerListAdapter ) ; } 
private synchronized org.esa.beam.framework.datamodel.PlacemarkGroup createTextAnnotationGroup () { final org.esa.beam.framework.datamodel.VectorDataNode vectorDataNode = new org.esa.beam.framework.datamodel.VectorDataNode ( org.esa.beam.framework.datamodel.Product.TEXT_ANNOTATION_GROUP_NAME, org.esa.beam.framework.datamodel.Placemark.createTextAnnotationFeatureType () ) ; vectorDataNode.setDefaultStyleCss ( "symbol:plus; stroke:#ff8800; stroke-opacity:0.0; stroke-width:0.0" ) ; try { vectorDataNode.setPermanent ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.vectorDataGroup.add ( vectorDataNode ) ; return vectorDataNode.getPlacemarkGroup () ; } 
@ java.lang.Override public boolean equals ( java.lang.Object otherStylist ) { try { if ( ! ( otherStylist instanceof Stylist ) ) { return false; } else { Stylist newStylist = ( ( Stylist ) ( otherStylist ) ) ; return this.getName () .equals ( newStylist.getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void buttonClick ( com.vaadin.ui.Button.ClickEvent event ) { logger.log ( java.util.logging.Level.INFO, ( ( "logge " + ( getSession () .getAttribute ( "user" ) ) ) + " aus..." ) ) ; getSession () .setAttribute ( "user", null ) ; com.example.testme.server.broadcast.Broadcaster.broadcast ( getUI () .getSession () .getSession () .getId () , username, false ) ; try { getUI () .getNavigator () .navigateTo ( com.example.testme.client.lobby.LobbyPresenter.NAME ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent i = new android.content.Intent ( getActivity () , com.mintminter.simpletwitter.activity.ComposeActivity.class ) ; if ( ( mUser ) != null ) { i.putExtra ( Util.EXTRA_USER, org.parceler.Parcels.wrap ( mUser ) ) ; } try { getActivity () .startActivityForResult ( i, Util.REQUESTCODE_COMPOSE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { javafx.stage.DirectoryChooser directoryChooser = new javafx.stage.DirectoryChooser () ; java.io.File selectedDirectory = directoryChooser.showDialog ( stage ) ; try { if ( selectedDirectory == null ) { path = null; } else { path.setText ( selectedDirectory.getAbsolutePath () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onDateSet ( android.widget.DatePicker view, int year, int month, int day ) { month = month + 1; java.lang.String birthdate = ( ( ( day + "/" ) + month ) + "/" ) + year; java.lang.String last_date = com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information.remove ( com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc ) ; if ( ( last_date == null ) || ( ! ( last_date.equals ( birthdate ) ) ) ) { com.example.mishaberkovich.roomsquad.EditProfileActivity.changes_saved = false; } try { com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information.add ( com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc, birthdate ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.example.mishaberkovich.roomsquad.EditProfileActivity.displayAge ( getActivity () ) ; } 
public static void main ( java.lang.String[] args ) throws java.io.IOException { try { for ( int i = 0; i < ( TestController.files.length ) ; i++ ) { TestController.tests ( 10, "p", ( ( TestController.root ) + ( TestController.files[i] ) ) , i, TestController.maxValues[i] ) ; TestController.tests ( 10, "g", ( ( TestController.root ) + ( TestController.files[i] ) ) , i, TestController.maxValues[i] ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public ninja.Result gameGet ( @ninja.params.PathParam ( value = "choice" ) int choose ) { models.amGame g = new models.amGame () ; models.spGame g2 = new models.spGame () ; try { if ( choose == 1 ) { g.buildDeck () ; g.shuffle () ; return ninja.Results.json () .render ( g ) ; } else { g2.buildDeck () ; g2.shuffle () ; return ninja.Results.json () .render ( g2 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void restoreDensity ( android.content.Context context ) { context.getResources () .getDisplayMetrics () .setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper.getMetricsOnMiui ( context.getResources () ) ; try { if ( metrics != null ) metrics.setToDefaults () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void generate ( java.lang.String bugVecFilePath, java.lang.String codeVecFilePath, java.lang.String simMatFilePath ) throws java.lang.Exception { int dicSize = config.Config.getInstance () .getDicSize () ; java.util.HashMap<java.lang.String, Jama.Matrix> bugVecList = utils.MatrixUtil.loadVectors ( bugVecFilePath, dicSize ) ; try { java.lang.System.out.println ( bugVecList.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.HashMap<java.lang.String, Jama.Matrix> codeVecList = utils.MatrixUtil.loadVectors ( codeVecFilePath, dicSize ) ; java.lang.System.out.println ( codeVecList.size () ) ; utils.MatrixUtil.exportSimilarityMatrix ( bugVecList, codeVecList, simMatFilePath, dicSize ) ; } 
public boolean deleteMapLayerMetadataObject ( edu.harvard.iq.dataverse.MapLayerMetadata mapLayerMetadata, edu.harvard.iq.dataverse.authorization.users.User user ) { try { edu.harvard.iq.dataverse.MapLayerMetadataServiceBean.logger.info ( "deleteMapLayerMetadataObject" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mapLayerMetadata == null ) || ( user == null ) ) { return false; } if ( permissionService.userOn ( user, mapLayerMetadata.getDataFile () .getOwner () ) .has ( Permission.EditDataset ) ) { this.deleteOlderMapThumbnails ( mapLayerMetadata ) ; em.remove ( em.merge ( mapLayerMetadata ) ) ; return true; } return false; } 
public static double rootMeansSquaredError ( double[] real, double[] predicted ) { double ret = 0.0; try { for ( int i = 0; i < ( real.length ) ; i++ ) { ret += java.lang.Math.pow ( ( ( real[i] ) - ( predicted[i] ) ) , 2 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.lang.Math.sqrt ( ( ret / ( real.length ) ) ) ; } 
private static long convertToUsDollar ( long quantity, long exchange ) { try { if ( exchange > 100 ) { double total = ( io.zipcoder.aaronlong.wutangfinancial.Money.downHandleDoubles ( quantity ) ) / ( io.zipcoder.aaronlong.wutangfinancial.Money.downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money.upHandleDoubles ( total ) ; } else if ( exchange < 100 ) { double total = ( io.zipcoder.aaronlong.wutangfinancial.Money.downHandleDoubles ( quantity ) ) * ( io.zipcoder.aaronlong.wutangfinancial.Money.downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money.upHandleDoubles ( total ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return quantity; } 
private boolean bracketsBalanced ( java.lang.String input ) { int i = 0; try { for ( char c : input.toCharArray () ) { if ( c == '{' ) i++; if ( c == '}' ) i--; if ( i < 0 ) return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return i == 0; } 
@ com.fasterxml.jackson.annotation.JsonCreator public static seedu.address.commons.core.Version fromString ( java.lang.String versionString ) throws java.lang.IllegalArgumentException { java.util.regex.Matcher versionMatcher = seedu.address.commons.core.Version.VERSION_PATTERN.matcher ( versionString ) ; try { if ( ! ( versionMatcher.find () ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String.format ( seedu.address.commons.core.Version.EXCEPTION_STRING_NOT_VERSION, versionString ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new seedu.address.commons.core.Version ( java.lang.Integer.parseInt ( versionMatcher.group ( 1 ) ) , java.lang.Integer.parseInt ( versionMatcher.group ( 2 ) ) , java.lang.Integer.parseInt ( versionMatcher.group ( 3 ) ) , ( ( versionMatcher.group ( 4 ) ) != null ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View itemView ) { android.content.Intent i = new android.content.Intent ( itemView.getContext () , com.pratikm.PatientTracker.HealthDetailsActivity.class ) ; i.putExtra ( "clickedPatientEmail", mTextViewPatientEmail.getText () .toString () ) ; try { itemView.getContext () .startActivity ( i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.app.PlayingCardSystem.GreenPlayerCardEnum getEnumInstance ( java.lang.String enumName ) { com.app.PlayingCardSystem.GreenPlayerCardEnum temp = null; try { for ( com.app.PlayingCardSystem.GreenPlayerCardEnum gc : BoardGame.player_cards ) { if ( enumName.trim () .equalsIgnoreCase ( gc.name () ) ) { temp = gc; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return temp; } 
@ org.junit.Test public void testTimestampDeSerializeWithNanoseconds () throws java.lang.Exception { org.apache.hadoop.io.Writable w = new org.apache.hadoop.io.Text ( "{\"one\":true,\"five\":\"2013-03-27 23:18:40.123456\"}" ) ; org.openx.data.jsonserde.json.JSONObject result = ( ( org.openx.data.jsonserde.json.JSONObject ) ( org.openx.data.jsonserde.JsonSerDeTimeStampTest.instance.deserialize ( w ) ) ) ; try { org.junit.Assert.assertEquals ( java.sql.Timestamp.valueOf ( "2013-03-27 23:18:40.123456" ) , result.get ( "five" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean isViewNameValidForCurrentUI ( java.lang.String viewName ) { final java.util.Set<java.lang.String> beanNames = this.viewNameToBeanNamesMap.get ( viewName ) ; try { if ( beanNames != null ) { for ( java.lang.String beanName : beanNames ) { if ( isViewBeanNameValidForCurrentUI ( beanName ) ) { return ( ( getAccessDeniedView () ) != null ) || ( isAccessGrantedToBeanName ( beanName ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private boolean compareValues ( java.lang.Object fieldValue, com.atlassian.crowd.embedded.api.User user, boolean allowUserInField ) { boolean result = !allowUserInField; try { if ( fieldValue instanceof java.lang.String ) { if ( fieldValue.equals ( user.getName () ) ) { result = allowUserInField; } } else { if ( fieldValue.equals ( user ) ) { result = allowUserInField; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void onPreviewFrame ( byte[] data, android.hardware.Camera camera ) { if ( camera == null ) return; try { step = camera.getParameters () .getExposureCompensationStep () ; } catch ( Exception ex ) { ex.printStackTrace () ; } EV = java.lang.Math.max ( step, ( ( step ) * ( camera.getParameters () .getExposureCompensation () ) ) ) ; } 
public void setRuntime ( long runtime ) { try { if ( ( this.pauseTime ) > 0 ) { this.startTime = ( this.pauseTime ) - runtime; } else { if ( ( this.startTime ) <= ( -1 ) ) { this.pauseTime = com.badlogic.gdx.utils.TimeUtils.millis () ; this.startTime = ( pauseTime ) - runtime; } else { this.startTime = ( com.badlogic.gdx.utils.TimeUtils.millis () ) - runtime; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void slotsChanged ( clojure.lang.IPersistentMap addedslots, java.lang.Boolean clear ) { if ( clear ) edu.buffalo.cse.sneps3.gui.business.Slot.clearSlots () ; java.util.ArrayList<edu.buffalo.cse.sneps3.gui.business.Slot> s = new java.util.ArrayList<edu.buffalo.cse.sneps3.gui.business.Slot> ( edu.buffalo.cse.sneps3.gui.business.Slot.reinitializeSlots ( addedslots, clear ) ) ; try { for ( edu.buffalo.cse.sneps3.gui.business.IView i : views ) { i.slotUpdate ( s, clear ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void solve ( int nb, int source, int destination, int auxiliary ) throws hanoi.TowerIsEmptyException, hanoi.TowerIsFullException { try { if ( nb == 1 ) { this.moveOneDisc ( source, destination ) ; } else { this.solve ( ( nb - 1 ) , source, auxiliary, destination ) ; this.moveOneDisc ( source, destination ) ; this.solve ( ( nb - 1 ) , auxiliary, destination, source ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { try { if ( ( trainers.size () ) > 0 ) { int i = 0; while ( i < ( trainers.size () ) ) { if ( trainers.get ( i ) .getEmail () .equals ( emailEntered ) ) { return trainers.get ( i ) ; } i++; } return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private int[] quicksort ( int[] list, int low, int high ) { if ( low >= high ) return list; int pos = partition ( list, low, high ) ; try { quicksort ( list, low, ( pos - 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } quicksort ( list, ( pos + 1 ) , high ) ; return list; } 
@ java.lang.Override public void onWindowFocusChanged ( boolean hasFocus ) { super.onWindowFocusChanged ( hasFocus ) ; try { if ( hasFocus ) { setTitle ( selectedClub ) ; if ( ! ( de.schneider_simon.minigolfscores.PlayRound.isPutViewsDone ) ) { playRoundViews.putViewsIntoGridlayout () ; playRoundViews.writeContentToViews ( playRoundContent ) ; de.schneider_simon.minigolfscores.PlayRound.isPutViewsDone = true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final void applyTransformation ( eu.modernmt.model.Word source ) { try { if ( ( this.transformation ) == null ) { if ( ( source == null ) || ( ! ( source.placeholder.equals ( this.placeholder ) ) ) ) this.text = this.placeholder; else this.text = source.text; } else { this.transformation.apply ( source, this ) ; if ( ( this.text ) == null ) this.text = this.placeholder; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void dispose () { dataset = null; try { displayService.getDisplays () .remove ( display ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } imageDisplayService.getImageDisplays () .remove ( display ) ; display.clear () ; display.close () ; display = null; java.lang.System.gc () ; } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { io.mstream.mstream.player.MStreamAudioService service = mWeakReference.get () ; try { if ( ( service != null ) && ( ( service.playbackManager.getPlayback () ) != null ) ) { if ( service.playbackManager.getPlayback () .isPlaying () ) { android.util.Log.d ( io.mstream.mstream.player.MStreamAudioService.TAG, "Ignoring delayed stop since the media player is in use." ) ; return; } android.util.Log.d ( io.mstream.mstream.player.MStreamAudioService.TAG, "Stopping service with delay handler." ) ; service.stopSelf () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { if ( ( mCallback ) == null ) { android.util.Log.e ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.DEBUG_TAG, "There's no callback set!" ) ; return; } try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } switch ( which ) { case 0: mCallback.mapTypeSelected ( GoogleMap.MAP_TYPE_NORMAL ) ; break; case 1: mCallback.mapTypeSelected ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.MAP_STYLE_NIGHT ) ; break; case 2: mCallback.mapTypeSelected ( GoogleMap.MAP_TYPE_HYBRID ) ; break; case 3: mCallback.mapTypeSelected ( GoogleMap.MAP_TYPE_TERRAIN ) ; } } 
@ java.lang.Override public void handle ( se.kth.news.core.news.CheckNewsResponse newsMsg, se.sics.ktoolbox.util.network.KContentMsg<?, ?, se.kth.news.core.news.CheckNewsResponse> container ) { java.util.ArrayList<se.kth.news.core.news.News> newsToAdd = container.getContent () .getNews () ; try { for ( se.kth.news.core.news.News n : newsToAdd ) { if ( ! ( news.contains ( n ) ) ) { logReceivedNews ( n ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean handleChange ( java.lang.Object oldValue, java.lang.Object newValue, org.eclipse.draw2d.IFigure refreshableFigure ) { try { if ( ( traceDataProvider[index] ) != null ) { trace[index].setTraceColor ( getModelColor ( ( ( org.csstudio.sds.component.xygraph.model.XyGraphModel.PROP_PRIMARY_AXIS_TRACE_COLOR_PREFIX ) + index ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public br.unicamp.ic.lis.tograph.graph.GraphNode createNode ( java.lang.String label, br.unicamp.ic.lis.tograph.graph.GraphElementProperties properties ) throws java.lang.Exception { java.util.HashMap<java.lang.String, java.lang.Object> nodeProperties = new java.util.HashMap<java.lang.String, java.lang.Object> () ; try { for ( br.unicamp.ic.lis.tograph.graph.GraphElementProperty property : properties ) { nodeProperties.put ( property.getKey () , property.getValue () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Long created = inserter.createNode ( nodeProperties, org.neo4j.graphdb.DynamicLabel.label ( label ) ) ; return new br.unicamp.ic.lis.tograph.graph.GraphNode ( new java.net.URI ( java.lang.String.valueOf ( created ) ) , label, this ) ; } 
private void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast.makeText ( getBaseContext () , info, Toast.LENGTH_SHORT ) ; try { toast.show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } new android.os.Handler () .postDelayed ( new java.lang.Runnable () { @java.lang.Override public void run () { toast.cancel () ; } }, 500 ) ; } 
private void checkSingleExpandMode ( int currExpandedParentPosition ) { if ( ( mExpandCollapseMode.mode ) != ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.ExpandCollapseMode.MODE_SINGLE_EXPAND ) ) return; final int lastExpandedPosition = mExpandCollapseMode.lastExpandedPosition; if ( lastExpandedPosition == currExpandedParentPosition ) return; try { com.github.huajianjiang.expandablerecyclerview.util.Logger.e ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.TAG, ( ( "checkSingleExpandMode " + "---->lastExpandedPosition=*" ) + lastExpandedPosition ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } collapseView ( lastExpandedPosition, true, false ) ; mExpandCollapseMode.lastExpandedPosition = currExpandedParentPosition; } 
private com.intellij.psi.PsiFile mockPsiFile ( java.lang.String text ) { com.intellij.psi.PsiFile psiFile = mock ( com.intellij.psi.PsiFile.class ) ; when ( psiFile.getText () ) .thenReturn ( text ) ; try { when ( psiFile.getChildren () ) .thenReturn ( new com.intellij.psi.PsiElement[] { mock ( com.intellij.psi.PsiElement.class ) } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return psiFile; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_select_training_plan ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction () ; com.race.planner.fragments.SelectNameFragment selectNameFragment = new com.race.planner.fragments.SelectNameFragment () ; java.lang.String tag = selectNameFragment.toString () ; fragmentTransaction.replace ( R.id.fragment_swap, selectNameFragment, tag ) ; fragmentTransaction.commit () ; } 
private void spreadSkylightDownwards ( int x, int z ) { final int highestBlock = getHighestBlock ( x, z ) ; final int sectionY = highestBlock / ( Section.SECTION_HEIGHT ) ; byte light = World.DEFAULT_SKY_LIGHT; try { for ( int y = sectionY; y >= 0; --y ) { final net.morbz.minecraft.world.Section section = sections[sectionY]; if ( section != null ) { light = section.spreadSkylightDownwards ( x, z, light ) ; if ( light == 0 ) { break; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; android.view.LayoutInflater inflater = ( ( android.view.LayoutInflater ) ( getSystemService ( de.prismatikremote.hartz.prismatikremote.activities.LAYOUT_INFLATER_SERVICE ) ) ) ; mDrawerLayout.addView ( inflater.inflate ( R.layout.activity_settings, null ) ) ; android.widget.Button applySettings = ( ( android.widget.Button ) ( findViewById ( R.id.apply_settings ) ) ) ; try { applySettings.setOnClickListener ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateUi () ; } 
private void updateKLargestComments () { componentSizeCommentMap.clear () ; try { for ( org.wso2.siddhi.debs2016.graph.CommentLikeGraph commentLikeGraph : commentStore.values () ) { long sizeOfComponent = commentLikeGraph.getSizeOfLargestConnectedComponent () ; if ( sizeOfComponent == 0 ) { continue; } java.lang.String comment = commentLikeGraph.getComment () ; componentSizeCommentMap.put ( sizeOfComponent, comment ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/loginaction", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String loginAction ( com.acae.entity.UserProfile user, javax.servlet.http.HttpSession session ) { com.acae.entity.UserProfile userProfile = loginService.getUserProfile ( user.getUserId () , user.getPassword () ) ; try { if ( userProfile != null ) { session.setAttribute ( "userProfile", userProfile ) ; return "/index"; } else { session.setAttribute ( "errorMessage", "Wrong User ID or Password" ) ; return "/menu/login"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void post ( java.lang.String url, java.lang.String requestBodyString, com.chinamobile.iot.onenet.OneNetApiCallback callback ) { try { com.chinamobile.iot.onenet.OneNetApi.assertInitialized () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.chinamobile.iot.onenet.OneNetApi.assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi.assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody.create ( okhttp3.MediaType.parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor.post ( url, requestBody, new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } 
private boolean synchronizeFounders () { mLastSyncTime = java.lang.System.currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; try { serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; return syncServerFounderUpdates ( maxVersion, serverMaxVersion ) ; } 
public void toggleEventInvite ( android.view.View view ) { android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; try { if ( chkFriend.isChecked () ) { android.util.Log.d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG, "Added to invite list" ) ; } else { android.util.Log.d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG, "Removed from invite list" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private synchronized void buildGoogleApiClient () { try { if ( ( mGoogleApiClient ) == null ) { mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) .addApi ( Nearby.MESSAGES_API, new com.google.android.gms.nearby.messages.MessagesOptions.Builder () .setPermissions ( NearbyPermissions.BLE ) .build () ) .addConnectionCallbacks ( this ) .enableAutoManage ( this, this ) .build () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { while ( true ) { loc = ( ( ETPSYSTEM.ChannelValue ) ( read.channel.in () .read () ) ) ; java.lang.System.out.println ( "processO - sum1: Received loc through read" ) ; ETPSYSTEM.Sum1O.repl1O rep = new ETPSYSTEM.Sum1O.repl1O ( this.spotcheck, this.topa, this.read, this.loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { org.apache.http.client.HttpClient httpClient = clientFactory.getHttpClient () ; try { preemptivelySetAuthCredentials ( httpClient ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } request.addHeader ( "Content-Type", "application/json" ) ; request.addHeader ( "Accept", "multipart/related" ) ; request.addHeader ( "User-Agent", Manager.USER_AGENT ) ; request.addHeader ( "X-Accept-Part-Encoding", "gzip" ) ; request.addHeader ( "Accept-Encoding", "gzip, deflate" ) ; addRequestHeaders ( request ) ; setBody ( request ) ; executeRequest ( httpClient, request ) ; } 
public void setUniformMatrix ( int loc, boolean transposed, org.joml.Matrix4f mat ) { if ( loc == ( -1 ) ) return; if ( ( example.ShaderProgram.buf16Pool ) == null ) example.ShaderProgram.buf16Pool = org.lwjgl.BufferUtils.createFloatBuffer ( 16 ) ; example.ShaderProgram.buf16Pool.clear () ; mat.get ( example.ShaderProgram.buf16Pool ) ; try { glUniformMatrix4fv ( loc, transposed, example.ShaderProgram.buf16Pool ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean insertBudget ( final java.lang.String name, final int max ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues.put ( protect.budgetwatch.DBHelper.BudgetDbIds.NAME, name ) ; try { contentValues.put ( protect.budgetwatch.DBHelper.BudgetDbIds.MAX, max ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final long newId = db.insert ( protect.budgetwatch.DBHelper.BudgetDbIds.TABLE, null, contentValues ) ; return newId != ( -1 ) ; } 
public static <T> void serialize ( T object, java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext.newInstance ( object.getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext.createMarshaller () ; try { jaxbMarshaller.setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } jaxbMarshaller.marshal ( object, resultStream ) ; } 
@ java.lang.Override public void onComplete ( java.lang.String response ) { super.onComplete ( response ) ; try { if ( ! ( android.text.TextUtils.isEmpty ( response ) ) ) { if ( response.startsWith ( "{\"statuses\"" ) ) { mStatusList = com.sina.weibo.sdk.openapi.models.StatusList.parse ( response ) ; if ( null != ( mStatusList.statusList ) ) { setViewData ( mStatusList.statusList ) ; } else { android.util.Log.d ( com.bricechou.weiboclient.fragment.HomeFragment.TAG, "Refresh onComplete: No Result." ) ; refreshViewDone () ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void initialiseOWLView () throws java.lang.Exception { obdaModelManager = ( ( org.semanticweb.ontop.protege.core.OBDAModelManager ) ( getOWLEditorKit () .get ( it.unibz.krdb.obda.model.impl.OBDAModelImpl.class.getName () ) ) ) ; obdaModelManager.addListener ( this ) ; try { setLayout ( new java.awt.BorderLayout () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } editor = new org.semanticweb.ontop.protege.panels.DatasourceParameterEditorPanel ( getOWLEditorKit () ) ; add ( editor, java.awt.BorderLayout.NORTH ) ; org.semanticweb.ontop.protege.views.DatasourcesManagerView.log.debug ( "Datasource browser initialized" ) ; } 
@ java.lang.Override public void onRefresh () { try { if ( it.asg.hustle.Utils.CheckConnection.isConnected ( getActivity () ) ) { android.util.Log.d ( "HUSTLE", ( "refresh on " + tabPosition ) ) ; downloadFriendShows ( gridAdapter[tabPosition], true ) ; } else { android.widget.Toast.makeText ( getActivity () , getResources () .getString ( R.string.toast_failure_refresh ) , Toast.LENGTH_SHORT ) .show () ; swipeView.setRefreshing ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final java.lang.String getToken () { java.lang.String token = this.getCookie ( "token" ) ; try { if ( token == null ) { token = this.getHeader ( "token" ) ; if ( token == null ) { token = this.getString ( "token" ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return token; } 
private static void sendResultWithDns ( int result_code, java.lang.String dns1, java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; try { result_intent.putExtra ( "result_code", result_code ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } result_intent.putExtra ( "dns1", dns1 ) ; result_intent.putExtra ( "dns2", dns2 ) ; } 
@ java.lang.Override public void wae () { ic.commitText ( java.lang.String.valueOf ( automata.execute ( new int[] { -1, D_UP, -1, -1, -1 }, ic ) ) , 1 ) ; try { ic.commitText ( java.lang.String.valueOf ( automata.execute ( new int[] { -1, D_RIGHT, -1, D_RIGHT, -1 }, ic ) ) , 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static <D extends org.jetbrains.kotlin.resolve.CallableDescriptor> void collectAllOverriddenDescriptors ( @org.jetbrains.annotations.NotNull D current, @org.jetbrains.annotations.NotNull java.util.Set<D> result ) { if ( result.contains ( current ) ) return; try { for ( org.jetbrains.kotlin.resolve.CallableDescriptor callableDescriptor : current.getOriginal () .getOverriddenDescriptors () ) { @java.lang.SuppressWarnings ( value = "unchecked" ) D descriptor = ( ( D ) ( callableDescriptor.getOriginal () ) ) ; org.jetbrains.kotlin.resolve.DescriptorUtils.collectAllOverriddenDescriptors ( descriptor, result ) ; result.add ( descriptor ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public spell.INode find ( java.lang.String word ) { spell.Node temp = root; for ( int i = 0; i < ( word.length () ) ; i++ ) { int index = indexByLetter ( word.charAt ( i ) ) ; if ( temp.hasNode ( index ) ) { temp = temp.getNode ( index ) ; } else { return null; } } try { if ( ( temp.getValue () ) > 0 ) { return temp; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void print ( boolean printable ) { try { if ( printable ) { if ( ( -1 ) == ( client.networkInterceptors () .indexOf ( org.fintx.http.HttpClientBase.networkInterceptor ) ) ) { client = client.newBuilder () .addNetworkInterceptor ( org.fintx.http.HttpClientBase.networkInterceptor ) .build () ; } } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void saveImagePixels () { try { for ( int xPixel = 0; xPixel < ( this.width ) ; ++xPixel ) { for ( int yPixel = 0; yPixel < ( this.height ) ; ++yPixel ) { this.setPixel ( xPixel, yPixel, imageArray[xPixel][yPixel].getColor () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkLineIndent ( int lineNum, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel indentLevel ) { final java.lang.String line = indentCheck.getLine ( ( lineNum - 1 ) ) ; try { if ( ! ( line.isEmpty () ) ) { final int start = getLineStart ( line ) ; if ( indentLevel.isGreaterThan ( start ) ) { logChildError ( lineNum, start, indentLevel ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected org.payn.chsm.io.ModelBuilder loadBuilder () throws java.lang.Exception { org.payn.chsm.io.xmltools.ElementBuilder builderElem = documentConfig.getBuilderElement () ; java.lang.String classPath = builderElem.getClassPath () ; try { if ( ! ( classPath.equals ( "" ) ) ) { return ( ( org.payn.chsm.io.ModelBuilder ) ( org.payn.chsm.io.ModelLoader.createObjectInstance ( builderElem.getFile ( pathRoot ) , classPath, java.lang.String.format ( "Builder %s", classPath ) ) ) ) ; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addRow ( java.lang.String[] row ) { try { for ( int i = 0; i < ( nOfColumns ) ; ++i ) { data.addEntity ( new org.online.etl.model.abstractions.Entity ( currentId, ( ( long ) ( i ) ) , "", "String", "", null ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void add ( javax.servlet.http.HttpSession session, java.lang.String key, java.lang.Object value ) { java.util.Map<java.lang.String, java.lang.Object> map = com.liferay.portal.kernel.servlet.SessionErrors._getMap ( session, null, true ) ; if ( map == null ) { return; } try { map.put ( key, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.Map<java.lang.String, src.Node> updateNodeInMap ( src.Node n, java.util.Map<java.lang.String, src.Node> map ) { src.Node nodeFromMap = map.get ( n.getState () .toString () ) ; try { if ( ( nodeFromMap.getTotalCost () ) > ( n.getTotalCost () ) ) { map.remove ( nodeFromMap.getState () .toString () ) ; map.put ( n.getState () .toString () , n ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return map; } 
public org.json.JSONObject toJson () { org.json.JSONObject toJson = new org.json.JSONObject () ; try { toJson.put ( BoraApplicationConstants.EVENT_ID_KEY_JSON, id ) .put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON, name ) .put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON, date ) .put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON, attendees ) .put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON, photoNames ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return toJson; } 
protected void processExtensionsDependencies () throws org.apache.maven.plugin.MojoExecutionException { java.util.Collection<org.apache.maven.artifact.Artifact> artifacts = ( isExcludeTransitive () ) ? getProject () .getDependencyArtifacts () : getProject () .getArtifacts () ; try { for ( org.codehaus.mojo.webstart.JnlpExtension extension : jnlpExtensions ) { org.apache.maven.artifact.resolver.filter.ArtifactFilter filter = new org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter ( extension.getIncludes () ) ; for ( org.apache.maven.artifact.Artifact artifact : artifacts ) { if ( filter.include ( artifact ) ) { processExtensionDependency ( extension, artifact ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addJSONObjectInterceptor ( com.navercorp.pinpoint.bootstrap.plugin.ProfilerPluginContext context ) { com.navercorp.pinpoint.bootstrap.plugin.transformer.ClassFileTransformerBuilder builder = context.getClassFileTransformerBuilder ( "net.sf.json.JSONObject" ) ; builder.editMethod ( "fromObject", "java.lang.Object" ) .injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" ) .group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; builder.editMethod ( "toBean", "net.sf.json.JSONObject" ) .injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" ) .group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; try { builder.editMethod ( "toString" ) .injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" ) .group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.instrument.ClassFileTransformer transformer = builder.build () ; context.addClassFileTransformer ( transformer ) ; } 
@ org.junit.Before public void setUp () throws java.lang.Exception { try { mediaPlayer = org.mockito.Mockito.mock ( android.media.MediaPlayer.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.mockito.Mockito.when ( mediaPlayer.getDuration () ) .thenReturn ( org.mercycorps.translationcards.manager.MediaPlayerManagerTest.SOME_DURATION ) ; translation = org.mockito.Mockito.mock ( Dictionary.Translation.class ) ; mediaPlayerManager = new org.mercycorps.translationcards.media.MediaPlayerManager ( mediaPlayer ) ; } 
private boolean solveH ( int col ) { int i = 0; try { for ( i = 0; i < ( board.length ) ; i++ ) { if ( addQueen ( i, col ) ) { if ( ( col > ( ( board[0].length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true; } else { removeQueen ( i, col ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void mainMenu () { com.twu.biblioteca.Option optionSelected; try { do { presenter.displayItemsAsMenuOptions ( menuOptions ) ; int userInput = presenter.getUserInput ( menuOptions.size () ) ; optionSelected = menuOptions.get ( ( userInput - 1 ) ) ; optionSelected.onSelect () ; } while ( ! ( optionSelected instanceof com.twu.biblioteca.QuitOption ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.mapeditor.core.Map nextTurn () { try { if ( ! ( isGameOver () ) ) { boolean isStalemateForPlayer = isStalemateTurnForPlayer ( utilties.models.Game.PLAYER_ID ) ; boolean isStalemateForOpponent = isStalemateTurnForPlayer ( utilties.models.Game.OPPONENT_ID ) ; if ( isStalemateForPlayer || isStalemateForOpponent ) { _isStalemate = true; this._isGameOver = true; } else if ( ( this._numberOfTurnsCompleted ) > ( utilties.models.Game.MAX_TURN_LIMIT ) ) { _isStalemate = true; this._isGameOver = true; } ( this._numberOfTurnsCompleted ) ++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this._entityMap.getMap () ; } 
public void dispose () { try { for ( com.badlogic.ashley.core.EntitySystem sys : com.spaceproject.screens.SpaceScreen.engine.getSystems () ) { if ( sys instanceof com.badlogic.gdx.utils.Disposable ) ( ( com.badlogic.gdx.utils.Disposable ) ( sys ) ) .dispose () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.badlogic.ashley.core.Entity ents : com.spaceproject.screens.SpaceScreen.engine.getEntities () ) { com.spaceproject.components.TextureComponent tex = ents.getComponent ( com.spaceproject.components.TextureComponent.class ) ; if ( tex != null ) tex.texture.dispose () ; } } 
private void setSpotColor ( javax.swing.JButton buttonToChange, java.lang.String playerNameOnSpot ) { try { if ( ( playerNameOnSpot == null ) || ( "".equals ( playerNameOnSpot ) ) ) { buttonToChange.setIcon ( null ) ; } else if ( myPlayerController.getPlayer1Name () .equals ( playerNameOnSpot ) ) { buttonToChange.setIcon ( black_icon ) ; } else if ( myPlayerController.getPlayer2Name () .equals ( playerNameOnSpot ) ) { buttonToChange.setIcon ( red_icon ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String hour = com.bitballoon.se4351_synapps.synapps.EditNotificationActivity.pad ( mHour ) ; java.lang.String min = com.bitballoon.se4351_synapps.synapps.EditNotificationActivity.pad ( mMinute ) ; print_notification ( noti_input.getText () .toString () , hour, min ) ; try { showNotification ( noti_input.getText () .toString () , hour, min, mAMPM, date_data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void displayFragment ( android.support.v4.app.Fragment fragment, java.lang.String title ) { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction () ; fragmentTransaction.replace ( R.id.page_body, fragment ) ; fragmentTransaction.addToBackStack ( title ) ; try { fragmentTransaction.commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void handleRemovePlayer () { guiController.showMessage ( "You couldnt pay and are now out of the game!" ) ; try { guiController.removePlayer ( playerController.getCurrentPlayer () , fieldController.getFields () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } playerController.getPlayerList () .remove ( playerController.getCurrentPlayer () ) ; if ( ( playerController.getPlayerList () .size () ) > 0 ) { ( turn ) --; } } 
private static boolean rauswerfen ( int neuesFeld, int spielerNummer ) { try { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler.keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler.get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler.holeSpielfiguren () .keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler.holeSpielfiguren () .get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur.rauswerfen () ; return true; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onClick ( android.view.View v ) { existingProduct.setQuantityOrWeight ( java.lang.Double.valueOf ( holder.editTextQuantity.getText () .toString () ) ) ; existingProducts.set ( holder.getAdapterPosition () , existingProduct ) ; existingProductDAO.update ( existingProduct ) ; try { if ( ( mOnDataChangeListener ) != null ) { mOnDataChangeListener.onDataChanged ( existingProducts ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } notifyDataSetChanged () ; } 
private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId, java.lang.Integer hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException, eu.europeana.corelib.edm.exceptions.MongoRuntimeException, eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System.currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService.findById ( europeanaId, false, ( hierarchyTimeout == null ? 0 : hierarchyTimeout ) ) ; try { if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG.isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG.debug ( ( ( "SearchService findByID took " + ( ( java.lang.System.currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public void updateStats () { ray = ( ray ) * ( Utils.Global.ratioH ) ; ostr.setCenterX ( ( ( ostr.getCenterX () ) * ( Utils.Global.ratioW ) ) ) ; try { ostr.setCenterY ( ( ( ostr.getCenterY () ) * ( Utils.Global.ratioH ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ostr = new org.newdawn.slick.geom.Circle ( ostr.getCenterX () , ostr.getCenterY () , ray ) ; maxW = ( maxW ) * ( Utils.Global.ratioW ) ; maxH = ( maxH ) * ( Utils.Global.ratioH ) ; } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { try { if ( e != null ) { resetShareFragment () ; android.util.Log.d ( com.gcw.sapienza.places.ShareFragment.TAG, e.getMessage () ) ; } else { resetShareFragment () ; ( ( com.gcw.sapienza.places.com.gcw.sapienza.places.MainActivity ) ( getActivity () ) ) .refresh () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { android.util.Log.i ( "SalesforceDroidGapActivity.onCreate", "onCreate called" ) ; try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } init () ; bootconfig = com.salesforce.androidsdk.rest.BootConfig.getBootConfig ( this ) ; clientManager = buildClientManager () ; passcodeManager = com.salesforce.androidsdk.app.SalesforceSDKManager.getInstance () .getPasscodeManager () ; userSwitchReceiver = new com.salesforce.androidsdk.ui.sfhybrid.SalesforceDroidGapActivity.DroidGapUserSwitchReceiver () ; registerReceiver ( userSwitchReceiver, new android.content.IntentFilter ( com.salesforce.androidsdk.accounts.UserAccountManager.USER_SWITCH_INTENT_ACTION ) ) ; android.webkit.CookieSyncManager.createInstance ( this ) ; com.salesforce.androidsdk.util.EventsObservable.get () .notifyEvent ( EventType.MainActivityCreateComplete, this ) ; } 
@ java.lang.Override public void showLodgingList ( entity.ResultLodgingList resultLodgingList ) { loading = true; java.util.List<entity.ResultLodging> jj = resultLodgingList.getResultLodging () ; try { if ( ! ( nextOffset.equals ( resultLodgingList.getStatistics () .getOffsetNext () .toString () ) ) ) { resultLodgings.addAll ( jj ) ; adapter.notifyDataSetChanged () ; nextOffset = resultLodgingList.getStatistics () .getOffsetNext () .toString () ; loading = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mPage = getArguments () .getInt ( com.example.vikramjeet.challengerapp.fragments.OpenChallengesFragment.ARG_PAGE ) ; challenges = new java.util.ArrayList<> () ; aOpenChallenges = new com.example.vikramjeet.challengerapp.adapters.ChallengeArrayAdapter ( getActivity () , challenges, this ) ; populateData () ; } 
@ java.lang.Override public void call ( caesar.interpreter.CaesarInterpreter interpreter ) { caesar.interpreter.buildin.StringClass.logger.log ( java.util.logging.Level.FINE, "addString from StringClass is called." ) ; java.lang.String opb = interpreter.getStack () .popString () ; java.lang.String opa = interpreter.getStack () .popString () ; java.lang.String result = opa + opb; try { interpreter.getStack () .pushString ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGroupNotPresentInDisplay () throws java.lang.Exception { us.kbase.narrativemethodstore.ValidationResults vr = us.kbase.narrativemethodstore.db.test.ValidatorTest.validate ( 8, null ) ; junit.framework.Assert.assertEquals ( ( "" + vr ) , 0L, ( ( long ) ( vr.getIsValid () ) ) ) ; try { junit.framework.Assert.assertEquals ( ( "" + vr ) , 1, vr.getErrors () .size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } junit.framework.Assert.assertEquals ( ( "" + vr ) , ( "Can't find property [log_entries] within path " + "[parameter-groups] in display.yaml" ) , vr.getErrors () .get ( 0 ) ) ; } 
private java.lang.Integer[] compareAndSetStubStatusDelta ( java.lang.String rawStubStatus, com.ctrip.zeus.nginx.entity.TrafficStatus trafficStatus ) { java.lang.Integer[] stubStatus = com.ctrip.zeus.util.RollingTrafficStatus.parseStubStatusNumber ( rawStubStatus.split ( "\n" ) ) ; try { com.ctrip.zeus.util.RollingTrafficStatus.extractStubStatus ( com.ctrip.zeus.util.RollingTrafficStatus.getDelta ( stubStatus, lastStubStatus ) , trafficStatus, stubStatus ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return stubStatus; } 
public void pop () { astnodes.ASTNode topOfItemStack = itemStack.peek () ; try { while ( ( ( stack.size () ) > 0 ) && ( ( stack.peek () .parentCompound ) == topOfItemStack ) ) { stack.pop () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testSearch () { for ( int num : numbers ) { tree.insert ( num ) ; } int key = 2; assertEquals ( 2, tree.search ( key ) ) ; int key2 = 2234; try { assertEquals ( 0, tree.search ( key2 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public io.ddf.DDF getDDFByUri ( java.lang.String uri ) throws io.ddf.exception.DDFException { java.util.UUID uuid = this.mUris.get ( uri ) ; try { if ( uuid == null ) { throw new io.ddf.exception.DDFException ( java.lang.String.format ( "Cannot find ddf with uri %s", uri ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this.getDDF ( uuid ) ; } 
@ java.lang.Override public void run () { org.vanilladb.core.storage.tx.Transaction tx = org.vanilladb.core.server.VanillaDb.txMgr () .newTransaction ( java.sql.Connection.TRANSACTION_SERIALIZABLE, false, 1 ) ; org.elasql.cache.CachedRecord record = org.elasql.cache.tpart.WriteBackTest.createCachedRecord ( 1, 10001 ) ; record.setNewInserted ( true ) ; try { localStorage.writeBack ( commonKey, record, tx ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void login ( java.lang.String email, java.lang.String password ) { com.weddingcrashers.model.User user = _userService.getUserByEmail ( email ) ; com.weddingcrashers.servermodels.LoginContainer loginContainer = new com.weddingcrashers.servermodels.LoginContainer () ; try { if ( user != null ) { if ( user.getPassword () .equals ( password ) ) { loginContainer.setUser ( user ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } com.weddingcrashers.server.ServerUtils.sendObject ( client, loginContainer ) ; } 
@ java.lang.Override public src.IR_TYPE_WRAPPER isValid () throws java.lang.Exception { try { type.isValid () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( size.isValid () .type.equals ( new AST.AST_TYPE_TERM ( TYPES.INT ) ) ) ) { throw new java.lang.Exception ( "invalid array size type" ) ; } computedType = new AST.AST_TYPE_ARRAY ( type ) ; return new src.IR_TYPE_WRAPPER ( computedType, null ) ; } 
public static void main ( java.lang.String[] args ) { int[] play = new int[] { 5, 8, 2, 3, 1, 5, 0 }; try { java.lang.System.out.println ( RightWingGame.solveGameRecursively ( play, RightWingGame.DEFAULT_VALUE, RightWingGame.DEFAULT_VALUE, RightWingGame.DEFAULT_VALUE ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void changed ( drtn.game.screens.ChangeEvent event, com.badlogic.gdx.scenes.scene2d.Actor actor ) { try { if ( ! ( engine.selectedTile () .hasRoboticon () ) ) { engine.deployRoboticon () ; selectTile ( engine.selectedTile () , false ) ; } else { engine.refreshUpgradeOverlay () ; upgradeOverlayVisible = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void approachBuilding ( java.lang.String bldName ) { chronos.pdc.buildings.Building bldg = _bReg.getBuilding ( bldName ) ; try { if ( bldg != null ) { _currentBldg = bldg; java.lang.String description = bldg.getExteriorDescription () ; java.lang.String imagePath = bldg.getExtImagePath () ; displayBuilding ( description, imagePath ) ; } else { _frame.displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setupAuthenticatedModel ( java.lang.String results, org.springframework.ui.ModelMap model ) { java.util.List<org.balaguta.currconv.data.entity.Conversion> history = conversionService.getHistory () ; try { if ( ( history.isEmpty () ) || ( results == null ) ) { model.put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY, history ) ; } else { model.put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY, history.subList ( 1, history.size () ) ) ; model.put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION, history.get ( 0 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public ShiftInDay getShift ( Shift shift ) { try { switch ( shift.getName () ) { case "Early Morning Shift": return earlyMorningShift; case "Morning Shift": return morningShift; case "Late Morning Shift": return lateMorningShift; case "Surgery Shift": return surgeryShift; case "Overnight Shift": return overnightShift; case "Sunday Shift": return sundayShift; default: java.lang.System.out.println ( "Not a valid shift" ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { view = inflater.inflate ( R.layout.fragment_future, container, false ) ; fab = view.findViewById ( R.id.futureFab ) ; eventRecycler = view.findViewById ( R.id.eventsRecycler ) ; try { eventRecycler.setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () .getApplicationContext () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tvNoData = view.findViewById ( R.id.tvNoFutureData ) ; onClickListeners () ; checkPermission () ; return view; } 
public double getPoisson ( double lambda ) { double L = java.lang.Math.exp ( ( -lambda ) ) ; double p = 1.0; double k = 0.0; do { k = k + 0.5; p *= java.lang.Math.random () ; } while ( p > L ) ; double numero = 1 / ( k - 0.1 ) ; try { numero = redondear ( ( numero * 10 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return numero; } 
@ org.junit.Test public void addInvalidFunds () { final com.clouway.adapter.rest.Expense expenses = new com.clouway.adapter.rest.Expense ( "type", "invalid funds" ) ; com.clouway.adapter.http.ExpensesPage page = mockExpenses ( expenses ) ; try { page.add ( request ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<com.clouway.adapter.rest.Expense> one = repository.find ( 1, 1 ) ; assertTrue ( one.isEmpty () ) ; } 
private void jComboBox6ActionPerformed ( java.awt.event.ActionEvent evt ) { cz.fidentis.controller.Comparison2Faces bc = cz.fidentis.gui.GUIController.getSelectedProjectTopComponent () .getProject () .getSelectedComparison2Faces () ; try { if ( ( bc.getHDP () ) == null ) return; } catch ( Exception ex ) { ex.printStackTrace () ; } bc.getHDP () .getInfo () .setColorScheme ( cz.fidentis.visualisation.ColorScheme.values () [jComboBox6.getSelectedIndex () ] ) ; } 
public void receive ( java.util.Map<java.lang.String, java.lang.String> result ) { int in = java.lang.Integer.parseInt ( result.get ( "rx-bits-per-second" ) ) ; int out = java.lang.Integer.parseInt ( result.get ( "tx-bits-per-second" ) ) ; traffic = in + out; java.lang.System.out.println ( ( ( ( ( ( parentIdentity ) + ": Total traffic on " ) + ( label ) ) + ": " ) + ( traffic ) ) ) ; try { aggregator.update ( traffic ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.ArrayList<dhbw.timetable.data.Appointment> GetAppointmentsOfDay ( java.util.GregorianCalendar day, java.util.ArrayList<dhbw.timetable.data.Appointment> list ) { java.util.ArrayList<dhbw.timetable.data.Appointment> dayAppointments = new java.util.ArrayList<> () ; if ( list == null ) return dayAppointments; java.lang.String currDate = new java.text.SimpleDateFormat ( "dd.MM.yyyy", java.util.Locale.GERMANY ) .format ( day.getTime () ) ; try { for ( dhbw.timetable.data.Appointment a : list ) { if ( a.getDate () .equals ( currDate ) ) { dayAppointments.add ( a ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return dayAppointments; } 
@ java.lang.Override public void addPopulators ( org.spongepowered.api.world.gen.WorldGenerator generator ) { try { generator.getGenerationPopulators () .add ( ( ( org.spongepowered.api.world.gen.GenerationPopulator ) ( this.netherCaveGenerator ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( this.field_177466_i ) { generator.getGenerationPopulators () .add ( ( ( org.spongepowered.api.world.gen.GenerationPopulator ) ( this.genNetherBridge ) ) ) ; generator.getPopulators () .add ( ( ( org.spongepowered.api.world.gen.Populator ) ( this.genNetherBridge ) ) ) ; } } 
public void deselectController () { try { if ( ( mCursorController ) != null ) { mCursorController.removePickEventListener ( mPickHandler ) ; mCursorController.setEnable ( false ) ; mCursorController = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mControllerModel ) != null ) { mControllerModel.setEnable ( false ) ; mControllerModel = null; } } 
public void setAborted ( java.lang.String playerId ) { validatePlayerId ( playerId ) ; try { if ( ! ( aborted ) ) { this.abortedBy = playerId; this.aborted = true; this.setChanged () ; } else { this.finished = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.Map<java.lang.String, java.lang.Integer> getBlacklistedVW () { java.util.Map<java.lang.String, java.lang.Integer> blacklistedVW = new java.util.HashMap<java.lang.String, java.lang.Integer> () ; java.util.Set<java.lang.String> keys = redis.smembers ( this.prefix ) ; java.util.Iterator<java.lang.String> it = keys.iterator () ; try { while ( it.hasNext () ) { java.lang.String key = it.next () ; blacklistedVW.put ( key, ( -1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return blacklistedVW; } 
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { try { eventRowIndex = itemTable.getCellForEvent ( event ) .getRowIndex () ; } catch ( Exception ex ) { ex.printStackTrace () ; } itemDTO.setId ( java.lang.Integer.parseInt ( itemTable.getText ( eventRowIndex, 0 ) ) ) ; itemDTO.setName ( itemTable.getText ( eventRowIndex, 1 ) ) ; setItemId ( java.lang.Integer.parseInt ( itemTable.getText ( eventRowIndex, 0 ) ) ) ; controllerEditBtn.fireEvent ( new com.google.gwt.event.dom.client.ClickEvent () { } ) ; } 
protected void applyCenterCrop ( @android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view.getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view.getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math.max ( xScale, yScale ) ; xScale = scale / xScale; yScale = scale / yScale; try { applyScale ( view, xScale, yScale ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_main ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.app_bar ) ) ) ; setSupportActionBar ( toolbar ) ; mIsTwoPaneLayout = ( findViewById ( R.id.top_tracks_container ) ) != null; if ( ( mIsTwoPaneLayout ) && ( savedInstanceState == null ) ) { getSupportFragmentManager () .beginTransaction () .replace ( R.id.top_tracks_container, new com.spotify.sdliles.spotifystreamer.UI.TopTracksFragment () ) .commit () ; } } 
public void testInsideConstructor () throws java.lang.Exception { java.util.Map<java.lang.String, java.lang.String[][]> resultsMap = new java.util.HashMap<> () ; try { resultsMap.put ( "aMethod ( c ) ", new java.lang.String[][] { new java.lang.String[] { "charX", "charY", "inCall" } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } resultsMap.put ( "aMethod ( c, x ) ", new java.lang.String[][] { new java.lang.String[] { "charX", "charY", "inCall" }, new java.lang.String[] { "charX", "charY", "inCall" } } ) ; assertParametersGuesses ( resultsMap ) ; } 
public static boolean isUserAdmin ( net.dv8tion.jda.core.entities.User user ) { try { if ( com.xelitexirish.elitedeveloperbot.UserPrivs.adminUsers.contains ( user ) ) { return true; } else { for ( net.dv8tion.jda.core.entities.Role role : user.getJDA () .getGuildById ( Constants.DISCORD_SERVER_ID ) .getMember ( user ) .getRoles () ) { if ( role.getId () .equalsIgnoreCase ( Constants.ROLE_ADMIN_ID ) ) { return true; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void sendTrackUpdate () { try { if ( ( mTrack ) != null ) { android.content.Intent i = new android.content.Intent () ; i.setAction ( org.y20k.trackbook.ACTION_TRACK_UPDATED ) ; i.putExtra ( org.y20k.trackbook.EXTRA_TRACK, mTrack ) ; i.putExtra ( org.y20k.trackbook.EXTRA_LAST_LOCATION, mCurrentBestLocation ) ; android.support.v4.content.LocalBroadcastManager.getInstance ( getApplicationContext () ) .sendBroadcast ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void inputData () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; Exam01.IDCard.str = scanner.next () ; try { Exam01.IDCard.arr = new java.lang.String[Exam01.IDCard.str.length () ]; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < ( Exam01.IDCard.str.length () ) ; i++ ) { Exam01.IDCard.arr[i] = Exam01.IDCard.str.substring ( i, ( i + 1 ) ) ; } } 
@ java.lang.Override public void onComplete ( com.google.firebase.database.DatabaseError databaseError, com.google.firebase.database.DatabaseReference databaseReference ) { try { if ( databaseError != null ) { callbackContext.sendPluginResult ( convertToPluginResult ( databaseError, false ) ) ; } else { callbackContext.sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.OK, ( ( path + '/' ) + ( databaseReference.getKey () ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void clone ( java.lang.String pathDest ) { checkIfExist ( pathDest ) ; rc = new com.aragost.javahg.RepositoryConfiguration () ; try { if ( java.lang.System.getProperty ( "os.name" ) .toLowerCase () .contains ( "windows" ) ) { configureMercurial () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } br = com.aragost.javahg.BaseRepository.clone ( rc, new java.io.File ( pathDest ) , org.cloudml.connectors.util.MercurialConnector.endPoint ) ; } 
protected void initiateGeocode ( java.lang.String address, int tag ) { android.content.Intent intent = new android.content.Intent ( this, com.getataxi.client.utils.GeocodeIntentService.class ) ; intent.putExtra ( Constants.GEOCODE_RECEIVER, mResultReceiver ) ; intent.putExtra ( Constants.GEOCODE_TYPE, Constants.GEOCODE ) ; intent.putExtra ( Constants.ADDRESS_DATA_EXTRA, address ) ; try { intent.putExtra ( Constants.GEOCODE_TAG, tag ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startService ( intent ) ; } 
public boolean setColor ( java.awt.Color color ) { try { if ( ( ( ( this.color ) != null ) && ( this.color.equals ( color ) ) ) || ( ( ( this.color ) == null ) && ( color == null ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } this.color = color; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this, FieldEvent.UPDATE, "color" ) ) ; return true; } 
@ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname, final java.util.List<java.lang.String> serviceBaseDomains, final java.util.List<java.lang.String> serviceConfigHeaders, final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; try { req.setServerName ( requestHostname ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil.getZoneName ( req, serviceBaseDomains, serviceConfigHeaders ) ; org.testng.Assert.assertEquals ( subdomain, subdomainValue ) ; } 
@ java.lang.Override @org.molgenis.security.core.runas.RunAsSystem public void changePassword ( java.lang.String username, java.lang.String newPassword ) { org.molgenis.auth.MolgenisUser user = dataService.query ( org.molgenis.security.account.MOLGENIS_USER, org.molgenis.auth.MolgenisUser.class ) .eq ( org.molgenis.security.account.USERNAME, username ) .findOne () ; if ( user == null ) { throw new org.molgenis.security.user.MolgenisUserException ( java.lang.String.format ( "Unknown user [%s]", username ) ) ; } user.setPassword ( newPassword ) ; try { user.setChangePassword ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dataService.update ( org.molgenis.security.account.MOLGENIS_USER, user ) ; org.molgenis.security.account.AccountServiceImpl.LOG.info ( "Changed password of user [{}]", username ) ; } 
public static void continuous ( java.util.List<java.lang.String> oldlist ) { oldlist = pers.zylo117.spotspotter.fileprocessor.FIndexReader.getFIndex ( false ) ; final java.util.List<java.lang.String> newlist = pers.zylo117.spotspotter.fileprocessor.FIndexReader.getFIndex ( true ) ; newlist.removeAll ( oldlist ) ; if ( ! ( newlist.isEmpty () ) ) oldlist = newlist; try { pers.zylo117.spotspotter.fileprocessor.FIndexReader.indexProcess ( CentralControl.monitorPath, oldlist ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { android.util.Log.d ( com.abrahamyans.gpsbusfeed.scheduler.LocationService.TAG, ( "Changed location " + location ) ) ; com.abrahamyans.gpsbusfeed.event.LocationChangedEvent event = new com.abrahamyans.gpsbusfeed.event.LocationChangedEvent ( getApplicationContext () , location, new java.util.Date () ) ; try { if ( tracker.isValidLocationEvent ( event ) ) { feed.onLocationChanged ( event ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } processingLocation = false; disconnect () ; } 
@ java.lang.Override protected void onPostExecute ( java.util.ArrayList<com.group6a_hw03.group6a_hw03.Question> question ) { try { super.onPostExecute ( question ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fActivityLoadProgress.dismiss () ; com.group6a_hw03.group6a_hw03.Trivia_Activity.fQuestionData = question; if ( question.isEmpty () ) { showToast ( "No questions currently in the database" ) ; quitActivity () ; } else { displayDetails () ; } } 
private void handleOnDestroyOne ( android.content.pm.ServiceInfo targetInfo ) { android.app.Service service = mNameService.get ( targetInfo.name ) ; try { if ( service != null ) { service.onDestroy () ; mNameService.remove ( targetInfo.name ) ; java.lang.Object token = findTokenByService ( service ) ; mTokenServices.remove ( token ) ; mServiceTaskIds.remove ( token ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } me.ele.amigo.compat.QueuedWorkCompat.waitToFinish () ; } 
private boolean validateUI () { java.util.Iterator it = reportHasmap.entrySet () .iterator () ; while ( it.hasNext () ) { java.util.Map.Entry pair = ( ( java.util.Map.Entry ) ( it.next () ) ) ; if ( ! ( pair.getValue () .equals ( "none" ) ) ) { return true; } } try { showNormalDailog ( activity.getResources () .getString ( R.string.youHaveNotReportedAnEntryText ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public java.util.List<com.intellij.plugins.haxe.model.HaxeParameterModel> getParameters () { java.util.List<com.intellij.plugins.haxe.model.HaxeParameterModel> _parameters = new java.util.ArrayList<com.intellij.plugins.haxe.model.HaxeParameterModel> () ; com.intellij.plugins.haxe.model.HaxeParameterList parameterList = com.intellij.plugins.haxe.util.UsefulPsiTreeUtil.getChild ( this.haxeMethod, com.intellij.plugins.haxe.model.HaxeParameterList.class ) ; try { if ( parameterList != null ) { for ( com.intellij.plugins.haxe.model.HaxeParameter parameter : parameterList.getParameterList () ) { _parameters.add ( new com.intellij.plugins.haxe.model.HaxeParameterModel ( parameter ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return _parameters; } 
@ java.lang.Override public void serialize ( com.facebook.presto.spi.SerializableNativeValue value, com.fasterxml.jackson.core.JsonGenerator generator, com.fasterxml.jackson.databind.SerializerProvider provider ) throws java.io.IOException { generator.writeStartObject () ; generator.writeStringField ( "type", value.getType () .getName () ) ; try { generator.writeFieldName ( "value" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( value.getValue () ) == null ) { generator.writeNull () ; } else { com.facebook.presto.spi.SerializableNativeValue.Serializer.writeValue ( value, generator ) ; } generator.writeEndObject () ; } 
public void setCurrentFile ( com.alperez.bt_microphone.rest.response.commonmodels.DeviceFile devFile ) { setCurrentTimeStart ( devFile.startTime () ) ; setCurrentDuration ( devFile.durationMillis () ) ; setCurrentPosition ( devFile.currentPosition () ) ; try { setCurrentSampleRate ( java.lang.Integer.toString ( devFile.sampleRate () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setCurrentLocation ( devFile.geoLocation () ) ; } 
private Ds3ClientHelpers.Job innerStartReadJob ( final java.util.List<com.spectralogic.ds3client.helpers.Ds3Object> objects, final com.spectralogic.ds3client.helpers.GetBulkJobSpectraS3Request getBulkJobSpectraS3Request, final com.spectralogic.ds3client.helpers.strategy.transferstrategy.TransferStrategyBuilder transferStrategyBuilder ) throws java.io.IOException { final com.spectralogic.ds3client.helpers.GetBulkJobSpectraS3Response getBulkJobSpectraS3Response = this.client.getBulkJobSpectraS3 ( getBulkJobSpectraS3Request ) ; final com.google.common.collect.ImmutableMultimap<java.lang.String, com.spectralogic.ds3client.models.common.Range> partialRanges = com.spectralogic.ds3client.helpers.util.PartialObjectHelpers.getPartialObjectsRanges ( objects ) ; final com.spectralogic.ds3client.helpers.MasterObjectList masterObjectList = getBulkJobSpectraS3Response.getResult () ; try { transferStrategyBuilder.withMasterObjectList ( masterObjectList ) .withRangesForBlobs ( com.spectralogic.ds3client.helpers.util.PartialObjectHelpers.mapRangesToBlob ( masterObjectList.getObjects () , partialRanges ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new com.spectralogic.ds3client.helpers.ReadJobImpl ( transferStrategyBuilder ) ; } 
public void setMessageForMultiList ( @android.support.annotation.StringRes int headline, @android.support.annotation.StringRes int message, @android.support.annotation.DrawableRes int icon ) { try { if ( ( ( mMultiListContainer ) != null ) && ( ( mMultiListMessage ) != null ) ) { mMultiListHeadline.setText ( headline ) ; mMultiListMessage.setText ( message ) ; mMultiListIcon.setImageResource ( icon ) ; mMultiListMessage.setVisibility ( View.VISIBLE ) ; mMultiListIcon.setVisibility ( View.VISIBLE ) ; mMultiListProgress.setVisibility ( View.GONE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void draw ( android.graphics.Canvas canvas ) { canvas.drawColor ( Color.BLACK ) ; try { if ( ! ( mSelfJet.isDead () ) ) { mSelfJet.draw ( canvas ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( hacking.to.the.gate.Jet jet : mEnemyJets ) { jet.draw ( canvas ) ; } for ( hacking.to.the.gate.PowerUp p : mPowerUps ) { if ( p.isVisible () ) { p.draw ( canvas ) ; } } } 
public int countNodes ( hou.forwz.Leetcode.structure.TreeNode root ) { if ( root == null ) return 0; int leftDeep = deep ( root.left ) ; int rightDeep = deep ( root.right ) ; try { if ( leftDeep == rightDeep ) { return ( ( int ) ( ( java.lang.Math.pow ( 2, leftDeep ) ) + ( countNodes ( root.right ) ) ) ) ; } else return ( ( int ) ( java.lang.Math.pow ( 2, rightDeep ) ) ) + ( countNodes ( root.left ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void incomingCar ( data.analytics.smart.traffic.model.movement.CardinalDirection from, data.analytics.smart.traffic.model.Car car ) { try { if ( light.isGreen ( from ) ) { java.lang.System.out.println ( "Its already green" ) ; } else { java.util.List<data.analytics.smart.traffic.model.Car> carList = waitinglist.get ( from ) ; carList.add ( car ) ; waitinglist.put ( from, carList ) ; java.lang.System.out.println ( ( ( "Car from " + from ) + "has to wait in line" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test ( expected = java.lang.UnsupportedOperationException.class ) public void testNullCommandLine () { final org.genepattern.drm.DrmJobSubmission drmJob = new org.genepattern.drm.DrmJobSubmission.Builder ( workingDir ) .jobContext ( jobContext ) .build () ; assertEquals ( "Expecting emtpy list", 0, drmJob.getCommandLine () .size () ) ; try { drmJob.getCommandLine () .add ( "-P" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void checkTypes ( bantam.util.ClassTreeNode classTreeNode ) { this.classTreeNode = classTreeNode; bantam.visitor.Class_ classASTNode = this.classTreeNode.getASTNode () ; this.fieldScope = ( this.classTreeNode.getVarSymbolTable () .getCurrScopeLevel () ) - 1; this.methodScope = ( this.classTreeNode.getMethodSymbolTable () .getCurrScopeLevel () ) - 1; try { classASTNode.accept ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.content.DialogInterface dialog, int id ) { java.lang.String userString = task.getText () .toString () ; erica.todolist2.ToDo taskThing = new erica.todolist2.ToDo ( userString, 0 ) ; al.set ( i, taskThing ) ; service.updateToDo ( taskThing ) ; try { a.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void generateMappingColumns ( java.util.Map<model.data.DataColumn, java.lang.String> mappingNewNameToOldColumns ) { try { for ( java.util.Map.Entry<model.data.DataColumn, java.lang.String> entry : mappingNewNameToOldColumns.entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry.getValue () , null, entry.getKey () .getType () ) ; this.addColumn ( newColumn ) ; mappingColumns.put ( entry.getKey () , newColumn ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startQuickGame () { final int MIN_OPPONENTS = 1; final int MAX_OPPONENTS = 1; android.os.Bundle autoMatchCriteria = com.google.android.gms.games.multiplayer.realtime.RoomConfig.createAutoMatchCriteria ( MIN_OPPONENTS, MAX_OPPONENTS, 0 ) ; com.google.android.gms.games.multiplayer.realtime.RoomConfig.Builder rtmConfigBuilder = com.google.android.gms.games.multiplayer.realtime.RoomConfig.builder ( this ) ; rtmConfigBuilder.setMessageReceivedListener ( this ) ; rtmConfigBuilder.setRoomStatusUpdateListener ( this ) ; try { rtmConfigBuilder.setAutoMatchCriteria ( autoMatchCriteria ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } switchToScreen ( R.id.screen_wait ) ; keepScreenOn () ; Games.RealTimeMultiplayer.create ( mGoogleApiClient, rtmConfigBuilder.build () ) ; } 
private double getElevation ( model.battlefield.map.Tile t, model.battlefield.map.cliff.Cliff c ) { try { if ( ( t.getModifiedLevel () ) > ( ( c.level ) + 1 ) ) { return ( ( c.level ) + 1 ) * ( model.battlefield.map.Tile.STAGE_HEIGHT ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return t.getElevation () ; } 
@ java.lang.Override public void update ( long songTime ) { try { setY ( ( ( GameScreen.BAR_POSITION ) + ( ( ( ( ( beatTimeMillis ) - songTime ) + ( GameScreen.visualOffsetMillis ) ) * ( GameScreen.HIT_OBJECT_DISTANCE ) ) / ( millisFor4Beats ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( songTime - ( beatTimeMillis ) ) > ( holdDurationMillis ) ) { BeatMap.hitFlagString = BeatMap.HITFLAGSTRINGS[4]; onRelease () ; } } 
public void initialize () { song1 = Gdx.audio.newMusic ( Gdx.files.internal ( "NARC.mp3" ) ) ; try { song2 = Gdx.audio.newMusic ( Gdx.files.internal ( "Rose the Wraith.mp3" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } song3 = Gdx.audio.newMusic ( Gdx.files.internal ( "ABIIISMO - Machine Uprising.mp3" ) ) ; song1.setVolume ( 0.2F ) ; song1.setOnCompletionListener ( new com.badlogic.gdx.audio.Music.OnCompletionListener () { @java.lang.Override public void onCompletion ( com.badlogic.gdx.audio.Music music ) { song1.play () ; song3.play () ; } } ) ; } 
private void loadLands () { java.lang.Object[] lands = com.essentials.mcoldlife.main.CustomConfig.getArray ( reference.FILE_LANDS, reference.CONFIG_FOLDER.toString () , reference.PATH_LANDS ) ; try { if ( lands != null ) { for ( java.lang.Object land : lands ) { com.mcoldlife.objects.OLLand l = new com.mcoldlife.objects.OLLand ( land.toString () ) ; com.mcoldlife.objects.RPGManager.addLand ( land.toString () , l ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.opendaylight.yangtools.concepts.CompositeObjectRegistration.CompositeObjectRegistrationBuilder<T> remove ( final org.opendaylight.yangtools.concepts.ObjectRegistration<? super T> registration ) { if ( ! ( registration.getInstance () .equals ( instance ) ) ) { throw new java.lang.IllegalArgumentException ( "Instance must be same." ) ; } try { registrations.remove ( registration ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ org.junit.Test public void testTSVOutput () throws java.lang.Throwable { java.lang.String SCRIPT_TEXT = getFormatTestQuery () ; java.util.List<java.lang.String> argList = getBaseArgs ( org.apache.hive.beeline.TestBeeLineWithArgs.miniHS2.getBaseJdbcURL () ) ; try { argList.add ( "--outputformat=tsv" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final java.lang.String EXPECTED_PATTERN = "\'1\'\t\'NULL\'\t\'defg\'\t\'ab\"c\'\t\'1.0\'"; testScriptFile ( SCRIPT_TEXT, argList, EXPECTED_PATTERN, true ) ; } 
@ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent, android.view.View v, int groupPosition, int childPosition, long id ) { try { if ( ( mGroups.get ( groupPosition ) ) != null ) mListener.onDeleteBpmClick ( mGroups.get ( groupPosition ) .children.get ( childPosition ) .getId () , groupPosition, childPosition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
protected java.lang.String getDataStorePath ( final java.lang.String dataStore, final java.lang.String context ) { try { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config".contains ( dataStore ) ) || ( "operational".contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context; } return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( "/" + dataStore ) + context; } 
public java.lang.String toString () { java.lang.String returnString = " ( " + ( this.operator.toString () ) ; java.util.Iterator<dl.syntax.Term> subTermIterator = getSubTerms () .iterator () ; try { while ( subTermIterator.hasNext () ) { returnString = ( returnString + " " ) + ( subTermIterator.next () .toString () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } returnString = returnString + " ) "; return returnString; } 
public void add ( byte[] data, java.lang.String name, java.lang.String fileName, java.lang.String contentType ) { try { dataList.add ( this.border ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dataList.add ( HttpHeaders.LINE_SEPARATOR_BYTES ) ; dataList.add ( buildHeaders ( name, fileName, contentType ) ) ; dataList.add ( data ) ; dataList.add ( HttpHeaders.LINE_SEPARATOR_BYTES ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { com.lucianofabris.booklistingapp.Volume currentVolume = adapter.getItem ( position ) ; android.net.Uri webPageUri = android.net.Uri.parse ( currentVolume.getInfoLink () ) ; android.content.Intent webIntent = new android.content.Intent ( android.content.Intent.ACTION_VIEW, webPageUri ) ; try { startActivity ( webIntent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int deleteRecord ( libraryDatabaseUtility.model.DataSource source, long bookId ) throws java.sql.SQLException { int result = 0; java.sql.Connection connection = source.getConnection () ; java.sql.PreparedStatement statement = null; statement = connection.prepareStatement ( libraryDatabaseUtility.repository.BookDAOImpl.DELETE_RECORD_SQL ) ; statement.setLong ( 1, bookId ) ; try { result = statement.executeUpdate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void onMapReady ( com.google.android.gms.maps.GoogleMap googleMap ) { mMap = googleMap; com.google.android.gms.maps.model.LatLng loyola = new com.google.android.gms.maps.model.LatLng ( 41.998, ( -87.659 ) ) ; try { mMap.moveCamera ( com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom ( loyola, ( ( float ) ( 15.5 ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( checkPermissions () ) { setMyLocationEnabled () ; } } 
public static void printMatlabArray2D ( java.lang.Iterable<? extends java.lang.Iterable<java.lang.Double>> ll, int elementsPerLine, java.io.PrintStream out ) { boolean first = true; try { out.println ( "[" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( java.lang.Iterable<java.lang.Double> l : ll ) { if ( first ) first = false; else out.println ( ", " ) ; MatlabUtil.printMatlabArray ( l, elementsPerLine, out ) ; } out.println () ; out.println ( "]" ) ; } 
public void showSprint ( softwaremanagementtool.agile.Sprint sprint ) { try { if ( sprint != null ) { infoViewController.showSprint ( sprint ) ; sprintBlViewController.setAgilePrj ( agilePrj, agilePrj.getSprintBacklogList ( sprint ) ) ; prodOpenBlViewController.setAgilePrj ( agilePrj, agilePrj.getOpenProdBacklogList () ) ; backlogViewController.showSprint ( sprint ) ; reviewViewController.showSprint ( sprint ) ; retrospectViewController.showSprint ( sprint ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<com.github.bwsoft.iris.sample.FuelFigures.FuelFigure> getFuelFigures ( com.github.bwsoft.iris.message.GroupObject msgObj ) { figures.clear () ; com.github.bwsoft.iris.message.GroupObjectArray fuelFiguresGroup = msgObj.getGroupArray ( fuelFigures ) ; try { for ( int i = 0; i < ( fuelFiguresGroup.getNumOfGroups () ) ; i++ ) { com.github.bwsoft.iris.message.GroupObject aFigureObj = fuelFiguresGroup.getGroupObject ( i ) ; com.github.bwsoft.iris.sample.FuelFigures.FuelFigure aFigure = new com.github.bwsoft.iris.sample.FuelFigures.FuelFigure () ; aFigure.speed = aFigureObj.getFloat ( speed ) ; aFigure.mpg = aFigureObj.getFloat ( mpg ) ; figures.add ( aFigure ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return figures; } 
public void selectPrevious () { try { if ( ( getSelectedImage () ) instanceof org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) { if ( ( getSelectedImage () ) == null ) return; if ( ( ( ( org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) ( getSelectedImage () ) ) .getSequence () ) == null ) throw new java.lang.IllegalStateException () ; setSelectedImage ( ( ( org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) ( getSelectedImage () ) ) .previous () , true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testDouble () { try { org.junit.Assert.assertEquals ( java.lang.Double.valueOf ( ( -3.0 ) ) , magic.compiler.Reader.read ( "-3.0" ) .getValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( java.lang.Double.valueOf ( 3.0E9 ) , magic.compiler.Reader.read ( ".3e10" ) .getValue () ) ; org.junit.Assert.assertEquals ( java.lang.Double.valueOf ( ( -3.0E9 ) ) , magic.compiler.Reader.read ( "-0.3e10" ) .getValue () ) ; } 
@ org.auraframework.system.Annotations.AuraEnabled public static org.auraframework.instance.Application getApplication ( @org.auraframework.system.Annotations.Key ( value = "name", loggable = true ) java.lang.String name, @org.auraframework.system.Annotations.Key ( value = "attributes" ) java.util.Map<java.lang.String, java.lang.Object> attributes ) throws org.auraframework.throwable.quickfix.QuickFixException { org.auraframework.service.DefinitionService definitionService = org.auraframework.Aura.getDefinitionService () ; org.auraframework.def.DefDescriptor<org.auraframework.def.ApplicationDef> desc = definitionService.getDefDescriptor ( name, org.auraframework.def.ApplicationDef.class ) ; try { definitionService.updateLoaded ( desc ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return org.auraframework.Aura.getInstanceService () .getInstance ( desc, attributes ) ; } 
public void addLast ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } try { if ( ( N ) == ( array.length ) ) resize ( ( ( array.length ) * 2 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } array[last] = item; ( N ) ++; last = N; } 
public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { if ( savedInstanceState == null ) { mListJenkinsBuildInfoFragment = org.addhen.birudo.ui.fragment.ListJenkinsBuildInfoFragment.newInstance () ; getFragmentManager () .beginTransaction () .replace ( R.id.list_container, mListJenkinsBuildInfoFragment ) .commit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void processPath ( Q root ) { org.appsugar.bean.entity.QGenericIdEntity r = org.appsugar.bean.entity.QGenericIdEntity.genericIdEntity; if ( java.util.Objects.isNull ( createdAt ) ) { createdAt = findPath ( root, r.createdAt.getMetadata () .getName () ) ; } try { if ( java.util.Objects.isNull ( updatedAt ) ) { updatedAt = findPath ( root, r.updatedAt.getMetadata () .getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public long getMemoryAddress ( com.zms.zpc.emulator.PC pc ) { assert ( addressReg ) == null; addressUseReg = false; long address = calAddress ( pc, this.address ) ; try { if ( addressUseReg ) { address += com.zms.zpc.execute.NumberUtils.asSigned ( this.disp, this.dispWidth ) ; } else { address += this.disp; } } catch ( Exception ex ) { ex.printStackTrace () ; } return getMemoryAddress ( pc, address ) ; } 
public semantic.Table lookupFunction ( java.lang.String name ) { try { if ( ( parent ) != null ) { parent.lookupFunction ( name ) ; } else { for ( semantic.Table t : parent.children ) { if ( t.getSymbol ( 0 ) .getName () .equals ( name ) ) return t; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private java.lang.String removeSpaces ( java.lang.String s ) { java.lang.String answer = ""; try { for ( int i = 0; i < ( s.length () ) ; i++ ) if ( ( s.charAt ( i ) ) != ' ' ) answer += s.charAt ( i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return answer; } 
@ java.lang.Override public void run () { try { if ( ( java.lang.Math.abs ( ( ( mostRecentX ) - ( startX ) ) ) ) > ( touchSlop ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( java.lang.Math.abs ( ( ( mostRecentY ) - ( startY ) ) ) ) > ( touchSlop ) ) { return; } isLongPressing = true; listener.onLongPress ( mostRecentX, mostRecentY ) ; } 
public synchronized com.sun.messaging.jmq.jmsserver.core.Packet getPacket () { com.sun.messaging.jmq.jmsserver.core.Packet pkt = getPacketObject () ; if ( ( pkt != null ) || ( destroyed ) ) { return pkt; } if ( ! ( persist ) ) { return null; } pkt = recoverPacket () ; assert pkt != null; try { setPacketObject ( true, pkt ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return pkt; } 
@ org.junit.Before public void standUp () { loadBalancerService = mock ( org.openstack.atlas.service.domain.services.LoadBalancerService.class ) ; reverseProxyLoadBalancerService = mock ( org.openstack.atlas.api.integration.ReverseProxyLoadBalancerService.class ) ; asyncService = mock ( org.openstack.atlas.api.integration.AsyncService.class ) ; loadBalancerResource = new org.openstack.atlas.api.resources.LoadBalancerResource () ; loadBalancerResource.setId ( 1 ) ; try { loadBalancerResource.setAccountId ( 1234 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } loadBalancerResource.setLoadBalancerService ( loadBalancerService ) ; loadBalancerResource.setAsyncService ( asyncService ) ; } 
private void createActivityList () { activityList.add ( new rieger.alarmsmsapp.view.ruleactivitys.SenderSelection () ) ; activityList.add ( new rieger.alarmsmsapp.view.ruleactivitys.WordSelection () ) ; activityList.add ( new rieger.alarmsmsapp.view.ruleactivitys.SoundSelection () ) ; activityList.add ( new rieger.alarmsmsapp.view.ruleactivitys.AnswerCreation () ) ; activityList.add ( new rieger.alarmsmsapp.view.ruleactivitys.LightSettings () ) ; try { activityList.add ( new rieger.alarmsmsapp.view.ruleactivitys.TwitterPostSelection () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } activityList.add ( new rieger.alarmsmsapp.view.ruleactivitys.NavigationTargetSelection () ) ; activityList.add ( new rieger.alarmsmsapp.view.ruleactivitys.ReadingSettings () ) ; } 
public void setScreen ( View.YatzyScreen screen ) { this.setVisible ( false ) ; this.wrapper.removeAll () ; this.wrapper.add ( screen, java.awt.BorderLayout.CENTER ) ; try { this.fireActionPerformed ( new java.awt.event.ActionEvent ( this, java.awt.event.ActionEvent.ACTION_PERFORMED, "Change" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void done ( java.util.List<com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser> userList, java.lang.Exception e ) { try { if ( ( null == e ) && ( null != userList ) ) { for ( com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser user : userList ) { com.avoscloud.leanchatlib.utils.ThirdPartDataCache.getInstance () .cacheUser ( user.userId, user ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.jetbrains.annotations.Nullable public java.lang.String getCurrentElementType ( com.intellij.psi.PsiElement currentElement ) { try { while ( ( currentElement instanceof com.intellij.psi.PsiWhiteSpace ) || ( currentElement instanceof com.intellij.psi.PsiComment ) ) { currentElement = currentElement.getPrevSibling () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( currentElement != null ) { return com.perl5.lang.perl.psi.utils.PerlPsiUtil.getPerlExpressionType ( currentElement ) ; } return null; } 
public com.marcuslee.fypdemo.obj.Shot findShot ( int frame ) { try { for ( com.marcuslee.fypdemo.obj.Shot shot : com.marcuslee.fypdemo.ObjectHolder.Shots ) { if ( ( ( shot.getStartFrame () ) <= frame ) && ( ( shot.getEndFrame () ) > frame ) ) { return shot; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ cucumber.api.java.After public void teardown ( final cucumber.api.Scenario scenario ) { if ( ! ( featureState.getFailed () ) ) { au.com.agic.apptesting.steps.StepEventHandling.SCREENSHOT_UTILS.takeScreenshot ( ( " " + ( scenario.getName () ) ) , featureState ) ; } featureState.setFailed ( scenario.isFailed () ) ; final boolean clearDriver = java.lang.Boolean.parseBoolean ( au.com.agic.apptesting.steps.StepEventHandling.SYSTEM_PROPERTY_UTILS.getProperty ( Constants.NEW_BROWSER_PER_SCENARIO ) ) ; try { if ( clearDriver ) { State.THREAD_DESIRED_CAPABILITY_MAP.clearWebDriverForThread ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type, org.alien4cloud.tosca.model.definitions.PropertyDefinition entrySchema, boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition.setType ( type ) ; propertyDefinition.setRequired ( required ) ; propertyDefinition.setPassword ( false ) ; try { propertyDefinition.setEntrySchema ( entrySchema ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return propertyDefinition; } 
public static void main ( java.lang.String[] args ) throws org.newdawn.slick.SlickException { org.newdawn.slick.AppGameContainer game = new org.newdawn.slick.AppGameContainer ( new graphique.StateGame () , graphique.StateGame.width, graphique.StateGame.height, false ) ; game.setTargetFrameRate ( 60 ) ; try { game.setShowFPS ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } game.start () ; } 
@ java.lang.Override public void onReceive ( @android.support.annotation.NonNull android.content.Context context, @android.support.annotation.NonNull android.content.Intent intent ) { super.onReceive ( context, intent ) ; timber.log.Timber.d ( "Intent Received" ) ; try { if ( QuoteSyncJob.ACTION_DATA_UPDATED.equals ( intent.getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager.getInstance ( context ) ; int[] appWidgetIds = appWidgetManager.getAppWidgetIds ( new android.content.ComponentName ( context, getClass () ) ) ; appWidgetManager.notifyAppWidgetViewDataChanged ( appWidgetIds, R.id.stock_list ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void set ( java.lang.String path, java.lang.Object value, java.lang.String comment ) { try { if ( ! ( this.config.contains ( path ) ) ) { this.config.set ( ( ( ( manager.getPluginName () ) + "_COMMENT_" ) + ( comments ) ) , comment ) ; ( comments ) ++; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.config.set ( path, value ) ; } 
public com.intel.genomicsdb.GenomicsDBConf setHostFile ( java.lang.String path ) throws java.io.FileNotFoundException { try { set ( com.intel.genomicsdb.GenomicsDBConf.MPIHOSTFILE, path ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Scanner scanner = new java.util.Scanner ( new java.io.FileInputStream ( path ) ) ; while ( scanner.hasNextLine () ) { java.lang.String host = scanner.nextLine () ; hosts.add ( host ) ; } return this; } 
protected void robaRandomSleep ( int minSleepSecond, int maxSleepSecond ) { java.util.Random r = new java.util.Random () ; int sleepTime = ( minSleepSecond + ( r.nextInt ( ( maxSleepSecond - minSleepSecond ) ) ) ) * 1000; try { solo.sleep ( sleepTime ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.d ( com.crazyroba.RobaActivityInstrumentationTestCase2.TAG, ( ( "Roba random sleep " + ( sleepTime / 1000 ) ) + " s" ) ) ; } 
private org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder createIpProtocolMatch ( org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder matchBuilder, short ipProtocol ) { org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder ipMmatch = new org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder () ; if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP ) ) { ipMmatch.setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP ) ; } else if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP ) ) { ipMmatch.setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP ) ; } else if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ) { ipMmatch.setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ; } else { ipMmatch.setIpProtocol ( ipProtocol ) ; } try { matchBuilder.setIpMatch ( ipMmatch.build () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return matchBuilder; } 
public static void main ( java.lang.String[] args ) { boolean a = false; boolean b = false; boolean c = true; boolean p = ( ( ( a || b ) || c ) && ( ( ( !a ) || b ) || c ) ) && ( ( ( !a ) || ( !b ) ) || c ) ; try { java.lang.System.out.println ( p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityCreated ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super.onActivityCreated ( savedInstanceState ) ; activity = ( ( codemagnus.com.dealokav2.BaseTabActivity ) ( getActivity () ) ) ; if ( ( activity.getSwitchCompat () ) != null ) activity.getSwitchCompat () .setVisibility ( View.VISIBLE ) ; initPhoneDetails () ; try { getUserLastKnownLocation () ; } catch ( Exception ex ) { ex.printStackTrace () ; } activity.getToolBar () .setTitle ( "Tower List" ) ; } 
@ org.junit.Test public void testMock () { owo.com.androidunittest.targets.A a = org.mockito.Mockito.mock ( owo.com.androidunittest.targets.A.class ) ; org.mockito.Mockito.when ( a.publicMethod () ) .thenReturn ( "mockA" ) ; junit.framework.Assert.assertEquals ( "mockA", a.publicMethod () ) ; try { org.mockito.Mockito.verify ( a, org.mockito.Mockito.times ( 1 ) ) .publicMethod () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.mockito.Mockito.verify ( a, org.mockito.Mockito.never () ) .foo () ; } 
public void initialize ( org.apache.cordova.CordovaInterface cordova, org.apache.cordova.CordovaWebView webView ) { try { super.initialize ( cordova, webView ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final android.content.Context context = this.cordova.getActivity () .getApplicationContext () ; com.gae.scaffolder.plugin.FCMPlugin.gWebView = webView; android.util.Log.d ( com.gae.scaffolder.plugin.FCMPlugin.TAG, "==> FCMPlugin initialize" ) ; mFirebaseAnalytics = com.google.firebase.analytics.FirebaseAnalytics.getInstance ( context ) ; com.google.firebase.messaging.FirebaseMessaging.getInstance () .subscribeToTopic ( "android" ) ; com.google.firebase.messaging.FirebaseMessaging.getInstance () .subscribeToTopic ( "all" ) ; } 
@ org.junit.Test public void shouldBeListWithAllTheSameObjects () { try { game.setInitialState ( params ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } game.evolve () ; game.evolve () ; java.util.List<com.capgemini.thegameoflife.Cell> cells = game.getAliveCell () ; assertTrue ( expected.containsAll ( cells ) ) ; assertTrue ( cells.containsAll ( expected ) ) ; } 
public sun.java2d.SurfaceData replaceSurfaceData () { if ( getBounds () .isEmpty () ) { surfaceData = sun.java2d.NullSurfaceData.theInstance; return surfaceData; } sun.awt.CGraphicsConfig gc = ( ( sun.awt.CGraphicsConfig ) ( getGraphicsConfiguration () ) ) ; surfaceData = gc.createSurfaceData ( this ) ; setScale ( gc.getDevice () .getScaleFactor () ) ; try { if ( ( surfaceData ) instanceof sun.java2d.opengl.CGLSurfaceData ) { validate ( ( ( sun.java2d.opengl.CGLSurfaceData ) ( surfaceData ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return surfaceData; } 
@ org.junit.Test public void shouldResetHour () { java.util.Date date = new java.util.Date () ; java.util.Date newDate = com.ondetemjogo.util.DateUtil.resetHour ( date ) ; java.util.Calendar calendar = java.util.Calendar.getInstance () ; calendar.setTime ( newDate ) ; try { org.junit.Assert.assertEquals ( calendar.get ( java.util.Calendar.HOUR_OF_DAY ) , 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged, @org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn", defaultValue = "", required = false ) java.lang.String loggedIn ) { java.lang.System.out.println ( ( "loggedIn: " + loggedIn ) ) ; if ( ( loggedIn.isEmpty () ) || ( loggedIn.equals ( null ) ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } java.lang.System.out.println ( ( "userLogged: " + userLogged ) ) ; try { if ( ( userLogged.equals ( null ) ) || ( userLogged.isEmpty () ) ) { userLogged = loggedIn; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.springframework.web.servlet.ModelAndView ( "location", "userloggedin", userLogged ) ; } 
public synchronized void fail ( java.lang.Throwable error ) { if ( ( pixelWidth ) == 0 ) pixelWidth = 50; if ( ( pixelHeight ) == 0 ) pixelHeight = 50; try { setBitmap ( createErrorBitmap ( pixelWidth, pixelHeight ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( ( react.RPromise<playn.core.Image> ) ( state ) ) .fail ( error ) ; } 
public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { try { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip.enterMoCapData ( commandList[16], proxy, initTime, false ) ; } else { yDirRightHip.enterMoCapData ( commandList[16], proxy, initTime, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public uk.ac.starlink.ttools.plot2.layer.BinBag.Bin next () { try { if ( ( ib ) < nbin ) { assert ( index ) >= ( binIndices[ib] ) ; uk.ac.starlink.ttools.plot2.layer.BinBag.Bin bin = createBin ( index, binValues[ib] ) ; ( index ) ++; if ( ( ( ib ) == ( nbin - 1 ) ) || ( ( index ) == ( binIndices[ ( ( ib ) + 1 ) ] ) ) ) { ( ib ) ++; } return bin; } else { throw new java.util.NoSuchElementException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testSize () { Array<java.lang.Integer> list = new Array () ; java.lang.Integer[] elems = new java.lang.Integer[] { -76, 45, 66, 3, null, 54, 33 }; try { for ( int i = 0, sz = 1; i < ( elems.length ) ; i++, sz++ ) { list.add ( elems[i] ) ; org.junit.Assert.assertEquals ( list.size () , sz ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void dispatchAckSend ( org.json.JSONObject income ) throws org.json.JSONException { org.json.JSONObject data = income.getJSONObject ( "data" ) ; try { if ( ( chatListener ) != null ) { ru.mail.park.chat.models.Message message = new ru.mail.park.chat.models.Message ( data, getContext () ) ; chatListener.onAcknowledgeSendMessage ( message ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; try { if ( button != null ) { java.lang.String buttonText = button.getText () .trim () ; if ( buttonText.equals ( optionsButtonName ) ) { LoggerWrapper.myLogger.log ( java.util.logging.Level.INFO, "clicking on Options button" ) ; button.click () ; return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
protected synchronized void update () { try { xC += ( getSpeed () ) * ( java.lang.Math.cos ( getDirection () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } x = ( xC ) - ( ( simulation.Car.WIDTH ) / 2 ) ; yC += ( getSpeed () ) * ( java.lang.Math.sin ( getDirection () ) ) ; y = ( yC ) - ( ( simulation.Car.HEIGHT ) / 2 ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { if ( ! ( Editor.isScenerio () ) ) { java.lang.String file = browseFile () ; if ( file != null ) { Editor.currentFile = file; javax.swing.JOptionPane.showMessageDialog ( null, ( ( "Scenerio file '" + ( Editor.currentFile ) ) + "' is selected" ) ) ; } else { javax.swing.JOptionPane.showMessageDialog ( null, "No file selected" ) ; } } else { javax.swing.JOptionPane.showMessageDialog ( null, "Scenerio file already exists" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getNodeName ( final com.hazelcast.core.Member iMember ) { if ( iMember == null ) return "?"; try { if ( nodeUuid.equals ( iMember.getUuid () ) ) return nodeName; } catch ( Exception ex ) { ex.printStackTrace () ; } final java.lang.String name = activeNodesNamesByMemberId.get ( iMember.getUuid () ) ; if ( name != null ) return name; final com.orientechnologies.orient.core.record.impl.ODocument cfg = getNodeConfigurationByUuid ( iMember.getUuid () , true ) ; if ( cfg != null ) return cfg.field ( "name" ) ; return "ext:" + ( iMember.getUuid () ) ; } 
private void handleLogout ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response, javax.servlet.http.Cookie myCookie ) throws java.io.IOException, javax.servlet.ServletException { try { if ( myCookie != null ) { myCookie.setMaxAge ( 0 ) ; com.servlet.EnterServlet.sessionTable.remove ( com.util.SessionUtil.getSessionId ( myCookie.getValue () ) ) ; response.addCookie ( myCookie ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher ( "home.jsp" ) ; dispatcher.forward ( request, response ) ; } 
private void updateCurrentMemoryMode () { org.exbin.framework.deltahex.HexStatusApi.MemoryMode memoryMode = HexStatusApi.MemoryMode.RAM_MEMORY; if ( ( codeArea.getEditationAllowed () ) == ( org.exbin.deltahex.EditationAllowed.READ_ONLY ) ) { memoryMode = HexStatusApi.MemoryMode.READ_ONLY; } else if ( ( codeArea.getData () ) instanceof org.exbin.deltahex.delta.DeltaDocument ) { memoryMode = HexStatusApi.MemoryMode.DELTA_MODE; } try { if ( ( hexStatus ) != null ) { hexStatus.setMemoryMode ( memoryMode ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML private void handleMouseHover ( javafx.scene.input.MouseEvent event ) { selector.setVisible ( true ) ; selector.setCenterX ( event.getSceneX () ) ; selector.setCenterY ( event.getSceneY () ) ; xInput.setText ( java.lang.Integer.toString ( ( ( int ) ( event.getSceneX () ) ) ) ) ; try { yInput.setText ( java.lang.Integer.toString ( ( ( int ) ( event.getSceneY () ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( grid.getCurrPlayer () .isDone () ) selector.setVisible ( false ) ; } 
private org.h2.command.Prepared parseAnalyze () { org.h2.command.ddl.Analyze command = new org.h2.command.ddl.Analyze ( session ) ; if ( readIf ( "TABLE" ) ) { org.h2.table.Table table = readTableOrView () ; command.setTable ( table ) ; } try { if ( readIf ( "SAMPLE_SIZE" ) ) { command.setTop ( readPositiveInt () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return command; } 
@ java.lang.Override public org.nd4j.linalg.api.ndarray.INDArray scalar ( float value ) { try { if ( ( dtype ) == ( DataBuffer.Type.FLOAT ) ) return create ( new float[] { value }, new int[] { 1, 1 }, new int[] { 1, 1 }, 0 ) ; else if ( ( dtype ) == ( DataBuffer.Type.DOUBLE ) ) return scalar ( ( ( double ) ( value ) ) ) ; else return scalar ( ( ( int ) ( value ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean isCollection ( final org.eclipse.ocl.pivot.PropertyCallExp e ) { final java.lang.String s = fr.emn.atlanmod.uml.casestudy.rewrite.OCL.gen ( e.getType () ) ; try { if ( ( ( com.google.common.base.Objects.equal ( s, "Set" ) ) || ( com.google.common.base.Objects.equal ( s, "OrderedSet" ) ) ) || ( com.google.common.base.Objects.equal ( s, "Sequence" ) ) ) { return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getChanged () { java.lang.String str; try { if ( ( blocksChanged ) > 0 ) { mmdanggg2.cste.util.CSTELogger.logDebug ( ( ( blocksChanged ) + " blocks were changed." ) ) ; str = net.minecraft.client.resources.I18n.format ( "commands.cste.fill.success", blocksChanged ) ; } else { mmdanggg2.cste.util.CSTELogger.logDebug ( "No blocks changed" ) ; str = net.minecraft.client.resources.I18n.format ( "commands.cste.fill.nochange" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return str; } 
@ org.junit.Test public void shouldSucceedIfWrittenOutOfOrderWithPosition () throws java.io.IOException { int[] blockorder = getRandomPermutationOfBlockOrder () ; for ( int i = 0; i < ( blockcount ) ; i++ ) { chksumChannel.write ( buffers[blockorder[i]], ( ( blockorder[i] ) * ( blocksize ) ) ) ; } try { assertThat ( chksumChannel.getChecksum () , equalTo ( expectedChecksum ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void runAnalysis ( java.lang.String wikiLink ) { java.lang.String articleName = comphuman.task2.distanceReading.RunnerHelper.extractArticleName ( wikiLink ) ; java.lang.String linkToDiscussion = comphuman.task2.distanceReading.RunnerHelper.extractDiscussionLink ( wikiLink ) ; java.lang.String linkToHisDiscussion = comphuman.task2.distanceReading.RunnerHelper.extractHisDiscussionLink ( linkToDiscussion ) ; comphuman.task2.distanceReading.GermanWikiArticleDiscussionAnalyzer articleAna = new comphuman.task2.distanceReading.GermanWikiArticleDiscussionAnalyzer ( linkToDiscussion, articleName ) ; articleAna.runAnalyses () ; try { articleAna.visTheResults () ; } catch ( Exception ex ) { ex.printStackTrace () ; } comphuman.task2.distanceReading.GermanWikiArticleDiscussionHistoryAnalyzer hisAna = new comphuman.task2.distanceReading.GermanWikiArticleDiscussionHistoryAnalyzer ( linkToHisDiscussion, articleName ) ; } 
public void update () throws java.io.IOException { request.setCharacterEncoding ( "UTF-8" ) ; try { response.setCharacterEncoding ( "GB2312" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( versionName.equals ( updateversion ) ) { java.lang.System.out.println ( updateUrl ) ; response.getWriter () .write ( updateUrl ) ; } else { response.getWriter () .write ( updateUrl ) ; } } 
public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null; try { if ( ( null != column ) && ( ( column.getValue () ) != null ) ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) .getValue () ) ; } else { value = column.toString () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return value; } 
public void markUsed ( java.lang.String tupleId ) { int n = reservedQueue.size () ; try { while ( n > 0 ) { com.dipaan.bgcolor.Tuple tuple = reservedQueue.peek () ; if ( tuple.getId () .equals ( tupleId ) ) { reservedQueue.remove ( tuple ) ; } else if ( tuple.isExpired () ) { reservedQueue.remove ( tuple ) ; availableQueue.offer ( tuple ) ; } n--; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testFilterOperatorMoreThanOrEqualForLongAutoID () { java.util.List<siena.base.test.model.PersonLongAutoID> people = pm.createQuery ( siena.base.test.model.PersonLongAutoID.class ) .filter ( "id>=", siena.base.test.BaseAsyncTest.LongAutoID_CURIE.id ) .order ( "id" ) .fetch () ; assertNotNull ( people ) ; try { assertEquals ( 2, people.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( siena.base.test.BaseAsyncTest.LongAutoID_CURIE, people.get ( 0 ) ) ; assertEquals ( siena.base.test.BaseAsyncTest.LongAutoID_EINSTEIN, people.get ( 1 ) ) ; } 
public static void showPlayers ( final games.strategy.engine.framework.IGame game, final java.awt.Component parent ) { final games.strategy.triplea.ui.PlayersPanel panel = new games.strategy.triplea.ui.PlayersPanel ( game.getPlayerManager () , game.getData () ) ; try { javax.swing.JOptionPane.showMessageDialog ( javax.swing.JOptionPane.getFrameForComponent ( parent ) , panel, "Players", javax.swing.JOptionPane.PLAIN_MESSAGE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( final android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.variantIos: com.vanniktech.emoji.EmojiManager.install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true; case R.id.variantEmojiOne: com.vanniktech.emoji.EmojiManager.install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true; default: return super.onOptionsItemSelected ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean addEvent ( octu.core.Event evt ) { try { for ( int i = 0; i < ( events.size () ) ; i++ ) { if ( events.get ( i ) .getName () .equals ( evt.getName () ) ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } events.add ( evt ) ; return true; } 
@ org.junit.Test public void exportBasicTmx () throws java.lang.Exception { final com.vistatec.ocelot.segment.model.OcelotSegment testSeg = new com.vistatec.ocelot.segment.model.SimpleSegment.Builder () .segmentNumber ( 1 ) .source ( "plain text" ) .target ( "target plain text" ) .build () ; setupTmxWriter ( testSeg ) ; tmxWriter.setOpenFileLangs ( new com.vistatec.ocelot.events.OpenFileEvent ( "export_tmx_test", LocaleId.ENGLISH.getLanguage () , LocaleId.FRENCH.getLanguage () ) ) ; tmxWriter.exportTmx ( testFile ) ; try { com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter.assertExportedTmxFilesEqual ( testFile, com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter.class.getResourceAsStream ( "export_tmx_test_goal.tmx" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void sendOrderedBroadcast ( final android.content.Intent intent, final java.lang.String receiverPermission, final android.content.BroadcastReceiver resultReceiver, final android.os.Handler scheduler, final int initialCode, final java.lang.String initialData, final android.os.Bundle initialExtras ) { try { mCondom.proceedBroadcast ( intent, new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @java.lang.Override public void run () { com.oasisfeng.condom.CondomContext.super.sendOrderedBroadcast ( intent, receiverPermission, resultReceiver, scheduler, initialCode, initialData, initialExtras ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initBugly () { com.tencent.bugly.beta.Beta.initDelay = 5 * 1000; com.tencent.bugly.beta.Beta.enableHotfix = false; Beta.canShowUpgradeActs.add ( com.thirtydegreesray.openhub.ui.activity.LoginActivity.class ) ; Beta.canShowUpgradeActs.add ( com.thirtydegreesray.openhub.ui.activity.MainActivity.class ) ; Beta.canShowUpgradeActs.add ( com.thirtydegreesray.openhub.ui.activity.AboutActivity.class ) ; com.tencent.bugly.beta.Beta.upgradeListener = com.thirtydegreesray.openhub.ui.widget.UpgradeDialog.INSTANCE; com.tencent.bugly.crashreport.CrashReport.UserStrategy strategy = new com.tencent.bugly.crashreport.CrashReport.UserStrategy ( getApplicationContext () ) ; try { strategy.setAppVersion ( BuildConfig.VERSION_NAME ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } strategy.setAppReportDelay ( ( 10 * 1000 ) ) ; com.tencent.bugly.Bugly.init ( getApplicationContext () , AppConfig.BUGLY_APPID, BuildConfig.DEBUG ) ; com.tencent.bugly.crashreport.CrashReport.setIsDevelopmentDevice ( getApplicationContext () , BuildConfig.DEBUG ) ; } 
@ java.lang.Override public void unpackFromFrontOfList ( java.util.List<org.msgpack.type.Value> l ) { int check_ntype = l.remove ( 0 ) .asIntegerValue () .getInt () ; if ( check_ntype != ( ntype ) ) { android.util.Log.e ( com.mooshim.mooshimeter.common.ConfigTree.TAG, "WRONG NODE TYPE" ) ; } try { path = l.remove ( 0 ) .toString () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<org.eyeseetea.malariacare.data.database.model.Question> getQuestions () { try { if ( ( this.questions ) == null ) { this.questions = new com.raizlabs.android.dbflow.sql.language.Select () .from ( org.eyeseetea.malariacare.data.database.model.Question.class ) .where ( Question_Table.id_header.eq ( this.getId_header () ) ) .orderBy ( Question_Table.order_pos, true ) .queryList () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return questions; } 
public static java.lang.CharSequence _text ( java.lang.CharSequence icon, java.lang.CharSequence text ) { final java.lang.StringBuilder s = new java.lang.StringBuilder () ; try { if ( ( icon != null ) && ( ( icon.length () ) > 0 ) ) { s.append ( icon ) .append ( " " ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return s.append ( text ) ; } 
private edu.up.cs301.blokus.Blok copySelectedBoardBlok ( edu.up.cs301.blokus.Blok origSelectedBoardBlok ) { if ( origSelectedBoardBlok == null ) { return null; } int row; int col; int color; row = origSelectedBoardBlok.getRow () ; try { col = origSelectedBoardBlok.getColumn () ; } catch ( Exception ex ) { ex.printStackTrace () ; } color = origSelectedBoardBlok.getColor () ; edu.up.cs301.blokus.Blok newBlok = new edu.up.cs301.blokus.Blok ( row, col, color ) ; return newBlok; } 
static java.util.Collection<java.lang.String> findIssueKeys ( java.lang.String input ) { java.util.Collection<java.lang.String> ids = new java.util.ArrayList<> () ; java.util.regex.Matcher m = io.jenkins.blueocean.blueocean_github_pipeline.GithubIssue.PATTERN.matcher ( input ) ; try { while ( m.find () ) { if ( ( m.groupCount () ) >= 1 ) { java.lang.String issue = m.group ( 1 ) ; ids.add ( issue.substring ( 1, issue.length () ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ids; } 
private void pollGraphFromStack ( boolean updateDb ) { final java.util.Deque<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph> stack = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack.get () ; try { stack.remove ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final com.tinkerpop.blueprints.impls.orient.OrientBaseGraph prevGraph = stack.peek () ; if ( prevGraph != null ) { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph.set ( prevGraph ) ; prevGraph.makeActive () ; } else { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph.set ( null ) ; if ( updateDb ) ODatabaseRecordThreadLocal.INSTANCE.set ( null ) ; } } 
public static void main ( java.lang.String[] args ) { int secretNumber = ( ( int ) ( 1 + ( ( java.lang.Math.random () ) * 10 ) ) ) ; int attemps = 3; java.lang.System.out.println ( "Hi! I chose a number from 0 to 10 for you! Try to guess" ) ; try { java.lang.System.out.println ( "You have" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; } 
@ java.lang.Override public void run () { if ( ( md ) == null ) return; android.graphics.Bitmap bitmap = loadArtwork ( artworkUrl, artworkLocal ) ; if ( ( bitmap != null ) && ( ( md ) != null ) ) { md.putBitmap ( MediaMetadataCompat.METADATA_KEY_ART, bitmap ) ; nb.setLargeIcon ( bitmap ) ; } try { session.setMetadata ( md.build () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } notification.show ( nb, isPlaying ) ; artworkThread = null; } 
public boolean isWallValid ( holdup.Player player, int xPos, int yPos, holdup.Orientation orientation ) { try { if ( ! ( isExistingWallPlaced ( xPos, yPos, orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false; } else { return ! ( isWallBlockingPlayerPath ( player, xPos, yPos, orientation ) ) ; } } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void remove ( double v ) { try { if ( ( root ) != null ) { if ( ( root.getValue () ) == v ) { root.removeNode ( v, null ) ; root = null; } else { root.removeNode ( v, null ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( size ) - 1 ) < 0 ) { size = 0; } else { size -= 1; } } 
public boolean deleteFromUndecVertices ( core.MyVertex v ) { try { if ( ! ( this.UndecLabels.contains ( v ) ) ) { throw new java.lang.IllegalArgumentException ( "This vertex is not in the undec hashset" ) ; } else { NotLabelledVertices.add ( v ) ; v.setLabel ( "NONE" ) ; UndecLabels.remove ( v ) ; NotLabelledVertices.remove ( v ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public static int calculateMax ( java.lang.String[] args ) { int toReturn = -1; try { if ( ( args.length ) > 0 ) { toReturn = ( ( int ) ( java.lang.Integer.parseInt ( args[0] ) ) ) ; if ( toReturn < 1 ) { throw new java.lang.IllegalArgumentException () ; } else { } } else { throw new java.lang.IllegalArgumentException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return toReturn; } 
@ org.junit.Test public void testPerformPlacePitfall () { try { nl.tudelft.contextproject.util.webinterface.ActionUtil.perform ( Action.PLACEPITFALL, 0, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } verify ( nl.tudelft.contextproject.Main.getInstance () , times ( 1 ) ) .getCurrentGame () ; verify ( mockedGame, times ( 1 ) ) .addEntity ( any ( nl.tudelft.contextproject.model.entities.Pitfall.class ) ) ; } 
private void LeaveGameMouseClicked ( java.awt.event.MouseEvent evt ) { comm.msgSender ( ( "E" + ( ( char ) ( ( Pexeso_client.CurrentGame.getID () ) + '0' ) ) ) ) ; Pexeso_client.CurrentGame = null; comm.setExit ( true ) ; LobbyStatus.setText ( "You left your current game" ) ; LobbyStatus.setVisible ( true ) ; try { panel2.setVisible ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } panel3.setVisible ( false ) ; } 
public void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton.setId ( "sideToolbarButton" ) ; try { boatInsuranceButton.setId ( "sideToolbarButton" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } homeInsuranceButton.setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton.setId ( "sideToolbarButton" ) ; travelInsuranceButton.setId ( "sideToolbarButton" ) ; button.setId ( "sideToolbarButtonSelected" ) ; } 
public int fitnessValue () { State s = new State () ; try { while ( ! ( s.hasLost () ) ) { s.makeMove ( this.pickMove ( s, s.legalMoves () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return s.getRowsCleared () ; } 
protected java.lang.Object visitContainer ( net.objectof.actof.porter.visitor.IPorterContext context, net.objectof.model.Id<?> parentId ) { net.objectof.model.Resource<net.objectof.aggr.Aggregate<java.lang.Object, java.lang.Object>> toParent = getToParent ( parentId ) ; net.objectof.actof.porter.visitor.IPorterContext ported = transform ( context ) ; if ( ported.isDropped () ) { return null; } try { if ( toParent != null ) { toParent.value () .set ( net.objectof.actof.porter.IPorterUtil.unqualify ( ported.getKey () , toParent ) , ported.getValue () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return context.getValue () ; } 
private org.openbaton.nfvo.core.api.VNFCInstance getVNFCI ( org.openbaton.nfvo.core.api.VirtualDeploymentUnit virtualDeploymentUnit, java.lang.String idVNFCI ) throws org.openbaton.nfvo.core.api.NotFoundException { try { for ( org.openbaton.nfvo.core.api.VNFCInstance vnfcInstance : virtualDeploymentUnit.getVnfc_instance () ) if ( ( idVNFCI == null ) || ( idVNFCI.equals ( vnfcInstance.getId () ) ) ) return vnfcInstance; } catch ( Exception ex ) { ex.printStackTrace () ; } throw new org.openbaton.nfvo.core.api.NotFoundException ( ( ( "VNFCInstance with id " + idVNFCI ) + " was not found" ) ) ; } 
private cluedo.Hud.STATUS rollAndMove ( cluedo.Player player, cluedo.Hud.STATUS status, java.util.Scanner sc ) { java.lang.System.out.println ( "/n" ) ; status = cluedo.Hud.STATUS.MOVE_PIECE; displayBoard ( player, status ) ; movesRemaining = rollDice () ; try { java.lang.System.out.println ( ( "\nYou rolled a " + ( movesRemaining ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } while ( ( movesRemaining ) != 0 ) { movePiece ( player, status, sc ) ; ( movesRemaining ) --; displayBoard ( player, status ) ; } return status; } 
public com.tetris.saar.tetris.Blocks moveLeft ( com.tetris.saar.tetris.Blocks block, int[][] board ) { com.tetris.saar.tetris.Blocks temp = block.getNextBlock () ; try { temp.setPlace ( block.getPlace () [0], block.getPlace () [1] ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setEmptySpaceBlockPos ( temp, board ) ; return temp; } 
public static int getColumnsNumberFromDimension ( java.lang.String dimension ) { try { if ( org.apache.commons.lang.StringUtils.isEmpty ( dimension ) ) { return 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String[] parts = org.apache.commons.lang.StringUtils.split ( dimension, ':' ) ; if ( ( parts.length ) < 2 ) { return 0; } java.lang.String secondPart = parts[1]; return ( org.talend.dataprep.schema.xls.XlsUtils.getColumnsNumberLastCell ( secondPart ) ) + 1; } 
@ org.junit.Test public void testSaveEncounter () { edu.psu.sweng500.emrms.model.HPatient hPatient = new edu.psu.sweng500.emrms.model.HPatient () ; edu.psu.sweng500.emrms.model.HEncounter hEncounter = new edu.psu.sweng500.emrms.model.HEncounter () ; try { hEncounter.setUserID ( "admin" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } hEncounter.setCreationDateTime ( "2017-09-23 21:55:00" ) ; hEncounter.setEncStartDateTime ( "2017-09-14 11:55:00" ) ; hEncounter.setEncStatus ( 1 ) ; hEncounter.setEncLocationName ( "Exton Clinic" ) ; hEncounter.setEncounterType ( "OP" ) ; hEncounter.setEncounterID ( "Acc1001" ) ; hEncounter.setPatient_ObjectID ( 3 ) ; hEncounter.setAttendingPhysician_ObjectID ( 1 ) ; hEncounter.setBed_ObjectID ( 1 ) ; } 
@ java.lang.Override public void onBindViewHolder ( final com.cv4j.app.adapter.GridViewFilterAdapter.ViewHolder holder, int position ) { java.lang.String filterName = mList.get ( position ) ; try { if ( position == 0 ) { holder.image.setImageBitmap ( mBitmap ) ; } else { if ( com.safframwork.tony.common.utils.Preconditions.isNotBlank ( filterName ) ) { com.cv4j.core.filters.CommonFilter filter = ( ( com.cv4j.core.filters.CommonFilter ) ( getFilter ( filterName ) ) ) ; com.cv4j.rxjava.RxImageData.bitmap ( mBitmap ) .addFilter ( filter ) .into ( holder.image ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } holder.text.setText ( filterName ) ; } 
private static com.whippy.tas.premier.beans.Stats setTacklingStat ( java.util.List<com.whippy.tas.premier.beans.Position> positions, java.util.Random rand, com.whippy.tas.premier.beans.Stats stats ) { try { if ( positions.contains ( Position.DEFENSE ) ) { stats.setTackling ( com.whippy.tas.premier.util.Utils.getGaussian ( 80, 10 ) ) ; } else if ( positions.contains ( Position.MIDFIELD ) ) { stats.setTackling ( com.whippy.tas.premier.util.Utils.getGaussian ( 60, 20 ) ) ; } else { stats.setTackling ( com.whippy.tas.premier.util.Utils.getGaussian ( 40, 40 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return stats; } 
public void purchaseMultiple ( int index, int quantity, ver0.PlayerActor character ) { ver0.Item[] itemSet = ver0.Item.getAllItems () ; try { if ( character.canBuyItems ( index, quantity ) ) { if ( character.buyItems ( index, quantity ) ) { java.lang.System.out.println ( ( ( ( "Purchase successful! You have bought" + quantity ) + " " ) + ( itemSet[index].getName () ) ) ) ; this.m_inventory[index] -= quantity; } } else { java.lang.System.out.println ( "Sorry, you don't have enough money!" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int evaluate () { try { if ( ( ( first ) != null ) && ( ( last ) != null ) ) { return ( first.evaluate () ) - ( last.evaluate () ) ; } else { throw new java.lang.IllegalStateException ( "NO!" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML private void homeScreen ( javafx.event.ActionEvent event ) { javafx.scene.control.Alert confirm = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.CONFIRMATION, "Are you sure you want to disconnect ? You won't be able to rejoin the game.", javafx.scene.control.ButtonType.YES, javafx.scene.control.ButtonType.NO ) ; try { confirm.setHeaderText ( "Disconnect" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Optional<javafx.scene.control.ButtonType> result = confirm.showAndWait () ; if ( ( result.isPresent () ) && ( result.get () .equals ( javafx.scene.control.ButtonType.YES ) ) ) { if ( client.isHostClient () ) { client.disconnect () ; tdb.TheDrawingBoard.disconnectMultiplayerServer () ; } else { client.disconnect () ; } } } 
public static void showDialog ( android.content.Context context, int title, int message, int positiveMsg, int negativeMsg, android.content.DialogInterface.OnClickListener okListener ) { try { com.shuruta.sergey.ftpclient.ui.DialogFactory.showDialog ( context, context.getString ( title ) , context.getString ( message ) , positiveMsg, negativeMsg, okListener, new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog, int id ) { dialog.dismiss () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initProgram () { vertexHandle = android.opengl.GLES20.glGetAttribLocation ( mProgram, "aPosition" ) ; textureHandle = android.opengl.GLES20.glGetAttribLocation ( mProgram, "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20.glGetUniformLocation ( mProgram, "uMVPMatrix" ) ; try { sTextureHandle = android.opengl.GLES20.glGetUniformLocation ( mProgram, "sTexture" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } uMVPMatrixHandle = android.opengl.GLES20.glGetUniformLocation ( mProgram, "uMVPMatrix" ) ; } 
public static tw.kewang.cwb.pretty.FutureWeatherByTown getFutureWeatherByTown ( tw.kewang.cwb.Geocode geocode, float afterHours ) { java.util.Date date = new java.util.Date ( ( ( java.lang.System.currentTimeMillis () ) + ( ( long ) ( ( tw.kewang.cwb.utils.Constants.ONE_HOUR ) * afterHours ) ) ) ) ; try { tw.kewang.cwb.Cwb.LOG.debug ( "getFutureWeatherByTown: {}, {}", geocode, date.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return tw.kewang.cwb.Cwb.getFutureWeatherByTown ( geocode, date ) ; } 
public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label, int length ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; try { labeledTextBox.add ( l ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } javax.swing.JTextField text = new javax.swing.JTextField ( length ) ; labeledTextBox.add ( text ) ; return labeledTextBox; } 
@ java.lang.Override public java.lang.Boolean apply ( final com.intellij.openapi.roots.SourceFolder it ) { boolean _and = false; boolean _isTestSource = it.isTestSource () ; try { if ( !_isTestSource ) { _and = false; } else { com.intellij.openapi.vfs.VirtualFile _file = it.getFile () ; boolean _exists = false; if ( _file != null ) { _exists = _file.exists () ; } _and = _exists; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.lang.Boolean.valueOf ( _and ) ; } 
@ java.lang.Override public void run () { try { com.yc.english.base.helper.TipsHelper.tips ( mContext, "修改成功" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.yc.english.main.model.domain.UserInfo userInfo = com.yc.english.main.hepler.UserInfoHelper.getUserInfo () ; userInfo.setAvatar ( resultInfo.data.getAvatar () ) ; com.yc.english.main.hepler.UserInfoHelper.saveUserInfo ( userInfo ) ; com.hwangjr.rxbus.RxBus.get () .post ( Constant.USER_INFO, userInfo ) ; com.yc.english.base.utils.RongIMUtil.refreshUserInfo () ; } 
protected final java.net.Socket getRootSocket ( java.lang.Object target ) { try { if ( target instanceof com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) ._$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) ._$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger.debug ( "Invalid target object. Need field accessor ( {} ) .", com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor.class.getName () ) ; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { java.util.ArrayList<java.lang.String> oldReviews = new java.util.ArrayList<> () ; try { for ( com.google.firebase.database.DataSnapshot child : dataSnapshot.getChildren () ) { java.lang.String oldSearchTerm = child.getValue () .toString () ; oldReviews.add ( oldSearchTerm ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.reviewID = ( profile ) + ( oldReviews.size () ) ; } 
private boolean maskHasPortGroup ( com.emc.storageos.db.client.model.ExportMask mask, java.net.URI portGroup ) { boolean result = false; try { if ( ( portGroup == null ) || ( ( portGroup != null ) && ( portGroup.equals ( mask.getPortGroup () ) ) ) ) { result = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public boolean equals ( final java.lang.Object o ) { if ( o == ( this ) ) return true; try { if ( ! ( super.equals ( o ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } final com.helger.photon.core.ajax.response.AjaxHtmlResponse rhs = ( ( com.helger.photon.core.ajax.response.AjaxHtmlResponse ) ( o ) ) ; return ( com.helger.commons.equals.EqualsHelper.equals ( m_sErrorMessage, rhs.m_sErrorMessage ) ) && ( m_aSuccessValue.equals ( rhs.m_aSuccessValue ) ) ; } 
private void parseArrayMetadata ( com.fasterxml.jackson.core.JsonParser jp ) throws java.io.IOException { com.fasterxml.jackson.core.JsonToken value = jp.nextToken () ; try { while ( value != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { if ( value == ( com.fasterxml.jackson.core.JsonToken.START_OBJECT ) ) { parseObjectMetadata ( jp ) ; } else if ( value == ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) { parseArrayMetadata ( jp ) ; } value = jp.nextToken () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setEnabled ( boolean enabled ) { super.setEnabled ( enabled ) ; try { if ( ( isProgress ) || ( ( mSuccessAnimationState ) >= ( com.miruker.fabprogress.Fab.SUCCESS_ANIMATION.ON ) ) ) { setAlpha ( 1.0F ) ; } else { setAlpha ( ( enabled ? 1.0F : com.miruker.fabprogress.Fab.FAB_DISABLED_ALPHA ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int getPoints () { int points = 1; try { for ( java.util.Iterator<entities.Square> i = getSquaresInvolved () .iterator () ; i.hasNext () ; ) { entities.Block b = i.next () .getBlock () ; if ( b != null ) points *= b.getMultiplier () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return points; } 
private java.lang.String buildContainerId () { java.lang.String id; java.lang.String selectElementId = selectElement.getId () ; try { if ( ( selectElementId != null ) && ( ( selectElementId.length () ) > 0 ) ) { id = com.arcbees.chosen.client.ChosenImpl.containerIdRegExp.replace ( selectElementId, "_" ) ; } else { id = generateContainerId () ; selectElement.setId ( id ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } id += "_chzn"; return id; } 
@ java.lang.Override public void onDismiss ( com.example.reativos.oscar.AddParam myDialogFragment ) { java.lang.String command_type = dataStore.getString ( "type" ) ; int command_param = dataStore.getInt ( "param" ) ; try { if ( ( command_type != null ) && ( ! ( command_type.isEmpty () ) ) ) { com.example.reativos.oscar.Command newCommand = new com.example.reativos.oscar.Command ( command_type, command_param ) ; commandLists.get ( currentTabTag ) .add ( newCommand ) ; adapters.get ( currentTabTag ) .notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addSharedLink ( models.SharedLink link, boolean newActivity ) { try { if ( ! ( this.sharedLinks.contains ( link ) ) ) { link.member = this; link.ordernum = this.sharedLinks.size () ; this.sharedLinks.add ( link ) ; if ( newActivity && ( ( this.id ) != null ) ) { link.save () ; new models.SharedLinkActivity ( link ) .save () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Boolean getunicodePUA () { try { for ( int i = 0; i < ( toUnicode.length () ) ; ++i ) { char unicode = this.toUnicode.charAt ( i ) ; if ( ( unicode >= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_BEGINNING ) ) && ( unicode <= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_ENDING ) ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void handlePortState () { try { switch ( portState ) { case CLOSED: if ( open () ) { portState = org.openhab.binding.dsmr.internal.DSMRPort.PortState.AUTO_DETECT; autoDetectTS = java.lang.System.currentTimeMillis () ; } break; case AUTO_DETECT: if ( ( ( java.lang.System.currentTimeMillis () ) - ( autoDetectTS ) ) > ( autoDetectTimeoutMSec ) ) { switchPortSpeed () ; close () ; if ( open () ) { portState = org.openhab.binding.dsmr.internal.DSMRPort.PortState.AUTO_DETECT; autoDetectTS = java.lang.System.currentTimeMillis () ; } } break; case OPENED: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onItemSelected ( android.widget.AdapterView<?> Spinner_D2_Adapter_View, android.view.View v, int position, long row ) { Spinner_D2_Choice = Spinner_D2_Adapter_View.getItemAtPosition ( position ) .toString () ; if ( ( ( ( ( Spinner_A1_Choice ) != null ) && ( ( Spinner_A2_Choice ) != null ) ) && ( ( Spinner_D1_Choice ) != null ) ) && ( ( Spinner_D2_Choice ) != null ) ) { setPaths ( Spinner_A1_Choice, Spinner_A2_Choice, Spinner_D1_Choice, Spinner_D2_Choice ) ; onDraw ( tempCanvas ) ; } try { findViewById ( R.id.map ) .invalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void remove ( java.lang.String key ) { com.cdoframework.cdolib.data.cdo.Field objExt = hmItem.remove ( key ) ; try { if ( ( ( objExt != null ) && ( ( objExt.getType () .getDataType () ) == ( com.cdoframework.cdolib.base.DataType.FILE_TYPE ) ) ) && ( ! ( key.contains ( "." ) ) ) ) { ( fileCount ) --; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String username = ( ( android.widget.EditText ) ( findViewById ( R.id.username ) ) ) .getText () .toString () ; android.content.Intent mIntent; try { switch ( v.getId () ) { case R.id.loginButton: mIntent = new android.content.Intent ( this, com.myos.myos.Salon.class ) ; mIntent.putExtra ( "username", username ) ; startActivity ( mIntent ) ; break; case R.id.signupButton: break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { db.execSQL ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableName ) ) + " ( " ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColValue ) ) + " VARCHAR ( 255 ) , " ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColType ) ) + " VARCHAR ( 255 ) PRIMARY KEY UNIQUE ) " ) ) ; try { db.execSQL ( ( "CREATE TABLE `blacklist` ( " + ( ( ( ( ( ( ( ( " `id` INTEGER PRIMARY KEY AUTOINCREMENT," + " `scientificName` varchar ( 255 ) NOT NULL," ) + " `navn` varchar ( 255 ) NOT NULL," ) + " `risiko` varchar ( 255 ) NOT NULL," ) + " `taxonID` int ( 11 ) NOT NULL," ) + " `canEat` tinyint ( 1 ) NOT NULL DEFAULT '0'," ) + " `family` varchar ( 255 ) NOT NULL," ) + " `image` int ( 11 ) NOT NULL" ) + " ) " ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startAlarmManager () { android.util.Log.i ( com.example.sifat.gobar.LOG_TAG_TAXIPOSITIONSERVICE, "startAlarmManager" ) ; android.content.Context context = getBaseContext () ; try { alarmManager = ( ( android.app.AlarmManager ) ( context.getSystemService ( Context.ALARM_SERVICE ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } taxiDetailIntent = new android.content.Intent ( context, com.example.sifat.Receiver.TaxiDetailReceiver.class ) ; pendingIntent = android.app.PendingIntent.getBroadcast ( context, 0, taxiDetailIntent, 0 ) ; alarmManager.setRepeating ( AlarmManager.ELAPSED_REALTIME_WAKEUP, android.os.SystemClock.elapsedRealtime () , 10000, pendingIntent ) ; } 
public static java.lang.reflect.Field getFiledNameByMethod ( java.lang.Class clazz, java.lang.reflect.Method method ) { java.lang.reflect.Field[] fields = indi.yume.tools.autosharedpref.util.ReflectUtil.getDeclaredFields ( clazz ) ; java.lang.reflect.Field field = null; try { for ( java.lang.reflect.Field f : fields ) if ( ( f.getAnnotation ( indi.yume.tools.autosharedpref.Ignore.class ) ) == null ) if ( indi.yume.tools.autosharedpref.util.ReflectUtil.toSetter ( f.getName () ) .equals ( method.getName () ) ) field = f; } catch ( Exception ex ) { ex.printStackTrace () ; } return field; } 
@ java.lang.Override public void reduce ( org.apache.hadoop.io.Text key, java.lang.Iterable<org.apache.hadoop.io.BooleanWritable> values, com.capstone.maven.mostontimeairlines.Context context ) { summaryMap.putIfAbsent ( key.toString () , new com.capstone.maven.mostontimeairlines.OntimeSummaryWritable () ) ; com.capstone.maven.mostontimeairlines.OntimeSummaryWritable summary = summaryMap.get ( key.toString () ) ; try { for ( org.apache.hadoop.io.BooleanWritable val : values ) { if ( val.get () ) { summary.incrementOntime () ; } else { summary.incrementNotOntime () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } summaryMap.put ( key.toString () , summary ) ; } 
private void startMain () { try { if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.JELLY_BEAN ) ) && ( ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.CAMERA ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) || ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.VIBRATE ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) ) { requestPermission ( new java.lang.String[] { Manifest.permission.CAMERA, Manifest.permission.VIBRATE }, com.fosung.barcodescanner.InitActivity.REQUEST_STORAGE_READ_ACCESS_PERMISSION ) ; } else { android.content.Intent intent = new android.content.Intent ( this, com.fosung.barcodescanner.QrCodeScanActivity.class ) ; startActivity ( intent ) ; this.finish () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void goToMain () { zj.remote.baselibrary.util.PreferenceUtils.putString ( Config.KEY_USER, mLoginUserEdt.getText () .toString () , this ) ; zj.remote.baselibrary.util.PreferenceUtils.putBoolean ( Config.KEY_ISLOGIN, true, this ) ; zj.remote.baselibrary.util.PreferenceUtils.putString ( Config.KEY_PASS, mLoginPassEdt.getText () .toString () , this ) ; com.kerchin.yellownote.data.bean.PrimaryData.getInstance ( getHelper () , new com.kerchin.yellownote.data.bean.PrimaryData.DoAfterWithEx () { @java.lang.Override public void justNowWithEx ( java.lang.Exception e ) { dismissDialog () ; } } ) ; try { handler.post ( runnableForData ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static synchronized void search ( java.lang.String username, java.lang.String tu ) { if ( ! ( pset.three.Server.user_orders.containsKey ( username ) ) ) { pset.three.Server.respond ( tu, java.lang.String.format ( "No order found for %s", username ) ) ; return; } java.lang.String response = ""; for ( java.lang.String order : pset.three.Server.user_orders.get ( username ) ) { response += java.lang.String.format ( "%s\n", order ) ; } try { pset.three.Server.respond ( tu, response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void connect () throws java.lang.InterruptedException { final io.netty.channel.ChannelFuture future; try { synchronized ( lock ) { connectFuture = bootstrap.connect ( host, port ) ; future = connectFuture; } } catch ( Exception ex ) { ex.printStackTrace () ; } future.sync () ; synchronized ( lock ) { while ( ( ( root ) == null ) && ( future.channel () .isOpen () ) ) { lock.wait () ; } } } 
public void enqueue ( Item item ) { try { if ( ( size ) == ( arr.length ) ) { resize ( ( 2 * ( arr.length ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } arr[ ( ( last ) ++ ) ] = item; ( size ) ++; if ( ( last ) == ( arr.length ) ) last = 0; } 
public int makeTurn () { int winAns = 9; if ( ( ( BotParser.mRound ) == 1 ) || ( ( BotParser.mRound ) == 2 ) ) { return 3; } try { if ( ( BotParser.mRound ) >= 3 ) { winAns = BotParser.mField.checkWin ( BotParser.mBotId ) ; if ( winAns != 9 ) return winAns; winAns = BotParser.mField.checkWin ( BotParser.mBotIdE ) ; if ( winAns != 9 ) return winAns; } } catch ( Exception ex ) { ex.printStackTrace () ; } int move = new java.util.Random () .nextInt ( 7 ) ; return move; } 
@ java.lang.Override public java.lang.Long save ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; long id = db.insert ( BirdCountContract.BirdCount.TABLE_NAME, null, converter.extractBirdCountTableData ( instance ) ) ; try { for ( android.content.ContentValues values : converter.extractObservationTableData ( instance ) ) { db.insert ( BirdCountContract.ObservedSpecies.TABLE_NAME, null, values ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return id; } 
public void draw () { background ( 240 ) ; dropdownMObjectAlphaFloat = DropdownDrawFloat ( dropdownMObjectAlphaFloat, ( ( width ) - ( offsetInt ) ) , offsetInt, buttonOpenCloseMuseumObject, "Exhibition" ) ; try { dropdownPlayerAlphaFloat = DropdownDrawFloat ( dropdownPlayerAlphaFloat, offsetInt, offsetInt, buttonOpenClosePlayerObject, "Visitor" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public datastructures.AttributeJoint getAttributesDFJoint () { datastructures.AttributeJoint attrJoint = new datastructures.AttributeJoint () ; try { for ( dependency.ADependency obj : this.df ) { attrJoint.addAttributes ( obj.getAntecedent () ) ; attrJoint.addAttributes ( obj.getConsequent () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return attrJoint; } 
private java.lang.String[] solveConfirmationRedeemMCoupon ( java.lang.String message ) { org.json.JSONObject json = new org.json.JSONObject ( message ) ; java.lang.String[] params = new java.lang.String[4]; params[2] = json.getString ( "signaturemerchant" ) ; try { params[3] = json.getString ( "signatureissuer" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return params; } 
public void init5 () { try { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x++ ) { body.add ( new java.awt.Point ( x, ( -3 ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } body.add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( -2 ) ) ) ; } 
@ java.lang.Override public akayerov.getsnils.IpraFile getNextDir () { try { while ( ( idx ) < ( fList.length ) ) { java.lang.String sogrn = null; if ( ! ( fList[idx].isFile () ) ) { sogrn = fList[idx].getName () ; java.lang.String namefile = sogrn; return new akayerov.getsnils.IpraFile ( fList[ ( ( idx ) ++ ) ].getAbsolutePath () , sogrn, namefile ) ; } ( idx ) ++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.SuppressWarnings ( value = "restriction" ) public static boolean isEclipseDebug () { boolean debuggerEnabled = false; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil.getBundle ( org.talend.commons.runtime.debug.TalendDebugHandler.class ) .getBundleContext () ; if ( bundleContext == null ) { return false; } org.osgi.framework.ServiceReference<org.eclipse.osgi.service.debug.DebugOptions> debugOptSR = bundleContext.getServiceReference ( org.eclipse.osgi.service.debug.DebugOptions.class ) ; try { if ( debugOptSR != null ) { org.eclipse.osgi.service.debug.DebugOptions debugOpt = bundleContext.getService ( debugOptSR ) ; debuggerEnabled = debugOpt.isDebugEnabled () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return debuggerEnabled; } 
public java.lang.String getMdScript () { try { if ( "".equals ( this.mdScript ) ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String function = ( ( ( "function " + ( this.getName () ) ) + " ( " ) + ( this.params ) ) + " ) {\n"; function = function + ( this.mdScript ) ; function = function + "\n}"; return function; } 
@ org.junit.Test public void testListNames_emptymetaStoreFactory () throws org.pentaho.metastore.api.exceptions.MetaStoreException { org.pentaho.metastore.api.IMetaStore metaStore = mock ( org.pentaho.metastore.api.IMetaStore.class ) ; java.util.List<java.lang.String> expectedNames = new java.util.ArrayList<> () ; verify ( metaStoreFactory, never () ) .getElementNames () ; try { assertEquals ( expectedNames, namedClusterManager.listNames ( metaStore ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public final org.jivesoftware.smack.util.XmlStringBuilder toXML () { org.jivesoftware.smack.util.XmlStringBuilder xml = new org.jivesoftware.smack.util.XmlStringBuilder ( this ) ; try { addExtraAttributes ( xml ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( candidates.isEmpty () ) && ( ( info ) == null ) ) { xml.closeEmptyElement () ; } else { xml.rightAngleBracket () ; xml.append ( candidates ) ; xml.optElement ( info ) ; xml.closeElement ( this ) ; } return xml; } 
public static boolean add ( tds.Task task ) { boolean isAdded = true; try { for ( java.util.TreeSet<tds.Task> tree : tds.TaskTree.taskTrees ) { if ( ! ( tree.add ( task ) ) ) { isAdded = false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( isAdded ) { tds.TaskTree.increaseTaskListSize () ; tds.TaskTree.pushAddToStorage ( task ) ; } return isAdded; } 
private void OnChatSendTextMessageResult ( int eGroupType, long nGroupID, long nFromUserID, long nToUserID, java.lang.String sSeqID, int nResult ) { try { synchronized ( callbacks ) { if ( ( callbacks.size () ) > 0 ) { for ( java.lang.ref.WeakReference<com.V2.jni.callback.ChatRequestCallback> wf : callbacks ) { if ( ( wf.get () ) == null ) { continue; } wf.get () .OnSendTextResultCallback ( eGroupType, nGroupID, nFromUserID, nToUserID, sSeqID, nResult ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public rx.Observable<java.util.List<java.lang.String>> get ( java.lang.String query ) { try { if ( android.text.TextUtils.isEmpty ( query ) ) { return rx.Observable.just ( new java.util.ArrayList<> () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return rx.Observable.just ( rejasupotaro.mds.data.models.Pokemons.allPokemonNames ( query ) ) ; } 
private org.esbtools.message.admin.model.MetadataField searchField ( org.esbtools.message.admin.model.MetadataField tree, org.esbtools.message.admin.model.MetadataField field ) { org.esbtools.message.admin.model.MetadataField result = null; try { if ( ( tree != null ) && ( field != null ) ) { if ( tree.getId () .equals ( field.getId () ) ) { return tree; } else { for ( org.esbtools.message.admin.model.MetadataField child : tree.getChildren () ) { org.esbtools.message.admin.model.MetadataField dfsResult = searchField ( child, field ) ; if ( dfsResult != null ) { return dfsResult; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { try { switch ( msg.what ) { case com.kame.tafhd.MainActivity.TEST_MSG: new com.kame.tafhd.Publisher () .publish ( ( ( java.lang.String ) ( msg.obj ) ) ) ; break; case com.kame.tafhd.MainActivity.UNRELEVANT_MSG: new com.kame.tafhd.Publisher () .publish ( "I am in the unrelevent parts." ) ; break; case com.kame.tafhd.MainActivity.ANOTHER: new com.kame.tafhd.Publisher () .publish ( ( ( java.lang.String ) ( msg.obj ) ) ) ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement, java.lang.String parameter ) { try { if ( configurationElement != null ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement.getChildren ( parameter ) ) { if ( ( configurationElementChild.getAttribute ( parameter ) ) != null ) { return configurationElementChild.getAttribute ( parameter ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public android.content.SharedPreferences storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager.getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs.edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson.toJson ( scores ) ; try { editor.putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING, scoreJson ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } editor.apply () ; return prefs; } 
public java.util.List<com.gradians.prepwell.db.Skill> getSkills () { try { if ( mSkillIds.isEmpty () ) return null; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.ArrayList<java.lang.String> stringIds = new java.util.ArrayList<java.lang.String> () ; for ( int j : mSkillIds ) stringIds.add ( java.lang.Integer.toString ( j ) ) ; return new co.uk.rushorm.core.RushSearch () .whereIN ( "dbId", stringIds ) .find ( com.gradians.prepwell.db.Skill.class ) ; } 
@ javax.annotation.PostConstruct public void init () { allKeszKisz = keszKiszFacade.findAll () ; allKeszitmeny = keszitmenyFacade.findAll () ; try { allKiszereles = kiszerelesFacade.findAll () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( allKeszitmeny.isEmpty () ) ) { keszitmenyID = allKeszitmeny.get ( 0 ) .getId () ; } if ( ! ( allKiszereles.isEmpty () ) ) { kiszerelesID = allKiszereles.get ( 0 ) .getId () ; } } 
@ java.lang.Override public boolean verify ( org.spongepowered.api.entity.living.Living living ) { if ( ! ( living instanceof org.spongepowered.api.entity.ArmorEquipable ) ) { return false; } java.util.Optional<net.minecraft.item.ItemStack> optHeld = ( ( org.spongepowered.api.entity.ArmorEquipable ) ( living ) ) .getItemInHand () ; try { if ( ( optHeld.isPresent () ) && ( ( optHeld.get () .getItem () ) == ( com.skelril.skree.content.registry.item.CustomItemTypes.TWO_TAILED_SWORD ) ) ) { event.setBaseDamage ( 0 ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void test4 () throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException, com.silicolife.textmining.processes.ir.patentpipeline.core.searchmodule.WrongIRPatentIDRecoverConfigurationException { java.lang.String identifier = "fucoxanthin"; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum inputType = main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum.compoundName; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IIRPubChemPatentIDRetrievalConfiguration configuration = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IRPubChemPatentIDRetrievalConfigurationImpl ( inputType ) ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval pugRestSearch = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval ( configuration ) ; com.silicolife.textmining.processes.ir.patentpipeline.configuration.IIRPatentPipelineSearchConfiguration query = new com.silicolife.textmining.processes.ir.patentpipeline.configuration.IRPatentPipelineSearchConfigurationImpl ( identifier ) ; java.util.Set<java.lang.String> patentIds = pugRestSearch.retrievalPatentIds ( query ) ; java.lang.System.out.println ( patentIds.size () ) ; try { for ( java.lang.String patentID : patentIds ) java.lang.System.out.println ( patentID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Deprecated private static int buildMaxIndexPages ( int allPageNo, java.lang.Integer maxIndexPages ) { try { if ( ( com.feilong.core.util.Validator.isNullOrEmpty ( maxIndexPages ) ) || ( maxIndexPages <= 0 ) ) { if ( allPageNo > 1000 ) { return 6; } else if ( allPageNo > 100 ) { return 8; } else { return 10; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return maxIndexPages; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/filter", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public final void getGrants ( @org.springframework.web.bind.annotation.RequestBody final java.lang.String json, final javax.servlet.http.HttpServletResponse response ) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Object> parameters = new com.fasterxml.jackson.databind.ObjectMapper () .readValue ( json, new com.fasterxml.jackson.core.type.TypeReference<java.util.Map<java.lang.String, java.lang.Object>> () { } ) ; try { response.getWriter () .write ( new com.fasterxml.jackson.databind.ObjectMapper () .writeValueAsString ( grantsService.getGrants ( parameters ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; try { for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn.getRdns () ) { if ( ( path.length () ) > 0 ) { path.append ( '/' ) ; } path.append ( org.apache.jackrabbit.util.Text.escapeIllegalJcrChars ( rnd.toString () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return path.toString () ; } 
private java.util.List getCentroids () { java.util.List centroids = new java.util.ArrayList ( NUM_CLUSTERS ) ; try { for ( java.lang.Object cluster : clusters ) { Point aux = ( ( Cluster ) ( cluster ) ) .getCentroid () ; Point point = new Point ( aux.getX () , aux.getY () ) ; centroids.add ( point ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return centroids; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit", method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model model, @org.springframework.web.bind.annotation.ModelAttribute ( value = "userStub" ) @javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub, org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit"; java.lang.String nextPage = "redirect:/messages/result"; if ( errors.hasErrors () ) { return currentPage; } com.oreva.simpleweb.mvc.entities.User user = userService.convertStubToEntity ( userStub ) ; try { userService.save ( user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return nextPage; } 
@ java.lang.Override public void messageArrived ( java.lang.String topic, org.eclipse.paho.client.mqttv3.MqttMessage message ) { if ( ( ( mTopicCallbacks ) == null ) || ( mTopicCallbacks.isEmpty () ) ) return; try { for ( io.relayr.websocket.WebSocketCallback socketCallback : mTopicCallbacks.get ( topic ) ) socketCallback.successCallback ( message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void fatal ( java.lang.String location, java.lang.String error, java.lang.Throwable cause ) { java.lang.System.err.println ( ( ( location + ": " ) + error ) ) ; try { if ( cause != null ) cause.printStackTrace () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( sutilities.Debugger.logger_ ) != null ) sutilities.Debugger.logger_.log ( "SEVERE", location, error, cause, true ) ; } 
private void resolvePropertyAccessor ( @org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.BodiesResolveContext c, @org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.ObservableBindingTrace fieldAccessTrackingTrace, @org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.PropertyDescriptor propertyDescriptor, @org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.JetPropertyAccessor accessor, @org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.PropertyAccessorDescriptor accessorDescriptor ) { org.jetbrains.kotlin.resolve.scopes.LexicalScope accessorScope = makeScopeForPropertyAccessor ( c, accessor, propertyDescriptor ) ; try { org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.forceResolveAllContents ( accessorDescriptor.getAnnotations () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } resolveFunctionBody ( c.getOuterDataFlowInfo () , fieldAccessTrackingTrace, accessor, accessorDescriptor, accessorScope ) ; } 
private void connectRight ( int i, int j ) { try { if ( j < ( n ) ) { int right = getPosition ( i, ( j + 1 ) ) ; if ( isOpen ( right ) ) { grid.union ( right, getPosition ( i, j ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( bHandshakeResponse ) { if ( ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_RESPONSE; com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler.sendMessage ( msg1 ) ; } } else { if ( ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_NON_RESPONSE; com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler.sendMessage ( msg1 ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.count ) ++; } 
void enterInputValue ( final org.openqa.selenium.WebElement inputElement, final java.lang.String value ) throws java.lang.Exception { waitForElementVisible ( inputElement ) ; final java.lang.String inputID = inputElement.getAttribute ( "id" ) ; summonTooltip ( inputID ) ; showInputField ( inputID ) ; try { for ( int i = 0; i < ( value.length () ) ; i++ ) { inputElement.sendKeys ( java.lang.Character.toString ( value.charAt ( i ) ) ) ; waitFor ( 150L ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } closeTooltip () ; } 
@ javax.annotation.Nonnull @java.lang.Override public java.util.Set<net.minecraft.util.math.BlockPos> generateTrunk ( net.minecraft.world.World world, java.util.Random rand, forestry.arboriculture.worldgen.TreeBlockTypeLog wood, net.minecraft.util.math.BlockPos startPos ) { try { forestry.core.worldgen.WorldGenHelper.generateTreeTrunk ( world, rand, wood, startPos, height, girth, 0, 0, null, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return forestry.core.worldgen.WorldGenHelper.generateBranches ( world, rand, wood, startPos.add ( 0, ( ( height ) - 1 ) , 0 ) , girth, 0.15F, 0.25F, ( ( height ) / 4 ) , 1, 0.25F ) ; } 
@ org.testng.annotations.Test ( enabled = true ) public void pingResponseDataPartShouldContainPingForConfigurationResponse () throws java.lang.Exception { context.start () ; mockTestShs2Riv.expectedMinimumMessageCount ( 1 ) ; try { mockTestShs2Riv.expectedMessagesMatches ( org.apache.camel.builder.xml.XPathBuilder.xpath ( "/ping:PingForConfigurationResponse/ping:pingDateTime" ) .namespace ( "ping", "urn:riv:itintegration:monitoring:PingForConfigurationResponder:1" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; template () .requestBody ( "direct:testShs2riv", testMessage ) ; mockTestShs2Riv.assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS.toMillis ( 10 ) ) ; } 
@ java.lang.Override public int compare ( android.location.Location t1, android.location.Location t2 ) { try { if ( ( t1.getTime () ) > ( t2.getTime () ) ) { return -1; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( t2.getTime () ) > ( t1.getTime () ) ) { return 1; } return 0; } 
public static play.mvc.Result postPage ( java.lang.String postName ) { java.util.List<controllers.Post> posts = controllers.Post.getPostsWithPostName ( postName ) ; try { controllers.Application.currentPost = posts.get ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<controllers.Comment> comments = controllers.Comment.findComments ( postName ) ; return ok ( postPage.render ( controllers.Application.currentPost, comments, controllers.Application.currentTeam.getTeamName () , controllers.Application.getUnreadNum () ) ) ; } 
@ java.lang.Override public org.jowidgets.api.model.item.IMenuModel editMenu ( final org.jowidgets.cap.ui.api.widgets.IBeanTable<BEAN_TYPE> table, final int columnIndex, final org.jowidgets.api.model.item.IMenuModel menuModel ) { try { if ( ( model.getUpdaterService () ) == null ) { return null; } else if ( hasDefaultEditAction ) { menuModel.addAction ( 0, editAction ) ; return menuModel; } else { return menuModel; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void importConcept_shouldRetireConcept () throws java.lang.Exception { org.openmrs.module.openconceptlab.client.OclConcept oclConcept = newOclConcept () ; org.junit.Assert.assertFalse ( oclConcept.isRetired () ) ; try { importer.importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , update, oclConcept ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } oclConcept.setRetired ( true ) ; importer.importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , update, oclConcept ) ; org.openmrs.Concept concept = assertImported ( oclConcept ) ; org.junit.Assert.assertTrue ( concept.isRetired () ) ; } 
protected void setResultActivityError ( java.lang.String srvStr, java.lang.Exception e ) { try { resultActivityError = ( ( e.getClass () .getName () ) + " : Cannot connect to " ) + srvStr; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String msg = e.getMessage () ; if ( msg != null ) resultActivityError = ( ( resultActivityError ) + " : " ) + ( e.getMessage () ) ; } 
@ java.lang.Override public char getGrid ( int x, int y ) throws java.io.IOException { try { outToServer.writeBytes ( ( ( ( ( "GRID " + x ) + " " ) + y ) + "\n" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String response = inFromServer.readLine () ; java.lang.System.out.print ( ( response + " " ) ) ; return response.charAt ( 0 ) ; } 
public edu.aku.hassannaqvi.mapps_form2.LHWsContract Sync ( org.json.JSONObject jsonObject ) throws org.json.JSONException { this.lhwId = jsonObject.getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_LHWID ) ; this.lhwName = jsonObject.getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_LHWNAME ) ; try { this.clusterName = jsonObject.getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_CLUSTERNAME ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.clusterCode = jsonObject.getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_CLUSTERCODE ) ; return this; } 
protected boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames.peek () ) ; try { stackFrames.push ( blockStackFrame ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } boolean ok = checkStatements ( node.getChildNodes () ) ; stackFrames.pop () ; return ok; } 
@ org.junit.Test public void map_should_map_numbers_to_itself_on_providing_ItselfMapper () { java.util.List<java.lang.Integer> numbers = new java.util.ArrayList<java.lang.Integer> () ; numbers.add ( 1 ) ; try { numbers.add ( 2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } numbers.add ( 3 ) ; ListMapper mapper = new IdentityMapper () ; java.util.List<java.lang.Integer> result = CollectionUtils.map ( numbers, mapper ) ; assertEquals ( numbers, result ) ; } 
private java.util.List<com.example.johannes.colorpicker.Task> addTaskToList () { java.util.List<com.example.johannes.colorpicker.Task> tasks = new java.util.ArrayList<> () ; try { for ( int i = 0; i < ( colors.size () ) ; i++ ) { com.example.johannes.colorpicker.Task task = new com.example.johannes.colorpicker.Task () ; task.setOtsikko ( colors.get ( i ) .getHex () ) ; tasks.add ( task ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return tasks; } 
public synchronized void advance ( long duration, java.util.concurrent.TimeUnit unit ) { if ( duration <= 0 ) throw new java.lang.IllegalArgumentException ( ( "Duration must be positive; was " + duration ) ) ; try { this.nanos += unit.toNanos ( duration ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( ; ; ) { co.paralleluniverse.vtime.ManualClock.Scheduled s = waiters.peek () ; if ( ( s == null ) || ( ( s.deadline ) > ( nanos ) ) ) break; waiters.poll () .wakeup () ; } } 
public void factorial () { java.lang.Double num1 = ( ( java.math.BigDecimal ) ( numbers.pop () ) ) .doubleValue () ; try { java.lang.System.out.println ( num1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } num1 = CalcModel.fact ( num1 ) ; java.lang.System.out.println ( num1 ) ; addToExpressionList ( "!" ) ; updateRounding ( num1.toString () ) ; java.math.BigDecimal b = java.math.BigDecimal.valueOf ( num1 ) ; numbers.push ( b ) ; calculatedValues.push ( b ) ; } 
@ java.lang.Override protected com.example.petr.myapplication.FilterResults performFiltering ( java.lang.CharSequence charSequence ) { com.example.petr.myapplication.FilterResults filterResults = new com.example.petr.myapplication.FilterResults () ; try { if ( charSequence != null ) { java.util.List<java.lang.String> results = findSuggestions ( charSequence.toString () ) ; filterResults.values = results; filterResults.count = results.size () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return filterResults; } 
@ java.lang.Override public void deleteStudy ( java.lang.String username, java.lang.String studyUID ) throws java.lang.Exception { edu.stanford.epad.epadws.models.Study study = getStudy ( studyUID ) ; if ( study == null ) return; new edu.stanford.epad.epadws.models.ProjectToSubjectToStudy () .deleteObjects ( ( "study_id=" + ( study.getId () ) ) ) ; new edu.stanford.epad.epadws.models.EpadFile () .deleteObjects ( ( "study_id=" + ( study.getId () ) ) ) ; try { study.delete () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( final java.lang.String[] args ) throws java.lang.InterruptedException { final long runtime = ( ( args.length ) > 0 ) ? java.lang.Long.parseLong ( args[0] ) : com.awesome.BaseExamplePeriod.DEFAULT_RUN_TIME_MSEC; com.awesome.ex1_2.Ex1_2 ex = new com.awesome.ex1_2.Ex1_2 ( runtime ) ; ex.run () ; try { ex.printResults () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; try { if ( ( data != null ) && ( ! ( data.getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) .equals ( "-1" ) ) ) ) { ean.setText ( data.getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment f = new com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment () ; SignInActivity.fNum = getActivity () .getSupportFragmentManager () .getBackStackEntryCount () ; android.support.v4.app.FragmentTransaction ft = getActivity () .getSupportFragmentManager () .beginTransaction () ; ft.replace ( R.id.container, f ) ; ft.addToBackStack ( ( "" + ( SignInActivity.fNum ) ) ) ; try { ft.commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void refresh ( org.openhab.binding.antiferencematrix.internal.model.OutputPortDetails outputPortDetails ) { updateState ( new org.eclipse.smarthome.core.thing.ChannelUID ( getThing () .getUID () , org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.PORT_STATUS_MESSAGE_CHANNEL ) , new org.eclipse.smarthome.core.library.types.StringType ( outputPortDetails.getStatusMessage () ) ) ; org.eclipse.smarthome.core.library.types.OnOffType power; try { if ( ( outputPortDetails.getSinkPowerStatus () ) > 0 ) { power = org.eclipse.smarthome.core.library.types.OnOffType.ON; } else { power = org.eclipse.smarthome.core.library.types.OnOffType.OFF; } } catch ( Exception ex ) { ex.printStackTrace () ; } updateState ( new org.eclipse.smarthome.core.thing.ChannelUID ( getThing () .getUID () , org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.POWER_CHANNEL ) , power ) ; updateStatusIfRequired ( ThingStatus.ONLINE ) ; } 
public void queryPOIListUpdate () { org.walkersguide.utils.POIPreset preset = settingsManager.getPOIPreset ( settingsManager.getPresetIdInRouterFragment () ) ; if ( ( ( ( currentLocation ) == null ) || ( ( currentCompassValue ) < 0 ) ) || ( preset == null ) ) { return; } boolean isInsidePublicTransport = false; if ( ( numberOfHighSpeeds ) > 0 ) isInsidePublicTransport = true; try { poiManager.updatePOIList ( preset.getId () , preset.getRange () , currentLocation, currentCompassValue, "", isInsidePublicTransport ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void itemStateChanged ( java.awt.event.ItemEvent ie ) { try { switch ( ie.getStateChange () ) { case 1: emailInputField.setEnabled ( true ) ; useEmail = true; break; case 2: emailInputField.setEnabled ( false ) ; useEmail = false; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void killDepletedAgents () { try { if ( ( agents.size () ) > 0 ) { for ( Agents.Agent agent : agents ) { if ( ( agent.food ) <= 0 ) { GameLogic.Position deathPlace = agent.position; agents.remove ( agent ) ; tiles[deathPlace.x][deathPlace.y].agents.remove ( agent ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void checkJoin ( java.lang.String id, java.lang.String password, java.lang.String checkPassword ) { if ( password.equals ( checkPassword ) ) { com.project.snake.database.SnakeDTO data = new com.project.snake.database.SnakeDTO ( "join", id, password, 0, 0, 0, 0 ) ; data = network.sendData ( data ) ; java.lang.System.out.println ( data.getStatus () ) ; if ( data != null ) { view_ctr.joinView ( data.getStatus () ) ; return; } } try { view_ctr.joinView ( "joinno" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.ArrayList<frogger.ObstacleRow<frogger.Car>> initializeCarRows () { java.util.ArrayList<frogger.ObstacleRow<frogger.Car>> newCars = new java.util.ArrayList<> () ; frogger.ObstacleRow<frogger.Car> car1 = new frogger.ObstacleRow ( ( -75 ) , 150, 500, 50, 2, 500, new java.util.ArrayList<> () , 2, 3, java.awt.Color.BLACK ) ; try { newCars.add ( car1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return newCars; } 
public void computeDemoRectangle ( float viewWidth, float viewHeight ) { try { if ( ( ( demoData ) != null ) && ( ( demoData.size () ) == 0 ) ) { float centerX = viewWidth / 2; float centerY = viewHeight / 2; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder.getDemoRectangle ( centerX, centerY, deltaX, deltaY ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.nio.file.FileVisitResult visitFile ( java.nio.file.Path file, java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.lang.String path_temp = file.toString () ; final java.lang.String path_name = omnikryptec.util.AdvancedFile.getName ( path_temp ) ; try { if ( ( ( advancedFileFilter == null ) || ( advancedFileFilter.accept ( ME, path_name ) ) ) && ( recursiv || ( file.getParent () .equals ( myPathTest ) ) ) ) { files.add ( new omnikryptec.util.AdvancedFile ( true, ME, path_name ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.nio.file.FileVisitResult.CONTINUE; } 
@ java.lang.Override public void onDataFetchComplete ( java.lang.Throwable throwable, java.lang.String parser ) { try { if ( parser.equals ( AppState.MOD_NEWS ) ) { if ( ( ! ( this.isDetached () ) ) && ( this.isVisible () ) ) { this.loadPages () ; } com.untappedkegg.rally.data.DbUpdated.open () ; com.untappedkegg.rally.data.DbUpdated.updated_insert ( parser ) ; com.untappedkegg.rally.data.DbUpdated.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getFinalValue ( java.lang.String newVal, java.lang.String oldVal ) { if ( newVal == null ) return null; if ( oldVal == null ) return newVal; try { if ( newVal.equals ( oldVal ) ) { return null; } else { return newVal; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public double getMinY () { double minY = points.get ( 0 ) .y; try { for ( int i = 1; i < ( points.size () ) ; i++ ) { double pY = points.get ( i ) .y; if ( pY < minY ) { minY = pY; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return minY; } 
@ java.lang.Override public void stop () { try { if ( isStarted.compareAndSet ( true, false ) ) { super.stop () ; java.util.concurrent.ScheduledExecutorService service = this.syncService.getAndSet ( newSyncService () ) ; service.shutdown () ; com.cisco.oss.foundation.directory.lookup.CachedDirectoryLookupService.LOGGER.info ( "Cache sync Service is shutdown" ) ; getCache () .clear () ; getMetadataKeyCache () .clear () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setDimensions () { try { if ( ( java.lang.Double.toString ( value ) .length () ) < 15 ) { width = java.lang.Double.toString ( value ) .length () ; height = 1; } else { width = 15; height = ( ( java.lang.Double.toString ( value ) .length () ) / ( width ) ) + 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onRefresh () { try { if ( SimpleOperations.INSTANCE.isNetworkAvailable ( getApplicationContext () ) ) { swipeRefreshLayout.setRefreshing ( true ) ; new com.raccoonapps.pricemanager.app.client.task.ProductsUpdateTask ( null, productsFile, storeFile, false, getApplicationContext () ) .execute () ; } else { swipeRefreshLayout.setRefreshing ( false ) ; android.widget.Toast.makeText ( this, "No WiFi connection available", Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onMessageReceived ( @android.support.annotation.NonNull com.criptext.comunication.MOKMessage message ) { com.criptext.monkeychatandroid.models.MessageItem newItem = processNewMessage ( message ) ; boolean isMyOwnMsg = ! ( newItem.isIncomingMessage () ) ; try { updateConversation ( newItem.getConversationId () , com.criptext.monkeychatandroid.models.DatabaseHandler.getSecondaryTextByMessageType ( newItem, false ) , ( isMyOwnMsg ? MonkeyConversation.ConversationStatus.deliveredMessage : MonkeyConversation.ConversationStatus.receivedMessage ) , ( isMyOwnMsg ? 0 : 1 ) , message.getDatetimeorder () , 0L ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.jomm.terroir.business.model.AbstractUser update ( com.jomm.terroir.business.model.AbstractUser user ) throws com.jomm.terroir.util.InvalidEntityException, java.lang.NullPointerException { try { if ( user == null ) { throw new java.lang.NullPointerException () ; } else if ( ( user.getId () ) == null ) { throw new com.jomm.terroir.util.InvalidEntityException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return userDao.update ( user ) ; } 
public static java.util.List<cascading.tuple.TupleEntry> getAllTupleEntries ( cascading.tap.Tap<org.apache.hadoop.mapred.JobConf, ?, ?> t ) throws java.io.IOException { cascading.tuple.TupleEntryIterator iter = t.openForRead ( com.liveramp.cascading_ext.CascadingUtil.get () .getFlowProcess () ) ; java.util.List<cascading.tuple.TupleEntry> tuples = new java.util.ArrayList<cascading.tuple.TupleEntry> () ; try { while ( iter.hasNext () ) { tuples.add ( new cascading.tuple.TupleEntry ( iter.next () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return tuples; } 
@ org.junit.Test public void editRecipe9 () { coffeeMaker.addRecipe ( coffee ) ; edu.pjatk.inn.coffeemaker.impl.Recipe newMocha = new edu.pjatk.inn.coffeemaker.impl.Recipe () ; newMocha.setName ( "Mocha" ) ; newMocha.setPrice ( 50 ) ; newMocha.setAmtCoffee ( "a" ) ; try { org.junit.Assert.assertFalse ( coffeeMaker.editRecipe ( coffee, newMocha ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getTransitTitle ( org.opentripplanner.api.model.Leg leg ) { java.lang.String[] possibleTitles = new java.lang.String[] { leg.routeShortName, leg.route, leg.routeId }; try { for ( int i = 0; i < ( possibleTitles.length ) ; i++ ) { if ( ! ( android.text.TextUtils.isEmpty ( possibleTitles[i] ) ) ) { return possibleTitles[i]; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void applyTo ( double[] xs, int offset, int length, mikera.vectorz.AVector ys ) { try { for ( int i = 0; i < length; i++ ) { xs[ ( offset + i ) ] = ( ( java.lang.Number ) ( fn.invoke ( xs[ ( offset + i ) ], ys.unsafeGet ( i ) ) ) ) .doubleValue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.concurrent.Future<com.sun.jersey.api.client.ClientResponse> write ( java.lang.String path, hsyndicate.rest.datatypes.FileDescriptor fi, long offset, int len, byte[] buffer ) throws java.io.IOException { hsyndicate.rest.common.WebParamBuilder builder = new hsyndicate.rest.common.WebParamBuilder ( path ) ; try { builder.addParam ( getAPI ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } builder.addParam ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_FD, fi.getFd () ) ; builder.addParam ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_OFFSET, offset ) ; builder.addParam ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_LENGTH, len ) ; return this.client.postAsync ( builder.build () , buffer ) ; } 
private static int checkSum ( java.lang.String zip ) { int checkDigit = 0; try { for ( int i = 0; i < ( zip.length () ) ; i++ ) { checkDigit += java.lang.Integer.parseInt ( ( "" + ( zip.charAt ( i ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } checkDigit = checkDigit % 10; return checkDigit; } 
public java.util.ArrayList pendingBids () { java.util.ArrayList<com.ismailmare.warondemand.WarItem> itemsBeingBidOn = new java.util.ArrayList<> () ; try { for ( int i = 0; i < ( inventory.size () ) ; i++ ) { if ( ( inventory.get ( i ) .getStatus () ) == 1 ) { itemsBeingBidOn.add ( inventory.get ( i ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return itemsBeingBidOn; } 
@ java.lang.Override public void run () { try { synchronized ( this.plugin.playersToCheck ) { for ( org.bukkit.entity.Player player : this.plugin.playersToCheck ) { if ( ! ( this.plugin.checkWorld ( player.getWorld () .getName () ) ) ) { player.sendMessage ( ( "This world is currently restricted.\n" + ( DimRestrictor.plugin.info ( player.getWorld () .getName () ) ) ) ) ; net.kaikk.mc.DimRestrictor.DimRestrictor.teleportPlayer ( player, player.getLocation () ) ; } this.plugin.playersToCheck.remove ( player ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear () { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.truncateToDays ( com.cronutils.model.time.ZonedDateTime.now () ) ; int dayOfYear = now.getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14; com.cronutils.model.time.ZonedDateTime expected = now.plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime.forCron ( parser.parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; try { assertEquals ( expected, executionTime.nextExecution ( now ) .get () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setForeground ( java.awt.Color color ) { try { if ( ( foreground ) == null ) { super.setForeground ( color ) ; if ( ( module ) != null ) for ( java.awt.Component c : getComponents () ) { c.setForeground ( color ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int getColumn () { int x; java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; try { while ( true ) { java.lang.System.out.print ( "Please enter the column number ( 1-10 ) :" ) ; x = scanner.nextInt () ; if ( ( x >= 1 ) & ( x <= 10 ) ) return x - 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.Long fetchSearchKeyId ( java.lang.String suggestedField ) { javax.persistence.Query query = mgr.createQuery ( "select f from MetadataEntity f where f.value = :value" ) ; query.setParameter ( "value", suggestedField ) ; java.util.List<org.esbtools.message.admin.common.orm.MetadataEntity> queryResult = ( ( java.util.List<org.esbtools.message.admin.common.orm.MetadataEntity> ) ( query.getResultList () ) ) ; try { if ( ( queryResult != null ) && ( ! ( queryResult.isEmpty () ) ) ) { return queryResult.get ( 0 ) .getId () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private static java.lang.String _getParentMessageIdFromSubject ( javax.mail.Message message ) throws java.lang.Exception { if ( ( message.getSubject () ) == null ) { return null; } java.lang.String parentMessageId = null; java.lang.String subject = message.getSubject () ; int pos = subject.lastIndexOf ( CharPool.LESS_THAN ) ; try { if ( pos != ( -1 ) ) { parentMessageId = subject.substring ( pos ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return parentMessageId; } 
@ java.lang.Override public java.util.LinkedList<com.compomics.util.experiment.identification.matches.SpectrumMatch> getAllSpectrumMatches ( com.compomics.util.waiting.WaitingHandler waitingHandler, com.compomics.util.experiment.identification.identification_parameters.SearchParameters searchParameters, com.compomics.util.preferences.SequenceMatchingPreferences sequenceMatchingPreferences, boolean expandAaCombinations ) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.IllegalArgumentException, java.lang.InterruptedException, java.sql.SQLException, javax.xml.bind.JAXBException, org.xmlpull.v1.XmlPullParserException { try { if ( ( spectrumMatches ) == null ) { parseFile ( waitingHandler, expandAaCombinations, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return spectrumMatches; } 
private void setPlaceGuess ( java.lang.String placeGuess ) { try { if ( placeGuess != null ) { placeGuess = placeGuess.trim () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( placeGuess != null ) && ( ( placeGuess.length () ) > 0 ) ) { mLocationGuess.setText ( placeGuess ) ; mObservation.place_guess = placeGuess; } else { mLocationGuess.setText ( R.string.set_location ) ; mObservation.place_guess = null; } } 
public boolean isHelpValid ( java.lang.String[] arguments ) { try { if ( ( arguments.length ) == 0 ) { return true; } else if ( ( arguments.length ) == 1 ) { return commandList_.getHelpArgumentList () .contains ( arguments[0] ) ; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String setFakeHash () { try { if ( ( this.hash.length () ) == 0 ) { this.hash = this.pack.getId () ; if ( ( this.hash.length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this.hash += " "; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return this.hash.trim () ; } 
public void addMeal ( ru.javawebinar.topjava.model.Meal m ) { try { if ( ru.javawebinar.topjava.DAO.MealDao.mealInMemory.containsKey ( m.getId () ) ) { ru.javawebinar.topjava.DAO.MealDao.mealInMemory.put ( m.getId () , m ) ; } else { m.setId ( getNewId () ) ; ru.javawebinar.topjava.DAO.MealDao.mealInMemory.put ( m.getId () , m ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { while ( ( hitQueue.size () ) > 0 ) { org.bukkit.event.entity.EntityDamageByEntityEvent e = hitQueue.remove () ; ( ( org.bukkit.entity.Damageable ) ( e.getEntity () ) ) .damage ( e.getDamage () , e.getDamager () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static JyNI.PyObject PyImport_AddModule ( java.lang.String name ) { java.lang.String nm = name.intern () ; JyNI.PySystemState pss = JyNI.Py.getSystemState () ; JyNI.PyObject er = pss.modules.__finditem__ ( nm ) ; try { if ( er != null ) return er; else { er = new JyNI.PyModule ( nm, new JyNI.PyNativeRefHoldingStringMap () ) ; pss.modules.__setitem__ ( nm, er ) ; return er; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.atlasapi.equiv.results.scores.Score score ( java.util.List<java.lang.Integer> subjSeriesSizes, org.atlasapi.media.entity.Container cand, org.atlasapi.equiv.results.description.ResultDescription desc ) { try { if ( ! ( cand instanceof org.atlasapi.media.entity.Brand ) ) { desc.appendText ( "%s: not Brand -> %.2f", cand, mismatchScore.asDouble () ) ; return mismatchScore; } } catch ( Exception ex ) { ex.printStackTrace () ; } return score ( subjSeriesSizes, ( ( org.atlasapi.media.entity.Brand ) ( cand ) ) , desc ) ; } 
private org.eclipse.jface.viewers.StyledString getStyledString ( com.boothen.jsonedit.outline.NodeType type, java.lang.String key, java.lang.String value ) { java.lang.String fgColor = type.getForegroundColor () ; java.lang.String bkColor = type.getBackgroundColor () ; org.eclipse.jface.viewers.StyledString text = new org.eclipse.jface.viewers.StyledString () ; try { if ( key != null ) { text.append ( key ) ; text.append ( ": " ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } text.append ( value, org.eclipse.jface.viewers.StyledString.createColorRegistryStyler ( fgColor, bkColor ) ) ; return text; } 
public static java.util.Calendar parseDateTime ( java.lang.String dateTimeString ) throws java.text.ParseException { try { helper.CalendarHelper.FORMAT_DATE_TIME.setLenient ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dateTimeString = dateTimeString.trim () ; java.util.Calendar datetime = java.util.Calendar.getInstance () ; datetime.setTime ( helper.CalendarHelper.FORMAT_DATE_TIME.parse ( dateTimeString ) ) ; if ( ! ( helper.CalendarHelper.getDateTimeString ( datetime ) .toLowerCase () .equals ( dateTimeString.toLowerCase () ) ) ) { throw new java.text.ParseException ( dateTimeString, 0 ) ; } return datetime; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { final android.view.View view = inflater.inflate ( R.layout.movie_detail_view, container, false ) ; mUnbinder = butterknife.ButterKnife.bind ( this, view ) ; try { if ( ( getArguments () ) != null ) { android.os.Bundle bundle = getArguments () ; mMovieId = bundle.getInt ( MovieViewHolderPortrait.MOVIEID_KEY, ( -1 ) ) ; timber.log.Timber.d ( "movieId: %d", mMovieId ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
private wyal.lang.Formula extractDeclarationInvariant ( wyal.util.Declaration.Named decl, wyal.util.Tuple<wyal.util.Expr> arguments ) { try { if ( decl instanceof wyal.util.Declaration.Named.Type ) { wyal.util.Declaration.Named.Type td = ( ( wyal.util.Declaration.Named.Type ) ( decl ) ) ; return expandTypeInvariant ( td, arguments.getOperand ( 0 ) ) ; } else if ( decl instanceof wyal.util.Declaration.Named.Macro ) { wyal.util.Declaration.Named.Macro md = ( ( wyal.util.Declaration.Named.Macro ) ( decl ) ) ; return expandMacroBody ( md, arguments.getOperands () ) ; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( digitsim.DigitSimController.isLocked () ) { return; } Gestures.NodeGestures.draggedAnchorPoint = true; try { aP.setCoords ( toolbox.GenFunctions.getXYAdaptGrid ( new general.Vector2i ( ( ( int ) ( event.getX () ) ) , ( ( int ) ( event.getY () ) ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } c.drawDirectPreLine () ; } 
@ org.junit.Test public void layoutAndModeSet () { org.sejda.sambox.pdmodel.PDDocument doc = new org.sejda.sambox.pdmodel.PDDocument () ; doc.getDocumentCatalog () .setPageLayout ( PageLayout.TWO_COLUMN_RIGHT ) ; doc.getDocumentCatalog () .setPageMode ( PageMode.USE_OUTLINES ) ; org.sejda.impl.sambox.component.PDDocumentHandler victim = new org.sejda.impl.sambox.component.PDDocumentHandler () ; victim.initialiseBasedOn ( doc ) ; assertEquals ( PageLayout.TWO_COLUMN_RIGHT, victim.getUnderlyingPDDocument () .getDocumentCatalog () .getPageLayout () ) ; try { assertEquals ( PageMode.USE_OUTLINES, victim.getUnderlyingPDDocument () .getDocumentCatalog () .getPageMode () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void render ( float delta ) { clearingScreen () ; viewportRender () ; stage.act ( Gdx.graphics.getDeltaTime () ) ; try { stage.draw () ; } catch ( Exception ex ) { ex.printStackTrace () ; } game.batch.begin () ; game.batch.draw ( sprite_title, 0, 0 ) ; game.batch.end () ; } 
public static int maxInBounds ( int[] A, int lowerBound, int upperBound ) { int max = 0; int[] bounds = new int[] { lowerBound, upperBound }; try { for ( int i = MyMath.min ( bounds ) ; i < ( ( MyMath.max ( bounds ) ) + 1 ) ; i++ ) { max = java.lang.Math.max ( A[i], max ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return max; } 
private void exportSubmission () { java.lang.String tableId = tableIds[tableSpin.getSelectedItemPosition () ]; org.opendatakit.tables.utils.ImportExportDialog.newInstance ( ImportExportDialog.EXPORT_IN_PROGRESS_DIALOG, this ) ; org.opendatakit.tables.tasks.ExportTask task = new org.opendatakit.tables.tasks.ExportTask ( appName, this ) ; try { task.execute ( new org.opendatakit.tables.tasks.ExportRequest ( appName, tableId, qualifierTextBox.getText () .toString () .trim () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.codecool.neighbrotaxi.controller.RequestMapping ( value = "/logged-in-user", method = RequestMethod.GET ) public java.lang.Object loggedInUser () { try { sessionStorage.clearAllErrorMessages () ; } catch ( Exception ex ) { ex.printStackTrace () ; } sessionStorage.clearAllInfoMessages () ; if ( java.util.Objects.equals ( sessionStorage.getLoggedInUser () .getName () , "anonymous" ) ) { sessionStorage.addErrorMessage ( "Nobody is logged in!" ) ; return new com.codecool.neighbrotaxi.model.SerializableSessionStorage ( sessionStorage ) ; } else { sessionStorage.setLoggedInUser ( userService.findByUsername ( sessionStorage.getLoggedInUser () .getUsername () ) ) ; } return sessionStorage.getLoggedInUser () ; } 
private void startScanning () { android.bluetooth.le.ScanSettings settings = new android.bluetooth.le.ScanSettings.Builder () .setScanMode ( ScanSettings.SCAN_MODE_LOW_POWER ) .build () ; mBluetoothLeScanner.startScan ( new java.util.ArrayList<android.bluetooth.le.ScanFilter> () , settings, mScanCallback ) ; try { if ( com.foodaholic.foodaholic.service.EddystoneScannerService.DEBUG_SCAN ) android.util.Log.d ( com.foodaholic.foodaholic.service.EddystoneScannerService.TAG, "Scanning started…" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void labelCpuInventory () { try { if ( game.getCpu () ) if ( ( game.getCpuPlayer () ) == ( Player.BLUE ) ) { blueInvLabel.setVisible ( true ) ; redInvLabel.setVisible ( false ) ; } else { blueInvLabel.setVisible ( false ) ; redInvLabel.setVisible ( true ) ; } else { blueInvLabel.setVisible ( false ) ; redInvLabel.setVisible ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.json.JSONObject toJSON () { org.json.JSONObject json = new org.json.JSONObject () ; org.json.JSONArray a = new org.json.JSONArray () ; try { for ( com.whizzosoftware.hobson.dto.ErrorDTO error : errors ) { a.put ( error.toJSON () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } json.put ( "errors", a ) ; return json; } 
@ java.lang.Override public com.tsystems.javaschool.db.entities.Contract addNew ( com.tsystems.javaschool.db.entities.Contract contract, java.util.List<java.lang.Integer> optionsIds ) { javax.persistence.EntityTransaction transaction = contractDao.getTransaction () ; com.tsystems.javaschool.business.services.interfaces.OptionService optionService = new com.tsystems.javaschool.business.services.implementations.OptionServiceImpl () ; boolean insideOtherTransaction = transaction.isActive () ; try { contractDao.create ( contract ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return contract; } 
public static void put ( java.lang.String url, java.lang.String requestBodyString, com.chinamobile.iot.onenet.OneNetApiCallback callback ) { try { com.chinamobile.iot.onenet.OneNetApi.assertInitialized () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.chinamobile.iot.onenet.OneNetApi.assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi.assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody.create ( okhttp3.MediaType.parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor.put ( url, requestBody, new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } 
@ java.lang.Override public org.eclipse.jface.text.contentassist.IContentAssistant getContentAssistant ( final org.eclipse.jface.text.source.ISourceViewer sourceViewer ) { final org.eclipse.jface.text.contentassist.ContentAssistant assistant = new org.eclipse.jface.text.contentassist.ContentAssistant () ; assistant.setContentAssistProcessor ( new eu.modelwriter.core.alloyinecore.ui.editor.completion.AIECompletionProcessor () , IDocument.DEFAULT_CONTENT_TYPE ) ; assistant.enableAutoActivation ( true ) ; assistant.enableAutoInsert ( true ) ; assistant.setProposalPopupOrientation ( IContentAssistant.PROPOSAL_OVERLAY ) ; try { assistant.setContextInformationPopupOrientation ( IContentAssistant.CONTEXT_INFO_ABOVE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return assistant; } 
private void catchTheGift () { try { if ( gift.getRect () .intersects ( paddle.getRect () ) ) { gift = null; for ( brickbreaker.source.Ball ball : balls ) { if ( ( ball.getSpeed () ) >= 3 ) { ball.setSpeed ( brickbreaker.source.BALL_SPEED ) ; ball.setImage ( brickbreaker.source.BALL ) ; } else if ( ( paddle.width ) < 75 ) { Sound.SIZEUP.play () ; paddle.setWidth ( 75 ) ; } else { score += 10; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void followUser () { com.firebase.client.Firebase fb = com.stazo.project_18.Project_18.getFB () ; try { if ( Project_18.me.getUserTrails () .contains ( user_ID ) ) { Project_18.me.removeTrail ( fb, user_ID ) ; setFollowButton ( false ) ; } else { Project_18.me.addTrail ( fb, user_ID ) ; setFollowButton ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ net.smartcosmos.dao.things.impl.Test public void testFindAll () throws java.lang.Exception { try { populateData () ; } catch ( Exception ex ) { ex.printStackTrace () ; } int expectedSize = 12; int actualSize = 0; java.util.List<net.smartcosmos.dto.things.ThingResponse> response = persistenceService.findAll ( tenantUrn ) ; assertFalse ( response.isEmpty () ) ; actualSize = response.size () ; assertTrue ( ( ( ( "Expected " + expectedSize ) + " but received " ) + actualSize ) , ( actualSize == expectedSize ) ) ; } 
public java.lang.String printJobs () { java.lang.StringBuilder out = new java.lang.StringBuilder () ; try { out.append ( "\nJob ID\tJob name\tStatus\n" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( java.lang.String job : mappedJobs.keySet () ) { out.append ( job ) .append ( "\t" ) .append ( mappedJobs.get ( job ) [0] ) .append ( "\t" ) .append ( mappedJobs.get ( job ) [1] ) .append ( "\n" ) ; } return out.toString () ; } 
private void init () { recyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.list ) ) ) ; try { recyclerView.setLayoutManager ( new com.xiaofeng.flowlayoutmanager.FlowLayoutManager () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } recyclerView.setAdapter ( new com.xiaofeng.androidlibs.TagAdapter ( com.xiaofeng.androidlibs.DemoUtil.generate ( 1, 3, 13 ) ) ) ; } 
public void baseExpectations () { try { new tests.unit.com.microsoft.azure.iothub.transport.amqps.NonStrictExpectations () { { mockConfig.getIotHubHostname () ; result = hostName; mockConfig.getIotHubName () ; result = hubName; mockConfig.getDeviceId () ; result = deviceId; mockConfig.getDeviceKey () ; result = deviceKey; com.microsoft.azure.iothub.net.IotHubUri.getResourceUri ( hostName, deviceId ) ; result = resourceUri; } }; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( rc ) != null ) { rc.stop () ; pauseTime = java.lang.System.currentTimeMillis () ; totalForgroundTime = ( tinydb.getLong ( "TotalForegroundTime", 0 ) ) + ( ( pauseTime ) - ( resumeTime ) ) ; tinydb.putLong ( "TotalForegroundTime", totalForgroundTime ) ; } } 
@ java.lang.Override public java.lang.String changeStorageFilePath ( java.lang.String newFilePath ) throws java.io.IOException, seedu.task.commons.events.ui.DisplayDirectoryChooserRequestEvent.DirectoryChooserOperationCancelledException { try { if ( newFilePath.isEmpty () ) { newFilePath = getNewFilePathFromDirectoryChooser () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } newFilePath += "\\taskbook.xml"; raise ( new seedu.task.commons.events.storage.StorageFilePathChangedEvent ( newFilePath, taskBook ) ) ; seedu.task.commons.util.ConfigUtil.saveConfig ( new seedu.task.commons.core.Config ( newFilePath ) , Config.USER_CONFIG_FILE ) ; return newFilePath; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( v.getId () ) == ( R.id.upload_files_btn_cancel ) ) { setResult ( com.owncloud.android.ui.activity.RESULT_CANCELED ) ; finish () ; } else if ( ( v.getId () ) == ( R.id.upload_files_btn_upload ) ) { new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask () .execute ( ( ( mBehaviourSpinner.getSelectedItemPosition () ) == 0 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void categorySelected ( org.unpidf.univmobile.data.entities.Category cat ) { try { super.onBackPressed () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.app.FragmentManager manager = getFragmentManager () ; org.unpidf.univmobile.ui.fragments.GeoCampusFragment f = ( ( org.unpidf.univmobile.ui.fragments.GeoCampusFragment ) ( manager.findFragmentByTag ( org.unpidf.univmobile.ui.fragments.GeoCampusFragment.class.getName () ) ) ) ; if ( f != null ) { f.categorySelected ( cat ) ; } } 
public boolean remove ( int index ) { if ( ( index < 1 ) || ( index > ( size () ) ) ) return false; com.seb.research.algorithms.LinkedList.Node current = head; for ( int i = 1; i < index; i++ ) { if ( ( current.getNext () ) == null ) { return false; } current = current.getNext () ; } try { current.setNext ( current.getNext () .getNext () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( count ) --; return true; } 
@ java.lang.Override public void onConnected ( android.os.Bundle bundle ) { route = new com.polsl.roadtracker.database.entity.RouteData () ; route.start () ; try { routeDataDao.insert ( route ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startLocationUpdate () ; sensorReader.startSensorReading ( route.getId () , this.getSharedPreferences ( "SensorReaderPreferences", Context.MODE_PRIVATE ) ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, java.lang.String[] permissions, int[] grantResults ) { try { if ( requestCode == 0 ) { if ( ( ( ( grantResults.length ) > 0 ) && ( ( grantResults[0] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) && ( ( grantResults[1] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { btn_takePictureButton.setEnabled ( true ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.Calendar calcDataCobranca ( java.util.Calendar dataCompra ) { java.util.Calendar dataCobranca = java.util.Calendar.getInstance () ; dataCobranca.setTime ( dataCompra.getTime () ) ; if ( ( diaVirada ) > ( diaVencimento ) ) { dataCobranca.add ( java.util.Calendar.MONTH, 1 ) ; } if ( ( dataCobranca.get ( java.util.Calendar.DAY_OF_MONTH ) ) >= ( diaVirada ) ) { dataCobranca.add ( java.util.Calendar.MONTH, 1 ) ; } try { dataCobranca.set ( java.util.Calendar.DAY_OF_MONTH, diaVencimento ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return dataCobranca; } 
public void notifyRegistrationError () { try { android.util.Log.v ( com.plugin.gcm.NotificationService.TAG, ( "GCM Registration Failed for webview " + ( getWebView () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getRegisterCallBack () ) != null ) { setNotifiedOfRegistered ( false ) ; getRegisterCallBack () .error ( mNotificationService.mRegistrationErrorId ) ; } else { android.util.Log.v ( com.plugin.gcm.NotificationService.TAG, ( "registration error -> No Register callback - webview: " + ( getWebView () ) ) ) ; } } 
private void recurseImpliedPermissions ( com.hypersocket.permissions.PermissionType t, java.util.Set<com.hypersocket.permissions.PermissionType> derivedPermissions ) { try { if ( ( t != null ) && ( ! ( derivedPermissions.contains ( t ) ) ) ) { derivedPermissions.add ( t ) ; if ( ( t.impliesPermissions () ) != null ) { for ( com.hypersocket.permissions.PermissionType t2 : t.impliesPermissions () ) { recurseImpliedPermissions ( t2, derivedPermissions ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void renameResidence ( java.lang.String oldResidence, java.lang.String newResidence ) { if ( oldResidence == null ) return; if ( newResidence == null ) return; try { oldResidence = oldResidence.toLowerCase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.bekvon.bukkit.residence.protection.ClaimedResidence res = ResidenceList.get ( oldResidence ) ; if ( res != null ) { removeResidence ( oldResidence ) ; ResidenceList.put ( newResidence.toLowerCase () , res ) ; } } 
@ org.junit.Test public void getFormattedDateString_30years () { try { org.hamcrest.MatcherAssert.assertThat ( com.ddiehl.timesincetextview.TimeSince.getFormattedDateString ( ( ( mTime ) - ( ( ( ( 30 * 365 ) * 24 ) * 60 ) * 60 ) ) , mTime, false, getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.is ( getQuantityString ( R.plurals.tstv_timespan_years, 30 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.sogilis.ReactNativeBluetooth.ReactMethod public void disconnect ( final com.sogilis.ReactNativeBluetooth.ReadableMap deviceMap ) { final java.lang.String deviceId = deviceMap.getString ( "id" ) ; com.sogilis.ReactNativeBluetooth.BluetoothAction disconnectAction = new com.sogilis.ReactNativeBluetooth.BluetoothAction ( DEVICE_DISCONNECTED, deviceId, eventEmitter ) { @java.lang.Override public void run () throws com.sogilis.ReactNativeBluetooth.domain.BluetoothException { com.sogilis.ReactNativeBluetooth.BluetoothGatt gatt = gattCollection.get ( deviceId ) ; gatt.disconnect () ; bluetoothActionsLoop.actionDone () ; } }; try { bluetoothActionsLoop.addAction ( disconnectAction ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int hashCode () { int result = ( ( t1 ) != null ) ? t1.hashCode () : 0; try { result = ( 31 * result ) + ( ( t2 ) != null ? t2.hashCode () : 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ org.junit.Test public void test_addAlbumToListExt () throws java.lang.Exception { at.sw2017.awesomeinc.awesomeplayer.Album album = new at.sw2017.awesomeinc.awesomeplayer.Album () ; android.test.MoreAsserts.assertNotEqual ( null, album ) ; at.sw2017.awesomeinc.awesomeplayer.AlbumListAdapter adapter = new at.sw2017.awesomeinc.awesomeplayer.AlbumListAdapter ( album ) ; android.test.MoreAsserts.assertNotEqual ( null, adapter ) ; adapter.addAlbum ( "Hallo Welt!" ) ; try { junit.framework.Assert.assertTrue ( adapter.getAlbumList () .contains ( "Hallo Welt!" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void ExtractOnlineDocuments () { try { if ( ( profile.getUrls () .size () ) > 0 ) { for ( java.lang.String url : profile.getUrls () ) { ExtractWebArticles ( url ) ; } driver.quit () ; } else { driver.quit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } ExtractKeyterms () ; } 
@ java.lang.Override public int hashCode () { final int prime = 31; int hashCode = 1; try { hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : data.hashCode () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } hashCode = ( prime * hashCode ) + ( ( children ) == null ? 0 : children.hashCode () ) ; return hashCode; } 
public final void updateIncompatibleList ( final domain.ContractOption option, final java.util.List<domain.ContractOption> newIncOptions ) { java.util.Set<domain.ContractOption> currentIncOptions = option.getIncompatibleOptions () ; java.util.Set<domain.ContractOption> removingOptions = new java.util.HashSet ( currentIncOptions ) ; removingOptions.removeAll ( newIncOptions ) ; java.util.Set<domain.ContractOption> newOptions = new java.util.HashSet ( newIncOptions ) ; newOptions.removeAll ( currentIncOptions ) ; try { for ( domain.ContractOption removingOption : removingOptions ) { deleteIncompatibleOptions ( option, removingOption ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( domain.ContractOption newOption : newOptions ) { addIncompatibleOptions ( option, newOption ) ; } } 
public java.lang.String actionSignup () { boh.jee.ejb.model.Guest user = null; user = new boh.jee.ejb.model.User () ; try { user.setGuestName ( userName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } user.setGuestPhone ( userPhone ) ; user.setGuestEmail ( userEmail ) ; if ( userSrv.userSignUp ( user ) ) { return "roomlist"; } else { illegalAccess = true; return "signup"; } } 
public static final void setEnvironment ( final com.oracle.truffle.api.object.DynamicObject obj, final com.oracle.truffle.api.object.DynamicObject value ) { com.oracle.truffle.api.object.Shape oldShape = obj.getShape () ; com.oracle.truffle.api.object.Shape newShape = oldShape.createSeparateShape ( obj.getShape () .getSharedData () ) .replaceProperty ( oldShape.getProperty ( som.vmobjects.SReflectiveObject.ENVIRONMENT ) , com.oracle.truffle.api.object.Property.create ( som.vmobjects.SReflectiveObject.ENVIRONMENT, oldShape.allocator () .constantLocation ( value ) , 0 ) ) ; try { obj.setShapeAndGrow ( oldShape, newShape ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { java.util.Scanner scan = new java.util.Scanner ( java.lang.System.in ) ; int N = scan.nextInt () ; long r = scan.nextInt () ; long c = scan.nextInt () ; long base = 0; long result = Main.getPoint ( ( r + 1 ) , ( c + 1 ) , N, base ) ; try { java.lang.System.out.println ( ( result - 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.google.hashcode.List<com.google.hashcode.integer> fillAllDifferenceY ( com.google.hashcode.List<com.google.hashcode.Cell> slice ) { com.google.hashcode.List<java.lang.Integer> diffY = new com.google.hashcode.ArrayList<java.lang.Integer> () ; try { for ( com.google.hashcode.Cell cell : slice ) { if ( ! ( diffY.contains ( cell.y ) ) ) { diffY.add ( cell.y ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return diffY; } 
public java.util.List<Actor> detection ( java.util.List<Actor> actors ) { try { for ( Actor a1 : actors ) { a1.setInAir ( true ) ; for ( Actor a2 : actors ) { if ( a1 != a2 ) { if ( isCollision ( a1, a2 ) ) resolveCollision ( a1, a2 ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return actors; } 
public static void print ( int[] o ) { java.lang.String delim = "{"; for ( int elem : o ) { myUtils.ConsolePrinting.print ( delim ) ; myUtils.ConsolePrinting.print ( elem ) ; delim = ", "; } delim = ( delim.equals ( "{" ) ) ? "{}" : "}"; try { myUtils.ConsolePrinting.print ( delim ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private javax.jcr.Node newNode ( final javax.jcr.Node parent, final org.xml.sax.Attributes attributes ) throws javax.jcr.RepositoryException { javax.jcr.Node parentNode; try { if ( parent == null ) { parentNode = this.session.getRootNode () ; } else { parentNode = parent; } } catch ( Exception ex ) { ex.printStackTrace () ; } final java.lang.String name = attributes.getValue ( "name" ) ; final java.lang.String primaryType = attributes.getValue ( "primaryType" ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG.info ( "Node {} adding child node {} ( type={} ) ", parentNode.getPath () , name, primaryType ) ; return parentNode.addNode ( name, primaryType ) ; } 
@ java.lang.Override public void validate ( com.couchbase.lite.Document doc ) { java.util.Map<java.lang.String, java.lang.Object> result = new java.util.HashMap<> () ; int count = 0; com.couchbase.lite.Dictionary dictObj = doc.getDictionary ( "dict" ) ; for ( java.lang.String key : dictObj ) { result.put ( key, dict.getObject ( key ) ) ; count++; } try { org.junit.Assert.assertEquals ( finalContent.size () , count ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( finalContent, result ) ; } 
@ javafx.fxml.FXML public void initialize () { desc.setText ( task.getDesc () .getValue () ) ; id.setText ( ( ( displayedIndex ) + ". " ) ) ; venue.setText ( task.getVenue () .getValue () ) ; priority.setText ( task.getPriority () .getValue () ) ; time.setText ( task.getTime () .getValue () ) ; try { tags.setText ( task.tagsString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void evolve ( double time, asteroids.part2.CollisionListener collistionListener ) { if ( time <= 0 ) { return; } double timeToFirstCollision = this.getTimeToFirstCollision () ; try { if ( time <= timeToFirstCollision ) { this.advance ( time ) ; return; } else { this.advance ( timeToFirstCollision ) ; this.resolveCollision ( collistionListener ) ; java.lang.System.out.println ( timeToFirstCollision ) ; this.evolve ( ( time - timeToFirstCollision ) , collistionListener ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
boolean areNodesWorking () { try { if ( ( ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject.gettingPerceptionData () ) && ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject.gettingControlData () ) ) && ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject.gettingLaneData () ) ) { return true; } else { setStatus ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.NODES_NOT_WORKING ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testRunProjectWithPassingTests () { org.jboss.reddeer.swt.api.Shell workbenchShell = new org.jboss.reddeer.workbench.impl.shell.WorkbenchShell () ; org.jboss.tools.fuse.ui.bot.test.ProjectLocalRunTest.log.info ( "Run a project as Local Camel Context ( Project contains a passing test case ) ." ) ; new org.jboss.reddeer.workbench.impl.editor.DefaultEditor ( "CamelContextXmlTest.java" ) .activate () ; org.jboss.tools.fuse.ui.bot.test.utils.EditorManipulator.copyFileContent ( "resources/PassingTest.java" ) ; new org.jboss.tools.fuse.reddeer.projectexplorer.CamelProject ( org.jboss.tools.fuse.ui.bot.test.ProjectLocalRunTest.PROJECT_NAME ) .runCamelContext () ; workbenchShell.setFocus () ; try { org.junit.Assert.assertFalse ( "This build should be successful.", new org.jboss.reddeer.eclipse.ui.console.ConsoleView () .getConsoleText () .contains ( "BUILD FAILURE" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeAtIndex ( int index ) { try { if ( index <= 0 ) { removeFirstNode () ; } else if ( index >= ( ( size ) - 1 ) ) { removeLastNode () ; } else { a3.LinkedList.Node stepNode = head; for ( int i = 1; i < index; ++i ) { stepNode = stepNode.next; } stepNode.next = stepNode.next.next; stepNode = stepNode.next; stepNode = null; -- ( size ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_main ) ; camera = new com.example.svenscan.svenscan.utils.Camera ( this, this ) ; com.example.svenscan.svenscan.SvenScanApplication app = ( ( com.example.svenscan.svenscan.SvenScanApplication ) ( getApplication () ) ) ; wordManager = app.getWordRepository () ; } 
void enable ( org.bukkit.plugin.java.JavaPlugin plugin ) { this._plugin = plugin; try { se.fredsfursten.donationboardplugin.BoardController.numberOfDays = se.fredsfursten.donationboardplugin.DonationBoardPlugin.getPluginConfig () .getInt ( "Days" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } se.fredsfursten.donationboardplugin.BoardController.numberOfLevels = se.fredsfursten.donationboardplugin.DonationBoardPlugin.getPluginConfig () .getInt ( "Levels" ) ; this._model = new se.fredsfursten.donationboardplugin.BoardModel ( se.fredsfursten.donationboardplugin.BoardController.numberOfDays, se.fredsfursten.donationboardplugin.BoardController.numberOfLevels ) ; load () ; } 
@ java.lang.Override public void processResult ( int rc, java.lang.String path, java.lang.Object ctx ) { try { trace.commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.apache.curator.framework.api.CuratorEvent event = new org.apache.curator.framework.imps.CuratorEventImpl ( client, org.apache.curator.framework.api.CuratorEventType.REMOVE_WATCHES, rc, path, null, ctx, null, null, null, null, null, null ) ; client.processBackgroundOperation ( operationAndData, event ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_main ) ; if ( getSharedPreferences ( CONST.PREFS, com.brainmurphy.roomhack.MODE_PRIVATE ) .getBoolean ( CONST.IS_LOGGED_IN, false ) ) { startActivity ( new android.content.Intent ( this, com.brainmurphy.roomhack.Dashboard.class ) ) ; } bLogin = ( ( android.widget.Button ) ( findViewById ( R.id.bLogIn ) ) ) ; bLogin.setOnClickListener ( this ) ; bRegister = ( ( android.widget.Button ) ( findViewById ( R.id.bRegister ) ) ) ; bRegister.setOnClickListener ( this ) ; } 
@ java.lang.Override protected void layoutSingularComponent ( com.vaadin.ui.Component component ) { try { switch ( getPacking () ) { case EXPAND: layoutComponent ( component, "100%", 1, Alignment.MIDDLE_RIGHT ) ; break; case SPACE_AFTER: layoutComponent ( component, null, 0, Alignment.TOP_RIGHT ) ; break; case SPACE_BEFORE: layoutComponent ( component, null, 0, Alignment.BOTTOM_RIGHT ) ; break; case SPACE_AROUND: layoutComponent ( component, null, 0, Alignment.MIDDLE_RIGHT ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void setExtendedIngredients () { com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel ingredient = new com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel () ; ingredient.setImage ( "test" ) ; java.util.List<com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel> list = new java.util.ArrayList<> () ; list.add ( ingredient ) ; recipeModel.setExtendedIngredients ( list ) ; try { org.junit.Assert.assertEquals ( recipeModel.getExtendedIngredients () , list ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Object call ( org.mozilla.javascript.Context cx, org.mozilla.javascript.Scriptable scope, org.mozilla.javascript.Scriptable thisObj, java.lang.Object[] args ) { try { assert ( connection.current () ) != null : "cannot call remote functions without a connected client in context"; } catch ( Exception ex ) { ex.printStackTrace () ; } connection.current () .send ( jj.jjmessage.JJMessage.makeCall ( java.lang.String.valueOf ( args[0] ) , java.lang.String.valueOf ( args[1] ) ) ) ; return org.mozilla.javascript.Undefined.instance; } 
@ java.lang.Override public final int calculateValue ( final nl.tue.s2id90.draughts.DraughtsState draughtsState, final boolean isWhitePlayer, final int depth ) { int value = 0; try { for ( nl.tue.s2id90.group05.HeuristicComponent component : components ) { value += component.calculateComponentValue ( draughtsState, isWhitePlayer, depth, value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return value; } 
@ java.lang.Override public <T> T getService ( org.terracotta.entity.ServiceConfiguration<T> configuration ) { T builtInService = getBuiltInService ( configuration ) ; T externalService = getExternalService ( configuration ) ; try { com.tc.util.Assert.assertFalse ( ( ( null != builtInService ) && ( null != externalService ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null != builtInService ? builtInService : externalService; } 
@ java.lang.Override public boolean parseMsg ( java.lang.String subject, java.lang.String body, net.anei.cadpage.parsers.MsgInfo.Data data ) { net.anei.cadpage.parsers.VA.Parser p = new net.anei.cadpage.parsers.VA.Parser ( subject ) ; data.strUnit = p.getLast ( ' ' ) ; java.lang.String source = p.get () ; try { if ( ! ( super.parseMsg ( body, data ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } data.strBox = data.strSource; data.strSource = source; return true; } 
public static com.sailing.kafka.KafkaClient getKafkaProducer ( java.lang.String kafkaName, java.util.Properties kafkaProducerProps ) { com.sailing.kafka.KafkaClient client = com.sailing.kafka.KafkaSet.kafkaMap.get ( kafkaName ) ; try { if ( client == null ) { client = new com.sailing.kafka.KafkaClient ( kafkaProducerProps ) ; com.sailing.kafka.KafkaClient clientTrue = com.sailing.kafka.KafkaSet.kafkaMap.putIfAbsent ( kafkaName, client ) ; if ( clientTrue != null ) { client.close () ; return clientTrue; } else { return client; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return client; } 
private void checkProduct ( java.lang.String developerId, java.lang.String productId ) { com.umasuo.device.center.application.dto.ProductView product = restClient.getProduct ( developerId, productId ) ; try { if ( ! ( developerId.equals ( product.getDeveloperId () ) ) ) { com.umasuo.device.center.application.service.UnionApplication.LOGGER.debug ( "Developer: {} don't own this product: {}.", developerId, productId ) ; throw new com.umasuo.exception.AuthFailedException ( "Developer do not own this product" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( ProductStatus.PUBLISHED.equals ( product.getStatus () ) ) ) { com.umasuo.device.center.application.service.UnionApplication.LOGGER.debug ( "Product: {} is not published.", productId ) ; throw new com.umasuo.exception.CreateResourceFailed ( "Product is not published" ) ; } } 
public void ReInit ( java.io.Reader stream ) { try { jj_input_stream.ReInit ( stream, 1, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } token_source.ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = -1; jj_gen = 0; for ( int i = 0; i < 17; i++ ) jj_la1[i] = -1; for ( int i = 0; i < ( jj_2_rtns.length ) ; i++ ) jj_2_rtns[i] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } 
public static void main ( java.lang.String[] args ) { TraceGenerator generator = new TraceGenerator ( 4, 4, 4, 4, 8, 12, 4, 4, 3, 5 ) ; Computation computation = generator.generateTrace () ; try { java.lang.System.out.println ( computation ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } App app = new App ( false, true, false, false ) ; java.util.List<Computation> computations = app.generateComputations ( computation ) ; } 
public void init () { onCreateChildAssociation = new org.alfresco.repo.policy.JavaBehaviour ( this, "onCreateChildAssociation", Behaviour.NotificationFrequency.TRANSACTION_COMMIT ) ; beforeCopyDocumentFolder = new org.alfresco.repo.policy.JavaBehaviour ( this, "beforeCopy" ) ; afterCopyDocumentFolder = new org.alfresco.repo.policy.JavaBehaviour ( this, "onCopyComplete", Behaviour.NotificationFrequency.TRANSACTION_COMMIT ) ; this.policyComponent.bindAssociationBehaviour ( OnCreateChildAssociationPolicy.QNAME, OpenESDHModel.TYPE_DOC_SIMPLE, ContentModel.ASSOC_CONTAINS, this.onCreateChildAssociation ) ; try { this.policyComponent.bindClassBehaviour ( BeforeCopyPolicy.QNAME, OpenESDHModel.TYPE_DOC_SIMPLE, this.beforeCopyDocumentFolder ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.policyComponent.bindClassBehaviour ( OnCopyCompletePolicy.QNAME, OpenESDHModel.TYPE_DOC_SIMPLE, this.afterCopyDocumentFolder ) ; } 
@ Test ( enabled = false, groups = { "scenario", "loop", "templates", "invitations", "branded messaging" } ) public void bmCanVerifyNewImagePresentInEnrollCustomerPreviewBody () { BrandedMessagingTests.setupTemplate () ; try { clientportal.WireMessageEditorPage.Goto () .setCheckboxField ( WireMessageEditorCheckboxField.MAKE_TEMPLATE_AVAILABLE_IN_ENROLL_CUSTOMER, true ) .setCheckboxField ( WireMessageEditorCheckboxField.ADD_IMAGE, true ) .setDropDownValue ( WireMessageEditorDropDownField.IMAGE, BrandedMessagingTests.imageID ) .clickSaveAndActivateLink () ; } catch ( Exception ex ) { ex.printStackTrace () ; } clientportal.EnrollCustomerPage.Goto () .selectTemplate ( BrandedMessagingTests.templateName ) .verifyPreviewImage ( BrandedMessagingTests.imageID, true ) .selectTemplate ( BrandedMessagingTests.templateName ) .verifyPreviewImage ( BrandedMessagingTests.imageID, false ) ; } 
public void update () { try { if ( ( type ) == ( Type.BASICENEMY ) ) { ( timer ) ++; this.move ( Direction.DOWN, speed ) ; int timeToShoot = rnd.nextInt ( 3 ) ; if ( ( timeToShoot == 0 ) && ( ( ( timer ) % 100 ) == 0 ) ) { Sound.play ( "src/sounds/enemyBlaster.wav" ) ; shoot ( Type.BULLET, Direction.DOWN ) ; timer = 0; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void printFloatingBackground ( int i, java.lang.String msg ) { i = i + 1; try { java.lang.System.out.println ( ( ( ( ( ( ( ( UI.ui.BACKGROUND_BLUE ) + ( UI.ui.HIGH_INTENSITY ) ) + ( UI.ui.YELLOW ) ) + i ) + ".\t" ) + msg ) + ( ansi () .reset () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_main ) ; checkCameraHardware () ; if ( isRecording ) { mMediaRecorder.stop () ; releaseMediaRecorder () ; mCamera.lock () ; isRecording = false; } else { if ( prepareVideoRecorder () ) { mMediaRecorder.start () ; mMediaRecorder.setMaxDuration ( 30000 ) ; isRecording = true; } else { releaseMediaRecorder () ; } } } 
public void setActionValue ( java.lang.Object actionValue ) { if ( actionValue == null ) return; currentValue = actionValue; if ( ! ( action.getValue () .equals ( actionValue ) ) ) this.action.setValue ( actionValue ) ; try { initChildList () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void range ( KdTree.Node node, edu.princeton.cs.algs4.RectHV rect ) { if ( ! ( node.rect.intersects ( rect ) ) ) return; if ( ( node.point ) == null ) return; if ( rect.contains ( node.point ) ) range.add ( node.point ) ; try { range ( node.left, rect ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } range ( node.right, rect ) ; } 
@ java.lang.Override public net.minecraft.nbt.NBTTagCompound writeToNBT ( net.minecraft.nbt.NBTTagCompound tag ) { if ( ( location ) != null ) location.writeToNBT ( tag ) ; try { if ( ( type ) != null ) type.writeToNBT ( tag ) ; else { mcmultipart.multipart.MultipartHelper.getPartContainer ( getWorld () , getPos () ) .removePart ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return tag; } 
private static void showToast ( final android.app.Activity activity, @android.support.annotation.Nullable final java.lang.String msg, final int length ) { java.lang.Runnable toastRunnable = new java.lang.Runnable () { @java.lang.Override public void run () { android.widget.Toast.makeText ( activity, msg, length ) .show () ; } }; try { io.particle.android.sdk.utils.EZ.runOnMainThread ( toastRunnable ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.lang.String getImports () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; try { sb.append ( "import org.junit.Before;\n" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sb.append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests.isValidClass ( imp ) ) { sb.append ( ( ( "import " + imp ) + ";\n" ) ) ; } } return sb.toString () ; } 
@ java.lang.Override public void onResponse ( final retrofit2.Call<com.charlesmadere.hummingbird.models.Feed> call, final retrofit2.Response<com.charlesmadere.hummingbird.models.Feed> response ) { final com.charlesmadere.hummingbird.models.Feed body = ( response.isSuccessful () ) ? response.body () : null; try { if ( body == null ) { listener.failure ( com.charlesmadere.hummingbird.networking.Api.retrieveErrorInfo ( response ) ) ; } else { com.charlesmadere.hummingbird.networking.Api.hydrateFeed ( body, null, listener ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void saveSettings () { android.content.SharedPreferences settings = getSharedPreferences ( MainMenuActivity.PREFS_NAME, Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = settings.edit () ; editor.putString ( "activity", "story_page" ) ; editor.putString ( "story", story.getUniqueID () ) ; editor.putInt ( "page", currentPage ) ; try { editor.commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void retrieveName () throws java.lang.Exception { pingproject.biz.beans.PingBean mockPingBean = mock ( pingproject.biz.beans.PingBean.class ) ; doReturn ( mockPingBean ) .when ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) .getPingBean () ; pingproject.web.ManagedBeans.PingWebBeanTest.spy.retrieveName () ; verify ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) .getPingBean () ; try { verify ( mockPingBean ) .retrieveName () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getAll () throws java.lang.Exception { com.cinema.controller.rest.CustomerControllerTest.LOGGER.debug ( "mock test: getAll () " ) ; java.util.List<com.cinema.model.Customer> customers = new java.util.ArrayList<> () ; customers.add ( com.cinema.controller.rest.CustomerControllerTest.CUSTOMER_1 ) ; customers.add ( com.cinema.controller.rest.CustomerControllerTest.CUSTOMER_2 ) ; expect ( customerServiceMock.getAllCustomers () ) .andReturn ( customers ) ; try { replay ( customerServiceMock ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mockMvc.perform ( get ( com.cinema.controller.rest.CustomerControllerTest.CUSTOMER_GET_ALL ) .accept ( MediaType.APPLICATION_JSON ) ) .andDo ( org.springframework.test.web.servlet.result.MockMvcResultHandlers.print () ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_shared_preferences ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; editText = ( ( android.widget.EditText ) ( findViewById ( R.id.editText ) ) ) ; retreiveString () ; } 
private void SRLInstruction () { int rd = file.nextInt () ; int rs = file.nextInt () ; int sa = file.nextInt () ; file.nextLine () ; int funct = 8; int rt = 0; java.lang.String opc = "SRL"; try { ilist.add ( ( ( interfaces.IInstruction ) ( new model.RTypeInstruction ( opc, rd, rs, rt, sa, funct ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void start ( java.lang.String s ) { org.alicebot.server.core.Globals.load ( s ) ; shell = new org.alicebot.server.core.util.Shell ( inStream, displayStream, promptStream ) ; server = new org.alicebot.server.net.AliceServer ( s, shell ) ; org.alicebot.server.core.util.Trace.setOut ( displayStream ) ; try { server.startup ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } shutdown () ; } 
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT; listener.setPlayerStates ( ( -1 ) , State.IS_WAIT ) ; try { if ( station != null ) { if ( ( mediaPlayer ) == null ) initPlayer ( station.getSource () ) ; else { if ( mediaPlayer.isPlaying () ) { pause () ; } else { play () ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBackPressed () { if ( mDrawerLayout.isDrawerOpen ( mDrawerListView ) ) { mDrawerLayout.closeDrawer ( mDrawerListView ) ; return; } try { if ( ! ( fragmentMediator.backPressWebView () ) ) { edu.rutgers.css.Rutgers.utils.LogUtils.LOGV ( edu.rutgers.css.Rutgers.ui.MainActivity.TAG, ( "Back button pressed. Leaving top component: " + ( edu.rutgers.css.Rutgers.utils.AppUtils.topHandle ( this ) ) ) ) ; super.onBackPressed () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onSuccess ( java.util.List<com.jiuzhang.guojing.dribbbo.model.Shot> shots ) { adapter.setShowLoading ( ( ( shots.size () ) >= ( com.jiuzhang.guojing.dribbbo.dribbble.Dribbble.COUNT_PER_LOAD ) ) ) ; try { if ( refresh ) { swipeRefreshLayout.setRefreshing ( false ) ; adapter.setData ( shots ) ; } else { swipeRefreshLayout.setEnabled ( true ) ; adapter.append ( shots ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean setCurrentMap ( java.lang.String tag ) { net.samongi.SamongiLib.Maps.MapData map = this.maps.get ( tag ) ; if ( map == null ) return false; net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent event = new net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent ( this.current_map, map ) ; this.current_map = map; try { org.bukkit.Bukkit.getServer () .getPluginManager () .callEvent ( event ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/start" ) public org.springframework.web.servlet.ModelAndView start ( com.infofilter.model.SearchConfig sc ) throws java.lang.InterruptedException { crawl.setSearchConfig ( sc ) ; crawl.run () ; java.util.List<com.infofilter.model.UrlInfo> urlList = com.infofilter.crawl.Crawl.urlInfoList; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "result" ) ; try { mav.addObject ( "urlList", urlList ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return mav; } 
public void initScene ( final int scale, final com.jme3.math.Vector3f translation ) { try { java.lang.System.out.println ( "SCENE_PATH file found!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( ( ( "=> loading " + ( com.funkydonkies.gamestates.SceneState.SCENE_PATH.toString () ) ) + " Spatial ..." ) ) ; loadScene ( scale, translation ) ; java.lang.System.out.println ( "... DONE loading .scene Spatial <=" ) ; } 
static boolean isAxiom ( Expression d ) { try { for ( int i = 0; i < ( LogicHW1.axioms.size () ) ; i++ ) { if ( LogicHW1.axioms.get ( i ) .equalStruct ( d, new java.util.HashMap<> () , true ) ) { LogicHW1.out.println ( ( "Сх. акс. " + ( i + 1 ) ) ) ; return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void deleteAppointmentByDateInt ( java.lang.Integer date ) { android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase () ; java.lang.String Query = ( ( ( ( ( ( ( ( "DELETE FROM " + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.TABLE_CALENDAR ) ) + " WHERE " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_START ) ) + " <= " ) + date ) + " AND " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_END ) ) + " >= " ) + date; try { db.execSQL ( Query ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( getArguments () .containsKey ( com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID ) ) { mItem = Content.COMMUTE_MAP.get ( getArguments () .getString ( com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID ) ) ; android.app.Activity activity = this.getActivity () ; android.support.design.widget.CollapsingToolbarLayout appBarLayout = ( ( android.support.design.widget.CollapsingToolbarLayout ) ( activity.findViewById ( R.id.toolbar_layout ) ) ) ; if ( ( appBarLayout != null ) && ( ( mItem ) != null ) ) { appBarLayout.setTitle ( mItem.id ) ; } } } 
public void actionPerformed ( final java.awt.event.ActionEvent event ) { try { if ( ( pvLoggerID ) != 0 ) { if ( USE_PVLOGGER.isSelected () ) USE_LOGGEDBEND.setEnabled ( true ) ; else USE_LOGGEDBEND.setEnabled ( false ) ; setHasChanges ( true ) ; } else { javax.swing.JOptionPane.showMessageDialog ( mainWindow, "You need to select pvLoggerData first", "Warning!", javax.swing.JOptionPane.PLAIN_MESSAGE ) ; USE_PVLOGGER.setSelected ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void show () { super.show () ; stage = new com.badlogic.gdx.scenes.scene2d.Stage ( new com.badlogic.gdx.utils.viewport.ExtendViewport ( Resolution.instance.getMenuWidth () , Resolution.instance.getMenuHeight () ) ) ; skin = assets.getMainMenuSkin () ; colorSky = skin.getColor ( MainMenuConstants.MAIN_MENU_COLOR_SKY ) ; Gdx.input.setInputProcessor ( stage ) ; rebuildStage () ; audio = new com.lothbrok.game.audio.Audio ( assets.getMusicAssets () , assets.getSoundAssets () ) ; try { audio.playMenuMusic () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int scoreBoard () { try { switch ( game.max ) { case "W": score = ( scoreWhite () ) - ( scoreBlack () ) ; break; case "B": score = ( scoreBlack () ) - ( scoreWhite () ) ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return score; } 
public void run () { java.lang.String playerName = player.getName () ; org.bukkit.scoreboard.Team playerTeam = org.bukkit.Bukkit.getScoreboardManager () .getMainScoreboard () .getEntryTeam ( playerName ) ; try { if ( playerTeam != null ) player.setDisplayName ( ( ( ( ( playerTeam.getPrefix () ) + playerName ) + ( playerTeam.getSuffix () ) ) + ( org.bukkit.ChatColor.RESET ) ) ) ; else player.setDisplayName ( playerName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean undoAction () { for ( int col = 0; col < 12; col++ ) { for ( int row = 0; row < 12; row++ ) { boardTiles.get ( row ) .get ( col ) .setExists ( start[row][col] ) ; } } try { colsTextField.setText ( java.lang.Integer.toString ( startCols ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } rowsTextField.setText ( java.lang.Integer.toString ( startRows ) ) ; redrawBoard () ; return true; } 
public double slopeTo ( Point that ) { try { if ( ( this.compareTo ( that ) ) == 0 ) { return java.lang.Double.NEGATIVE_INFINITY; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( this.x ) == ( that.x ) ) { return java.lang.Double.POSITIVE_INFINITY; } if ( ( this.y ) == ( that.y ) ) { return 0; } return ( ( double ) ( ( that.y ) - ( this.y ) ) ) / ( ( that.x ) - ( this.x ) ) ; } 
@ org.junit.Test public void testDataFrame () throws java.lang.Exception { http2Connect () ; try { sendSimplePostRequest ( 3, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } readSimplePostResponse ( false ) ; org.junit.Assert.assertEquals ( ( "0-WindowSize-[128]\n" + ( ( ( ( ( "3-WindowSize-[128]\n" + "3-HeadersStart\n" ) + "3-Header-[:status]-[200]\n" ) + "3-HeadersEnd\n" ) + "3-Body-128\n" ) + "3-EndOfStream\n" ) ) , output.getTrace () ) ; } 
private io.minio.HttpResponse executeGet ( java.lang.String bucketName, java.lang.String objectName, java.util.Map<java.lang.String, java.lang.String> headerMap, java.util.Map<java.lang.String, java.lang.String> queryParamMap ) throws io.minio.ErrorResponseException, io.minio.InternalException, io.minio.InvalidBucketNameException, io.minio.NoResponseException, java.io.IOException, org.xmlpull.v1.XmlPullParserException { try { updateRegionMap ( bucketName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return execute ( Method.GET, Regions.INSTANCE.region ( bucketName ) , bucketName, objectName, headerMap, queryParamMap, null, 0 ) ; } 
@ java.lang.Override public V put ( K key, V value ) { com.google.common.base.Preconditions.checkNotNull ( key ) ; try { com.google.common.base.Preconditions.checkNotNull ( value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.google.common.cache.LocalCache.Timestamped<V> oldValue = cachingHashMap.put ( key, new com.google.common.cache.LocalCache.Timestamped<V> ( value, ticker ) ) ; if ( oldValue == null ) { return null; } alertListenerIfPresent ( key, oldValue.getValue () , com.google.common.cache.RemovalCause.REPLACED ) ; return oldValue.getValue () ; } 
private void readTokens ( com.fsck.k9.mail.store.ImapResponseParser.ImapResponse response ) throws java.io.IOException { response.clear () ; java.lang.String firstToken = ( ( java.lang.String ) ( readToken ( response ) ) ) ; try { response.add ( firstToken ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( isStatusResponse ( firstToken ) ) { parseResponseText ( response ) ; } else { java.lang.Object token; while ( ( token = readToken ( response ) ) != null ) { if ( ! ( token instanceof com.fsck.k9.mail.store.ImapResponseParser.ImapList ) ) { response.add ( token ) ; } } } } 
private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { java.util.ArrayList<java.awt.Point> roiData = util.DataManager.readRoiFile ( chosenPath ) ; try { if ( roiData != null ) { if ( ( roiData.size () ) > 0 ) { setFields () ; notifyRoiListeners ( roiData ) ; if ( defaultCheckBox.isSelected () ) { notifyRoiListeners ( chosenPath ) ; } this.setVisible ( false ) ; } else { errorText.setText ( "Error loading: File not found!" ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setArrayKey ( final org.verapdf.as.ASAtom key, final org.verapdf.cos.COSObject array ) { try { if ( ( ( this.base ) == null ) || ( ! ( this.base.setArrayKey ( key, array ) ) ) ) { org.verapdf.cos.COSObject obj = org.verapdf.cos.COSArray.construct () ; this.base = new org.verapdf.cos.COSDictionary ( key, obj ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
static java.lang.Object[] boxAndPadWithZeros ( int length, long[] values ) { long[] padded; try { if ( ( values.length ) == length ) { padded = values; } else { padded = new long[length]; java.lang.System.arraycopy ( values, 0, padded, 0, padded.length ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.util.Arrays.stream ( padded ) .boxed () .toArray () ; } 
public static void getApplication () { try { git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement = java.lang.String.valueOf ( git_aptra.SearchApplicant.DialogSearchApplicantApplication.boxEducationalAchievement.getSelectedItem () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement.equals ( "Bitte ausw�hlen" ) ) { git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement = ""; } git_aptra.SearchApplicant.DialogSearchApplicantApplication.vacancy = java.lang.String.valueOf ( git_aptra.SearchApplicant.DialogSearchApplicantApplication.boxVacancy.getSelectedItem () ) ; if ( git_aptra.SearchApplicant.DialogSearchApplicantApplication.vacancy.equals ( "Bitte ausw�hlen" ) ) { git_aptra.SearchApplicant.DialogSearchApplicantApplication.vacancy = ""; } } 
@ java.lang.Override public void start ( T project, boolean newInstance ) { org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener listener = org.jenkinsci.plugins.rabbitmqconsumer.extensions.MessageQueueListener.all () .get ( org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener.class ) ; if ( listener != null ) { listener.addTrigger ( this ) ; removeDuplicatedTrigger ( listener.getTriggers () ) ; } try { super.start ( project, newInstance ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setTimescale ( int order ) { java.lang.System.out.println ( ( "setTimescale " + order ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList.get ( ( ( fCurrentEvent ) ++ ) ) ; try { assertEquals ( event.fType, VCDLoaderTest.ExpectTraceBuilder.EXPECT_TIMESCALE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( event.fTimestamp, ( ( long ) ( order ) ) ) ; } 
public static float[] getFloatArrayFromBuffer ( java.nio.FloatBuffer buffer ) { float[] array = new float[0]; try { if ( buffer != null ) { if ( buffer.hasArray () ) { array = buffer.array () ; } else { buffer.rewind () ; array = new float[buffer.capacity () ]; buffer.get ( array ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return array; } 
private void validate ( java.lang.Object source, java.lang.Object observer ) { com.google.common.base.Preconditions.checkNotNull ( source, "source" ) ; com.google.common.base.Preconditions.checkNotNull ( observer, "observer" ) ; try { com.google.common.base.Preconditions.checkArgument ( verifySource ( source ) , "Source is not the right type!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.google.common.base.Preconditions.checkArgument ( verifySource ( observer ) , "Observer is not the right type!" ) ; } 
public void setProperties ( java.util.Map<java.lang.String, java.lang.Object> properties ) { try { for ( java.lang.Object o : properties.values () ) { if ( ( ( ! ( o instanceof java.lang.String ) ) && ( ! ( o instanceof java.lang.Integer ) ) ) && ( ! ( o instanceof java.lang.Double ) ) ) { throw new java.lang.IllegalArgumentException ( "Values must be Strings or Doubles." ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } this.properties = properties; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_settings ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; try { getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void execute ( org.shipkit.internal.gradle.ReleaseNeededPlugin p ) { try { project.getTasks () .withType ( org.shipkit.gradle.ReleaseNeededTask.class, new org.gradle.api.Action<org.shipkit.gradle.ReleaseNeededTask> () { public void execute ( org.shipkit.gradle.ReleaseNeededTask t ) { t.setCommitMessage ( java.lang.System.getenv ( "TRAVIS_COMMIT_MESSAGE" ) ) ; t.setPullRequest ( isPullRequest ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.List<labfinder.Room> getAllRooms () { com.mongodb.client.MongoCollection<org.bson.Document> classCol = labfinder.MongoAccess.db.getCollection ( "Rooms" ) ; java.util.List<org.bson.Document> all = classCol.find () .into ( new java.util.ArrayList<org.bson.Document> () ) ; java.util.List<labfinder.Room> rooms = new java.util.ArrayList<labfinder.Room> () ; try { for ( org.bson.Document doc : all ) { rooms.add ( new labfinder.Room ( doc ) ) ; java.lang.System.out.println ( doc.toString () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return rooms; } 
public boolean remove ( spoon.reflect.code.CtBlock parentBlock, spoon.reflect.code.CtStatement fixStatement, int pos ) { spoon.reflect.code.CtStatement s = parentBlock.getStatement ( pos ) ; try { if ( fixStatement.equals ( s ) ) { parentBlock.getStatements () .remove ( pos ) ; return true; } else { java.lang.System.out.println ( ( ( ( "\n fx: " + fixStatement ) + "\n" ) + s ) ) ; throw new java.lang.IllegalStateException ( "Undo: Not valid fix position" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setUrl ( java.lang.String url ) { org.openmrs.mobile.utilities.URLValidator.ValidationResult result = org.openmrs.mobile.utilities.URLValidator.validate ( url ) ; org.openmrs.mobile.activities.LoginActivity.mLastURL = result.getUrl () ; try { if ( result.isURLValid () ) { mSpinner.setVisibility ( View.VISIBLE ) ; mLoginFormView.setVisibility ( View.GONE ) ; new org.openmrs.mobile.net.LocationManager () .getAvailableLocation ( org.openmrs.mobile.net.helpers.LocationHelper.createAvailableLocationListener ( result.getUrl () , this ) ) ; } else { showInvalidURLDialog () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String toByteCode ( java.lang.String i_assembly ) { java.util.List<backend.Compiler.asm_line> asm_array = new java.util.ArrayList<backend.Compiler.asm_line> () ; java.lang.String byteCodeReturn = ""; java.lang.String[] raw_lines = i_assembly.split ( "\\r?\\n" ) ; try { for ( int line_i = 0; line_i < ( raw_lines.length ) ; line_i++ ) { asm_array.add ( new backend.Compiler.asm_line ( raw_lines[line_i] ) ) ; byteCodeReturn += asm_array.get ( line_i ) .getByteCode () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return byteCodeReturn; } 
private void setMedian () { try { if ( ! ( this.numbers.isEmpty () ) ) { int mid = ( this.numbers.size () ) / 2; if ( ( mid % 2 ) == 1 ) { this.medianOfAllNumbers = this.numbers.get ( mid ) ; } else { this.medianOfAllNumbers = ( ( this.numbers.get ( ( mid - 1 ) ) ) + ( this.numbers.get ( mid ) ) ) / 2.0; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.edu.nju.asi.service.serviceImpl.Case uploadOnline ( org.springframework.web.multipart.MultipartFile uploadedFile ) throws java.io.IOException { try { if ( uploadedFile.isEmpty () ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String thisPath = uploadedFile.getName () ; java.io.File thisFile = new java.io.File ( thisPath ) ; uploadedFile.transferTo ( thisFile ) ; com.edu.nju.asi.service.serviceImpl.Case wanted = parseXML ( thisPath ) ; boolean deleteResult = thisFile.delete () ; return wanted; } 
@ org.junit.Test public void testJoinCollection () { boolean hasData = false; HgTupleStream stream = HgDB.join ( PartTable.stream () .joinOn ( PartTable.self ( PartTable.ID ) ) , OdetailTable.on.pnos () , HgRelation.IN ) ; try { for ( org.mercurydb.queryutils.HgTupleStream.HgTuple t : stream ) { hasData = true; if ( ! ( t.get ( OdetailTable.ID ) .pnos.contains ( t.get ( PartTable.ID ) ) ) ) org.junit.Assert.fail () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( !hasData ) org.junit.Assert.fail () ; } 
@ java.lang.Override public boolean availableForBooking ( java.util.Set<com.real.apps.shuttle.domain.model.BookedRange> potentialBookedRanges, com.real.apps.shuttle.domain.model.BookedRange bookedRange ) { try { if ( ( potentialBookedRanges == null ) || ( potentialBookedRanges.isEmpty () ) ) { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Iterator<com.real.apps.shuttle.domain.model.BookedRange> iterator = potentialBookedRanges.iterator () ; while ( iterator.hasNext () ) { com.real.apps.shuttle.domain.model.BookedRange subject = iterator.next () ; if ( ( subject != null ) && ( subject.coincide ( bookedRange ) ) ) { return false; } } return true; } 
@ org.junit.Test public void testProcessAnd () throws net.torocraft.minecoprocessors.util.ParseException { net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest ( 31, 2, 0, 0, "and a, b" ) ; processor.processAnd () ; net.torocraft.minecoprocessors.processor.ProcessorTest.assertRegisters ( processor, 2, 2, 0, 0 ) ; org.junit.Assert.assertFalse ( processor.zero ) ; try { processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest ( 29, 2, 0, 0, "and a, b" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } processor.processAnd () ; net.torocraft.minecoprocessors.processor.ProcessorTest.assertRegisters ( processor, 0, 2, 0, 0 ) ; org.junit.Assert.assertTrue ( processor.zero ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) private java.util.List<java.lang.Class> getClass ( java.lang.Class clazz, java.util.List<java.lang.Class> classList ) { try { if ( ( clazz.getSuperclass () ) != null ) { if ( com.ai.dubbo.ext.vo.BaseInfo.class.getName () .equals ( clazz.getSuperclass () .getName () ) ) { return classList; } else { classList.add ( clazz.getSuperclass () ) ; return getClass ( clazz.getSuperclass () , classList ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return classList; } 
public java.util.List<ca.ubc.ece.cpen221.mp3.staff.Vertex> getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex vertex ) { java.util.List<ca.ubc.ece.cpen221.mp3.staff.Vertex> upstreamNeighboursList = new java.util.LinkedList<ca.ubc.ece.cpen221.mp3.staff.Vertex> () ; try { for ( int i = 0; i < ( vertexList.size () ) ; i++ ) { if ( adjacencyList.contains ( vertex ) ) { upstreamNeighboursList.add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList.get ( i ) ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return upstreamNeighboursList; } 
public boolean ask ( java.lang.String username, java.lang.String item, int qty, double price ) { try { if ( server.Server.isStockExists ( item ) ) { models.user.User user = new models.user.User ( null, username ) ; server.Server.addAsk ( user, models.trade.Stock.valueOf ( item ) , qty, price, null ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private static boolean isCyclic ( int numberOfCourse, java.util.Map<java.lang.Integer, java.util.Set<java.lang.Integer>> prerequisitePerCourse ) { try { for ( int course = 0; course < numberOfCourse; course++ ) { java.util.Set<java.lang.Integer> targetCourses = new java.util.HashSet<> () ; targetCourses.add ( course ) ; if ( com.sevendragons.practice.leetcode.medium.coursesschedule.Solution.isCourseContainedInPrerequisites ( prerequisitePerCourse, targetCourses, course ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET, value = "/categories/{categoryId}" ) public java.lang.String searchPostsAction ( org.springframework.ui.ModelMap model, @org.springframework.web.bind.annotation.PathVariable ( name = "categoryId" ) final java.lang.String categoryId ) { java.util.List<be.nille.blog.domain.category.Category> categories = categoryService.findAll () ; java.util.List<be.nille.blog.domain.post.Post> posts = postService.findPostsByCategory ( categoryId ) ; try { model.put ( "page", new be.nille.blog.web.controller.post.PostsPage ( posts, categories, null ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "blog/index"; } 
public rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { if ( term == null ) { return null; } rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode.newInstance () ; healthCode.setCode ( term.getLabel () ) ; try { healthCode.setTopLevelTerm ( ( ( term.getParentTerm () ) == null ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } healthCode.setNameSpace ( term.getNameSpace () ) ; healthCode.setDescription ( term.getDescription () ) ; healthCode.setNumberOfSubTerms ( term.getSubTerms () .size () ) ; return healthCode; } 
public void broadcast ( cn.nukkit.Player player ) { java.lang.String translation = cn.nukkit.Server.getInstance () .getLanguage () .translateString ( "chat.type.achievement", player.getDisplayName () , ( ( cn.nukkit.utils.TextFormat.GREEN ) + ( this.getMessage () ) ) , null ) ; try { if ( cn.nukkit.Server.getInstance () .getPropertyBoolean ( "announce-player-achievements", true ) ) { cn.nukkit.Server.getInstance () .broadcastMessage ( translation ) ; } else { player.sendMessage ( translation ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onHandleIntent ( android.content.Intent intent ) { try { if ( com.google.android.gms.location.ActivityRecognitionResult.hasResult ( intent ) ) { com.google.android.gms.location.ActivityRecognitionResult result = com.google.android.gms.location.ActivityRecognitionResult.extractResult ( intent ) ; com.google.android.gms.location.DetectedActivity CurrentActivity = result.getMostProbableActivity () ; if ( ( CurrentActivity.getConfidence () ) >= 75 ) { ActivityRecognitionPlugin.Activity.ActivityType = CurrentActivity.toString () ; ActivityRecognitionPlugin.Activity.Propability = CurrentActivity.getConfidence () ; } else ActivityRecognitionPlugin.Activity.ActivityType = "NotConfidentEnough"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean removeBusiness ( java.lang.String id ) throws java.lang.Exception { com.foodie.app.Helper.DebugHelper.Log ( ( "removeBusiness: id = " + id ) ) ; BusinessRef.child ( id ) .removeValue () ; try { localDB.removeBusiness ( id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<com.foodie.app.entities.Activity> businessActivities = com.foodie.app.database.Converters.cursorToActivityList ( localDB.getActivity ( new java.lang.String[] { id }, new java.lang.String[] { com.foodie.app.entities.Activity.ACTIVITY_BUSINESS_ID } ) ) ; for ( com.foodie.app.entities.Activity ac : businessActivities ) { removeActivity ( ac.get_ID () ) ; } return true; } 
private void highlightArrow ( uk.ac.cam.teamdelta.Direction d ) { javafx.scene.image.ImageView iv = navMap.get ( d ) ; try { if ( iv == null ) { uk.ac.cam.teamdelta.Logger.error ( ( ( "NULL IV - direction" + ( d.getDegrees () ) ) + " was not in direction set" ) ) ; } else { iv.setImage ( hArrow ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPreExecute () { super.onPreExecute () ; mControlsView.setBackgroundColor ( getResources () .getColor ( R.color.transparent_overlay ) ) ; try { main_button.setVisibility ( View.GONE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } imageProgressBar.setVisibility ( View.VISIBLE ) ; fullscreenText.setText ( getResources () .getText ( R.string.loading ) ) ; } 
private void updateParityFlag () { boolean parity = false; for ( byte b = this.state.sfrs.A.getValue () ; b != 0; b = ( ( byte ) ( b & ( b - 1 ) ) ) ) parity = !parity; try { this.state.sfrs.PSW.setBit ( parity, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void setWhys ( java.util.List<java.lang.String> whys ) { getAdvStats () .clearWhyTypes () ; try { if ( whys != null ) { java.util.List<com.brookmanholmes.billiards.turn.AdvStats.WhyType> list = new java.util.ArrayList<> () ; for ( java.lang.String why : whys ) { list.add ( convertStringToWhyType ( context, why ) ) ; } getAdvStats () .whyTypes ( list ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onDataPacket ( net.minecraft.network.NetworkManager net, net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super.onDataPacket ( net, packet ) ; readFromNBT ( packet.getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = this.world.getBlockState ( this.pos ) ; try { this.world.notifyBlockUpdate ( this.pos, state, state, 3 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { try { for ( org.nschmidt.ldparteditor.opengl.OpenGLRenderer renderer : org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.renders ) { org.nschmidt.ldparteditor.composites.Composite3D c3d = renderer.getC3D () ; if ( c3d.getLockableDatFileReference () .equals ( org.nschmidt.ldparteditor.project.Project.getFileToEdit () ) ) { org.nschmidt.ldparteditor.data.VertexManager vm = c3d.getLockableDatFileReference () .getVertexManager () ; vm.addSnapshot () ; loadSelectorSettings () ; vm.selectAllWithSameColours ( sels, true ) ; vm.syncWithTextEditors ( true ) ; return; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onComplete () { if ( done ) { return; } R col = collection; if ( col != null ) { collection = null; if ( emitRemainder ) { queue.offer ( col ) ; } } done = true; try { drain () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void computeTwoCMPProjectionConstraintMatrices () { try { for ( int i = 0; i < ( numberOfFootstepsToConsider ) ; i++ ) { tmpTwoCMPProjection_Aeq.set ( ( 3 * i ) , i, 1.0 ) ; tmpTwoCMPProjection_beq.set ( i, 0, 1.0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void obtainObjectReferences () { try { if ( ( rawTextPanel ) == null ) { rawTextPanel = getMainFrame () .getRawTextPanel () ; imagePanel = getMainFrame () .getImagePanel () ; jnPanel = getMainFrame () .getJNPanel () ; statefulObjects.put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_JOVENOTESPANEL, jnPanel ) ; statefulObjects.put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_RAWTEXTPANEL, rawTextPanel ) ; statefulObjects.put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_IMAGEPANEL, imagePanel ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void getBytes ( java.io.OutputStream outputStream ) throws java.io.IOException { java.io.BufferedOutputStream bufferedOutputStream = new java.io.BufferedOutputStream ( outputStream ) ; java.nio.ByteBuffer byteBuffer = java.nio.ByteBuffer.allocate ( ( ( java.lang.Long.BYTES ) * 2 ) ) ; byteBuffer.putLong ( id.getMostSignificantBits () ) ; byteBuffer.putLong ( id.getLeastSignificantBits () ) ; bufferedOutputStream.write ( byteBuffer.array () ) ; getBytesFromPedestrianInfo ( personA, bufferedOutputStream ) ; getBytesFromPedestrianInfo ( personB, bufferedOutputStream ) ; try { bufferedOutputStream.flush () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Integer getLatOffset ( double lat, double lon, double offset, boolean checkOutside ) { java.awt.Point p = tileSource.latLonToXY ( lat, lon, zoom ) ; int y = ( ( p.y ) - ( center.y ) ) - ( ( getHeight () ) / 2 ) ; try { if ( checkOutside && ( ( y < 0 ) || ( y > ( getHeight () ) ) ) ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return y; } 
@ org.junit.Test public void setPerformed () throws java.lang.Exception { int numOfFinishedTasks = repo.getDurationInfo ( 1 ) .getNumOfFinishedTasks () ; org.junit.Assert.assertEquals ( "There should be no finished tasks, yet", 0, numOfFinishedTasks, 0 ) ; repo.setPerformed ( 1, 5 ) ; try { numOfFinishedTasks = repo.getDurationInfo ( 1 ) .getNumOfFinishedTasks () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( "There should be 1 finished task now", 1, numOfFinishedTasks, 0 ) ; } 
public int pull_chunk ( byte[] data_buffer, double[] timestamp_buffer, double timeout ) throws java.lang.Exception { int[] ec = new int[] { 0 }; long res = edu.ucsd.sccn.LSL.inst.lsl_pull_chunk_c ( obj, data_buffer, timestamp_buffer, data_buffer.length, timestamp_buffer.length, timeout, ec ) ; try { edu.ucsd.sccn.LSL.check_error ( ec ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( int ) ( res ) ) ; } 
void ojld ( int num1, int num2 ) { this.maxcommom = 1; num1 = java.lang.Math.abs ( num1 ) ; try { num2 = java.lang.Math.abs ( num2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( num2 > num1 ) { int temp = num2; num2 = num1; num1 = temp; } if ( num2 == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { this.maxcommom = num2; return; } int temp = num1 % num2; ojld ( num2, temp ) ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call<com.example.Dao.ListDao> call, retrofit2.Response<com.example.Dao.ListDao> response ) { filterBeen.addAll ( response.body () .getDATA () .getFilter () ) ; try { com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.mData.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.mData.addAll ( response.body () .getDATA () .getProducts () ) ; com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.bAdapter.notifyDataSetChanged () ; } 
@ java.lang.Override public void onPageSelected ( int position ) { try { switch ( position ) { case 0: findViewById ( R.id.gameRelativeLayout ) .setVisibility ( View.VISIBLE ) ; mSetGridView.setVisibility ( View.INVISIBLE ) ; break; case 1: findViewById ( R.id.gameRelativeLayout ) .setVisibility ( View.INVISIBLE ) ; mSetGridView.setVisibility ( View.VISIBLE ) ; populateSetGridView () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest, int flags ) { dest.writeString ( this.path ) ; dest.writeLong ( this.dateModified ) ; try { dest.writeString ( this.mime ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dest.writeLong ( this.id ) ; dest.writeLong ( this.size ) ; dest.writeByte ( ( this.selected ? ( ( byte ) ( 1 ) ) : ( ( byte ) ( 0 ) ) ) ) ; } 
public void connect ( java.lang.String host ) throws java.io.IOException, java.net.SocketTimeoutException, java.net.UnknownHostException { decc.Peer pair = new decc.Peer ( this, host, this.port ) ; try { pairs.put ( pair.getHostName () , pair ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( pairs.size () ) == 1 ) && ( ( ip ) != null ) ) pair.sendBrcast ( ip ) ; } 
public static org.vitrivr.cineast.core.config.Config loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () .toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config.class ) ; org.vitrivr.cineast.core.config.Config.LOGGER.info ( "Config file loaded!" ) ; try { if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER.warn ( "Could not read config file '{}'.", name ) ; return null; } else { return config; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void init () { try { for ( lightpos.light[] parent : parents ) { for ( int i = 0; i < ( nNumber ) ; i++ ) { parent[i] = new lightpos.light ( generatorRandom.nextInt ( ( ( roomWidth ) + 1 ) ) , generatorRandom.nextInt ( ( ( roomLength ) + 1 ) ) , generatorRandom.nextInt ( 5 ) , true ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onServiceConnected ( android.content.ComponentName componentName, android.os.IBinder service ) { mBluetoothLeService = ( ( com.cooper.wheellog.BluetoothLeService.LocalBinder ) ( service ) ) .getService () ; if ( ! ( mBluetoothLeService.initialize () ) ) { android.util.Log.e ( TAG, "Unable to initialize Bluetooth" ) ; finish () ; } try { if ( mBluetoothLeService.isConnected () ) { mConnectionState = BluetoothLeService.STATE_CONNECTED; buttonConnect.setText ( "DISCONNECT" ) ; buttonConnect.setEnabled ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { db.addReading ( new database.Reading ( java.lang.System.currentTimeMillis () , application.processingService.getAcc1X () , application.processingService.getAcc1Y () , application.processingService.getAcc1Z () , application.processingService.getAcc2X () , application.processingService.getAcc2Y () , application.processingService.getAcc2Z () , app.edi.palmprothesismotionmonitoring.MainActivity.actionType ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void remove ( java.lang.Object object ) { if ( ( internalList ) == null ) return; try { for ( int ic = 0; ic < ( internalList.size () ) ; ic++ ) { if ( internalList.get ( ic ) .getReturnValue () .equals ( object ) ) { internalList.remove ( ic ) ; this.remove ( object ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<org.fife.ui.rsyntaxtextarea.DocumentRange> getMarkedOccurrences () { java.util.List<org.fife.ui.rsyntaxtextarea.DocumentRange> list = new java.util.ArrayList<org.fife.ui.rsyntaxtextarea.DocumentRange> ( markedOccurrences.size () ) ; try { for ( org.fife.ui.rsyntaxtextarea.HighlightInfo info : markedOccurrences ) { int start = info.getStartOffset () ; int end = ( info.getEndOffset () ) + 1; if ( start <= end ) { org.fife.ui.rsyntaxtextarea.DocumentRange range = new org.fife.ui.rsyntaxtextarea.DocumentRange ( start, end ) ; list.add ( range ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return list; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { try { checkConnection () ; } catch ( Exception ex ) { ex.printStackTrace () ; } theView.setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView.setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView, theConnection, theView ) ; theConnection.setCreateAccountController ( caController ) ; } 
@ java.lang.Deprecated public void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json.newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json.newObject () ; jsonNotification.put ( "action", action ) ; action.put ( "action", "addTimeNotification" ) ; try { jsonNotification.put ( "alarmId", id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } notifyAll ( jsonNotification ) ; } 
@ java.lang.Override public void update () { if ( ( world () ) == null ) return; super.update () ; if ( world () .isRemote ) return; if ( tick ( 0 ) ) processInputs () ; try { if ( tick ( 1 ) ) processAspects () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( tick ( 2 ) ) processStorage () ; } 
public void onClick ( android.content.DialogInterface dialog, int id ) { java.lang.String name = userInput.getText () .toString () ; try { if ( ! ( com.nineworldsdeep.gauntlet.Utils.stringIsNullOrWhitespace ( name ) ) ) { com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile f = new com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile () ; f.setDeviceName ( name ) ; f.save () ; com.nineworldsdeep.gauntlet.Utils.toast ( this, "device name stored" ) ; } else { com.nineworldsdeep.gauntlet.Utils.toast ( this, "invalid device name" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void clearAuction () { try { for ( int i = 0; i < ( bids.length ) ; i++ ) { if ( ( bids[i] ) > 0 ) { bountyState.getAgents () [i].receiveResource ( res ) ; bids[i] = 0; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setListData () { try { customListViewValuesArr.add ( new com.example.nguyennam.financialbook.model.RecordSpinner ( getResources () .getString ( R.string.Expense ) , getResources () .getString ( R.string.ExpenseDescription ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } customListViewValuesArr.add ( new com.example.nguyennam.financialbook.model.RecordSpinner ( getResources () .getString ( R.string.Income ) , getResources () .getString ( R.string.IncomeDescription ) ) ) ; } 
private com.louiscarrese.clopecounter.model.Jour createJour () { io.realm.Realm realm = io.realm.Realm.getDefaultInstance () ; long id; if ( ( realm.where ( com.louiscarrese.clopecounter.model.Jour.class ) .count () ) > 0 ) { id = ( realm.where ( com.louiscarrese.clopecounter.model.Jour.class ) .maximumInt ( "id" ) ) + 1; } else { id = 1; } com.louiscarrese.clopecounter.model.Jour j = new com.louiscarrese.clopecounter.model.Jour () ; try { j.setId ( id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return j; } 
public static void applyConfigChanges () { com.sonicether.soundphysics.SoundPhysics.globalReverbMultiplier = 0.7F * ( Config.globalReverbGain ) ; com.sonicether.soundphysics.SoundPhysics.soundDistanceAllowance = Config.soundDistanceAllowance; try { if ( ( com.sonicether.soundphysics.SoundPhysics.auxFXSlot0 ) != 0 ) { com.sonicether.soundphysics.SoundPhysics.setReverbParams ( com.sonicether.soundphysics.ReverbParams.getReverb0 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot0, com.sonicether.soundphysics.SoundPhysics.reverb0 ) ; com.sonicether.soundphysics.SoundPhysics.setReverbParams ( com.sonicether.soundphysics.ReverbParams.getReverb1 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot1, com.sonicether.soundphysics.SoundPhysics.reverb1 ) ; com.sonicether.soundphysics.SoundPhysics.setReverbParams ( com.sonicether.soundphysics.ReverbParams.getReverb2 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot2, com.sonicether.soundphysics.SoundPhysics.reverb2 ) ; com.sonicether.soundphysics.SoundPhysics.setReverbParams ( com.sonicether.soundphysics.ReverbParams.getReverb3 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot3, com.sonicether.soundphysics.SoundPhysics.reverb3 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.individual.thinking.traitorstown.game.Effect createEffect ( com.individual.thinking.traitorstown.game.EffectType type, com.individual.thinking.traitorstown.game.Effect effect ) { java.util.Optional<com.individual.thinking.traitorstown.game.Effect> existingEffect = effectRepository.findByEffectType ( type ) ; try { if ( existingEffect.isPresent () ) { com.individual.thinking.traitorstown.game.CardService.Effects.put ( type, existingEffect.get () ) ; return existingEffect.get () ; } else { effectRepository.save ( effect ) ; com.individual.thinking.traitorstown.game.CardService.Effects.put ( type, effect ) ; return effect; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.osgi.service.component.annotations.Activate protected void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder.getInstance () .setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory.createCarbonRuntime ( configProvider ) ; try { bundleContext.registerService ( org.wso2.carbon.kernel.CarbonRuntime.class.getName () , carbonRuntime, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void characters ( final char[] chr, final int start, final int length ) throws org.xml.sax.SAXException { final java.lang.String text = new java.lang.String ( chr ) .substring ( start, ( start + length ) ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG.trace ( "characters; '{}'", text ) ; final java.lang.String trimmedText = text.trim () ; try { io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG.info ( "text: '{}'", trimmedText ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.textStack.push ( trimmedText ) ; } 
public void move ( int from, int to ) { int lastPos = getPosition () ; super.add ( to, super.remove ( from ) ) ; try { mObservable.notifyChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( from == lastPos ) moveToPosition ( to ) ; else if ( ( from < lastPos ) && ( to >= lastPos ) ) moveToPosition ( ( lastPos - 1 ) ) ; else if ( ( from > lastPos ) && ( to <= lastPos ) ) moveToPosition ( ( lastPos + 1 ) ) ; } 
@ java.lang.Override public java.util.List<cz.mzk.recordmanager.server.oai.model.OAIRecord> read () { if ( finished ) { return null; } cz.mzk.recordmanager.server.oai.model.OAIListRecords listRecords = harvester.listRecords ( resumptionToken ) ; resumptionToken = listRecords.getNextResumptionToken () ; if ( ( ( resumptionToken ) == null ) || ( resumptionToken.isEmpty () ) ) { finished = true; } try { if ( listRecords.getRecords () .isEmpty () ) { return null; } else { return listRecords.getRecords () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { org.eclipse.emf.common.util.EList<java.lang.String> images = api.listAvailableImages () ; try { if ( ! ( images.contains ( baseICEImage ) ) ) { console.print ( ( baseICEImage + " image not found locally. Pulling from Dockerhub..." ) ) ; api.pull ( baseICEImage ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void update () { if ( ( ( state ) != ( AbilityState.INITIALIZING ) ) && ( initializeAnimation.isDone () ) ) { projectiles.add ( new animation.effects.FireballProjectile ( entity, entity.getMapCollisionDetection () ) ) ; } try { super.update () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testParseFileName () { try { for ( com.google.code.tvrenamer.TVRenamerTest.TestInput testInput : com.google.code.tvrenamer.TVRenamerTest.values ) { com.google.code.tvrenamer.model.FileEpisode retval = com.google.code.tvrenamer.controller.TVRenamer.parseFilename ( testInput.input ) ; org.junit.Assert.assertNotNull ( retval ) ; org.junit.Assert.assertEquals ( testInput.input, testInput.show, retval.getShowName () ) ; org.junit.Assert.assertEquals ( testInput.input, java.lang.Integer.parseInt ( testInput.season ) , retval.getSeasonNumber () ) ; org.junit.Assert.assertEquals ( testInput.input, java.lang.Integer.parseInt ( testInput.episode ) , retval.getEpisodeNumber () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void removeTopCard () { android.view.View child = getChildAt ( ( ( getChildCount () ) - 1 ) ) ; try { if ( child != null ) { child.setOnTouchListener ( null ) ; child.setX ( 0 ) ; child.setY ( 0 ) ; child.setRotation ( 0 ) ; removeView ( child ) ; lastRemovedView = child; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( getChildCount () ) <= 0 ) && ( ( eventCallback ) != null ) ) { eventCallback.cardsDepleted () ; } } 
@ java.lang.Override public void parseValue ( java.lang.String valueString ) { try { if ( valueString == null ) { setValue ( null ) ; } else { io.pelle.mango.client.FileVO file = ( ( io.pelle.mango.client.FileVO ) ( getValue () ) ) ; if ( file == null ) { file = new io.pelle.mango.client.FileVO () ; setValue ( file ) ; } file.setFileUUID ( valueString ) ; setValue ( file ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void writeToPacket ( io.netty.buffer.ByteBuf buf ) { net.minecraftforge.fluids.FluidStack fluidStack = ( ( this.tank[0] ) != null ) ? this.tank[0].getFluid () : null; int fluidAmount = -1; int fluidID = -1; try { if ( fluidStack != null ) { fluidAmount = fluidStack.amount; fluidID = fluidStack.getFluidID () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } buf.writeInt ( fluidAmount ) ; buf.writeInt ( fluidID ) ; buf.writeBoolean ( isActive ) ; } 
@ java.lang.Override public boolean canAct ( org.roda.wui.client.common.actions.Actionable.Action<org.roda.core.data.v2.ip.IndexedAIP> action, org.roda.core.data.v2.ip.IndexedAIP aip ) { boolean canAct; try { if ( aip.equals ( org.roda.wui.client.common.actions.AipActions.NO_AIP_OBJECT ) ) { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_NO_AIP.contains ( action ) ; } else if ( AIPState.UNDER_APPRAISAL.equals ( aip.getState () ) ) { canAct = ( org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP.contains ( action ) ) || ( org.roda.wui.client.common.actions.AipActions.APPRAISAL_ACTIONS.contains ( action ) ) ; } else { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP.contains ( action ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return canAct; } 
public java.util.concurrent.Future<?> enqueue ( com.hortonworks.streamline.streams.notification.Notifier notifier, com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier, notification ) ; java.util.concurrent.Future<?> future = executorService.submit ( task ) ; try { taskMap.put ( notification.getId () , org.apache.commons.lang3.tuple.Pair.of ( task, future ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return future; } 
private void insTypeFocusLost ( java.awt.event.FocusEvent evt ) { try { if ( ( insType.getSelectedIndex () ) == 0 ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( insType.getSelectedItem () .toString () .length () ) <= 0 ) return; type = utils.E_Types.valueOf ( ( ( java.lang.String ) ( insType.getSelectedItem () ) ) ) ; } 
@ java.lang.Override public void start () throws org.mindroid.impl.statemachine.NoStartStateException { try { if ( ( startState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this ( ID:'" + ( getID () ) ) + "' ) Statemachine. Use setStartState ( .. ) to specify a State to begin with!" ) ) ; } else { currentState = startState; this.isActive = true; currentState.activate () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static org.elasticsearch.hadoop.serialization.dto.mapping.Field skipHeaders ( org.elasticsearch.hadoop.serialization.dto.mapping.Field field ) { org.elasticsearch.hadoop.serialization.dto.mapping.Field[] props = field.properties () ; try { if ( ( ( ( ( props.length ) > 0 ) && ( ( props[0] ) != null ) ) && ( "mappings".equals ( props[0].name () ) ) ) && ( FieldType.OBJECT.equals ( props[0].type () ) ) ) { return props[0].properties () [0]; } } catch ( Exception ex ) { ex.printStackTrace () ; } return field; } 
@ org.junit.Test public void shouldFindApplicationByExactName () throws java.lang.Exception { java.util.Set<io.gravitee.repository.management.model.Application> apps = applicationRepository.findByName ( "searched-app1" ) ; assertNotNull ( apps ) ; try { assertEquals ( 1, apps.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( "searched-app1", apps.iterator () .next () .getId () ) ; } 
private boolean searchFor ( java.lang.String path, java.lang.String user ) throws com.dropbox.core.DbxException { java.util.List<com.dropbox.core.DbxEntry> result; result = ConnectionInit.client.searchFileAndFolderNames ( path, user ) ; try { for ( com.dropbox.core.DbxEntry f : result ) { if ( f.name.equals ( user ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void done ( byte[] data, com.parse.ParseException e ) { try { if ( e == null ) { android.util.Log.d ( "test", "We've got data in data." ) ; M.setImage ( data ) ; messages.add ( M ) ; pb.setProgress ( 60 ) ; customAdapter = new com.ferran.yep.views.InboxAdapter ( getActivity () , R.layout.custom_inbox_row, messages ) ; setListAdapter ( customAdapter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.udacity.gradle.joketeller.Joke loadInBackground () { int retryCount = 0; com.udacity.gradle.joketeller.Joke joke = loadJoke () ; try { if ( ( ( lastJoke ) != null ) && ( joke != null ) ) { while ( ( joke.equals ( lastJoke ) ) && ( retryCount < ( com.udacity.gradle.builditbigger.MainActivity.RETRY_LIMIT ) ) ) { timber.log.Timber.d ( "Got the same joke, looking for fresh material!" ) ; joke = loadJoke () ; retryCount++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return joke; } 
public boolean updateIndent ( com.hlz.webModel.IndentModel model ) { com.hlz.entity.Indent indent = dao.updateIndent ( model ) ; try { if ( indent != null ) { messaging.convertAndSend ( "/topic/update", indent.getId () ) ; rabbitTemplate.convertAndSend ( "update-indent", indent.getId () ) ; return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void turnon () { try { switch ( currentState ) { case SWITCHINGOFF: case OFF: setState ( hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.SWITCHINGON ) ; if ( ( onOffEvent ) == null ) { new hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.PowerStateDelayer ( onTransition, hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING ) ; } else { onOffEvent.addFurtherTasks ( onTransition ) ; onOffEvent.setNewState ( hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING ) ; } break; case RUNNING: case SWITCHINGON: java.lang.System.err.println ( "WARNING: an already running PM was tasked to switch on!" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.Collection<com.google.protobuf.Descriptors.FieldDescriptor> findSourceFields ( com.google.protobuf.Descriptors.FieldDescriptor enrichmentField ) { final java.lang.String byOptionArgument = enrichmentField.getOptions () .getExtension ( EventAnnotationsProto.by ) ; try { com.google.common.base.Preconditions.checkNotNull ( byOptionArgument ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final int pipeSeparatorIndex = byOptionArgument.indexOf ( org.spine3.server.event.enrich.ReferenceValidator.PIPE_SEPARATOR ) ; if ( pipeSeparatorIndex < 0 ) { return java.util.Collections.singleton ( findSourceFieldByName ( byOptionArgument, enrichmentField, true ) ) ; } else { final java.lang.String[] targetFieldNames = org.spine3.server.event.enrich.ReferenceValidator.PATTERN_PIPE_SEPARATOR.split ( byOptionArgument ) ; return findSourceFieldsByNames ( targetFieldNames, enrichmentField ) ; } } 
@ java.lang.Override public void connect ( net.minecraft.world.World world, refinedstorage.api.network.INetworkMaster network ) { try { if ( network.canRun () ) { this.network = network; this.connected = true; this.network.addSlave ( this ) ; world.notifyNeighborsOfStateChange ( pos, getBlockType () ) ; if ( canSendConnectivityUpdate () ) { refinedstorage.RefinedStorageUtils.updateBlock ( world, pos ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addOrderRecord ( int orderId, double total ) { android.content.ContentValues values = new android.content.ContentValues () ; try { values.put ( com.samdevlin.restbite.database.ClientDatabase.COLUMN_ORDER_ID, orderId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db.insert ( com.samdevlin.restbite.database.ClientDatabase.TABLE_ORDERRECORD, null, values ) ; db.close () ; } 
private common.UndirectedGraphNode cloneGraph ( common.UndirectedGraphNode node, java.util.HashMap<common.UndirectedGraphNode, common.UndirectedGraphNode> nodes ) { common.UndirectedGraphNode newNode = new common.UndirectedGraphNode ( node.label ) ; try { nodes.put ( node, newNode ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( common.UndirectedGraphNode neighbor : node.neighbors ) { common.UndirectedGraphNode newNeighbor = nodes.get ( neighbor ) ; if ( newNeighbor == null ) { newNeighbor = cloneGraph ( neighbor, nodes ) ; } newNode.neighbors.add ( newNeighbor ) ; } return newNode; } 
public java.lang.String getRunTitle ( android.content.Context context ) { try { if ( android.text.TextUtils.isEmpty ( mRun.getTitle () ) ) { if ( ( mRun.getRunIndex () ) != ( -1 ) ) { return context.getString ( R.string.run_label, java.lang.Integer.toString ( ( ( mRun.getRunIndex () ) + 1 ) ) ) ; } else { return context.getString ( R.string.run_label, "" ) ; } } else { return mRun.getTitle () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View v = inflater.inflate ( R.layout.fragment_wishlist_item_list, container, false ) ; try { mListView = ( ( android.widget.ListView ) ( v.findViewById ( android.R.id.list ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return v; } 
@ java.lang.Override public int compare ( com.example.nickozoulis.teamproj.domain.Referee lRef, com.example.nickozoulis.teamproj.domain.Referee rRef ) { int res = firstClassOrdering ( lRef, rRef ) ; try { if ( res == 0 ) { res = secondClassOrdering ( lRef, rRef ) ; if ( res == 0 ) { res = thirdClassOrdering ( lRef, rRef ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return res; } 
public void run ( @org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator progressIndicator ) { try { if ( Utils.debug ) { com.intellij.perlplugin.Utils.print ( "parsing started" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } long start = java.lang.System.currentTimeMillis () ; com.intellij.perlplugin.PerlInternalParser.parseAllSources ( progressIndicator ) ; long end = java.lang.System.currentTimeMillis () ; if ( Utils.debug ) { com.intellij.perlplugin.Utils.print ( ( ( "update completed in " + ( ( end - start ) / 1000 ) ) + "sec" ) ) ; } } 
void showResult ( java.lang.String result ) { try { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () .findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; } resultFragment.setResult ( result ) ; getSupportFragmentManager () .beginTransaction () .replace ( R.id.outputFrame, resultFragment ) .commit () ; } else { startActivity ( new android.content.Intent ( this, com.example.uvdoha.translate.ResultActivity.class ) .putExtra ( "result", result ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.support.annotation.Nullable public com.taobao.weex.WXSDKInstance takeCachedInstance ( @android.support.annotation.Nullable java.lang.String targetUrl ) { if ( ! ( mRemoteConfig.isSwitchOn () ) ) { com.taobao.weex.utils.WXLogUtils.d ( com.taobao.weex.appfram.prerender.PreRenderManager.TAG, "takeCachedInstance failed. switch is off" ) ; return null; } if ( android.text.TextUtils.isEmpty ( targetUrl ) ) { return null; } com.taobao.weex.appfram.prerender.IPreRenderCache.Entry entry = mInternalCache.get ( targetUrl ) ; try { if ( ( ( entry != null ) && ( ( entry.data ) != null ) ) && ( entry.isFresh () ) ) { return entry.data; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.exist.security.Subject popSubject () { try { if ( org.exist.storage.DBBroker.LOG.isTraceEnabled () ) { org.exist.storage.DBBroker.LOG.trace ( java.lang.String.format ( "%s: popSubject ( %s ) from: %s %s", getId () , getCurrentSubject () .getName () , java.lang.Thread.currentThread () , org.exist.util.Stacktrace.top ( java.lang.Thread.currentThread () .getStackTrace () , 10 ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this.subject.removeFirst () ; } 
@ org.junit.Test public void get_NotPresent () { com.marc.collections.SkipList<java.lang.Integer> mySkipList = new com.marc.collections.SkipList ( 4 ) ; mySkipList.add ( new java.lang.Integer ( 5 ) ) ; mySkipList.add ( new java.lang.Integer ( 6 ) ) ; mySkipList.add ( new java.lang.Integer ( 10 ) ) ; mySkipList.add ( new java.lang.Integer ( 7 ) ) ; try { org.junit.Assert.assertFalse ( mySkipList.contains ( new java.lang.Integer ( 8 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void onRightDrawerOpened () { java.lang.String properties = getResources () .getString ( R.string.properties ) ; java.lang.String tool = getResources () .getString ( getTool () .getName () ) ; try { actionBar.setTitle ( ( ( properties + ": " ) + tool ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void CalculatejButtonActionPerformed ( java.awt.event.ActionEvent evt ) { try { if ( ( ! ( SidesjTextField.getText () .isEmpty () ) ) && ( ! ( LengthjTextField.getText () .isEmpty () ) ) ) { validateInput ( SidesjTextField, LengthjTextField ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onCreate ( android.os.Bundle bundle ) { super.onCreate ( bundle ) ; setContentView ( R.layout.after_the_game ) ; intentFromGameActivity = getIntent () ; level = ( ( com.teamzenith.game.zpuzzle.model.Level ) ( intentFromGameActivity.getSerializableExtra ( "Level" ) ) ) ; try { createComponents () ; } catch ( Exception ex ) { ex.printStackTrace () ; } actions () ; } 
public void createAccessToken ( java.lang.String result ) { com.alibaba.fastjson.JSONObject tmp = com.alibaba.fastjson.JSON.parseObject ( result ) ; if ( result.contains ( "access_token" ) ) { setAccessToken ( tmp.getString ( "access_token" ) ) ; } else { setAccessToken ( tmp.getString ( "component_access_token" ) ) ; } try { setExpiresIn ( ( ( ( tmp.getLong ( "expires_in" ) ) - 60 ) * 1000 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void drainUntil ( long upToNanos ) { long now = timeNanos; java.util.concurrent.PriorityBlockingQueue<hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask> q = queue; try { for ( ; ; ) { hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask tt = q.peek () ; if ( ( tt == null ) || ( ( tt.dueNanos ) > upToNanos ) ) { break; } q.remove ( tt ) ; timeNanos = tt.dueNanos; tt.run () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } timeNanos = upToNanos; } 
public edu.vt.ece5574.agents.Robot createRobot () { sim.util.Int2D pos = genStartPos () ; edu.vt.ece5574.agents.Robot robot = new edu.vt.ece5574.agents.Robot ( state, java.lang.String.valueOf ( agentsInBld.size () ) , id, pos.getX () , pos.getY () ) ; try { agents.setObjectLocation ( robot, pos.getX () , pos.getY () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } agentsInBld.add ( robot ) ; state.addAgent ( robot ) ; return robot; } 
public void updateLockedLevels () { try { for ( int i = 0; i < ( buttons ) ; i++ ) { if ( com.darkhouse.gdefence.GDefence.getInstance () .user.getLevelAvailable ( ( ( firstButtonInt ) + i ) ) ) { levels[i].unLock () ; } else { levels[i].lock () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<org.jivesoftware.openfire.mix.mam.ArchivedMixChannelMessage> execute () { try { if ( ( end ) != null ) { if ( ( limit ) == 0 ) { return repository.findTimeBoundMessagesByChannel ( channelName, start, end ) ; } else { return repository.findLimitedTimeBoundMessagesByChannel ( channelName, start, end, limit ) ; } } else { if ( ( limit ) == 0 ) { return repository.findMessagesByChannelSince ( channelName, start ) ; } else { return repository.findLimitedMessagesByChannelSince ( channelName, start, limit ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void update ( codeu.chat.common.ConversationSummary owningConversation ) { final codeu.chat.common.User u = ( owningConversation == null ) ? null : clientContext.user.lookup ( owningConversation.owner ) ; messageOwnerLabel.setText ( ( "Owner: " + ( u == null ? owningConversation == null ? "" : owningConversation.owner : u.name ) ) ) ; try { messageConversationLabel.setText ( ( "Conversation: " + ( owningConversation == null ? "" : owningConversation.title ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getAllMessages ( owningConversation, true ) ; } 
@ java.lang.Override void restoreLastSession () { init () ; java.util.Set<modbus.SlaveNode> slavescopy = new java.util.HashSet<modbus.SlaveNode> ( slaves ) ; slaves.clear () ; try { for ( modbus.SlaveNode sn : slavescopy ) { if ( ( sn.node ) != ( node ) ) { addSlave ( sn.node ) ; } else { slaves.add ( sn ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void shutdown () { java.lang.System.out.println ( "\n\n\n" ) ; java.lang.System.out.println ( " ********* Graceful exit initiated" ) ; producer.shutdown () ; java.lang.System.out.println ( " ********* Destroying xMsg context : done" ) ; registrar.shutdown () ; try { java.lang.System.out.println ( " ********* Registrar shudown : done" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } proxy.shutdown () ; java.lang.System.out.println ( " ********* Proxy service shudown : done" ) ; java.lang.System.out.println ( " ********* Exiting Data Distribution\n\n" ) ; java.lang.System.exit ( 0 ) ; } 
void restore () { init ( mVertexShader, mFragmentShader ) ; init () ; mAmbientColor.refresh () ; if ( ( mLights ) != null ) { for ( com.gplibs.magicsurfaceview.Light l : mLights ) { l.restore () ; } } try { if ( ( mSurfaces ) != null ) { for ( com.gplibs.magicsurfaceview.MagicBaseSurface<?> s : mSurfaces ) { s.restore () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected boolean checkBabySteps () { try { if ( ( ( this.moveCounter ) >= 10 ) && ( this.notEarnBabyStep () ) ) { achievements.get ( "BabySteps" ) .setIsEarned ( true ) ; popingUp.push ( "BabySteps" ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void stopTick () { try { if ( ( this.IntentReceiver ) != null ) { this.context.unregisterReceiver ( this.IntentReceiver ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( this.Handler ) != null ) { this.Handler.removeCallbacks ( this.Ticker ) ; } } 
@ java.lang.Override public void onBindViewHolder ( group.g203.countables.path.detail.view.DateViewHolder holder, int position ) { setPresenter ( holder ) ; try { holder.ivRemove.setTag ( mDates.get ( position ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mPresenter.setDateFormat ( holder.tvDate, mDates.get ( position ) ) ; mPresenter.handleDateColor ( holder.tvDate ) ; mPresenter.setRemoveClick ( holder.ivRemove ) ; } 
public void setServiceDown () { com.antest1.kcanotify.KcaService.isPortAccessed = false; if ( ( missionTimeScheduler ) != null ) { missionTimeScheduler.shutdown () ; } handler = null; nHandler = null; try { mediaPlayer.release () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mediaPlayer = null; stopForeground ( true ) ; notifiManager.cancelAll () ; currentPortDeckData = null; viewNotificationBuilder = null; com.antest1.kcanotify.KcaService.isServiceOn = false; } 
java.lang.Object _call ( railo.runtime.PageContext pc, railo.runtime.type.Collection.Key key, railo.runtime.type.Struct namedArgs, java.lang.Object[] args, boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( pc, key, false, superAccess ) ; try { if ( member instanceof railo.runtime.type.UDF ) { return _call ( pc, ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs, args ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return onMissingMethod ( pc, ( -1 ) , member, key.getString () , args, namedArgs, superAccess ) ; } 
private void loadData () { try { if ( isOnline () ) { errorText.setText ( R.string.error_message ) ; posterAdapter.setAllMoviesOnPage ( null ) ; showMovieData () ; new com.kacper.popularmovies.FetchMovieVolley ( this ) .getRequest ( actualSortingOrder, this ) ; } else { errorText.setText ( R.string.internet_error ) ; showErrorMessage ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setStyleBarLongVisibility ( boolean value ) { try { if ( ( app.allowStylebar () ) && ( ( titleBarPanel ) != null ) ) { dockPanel.setWidgetSize ( titleBarPanel, ( value ? 44 : 0 ) ) ; titleBarPanel.setStyleName ( "TitleBarPanel-open", value ) ; setLongStyleBar ( value ) ; deferredOnResize () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void replaceFragment ( android.support.v4.app.Fragment fragment, java.lang.String tag ) { android.support.v4.app.FragmentManager manager = getSupportFragmentManager () ; try { manager.beginTransaction () .setCustomAnimations ( R.anim.category_fragment_right_in, R.anim.category_fragment_left_out, R.anim.category_fragment_left_in, R.anim.category_fragment_right_out ) .hide ( getSupportFragmentManager () .findFragmentByTag ( com.bookstore.main.MainBookListFragment.class.getSimpleName () ) ) .addToBackStack ( null ) .add ( R.id.container_view, fragment, tag ) .commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void joinServer ( java.net.InetSocketAddress server ) { java.lang.String host = server.getHostString () ; int port = server.getPort () ; net.minecraft.client.multiplayer.ServerData serverData = new net.minecraft.client.multiplayer.ServerData ( "Sponge API Call", ( ( host + ":" ) + port ) , false ) ; try { net.minecraftforge.fml.client.FMLClientHandler.instance () .connectToServer ( this.currentScreen, serverData ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.apache.drill.common.expression.PathSegment.ArraySegment cloneWithNewChild ( org.apache.drill.common.expression.PathSegment newChild ) { org.apache.drill.common.expression.PathSegment.ArraySegment seg = ( ( index ) < 0 ) ? new org.apache.drill.common.expression.PathSegment.ArraySegment ( null ) : new org.apache.drill.common.expression.PathSegment.ArraySegment ( index ) ; try { if ( ( child ) != null ) { seg.setChild ( child.cloneWithNewChild ( newChild ) ) ; } else { seg.setChild ( newChild ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return seg; } 
public org.openforis.collect.model.NodeChangeSet addAttribute ( org.openforis.idm.model.Entity parentEntity, java.lang.String attributeName, org.openforis.idm.model.Value value, org.openforis.collect.model.FieldSymbol symbol, java.lang.String remarks ) { org.openforis.idm.model.Attribute<?, ?> attribute = performAttributeAdd ( parentEntity, attributeName, value, symbol, remarks ) ; try { setMissingValueApproved ( parentEntity, attributeName, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( value == null ) { applyInitialValue ( attribute, true ) ; } org.openforis.collect.model.NodeChangeMap changeMap = new org.openforis.collect.model.NodeChangeMap () ; changeMap.addAttributeAddChange ( attribute ) ; return afterAttributeInsertOrUpdate ( changeMap, attribute ) ; } 
public java.lang.String getTextContent () { boolean saveTextContentOld; saveTextContentOld = saveTextContent; saveTextContent = true; try { if ( ! ( getNextNode () ) ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } saveTextContent = saveTextContentOld; if ( ( nodeType ) != ( org.quicktionary.backend.parsers.XMLParser.NodeType.TEXT ) ) { return null; } return textContent.toString () ; } 
public void printAdjList () { try { if ( ( ( adjList ) == null ) || ( ( adjList.size () ) == 0 ) ) { java.lang.System.out.println ( "The adjacency list is not set yet." ) ; } else { java.lang.System.out.println ( "Start printing adjacency list:" ) ; for ( graph.undirectedGraph.UGNode n : adjList.values () ) n.print () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void render ( com.badlogic.gdx.graphics.g2d.SpriteBatch batch ) { try { for ( int currentX = 0; currentX < ( innerTiles.length ) ; currentX++ ) { for ( int currentY = 0; currentY < ( innerTiles[0].length ) ; currentY++ ) { innerTiles[currentX][currentY].render ( batch ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; try { while ( ( builder.length () ) < length ) { builder.append ( se.rupy.http.Event.BASE_58[java.lang.Math.abs ( ( ( se.rupy.http.Event.random.nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return builder.toString () ; } 
@ javax.ws.rs.GET @javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @javax.ws.rs.PathParam ( value = "type" ) java.lang.String type, @javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null; try { if ( id != null ) { switch ( type ) { case "proj": io.hops.hopsworks.common.dao.project.Project proj = projectFacade.find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; break; case "ds": info = datasetInfo ( id ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return noCacheResponse.getNoCacheResponseBuilder ( Response.Status.OK ) .entity ( info ) .build () ; } 
public double calculateIDF ( java.util.List<java.lang.String[]> documents, java.lang.String wordToCheck ) { double count = 0; try { for ( java.lang.String[] ss : documents ) { for ( java.lang.String s : ss ) { if ( s.equalsIgnoreCase ( wordToCheck ) ) { count++; break; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.lang.Math.log ( ( ( ( documents.size () ) / 1 ) + count ) ) ; } 
public java.util.Date getStartTime () { java.util.Date now = new java.util.Date () ; java.util.List<java.util.Date> startTimes = new java.util.ArrayList<java.util.Date> () ; for ( cn.momia.service.course.base.CourseSku sku : skus ) { if ( sku.isAvaliable ( now ) ) startTimes.add ( sku.getStartTime () ) ; } try { java.util.Collections.sort ( startTimes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return startTimes.isEmpty () ? null : startTimes.get ( 0 ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.btGallerySingleImage: pickImageSingle () ; break; case R.id.btGalleryMultipleImages: pickImageMultiple () ; break; case R.id.btCameraImage: takePicture () ; break; case R.id.btCameraImageCrop: takePictureAndCrop () ; break; case R.id.btGallerySingleImageCrop: pickImageSingleAndCrop () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public long getConsecutiveGuesses () { if ( misses.isEmpty () ) { return hits.size () ; } try { java.util.Collections.sort ( hits ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Collections.sort ( misses ) ; java.util.Date lastMiss = misses.get ( ( ( misses.size () ) - 1 ) ) ; long hitsCount = 0; for ( java.util.Date date : hits ) { if ( date.after ( lastMiss ) ) { hitsCount++; } } return hitsCount; } 
@ org.junit.Test public void testDoubleUiOrderElementIssue () throws java.lang.Exception { org.talend.daikon.serialize.jsonschema.UiSchemaGeneratorTest.AProperties aProperties = new org.talend.daikon.serialize.jsonschema.UiSchemaGeneratorTest.AProperties ( "foo" ) ; aProperties.init () ; org.talend.daikon.serialize.jsonschema.UiSchemaGenerator generator = new org.talend.daikon.serialize.jsonschema.UiSchemaGenerator () ; com.fasterxml.jackson.databind.node.ObjectNode uiSchemaJsonObj = generator.genWidget ( aProperties, "MyForm" ) ; java.lang.String expectedPartial = "{\"ui:order\":[\"myStr\",\"np\"]}"; try { assertEquals ( expectedPartial, uiSchemaJsonObj.toString () , false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void resolveAnaphora () { java.util.List<org.tariel.pla.logics.Proposition> props = org.tariel.pla.logics.VariableStorage.getPopostionList () ; int i = 0; try { for ( org.tariel.pla.logics.classic.CQuantifer quant : this.getQuantifers () ) { if ( i < ( props.size () ) ) props.get ( i ) .setLinkedId ( ( ( java.lang.String ) ( quant.getVar () .getSourceId () ) ) ) ; i++; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void refreshBalancesForAllLinkedBrokers () { java.util.List<it.trade.android.sdk.model.TradeItLinkedBrokerParcelable> linkedBrokers = linkedBrokerManager.getLinkedBrokers () ; try { if ( linkedBrokers.isEmpty () ) { showAlert ( "refreshAllBalancesFirstLinkedBroker", "No linked broker!" ) ; } else if ( linkedBrokers.get ( 0 ) .getAccounts () .isEmpty () ) { showAlert ( "refreshAllBalancesFirstLinkedBroker", "No linked broker accounts detected for first linked broker! Try authenticating." ) ; } else { linkedBrokerManager.refreshAccountBalances ( new it.trade.android.sdk.model.TradeItCallBackCompletion () { @java.lang.Override public void onFinished () { goToLinkedBrokersActivity () ; } } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void register ( com.qualcomm.robotcore.eventloop.opmode.OpModeManager manager ) { manager.register ( "NullOp", com.qualcomm.ftcrobotcontroller.opmodes.NullOp.class ) ; try { manager.register ( "MatrixK9TeleOp", com.qualcomm.ftcrobotcontroller.opmodes.MatrixK9TeleOp.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } manager.register ( "K9TeleOp", com.qualcomm.ftcrobotcontroller.opmodes.Gyro_One.class ) ; manager.register ( "PushBotAuto", com.qualcomm.ftcrobotcontroller.opmodes.PushBotAuto.class ) ; manager.register ( "Tankie", com.qualcomm.ftcrobotcontroller.opmodes.TankDrive.class ) ; manager.register ( "Auto ", com.qualcomm.ftcrobotcontroller.opmodes.Autonomous.class ) ; manager.register ( "All Test", com.qualcomm.ftcrobotcontroller.opmodes.AllTest.class ) ; } 
private void expandType ( java.lang.String type ) { if ( ( getRelatingObject () .getType () ) != null ) { type += "." + ( getRelatingObject () .getType () ) ; if ( ( getRelatingObject () .getSubtype () ) != null ) { type += "." + ( getRelatingObject () .getSubtype () ) ; } } try { setType ( type ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String listToConfig ( java.util.ArrayList<mars.client.Module> list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder.append ( "[" ) ; for ( int i = 0; i < ( list.size () ) ; i++ ) { aStringBuilder.append ( list.get ( i ) .toString () ) .append ( "," ) ; } aStringBuilder.deleteCharAt ( aStringBuilder.length () ) ; try { aStringBuilder.append ( "]" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return aStringBuilder.toString () ; } 
public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent, float pTouchAreaLocalX, float pTouchAreaLocalY ) { try { if ( pSceneTouchEvent.isActionDown () ) { setTouchAreaBindingOnActionDownEnabled ( false ) ; setTouchAreaBindingOnActionMoveEnabled ( false ) ; android.content.Intent shareIntent = new android.content.Intent () ; shareIntent.setAction ( Intent.ACTION_SEND ) ; shareIntent.setType ( "text/plain" ) ; shareIntent.setPackage ( "com.twitter.android" ) ; shareIntent.putExtra ( Intent.EXTRA_TEXT, ( ( "My score in #ProtectTheTown is " + ( score ) ) + " points. And yours?" ) ) ; activity.tweetScore ( shareIntent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void deletePage ( int pageIndex ) { for ( roottemplate.calculator.data.KeyboardKits.KitVersion kv : mCurrentKitV.mParent.mKitVersions ) { roottemplate.calculator.data.KeyboardKits[] pages = kv.mPages; kv.mPages = roottemplate.calculator.util.Util.removeFromObjectArray ( pages, pageIndex, new roottemplate.calculator.data.KeyboardKits.Page[ ( pages.length ) - 1] ) ; if ( ( kv.mMainPageIndex ) > pageIndex ) ( kv.mMainPageIndex ) --; else if ( ( kv.mMainPageIndex ) >= ( kv.mPages.length ) ) kv.mMainPageIndex = ( kv.mPages.length ) - 1; } try { mKitPreviewAdapter.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onMeasure ( int widthMeasureSpec, int heightMeasureSpec ) { try { if ( heightMeasureSpec != 0 ) { int sizeWidth = de.dmxcontrol.widget.MeasureSpec.getSize ( widthMeasureSpec ) ; int sizeHeight = de.dmxcontrol.widget.MeasureSpec.getSize ( heightMeasureSpec ) ; if ( ( sizeHeight < sizeWidth ) && false ) { heightMeasureSpec = de.dmxcontrol.widget.MeasureSpec.makeMeasureSpec ( sizeHeight, de.dmxcontrol.widget.MeasureSpec.getMode ( heightMeasureSpec ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onMeasure ( widthMeasureSpec, heightMeasureSpec ) ; } 
private void onSignedInInitialize ( java.lang.String username, java.lang.String uid, java.lang.String email ) { try { if ( ! ( uid.isEmpty () ) ) { mUsername = username; com.amycui.medsminder.ui.MainActivity.mUserUid = uid; mUserEmail = email; addNewUserToUserEntry () ; getSupportLoaderManager () .initLoader ( com.amycui.medsminder.ui.MainActivity.PRESCRIPTION_LOADER, null, this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void showMessage ( android.content.Context context, java.lang.String title, java.lang.String message, android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; try { builder.setMessage ( message ) .setPositiveButton ( R.string.ok, ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { dialog.dismiss () ; } } : okListener ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } builder.create () .show () ; } 
@ com.facebook.react.bridge.ReactMethod public void startRecordingFps () { if ( ( ( mCatalystSettings ) == null ) || ( ! ( mCatalystSettings.isAnimationFpsDebugEnabled () ) ) ) { return; } if ( ( mFrameCallback ) != null ) { throw new com.facebook.react.bridge.JSApplicationCausedNativeException ( "Already recording FPS!" ) ; } try { com.facebook.react.modules.debug.AnimationsDebugModule.checkAPILevel () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mFrameCallback = new com.facebook.react.modules.debug.FpsDebugFrameCallback ( android.view.Choreographer.getInstance () , getReactApplicationContext () ) ; mFrameCallback.startAndRecordFpsAtEachFrame () ; } 
private void next () { update () ; int next = ( status.ordinal () ) + 1; try { if ( next >= ( PipelineConfig.Step.values () .length ) ) { ch.epfl.planair.Planair.become ( ch.epfl.planair.mods.MenuMode.class ) ; } else { toStep ( next ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.gbif.occurrence.persistence.Test @org.gbif.occurrence.persistence.Ignore ( value = "Identifiers removed from persistence until needed" ) public void testGetNoIdentifiers () throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService.get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ.getKey () ) ; try { assertEquals ( 0, occ.getIdentifiers () .size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void CheckInfiniteLoop ( nez.lang.Expression e, java.lang.String var ) { try { if ( ! ( consumption.isConsumed ( e ) ) ) { If ( var, _Eq () , _Field ( _state () , "pos" ) ) ; { Break () ; } EndIf () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSensorChanged ( android.hardware.SensorEvent event ) { if ( ( spaceShip ) == null ) return; try { if ( ( event.sensor.getType () ) == ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ) { float rawX = event.values[0]; float normalizedX = rawX * ( -2.0F ) ; spaceShip.setXVelocity ( ( ( int ) ( normalizedX ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private double calculate ( us.team.awesome.calculator.math.CalculationList list ) throws us.team.awesome.calculator.util.MathException { if ( list.isEmpty () ) { return 0; } int index = getNextOperatorToCalculate ( list ) ; try { if ( index > 0 ) { us.team.awesome.calculator.math.CalculationOperator operator = ( ( us.team.awesome.calculator.math.CalculationOperator ) ( list.get ( index ) ) ) ; list = operator.calculate ( index, list ) ; return calculate ( list ) ; } else { return ( ( us.team.awesome.calculator.math.CalculationNumber ) ( list.getFirst () ) ) .getValue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static <T extends uk.ac.bbsrc.tgac.miso.core.data.DetailedSample> T getParent ( java.lang.Class<T> targetParentClass, uk.ac.bbsrc.tgac.miso.core.data.DetailedSample start ) { try { for ( uk.ac.bbsrc.tgac.miso.core.data.DetailedSample current = uk.ac.bbsrc.tgac.miso.core.util.LimsUtils.deproxify ( start.getParent () ) ; current != null; current = uk.ac.bbsrc.tgac.miso.core.util.LimsUtils.deproxify ( current.getParent () ) ) { if ( targetParentClass.isInstance ( current ) ) { @java.lang.SuppressWarnings ( value = "unchecked" ) T result = ( ( T ) ( current ) ) ; return result; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public static void spannableEmoticonFilterFromFile ( final android.widget.TextView tv_content, java.lang.String filePath, java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle.spannableFilter ( tv_content.getContext () , filePath, spannableStringBuilder, content, com.sj.androidemoji.MainActivity.getFontHeight ( tv_content ) , null ) ; try { tv_content.setText ( spannable ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public synchronized T accessOne () { safeCheck () ; try { if ( keyContainer.isEmpty () ) return null; } catch ( Exception ex ) { ex.printStackTrace () ; } T tmp = null; java.lang.Long key = keyContainer.get ( 0 ) ; tmp = net.vicp.lylab.core.pool.SequencePool.getFromContainer ( key ) ; return tmp; } 
private void saveEntry ( org.owasp.dependencycheck.dependency.Vulnerability vuln ) throws java.io.IOException, org.apache.lucene.index.CorruptIndexException, org.owasp.dependencycheck.data.nvdcve.DatabaseException { final java.lang.String cveName = vuln.getName () ; if ( ( ( prevVersionVulnMap ) != null ) && ( prevVersionVulnMap.containsKey ( cveName ) ) ) { final java.util.List<org.owasp.dependencycheck.dependency.VulnerableSoftware> vulnSoftware = prevVersionVulnMap.get ( cveName ) ; for ( org.owasp.dependencycheck.dependency.VulnerableSoftware vs : vulnSoftware ) { vuln.updateVulnerableSoftware ( vs ) ; } } try { if ( ( cveDB ) != null ) { cveDB.updateVulnerability ( vuln ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void update () { try { if ( isActive ) { physicsPositionCalibration () ; paintballShadow.setTranslation ( new com.metaio.sdk.jni.Vector3d ( geometry.getTranslation () .getX () , geometry.getTranslation () .getY () , 0.0F ) ) ; if ( ( getPlayerId () ) == ( com.google.sprint1.GameState.getState () .myPlayerID ) ) checkCollisions () ; if ( ( geometry.getTranslation () .getZ () ) <= 0.0F ) { disable () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void displayResult ( java.lang.String inputTemperature, float convertedTemperature, boolean isInput_Fahrenheit ) { mTextView_Result.setText ( ( ( ( inputTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + convertedTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; try { if ( isInput_Fahrenheit ) { mTextView_Result.setText ( ( ( ( convertedTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + inputTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int getCurrentHour () { java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat ( "kk", java.util.Locale.US ) ; java.lang.String currentHours = simpleDateFormat.format ( mCalendar.getTime () ) ; try { currentHours = ( currentHours.startsWith ( "0" ) ) ? currentHours.substring ( 1 ) : currentHours; } catch ( Exception ex ) { ex.printStackTrace () ; } return java.lang.Integer.valueOf ( currentHours ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; try { location = ( ( android.widget.TextView ) ( findViewById ( R.id.locationText ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } auth.hci.adscanner.controller.GPSTracker gps = new auth.hci.adscanner.controller.GPSTracker ( this ) ; if ( gps.canGetLocation () ) { location.setText ( ( ( ( "Langtitude: " + ( gps.getLatitude () ) ) + "\nLongtitude: " ) + ( gps.getLongitude () ) ) ) ; } else { gps.showSettingsAlert () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent scheduleDetailIntent = new android.content.Intent ( jContext, com.android.activelife.tampa.ui.ScheduleContainerActivity.class ) ; try { scheduleDetailIntent.putExtra ( "schedule_id", mMessagesDataResponseList.get ( position ) .getId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } scheduleDetailIntent.putExtra ( "schedule_name", mMessagesDataResponseList.get ( position ) .getSchedule () .getName () ) ; jContext.startActivity ( scheduleDetailIntent ) ; } 
private void CreateSpecies ( java.lang.String type, int number ) { for ( int i = 0; i < number; i++ ) { GetPositionsAndTypes () ; ( ( java.util.List<Species.ISpecie> ) ( species ) ) .add ( Species.SpecieFactory.GetSpecies ( type, RandomPosition () ) ) ; } try { GetPositionsAndTypes () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { org.greenrobot.eventbus.EventBus.getDefault () .register ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } progressDialog = new com.afollestad.materialdialogs.MaterialDialog.Builder ( this ) .title ( R.string.hacking_progress ) .content ( R.string.changing_contacts ) .progress ( false, 100, true ) .cancelable ( false ) .build () ; } 
@ org.springframework.context.annotation.Bean ( destroyMethod = "close" ) public javax.persistence.EntityManagerFactory entityManagerFactory () throws java.io.IOException, java.sql.SQLException, javax.xml.bind.JAXBException { org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter () ; vendorAdapter.setGenerateDdl ( true ) ; vendorAdapter.setShowSql ( false ) ; org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean factory = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean () ; factory.setJpaVendorAdapter ( vendorAdapter ) ; factory.setDataSource ( dataSource () ) ; factory.setJpaProperties ( getAdditionalProperties () ) ; try { factory.setPackagesToScan ( "ch.bfh.btx8201.cdss4nsar.democis.data" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } factory.afterPropertiesSet () ; return factory.getObject () ; } 
public static void response ( java.lang.String name, java.lang.String s ) { try { if ( com.minecraftmarket.util.Log.debug ) { com.minecraftmarket.util.Log.log ( ( ( ( " ------------- " + " MinecraftMarket Debug " ) + name ) + " ------------- " ) ) ; com.minecraftmarket.util.Log.log ( ( " " + s ) ) ; com.minecraftmarket.util.Log.log ( " -------------------------------------------------------------------- " ) ; com.minecraftmarket.util.Log.log ( " " ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int includedNumbers ( java.util.List<java.lang.Integer[]> ranges ) { java.util.List<java.lang.Integer> numbers = new java.util.ArrayList<java.lang.Integer> () ; java.util.List<es.madhava.integerfun.Range> rangesList = new java.util.ArrayList<es.madhava.integerfun.Range> () ; for ( java.lang.Integer[] range : ranges ) { es.madhava.integerfun.RangeMerge.addRange ( rangesList, range ) ; } try { for ( es.madhava.integerfun.Range range : rangesList ) { numbers.addAll ( range.getNumbers () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return numbers.size () ; } 
@ java.lang.Override public void showEmpty () { mobymagic.com.javalagos.utils.LogUtils.d ( mobymagic.com.javalagos.ui.userslist.BaseUserListFragment.LOG_TAG, "Showing empty" ) ; try { if ( ( mPlaceHolderView.getViewCount () ) < 1 ) { mProgressView.setVisibility ( View.GONE ) ; mErrorContainerView.setVisibility ( View.GONE ) ; mEmptyContainerView.setVisibility ( View.VISIBLE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void applyToText ( java.lang.CharSequence charSequence, android.graphics.Typeface typeface, int start, int end ) { try { if ( charSequence instanceof android.text.Spannable ) { android.text.Spannable spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; spannable.setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan.getInstance ( typeface ) , start, end, Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean visit ( org.eclipse.php.internal.core.compiler.ast.visitor.PHPCallExpression node ) throws java.lang.Exception { try { if ( ( node.getReceiver () ) != null ) { node.getReceiver () .traverse ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( node.getArgs () ) != null ) { node.getArgs () .traverse ( this ) ; } visitGeneral ( node ) ; return false; } 
public void mouseReleased ( java.awt.event.MouseEvent e ) { try { if ( ( e.getButton () ) == ( java.awt.event.MouseEvent.BUTTON1 ) ) { dragging = false; java.lang.System.out.println ( "released" ) ; command = new controller.TravelCommand ( currentPersModel, initPosX, initPosy, e.getX () , e.getY () ) ; cmdMan.storeAndExecute ( command, currentPersModel.getID () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run ( final io.dropwizard.setup.Bootstrap<?> bootstrap, final net.sourceforge.argparse4j.inf.Namespace namespace ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig.getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand.recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; try { dbScriptsRunner.run () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public me.noize.chemistry.io.TimeRange extendTo ( final long time ) { try { if ( time < ( this.getStart () ) ) { return new me.noize.chemistry.io.TimeRange ( time, this.getEnd () ) ; } else if ( ( this.getEnd () ) < time ) { return new me.noize.chemistry.io.TimeRange ( this.getStart () , time ) ; } else { return this; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { int prog = seekBar.getProgress () ; this.warmth = prog + 1; try { this.recapWarmth.setText ( android.text.Html.fromHtml ( ( ( ( "<b>" + ( res.getString ( R.string.recapHot ) ) ) + "</b>" ) + ( hotWordArray[prog] ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String inflectNoun ( java.lang.String nounLemma, java.lang.String inflection ) { java.lang.String toRet = null; ballpark.WordElement word = lexicon.getWord ( nounLemma, LexicalCategory.NOUN ) ; try { if ( inflection.contains ( "def" ) ) { if ( inflection.contains ( "plu" ) ) { ballpark.InflectedWordElement pluralWord = new ballpark.InflectedWordElement ( word ) ; pluralWord.setPlural ( true ) ; toRet = realiser.realise ( pluralWord ) .toString () ; } if ( toRet != null ) return "the " + toRet; else return "the " + nounLemma; } } catch ( Exception ex ) { ex.printStackTrace () ; } return nounLemma; } 
private int decideAction () { try { setHorizontalVelocity ( 0.0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Random rand = new java.util.Random () ; actionDuration = ( ( rand.nextDouble () ) * 3.0 ) + 1.0; actionTime = 0.0; int randomNum = rand.nextInt ( 4 ) ; return randomNum; } 
private void firePrefixOrSuffix ( java.lang.String key ) { try { for ( java.lang.String k : new java.util.LinkedList ( callbacksByMatch.keySet () ) ) { if ( key.startsWith ( k ) ) { fireMatch ( key, Match.PREFIX ) ; } if ( key.endsWith ( k ) ) { fireMatch ( key, Match.SUFFIX ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private Board swapRight ( int blankX, int blankY ) { Board swap = new Board ( this.board ) ; try { if ( blankY >= ( ( this.dimensions () ) - 1 ) ) { throw new java.lang.IndexOutOfBoundsException ( "Can not swap right most column right" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } exchange ( swap.board, blankX, blankY, blankX, ( blankY + 1 ) ) ; return swap; } 
public void editClass ( android.view.View view ) { java.util.List<android.widget.CheckBox> selectedClasses = projectManager.getCheckedCheckBoxes () ; try { switch ( selectedClasses.size () ) { case 0: break; case 1: { editSingleClass ( selectedClasses ) ; break; } default: { } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean bookSeats ( int no ) { try { if ( ( no > ( this.availability ) ) && ( no > 0 ) ) { return false; } else { this.availability = -no; this.booked = no; this.setChanged () ; this.notifyObservers ( this.availability ) ; this.clearChanged () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testNullInsideObjects () { eu.europa.fisheries.uvms.rules.service.mapper.fact.FishingActivity faAct = new eu.europa.fisheries.uvms.rules.service.mapper.fact.FishingActivity () ; final java.util.List<eu.europa.fisheries.uvms.rules.service.mapper.fact.FaCatchFact> faCatchFacts = activityMapper.generateFactsForFaCatch ( faAct, false ) ; java.util.List<eu.europa.fisheries.uvms.rules.service.mapper.fact.GearProblem> gearList = new java.util.ArrayList<eu.europa.fisheries.uvms.rules.service.mapper.fact.GearProblem> () { { add ( new eu.europa.fisheries.uvms.rules.service.mapper.fact.GearProblem () ) ; } }; try { activityMapper.generateFactsForGearProblems ( gearList ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void outputToFile ( java.lang.String text ) { java.lang.String id = xaurora.io.IDGenerator.instanceOf () .GenerateID ( xaurora.communication.ChromeServer.getURL ( text ) , xaurora.communication.ChromeServer.TYPE_FULL_TEXT ) ; try { xaurora.io.DataFileIO.instanceOf () .createDataFile ( id, java.lang.String.valueOf ( text ) .getBytes () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( java.lang.String.valueOf ( text ) ) ; } 
@ java.lang.Override public java.lang.String toString () { java.lang.String str = "Symbol Table list:"; try { for ( int i = nestinglevel; ( -1 ) < ( nestinglevel ) ; i++ ) { str += ( "Nesting level " + i ) + ":\n"; str += tables[i].toString () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return str; } 
private void dataInit () { try { for ( int i = 0; i < 3; i++ ) { dataMagnetic.add ( new java.util.ArrayList<java.lang.Integer> () ) ; dataOrientation.add ( new java.util.ArrayList<java.lang.Integer> () ) ; dataAccelerate.add ( new java.util.ArrayList<java.lang.Integer> () ) ; dataGyroscope.add ( new java.util.ArrayList<java.lang.Integer> () ) ; dataGravity.add ( new java.util.ArrayList<java.lang.Integer> () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.StringBuilder buildHtmlHeadLink () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html.append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />" ) .append ( NewLine.CRLF ) ; html.append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap-theme.min.css\" />" ) .append ( NewLine.CRLF ) ; html.append ( "<link rel=\"stylesheet\" href=\"/css/routerlogger.css\" />" ) .append ( NewLine.CRLF ) ; try { html.append ( "<link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />" ) .append ( NewLine.CRLF ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return html; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () .inflate ( R.menu.activity_main_toolbar, menu ) ; mPathItem = menu.findItem ( R.id.main_toolbar_path ) ; try { mTrafficItem = menu.findItem ( R.id.main_toolbar_traffic ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( getSharedBoolean ( SharedPrefs.KEY_SHOW_PATH ) ) mPathItem.setIcon ( R.drawable.road_variant_on ) ; if ( getSharedBoolean ( SharedPrefs.KEY_SHOW_TRAFFIC ) ) mTrafficItem.setIcon ( R.drawable.ic_traffic_24dp_on ) ; return true; } 
public void disconnect () throws java.io.IOException { try { if ( ( listen ) == null ) { java.lang.System.out.println ( "Register first!" ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( ( "disconnect " + ( id ) ) ) ) ) { java.lang.System.out.println ( "Disconnect failed, try again" ) ; } listen.interrupt () ; sock.close () ; } 
public void reset () { try { if ( isTerminated () ) { kernelsToRun.addAll ( finishedKernels ) ; finishedKernels.clear () ; ( iteration ) ++; end = -1; terminated = ( kernelsToRun.isEmpty () ) && ( runningThreads.isEmpty () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void append ( java.lang.String key, java.lang.String content ) { java.lang.String value = get ( key ) ; if ( value != null ) { value += content; } try { put ( key, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } logger.info ( ( ( ( ( ( "Node[" + ( node.getHashcode () ) ) + "] APPEND Key:" ) + key ) + "Value:" ) + value ) ) ; } 
public static void drawSprite ( com.badlogic.gdx.graphics.g2d.Sprite sprite, com.badlogic.gdx.graphics.g2d.Batch batch, float x, float y, float w, float h ) { try { if ( sprite != null ) { batch.begin () ; batch.draw ( sprite, x, ( ( ( net.awhipple.zombiebird.ZBGame.SCREEN_H ) - y ) - h ) , w, h ) ; batch.end () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.gmail.trentech.pjc.core.SQLManager get ( org.spongepowered.api.plugin.PluginContainer plugin ) { try { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers.containsKey ( plugin.getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; com.gmail.trentech.pjc.core.SQLManager.sqlManagers.put ( plugin.getId () , sqlManager ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return com.gmail.trentech.pjc.core.SQLManager.sqlManagers.get ( plugin.getId () ) ; } 
@ java.lang.Override public com.sun.jersey.api.client.ClientResponse get ( java.net.URI uri ) throws com.emc.storageos.svcs.errorhandling.resources.InternalException { java.net.URI requestURI = _base.resolve ( uri ) ; com.sun.jersey.api.client.ClientResponse response = setResourceHeaders ( _client.resource ( requestURI ) ) .type ( MediaType.APPLICATION_JSON ) .get ( com.sun.jersey.api.client.ClientResponse.class ) ; if ( authenticationFailed ( response ) ) { authenticate () ; response = setResourceHeaders ( _client.resource ( requestURI ) ) .type ( MediaType.APPLICATION_JSON ) .get ( com.sun.jersey.api.client.ClientResponse.class ) ; } try { checkResponse ( uri, response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return response; } 
public void run () { try { cauldron.setTextColor ( android.support.v4.content.ContextCompat.getColor ( context, R.color.chemistryGameCorrect ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cauldron.setText ( "Correct" ) ; new android.os.Handler () .postDelayed ( new java.lang.Runnable () { public void run () { cauldron.setTextColor ( android.support.v4.content.ContextCompat.getColor ( context, R.color.chemistryGameText ) ) ; currQuestion += 1; movePotion = true; setUp () ; } }, 800 ) ; } 
@ java.lang.Override public java.lang.Object getSystemService ( java.lang.String name ) { try { if ( ( ( Context.LAYOUT_INFLATER_SERVICE.equals ( name ) ) == true ) && ( ( com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity.getWindow () ) != null ) ) { return droid4mizer.getSystemService ( name, com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity.getWindow () .getLayoutInflater () ) ; } else { return droid4mizer.getSystemService ( name, super.getSystemService ( name ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateMaster () { try { if ( masterExists () ) { int sum = 0; for ( bei.m3c.widgets.LightWidget lightWidget : largeLightWidgets.subList ( 1, largeLightWidgets.size () ) ) { sum += lightWidget.getValue () ; } largeLightWidgets.get ( 0 ) .setValue ( sum ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deploy () { com.openshift.client.ApplicationScale scale1 = com.openshift.client.ApplicationScale.NO_SCALE; com.openshift.client.cartridge.StandaloneCartridge cartridge = new com.openshift.client.cartridge.StandaloneCartridge ( getEntity () .getCartridge () ) ; try { deployedApp = new com.openshift.client.ApplicationBuilder ( domain ) .setName ( applicationName ) .setStandaloneCartridge ( cartridge ) .setApplicationScale ( scale1 ) .setInitialGitUrl ( gitRepositoryUrl ) .build () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean addRoomToBooking ( long bookingId ) { try { if ( ( bookingId < 1 ) || ( bookingId > ( currentBookingId ) ) ) { return false; } else if ( ( currentReservationNumber ) >= ( MAX_ROOMS ) ) { return false; } else { ++ ( currentReservationNumber ) ; reservationToBookingId.put ( currentReservationId, bookingId ) ; ++ ( currentReservationId ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void flock ( java.util.ArrayList<personalproject.simpleapp.Boid> boids ) { personalproject.simpleapp.Vector2 sep = seperate ( boids ) ; personalproject.simpleapp.Vector2 ali = align ( boids ) ; personalproject.simpleapp.Vector2 coh = cohesion ( boids ) ; sep.multi ( data.getSWeight () ) ; ali.multi ( data.getAWeight () ) ; coh.multi ( data.getCWeight () ) ; applyForce ( sep ) ; try { applyForce ( coh ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeConnectedFlagCascade ( int trackIdx ) { mTracks.get ( trackIdx ) .setConnectedPrev ( false ) ; try { for ( int i = trackIdx + 1; i < ( mTracks.size () ) ; i++ ) { if ( mTracks.get ( i ) .isConnectedPrev () ) mTracks.get ( i ) .setConnectedPrev ( false ) ; else break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void checkFinished () { boolean status = true; try { for ( int index : player.getHighlightedFiguresIndizes () ) { if ( stage.getActors () .get ( index ) .isVisible () ) { status = false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( status && ( ( kickedIndex ) == ( -1 ) ) ) && ( ( actorActive ) == ( -1 ) ) ) { handler.sendMessage ( player.getNumber () ) ; } } 
@ java.lang.Override public void sendToPlayers ( java.util.Collection<org.bukkit.entity.Player> targets ) { java.lang.String tag = tags.getTag ( false, false ) ; try { for ( java.lang.String line : message ) { for ( org.bukkit.command.CommandSender target : targets ) { target.sendMessage ( tag.concat ( line ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void getMiniFields () { try { for ( org.unicef.rapidreg.forms.Section section : sections ) { for ( org.unicef.rapidreg.forms.Field caseField : section.getFields () ) { if ( caseField.isShowOnMiniForm () ) { if ( caseField.isPhotoUploadBox () ) { miniFields.add ( 0, caseField ) ; } else { miniFields.add ( caseField ) ; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( miniFields.isEmpty () ) ) { addProfileFieldForDetailsPage () ; } } 
@ java.lang.Override public final void setForbidden ( java.lang.String spec1, java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; try { spec2 = checkSpec ( spec2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Set<edu.cmu.tetrad.data.Knowledge2.MyNode> f1 = getExtent ( spec1 ) ; java.util.Set<edu.cmu.tetrad.data.Knowledge2.MyNode> f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair<java.util.Set<edu.cmu.tetrad.data.Knowledge2.MyNode>> o = new edu.cmu.tetrad.data.OrderedPair ( f1, f2 ) ; if ( ! ( forbiddenRulesSpecs.contains ( o ) ) ) { forbiddenRulesSpecs.add ( o ) ; } } 
public boolean InspectInventory ( java.lang.String object ) { try { for ( int col = 0; col < ( playerInventory.length ) ; col++ ) { if ( playerInventory[col][1].toString () .equals ( object ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void grant ( co.cask.cdap.proto.id.EntityId entity, co.cask.cdap.proto.security.Principal principal, java.util.Set<co.cask.cdap.proto.security.Action> actions ) throws co.cask.cdap.common.FeatureDisabledException, co.cask.cdap.common.NotFoundException, co.cask.cdap.common.UnauthenticatedException, co.cask.cdap.security.spi.authorization.UnauthorizedException, java.io.IOException { co.cask.cdap.proto.security.GrantRequest grantRequest = new co.cask.cdap.proto.security.GrantRequest ( entity, principal, actions ) ; java.net.URL url = config.resolveURLV3 ( ( ( co.cask.cdap.client.AuthorizationClient.AUTHORIZATION_BASE ) + "/privileges/grant" ) ) ; co.cask.common.http.HttpRequest request = co.cask.common.http.HttpRequest.post ( url ) .withBody ( co.cask.cdap.client.AuthorizationClient.GSON.toJson ( grantRequest ) ) .build () ; try { executePrivilegeRequest ( entity, principal, request ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.api.auth.Identity identity ) { io.cattle.platform.core.model.Account project = authDao.createProject ( ( ( identity.getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; try { authDao.createProjectMember ( project, new io.cattle.platform.iaas.api.auth.projects.Member ( identity, io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return project; } 
@ java.lang.Override public void onViewCreated ( android.view.View view, @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super.onViewCreated ( view, savedInstanceState ) ; mAdapter = new com.rukiasoft.androidapps.cocinaconroll.ui.EditRecipeRecyclerViewAdapter ( getActivity () , recipeItem.getIngredients () , this ) ; recyclerView.setAdapter ( mAdapter ) ; try { recyclerView.setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v7.widget.helper.ItemTouchHelper.Callback callback = new com.rukiasoft.androidapps.cocinaconroll.dragandswipehelper.SimpleItemTouchHelperCallback ( mAdapter ) ; mItemTouchHelper = new android.support.v7.widget.helper.ItemTouchHelper ( callback ) ; mItemTouchHelper.attachToRecyclerView ( recyclerView ) ; } 
public void setSelected ( ru.sukharev.pathtracker.utils.orm.MapPath path ) { try { if ( ( ( selectedPath ) != null ) && ( mObjects.contains ( selectedPath ) ) ) notifyItemChanged ( mObjects.indexOf ( selectedPath ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } selectedPath = path; if ( ( ( selectedPath ) != null ) && ( mObjects.contains ( selectedPath ) ) ) notifyItemChanged ( mObjects.indexOf ( selectedPath ) ) ; } 
private static int argument ( char[] array, int cursor, java.lang.StringBuilder argument ) { try { for ( int i = cursor; i < ( array.length ) ; i++ ) { char c = array[i]; switch ( c ) { case ',': case ' ) ': return i + 1; case ' ': if ( ( argument.length () ) == 0 ) continue; default: argument.append ( c ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return array.length; } 
@ java.lang.Override public double deposit ( double amount ) { if ( ( getBalance () ) == 0 ) return 0; double deposited = super.deposit ( amount ) ; double finalDeposit = against.deposit ( deposited ) ; double difference = deposited - finalDeposit; try { if ( difference != 0 ) { super.withdraw ( difference ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return finalDeposit; } 
private void setMonthOnAction ( javafx.scene.layout.HBox box, java.time.LocalDateTime start, java.time.LocalDateTime end ) { try { box.setOnMouseClicked ( new javafx.event.EventHandler<javafx.scene.input.MouseEvent> () { @java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event.getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start, end ) ; } else if ( ( ( event.getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline.getStart () , timeline.getEnd () ) ; } } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getPerlVersionCallsProcessBuilderFactory () { processbuilder.PerlProcessBuilderFactory factory = org.mockito.Mockito.mock ( processbuilder.PerlProcessBuilderFactory.class ) ; processbuilder.utils.PerlProcessBuilderUtilities processBuilderUtilitiesMock = org.mockito.Mockito.spy ( processbuilder.utils.PerlProcessBuilderUtilities.class ) ; try { org.mockito.Mockito.when ( factory.getProcessBuilder ( org.mockito.Matchers.<java.lang.String[]>anyVararg () ) ) .thenReturn ( new java.lang.ProcessBuilder ( "" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } jsr223.perl.utils.PerlVersionGetter perlVersionGetter = new jsr223.perl.utils.PerlVersionGetter ( processBuilderUtilitiesMock, factory ) ; perlVersionGetter.getPerlVersion () ; org.mockito.Mockito.verify ( factory ) .getProcessBuilder ( org.mockito.Matchers.<java.lang.String[]>anyVararg () ) ; } 
public synchronized void start () { assert ( this.state ) == ( ShutdownState.INITIALIZED ) : "Invalid MessengerState " + ( this.state ) ; this.state = ShutdownState.STARTED; try { if ( edu.brown.hstore.ReconfigCoordinator.debug.val ) edu.brown.hstore.ReconfigCoordinator.LOG.debug ( "Initializing connections" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.initConnections () ; if ( edu.brown.hstore.ReconfigCoordinator.debug.val ) edu.brown.hstore.ReconfigCoordinator.LOG.debug ( "Starting listener thread" ) ; this.listener_thread.start () ; this.ready_observable.notifyObservers ( this ) ; } 
public void createAndAddWidgets () { this.dataTree = new javax.swing.JTree ( this.root ) ; this.dataTree.expandRow ( 0 ) ; try { this.dataTree.setRootVisible ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.dataTree.setEditable ( false ) ; final javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane ( this.dataTree ) ; scrollPane.setBorder ( new javax.swing.border.TitledBorder ( OmeroPluginGUIConstants.TREE_TITLE ) ) ; this.add ( scrollPane, java.awt.BorderLayout.CENTER ) ; } 
public static int getFutureLinesVanished ( de.slothsoft.tetris.Board board, de.slothsoft.tetris.Stone stone, int blockY ) { int lines = 0; try { for ( int y = 0; y < ( stone.getHeightInBlocks () ) ; y++ ) { int stoneBlocks = stone.calculateBlockCountOfLine ( y ) ; int boardBlocksCount = board.calculateBlockCountOfLine ( ( y + blockY ) ) ; if ( ( stoneBlocks + boardBlocksCount ) >= ( Board.WIDTH_IN_BLOCKS ) ) { lines++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return lines; } 
@ java.lang.Override public void onDataChange ( com.learn.shruti.ratemyday.DataSnapshot dataSnapshot ) { try { for ( com.learn.shruti.ratemyday.DataSnapshot postSnapshot : dataSnapshot.getChildren () ) { com.learn.shruti.ratemyday.Model.Review r = postSnapshot.getValue ( com.learn.shruti.ratemyday.Model.Review.class ) ; if ( r.employeeEmail.equals ( userEmail ) ) reviewList.add ( r ) ; android.widget.Toast.makeText ( this, ( ( ( "com: " + ( r.comments ) ) + ", rate " ) + ( r.rating ) ) , Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( java.lang.Void result ) { try { if ( isClosed () ) { initFuture.setException ( new com.datastax.driver.core.ConnectionException ( host.getSocketAddress () , "Pool was closed during initialization" ) ) ; connection.closeAsync () .force () ; } else { com.datastax.driver.core.SingleConnectionPool.logger.trace ( "Created connection pool to host {}", host ) ; connectionRef.set ( connection ) ; open.set ( true ) ; phase = Phase.READY; initFuture.set ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getReferenceTable ( ru.osslabs.model.datasource.MetaObject metaObject, java.lang.String fieldName ) { java.lang.String result = ""; try { if ( metaObject != null ) { if ( metaObject.getChildren () .containsKey ( fieldName ) ) { result = metaObject.getChildren () .get ( fieldName ) .getType () .getSecondary () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
private void readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { try { if ( ( ! ( ctx.channel () .config () .isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise.isDone () ) ) ) ) { ctx.read () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int incrementNumberOfScheduledDeliveries ( long messageID ) { org.wso2.andes.kernel.OnflightMessageTracker.MsgData trackingData = getTrackingData ( messageID ) ; int numOfSchedules = 0; try { if ( trackingData != null ) { trackingData.addMessageStatus ( MessageStatus.SCHEDULED_TO_SEND ) ; numOfSchedules = trackingData.numberOfScheduledDeliveries.incrementAndGet () ; if ( org.wso2.andes.kernel.OnflightMessageTracker.log.isDebugEnabled () ) { org.wso2.andes.kernel.OnflightMessageTracker.log.debug ( ( ( ( "message id= " + messageID ) + " scheduled. Pending to execute= " ) + numOfSchedules ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return numOfSchedules; } 
public boolean applyTop ( int id ) { boolean bool = false; int applyTotal = newsDao.applyTotalTop () ; try { if ( applyTotal < 5 ) { int count = newsDao.applyTop ( id ) ; if ( count > 0 ) { bool = true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return bool; } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { try { if ( ! ( ( query.isEmpty () ) || ( query.equals ( lastQuery ) ) ) ) { lastQuery = query; mArtistAdapter.clear () ; new com.bmriv.android.streamify.QueryArtistTask ( mArtistAdapter, this ) .execute ( query ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public ATMServer.Server handleData () throws java.io.IOException { int i = 0; int maxConnections = 200; byte id = 1; try { while ( ( i++ ) < maxConnections ) { java.net.Socket clientConnection = s.accept () ; id++; ATMServer.Worker worker = new ATMServer.Worker ( clientConnection, functions, clientData, id ) ; java.lang.Thread t = new java.lang.Thread ( worker ) ; t.start () ; logger.info ( ( "New client connected, assigned thread ID #" + ( t.getId () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
public int getNewProductIdByCategory ( java.lang.String categoryId ) { java.util.ArrayList<sg.edu.nus.iss.universitysouvenirstore.Product> p = this.getProductListByCategory ( categoryId ) ; int largest = 0; try { for ( sg.edu.nus.iss.universitysouvenirstore.Product product : p ) { java.lang.String[] splitString = product.getProductId () .split ( "/" ) ; int splitProductId = java.lang.Integer.parseInt ( splitString[1] ) ; if ( largest <= splitProductId ) { largest = splitProductId; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return largest + 1; } 
@ android.support.annotation.MainThread protected void clearDataSource ( final boolean clearTargetState ) { try { synchronized ( mLock ) { logger.debug ( ( "clearDataSource () , clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor.execute ( "clearDataSource () " ) ; mScriptExecutor.execute ( "clearImage () " ) ; mScriptExecutor.execute ( "clearPage () " ) ; mLastContentUriToOpen = null; mLastAssetFileDescriptorToOpen = null; mLastModeToOpen = PlayMode.NONE; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_article_list ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; getLoaderManager () .initLoader ( 0, null, this ) ; if ( savedInstanceState == null ) { refresh () ; } } 
@ java.lang.Override public java.util.List<java.lang.Long> getSolutionProjects ( long id ) { java.util.List<java.lang.Long> projects = new java.util.ArrayList<> () ; java.lang.String query = "select id from project where solutionid=" + id; java.util.List<java.util.Map<java.lang.String, java.lang.Object>> projectsResult = jdbcTemplate.queryForList ( query ) ; try { for ( java.util.Map<java.lang.String, java.lang.Object> team : projectsResult ) { projects.add ( java.lang.Long.parseLong ( team.get ( "id" ) .toString () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return projects; } 
@ java.lang.Override public void run () { try { if ( showErrorMessages ) { java.io.StringWriter errors = new java.io.StringWriter () ; e.printStackTrace ( new java.io.PrintWriter ( errors ) ) ; dialog.setErrorMessage ( ( ( errors.toString () ) + "</p></html>" ) ) ; dialog.setLocationRelativeTo ( null ) ; dialog.setModal ( true ) ; java.lang.Thread t = new java.lang.Thread () { @java.lang.Override public void run () { dialog.setVisible ( true ) ; } }; t.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void printTmpDictionary () { try { for ( java.util.Map.Entry<java.lang.String, java.lang.Integer> d : frequencyDictionary.entrySet () ) { java.lang.System.out.println ( ( ( ( "Word " + ( d.getKey () ) ) + " has frequency " ) + ( d.getValue () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.springframework.http.ResponseEntity<?> createTenantWorker ( net.smartcosmos.usermanagement.tenant.dto.CreateTenantRequest createTenantRequest, net.smartcosmos.security.user.SmartCosmosUser user ) { java.util.Optional<net.smartcosmos.usermanagement.tenant.dto.CreateTenantResponse> createTenantResponse = tenantDao.createTenant ( createTenantRequest ) ; try { if ( createTenantResponse.isPresent () ) { return buildCreatedResponseEntity ( createTenantResponse.get () ) ; } else { return org.springframework.http.ResponseEntity.status ( HttpStatus.CONFLICT ) .build () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void execute () { try { view.setCursor ( new java.awt.Cursor ( java.awt.Cursor.WAIT_CURSOR ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ppPanel.getOptDatabaseSelected () ) { executePostgis () ; } else { executeDbf () ; } view.setCursor ( new java.awt.Cursor ( java.awt.Cursor.DEFAULT_CURSOR ) ) ; } 
@ java.lang.Override protected void onStart () { super.onStart () ; try { if ( ( ! ( nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper.isUserLoggedIn ( this ) ) ) || ( nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper.isTokenExpired ( this ) ) ) { nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper.logUserOff ( this ) ; com.facebook.login.LoginManager.getInstance () .logOut () ; showLoginActivity () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v.getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap<java.lang.String, java.lang.String> user = session.getUserDetails () ; final java.lang.String idUser = user.get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item.getId () ; try { addLike ( idIncident, idUser ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private Player.Solution buildRandomSolution ( Player.GameState gs, Player.AI opAI, Player.ScoreEvaluation eval ) { Player.Solution solution = new Player.Solution ( Player.MagicNumbers.SIMULATION_DEPTH ) ; Player.GameState newGs = gs.copy () ; try { for ( int i = 0; i < ( Player.MagicNumbers.SIMULATION_DEPTH ) ; i++ ) { solution.actions[i] = getRandomAction ( gs ) ; Player.GameEngine.applyActionWithoutCopy ( newGs, solution.actions[i], opAI.compute ( gs ) ) ; solution.score += eval.getGameStateScore ( newGs, i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return solution; } 
public void set ( org.md2k.ema_scheduler.configuration.EMAType emaType, org.md2k.ema_scheduler.delivery.Callback callback ) { org.md2k.utilities.Report.Log.d ( org.md2k.ema_scheduler.notifier.NotifierManager.TAG, "set () ..." ) ; this.emaType = emaType; try { this.notifications = emaType.getNotifications () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.callbackDelivery = callback; lastAckTime = 0; lastInsertTime = 0; notifyNo = 0; delayEnable = true; org.md2k.utilities.Report.Log.d ( org.md2k.ema_scheduler.notifier.NotifierManager.TAG, "before runnableSubscribe.." ) ; handlerSubscribe.post ( runnableSubscribe ) ; } 
private void setBreadcrumLabel () { labelMap.put ( "gene", "Genes" ) ; try { labelMap.put ( "mp", "Phenotypes" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } labelMap.put ( "disease", "Diseases" ) ; labelMap.put ( "anatomy", "Anatomy" ) ; labelMap.put ( "impc_images", "IMPC Images" ) ; } 
private source.Node<T> find ( T key, source.Node<T> node ) { if ( node == null ) { return null; } int comparison = key.compareTo ( node.key ) ; try { if ( comparison == 0 ) { return node; } else if ( comparison > 0 ) { return find ( key, node.rightChild ) ; } else { return find ( key, node.leftChild ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onChanged () { try { super.onChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } int childCount = getChildCount () ; if ( childCount < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ) { for ( int i = childCount; i < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ; ++i ) { addNextCard () ; } for ( int i = 0; i < ( getChildCount () ) ; ++i ) { positionItem ( i ) ; } } } 
public void addKeyListeners () { try { if ( ( dji.keysdk.KeyManager.getInstance () ) != null ) { removeKeyListeners () ; dji.keysdk.DJIKey keyC1 = dji.keysdk.RemoteControllerKey.create ( RemoteControllerKey.CUSTOM_BUTTON_1 ) ; dji.keysdk.KeyManager.getInstance () .addListener ( keyC1, c1KeyListener ) ; dji.keysdk.KeyManager.getInstance () .addListener ( dji.keysdk.RemoteControllerKey.create ( RemoteControllerKey.CUSTOM_BUTTON_2 ) , c2KeyListener ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void resolveCollision ( asteroids.model.WorldObject other ) { try { if ( other instanceof asteroids.model.Ship ) { this.resolveCollision ( ( ( asteroids.model.Ship ) ( other ) ) ) ; } else if ( other instanceof asteroids.model.Bullet ) { this.resolveCollision ( ( ( asteroids.model.Bullet ) ( other ) ) ) ; } else { other.resolveCollision ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addPost ( android.internest.com.internest.Post post ) { android.content.ContentValues values = new android.content.ContentValues () ; values.put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_TITLE, java.lang.String.valueOf ( post.getPtitle () ) ) ; values.put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_BODY, java.lang.String.valueOf ( post.getPbody () ) ) ; values.put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_URL, java.lang.String.valueOf ( post.getPurl () ) ) ; try { if ( ( db ) == null ) { db = getWritableDatabase () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } db.insert ( android.internest.com.internest.MyDBHandler.TABLE_POST, null, values ) ; } 
@ java.lang.Override protected void keyDown ( int eventKey, char ch, boolean shift, boolean ctrl, boolean alt, boolean special ) throws java.lang.Exception { try { switch ( ch ) { case 'm': org.lwjgl.input.Mouse.setGrabbed ( ( ! ( org.lwjgl.input.Mouse.isGrabbed () ) ) ) ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<org.shunya.server.services.TaskRun> findTaskHistoryByTeam ( long teamId ) { org.hibernate.Criteria criteria = DBDao.getSessionFactory () .getCurrentSession () .createCriteria ( org.shunya.server.services.TaskRun.class ) ; criteria.setFetchSize ( 30 ) ; criteria.add ( org.hibernate.criterion.Restrictions.eq ( "team.id", teamId ) ) ; criteria.addOrder ( org.hibernate.criterion.Order.desc ( "id" ) ) ; try { criteria.setResultTransformer ( Criteria.DISTINCT_ROOT_ENTITY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } criteria.setMaxResults ( 30 ) ; criteria.setCacheable ( true ) ; return criteria.list () ; } 
@ java.lang.Override public com.litrum.webproject.model.ServiceOffered findServiceOfferedByName ( java.lang.String name ) { org.hibernate.Criteria criteria = getSession () .createCriteria ( getPersistentClass () ) ; try { criteria.add ( org.hibernate.criterion.Restrictions.eq ( "name", name ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( com.litrum.webproject.model.ServiceOffered ) ( criteria.uniqueResult () ) ) ; } 
public void updateState ( java.lang.String key, java.lang.Object value ) { try { if ( ( ( key.equals ( "LoginError" ) ) == true ) && ( ! ( value.equals ( "" ) ) ) ) { displayErrorMessage ( ( ( java.lang.String ) ( value ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public boolean isAnyNull () throws java.lang.Exception { assertNoNull () ; assertNoNull ( "a", "b", "c" ) ; assertNoNull ( 1, 2, 3, 4 ) ; assertNoNull ( 1 ) ; try { assertHaveNull ( 1, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertHaveNull ( "1", "2", null ) ; assertHaveNull ( null, null, null ) ; } 
private void process ( backtype.storm.tuple.Tuple t ) { ( counter ) ++; java.util.List<backtype.storm.tuple.Values> result = f.process ( t ) ; try { if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t, out ) ; if ( keepStats ) { countStat.increase ( 1 ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( getApplication () , com.lgq.fruitgrower.view.act.PublicActivity.class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle.putBoolean ( "farmer", false ) ; intent.putExtras ( bundle ) ; try { startActivityForResult ( intent, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( rela_layout.getVisibility () ) == ( android.view.View.VISIBLE ) ) { rela_layout.setVisibility ( View.GONE ) ; } } 
@ java.lang.Override public boolean onTouch ( android.view.View v, android.view.MotionEvent event ) { try { switch ( event.getAction () ) { case android.view.MotionEvent.ACTION_DOWN: break; case android.view.MotionEvent.ACTION_UP: android.widget.ImageView imageView = ( ( android.widget.ImageView ) ( v ) ) ; addAccessory ( ( ( java.lang.String ) ( imageView.getTag () ) ) ) ; dragBool = false; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void setIsAI ( boolean isAI ) { try { if ( ( this.isAI ) && ( !isAI ) ) { com.dyllongagnier.triad.gui.controller.Players.resetAI () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } boolean isDiff = isAI ^ ( this.isAI ) ; this.isAI = isAI; if ( isDiff && ( this.gameInProgress () ) ) { this.takeTurn ( this.currentGame ) ; } } 
public android.widget.Button getAttendeeNameButton () { android.widget.Button attendeeNameButton = null; try { if ( ( getContext () ) != null ) { attendeeNameButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) .findViewById ( R.id.attendeeNameButton ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return attendeeNameButton; } 
@ java.lang.Override public void startElement ( java.lang.String uri, java.lang.String localName, java.lang.String qName, org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { switch ( qName ) { case "roboUnit": currentId = attributes.getValue ( "id" ) ; break; case com.robo4j.core.configuration.XmlConfigurationFactory.ELEMENT_CONFIG: if ( ! ( configState ) ) { currentConfiguration = ""; configState = true; break; } } lastElement = qName; try { if ( configState ) { currentConfiguration += java.lang.String.format ( "<%s %s>", qName, toString ( attributes ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void taskCompleted ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus status, java.lang.String message, org.json.JSONObject json ) { removeLoadingSpinner () ; try { if ( ( status == ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus.PASSED ) ) && ( responseParser.parseLogin ( json ) ) ) { delegate.loginPassed ( uk.ac.ncl.csc2022.t14.bankingapp.Utilities.DataStore.sharedInstance () .getCurrentUser () ) ; } else { message = responseParser.parseErrorOrDefault ( message ) ; delegate.loginFailed ( message ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void displayPanelResized ( edu.njit.cs.saboc.blu.core.gui.gep.AbNDisplayPanel displayPanel ) { try { this.setBounds ( 10, ( ( ( displayPanel.getBounds () .height ) - ( panelSize.height ) ) - 10 ) , panelSize.width, panelSize.height ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.validate () ; } 
@ org.junit.Test public void getSubTasksTest () { java.util.ArrayList<net.sf.memoranda.Task> param; param = new java.util.ArrayList<net.sf.memoranda.Task> () ; param.add ( new net.sf.memoranda.TaskImpl ( new java.util.ArrayList<net.sf.memoranda.Task> () ) ) ; param.add ( new net.sf.memoranda.TaskImpl ( new java.util.ArrayList<net.sf.memoranda.Task> () ) ) ; task.setSubTasks ( param ) ; try { assertEquals ( param, task.getSubTasks () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private synchronized void tickNarjillos ( org.nusco.narjillos.genomics.GenePool genePool, org.nusco.narjillos.shared.utilities.RanGen ranGen ) { java.util.Map<org.nusco.narjillos.creature.Narjillo, java.util.Set<org.nusco.narjillos.shared.things.Thing>> narjillosToCollidedFood; try { synchronized ( narjillos ) { narjillosToCollidedFood = calculateCollisions ( narjillos ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( java.util.Map.Entry<org.nusco.narjillos.creature.Narjillo, java.util.Set<org.nusco.narjillos.shared.things.Thing>> entry : narjillosToCollidedFood.entrySet () ) { org.nusco.narjillos.creature.Narjillo narjillo = entry.getKey () ; java.util.Set<org.nusco.narjillos.shared.things.Thing> collidedFood = entry.getValue () ; consume ( narjillo, collidedFood, genePool, ranGen ) ; } } 
public void pause () { if ( mediaPlayer.isPlaying () ) { mediaPlayer.pause () ; audioManager.abandonAudioFocus ( audioFocusListener ) ; timer = new java.util.Timer () ; final java.util.TimerTask stopPlayerTask = new java.util.TimerTask () { @java.lang.Override public void run () { reset () ; this.cancel () ; } }; timer.schedule ( stopPlayerTask, edu.grinnell.kdic.RadioService.STOP_STREAM_DELAY ) ; } try { if ( wifiLock.isHeld () ) wifiLock.release () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void delete ( com.flxn.dao.model.Atribute object, int userid ) { try { if ( ( exist ( object.getId () ) ) && ( existOwner ( object.getId () , userid ) ) ) { jdbcTemplate.update ( com.flxn.dao.impl.DELETE_ATRIBUTE_BY_ID, new java.lang.Object[] { object.getId () } ) ; } else { throw new java.lang.UnsupportedOperationException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { java.lang.String fileName = this.fileUpload.getFilename () ; try { if ( ( fileName == null ) || ( fileName.isEmpty () ) ) { setStatusIcon ( CommonImages.INSTANCE.error () , true, true ) ; errorPanel.setErrorMessage ( "No file Selected", "Please select a file and then press GO" ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( this.projection.getValue () ) { form.setAction ( org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS_PROJECTION ) ; } else { form.setAction ( org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS ) ; } this.form.submit () ; } 
protected java.util.List<java.lang.String> splitQueryString ( java.lang.String query ) { final int qLen = query.length () ; java.util.List<java.lang.String> blocks = new java.util.ArrayList<java.lang.String> () ; try { for ( int index = 0; ( index + ( seqSize ) ) < qLen; index += window ) { blocks.add ( query.substring ( index, ( index + ( seqSize ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return blocks; } 
@ java.lang.Override public value.Value mul ( value.Value other ) { try { if ( ( ! ( isSet () ) ) || ( ! ( other.isSet () ) ) ) { return new value.IntegerValue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new value.IntegerValue ( ( ( value ) * ( ( ( value.IntegerValue ) ( other ) ) .getValue () ) ) ) ; } 
@ java.lang.Override public void mapInitialized () { com.lynden.gmapsfx.javascript.object.MapOptions mapOptions = new com.lynden.gmapsfx.javascript.object.MapOptions () ; mapOptions.center ( new com.lynden.gmapsfx.javascript.object.LatLong ( 47.6097, ( -122.3331 ) ) ) .overviewMapControl ( false ) .panControl ( false ) .rotateControl ( false ) .scaleControl ( false ) .streetViewControl ( false ) .zoomControl ( true ) .zoom ( 16 ) ; try { map = mapView.createMap ( mapOptions ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } trackLine = new com.lynden.gmapsfx.shapes.Polyline () ; map.addMapShape ( trackLine ) ; } 
@ org.junit.Test public void testFindByWorkHoursExpectMultipleResuts () throws com.tsystems.javaschool.logiweb.dao.exceptions.DaoException, com.tsystems.javaschool.logiweb.service.exceptions.LogiwebServiceException { setupMocks () ; java.util.List<com.tsystems.javaschool.logiweb.entities.Driver> freeDrivers = setupDriverAndJournalsTestData () ; java.util.Set<com.tsystems.javaschool.logiweb.entities.Driver> result = driverService.findUnassignedToTrucksDriversByMaxWorkingHoursAndCity ( null, 13 ) ; try { org.hamcrest.MatcherAssert.assertThat ( result, org.hamcrest.Matchers.hasItems ( freeDrivers.get ( 1 ) , freeDrivers.get ( 2 ) , freeDrivers.get ( 3 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String mimeFor ( @lombok.NonNull java.lang.String name ) { if ( name.isEmpty () ) { return ""; } lombok.val ext = pw.phylame.ycl.io.PathUtils.extensionName ( name ) ; try { if ( ext.isEmpty () ) { return pw.phylame.ycl.io.PathUtils.UNKNOWN_MIME; } } catch ( Exception ex ) { ex.printStackTrace () ; } return pw.phylame.ycl.io.PathUtils.mimeMap.get () .getProperty ( ext, pw.phylame.ycl.io.PathUtils.UNKNOWN_MIME ) ; } 
@ java.lang.Override public void onCreate () { super.onCreate () ; com.arsalan.garage.GarageApp.sGarageApp = this; if ( ( ( com.arsalan.garage.utils.FlavorConstants.BUILD_TYPE ) == ( com.arsalan.garage.utils.AppConstants.BUILD_TYPE_DEVELOPMENT ) ) && ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.GINGERBREAD ) ) ) { android.os.StrictMode.setThreadPolicy ( new android.os.StrictMode.ThreadPolicy.Builder () .detectAll () .penaltyLog () .build () ) ; android.os.StrictMode.setVmPolicy ( new android.os.StrictMode.VmPolicy.Builder () .detectAll () .penaltyLog () .build () ) ; } try { initImageLoader ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } initLoaderHandler ( this ) ; } 
public void print ( int copies ) { java.lang.String onStatus = ""; if ( isOn ) onStatus = " is on!"; else onStatus = " is off!"; java.lang.String textToPrint = ( modelNumber ) + onStatus; while ( ( copies > 0 ) && ( ! ( paperTray.isEmpty () ) ) ) { java.lang.System.out.println ( textToPrint ) ; copies--; } try { if ( paperTray.isEmpty () ) java.lang.System.out.println ( "Load more paper" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private double vectorNorm ( java.util.HashMap<java.lang.String, java.lang.Double> inputVector ) { double result = 0.0; try { for ( java.lang.String key : inputVector.keySet () ) { double temp = inputVector.get ( key ) ; result += temp * temp; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.lang.Math.sqrt ( result ) ; } 
@ java.lang.Override public team379.pathfinding.PathFindResult move ( battlecode.common.RobotController rc ) throws java.lang.Exception { try { if ( ( ( compassDirection ) == null ) || ( ( getTarget () ) == null ) ) { calculateNextTarget ( true ) ; } else { int distanceSquared = getTarget () .distanceSquaredTo ( rc.getLocation () ) ; double distance = java.lang.Math.sqrt ( distanceSquared ) ; if ( distance < ( team379.pathfinding.Orbiter.DISTANCE_THRESHOLD ) ) { calculateNextTarget ( true ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.move ( rc ) ; } 
@ org.junit.Test public void testGetTransactionWithNullArgument () throws java.lang.Exception { se.fermitet.invest.domain.Transaction answer = presenter.getTransactionBasedOnIdString ( null ) ; try { assertNotNull ( answer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertNull ( answer.getStock () ) ; assertEquals ( org.joda.time.LocalDate.now () , answer.getDate () ) ; assertNull ( answer.getFee () ) ; assertNull ( answer.getPrice () ) ; assertEquals ( ( ( java.lang.Integer ) ( 0 ) ) , answer.getNumber () ) ; assertNotNull ( answer.getId () ) ; } 
public void onClick ( android.content.DialogInterface dialog, int which ) { android.app.NotificationManager nm = ( ( android.app.NotificationManager ) ( getSystemService ( getApplicationContext () .NOTIFICATION_SERVICE ) ) ) ; try { nm.cancel ( apier.com.lifttrak.RunWorkout.uniqueID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } apier.com.lifttrak.DBHandler dbHandler = new apier.com.lifttrak.DBHandler ( getApplicationContext () , null, null, 1 ) ; dbHandler.addCompleteWorkout ( workoutSelected, exercises ) ; android.content.Intent finishWorkout = new android.content.Intent ( getApplicationContext () , apier.com.lifttrak.FinishWorkout.class ) ; startActivity ( finishWorkout ) ; finish () ; } 
@ java.lang.Override public void onConnected ( @android.support.annotation.Nullable android.os.Bundle bundle ) { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; try { mLocationRequest.setInterval ( 1000 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mLocationRequest.setFastestInterval ( 1000 ) ; mLocationRequest.setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; if ( ( android.support.v4.content.ContextCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { LocationServices.FusedLocationApi.requestLocationUpdates ( mGoogleApiClient, mLocationRequest, this ) ; } } 
private void startServices () { customPreferencesService = context.registerService ( org.eclipse.core.internal.preferences.exchange.IProductPreferencesService.class, new org.eclipse.core.internal.preferences.legacy.ProductPreferencesService () , new java.util.Hashtable<java.lang.String, java.lang.String> () ) ; try { legacyPreferencesService = context.registerService ( org.eclipse.core.internal.preferences.exchange.ILegacyPreferences.class, new org.eclipse.core.internal.preferences.legacy.InitLegacyPreferences () , new java.util.Hashtable<java.lang.String, java.lang.String> () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.bukkit.event.EventHandler public void onSign ( org.bukkit.event.block.SignChangeEvent e ) { try { if ( e.getLine ( 0 ) .equalsIgnoreCase ( "[atm]" ) ) { e.setLine ( 0, ( ( org.bukkit.ChatColor.DARK_GRAY ) + "== ATM ==" ) ) ; e.setLine ( 1, ( ( ( ( org.bukkit.ChatColor.GREEN ) + "> " ) + ( org.bukkit.ChatColor.DARK_GRAY ) ) + "Withdraw" ) ) ; e.setLine ( 2, ( ( org.bukkit.ChatColor.BLACK ) + "Deposit" ) ) ; e.setLine ( 3, ( ( org.bukkit.ChatColor.DARK_GRAY ) + "Click for Balance" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void should_provide_cell_with_matching_colours () throws java.lang.Exception { final org.binu.board.Block redYellowBlock = dataParser.createColourBlock ( 5, 4 ) ; assertBlockData ( redYellowBlock, CellColour.YELLOW, CellColour.RED ) ; final org.binu.board.Block greenPurpleBlock = dataParser.createColourBlock ( 3, 2 ) ; assertBlockData ( greenPurpleBlock, CellColour.PURPLE, CellColour.GREEN ) ; final org.binu.board.Block blueGreenBlock = dataParser.createColourBlock ( 2, 1 ) ; try { assertBlockData ( blueGreenBlock, CellColour.GREEN, CellColour.BLUE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testTop () { edu.kis.vh.stacks.StackFIFO stackObj = new edu.kis.vh.stacks.StackFIFO () ; final int EMPTY_STACK_VALUE = 0; int result = stackObj.top () ; org.junit.Assert.assertEquals ( EMPTY_STACK_VALUE, result ) ; int testValue = 4; stackObj.push ( testValue ) ; int testValue1 = 5; stackObj.push ( testValue1 ) ; result = stackObj.top () ; try { org.junit.Assert.assertEquals ( testValue, result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } result = stackObj.top () ; org.junit.Assert.assertEquals ( testValue, result ) ; } 
public void menuItemFileSaveToDataBase_onAction () { application.util.DataBaseConnection dataBaseConncetion = new application.util.DataBaseConnection () ; javafx.scene.control.Alert alert = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.INFORMATION ) ; try { alert.setTitle ( "Database" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } alert.setHeaderText ( dataBaseConncetion.SaveCallendarEntries ( mainApp.getCallendarEntriesObservableList () ) ) ; alert.showAndWait () ; } 
private void changes ( java.util.List<org.jasr.currentcy.domain.Sample> changes, java.util.List<org.jasr.currentcy.domain.Sample> samples, org.jasr.currentcy.domain.Currencies currency ) { java.util.List<org.jasr.currentcy.domain.Sample> snapshots = samplerDAO.getSnapshot ( currency ) ; try { for ( org.jasr.currentcy.domain.Sample sample1 : samples ) { boolean result = false; for ( org.jasr.currentcy.domain.Sample sample2 : snapshots ) { result = result || ( sample1.equals ( sample2 ) ) ; } if ( !result ) { changes.add ( sample1 ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent e ) { if ( ( descriptionText.getText () .length () ) == 0 ) { commentStatus = createStatus ( IStatus.WARNING, org.talend.metadata.managment.ui.i18n.Messages.getString ( "PropertiesWizardPage.EmptyDescWarning" ) ) ; } else { commentStatus = createOkStatus () ; } property.setDescription ( org.apache.commons.lang.StringUtils.trimToNull ( descriptionText.getText () ) ) ; try { property.setModificationDate ( new java.util.Date () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updatePageStatus () ; } 
public byte[] toByteArray () throws java.io.IOException { java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream () ; java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream ( bos ) ; oos.writeObject ( this ) ; try { oos.flush () ; } catch ( Exception ex ) { ex.printStackTrace () ; } oos.close () ; return bos.toByteArray () ; } 
private java.util.List<java.lang.String> listReferenceProfiles ( org.hl7.fhir.dstu3.model.ElementDefinition ed ) { java.util.List<java.lang.String> res = new java.util.ArrayList<java.lang.String> () ; try { for ( org.hl7.fhir.dstu3.model.ElementDefinition.TypeRefComponent tr : ed.getType () ) { if ( "Reference".equals ( tr.getCode () ) ) res.add ( tr.getProfile () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return res; } 
@ javax.ws.rs.POST @javax.ws.rs.Path ( value = "/save" ) @javax.ws.rs.Produces ( value = "application/json" ) public javax.ws.rs.core.Response saveReport ( @javax.ws.rs.FormParam ( value = "report" ) java.lang.String report, @javax.ws.rs.FormParam ( value = "groupid" ) int groupid ) { java.lang.String report_name = com.caxpy.bi.utility.BiUtility.saveReport ( report, groupid ) ; java.util.Map<java.lang.String, java.lang.String> resData = new java.util.HashMap<java.lang.String, java.lang.String> () ; try { resData.put ( "status", "success" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } resData.put ( "report", report_name ) ; return javax.ws.rs.core.Response.status ( 200 ) .entity ( resData ) .build () ; } 
public void writeTo ( final java.io.OutputStream outStream ) throws java.io.IOException { if ( ( ( progressHandler ) != null ) || ( ( cancellationHandler ) != null ) ) { writeWithNotify ( outStream ) ; } else { outStream.write ( this.b, this.offset, this.len ) ; } try { outStream.flush () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html", method = org.springframework.web.bind.annotation.RequestMethod.GET, produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService.findById ( id ) ; try { if ( ( datatype != null ) && ( datatype.getScope () .equals ( SCOPE.HL7STANDARD ) ) ) { return exportService.exportDataModelAsHtml ( datatype ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ org.junit.Test public void whenImporterDoesNotSupportIsImportable_thenCorrespondingFitnessFeatureShouldBeTrue () { org.corpus_tools.pepper.modules.PepperImporter importer = org.mockito.Mockito.mock ( org.corpus_tools.pepper.modules.PepperImporter.class ) ; org.mockito.Mockito.when ( importer.isImportable ( org.mockito.Matchers.any ( org.eclipse.emf.common.util.URI.class ) ) ) .thenReturn ( null ) ; try { org.assertj.core.api.Assertions.assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () .checkFitness ( importer ) .getFitness ( FitnessFeature.IS_IMPORTABLE ) ) .isEqualTo ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static int getNumberOfWeeksOfYear ( int year ) { java.util.Calendar c = java.util.Calendar.getInstance () ; c.set ( java.util.Calendar.YEAR, year ) ; try { c.set ( java.util.Calendar.MONTH, java.util.Calendar.DECEMBER ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } c.set ( java.util.Calendar.DAY_OF_MONTH, 31 ) ; int ordinalDay = c.get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( c.get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1; return ( ( ordinalDay - weekDay ) + 10 ) / 7; } 
public void actionPerformed ( java.awt.event.ActionEvent aEvt ) { java.lang.String tag = org.broad.igv.ui.util.MessageUtils.showInputDialog ( "Enter tag", renderOptions.getGroupByTag () ) ; try { if ( ( tag != null ) && ( ( tag.trim () .length () ) > 0 ) ) { renderOptions.setGroupByTag ( tag ) ; org.broad.igv.ui.IGV.getInstance () .groupAlignmentTracks ( org.broad.igv.sam.AlignmentTrack.GroupOption.TAG, tag, null ) ; org.broad.igv.sam.AlignmentTrack.refresh () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView<?> parent, android.view.View view, int pos, long id ) { android.util.Log.d ( ru.chernysh.plasmatorchsetup.MainActivity.LOG_TAG, ( "Selection in model spinner with pos = " + pos ) ) ; ru.chernysh.plasmatorchsetup.CustomAdapter adapter = ( ( ru.chernysh.plasmatorchsetup.CustomAdapter ) ( parent.getAdapter () ) ) ; try { if ( adapter != null ) { adapter.setSelected ( true ) ; int selectedKey = adapter.getKey ( pos ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void EntityDeathHelper ( org.bukkit.event.entity.EntityDeathEvent event, int damage, java.lang.Double droprate ) { java.lang.Double dropchance = prng.nextDouble () ; org.bukkit.entity.Player killer = event.getEntity () .getKiller () ; if ( dropchance >= droprate ) { return; } if ( ( plugin.configFile.getBoolean ( "mobpkonly" ) ) && ( ( killer == null ) || ( ! ( killer.hasPermission ( "playerheads.canbeheadmob" ) ) ) ) ) { return; } try { event.getDrops () .add ( org.shininet.bukkit.playerheads.Skull.getItemStack ( damage ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.facebook.react.bridge.ReactMethod public void hangUp () { java.util.Map<java.lang.String, java.lang.String> userInfo = new java.util.HashMap<> () ; userInfo.put ( "key", "value" ) ; try { com.sts.RNQuickblox.QuickbloxHandler.getInstance () .getSession () .hangUp ( userInfo ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.sts.RNQuickblox.QuickbloxHandler.getInstance () .setSession ( null ) ; com.sts.RNQuickblox.QuickbloxHandler.getInstance () .release () ; } 
private void parseCoordinateMetadata ( com.fasterxml.jackson.core.JsonParser jp ) throws java.io.IOException { jp.nextToken () ; jp.nextToken () ; try { jp.nextToken () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( jp.getCurrentToken () ) != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { jp.nextToken () ; } jp.nextToken () ; } 
private int getInternalIndexOfObjectAt ( int index ) throws java.lang.IndexOutOfBoundsException { int nbObjectsSoFar = 0; int pos = 0; try { while ( nbObjectsSoFar < index ) { jumpingalien.model.Characters currentObject = objects.get ( pos ) ; if ( ( currentObject != null ) && ( ( objects.indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar++; pos++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return pos - 1; } 
@ org.junit.Test public void testUnmarshal () { java.lang.String text = ( "<converterTest>\n " + ( xmlLine ) ) + "\n</converterTest>"; org.zetool.components.property.converter.AbstractConverterTest.DataHolder dh = ( ( org.zetool.components.property.converter.AbstractConverterTest.DataHolder ) ( xstream.fromXML ( text ) ) ) ; org.junit.Assert.assertThat ( dh.property, org.hamcrest.CoreMatchers.is ( org.zetool.components.property.converter.AbstractConverterTest.equalTo ( property ) ) ) ; try { org.junit.Assert.assertThat ( dh.property.getValue () , org.hamcrest.CoreMatchers.is ( org.hamcrest.CoreMatchers.equalTo ( property.getValue () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_drawer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } butterknife.ButterKnife.bind ( this ) ; setSupportActionBar ( mToolbar ) ; setRecyclerView () ; setDrawerToggle () ; setTvLogoutRipple () ; hasStoragePermission () ; initLetsCookReceiver () ; initProgressDialog () ; mToolbar.setNavigationIcon ( android.R.drawable.star_big_on ) ; mDrawerFragments = getDrawerFragments () ; mFragmentTags = getResources () .getStringArray ( R.array.nav_drawer_fragment_tags ) ; } 
public void initialise () { android.content.SharedPreferences settings = getSharedPreferences ( "prefs_settings", 0 ) ; try { gameplayclass.lives = settings.getInt ( "lives", 7 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.widget.TextView lives_view = ( ( android.widget.TextView ) ( findViewById ( R.id.in_game_lives ) ) ) ; lives_view.setText ( ( "Lives: " + ( gameplayclass.lives ) ) ) ; gameplayclass.initiate_blank_spaces ( this ) ; } 
@ java.lang.Override public void onChange ( boolean selfChange, android.net.Uri uri ) { try { if ( uri.equals ( Settings.System.getUriFor ( Settings.System.STATUS_BAR_EXPANDED_HEADER_TEXT_COLOR ) ) ) { updateTextColor () ; } else if ( uri.equals ( Settings.System.getUriFor ( Settings.System.STATUS_BAR_EXPANDED_HEADER_ICON_COLOR ) ) ) { updateIconColor () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setEndTime ( java.time.LocalTime end_time2 ) { try { if ( end_time2 == null ) { java.time.LocalTime localtime = java.time.LocalTime.MAX; end_time_string = ""; } else { end_time_string = end_time2.format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) .toString () ; end_time = end_time2; if ( ( end_time ) != null ) { value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; } else { value = getStartTime () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean checkWinX ( char dot ) { try { for ( int i = 0; i <= 1; i++ ) { for ( int j = 0; j <= 1; j++ ) { if ( ( j == 0 ) && ( i == 0 ) ) continue; if ( TicTacToe.checkLine ( TicTacToe.lastX, TicTacToe.lastY, i, j, TicTacToe.ROW_FOR_WIN, dot ) ) return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public java.util.Iterator<Item> iterator () { java.lang.Object[] itarray = new java.lang.Object[size]; RandomizedQueue throwaway = new RandomizedQueue ( rq ) ; int i = 0; try { while ( ! ( throwaway.isEmpty () ) ) { itarray[ ( i++ ) ] = throwaway.dequeue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new RandomizedQueueIterator ( itarray ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View layout = inflater.inflate ( R.layout.fragment_highscore, container, false ) ; addButtonListeners ( layout ) ; highscoreList = ( ( android.widget.ListView ) ( layout.findViewById ( R.id.highscore_list ) ) ) ; highscoreAdapter = new com.guesstheurf.guesstheurf.activities.adapters.HighscoreAdapter ( getActivity () , R.layout.highscore_entry, Session.INSTANCE.getHighscores () ) ; highscoreList.setAdapter ( highscoreAdapter ) ; try { com.guesstheurf.guesstheurf.activities.fragments.HighscoreFragment.setListViewHeightBasedOnChildren ( highscoreList ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return layout; } 
@ org.junit.Test public void testCollisionUp () throws java.lang.Exception { when ( input.isMoveUp () ) .thenReturn ( true ) ; try { when ( levelController.causesCollision ( any ( java.lang.Double.class ) , any ( java.lang.Double.class ) , any ( java.lang.Double.class ) , any ( java.lang.Double.class ) ) ) .thenReturn ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } player.processInput () ; player.move () ; assertEquals ( Level.SPRITE_SIZE, player.getY () ) ; } 
public void setIconInTabLayout () { tabLayout.getTabAt ( 0 ) .setIcon ( R.mipmap.selected_home ) ; tabLayout.getTabAt ( 3 ) .setIcon ( R.mipmap.share ) ; try { tabLayout.getTabAt ( 1 ) .setIcon ( R.mipmap.profile ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tabLayout.getTabAt ( 2 ) .setIcon ( R.mipmap.setting ) ; } 
protected static void addMethodUse ( java.util.Set<com.github.juanmf.java2plant.structure.Relation> relations, java.lang.Class<?> fromType, java.lang.reflect.Type fromParameterType, java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper.getSimpleName ( m.getName () ) ) + " () "; try { com.github.juanmf.java2plant.Parser.addUse ( relations, fromType, fromParameterType, m, name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ play.db.jpa.Transactional public static controllers.Result index () { models.Admin admin = controllers.SGDB.getAdmin ( session () .get ( "login" ) ) ; try { if ( admin != null ) { return ok ( index.render ( admin ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return controllers.Application.home () ; } 
public static logic.Facilities getFacility ( java.lang.String facilityName ) { logic.Facilities[] name = logic.Facilities.values () ; try { for ( logic.Facilities facility : name ) { if ( facilityName.contains ( facility.getValue () ) ) { return facility; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return logic.Facilities.SELECT; } 
private void doVibrate ( int minutes, final int _vibrationStrength ) { try { if ( minutes > 0 ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @java.lang.Override public void run () { setVibrationStart ( _vibrationStrength, 1000 ) ; } }; alarmHandler.postDelayed ( vibrationRunnable, java.util.concurrent.TimeUnit.MINUTES.toMillis ( minutes ) ) ; } else setVibrationStart ( _vibrationStrength, 1000 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onSectionAttached ( int number ) { try { switch ( number ) { case 1: android.content.Intent profile = new android.content.Intent ( this, com.example.navigationdrawer.Accueil.class ) ; startActivity ( profile ) ; break; case 2: mTitle = getString ( R.string.title_activity_google ) ; break; case 3: android.content.Intent home = new android.content.Intent ( this, com.example.navigationdrawer.Rapports.class ) ; startActivity ( home ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void setMetaData () { boolean showOSD = preferences.getBoolean ( "internal_player_osd", true ) ; if ( showOSD ) { mediaController.show ( SerenitySurfaceViewVideoActivity.CONTROLLER_DELAY ) ; } try { if ( ( progressReportingHandler ) != null ) { progressReportingHandler.postDelayed ( progressRunnable, 5000 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void getMemberIDFromUser () { try { java.lang.System.out.print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } input = scan.next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan.next () ; } memberID = java.lang.Integer.parseInt ( input ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String nickName; Nick.setHint ( "" ) ; try { if ( ! ( ( nickName = Nick.getText () .toString () ) .equals ( "" ) ) ) { android.content.Intent GoToChat = new android.content.Intent ( this, com.example.omri.ochat.ChatActivity.class ) ; GoToChat.putExtra ( "nickname", nickName ) ; startActivity ( GoToChat ) ; } else { android.util.Log.v ( "Debug", "Nickname missing" ) ; Nick.setHint ( "This field is mandatory" ) ; Nick.setHintTextColor ( Color.RED ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDelete () { try { if ( com.google.gwt.user.client.Window.confirm ( ( ( "Are you sure you want to delete " + ( candidate.getName () ) ) + " ?" ) ) ) { dispatch.execute ( adminService.removeCandidate ( candidate.getId () ) , new com.arcbees.bourseje.client.AdminRestCallback<java.lang.Void> () { @java.lang.Override public void onSuccess ( java.lang.Void result ) { removeFromParentSlot () ; } } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected static java.lang.String getRoomName ( java.util.ArrayList<main.java.com.marist.mscs721.Room> rooms ) { boolean inputCheck = false; java.lang.String test = ""; try { while ( !inputCheck ) { java.lang.System.out.println ( "Room Name?" ) ; test = main.java.com.marist.mscs721.RoomScheduler.keyboard.next () ; java.lang.System.out.println ( main.java.com.marist.mscs721.RoomScheduler.findRoomIndex ( rooms, test ) ) ; if ( ( main.java.com.marist.mscs721.RoomScheduler.findRoomIndex ( rooms, test ) ) == ( -1 ) ) { java.lang.System.out.println ( "ERROR: Invalid room. Please input a room that is on the room list." ) ; } else { inputCheck = true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return test; } 
public java.util.List<taxiservice.payments.models.PaymentsHistory> getPaymentsForClients ( long clientId ) throws taxiservice.payments.exceptions.NonExistingClientException { try { openSession () ; } catch ( Exception ex ) { ex.printStackTrace () ; } taxiservice.payments.models.Wallet clientWallet = getClientWallet ( clientId ) ; java.lang.String hql = "FROM PaymentsHistory WHERE wallet =" + ( clientWallet.getId () ) ; org.hibernate.Query query = session.createQuery ( hql ) ; java.util.List<taxiservice.payments.models.PaymentsHistory> result = query.list () ; closeSession () ; return result; } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.acra.ACRA.init ( this ) ; ir.mbaas.pushnotification.CustomGcmListener customGcmListener = new ir.mbaas.pushnotification.CustomGcmListener () ; ir.mbaas.pushnotification.CustomMBaaSListener customMBaaSListener = new ir.mbaas.pushnotification.CustomMBaaSListener () ; ir.mbaas.sdk.MBaaS.init ( this, null, null, null, false ) ; } 
@ java.lang.Override public void onResult ( com.google.android.gms.common.api.Status status ) { try { if ( status.isSuccess () ) { com.facebook.login.LoginManager.getInstance () .logOut () ; mSharedPreferencesHelper.setLastSignInMethod ( SharedPreferencesHelper.LAST_SIGN_IN_METHOD_NONE ) ; mSharedPreferencesHelper.setFacebookToken ( null ) ; mSharedPreferencesHelper.setGoogleToken ( null ) ; callback.onSuccess () ; } else { callback.onError () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void increaseImage ( double increasment ) { try { if ( ( ( this.getAirline () .getImage () ) + ( increasment * ( this.getEfficiency () ) ) ) <= 100 ) { this.getAirline () .setImage ( ( ( this.getAirline () .getImage () ) + ( increasment * ( this.getEfficiency () ) ) ) ) ; } else { this.getAirline () .setImage ( 100.0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void sendStateRequest ( java.lang.Integer transactionId, java.util.Collection<java.lang.Integer> processes ) { try { for ( java.util.Iterator<java.lang.Integer> i = processes.iterator () ; i.hasNext () ; ) { send ( new StateRequest ( transactionId, this.id, i.next () , null ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Object retrieve ( sif3.common.model.SIFZone zone, sif3.common.model.SIFContext context, sif3.common.model.PagingInfo pagingInfo, sif3.common.model.RequestMetadata metadata ) throws sif3.common.exception.PersistenceException, sif3.common.exception.UnsupportedQueryException { logger.debug ( ( ( ( "Retrieve Students for " + ( getZoneAndContext ( zone, context ) ) ) + " and RequestMetadata = " ) + metadata ) ) ; java.util.ArrayList<sif.dd.au30.model.StudentPersonalType> studentList = fetchStudents ( systemic.sif3.demo.rest.provider.StudentPersonalProvider.students, pagingInfo ) ; sif.dd.au30.model.StudentCollectionType studentCollection = dmObjectFactory.createStudentCollectionType () ; try { if ( studentList != null ) { studentCollection.getStudentPersonal () .addAll ( studentList ) ; return studentCollection; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
java.util.ArrayList<java.lang.Runnable> dependentStopped () { assert java.lang.Thread.holdsLock ( this ) ; final java.util.ArrayList<java.lang.Runnable> tasks; try { synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return new java.util.ArrayList<java.lang.Runnable> () ; } tasks = new java.util.ArrayList<java.lang.Runnable> () ; transition ( tasks ) ; asyncTasks += tasks.size () ; updateStabilityState ( leavingRestState ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return tasks; } 
public lampkicking.model.Game play ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover.start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game.setInput ( gson.toJson ( inputData ) ) ; try { game.setOutput ( gson.toJson ( outputData ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } gameRepository.save ( game ) ; return game; } 
public static me.enerccio.sp.types.PythonObject getGlobal ( java.lang.String variable ) { try { if ( ( ( PythonInterpreter.interpreter.get () ) == null ) || ( ( PythonInterpreter.interpreter.get () .currentFrame.size () ) == 0 ) ) return PythonRuntime.runtime.getGlobals () .doGet ( variable ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return PythonInterpreter.interpreter.get () .environment () .get ( variable, true, false ) ; } 
public void onClick ( android.view.View v ) { try { mDatabase.getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) .child ( "isLost" ) .setValue ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mDatabase.getReference ( "lost_items/" ) .child ( item.devAddress ) .removeValue () ; item.isLost = false; } 
@ org.junit.Test public void testPostConstructorDB () { java.lang.String title = "Please get me out of the db!"; java.lang.String text = "All I want is to be with you!"; logic.Post op = new logic.Post ( title, text ) ; long postID = op.save () ; logic.Post post = new logic.Post ( postID ) ; assertEquals ( postID, post.postID ) ; try { op.delete () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
com.pixelmed.anatproc.CodedConcept str2cc ( java.lang.String s ) { if ( s == null ) return null; try { s = s.replace ( " ( ", "" ) .replace ( " ) ", "" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String[] str = s.split ( ";" ) ; return new com.pixelmed.anatproc.CodedConcept ( null, null, str[1], null, null, str[0], str[2], null, null ) ; } 
public static java.lang.String timestampToDate ( java.lang.String timestamp ) { java.lang.Long unixtimestamp = java.lang.Long.parseLong ( timestamp ) ; try { if ( "4294967295".equals ( unixtimestamp ) ) { return ""; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd-HH:mm" ) ; java.util.Date date = new java.util.Date ( ( unixtimestamp * 1000 ) ) ; return new java.text.SimpleDateFormat ( "dd/MM/yyyy - HH:mm" ) .format ( date ) ; } 
public org.exist.xquery.functions.array.Sequence tail () throws org.exist.xquery.functions.array.XPathException { try { if ( ( vector.length () ) == 2 ) { final org.exist.xquery.functions.array.Sequence tail = vector.nth ( 1 ) ; return new org.exist.xquery.functions.array.ArrayType ( context, tail ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.exist.xquery.functions.array.ArrayType ( context, org.exist.xquery.functions.array.RT.subvec ( vector, 1, vector.length () ) ) ; } 
public view.ISprite[][] digDown ( int colonne, int ligne, view.ISprite sprite ) { this.sprites[ligne][colonne] = new view.Sprite ( image, ( colonne * ( SET_SIZE ) ) , ( ligne * ( SET_SIZE ) ) ) ; try { sprite.setY ( ( ( sprite.getY () ) + 16 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.sprites[ ( ligne + 1 ) ][colonne] = sprite; return this.sprites; } 
public void checkForLevelFinished () { try { if ( objDim.collisionCheck ( player, door ) ) { c.resetLevel () ; runTimer = false; leftPressed = false; rightPressed = false; spacePressed = false; settings.Settings.beatLevel ( level, time.getText () ) ; this.add ( beatLevelPanel ) ; beatLevelPanel.repaint () ; beatLevelPanel.revalidate () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateObjIdOnStack ( int objId, int traceBack ) { int idx = ( ( this.stackSimulator.size () ) - 1 ) - traceBack; edu.columbia.psl.cc.pojo.InstNode latestInst = this.stackSimulator.get ( idx ) ; try { latestInst.setRelatedObjId ( objId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void assembleTaskAndSave () { task.setName ( nameEdit.getText () .toString () .trim () ) ; task.setDescription ( descriptionEdit.getText () .toString () .trim () ) ; try { if ( ( lastSelectedTag ) != null ) { task.setTagId ( lastSelectedTag.getId () ) ; } else { task.setTagId ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( canComplete () ) { saveTask () ; finishAndStartRightActivity () ; } } 
@ java.lang.Override public void onPointerCancel ( playn.core.Pointer.Event event ) { if ( ( ( start ) == 0 ) || ( ! ( untransing ) ) ) return; _udir.update ( _cur.screen, _prev.screen, 0 ) ; _prev.screen.layer.setVisible ( false ) ; _udir.finish ( _cur.screen, _prev.screen ) ; try { clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFinish ( java.lang.Boolean success ) { try { if ( ( parentFragment.isAdded () ) && ( ( getTitle () ) != null ) ) { parentFragment.setPageSaved ( success ) ; org.wikipedia.util.FeedbackUtil.showMessage ( getActivity () , getActivity () .getString ( ( success ? R.string.snackbar_saved_page_format : R.string.snackbar_saved_page_missing_images ) , getTitle () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void paintComponent ( java.awt.Graphics g ) { try { super.paintComponent ( g ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( dt ) != null ) { currentPos = new int[ ( kb.getAttributeList () .size () ) - 1]; for ( int i = 0; i < ( currentPos.length ) ; i++ ) currentPos[i] = 0; drawTree ( g, dt ) ; } } 
private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection<org.arquillian.cube.docker.impl.client.config.PortBinding> portBindings = cubeContainer.getPortBindings () ; if ( portBindings == null ) { return; } try { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding.setBound ( randomPrivatePort ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String decode ( java.lang.String plain ) { java.lang.String decrypted = ""; try { for ( char letter : plain.toUpperCase () .toCharArray () ) { int index = com.soesec.util.Alphabet.IndexOf ( letter ) ; if ( index < 0 ) { decrypted += letter; continue; } int i = index - ( info.getRightShift () ) ; if ( i < 0 ) { i = 26 + i; } i = i % 26; decrypted += com.soesec.util.Alphabet.At ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return decrypted; } 
private final void drawGrid ( android.graphics.Canvas canvas, float offset, int min ) { for ( int i = 0; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i++ ) { float itimeso = i * offset; canvas.drawLine ( 0, itimeso, min, itimeso, com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas.drawLine ( itimeso, 0, itimeso, min, com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } try { canvas.drawLine ( ( min - 1 ) , 0, ( min - 1 ) , min, com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private io.minio.HttpResponse executePut ( java.lang.String bucketName, java.lang.String objectName, java.util.Map<java.lang.String, java.lang.String> headerMap, java.util.Map<java.lang.String, java.lang.String> queryParamMap, byte[] data, int length ) throws io.minio.ErrorResponseException, io.minio.InternalException, io.minio.InvalidBucketNameException, io.minio.NoResponseException, java.io.IOException, org.xmlpull.v1.XmlPullParserException { try { updateRegionMap ( bucketName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return executePut ( bucketName, objectName, headerMap, queryParamMap, Regions.INSTANCE.region ( bucketName ) , data, length ) ; } 
public void reset () { bufferPos = 0; f0 = 0L; t0 = 0L; t1 = 0L; chainValue = null; org.bouncycastle.util.Arrays.fill ( buffer, ( ( byte ) ( 0 ) ) ) ; try { if ( ( key ) != null ) { java.lang.System.arraycopy ( key, 0, buffer, 0, key.length ) ; bufferPos = org.bouncycastle.crypto.digests.Blake2bDigest.BLOCK_LENGTH_BYTES; } } catch ( Exception ex ) { ex.printStackTrace () ; } init () ; } 
java.lang.String prepareLdapAuth () { java.lang.String ldapAuth = "true"; java.lang.String confLdapAuth = env.getProperty ( "ldap.authentication" ) ; try { if ( ( confLdapAuth != null ) && ( ! ( confLdapAuth.isEmpty () ) ) ) { ldapAuth = confLdapAuth; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ! ( ldapAuth.equalsIgnoreCase ( "true" ) ) ) && ( ! ( ldapAuth.equalsIgnoreCase ( "false" ) ) ) ) { ldapAuth = "true"; } return ldapAuth; } 
public void setDevPanStatusPowerConnection ( boolean powerOn ) { if ( powerOn == ( devPanStatusPowerOn ) ) { return; } devPanStatusPowerOn = powerOn; try { sensorConnectionStatus.setText ( ( devPanStatusPowerOn ? R.string.sensor_connection_on : R.string.sensor_connection_off ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( currentFragment ) == ( ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.MULTIPLE.ordinal () ) ) { setPage ( ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.DEVICE_STATUS ) ; } } 
public void setDragSortListView () { dragSortController = new com.mobeta.android.dslv.DragSortController ( dslv ) ; dragSortController.setDragHandleId ( R.id.order_button ) ; dragSortController.setSortEnabled ( false ) ; dragSortController.setDragInitMode ( 0 ) ; dslv.setFloatViewManager ( dragSortController ) ; try { dslv.setOnTouchListener ( dragSortController ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dslv.setDragEnabled ( true ) ; } 
public int getYLocation ( int position, com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { try { switch ( orientation ) { case Left: case Right: return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top: return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getRow ( position ) ) * ( cellSize ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void friendName () { try { waitSentence ( "\"Is this your friend\"?" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } while ( nameFriend ) { waitSentence ( "\"What is his name?\"" ) ; java.lang.String userInput = readKeyboardInput.nextLine () ; waitSentence ( ( ( "\"His name is " + userInput ) + "?\"" ) ) ; userInput = readKeyboardInput.nextLine () ; if ( userInput.equalsIgnoreCase ( "Yes" ) ) { waitSentence ( "\"Thats a nice name too\"" ) ; nameFriend = false; } } } 
@ java.lang.Override public void loadNBTData ( net.minecraft.nbt.NBTTagCompound compound ) { net.minecraft.nbt.NBTTagCompound properties = ( ( net.minecraft.nbt.NBTTagCompound ) ( compound.getTag ( com.lothrazar.samscontent.common.PlayerPowerups.EXT_PROP_NAME ) ) ) ; if ( properties == null ) { properties = new net.minecraft.nbt.NBTTagCompound () ; } try { this.player.getDataWatcher () .updateObject ( com.lothrazar.samscontent.common.PlayerPowerups.WAYPOINT_WATCHER, properties.getString ( com.lothrazar.samscontent.common.PlayerPowerups.NBT_WAYPOINT ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.player.getDataWatcher () .updateObject ( com.lothrazar.samscontent.common.PlayerPowerups.TODO_WATCHER, properties.getString ( com.lothrazar.samscontent.common.PlayerPowerups.NBT_TODO ) ) ; } 
private void drawBins ( java.awt.Graphics g ) { try { g.setColor ( java.awt.Color.GRAY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int x = LEFT_MARGIN; int y = ( getHeight () ) - ( BOTTOM_MARGIN ) ; for ( int b : bins ) { int height = ( ( int ) ( scaleY ( b ) ) ) ; y -= height; g.fill3DRect ( x, y, binWidth, height, true ) ; x += binWidth; y = ( getHeight () ) - ( BOTTOM_MARGIN ) ; } } 
public java.util.List<java.lang.Double> prodOfLists ( java.util.List<java.lang.Double> xList, java.util.List<java.lang.Double> yList ) { java.util.List<java.lang.Double> resList = new java.util.ArrayList<java.lang.Double> () ; int size = xList.size () ; try { for ( int i = 0; i < size; i++ ) { resList.add ( i, ( ( xList.get ( i ) ) * ( yList.get ( i ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return resList; } 
@ java.lang.Override public void onActionFailure ( int action, @android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response, java.lang.String message ) { try { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response.getResultCode () ) == 10 ) ) { mUIDAdapter.info () ; mNotificationBar.showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar.showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) { mNotificationBar.showTemporaryInverse ( message ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void getLastLocation () { android.util.Log.d ( com.setmusic.bitmine.BitmineMainActivity.TAG, "getLastLocation" ) ; android.location.Criteria criteria = new android.location.Criteria () ; try { locationManager = ( ( android.location.LocationManager ) ( this.getSystemService ( Context.LOCATION_SERVICE ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String provider = locationManager.getBestProvider ( criteria, true ) ; storeLocation () ; } 
public static java.util.List<java.lang.Integer> shuffle ( java.util.List<?> list, int count ) { java.util.List<java.lang.Integer> listClone = new java.util.ArrayList<> () ; for ( int i = 0; i < ( list.size () ) ; ++i ) { listClone.add ( i ) ; } if ( ( list.size () ) == count ) { return listClone; } try { java.util.Collections.shuffle ( listClone ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return listClone.subList ( 0, count ) ; } 
@ java.lang.Override public void onComplete ( @android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task ) { try { android.util.Log.d ( com.glocoders.hangout.database.FirebaseHelper.TAG, ( "signInWithEmail:onComplete:" + ( task.isSuccessful () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( task.isSuccessful () ) == false ) { android.util.Log.w ( com.glocoders.hangout.database.FirebaseHelper.TAG, "signInWithEmail:failed", task.getException () ) ; code = -1; } else { code = 1; } } 
@ org.junit.Test @org.openmrs.test.Verifies ( value = "should return count of obs whose groupId is given obsGroupId", method = "getObservationCount ( List,List,List,List,List,List,Integer,Date,Date,boolean,String ) " ) public void getObservationCount_shouldReturnCountOfObsWhoseGroupIdIsGivenObsGroupId () throws java.lang.Exception { try { executeDataSet ( org.openmrs.api.ObsServiceTest.INITIAL_OBS_XML ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.openmrs.api.ObsService obsService = org.openmrs.api.context.Context.getObsService () ; java.lang.Integer count = obsService.getObservationCount ( null, null, null, null, null, null, 2, null, null, false, null ) ; org.junit.Assert.assertEquals ( 2, count.intValue () ) ; } 
public static java.lang.String cleanIniValue ( java.lang.String value ) { if ( value == null ) { return null; } value = value.trim () ; try { if ( value.startsWith ( "\"" ) ) { value = value.substring ( 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( value.endsWith ( "\"" ) ) { value = value.substring ( 0, ( ( value.length () ) - 1 ) ) ; } return value; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public <T extends org.opennaas.extensions.router.model.SettingData> java.util.List<T> getAllElementSettingDataByType ( java.lang.Class<T> clazz ) { java.util.List<org.opennaas.extensions.router.model.SettingData> list = getElementsSettingData () ; java.util.ArrayList<T> toReturn = new java.util.ArrayList<T> () ; try { for ( org.opennaas.extensions.router.model.SettingData settingData : list ) { if ( clazz.isInstance ( settingData ) ) { toReturn.add ( ( ( T ) ( settingData ) ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return toReturn; } 
static boofcv.alg.feature.detect.squares.SquareNode pickNot ( boofcv.alg.feature.detect.squares.SquareNode target, boofcv.alg.feature.detect.squares.SquareNode child0, boofcv.alg.feature.detect.squares.SquareNode child1 ) { try { for ( int i = 0; i < 4; i++ ) { boofcv.alg.feature.detect.squares.SquareEdge e = target.edges[i]; if ( e == null ) continue; boofcv.alg.feature.detect.squares.SquareNode c = e.destination ( target ) ; if ( ( c != child0 ) && ( c != child1 ) ) return c; } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new java.lang.RuntimeException ( "There was no odd one out some how" ) ; } 
private void writeNoteAttachmentEmailBody2 ( org.socialbiz.cog.AuthRequest ar, org.socialbiz.cog.OptOutAddr ooa, org.workcast.json.JSONObject data ) throws java.lang.Exception { data.put ( "optout", ooa.getUnsubscribeJSON ( ar ) ) ; java.io.File myTemplate = ar.getCogInstance () .getConfig () .getFileFromRoot ( "email/DiscussionTopicManual.chtml" ) ; try { org.socialbiz.cog.mail.ChunkTemplate.streamIt ( ar.w, myTemplate, data, ooa.getCalendar () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public D getDef ( org.auraframework.def.DefDescriptor<D> descriptor ) throws org.auraframework.throwable.quickfix.QuickFixException { org.auraframework.system.Source<D> source = sourceFactory.getSource ( descriptor ) ; try { if ( ( source != null ) && ( source.exists () ) ) { org.auraframework.system.Parser<D> parser = org.auraframework.impl.parser.ParserFactory.getParser ( source.getFormat () , descriptor ) ; D def = parser.parse ( descriptor, source ) ; return def; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void myTick ( long mils ) { try { if ( ( mils % 1000 ) == 0 ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60; java.lang.String time = ( ( java.lang.Integer.toString ( minsRemaining ) ) + ":" ) + ( java.lang.String.format ( "%02d", secsRemaining ) ) ; timeRemaining.setText ( time ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } timeInMilis = mils; } 
@ java.lang.Override public boolean doesSideBlockRendering ( net.minecraft.block.state.IBlockState state, net.minecraft.world.IBlockAccess world, net.minecraft.util.math.BlockPos pos, net.minecraft.util.EnumFacing face ) { com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawers tile = getTileEntity ( world, pos ) ; try { if ( ( tile != null ) && ( tile.getEffectiveMaterialSide () .isEmpty () ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } return super.doesSideBlockRendering ( state, world, pos, face ) ; } 
@ java.lang.Override public void run () { if ( ( ( animator ) != null ) && ( animator.isStarted () ) ) { animator.stop () ; } try { if ( ( renderer ) != null ) { renderer.dispose ( window ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } window = null; renderer = null; view = null; animator = null; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.card_overview: if ( toggleSceneButtons ) goToSceneOverView ( v, true ) ; break; case R.id.card_ingredients: if ( toggleSceneButtons ) goToSceneIngredients ( v ) ; break; case R.id.card_directions: if ( toggleSceneButtons ) goToSceneDirections ( v ) ; break; case R.id.card_images: if ( toggleSceneButtons ) { goToSceneComments ( v ) ; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { try { simController.startRunning () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( guiRunTimer ) == null ) { guiRunTimer = new javax.swing.Timer ( 15, new java.awt.event.ActionListener () { @java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController.isRunning () ) simController.tick () ; } } ) ; guiRunTimer.setRepeats ( true ) ; guiRunTimer.start () ; } } 
private boolean parseSimpleDefinition () { try { if ( ! ( variableManager.containsVariable ( splitString.getNthElement ( 0 ) ) ) ) { return isValidRightSide ( splitString.getNthElement ( 2 ) ) ; } else { com.nvl.variable.VariableType type = variableManager.getVariable ( splitString.getNthElement ( 0 ) ) .getType () ; return matchesType ( splitString.getNthElement ( 2 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod, org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent, java.lang.String name ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata; try { if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader.getDiffractionMetadataFromNexus ( mod.getFilePath () , parent, name ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this, "File does not contain metadata" ) ; metadata = lmeta = md; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return lmeta; } 
public void onCraftMatrixChanged ( net.minecraft.inventory.IInventory inv ) { try { for ( int i = 0; i < ( inv.getSizeInventory () ) ; i++ ) { this.te.setInventorySlotContents ( ( i + 1 ) , inv.getStackInSlot ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( this.craftMatrix ) != null ) this.craftResult.setInventorySlotContents ( 0, net.minecraft.item.crafting.CraftingManager.getInstance () .findMatchingRecipe ( this.craftMatrix, this.te.getWorldObj () ) ) ; } 
public boolean onPreferenceChange ( android.preference.Preference preference, java.lang.Object newValue ) { try { if ( checkPlayServices () ) { org.universAAL.android.utils.RAPIManager.registerInThread ( getApplicationContext () , ( ( java.lang.String ) ( newValue ) ) ) ; return true; } else { android.widget.Toast.makeText ( getApplicationContext () , R.string.warning_gplay, Toast.LENGTH_LONG ) .show () ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deleteFloor ( int x, int y ) { try { for ( int scan = 0; scan < ( floors.size () ) ; scan++ ) { if ( ( ( floors.get ( scan ) .xPosition ) == x ) && ( ( floors.get ( scan ) .yPosition ) == y ) ) { floors.remove ( scan ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.apache.camel.component.bean.MethodInfo findMostSpecificOverride ( org.apache.camel.component.bean.MethodInfo proposedMethodInfo ) { try { for ( org.apache.camel.component.bean.MethodInfo alreadyRegisteredMethodInfo : methodMap.values () ) { java.lang.reflect.Method alreadyRegisteredMethod = alreadyRegisteredMethodInfo.getMethod () ; java.lang.reflect.Method proposedMethod = proposedMethodInfo.getMethod () ; if ( org.apache.camel.util.ObjectHelper.isOverridingMethod ( getType () , proposedMethod, alreadyRegisteredMethod, false ) ) { return alreadyRegisteredMethodInfo; } else if ( org.apache.camel.util.ObjectHelper.isOverridingMethod ( getType () , alreadyRegisteredMethod, proposedMethod, false ) ) { return proposedMethodInfo; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private void scrolling () { detectTouchEventConsumed () ; try { if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_DOWN ) ) { if ( isFirstViewVisible () ) { isBeingDraggedFromTop () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_UP ) ) { if ( ( headerLayoutParams.height ) > ( heightOfActionBar ) ) { isBeingDraggedFromTop () ; } } } 
public java.lang.String displayContents () { java.lang.String contents = ""; int index = 0; try { while ( index < ( size () ) ) { T data = get ( index ) ; if ( data != null ) { contents = ( ( ( ( contents + "[ " ) + index ) + " ]\t= " ) + data ) + "\n"; } index++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return contents; } 
@ java.lang.Override public org.openqa.selenium.remote.DesiredCapabilities setCapabilities () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; try { caps.setCapability ( CapabilityType.BROWSER_NAME, org.fundacionjala.sfdc.core.driver.SauceLabs.ENV.getRemoteBrowser () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } caps.setCapability ( CapabilityType.VERSION, org.fundacionjala.sfdc.core.driver.SauceLabs.ENV.getRemoteBrowserVersion () ) ; caps.setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.PLATFORM, java.lang.String.format ( "%s %s", org.fundacionjala.sfdc.core.driver.SauceLabs.ENV.getRemotePlatform () , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV.getRemotePlatformVersion () ) ) ; caps.setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.RESOLUTION, org.fundacionjala.sfdc.core.driver.SauceLabs.ENV.getRemoteResolution () ) ; return caps; } 
@ org.junit.Test public void doesNotAdjustToError () { neuralNetwork.InputPerceptron testPerceptron = new neuralNetwork.InputPerceptron ( 0 ) ; final double testInput = 1.0; try { testPerceptron.setInput ( testInput ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } testPerceptron.activate () ; testPerceptron.adjustToError () ; testPerceptron.activate () ; assertEquals ( testInput, testPerceptron.output () , DELTA ) ; } 
public void markCompleted () { this.completed = true; int pointsToAdd = ( ( int ) ( ( ( 10 * ( Task.POINT_RANGE[ ( ( this.importance ) - 1 ) ] ) ) * ( Task.POINT_RANGE[ ( ( this.difficulty ) - 1 ) ] ) ) * ( calculateEstimatedTimeMultiplier ( this.estimated_time ) ) ) ) ; User currentUser = User.findUser ( this.user_id ) ; int oldExp = currentUser.getUserExperience () ; try { currentUser.updateUserExperience ( ( oldExp + pointsToAdd ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addClassPathToModule ( java.lang.String moduleName, org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { try { if ( ( this.moduleToClassPathLocations ) != null ) { java.util.List<org.eclipse.jdt.internal.core.builder.ClasspathLocation> l = this.moduleToClassPathLocations.get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList<> () ; this.moduleToClassPathLocations.put ( moduleName, l ) ; } l.add ( cp ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Boolean addTournament ( com.myapps.ekutarnia.trackmytourney.Tournament tourney ) { java.lang.Boolean success = true; android.content.ContentValues val = new android.content.ContentValues () ; val.put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_SDATE, tourney.getStartDate () .getTime () ) ; val.put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_EDATE, tourney.getEndDate () .getTime () ) ; try { val.put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_WINNER, tourney.getWinner () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase () ; db.insert ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.TABLE_TOURNAMENT, null, val ) ; db.close () ; return success; } 
@ java.lang.Override public void visitFile ( final uk.co.itmoore.intellisubsteps.psi.PsiFile file ) { try { if ( file instanceof uk.co.itmoore.intellisubsteps.psi.PsiJavaFile ) { buildSuggestionsFromJavaSource ( ( ( uk.co.itmoore.intellisubsteps.psi.PsiJavaFile ) ( file ) ) , stepImplsInScope ) ; } else if ( file instanceof uk.co.itmoore.intellisubsteps.psi.stepdefinition.psi.SubstepsDefinitionFile ) { buildSuggestionsFromSubstepsSource ( ( ( uk.co.itmoore.intellisubsteps.psi.stepdefinition.psi.SubstepsDefinitionFile ) ( file ) ) , resultSet ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { boolean end = false; try { while ( !end ) { if ( ( elements.size () ) > 0 ) { de.uni_hildesheim.sse.monitoring.runtime.recordingServer.RecordingStrategiesElement element = elements.remove ( 0 ) ; element.process ( strategy ) ; int id = element.getIdentification () ; element.release () ; end = ( Constants.ENDSYSTEM ) == id; } else { java.lang.Thread.yield () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } printElementStatistics () ; } 
public model.player.Player getPlayer ( model.adventurers.AdventurerType advT ) { java.util.Iterator<model.player.Player> it = getPlayers () .iterator () ; model.player.Player p = null; try { while ( ( it.hasNext () ) && ( ! ( ( p = it.next () ) .getCurrentAdventurer () .getADVENTURER_TYPE () .equals ( advT ) ) ) ) { } } catch ( Exception ex ) { ex.printStackTrace () ; } return p; } 
@ java.lang.Override public void onInit ( int initStatus ) { try { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { tts.setLanguage ( java.util.Locale.US ) ; } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast.makeText ( activity, "Sorry! Text to Speech failed...", Toast.LENGTH_LONG ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean containsKey ( java.lang.Object key ) { int pos = getHash ( key ) ; try { if ( ( table[pos] ) == null ) { return false; } else { hashtable.HashTable.Node curr = table[pos]; while ( curr != null ) { if ( curr.key.equals ( key ) ) { return true; } curr = curr.next; } return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.ArrayList<java.net.URL> mapToAbsolute ( org.jsoup.select.Elements anchors ) { java.util.ArrayList<java.net.URL> res = new java.util.ArrayList<> () ; try { for ( org.jsoup.nodes.Element a : anchors ) { java.net.URL u = com.codeforsanjose.blic.Crawler.parseUrl ( a.attr ( "abs:href" ) ) ; if ( u != null ) { res.add ( u ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return res; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.manual: break; case R.id.parking: break; case R.id.auto: android.content.Intent changeToCamera = new android.content.Intent ( getApplicationContext () , pegasus.bluetootharduino.CameraActivity.class ) ; startActivity ( changeToCamera ) ; break; case R.id.advanced: android.content.Intent changeToSettings = new android.content.Intent ( getApplicationContext () , pegasus.bluetootharduino.AdvSettingsActivity.class ) ; startActivity ( changeToSettings ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCompletion ( android.media.MediaPlayer mediaPlayer ) { timer = new android.os.CountDownTimer ( 2000, 1000 ) { @java.lang.Override public void onTick ( long l ) { } @java.lang.Override public void onFinish () { trialNum = 1; startTrial () ; } }; try { timer.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void toHint () { mTracker.send ( new com.google.android.gms.analytics.HitBuilders.EventBuilder () .setCategory ( "Action" ) .setAction ( "MoveToHint" ) .setLabel ( com.sweets.rumandapp.StageMainBottomFragment.SCREEN_NAME ) .build () ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.sweets.rumandapp.StageHintActivity.class ) ; try { intent.putExtra ( Const.STAGE_ID_KEY, stageId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( intent ) ; } 
public void updateLocation ( java.lang.String whiteMove, java.lang.String blackMove ) { player1.nextMove ( whiteMove ) ; try { if ( whiteMove.contains ( "x" ) ) { player2.setCapture ( whiteMove ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } player2.nextMove ( blackMove ) ; if ( blackMove.contains ( "x" ) ) { player1.setCapture ( blackMove ) ; } } 
@ java.lang.Override public java.net.URL getResource ( java.lang.String name ) { try { ro.fortsoft.pf4j.IzouPluginClassLoader.log.debug ( "Trying to find resource '{}' in plugin classpath", name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.net.URL url = findResource ( name ) ; if ( url != null ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log.debug ( "Found resource '{}' in plugin classpath", name ) ; return url; } ro.fortsoft.pf4j.IzouPluginClassLoader.log.debug ( "Couldn't find resource '{}' in plugin classpath. Delegating to parent" ) ; return super.getResource ( name ) ; } 
@ java.lang.Override @cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) protected net.minecraft.util.IIcon getUnderlayIcon ( net.minecraft.world.IBlockAccess world, int x, int y, int z, int side ) { int meta = world.getBlockMetadata ( x, y, z ) ; org.pfaa.chemica.model.IndustrialMaterial host = this.getGeoMaterial ( meta ) .getHost () ; try { if ( host != null ) { net.minecraft.util.IIcon icon = getHostIcon ( world, x, y, z ) ; if ( icon != null ) { return icon; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return this.getUnderlayIcon ( side, meta ) ; } 
void getChain ( java.io.DataInputStream din, java.io.DataOutputStream dout ) throws java.lang.Exception { java.lang.String username = peergos.shared.corenode.CoreNodeUtils.deserializeString ( din ) ; java.util.List<peergos.shared.corenode.UserPublicKeyLink> chain = coreNode.getChain ( username ) .get () ; dout.writeInt ( chain.size () ) ; try { for ( peergos.shared.corenode.UserPublicKeyLink link : chain ) { peergos.shared.util.Serialize.serialize ( link.serialize () , dout ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname, final java.lang.String requestHeader, final java.util.List<java.lang.String> serviceBaseDomains, final java.util.List<java.lang.String> serviceConfigHeaders, final java.lang.String headerValue, final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req.setServerName ( requestHostname ) ; req.addHeader ( requestHeader, headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil.getZoneName ( req, serviceBaseDomains, serviceConfigHeaders ) ; try { org.testng.Assert.assertEquals ( subdomain, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int linearIndex ( int i ) { setLinearStride () ; int idx = i; try { for ( int j = 0; j < ( ( org.nd4j.linalg.api.shape.Shape.rank ( shapeInformation ) ) - 1 ) ; j++ ) { if ( ( size ( i ) ) == 1 ) continue; idx += i * ( stride ( j ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( org.nd4j.linalg.api.shape.Shape.offset ( shapeInfo () ) ) + idx; } 
private org.nesty.core.httpserver.rest.controller.URLController findController () { org.nesty.core.httpserver.rest.URLResource resource = org.nesty.core.httpserver.rest.URLResource.fromHttp ( httpContext.getUri () , httpContext.getRequestMethod () ) ; org.nesty.core.httpserver.rest.controller.URLController controller; if ( ( controller = controllerRouter.findURLController ( resource ) ) == null ) { sendResponse ( org.nesty.core.httpserver.rest.response.HttpResponseBuilder.create ( httpContext, HttpResponseStatus.NOT_FOUND ) ) ; org.nesty.core.httpserver.HttpServerStats.incrRequestMiss () ; return null; } try { if ( ! ( controller.isInternal () ) ) { org.nesty.core.httpserver.HttpServerStats.incrRequestHit () ; controller.hit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return controller; } 
public static void releaseColor ( int color, int which ) { try { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES: if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors.contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors.push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE: if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors.contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors.push ( color ) ; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<com.xz.data.prepare.RawData> fetchData ( com.xz.data.syntax.TqlEntity tqlEntity, com.xz.data.syntax.TqlInterval tqlInterval ) { java.util.List<com.xz.data.prepare.RawData> result = com.google.common.collect.Lists.newArrayList () ; try { for ( int i = 1; i < 4; ++i ) { result.add ( new com.xz.data.prepare.RawData ( i, null ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public static int addAssetPath ( android.content.res.AssetManager assets, java.lang.String path ) { try { if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) { net.wequick.small.util.ReflectAccelerator.sAddAssetPath = net.wequick.small.util.ReflectAccelerator.getMethod ( android.content.res.AssetManager.class, "addAssetPath", new java.lang.Class[] { java.lang.String.class } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) return 0; java.lang.Integer ret = net.wequick.small.util.ReflectAccelerator.invoke ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath, assets, path ) ; if ( ret == null ) return 0; return ret; } 
public void enqueueNoDependencies ( java.util.Set<eu.sqooss.service.scheduler.Job> jobs ) throws eu.sqooss.service.scheduler.SchedulerException { try { synchronized ( this ) { for ( eu.sqooss.service.scheduler.Job job : jobs ) { if ( ( logger ) != null ) logger.debug ( ( "Scheduler ServiceImpl: queuing job " + ( job.toString () ) ) ) ; job.callAboutToBeEnqueued ( this ) ; java.util.concurrent.Future<java.lang.Void> future = executorService.submit ( job ) ; job.future = future; stats.addWaitingJob ( job.getClass () .toString () ) ; stats.incTotalJobs () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setLine ( int line, java.lang.String text ) { if ( ( text == null ) || ( text.isEmpty () ) ) { removeLine ( line ) ; return; } text = org.bukkit.ChatColor.translateAlternateColorCodes ( '&', text ) ; try { if ( line >= ( armorStands.size () ) ) { addLine ( line, text ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } armorStands.get ( line ) .setCustomName ( text ) ; } 
@ java.lang.Override public void onScrollStateChanged ( android.widget.AbsListView view, int scrollState ) { if ( ( totalItemCount ) <= 1 ) { return; } try { if ( ( ( lastVisibleItem ) == ( totalItemCount ) ) && ( scrollState == ( SCROLL_STATE_IDLE ) ) ) { if ( ! ( isLoading ) ) { isLoading = true; footerView.setVisibility ( View.VISIBLE ) ; onLoadListener.onLoad () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public android.view.View getView ( int pos, android.view.View v, android.view.ViewGroup p ) { android.widget.TextView view = new android.widget.TextView ( this ) ; try { view.setTextSize ( 25 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( items ) != null ) { view.setText ( items.get ( pos ) .getText () ) ; } else { view.setText ( pos ) ; } return view; } 
public void setOutcomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util.findConnectorFor ( portletWidget.getContentWidget () ) ; try { if ( ( incomingPortletCandidate ) == pc ) { incomingPortletCandidate = null; } else if ( getChildComponents () .contains ( pc ) ) { outcomingPortletCandidate = pc; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList<com.example.nils.grocerylist.Item> list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; try { switch ( mode ) { case 1: return healthLogic.getCheapestItem () ; case 2: return healthLogic.getHealthiestItem () ; default: return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setTemperature ( java.lang.String h ) { strTemperature = h; try { if ( h != null ) { int i = strTemperature.indexOf ( '.' ) ; i = java.lang.Integer.parseInt ( strTemperature.substring ( 0, i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.Properties getHibernateProperties () { java.util.Properties properties = new java.util.Properties () ; try { properties.put ( "hibernate.dialect", env.getProperty ( com.project.shopping_Backend.config.HibernateConfig.DATABASE_DIALECT ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } properties.put ( "hibernate.show_sql", env.getProperty ( com.project.shopping_Backend.config.HibernateConfig.HIBERNATE_SHOW_SQL ) ) ; properties.put ( "hibernate.format_sql", env.getProperty ( com.project.shopping_Backend.config.HibernateConfig.HIBERNATE_FORMAT_SQL ) ) ; return properties; } 
public boolean findItem ( java.lang.String item ) { boolean q = false; java.lang.String name = item; try { for ( int num = 0; num < 101; num++ ) { if ( items[num][0].toLowerCase () .equals ( name.toLowerCase () ) ) { q = true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return q; } 
public static void register ( net.minecraft.block.Block block ) { if ( Config.debug ) java.lang.System.out.println ( ( "Registered " + ( block.getRegistryName () ) ) ) ; try { net.minecraftforge.fml.common.registry.GameRegistry.register ( block ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ! ( shadows.plants.util.Util.isException ( block ) ) ) && ( ! ( block instanceof shadows.plants.block.internal.cosmetic.BlockDoubleHarvestable ) ) ) net.minecraftforge.fml.common.registry.GameRegistry.register ( new net.minecraft.item.ItemBlock ( block ) , block.getRegistryName () ) ; } 
@ java.lang.Override public void onTransactionChainFailed ( final org.opendaylight.controller.md.sal.common.api.data.TransactionChain<?, ?> chain, final org.opendaylight.controller.md.sal.common.api.data.AsyncTransaction<?, ?> transaction, final java.lang.Throwable cause ) { try { synchronized ( txLock ) { if ( ( org.opendaylight.openflowplugin.impl.device.TransactionChainManager.TransactionChainManagerStatus.WORKING ) == ( transactionChainManagerStatus ) ) { org.opendaylight.openflowplugin.impl.device.TransactionChainManager.LOG.warn ( "Transaction chain failed, recreating chain due to ", cause ) ; createTxChain ( chain ) ; wTx = null; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.ArrayList<java.lang.String> getProjectionIds () { java.util.ArrayList<java.lang.String> projIds = new java.util.ArrayList<java.lang.String> () ; try { if ( ! ( projectionInfo.isEmpty () ) ) { return new java.util.ArrayList<java.lang.String> ( projectionInfo.keySet () ) ; } else if ( ( neuroMLDocument ) != null ) { for ( org.neuroml.model.Projection proj : neuroMLDocument.getNetwork () .get ( 0 ) .getProjection () ) { projIds.add ( proj.getId () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return projIds; } 
@ java.lang.Override protected void initResource ( android.os.Bundle savedInstanceState ) { setSupportActionBar ( R.id.zxingscanview_toolbar ) ; scanView = ( ( am.widget.zxingscanview.ZxingScanView ) ( findViewById ( R.id.zxingscanview_zsv_scan ) ) ) ; foregroundView = ( ( am.widget.zxingscanview.ZxingForegroundView ) ( findViewById ( R.id.zxingscanview_zfv_foreground ) ) ) ; try { scanView.addOnScanListener ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } foregroundView.setOpenDrawable ( new android.support.v4.widget.MaterialLoadingProgressDrawable ( foregroundView ) ) ; } 
private void setupSandbox () { org.commcare.util.mocks.MockUserDataSandbox sandbox = new org.commcare.util.mocks.MockUserDataSandbox ( mPrototypeFactory ) ; sandbox.setAppFixtureStorageLocation ( ( ( org.javarosa.core.services.storage.IStorageUtilityIndexed<org.javarosa.core.model.instance.FormInstance> ) ( org.javarosa.core.services.storage.StorageManager.getStorage ( FormInstance.STORAGE_KEY ) ) ) ) ; mSandbox = sandbox; try { if ( ( mLocalUserCredentials ) != null ) { restoreUserToSandbox ( mSandbox, mLocalUserCredentials[0], mLocalUserCredentials[1] ) ; } else if ( ( mRestoreFile ) != null ) { restoreFileToSandbox ( mSandbox, mRestoreFile ) ; } else { restoreDemoUserToSandbox ( mSandbox ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public synchronized void next () { gui.disable () ; getContext () .actorSelection ( util.MessageHelper.getActorAddress ( actors.BillingInfoNode.class ) ) .tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; try { getContext () .actorSelection ( util.MessageHelper.getActorAddress ( actors.ProcessReservationNode.class ) ) .tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.next () ; self () .tell ( new actors.TravelInfoNode.Start () , self () ) ; } 
@ java.lang.Override public int compare ( java.lang.String o1, java.lang.String o2 ) { try { if ( count.get ( o1 ) .equals ( count.get ( o2 ) ) ) { return word.get ( o1 ) .compareTo ( word.get ( o2 ) ) ; } else { return count.get ( o2 ) .compareTo ( count.get ( o1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/films/addOrUpdate" ) public java.lang.String admin_films_addOrUpdate ( @org.springframework.web.bind.annotation.RequestParam ( value = "id", required = false, defaultValue = "null" ) java.lang.String id, org.springframework.ui.Model model ) { dao.FilmDb filmDb = new dao.FilmDb () ; if ( ! ( id.equals ( "null" ) ) ) { org.hibernate.Session session = hibernate.HibernateUtil.getSessionFactory () .openSession () ; filmDb = ( ( dao.FilmDb ) ( session.createQuery ( ( "from FilmDb f where f.id=" + id ) ) .list () .get ( 0 ) ) ) ; } try { model.addAttribute ( "film", filmDb ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "admin/films/addOrUpdate"; } 
public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View v, int position, long id ) { buddyname = ( ( android.widget.TextView ) ( v.findViewById ( R.id.BuddyName ) ) ) .getText () .toString () ; macAddr = ( ( android.widget.TextView ) ( v.findViewById ( R.id.MacAddress ) ) ) .getText () .toString () ; registerForContextMenu ( buddylistView ) ; try { buddylistView.showContextMenuForChild ( v ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } unregisterForContextMenu ( buddylistView ) ; } 
@ java.lang.Override public void pop ( com.reactnativenavigation.params.ScreenParams params ) { try { getCurrentScreenStack () .pop ( params.animateScreenTransitions, new com.reactnativenavigation.screens.ScreenStack.OnScreenPop () { @java.lang.Override public void onScreenPopAnimationEnd () { setBottomTabsStyleFromCurrentScreen () ; EventBus.instance.post ( new com.reactnativenavigation.events.ScreenChangedEvent ( getCurrentScreenStack () .peek () .getScreenParams () ) ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int getProgress () { try { if ( ( getSize () ) > 0 ) { return isComplete () ? 100 : ( ( int ) ( ( ( bytesReceived ) * 100 ) / ( getSize () ) ) ) ; } else { return 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_renshuu ) ; kanaKey = ( ( android.widget.TextView ) ( findViewById ( R.id.kanaKey ) ) ) ; chisaiIndicator = ( ( android.widget.TextView ) ( findViewById ( R.id.chisaiIndicator ) ) ) ; chisaiIndicator.setVisibility ( TextView.INVISIBLE ) ; userInput = ( ( android.widget.EditText ) ( findViewById ( R.id.userInput ) ) ) ; try { userInput.setVisibility ( EditText.INVISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.nihonkaeritai.flickrenshuu.repositories.KanaRepository.initialize ( this ) ; waitForTapToStart () ; } 
public void submitAnswers ( android.view.View view ) { try { score += questionNo1 () ; } catch ( Exception ex ) { ex.printStackTrace () ; } score += questionNo2 () ; score += questionNo3 () ; score += questionNo4 () ; score += questionNo5 () ; score += questionNo6 () ; score += questionNo7 () ; score += questionNo8 () ; score += questionNo9 () ; score += questionNo10 () ; android.content.Intent mainToResultsIntent = new android.content.Intent ( this, com.example.android.quizapp.ResultsActivity.class ) ; mainToResultsIntent.putExtra ( "correct", score ) ; startActivity ( mainToResultsIntent ) ; score = 0; } 
protected void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout.closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList.get ( position ) .handler; try { if ( handler != null ) { handler.perfrom ( getActivity () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isCompatible ( thobe.logfileviewer.plugin.api.IPluginApiVersion versionOfPlugin ) { try { if ( ( versionOfPlugin.getMajorVersion () ) != ( getMajorVersion () ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( versionOfPlugin.getMinorVersion () ) < ( this.getMinorVersion () ) ) { return false; } return true; } 
private void addAllNumbers () { allHandles = new java.util.ArrayList<> () ; addAllDecimalNumbers () ; addAllHexNumbers () ; addAllWebColorNumbers () ; try { for ( java.util.List<processing.mode.java.tweak.Handle> handle : allHandles ) { java.util.Collections.sort ( handle, new processing.mode.java.tweak.HandleComparator () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.action_home: android.content.Intent homeIntentVE = new android.content.Intent ( this, com.easysplit.mainview.MainActivity.class ) ; startActivity ( homeIntentVE ) ; return true; case R.id.action_logout: android.content.Intent logoutIntentVEx = new android.content.Intent ( this, com.easysplit.mainview.UserLogin.class ) ; startActivity ( logoutIntentVEx ) ; return true; default: return super.onOptionsItemSelected ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.studiohartman.jamepad.ControllerState getState ( int index ) throws java.lang.IllegalStateException { try { verifyInitialized () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( index < ( controllers.length ) ) && ( index > 0 ) ) { update () ; return com.studiohartman.jamepad.ControllerState.getInstanceFromController ( controllers[index] ) ; } else { return com.studiohartman.jamepad.ControllerState.getDisconnectedControllerInstance () ; } } 
@ java.lang.Override public void onValueChange ( final com.google.gwt.event.logical.shared.ValueChangeEvent<java.lang.String> event ) { try { this.setDirty ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event.getSource () ) ) ; final org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box.getParent () ) ) ; this.validate ( param, box, group ) ; } 
private void setProfileLowQuality ( com.example.vasskob.mycamera.utils.PictureSize videoSize, boolean isAudioOn ) { android.media.CamcorderProfile profile = android.media.CamcorderProfile.get ( CamcorderProfile.QUALITY_480P ) ; if ( isAudioOn ) { setAudioParams ( profile ) ; } try { setVideoRateParams ( profile, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mMediaRecorder.setVideoSize ( videoSize.width () , videoSize.height () ) ; } 
@ java.lang.Override protected void onResume () { super.onResume () ; if ( ( com.facebook.AccessToken.getCurrentAccessToken () ) != null ) { android.content.Intent intent = new android.content.Intent ( this, map.minimap.MainActivity.class ) ; startActivity ( intent ) ; } try { com.facebook.appevents.AppEventsLogger.activateApp ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void reduce ( org.apache.hadoop.io.Text word, java.lang.Iterable<org.apache.hadoop.io.IntWritable> counts, com.moz.commoncrawl.Context context ) throws java.io.IOException, java.lang.InterruptedException { int sum = 0; for ( org.apache.hadoop.io.IntWritable count : counts ) { sum += count.get () ; } try { if ( ( ( threshold ) == ( -1 ) ) || ( sum > ( threshold ) ) ) context.write ( word, new org.apache.hadoop.io.IntWritable ( sum ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.Map<java.lang.String, java.lang.String> getInvertedModIdMap () { try { com.compomics.denovogui.io.PepNovoModificationFile.fillModIdMap () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap = new java.util.HashMap<java.lang.String, java.lang.String> () ; for ( java.util.Map.Entry<java.lang.String, java.lang.String> entry : com.compomics.denovogui.io.PepNovoModificationFile.modIdMap.entrySet () ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap.put ( entry.getValue () , entry.getKey () ) ; } return com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap; } 
public void updateWithGridEntry ( com.graphhopper.routing.util.probabilistic.GridEntry gridEntry ) { try { synchronized ( entries ) { if ( ! ( entries.add ( gridEntry ) ) ) { for ( com.graphhopper.routing.util.probabilistic.GridEntry entry : entries ) { if ( entry.equals ( gridEntry ) ) { entry.updateValues ( gridEntry.getValues () ) ; } } } else { for ( int edge : gridEntry.getEdges () ) { edgeCache.put ( edge, gridEntry ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int printRecord ( java.lang.String[] args ) throws com.fasterxml.jackson.core.JsonProcessingException, java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long.valueOf ( com.stata.sfi.Macro.getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid, dbg ) ; try { org.paces.Stata.JSON.StataJSON.toJSON ( x ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } x = null; obid = null; dbg = null; return 0; } 
public void backNavigation () { boolean popped = getSupportFragmentManager () .popBackStackImmediate () ; try { if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager.findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper.setupFab ( curFrag, true ) ; } else { finish () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public io.dropwizard.auth.AuthFactory<java.lang.Object, T> clone ( boolean required ) { io.dropwizard.auth.ChainedAuthFactory<T> clone = new io.dropwizard.auth.ChainedAuthFactory<> () ; try { for ( io.dropwizard.auth.AuthFactory<?, T> factory : factories ) { clone.addChainedProvider ( factory.clone ( required ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return clone; } 
public void makeSmall () { try { for ( int i = 0; i < ( first.adapter.vList.size () ) ; i++ ) { ( ( android.widget.TextView ) ( first.adapter.vList.get ( i ) ) ) .setTextSize ( TypedValue.COMPLEX_UNIT_SP, 70 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.Set<D> computeTargets ( D source ) { try { if ( source.equals ( fromValue ) ) { return heros.flowfunc.Transfer.twoElementSet ( source, toValue ) ; } else if ( source.equals ( toValue ) ) { return java.util.Collections.emptySet () ; } else { return java.util.Collections.singleton ( source ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSpinnerItemSelected ( android.widget.Spinner spinner, int position ) { try { if ( ( spinner.getId () ) == ( org.droidplanner.android.R.id.cameraFileSpinner ) ) { if ( cameraAdapter.isEmpty () ) return; com.o3dr.services.android.lib.drone.mission.item.complex.CameraDetail cameraInfo = cameraAdapter.getItem ( position ) ; for ( T survey : getMissionItems () ) { survey.getSurveyDetail () .setCameraDetail ( cameraInfo ) ; } onScrollingEnded ( mAnglePicker, 0, 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String readHeaderString ( byte[] buffer ) { int i = 0; try { while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools.endOfHeader ( buffer, ( i - 1 ) ) ) ) ) { i++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.lang.String ( buffer, 0, i ) ; } 
public void addPizza ( com.preproduction.delivery.domain.Pizza pizza ) { try { if ( ( orderSize ) < ( com.preproduction.delivery.domain.Order.MAX_ORDER_SIZE ) ) { ( orderSize ) ++; for ( com.preproduction.delivery.domain.OrderDetails od : pizzas ) { if ( od.getPizza () .equals ( pizza ) ) { od.setQuantity ( ( ( od.getQuantity () ) + 1 ) ) ; return; } } pizzas.add ( new com.preproduction.delivery.domain.OrderDetails ( pizza, 1, this ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void applyUpgrade () { try { if ( ( main.Scoreboard.XP () ) >= ( upgradeCost () ) ) { main.Scoreboard.modXP ( ( - ( upgradeCost () ) ) ) ; items.Gun g = ( ( items.Gun ) ( gui.Controller.getPlayer () .getWeapons () .get ( 1 ) ) ) ; gui.Controller.getPlayer () .replaceWeapon ( 1, new items.Gun ( g.fireRate () , g.MAX_AMMO, g.spareAmmo () , g.RELOAD_FACTOR, false ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void idle ( com.esotericsoftware.kryonet.Connection conn ) { final T connection = classTag.cast ( conn ) ; final java.util.List<com.esotericsoftware.kryonet.adapters.Listener<? super T>> listeners = this.listeners; try { for ( com.esotericsoftware.kryonet.adapters.Listener<? super T> listener : listeners ) { listener.idle ( connection ) ; if ( ! ( connection.isIdle () ) ) break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String encode ( java.lang.String input ) { java.lang.String rtn = ""; java.lang.String first5 = input.toLowerCase () .concat ( " " ) .substring ( 0, 5 ) ; try { for ( int i = 0; i < 5; ++i ) { int ascii = ( ( int ) ( first5.charAt ( i ) ) ) ; rtn = rtn.concat ( java.lang.String.valueOf ( ascii ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.lang.String.valueOf ( java.lang.Long.parseLong ( rtn ) ) ; } 
@ org.junit.Test public void testFindByMessageAuthor () { in.shekhar.forumapp.domain.Message message = new in.shekhar.forumapp.domain.Message ( "test_user", "hello world" ) ; try { messageRepository.save ( message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<in.shekhar.forumapp.domain.Message> messages = messageRepository.findByMessageAuthor ( "test_user" ) ; assertNotNull ( messages ) ; assertFalse ( messages.isEmpty () ) ; assertEquals ( 1, messages.size () ) ; assertEquals ( 1, messages.size () ) ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Object result ) { bIsRunning = false; try { if ( ( listener ) != null ) { listener.onDone ( name ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( asyncCallback ) != null ) && ( hasSentResult ) ) { hasSentResult = false; asyncCallback.onResult ( err, rs ) ; } } 
private boolean confirmDeleteProjects ( java.util.List<org.eclipse.core.resources.IResource> resources ) { org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog dialog = new org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog ( shellProvider.getShell () , resources ) ; try { dialog.setTestingMode ( fTestingMode ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int code = dialog.open () ; deleteContent = dialog.getDeleteContent () ; return code == 0; } 
@ java.lang.Override protected void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } unregisterReceiver () ; if ( isAnimatingRefreshButton ) { isAnimatingRefreshButton = false; } if ( mShouldFinish ) { overridePendingTransition ( 0, 0 ) ; finish () ; } if ( ( mScrollPositionManager ) != null ) { mScrollPositionManager.saveToPreferences ( this, org.wordpress.android.ui.WPDrawerActivity.SCROLL_POSITION_ID ) ; } } 
public void accelerate ( double timedelta ) { traffic_sim.Vehicle in_front = current_lane.getVehicleInFront ( this ) ; try { if ( ( in_front == null ) || ( ( in_front != null ) && ( ( getFrontVehicleDistance ( in_front ) ) >= ( 2 * ( Lane.min_car_distance ) ) ) ) ) { current_velocity += timedelta * ( ACCEL ) ; current_velocity = ( ( current_velocity ) > ( MAX_VELOCITY ) ) ? MAX_VELOCITY : current_velocity; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
long getZobristKey ( java.util.HashSet<java.lang.String> wPawns, java.util.HashSet<java.lang.String> bPawns ) { long zobristKey = 0; for ( java.lang.String wPos : wPawns ) zobristKey ^= wZobrist.get ( wPos ) ; try { for ( java.lang.String bPos : bPawns ) zobristKey ^= bZobrist.get ( bPos ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return zobristKey; } 
public synchronized void newChar ( char c ) { try { ngram.putChar ( c ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String s = ngram.getString () ; if ( s != null ) { java.lang.Long currentNumber = numberOfNgrams.get ( s ) ; if ( currentNumber == null ) { currentNumber = 1L; } else { currentNumber++; } numberOfNgrams.put ( s, currentNumber ) ; } } 
@ java.lang.Override public void execute () { try { if ( firstMessage ) { models.NotificationCounter.incrementConversationsCount ( recipient.id ) ; email.SendgridEmailClient.getInstatnce () .sendMailOnConversation ( sender, recipient, message.conversation.post.title, message.body ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mobile.GcmSender.sendNewMessageNotification ( recipient.id, sender.name, message.body ) ; } 
@ java.lang.Override public void onBackPressed () { android.support.v4.widget.DrawerLayout drawer = ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( getDrawerLayoutId () ) ) ) ; try { if ( drawer.isDrawerOpen ( GravityCompat.START ) ) { drawer.closeDrawer ( GravityCompat.START ) ; } else { super.onBackPressed () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void pause () { try { mBitmap = mRenderView.getBitmap () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.hustunique.parsingplayer.util.LogUtil.v ( com.hustunique.parsingplayer.player.media.ParsingMediaManager.TAG, ( ( ( ( ( "paused, cache thumbnail " + ( mBitmap ) ) + " from " ) + ( mRenderView ) ) + " size " ) + ( mBitmap.getByteCount () ) ) ) ; mCurrentPlayerProxy.pause () ; } 
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false; try { if ( ( ( ( currentInput.toLowerCase () .contains ( "sdf" ) ) || ( currentInput.toLowerCase () .contains ( "dfg" ) ) ) || ( currentInput.toLowerCase () .contains ( "cvb" ) ) ) || ( currentInput.toLowerCase () .contains ( ",./" ) ) ) { hasMash = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return hasMash; } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest, int flags ) { dest.writeLong ( this.id ) ; dest.writeString ( this.title ) ; dest.writeString ( this.releaseDate ) ; dest.writeDouble ( this.userRating ) ; dest.writeString ( this.plot ) ; try { dest.writeString ( this.posterPath ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dest.writeString ( this.genre ) ; } 
protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { super.onActivityResult ( requestCode, resultCode, data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } switch ( requestCode ) { case 1: if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { int switchNum = data.getIntExtra ( com.example.scanitgrocerystorehelper.MainActivity.DELETE_SWITCH, 0 ) ; if ( switchNum != 0 ) { long newNum = data.getLongExtra ( com.example.scanitgrocerystorehelper.MainActivity.KEY_LIST_ID, 0 ) ; if ( newNum != 0 ) deleteList ( mSqlAdapter.getList ( newNum ) ) ; } } } } 
public void viewBlocks ( GameInfo.Environment.Blocks.BlockBase[][] blocks ) { try { for ( int x = 0; x < ( blocks.length ) ; x++ ) { for ( int y = 0; y < ( blocks[x].length ) ; y++ ) { if ( ( blocks[y][x] ) == null ) { java.lang.System.out.print ( "NULL|" ) ; } else { java.lang.System.out.print ( "GOOD|" ) ; } } java.lang.System.out.println () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { synchronized ( this.stash ) { if ( this.stash.containsKey ( item ) ) { final java.util.Set<java.util.UUID> uuids = this.stash.get ( item ) ; uuids.remove ( player ) ; if ( uuids.isEmpty () ) this.stash.remove ( item ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int charCode ( char c ) { try { if ( java.lang.Character.isLetter ( c ) ) { return ( c - 'A' ) + 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( c == '[' ) return 27; if ( c == '\\' ) return 28; if ( c == ']' ) return 29; if ( c == '^' ) return 30; if ( c == '_' ) return 31; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } 
@ org.junit.Test public void shouldInstallAndUnInstallPuppetModule () { com.xebialabs.deployit.plugin.api.udm.Deployed<?, ?> deployed = getDeployed ( "1.5.0", "puppetlabs-apache" ) ; org.junit.Assert.assertThat ( getSteps ( deployed ) .size () , org.hamcrest.CoreMatchers.equalTo ( 2 ) ) ; com.xebialabs.deployit.plugin.api.udm.DeployedApplication puppetModuleApp = newDeployedApplication ( "puppetlabs-apache", "1.5.0", deployed ) ; assertInitial ( puppetModuleApp ) ; getPuppetModuleListCommandOutput () ; assertModuleInstallAndVersionCheck ( com.xebialabs.deployit.plugin.puppet.module.APACHE_MODULE_VERSION_1_5_0 ) ; assertUndeploy ( puppetModuleApp ) ; getPuppetModuleListCommandOutput () ; try { org.junit.Assert.assertThat ( executionContext.getCapturedOutput () , hasItem ( not ( containsString ( "puppetlabs-apache" ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addNew ( uk.ac.ucl.excites.sapelli.collector.transmission.SendSchedule schedule ) { try { if ( schedule != null ) { schedule.setEnabled ( true ) ; save ( schedule, true ) ; listScheduleAdapter.add ( schedule ) ; } else toggleConfigGroup ( true, ( ! ( listScheduleAdapter.isEmpty () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.ArrayList<Node> getMovableNeighbours () { java.util.ArrayList<Node> movableNeighbours = new java.util.ArrayList<Node> () ; try { for ( Node node : currNode.getNeighbours () ) { if ( ! ( path.contains ( node ) ) ) { movableNeighbours.add ( node ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return movableNeighbours; } 
private android.content.Intent createShareTips () { java.lang.String send = java.lang.String.valueOf ( array[counter] ) ; android.content.Intent shareIntent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; shareIntent.addFlags ( Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET ) ; shareIntent.setType ( "text/plain" ) ; try { shareIntent.putExtra ( Intent.EXTRA_TEXT, ( ( words.getText () ) + ( com.app.cryptotunnel.nutriplan.HealthTips.APP_SHARE_HASHTAG ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return shareIntent; } 
void updateSymbols ( java.lang.String prefix ) { try { if ( ( mItems.size () ) > 0 ) mItems.get ( 0 ) .setEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.topodroid.DistoX.EnableSymbol symbol : mItems ) { if ( symbol.MustSave () ) { symbol.mSymbol.setEnabled ( symbol.mEnabled ) ; TopoDroidApp.mData.setSymbolEnabled ( ( prefix + ( symbol.mSymbol.getThName () ) ) , symbol.mSymbol.isEnabled () ) ; } } } 
private static void initializeRoom ( double leftDoorWidth, boolean hasObstacle ) { try { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim.buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim.buildBasic ( leftDoorWidth, hasObstacle ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; try { while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize.size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } lastOperationChange = java.lang.System.currentTimeMillis () ; pendingOperationsWithSize.put ( operationId, heapSize ) ; currentWriteBufferSize += heapSize; return operationId; } 
boolean insertUserChild ( java.lang.String userId, long childId, int isOwner ) { android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; try { childUserTableContent.put ( baps.DatabaseHelper.UC_USER_ID, userId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } childUserTableContent.put ( baps.DatabaseHelper.UC_CHILD_ID, childId ) ; childUserTableContent.put ( baps.DatabaseHelper.UC_ISOWNER, isOwner ) ; long result2 = db.insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE, null, childUserTableContent ) ; return result2 != ( -1 ) ; } 
private int getRealParametersCount ( java.lang.reflect.Method m ) { int c = 0; try { for ( java.lang.Class<?> t : m.getParameterTypes () ) { if ( ( ( ( t != ( fr.lteconsulting.pomexplorer.Client.class ) ) && ( t != ( fr.lteconsulting.pomexplorer.WorkingSession.class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.CommandOptions.class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.ILogger.class ) ) ) c++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return c; } 
@ java.lang.Override public void readFields ( java.io.DataInput dis ) throws java.io.IOException { int length = dis.readInt () ; byte[] bytes = new byte[length]; dis.readFully ( bytes ) ; this.key = bytes; try { this.deletedAt = dis.readLong () ; } catch ( Exception ex ) { ex.printStackTrace () ; } boolean hasAtom = dis.readBoolean () ; if ( hasAtom ) { this.atom = serializer.deserializeFromSSTable ( dis, ColumnSerializer.Flag.PRESERVE_SIZE, java.lang.Integer.MIN_VALUE, version ) ; } else { this.atom = null; } } 
public void accept ( android.view.View view ) { android.content.SharedPreferences.Editor editor = sharedPreferences.edit () ; try { editor.putString ( MainActivity.KEY_VK, urlReader.getText () .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } editor.commit () ; android.content.Intent intent = new android.content.Intent ( this, com.example.ivan.scoolguesohack.MainActivity.class ) ; startActivity ( intent ) ; } 
private void processIntent () { android.os.Bundle b = getIntent () .getExtras () ; boolean isSlim = b.getBoolean ( org.bottiger.podcast.activities.feedview.FeedActivity.FEED_ACTIVITY_IS_SLIM ) ; java.lang.String url = b.getString ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_URL_KEY ) ; try { if ( isSlim ) { mSubscription = b.<org.bottiger.podcast.provider.SlimImplementations.SlimSubscription>getParcelable ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_SLIM_KEY ) ; mIsSlimSubscription = true; } else { mSubscription = org.bottiger.podcast.SoundWaves.getLibraryInstance () .getSubscription ( url ) ; mIsSlimSubscription = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setupGit ( java.lang.String url ) throws java.io.IOException { hudson.plugins.git.UserRemoteConfig config = new hudson.plugins.git.UserRemoteConfig ( url, null, null, null ) ; java.util.List<hudson.plugins.git.UserRemoteConfig> configs = new java.util.ArrayList<hudson.plugins.git.UserRemoteConfig> () ; try { configs.add ( config ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } hudson.plugins.git.GitSCM git = new hudson.plugins.git.GitSCM ( configs, null, false, null, null, null, null ) ; project.setScm ( git ) ; } 
private android.view.View getViewReview ( int position, android.view.View convertView ) { review.ReviewCell view; if ( ( convertView == null ) || ( ! ( convertView instanceof review.ReviewCell ) ) ) { view = new review.ReviewCell ( context, null ) ; } else view = ( ( review.ReviewCell ) ( convertView ) ) ; try { view.setModel ( memoryData.getText ( position ) , recallData.getText ( position ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
private Game.Piece getKing () { java.util.LinkedList<Game.Piece> pieces = Game.Player.state.getPieces ( isWhite ) ; try { for ( int i = 0; i < ( pieces.size () ) ; i++ ) { if ( 5 == ( pieces.get ( i ) .getIdentifier () ) ) { return pieces.get ( i ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { final java.util.List<com.example.finalproject.Model.Dessert> dessertList = new java.util.LinkedList<com.example.finalproject.Model.Dessert> () ; for ( com.google.firebase.database.DataSnapshot dstSnapshot : dataSnapshot.getChildren () ) { com.example.finalproject.Model.Dessert dessert = dstSnapshot.getValue ( com.example.finalproject.Model.Dessert.class ) ; if ( ( maxKey[0] ) < ( dessert.getId () ) ) { maxKey[0] = dessert.getId () ; } dessertList.add ( dessert ) ; } try { listener.onComplete ( dessertList, maxKey[0] ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE.poll () ) ) ; try { if ( request != null ) { java.lang.System.out.println ( ( "Got a request to create >>>>>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; th.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void checkCollisions () { java.util.ArrayList<Game.Enemy> enemies = Game.StartMenu.getEnemyList () ; try { for ( int i = 0; i > ( enemies.size () ) ; i++ ) { if ( getBounds () .intersects ( enemies.get ( i ) .getBounds () ) ) { ey = 0; enemiesKilled += 1; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static int[] quickSortH ( int[] data, int start, int end ) { try { if ( start < end ) { int index = Quick.part ( data, start, end ) ; Quick.quickSortH ( data, start, index ) ; Quick.quickSortH ( data, ( index + 1 ) , end ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return data; } 
public java.util.Set<decc.dht.Key> get ( decc.dht.Key k ) { java.util.Map<decc.dht.Key, java.lang.Long> rts = routes.get ( k ) ; java.util.Set<decc.dht.Key> ks = null; try { if ( rts != null ) ks = rts.keySet () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ks; } 
@ java.lang.Override public void add ( T t ) { try { if ( ( root ) == null ) { root = new xlp.util.genric.list.Element () ; root.setValue ( t ) ; root.setPosition ( UtilConstant.START_INDEX ) ; } else { xlp.util.genric.list.Element<T> newElement = new xlp.util.genric.list.Element () ; newElement.setNode ( root ) ; newElement.setValue ( t ) ; newElement.setPosition ( root.getNextPosition () ) ; root = newElement; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
synchronized void draw () { if ( ( ( mAllSongHistoryList ) == null ) || ( ( mAdapter ) == null ) ) { return; } mAllSongHistoryList = mSongHistoryController.getManagedTimeline ( mRealm ) ; mItemList = createItemList ( 0, 30 ) ; try { if ( ( mLoading ) != null ) { mLoading.setVisibility ( View.INVISIBLE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mAdapter.updateDataSet ( mItemList ) ; } 
@ java.lang.Override public void addPlayer ( java.lang.String playerName, int balance, int playerID ) { java.awt.Color[] colors = new java.awt.Color[] { java.awt.Color.BLUE, java.awt.Color.WHITE, java.awt.Color.MAGENTA, java.awt.Color.YELLOW, java.awt.Color.BLACK, java.awt.Color.GREEN }; desktop_codebehind.Car car = new desktop_codebehind.Car.Builder () .primaryColor ( colors[ ( playerID - 1 ) ] ) .secondaryColor ( colors[ ( 5 - ( playerID - 1 ) ) ] ) .build () ; desktop_resources.GUI.addPlayer ( playerName, balance, car ) ; try { desktop_resources.GUI.setCar ( 1, playerName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void showImage ( boolean idolized, android.widget.ImageView view ) { android.util.Log.d ( "im", ( ( ( "ID: " + ( id ) ) + "\n URL showImage:" ) + ( card_image ) ) ) ; try { if ( idolized || ( is_promo ) ) new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view, false ) .execute ( card_idolized_image, card_image ) ; else new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view, false ) .execute ( card_image, card_idolized_image ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void clientDisconnected ( client.Client client ) { java.util.List<client.Client> lostRouteClients; synchronized ( syncRoot ) { if ( ! ( cache.contains ( client ) ) ) { return; } lostRouteClients = removeClient ( client ) ; } callbacks.onClientDisconnected ( client ) ; try { for ( client.Client c : lostRouteClients ) { callbacks.onClientLostRoute ( c ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setPostParameters ( java.lang.String namespace, java.lang.String command, org.cytoscape.command.AvailableCommands available, io.swagger.models.Operation operation ) { io.swagger.models.parameters.BodyParameter parameter = new io.swagger.models.parameters.BodyParameter () ; try { parameter.setName ( "body" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.cytoscape.rest.internal.resource.CyRESTCommandSwagger.CommandModel model = new org.cytoscape.rest.internal.resource.CyRESTCommandSwagger.CommandModel ( namespace, command, available ) ; parameter.setSchema ( model ) ; operation.addParameter ( parameter ) ; } 
@ java.lang.Override public void handle ( final com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core.logMessage ( "µmKNIME: Handling overview request." ) ; final java.util.Scanner scanner = new java.util.Scanner ( this.getFileStream () ) .useDelimiter ( "\\A" ) ; final java.lang.String response = ( scanner.hasNext () ) ? scanner.next () : ""; exchange.sendResponseHeaders ( 200, response.length () ) ; final java.io.OutputStream os = exchange.getResponseBody () ; try { os.write ( response.getBytes () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } os.close () ; } 
@ java.lang.Override public android.support.v4.content.Loader<android.database.Cursor> onCreateLoader ( int id, android.os.Bundle args ) { java.lang.String sortOrder = getSortOrder () ; if ( sortOrder == null ) { sortOrder = ( MoviesContract.MoviesEntry.COLUMN_POPULARITY ) + " DESC"; } try { if ( sortOrder.equals ( getActivity () .getString ( R.string.pref_sort_favorites ) ) ) { sortOrder = ( MoviesContract.MoviesEntry.COLUMN_POPULARITY ) + " DESC"; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new android.support.v4.content.CursorLoader ( getActivity () , MoviesContract.MoviesEntry.CONTENT_URI, null, null, null, sortOrder ) ; } 
@ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals.getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; try { globalTermsEnum = compiled.getTermsEnum ( globalTerms ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( org.apache.lucene.util.BytesRef term = globalTermsEnum.next () ; term != null; term = globalTermsEnum.next () ) { acceptedGlobalOrdinals.set ( globalTermsEnum.ord () ) ; } return acceptedGlobalOrdinals; } 
private void resetConfirmation () { try { if ( ( confirmation ) != null ) { getSupportFragmentManager () .beginTransaction () .remove ( confirmation ) .commit () ; confirmation = null; new it.familiyparking.app.task.AsyncTaskGCM () .execute ( user, this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private edu.uci.eecs.wukong.framework.model.InitValue extractInitValue ( int start ) { short componentId = edu.uci.eecs.wukong.framework.util.WKPFUtil.getLittleEndianShort ( buffer, start ) ; byte propertyNumber = buffer[ ( start + 2 ) ]; byte size = buffer[ ( start + 3 ) ]; byte[] val = new byte[size]; try { java.lang.System.arraycopy ( buffer, ( start + 4 ) , val, 0, size ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } edu.uci.eecs.wukong.framework.model.InitValue value = new edu.uci.eecs.wukong.framework.model.InitValue ( componentId, ( propertyNumber++ ) , val ) ; return value; } 
@ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r, org.apache.flink.util.Collector<org.apache.flink.api.java.tuple.Tuple2<java.lang.String, java.lang.Long>> out ) throws java.lang.Exception { try { if ( ( r.getRecommendationsCount () ) > 0 ) { out.collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r.getRecommendations () .get ( 0 ) .getRecommendedArticle () , 1L ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String emailsMinusYou ( java.util.List<com.zulip.android.models.Person> people, com.zulip.android.models.Person you ) { java.util.ArrayList<java.lang.String> names = new java.util.ArrayList<> () ; try { for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names.add ( person.getEmail () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return android.text.TextUtils.join ( ", ", names ) ; } 
@ java.lang.SuppressWarnings ( value = "Duplicates" ) private static void upload ( int port ) throws java.lang.Exception { byte[] sendData = new byte[1024]; java.util.Scanner input = new java.util.Scanner ( java.lang.System.in ) ; try { while ( input.hasNextLine () ) { sendData = input.nextLine () .getBytes () ; csci4311.nc.NetcatUDPClient.clientSocket.send ( new java.net.DatagramPacket ( sendData, sendData.length, csci4311.nc.NetcatUDPClient.ipAddress, port ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String getPath ( org.eclipse.debug.core.model.IBreakpoint breakpoint ) throws org.eclipse.core.runtime.CoreException { org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( breakpoint ) ) ; java.lang.String type = bp.getTypeName () ; try { if ( type != null ) { int innerClassIndex = type.indexOf ( '$' ) ; if ( innerClassIndex > 0 ) { type = type.substring ( 0, innerClassIndex ) ; } return ( type.replace ( '.', '/' ) ) + ".java"; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkAnswer ( java.lang.String userEnterAnswer ) { java.lang.String answer = myHiraganaSet[myCurrentIndex].getMyAnswer () ; int messageResId = 0; if ( answer.equals ( userEnterAnswer ) ) messageResId = R.string.correct_toast; else messageResId = R.string.incorrect_toast; try { android.widget.Toast.makeText ( this, messageResId, Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean isOpened ( java.lang.String p_SPS_BC_Request_UUID ) { if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request ) == null ) return false; if ( p_SPS_BC_Request_UUID == null ) return false; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request.getSPS_BC_Request_UUID () ) == null ) return false; try { if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request.getSPS_BC_Request_UUID () ) == null ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( org.spinsuite.bchat.view.FV_Thread.m_Request.getSPS_BC_Request_UUID () .equals ( p_SPS_BC_Request_UUID ) ) && ( org.spinsuite.bchat.view.FV_Thread.m_IsActive ) ; } 
@ java.lang.Override public void onTextChanged ( java.lang.CharSequence charSequence, int i, int i1, int i2 ) { try { if ( ! ( dch07m.getText () .toString () .isEmpty () ) ) { dch07.clearCheck () ; dch0796x.setText ( null ) ; dch0796x.setVisibility ( View.GONE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void precheck () { com.emc.sa.service.vipr.block.ExportBlockVolumeHelper.precheckExportPathParameters ( minPaths, maxPaths, pathsPerInitiator ) ; com.emc.sa.service.vipr.block.ExportBlockVolumeHelper.precheckPortGroupParameter ( virtualPool, portGroup ) ; if ( com.emc.sa.service.vipr.block.BlockStorageUtils.isHost ( hostId ) ) { host = com.emc.sa.service.vipr.block.BlockStorageUtils.getHost ( hostId ) ; } else { cluster = com.emc.sa.service.vipr.block.BlockStorageUtils.getCluster ( hostId ) ; } try { com.emc.sa.service.vipr.block.BlockStorageUtils.checkEvents ( ( ( host ) != null ? host : cluster ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML private void buttonBackspace ( javafx.event.ActionEvent event ) { try { if ( ( inputText.length () ) > 0 ) { inputText = inputText.substring ( 0, ( ( inputText.length () ) - 1 ) ) ; if ( inputText.isEmpty () ) { textFieldResults.setText ( "0" ) ; } else { textFieldResults.setText ( inputText ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.example.android.groceries2.MainActivity.dbHelper.deleteListTable ( listVersion ) ; android.content.Intent intent = new android.content.Intent ( this, com.example.android.groceries2.MainActivity.class ) ; try { intent.putExtra ( "tab", 2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( intent ) ; android.widget.Toast.makeText ( this, ( listName + " deleted" ) , Toast.LENGTH_SHORT ) .show () ; } 
public java.lang.Object dispatchMethod ( java.lang.Object host, com.panda.kylin.Kylin kylin, java.lang.String methodName, java.lang.Object[] params ) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException { try { for ( java.lang.reflect.Method method : getClass () .getDeclaredMethods () ) { com.panda.kylin.PatchMethodName patchMethodName = method.getAnnotation ( com.panda.kylin.PatchMethodName.class ) ; if ( ( methodName.hashCode () ) == ( patchMethodName.value () .hashCode () ) ) { return method.invoke ( kylin, host ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this.getTranslateX () ) + ( size / 2 ) ) , ( ( this.getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; try { circleBBox.setOpacity ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return circleBBox; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View rootView = inflater.inflate ( R.layout.fragment_friends_tab_requests, container, false ) ; tabFriendRequestContext = getActivity () ; layoutFriendRequestList = ( ( android.widget.LinearLayout ) ( rootView.findViewById ( R.id.layoutFriendRequestsList ) ) ) ; try { listFriendRequests.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } retrieveFriendRequests () ; return rootView; } 
private double entropy ( double p ) { try { if ( ( p == 0 ) || ( p == 1 ) ) { return 1; } else { return ( ( -p ) * ( ( java.lang.Math.log ( p ) ) / ( java.lang.Math.log ( 2 ) ) ) ) - ( ( 1 - p ) * ( ( java.lang.Math.log ( ( 1 - p ) ) ) / ( java.lang.Math.log ( 2 ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setFirstRowAsColumnNames () { final org.cytoscape.tableimport.internal.ui.PreviewTablePanel.PreviewTableModel model = ( ( org.cytoscape.tableimport.internal.ui.PreviewTablePanel.PreviewTableModel ) ( getPreviewTable () .getModel () ) ) ; model.setFirstRowNames ( true ) ; types = org.cytoscape.tableimport.internal.util.TypeUtil.guessTypes ( importType, model, dataTypes, null ) ; updatePreviewTable () ; try { org.cytoscape.util.swing.ColumnResizer.adjustColumnPreferredWidths ( getPreviewTable () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void sendMessage ( javafx.event.ActionEvent e ) { java.lang.String sender = AsxGame.activePlayer.email; java.lang.String recipient = com.amazonaws.samples.UI_Mailbox.toField.getText () .toLowerCase () ; java.lang.String subject = com.amazonaws.samples.UI_Mailbox.subjectField.getText () ; java.lang.String body = com.amazonaws.samples.UI_Mailbox.bodyField.getText () ; try { if ( com.amazonaws.samples.Game.sendMessage ( sender, recipient, subject, body ) ) { com.amazonaws.samples.UI_Mailbox.toField.setText ( "" ) ; com.amazonaws.samples.UI_Mailbox.subjectField.setText ( "" ) ; com.amazonaws.samples.UI_Mailbox.bodyField.setText ( "" ) ; } else { com.amazonaws.samples.UI_Mailbox.toField.setText ( "Message not sent, sorry!" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void move ( int x, int y, final java.lang.Integer activityClass ) { try { for ( com.zst.xposed.halo.floatingwindow3.tasks.WindowHolder mWindowHolder : activitiesStack.get ( activityClass ) ) { if ( mWindowHolder != null ) { mWindowHolder.position ( x, y ) ; mWindowHolder.pushToWindow () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int calculateAverageSteps ( java.util.List<grimesmea.gmail.com.pricklefit.DailyStepsDTO> dailyStepTotals ) { long totalSteps = 0; int totalDays = 0; try { for ( grimesmea.gmail.com.pricklefit.DailyStepsDTO dailyStepsDTO : dailyStepTotals ) { totalSteps += dailyStepsDTO.getSteps () ; totalDays++; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( totalDays == 0 ) { return 0; } else { return ( ( int ) ( totalSteps ) ) / totalDays; } } 
private static synchronized void removePropertyFromSharedPrefs ( java.lang.String key ) { if ( ( com.indicative.client.java.android.Indicative.getInstance () .context ) == null ) { android.util.Log.v ( "Indicative", "Indicative instance has not been initialized; not adding common prop" ) ; return; } android.content.SharedPreferences prefs = com.indicative.client.java.android.Indicative.getInstance () .context.getSharedPreferences ( com.indicative.client.java.android.Indicative.PROPS_PREFS, Context.MODE_PRIVATE ) ; try { prefs.edit () .remove ( key ) .commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void playerPassword ( org.bukkit.entity.Player p, java.lang.String password ) { try { if ( ( ( password.length () ) < 5 ) || ( ( password.length () ) > 50 ) ) { p.sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } config ( "playerpasswords" ) .set ( p.getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p.sendMessage ( "Your password has been set." ) ; else p.sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } 
@ java.lang.Override public java.lang.String getSubAwardXmlFileData () { try { if ( ( subAwardXmlFileData ) != null ) { return subAwardXmlFileData.get () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } byte[] newData = getKcAttachmentDao () .getData ( xmlDataId ) ; java.lang.String newString = ( newData != null ) ? new java.lang.String ( newData ) : null; subAwardXmlFileData = new java.lang.ref.SoftReference<java.lang.String> ( newString ) ; return newString; } 
private boolean match ( org.cloudish.borg.model.Task task ) { try { if ( jidAllocated.contains ( task.getJid () ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( org.cloudish.borg.model.TaskConstraint constraint : task.getConstraints () ) { org.cloudish.borg.model.HostAttribute hostAtt = attributes.get ( constraint.getAttName () ) ; if ( ( hostAtt == null ) || ( ! ( hostAtt.match ( constraint ) ) ) ) { return false; } } return true; } 
@ java.lang.Override public void showFinishOperation ( com.liferay.mobile.screens.assetlist.AssetEntry assetEntry ) { com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory factory = new com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory () ; com.liferay.mobile.screens.base.BaseScreenlet screenlet = factory.getScreenlet ( getContext () , assetEntry ) ; try { if ( screenlet != null ) { addView ( screenlet, LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT ) ; } else { com.liferay.mobile.screens.util.LiferayLogger.e ( "Error loading screenlet" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void findAllBetweenDates_shouldFindDateGivenSingleDayRange () { net.binarycreations.apod.domain.AstroPick expected = fromDate ( net.binarycreations.apod.domain.dao.SqliteAstroPickDaoIntegrationTest.DATE_10_11_15 ) ; sut.insert ( expected ) ; java.util.List<net.binarycreations.apod.domain.AstroPick> actual = sut.findAllBetweenDates ( net.binarycreations.apod.domain.dao.SqliteAstroPickDaoIntegrationTest.DATE_10_11_15, net.binarycreations.apod.domain.dao.SqliteAstroPickDaoIntegrationTest.DATE_10_11_15 ) ; assertEquals ( 1, actual.size () ) ; try { assertAstroPickEquals ( expected, actual.get ( 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ ita.o2o.controller.restful.ResponseBody @ita.o2o.controller.restful.RequestMapping ( value = "/reject" ) public java.lang.String reject ( java.lang.Integer orderId ) { java.lang.System.out.println ( ( "/reject orderId:" + orderId ) ) ; ita.o2o.controller.restful.Order order = orderService.getOrderById ( orderId ) ; ita.o2o.entity.extra.Status status = statusService.getById ( O2OConstants.STATUS_REJECTED ) ; ita.o2o.util.bean.ResponseMessage responseMessage = new ita.o2o.util.bean.ResponseMessage () ; order.setStatus ( status ) ; try { if ( orderService.updateOrder ( order ) ) { responseMessage.setStatus ( O2OConstants.SUCCESS ) ; } else { responseMessage.setStatus ( O2OConstants.FAILURE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return jsonMapper.writeObjectAsString ( responseMessage ) ; } 
private com.intellij.xdebugger.impl.evaluate.EvaluationInputComponent createInputComponent ( com.intellij.xdebugger.evaluation.EvaluationMode mode, com.intellij.xdebugger.impl.evaluate.XExpression text ) { final com.intellij.openapi.project.Project project = mySession.getProject () ; try { text = com.intellij.xdebugger.impl.breakpoints.XExpressionImpl.changeMode ( text, mode ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( mode == ( com.intellij.xdebugger.evaluation.EvaluationMode.EXPRESSION ) ) { return new com.intellij.xdebugger.impl.evaluate.ExpressionInputComponent ( project, myEditorsProvider, mySourcePosition, text, myDisposable ) ; } else { return new com.intellij.xdebugger.impl.evaluate.CodeFragmentInputComponent ( project, myEditorsProvider, mySourcePosition, text, myDisposable ) ; } } 
@ java.lang.Override public void onItemClick ( int viewId, int position ) { try { switch ( viewId ) { case R.id.task_card_text_open: if ( position >= 0 ) { mTaskRecyclerAdapter.getItems () .remove ( position ) ; mTaskRecyclerAdapter.notifyItemRemoved ( position ) ; } break; case R.id.task_card_text: mTaskRecyclerAdapter.getItems () .set ( position, new com.org.runaway.sharetodo.data.TaskState.AssignedTaskState () ) ; mTaskRecyclerAdapter.notifyItemChanged ( position ) ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.lang.String generateCode ( java.lang.String message ) { try { message = message.toUpperCase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.StringBuilder codedMessage = new java.lang.StringBuilder () ; for ( int i = 0; i < ( message.length () ) ; i++ ) { java.lang.String val = morseCode.get ( message.charAt ( i ) ) ; if ( val != null ) { codedMessage.append ( val ) ; codedMessage.append ( " " ) ; } else return null; } return codedMessage.toString () ; } 
public void sendMessage ( android.view.View v ) { android.content.Intent searchIntent = new android.content.Intent ( this, com.bminor.officebarkaroake.PerformSearchActivity.class ) ; android.widget.EditText parm = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_searchText ) ) ) ; java.lang.String queryString = parm.getText () .toString () ; java.lang.String typeString = determineCheckedButton () ; queryString.trim () ; try { if ( ( determineCheckedButton () ) == "all" ) queryString = "true"; } catch ( Exception ex ) { ex.printStackTrace () ; } searchIntent.putExtra ( com.bminor.officebarkaroake.MainActivity.SEARCH_TYPE, typeString ) ; searchIntent.putExtra ( com.bminor.officebarkaroake.MainActivity.SEARCH_STRING, queryString ) ; startActivity ( searchIntent ) ; } 
boolean styleBarCanHide () { try { if ( ( app.has ( Feature.NEW_TOOLBAR ) ) || ( ! ( getAlgebraDockPanel () .isStyleBarPanelShown () ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } int itemTop = ( this.isInputTreeItem () ) ? main.getElement () .getAbsoluteTop () : getElement () .getAbsoluteTop () ; return ( itemTop - ( getAlgebraDockPanel () .getAbsoluteTop () ) ) < 35; } 
protected final int getLineStart ( java.lang.String line ) { int index = 0; try { while ( ( index < ( line.length () ) ) && ( java.lang.Character.isWhitespace ( line.charAt ( index ) ) ) ) { index++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return com.puppycrawl.tools.checkstyle.utils.CommonUtils.lengthExpandedTabs ( line, index, indentCheck.getIndentationTabWidth () ) ; } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } try { switch ( requestCode ) { case com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION: com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data.getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; break; default: updateUI () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onMouseDown ( com.totemdefender.input.MouseEvent event ) { try { if ( pointIsInBounds ( event.mousePosition ) ) { for ( com.totemdefender.menu.Component cmp : components ) { if ( cmp.pointIsInBounds ( worldToLocal ( event.mousePosition ) ) ) { setFocus ( cmp ) ; return cmp.onMouseDown ( event ) ; } } } else { java.lang.System.out.println ( "OUT BOUNDS" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public boolean extract ( java.lang.String args ) { int i = args.indexOf ( "\n" ) ; try { if ( ( i > 0 ) && ( ( i + 1 ) < ( args.length () ) ) ) { ip = args.substring ( 0, i ) ; id = decc.dht.Key.load ( args.substring ( ( i + 1 ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( i > 0 ) && ( ( ( args.length () ) - i ) > 0 ) ; } 
private static java.lang.String scanPassword () throws java.lang.IllegalArgumentException { try { java.lang.System.out.print ( "Input password: " ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String password; if ( sc.hasNext () ) { password = sc.nextLine () ; } else { throw new java.lang.IllegalArgumentException ( "Invalid password value" ) ; } return password; } 
@ java.lang.Override public void onBindViewHolder ( org.creativecommons.thelist.adapters.FeedAdapter.FeedViewholder holder, int position ) { org.creativecommons.thelist.adapters.MainListItem l = listItems.get ( position ) ; holder.itemView.setVisibility ( View.VISIBLE ) ; holder.nameLabel.setText ( l.getItemName () ) ; try { holder.makerLabel.setText ( ( "requested by " + ( l.getMakerName () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } switch ( getItemViewType ( position ) ) { case org.creativecommons.thelist.adapters.FeedAdapter.ERROR_VIEW: holder.iconImageView.setImageResource ( R.drawable.ic_error_red_24dp ) ; break; case org.creativecommons.thelist.adapters.FeedAdapter.DEFAULT_VIEW: holder.iconImageView.setImageResource ( R.drawable.ic_camera_alt_grey600_24dp ) ; break; } holder.itemView.setTag ( l ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { localizationMonitoring.reset () ; localizationView.setParticles ( localizationMonitoring.getParticles () ) ; localizationView.reset () ; try { localizationView.post ( new java.lang.Runnable () { @java.lang.Override public void run () { localizationView.invalidate () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void findEvenOrOdd () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; try { java.lang.System.out.println ( ( "This program will ask you for a number, and will then" + " tell you if it is even or odd" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int evenCheck; java.lang.System.out.println ( "Enter a number:" ) ; int evenNum = scanner.nextInt () ; evenCheck = evenNum % 2; if ( evenCheck == 0 ) { java.lang.System.out.println ( "Even" ) ; } else { java.lang.System.out.println ( "Odd" ) ; } java.lang.System.out.println ( "" ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) public void checkMapResolve ( java.util.Map object, java.lang.Object fieldName ) { try { if ( ( resolveStatus ) == ( com.alibaba.fastjson.parser.DefaultJSONParser.NeedToResolve ) ) { com.alibaba.fastjson.parser.ResolveFieldDeserializer fieldResolver = new com.alibaba.fastjson.parser.ResolveFieldDeserializer ( object, fieldName ) ; com.alibaba.fastjson.parser.DefaultJSONParser.ResolveTask task = getLastResolveTask () ; task.fieldDeserializer = fieldResolver; task.ownerContext = context; resolveStatus = com.alibaba.fastjson.parser.DefaultJSONParser.NONE; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void findetTeilnehmerNachName () throws java.lang.Exception { final de.triology.trioexperts.teilnehmerverwaltung.domain.services.TeilnehmerlisteService teilnehmerenlisteService = new de.triology.trioexperts.teilnehmerverwaltung.domain.services.TeilnehmerlisteService ( new de.triology.trioexperts.teilnehmerverwaltung.domain.services.RepositoriesFuerTests () ) ; de.triology.trioexperts.teilnehmerverwaltung.domain.entity.Teilnehmer teilnehmer = new de.triology.trioexperts.teilnehmerverwaltung.domain.entity.Teilnehmer ( "Testteilnehmer" ) ; assertTrue ( teilnehmerenlisteService.teilnehmerHinzufuegen ( "Testteilnehmer" ) ) ; try { assertEquals ( teilnehmer, teilnehmerenlisteService.teilnehmerNachNameAusgeben ( "Testteilnehmer" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeOpenSession ( javax.websocket.Session session ) { try { synchronized ( this ) { openSessions.remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions.isEmpty () ) ) { notifyAll () ; } if ( ( doneTask ) != null ) { doneTask.run () ; doneTask = null; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initialization () { mHeaderLayout = new com.handler.HeaderLayout ( this ) ; mHeaderLayout.setHeaderIITII ( R.drawable.icon_arrow_back_white, HeaderLayout.RES_NONE, HeaderLayout.RES_NONE, R.drawable.icon_search, R.drawable.icon_menu_white ) ; try { mHeaderLayout.setListener ( this, this, this, this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.view.View searchIv = findViewById ( R.id.right_extra_ib ) ; searchIv.setClickable ( true ) ; viewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.plan_vp ) ) ) ; } 
private void updateLowestPriorityAssignment () { mLowestPriorityConnection = null; try { for ( audio.AudioManager.AudioOutputConnection connection : mAudioOutputConnections ) { if ( ( connection.isConnected () ) && ( ( ( mLowestPriorityConnection ) == null ) || ( ( mLowestPriorityConnection.getPriority () ) < ( connection.getPriority () ) ) ) ) { mLowestPriorityConnection = connection; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void interpretAsName ( java.util.ArrayList<com.equinox.KeyParamPair> keyParamPairs, com.equinox.KeyParamPair currentPair ) { java.lang.String newName; int currentIndex = keyParamPairs.indexOf ( currentPair ) ; newName = com.equinox.Parser.appendParameters ( keyParamPairs, 0, currentIndex ) ; try { keyParamPairs.get ( 0 ) .setParam ( newName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Object action () { java.lang.Object object = r.action ( id, endpointClazz, customActionKey, requestJson, params ) ; if ( object == null ) { return new io.yawp.commons.http.JsonResponse () ; } try { applyGetFacade ( object ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( hasTransformer () ) { return transform ( object ) ; } return object; } 
public org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor getDescriptor ( java.lang.String id ) { org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor configuration = m_descriptors.get ( id ) ; try { if ( configuration == null ) { if ( id != null ) { org.unidal.dal.jdbc.datasource.model.entity.DataSourceDef ds = m_dataSources.findDataSource ( id ) ; if ( ds != null ) { configuration = getDescriptor ( ds ) ; m_descriptors.put ( id, configuration ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return configuration; } 
@ java.lang.SuppressWarnings ( value = { "unchecked", "rawtypes" } ) private void insertIDandTypeforItemsBlock ( java.util.Map itemsObject, java.lang.String schemaArrayItemsID, java.lang.String schemaArrayItemsType ) { try { if ( schemaArrayItemsID != null ) { itemsObject.put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID, schemaArrayItemsID.replace ( "\\", "" ) ) ; } else { itemsObject.put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID, "" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } itemsObject.put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE, schemaArrayItemsType ) ; } 
public static void main ( java.lang.String[] args ) { if ( ( args.length ) == 0 ) { java.lang.System.out.println ( "Usage: java -jar MSM.jar FILE_NAME" ) ; java.lang.System.exit ( 1 ) ; } java.lang.String csvPath = args[0]; java.util.ArrayList<seng3011.msm.TradeRec> tradeRecs = seng3011.msm.CSVParser.CSVParse ( csvPath ) ; seng3011.msm.GenerateOrder strategy = new seng3011.msm.GenerateOrder () ; java.util.ArrayList<seng3011.msm.SellOrder> sellOrders = strategy.generate ( tradeRecs ) ; try { java.lang.System.out.println ( "Proceess finished. Please check output files." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onUpdate ( android.content.Context context, android.appwidget.AppWidgetManager appWidgetManager, int[] appWidgetIds ) { super.onUpdate ( context, appWidgetManager, appWidgetIds ) ; android.util.Log.d ( Config.LOG_TAG, "Widget Update, Starting Service" ) ; context.startService ( new android.content.Intent ( context, com.mathi_amorim.emmanuel.metrictime.UpdateTimeService.class ) ) ; try { android.util.Log.d ( Config.LOG_TAG, "Service Started" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String check () { com.zoo.model.User user = userService.findUserById ( login ) ; try { if ( ( user != null ) && ( user.isMyPassword ( pass ) ) ) { userHolder.setUser ( user ) ; return java.lang.Boolean.TRUE.toString () ; } else { return java.lang.Boolean.FALSE.toString () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void _save () { if ( ( ( fileId ) == null ) || ( ( ( picture ) != null ) && ( ! ( fileId.equals ( picture.getUUID () ) ) ) ) ) { deletePicture () ; fileId = picture.getUUID () ; } try { super._save () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.support.project.aop.Aspect ( advice = org.support.project.ormapping.transaction.Transaction.class ) public void removeHook ( java.lang.Integer mailHookId ) { java.util.List<org.support.project.knowledge.entity.MailHookConditionsEntity> conditions = org.support.project.knowledge.dao.MailHookConditionsDao.get () .selectOnHookId ( mailHookId ) ; try { for ( org.support.project.knowledge.entity.MailHookConditionsEntity mailHookConditionsEntity : conditions ) { org.support.project.knowledge.dao.MailHookConditionsDao.get () .physicalDelete ( mailHookConditionsEntity ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } org.support.project.knowledge.dao.MailHooksDao.get () .physicalDelete ( mailHookId ) ; } 
static void authenticate () { com.fhf.prkr.microclient.MainActivity.authenticated = false; try { com.fhf.prkr.microclient.MainActivity.network.sendpacket ( com.fhf.prkr.microclient.MainActivity.network.MANAGEMENT, com.fhf.prkr.microclient.MainActivity.network.AUTHENTICATE, "", true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } boolean requestFailed = false; while ( ( com.fhf.prkr.microclient.MainActivity.network.stillWaiting () ) == 1 ) { if ( ( com.fhf.prkr.microclient.MainActivity.network.stillWaiting () ) == 42 ) { requestFailed = true; break; } } if ( !requestFailed ) { } } 
@ java.lang.Override public void removeConfigurations ( java.lang.String context ) { java.util.Set<java.lang.String> itemNames = contextMap.get ( context ) ; try { if ( itemNames != null ) { for ( java.lang.String itemName : itemNames ) { java.util.Set<org.eclipse.smarthome.core.thing.link.ItemChannelLink> links = itemChannelLinkMap.remove ( itemName ) ; if ( links != null ) { for ( org.eclipse.smarthome.core.thing.link.ItemChannelLink removedItemChannelLink : links ) { notifyListenersAboutRemovedElement ( removedItemChannelLink ) ; } } } contextMap.remove ( context ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call<com.divyanshu.pixabayserverapi.callback.PixabayDataObject> call, retrofit2.Response<com.divyanshu.pixabayserverapi.callback.PixabayDataObject> response ) { try { if ( ( ( response.body () ) == null ) || ( ( response.body () .hits.size () ) < 1 ) ) { mainActivityView.showErrorMessage ( R.string.no_image_error ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } mainActivityView.onImageListResponse ( response.body () .hits ) ; } 
private java.lang.String resolveGroupKeyFromRuleMethod ( java.lang.Object executable ) throws java.lang.Exception { java.lang.reflect.Method methodWithGroupAnnotation = com.opnitech.rules.core.utils.AnnotationUtil.resolveMethodWithAnnotation ( executable, com.opnitech.rules.core.annotations.group.GroupKey.class ) ; if ( methodWithGroupAnnotation == null ) { return null; } java.lang.String groupKey = ( ( java.lang.String ) ( methodWithGroupAnnotation.invoke ( executable ) ) ) ; try { if ( ( groupKey != null ) && ( org.apache.commons.lang3.StringUtils.isBlank ( groupKey ) ) ) { com.opnitech.rules.core.utils.ExceptionUtil.throwIllegalArgumentException ( "Invalid Group Key method in the rule. A group method cannot return a blank String. Rule: ''{0}'', Group Key Method: ''{1}''", executable, methodWithGroupAnnotation.getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return groupKey; } 
private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef, org.rapla.entities.storage.ReferenceInfo<org.rapla.entities.domain.Allocatable> allocationId ) { java.util.SortedSet<org.rapla.entities.domain.Appointment> set = appointmentMap.get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet<org.rapla.entities.domain.Appointment> ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap.put ( allocationId, set ) ; } try { set.add ( appRef ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
model.Position winningMove ( common.boardclass.BoardClass<common.pattern.Threat> boardClass, common.StoneType attacker, int depth ) { try { for ( int i = 0; i <= depth; i++ ) { model.Position position = offend ( boardClass, attacker, new java.util.HashMap<> () , i ) ; if ( position != null ) { return position; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void write ( com.xenoage.utils.xml.XmlWriter writer ) { writer.writeElementStart ( com.xenoage.zong.musicxml.types.MxlMidiInstrument.elemName ) ; writer.writeAttribute ( "id", id ) ; writer.writeElementText ( "midi-channel", midiChannel ) ; try { writer.writeElementText ( "midi-program", midiProgram ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } writer.writeElementText ( "pan", pan ) ; writer.writeElementEnd () ; } 
public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false; } try { for ( model.map.Priority p : model.map.Priority.values () ) { if ( p.toString () .equals ( priority ) ) return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET, value = "/processingPages" ) public java.lang.String processingPage ( org.springframework.ui.Model model, int pageNumber ) { ecommerce.rmall.domain.Page<ecommerce.rmall.domain.Order> page = this.service.queryProcessingWithPage ( pageNumber ) ; java.util.List<ecommerce.rmall.domain.Station> stations = this.stationService.listAll () ; try { model.addAttribute ( "CURRENT", "PROCESSING" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } model.addAttribute ( "page", page ) ; model.addAttribute ( "stations", stations ) ; return "Order/processingPagination"; } 
private int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root, int index, int pos, build.games.wraithaven.gui.MenuComponentHeirarchy[] out ) { if ( index == pos ) { out[0] = root; return -1; } pos++; try { if ( ! ( root.isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root.getChildren () ) { pos = getByIndex ( c, index, pos, out ) ; if ( pos == ( -1 ) ) { return -1; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return pos; } 
protected void onPostExecute ( android.graphics.Bitmap result ) { if ( ( activity ) != null ) { activity.upDateList () ; } else if ( ( viewHolder ) != null ) { viewHolder.imageView.setImageBitmap ( result ) ; } try { if ( ( imgData ) != null ) { imgData.setBitmap ( result ) ; activity.upDateList () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( showBusStop.isSelected () ) { showBusStop.setSelected ( false ) ; setAllNormalPinsVisibility ( popBusStationPins, false ) ; } else { showBusStop.setSelected ( true ) ; setAllNormalPinsVisibility ( popBusStationPins, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static assignment3_DS.graph.Graph loadGraph ( java.io.File nodeFile, java.io.File arcFile ) { try { java.lang.System.out.println ( ( ( ( "loading nodes/ars from " + nodeFile ) + " / " ) + arcFile ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Map<java.lang.Integer, assignment3_DS.graph.Node> nodes = assignment3_DS.graph.CSVLoader.getNodes ( nodeFile ) ; java.util.List<assignment3_DS.graph.Arc> arcs = assignment3_DS.graph.CSVLoader.getArcs ( arcFile, nodes ) ; if ( arcs == null ) return null; else return new assignment3_DS.graph.Graph ( nodes, arcs ) ; } 
public static void setStatus ( com.onaio.steps.model.Household household, com.onaio.steps.model.Member member, java.util.ArrayList<java.lang.String> row ) { try { if ( ( ( ( household.getSelectedMemberId () ) == null ) || ( household.getSelectedMemberId () .equals ( "" ) ) ) || ( household.getSelectedMemberId () .equals ( java.lang.String.valueOf ( member.getId () ) ) ) ) row.add ( household.getStatus () .toString () ) ; else { row.add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int[] getPlayerLocation ( int id ) { int[] pos = new int[2]; int counter = 0; while ( ! ( gl.processCommand ( "MOVE W", id ) .equals ( "FAIL" ) ) ) { counter++; } pos[0] = 1 + counter; counter = 0; try { while ( ! ( gl.processCommand ( "MOVE N", id ) .equals ( "FAIL" ) ) ) { counter++; } } catch ( Exception ex ) { ex.printStackTrace () ; } pos[1] = 1 + counter; return pos; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent imageReturnedIntent ) { super.onActivityResult ( requestCode, resultCode, imageReturnedIntent ) ; try { switch ( requestCode ) { case SELECT_PHOTO: if ( resultCode == ( RESULT_OK ) ) { final android.net.Uri imageUri = imageReturnedIntent.getData () ; mImageFilePath = com.amansoni.tripbook.util.ImageWrapper.getRealPathFromURI ( this, imageUri ) ; com.amansoni.tripbook.util.ImageWrapper.loadImageFromFile ( this, mMainImage, mImageFilePath, 400 ) ; if ( ( mTripbookItem ) != null ) { mTripbookItem.setThumbnail ( mImageFilePath ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<wyvern.tools.parsing.coreparser.Token> checkLex ( java.lang.String input, int[] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException, java.io.IOException { java.util.List<wyvern.tools.parsing.coreparser.Token> tokens = new wyvern.tools.lexing.WyvernLexer () .parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds, tokens ) ; try { org.junit.Assert.assertEquals ( input, concat ( tokens ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return tokens; } 
public void makeHeader () { try { file.writeIndent ( "local lpeg = require \"lpeg\"" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } nez.util.UList<nez.expr.Rule> list = peg.getDefinedRuleList () ; for ( nez.expr.Rule r : list ) { if ( ! ( r.getLocalName () .startsWith ( "\"" ) ) ) { java.lang.String localName = r.getLocalName () ; file.writeIndent ( ( ( ( ( "local " + localName ) + " = lpeg.V\"" ) + localName ) + "\"" ) ) ; } } } 
public boolean putChild ( int groupPosition, int childPosition, long childId, boolean isChecked ) { long packedPosition = android.widget.ExpandableListView.getPackedPositionForChild ( groupPosition, childPosition ) ; try { if ( hasStableIds () ) { java.lang.Long result = ( isChecked ) ? childIds.put ( childId, packedPosition ) : childIds.remove ( childId ) ; return result != null; } else { return isChecked ? ! ( childPositions.add ( packedPosition ) ) : childPositions.remove ( packedPosition ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void releaseDevices ( final java.util.Map<org.opendaylight.distributed.tx.api.DTXLogicalTXProviderType, java.util.Set<org.opendaylight.yangtools.yang.binding.InstanceIdentifier<?>>> deviceMap ) { try { for ( org.opendaylight.distributed.tx.api.DTXLogicalTXProviderType logicalTXProviderType : deviceMap.keySet () ) { txProviderMap.get ( logicalTXProviderType ) .releaseTransactionDevices ( deviceMap.get ( logicalTXProviderType ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void dragStop ( com.badlogic.gdx.scenes.scene2d.InputEvent event, float x, float y, int pointer, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload payload, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target target ) { try { this.getActor () .setVisible ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target oldTarget : validTargets ) { oldTarget.getActor () .remove () ; dragDrop.removeTarget ( oldTarget ) ; } } 
public void clear () { mProcedureDefinitions.clear () ; mProcedureReferences.clear () ; mProcedureNameManager.clear () ; mCountOfReferencesWithReturn = 0; int obsCount = mObservers.size () ; try { for ( int i = 0; i < obsCount; ++i ) { mObservers.get ( i ) .onClear () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int[] parseIntArray ( org.json.JSONArray arr ) { if ( arr == null ) return null; int[] res = new int[arr.length () ]; try { for ( int i = 0; i < ( arr.length () ) ; i++ ) { res[i] = arr.optInt ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return res; } 
@ java.lang.Override public java.lang.String getIsoDate ( org.hisp.dhis.calendar.DateTimeUnit dateTimeUnit, org.hisp.dhis.calendar.Calendar calendar ) { int month = dateTimeUnit.getMonth () ; try { switch ( month ) { case 11: return ( dateTimeUnit.getYear () ) + "NovS1"; case 5: return ( dateTimeUnit.getYear () ) + "NovS2"; default: throw new java.lang.IllegalArgumentException ( ( "Month not valid [11,5] " + month ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void insertToElastic ( java.util.Set<java.lang.String> tagList, java.lang.String newFileCheckSum, java.util.ArrayList<java.lang.String> parsedFile, java.lang.String[] locationCoordinates ) { try { parsedFile.add ( newFileCheckSum ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.elasticsearch.common.xcontent.XContentBuilder json = elasticServer.elasticSearch.putJsonDocument ( parsedFile, tagList, locationCoordinates ) ; elasticServer.elasticSearch.insert ( elasticServer.client, json, "documents", "file" ) ; } 
private java.lang.String getElementID ( final java.lang.String relativePath ) { final java.lang.String fragment = getFragment ( relativePath ) ; try { if ( fragment != null ) { if ( ( fragment.lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( -1 ) ) { return fragment.substring ( ( ( fragment.lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { return fragment; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private java.lang.String arrayToString ( char[][] array ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try { for ( int i = 0; i < ( array.length ) ; i++ ) { for ( int j = 0; j < ( array[0].length ) ; j++ ) { sb.append ( array[i][j] ) ; } sb.append ( "\n" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return sb.toString () ; } 
@ java.lang.Override public void onResult ( int requestCode, int resultCode, @android.support.annotation.Nullable android.content.Intent data ) { if ( ( ( requestCode == ( id ) ) && ( resultCode != ( android.app.Activity.RESULT_OK ) ) ) || ( data == null ) ) { return; } result = ru.spbau.mit.placenotifier.PlacePicker.getSelectedPoint ( data ) ; try { updateCamera () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void CompareTest () { java.util.Random rand = new java.util.Random () ; tests.AbstractDaoFactory daoFact = new tests.DaoFactory () ; tests.CompareDao dao = daoFact.getCompareDao () ; try { for ( int i = 0; i < 50; i++ ) { assertTrue ( ( ( dao.playerComparison ( ( ( ( rand.nextFloat () ) * ( ( max ) - ( min ) ) ) + ( min ) ) , "RB", "New York Jets" ) ) > 0 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { for ( unalcol.language.programming.lexer.Token t : changes ) { doc.setCharacterAttributes ( t.pos () .offset () , t.length () , doc.getStyle ( token_style.get ( t.type () ) ) , true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; try { product = getIntent () .getParcelableExtra ( Constants.PRODUCT_KEY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getSupportActionBar () .setTitle ( product.name ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/module/radiology/radiologyOrder.form", method = org.springframework.web.bind.annotation.RequestMethod.GET ) protected org.springframework.web.servlet.ModelAndView getRadiologyOrderFormWithNewRadiologyOrder () { org.springframework.web.servlet.ModelAndView modelAndView = new org.springframework.web.servlet.ModelAndView ( "module/radiology/radiologyOrderForm" ) ; try { if ( org.openmrs.api.context.Context.isAuthenticated () ) { org.openmrs.module.radiology.RadiologyOrder radiologyOrder = new org.openmrs.module.radiology.RadiologyOrder () ; radiologyOrder.setStudy ( new org.openmrs.module.radiology.Study () ) ; modelAndView.addObject ( "order", new org.openmrs.Order () ) ; modelAndView.addObject ( "isOrderActive", true ) ; modelAndView.addObject ( "radiologyOrder", radiologyOrder ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return modelAndView; } 
@ java.lang.Override public com.valkryst.VTerminal.component.RadioButton build () { try { checkState () ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.width = ( text.length () ) + 2; super.height = 1; final com.valkryst.VTerminal.component.RadioButton radioButton = new com.valkryst.VTerminal.component.RadioButton ( this ) ; group.addRadioButton ( radioButton ) ; return radioButton; } 
@ java.lang.Override public void exitAssignStat ( grammar.CracklParser.AssignStatContext ctx ) { analysis.Scope curScope = scopes.get ( ( ( scopes.size () ) - 1 ) ) ; analysis.Type lhsType = getType ( ctx.target () ) ; try { checkType ( ctx.expr () , lhsType ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } curScope.addInitVar ( ctx.getText () ) ; } 
private boolean asyncSendAcknowledge ( com.sun.messaging.jmq.jmsclient.ReadWritePacket pkt ) { boolean synchronousReply = protocolHandler.isDirectModeTwoThreadWithSyncReplies () ; if ( synchronousReply ) { return true; } long ackId = pkt.getConsumerID () ; com.sun.messaging.jmq.jmsclient.AsyncSendCallback cb = ( ( com.sun.messaging.jmq.jmsclient.AsyncSendCallback ) ( requestMetaData.get ( java.lang.Long.valueOf ( ackId ) ) ) ) ; requestMetaData.remove ( ackId ) ; if ( cb == null ) { return false; } try { cb.processCompletion ( pkt, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void broadcastUpdate ( final java.lang.String action, final android.bluetooth.BluetoothGattCharacteristic characteristic ) { final android.content.Intent intent = new android.content.Intent ( action ) ; if ( characteristic == null ) { this.sendBroadcast ( intent ) ; return; } android.util.Log.d ( DEBUG_TAG, characteristic.getStringValue ( 0 ) ) ; try { if ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.HEART_BEAT_UUID.equals ( characteristic.getUuid () ) ) { java.lang.String value = characteristic.getStringValue ( 0 ) ; intent.putExtra ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.EXTRA_DATA, value ) ; this.sendBroadcast ( intent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world, int x, int y, int z, int side ) { net.minecraft.block.Block blk = world.getBlock ( x, y, z ) ; try { if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) .getFacadeMetadata ( world, x, y, z, side ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return world.getBlockMetadata ( x, y, z ) ; } 
private void CheckConcate ( java.lang.String value1, java.lang.String value2 ) { try { if ( ( ! ( value2.equals ( "null" ) ) ) && ( ! ( value2.equals ( "" ) ) ) ) { java.lang.String value = ( ( " " + value1 ) + ": " ) + value2; result_concate = ( ( result_concate ) + value ) + "\n"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { double[] controlledPositionAxes = new double[] { 1.0, 1.0, 1.0 }; double[] controlledOrientationAxes = new double[] { 0.0, 0.0, 0.0 }; try { setHandControlledAxes ( robotSide, controlledPositionAxes, controlledOrientationAxes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void sleep () { nachos.threads.Lib.assertTrue ( conditionLock.isHeldByCurrentThread () ) ; boolean intStatus = nachos.threads.Machine.interrupt () .disable () ; waitForCondQueue.add ( nachos.threads.KThread.currentThread () ) ; conditionLock.release () ; nachos.threads.KThread.sleep () ; try { nachos.threads.Machine.interrupt () .restore ( intStatus ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } conditionLock.acquire () ; } 
public void onUpdate ( android.content.Context context, android.appwidget.AppWidgetManager appWidgetManager, int[] appWidgetIds ) { android.util.Log.v ( com.apps.home.notewidget.widget.WidgetProvider.TAG, "onUpdate" ) ; for ( int appWidgetId : appWidgetIds ) { if ( isConfigured ( context, appWidgetId ) ) { appWidgetManager.updateAppWidget ( appWidgetId, updateWidgetListView ( context, appWidgetId ) ) ; updateNote ( context, appWidgetId ) ; } } try { super.onUpdate ( context, appWidgetManager, appWidgetIds ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent data ) { if ( ( callback ) == null ) { return; } java.lang.String action = data.getAction () ; try { if ( action.equals ( com.auth0.android.lock.Lock.AUTHENTICATION_ACTION ) ) { processEvent ( data ) ; } else if ( action.equals ( com.auth0.android.lock.Lock.CANCELED_ACTION ) ) { callback.onCanceled () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static android.app.AlertDialog showAlertDialog ( android.content.Context context, int messageId, android.content.DialogInterface.OnClickListener positiveAction ) { android.app.AlertDialog.Builder adb = new android.app.AlertDialog.Builder ( context ) ; adb.setTitle ( messageId ) ; try { adb.setNegativeButton ( context.getString ( R.string.cancel ) , null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } adb.setPositiveButton ( context.getString ( R.string.ok ) , positiveAction ) ; return adb.show () ; } 
public static void deleteTimer ( final java.lang.String name ) { java.util.Iterator<java.util.Timer> iterator = com.sb.elsinore.LaunchControl.timerList.iterator () ; java.util.Timer tTimer; try { while ( iterator.hasNext () ) { tTimer = iterator.next () ; if ( tTimer.getName () .equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList.remove ( tTimer ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void initEvent () { try { mHistoryContactRecyclerView.setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mHistoryContactRecyclerView.setAdapter ( mAdapter ) ; mSwipeRefreshLayout.setColorSchemeColors ( android.support.v4.content.ContextCompat.getColor ( getActivity () , R.color.colorPrimary ) , android.support.v4.content.ContextCompat.getColor ( getActivity () , R.color.colorAccent ) , android.support.v4.content.ContextCompat.getColor ( getActivity () , R.color.colorPrimaryDark ) ) ; mSwipeRefreshLayout.setOnRefreshListener ( new android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener () { @java.lang.Override public void onRefresh () { mPresenter.loadHistoryContact () ; } } ) ; mPresenter.loadHistoryContact () ; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { try { for ( org.nschmidt.ldparteditor.opengl.OpenGLRenderer renderer : org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.renders ) { org.nschmidt.ldparteditor.composites.Composite3D c3d = renderer.getC3D () ; if ( c3d.getLockableDatFileReference () .equals ( org.nschmidt.ldparteditor.project.Project.getFileToEdit () ) ) { org.nschmidt.ldparteditor.data.VertexManager vm = c3d.getLockableDatFileReference () .getVertexManager () ; vm.addSnapshot () ; loadSelectorSettings () ; vm.selectAll ( sels, true ) ; vm.syncWithTextEditors ( true ) ; regainFocus () ; return; } } } catch ( Exception ex ) { ex.printStackTrace () ; } regainFocus () ; } 
@ org.junit.Test public void testGetChildrenModules_noChildren () { org.talend.core.model.process.INode node = org.mockito.Mockito.mock ( org.talend.core.model.process.INode.class ) ; org.talend.core.model.components.IComponent component = org.mockito.Mockito.mock ( org.talend.core.model.components.IComponent.class ) ; org.mockito.Mockito.when ( node.getComponent () ) .thenReturn ( component ) ; org.mockito.Mockito.when ( component.getName () ) .thenReturn ( "tLogRow" ) ; java.util.List<org.talend.core.model.general.ModuleNeeded> childrenModules = org.talend.designer.core.utils.JavaProcessUtil.getChildrenModules ( node, java.util.Collections.emptySet () , false ) ; try { org.junit.Assert.assertTrue ( childrenModules.isEmpty () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void DrawBoard ( java.awt.Graphics g ) { try { for ( int r = 0; r < ( board.length ) ; r++ ) { for ( int c = 0; c < ( board[r].length ) ; c++ ) { if ( ( board[r][c] ) != null ) board[r][c].draw ( g ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int extractY ( int y ) { int py = ( y + ( UserInterface.Accordpanel.YP ) ) + 60; try { if ( curAcc.isSixakk () ) { py -= 110; py /= 50; } else { py -= 15 + 50; py /= 50; } } catch ( Exception ex ) { ex.printStackTrace () ; } return py; } 
public static int findBytes ( java.util.LinkedList<java.lang.Byte> arr, byte value ) { int i = 0; while ( ( i < ( arr.size () ) ) && ( ( arr.get ( i ) ) != value ) ) i++; try { if ( i < ( arr.size () ) ) return i; } catch ( Exception ex ) { ex.printStackTrace () ; } return -1; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { try { if ( obj instanceof data.Emotion ) { data.Emotion em = ( ( data.Emotion ) ( obj ) ) ; return ( ( ( ( em.name ) == null ) && ( ( this.name ) == null ) ) || ( em.name.equals ( this.name ) ) ) && ( ( java.lang.Double.compare ( em.intensity, this.intensity ) ) == 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public boolean isValidMove ( java.lang.String direction ) { try { switch ( direction.toLowerCase () ) { case "n": return ( this.emptySpaceLocation.getX () ) > 0; case "e": return ( this.emptySpaceLocation.getY () ) < 2; case "s": return ( this.emptySpaceLocation.getX () ) < 2; case "w": return ( this.emptySpaceLocation.getY () ) > 0; default: return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static org.eclipse.jdt.core.dom.MethodDeclaration checkInvocationParentRelation ( microbat.model.trace.TraceNode prevNode, microbat.model.trace.TraceNode postNode ) { java.util.List<org.eclipse.jdt.core.dom.IMethodBinding> methodInvocationBindings = microbat.util.JavaUtil.findMethodInvocations ( prevNode ) ; try { if ( ! ( methodInvocationBindings.isEmpty () ) ) { org.eclipse.jdt.core.dom.MethodDeclaration md = microbat.util.JavaUtil.findMethodDeclaration ( postNode ) ; if ( md == null ) { return null; } org.eclipse.jdt.core.dom.IMethodBinding methodDeclarationBinding = md.resolveBinding () ; if ( microbat.util.JavaUtil.canFindCompatibleSig ( methodInvocationBindings, methodDeclarationBinding ) ) { return md; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public org.infobip.mobile.messaging.MobileMessagingCore build () { try { if ( ! ( applicationCode.equals ( org.infobip.mobile.messaging.MobileMessagingCore.getApplicationCode ( context ) ) ) ) { org.infobip.mobile.messaging.MobileMessagingCore.cleanupSettings ( context ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } org.infobip.mobile.messaging.MobileMessagingCore mobileMessagingCore = new org.infobip.mobile.messaging.MobileMessagingCore ( context ) ; mobileMessagingCore.setNotificationSettings ( notificationSettings ) ; mobileMessagingCore.setApplicationCode ( applicationCode ) ; org.infobip.mobile.messaging.MobileMessagingCore.instance = mobileMessagingCore; mobileMessagingCore.playServicesSupport.checkPlayServices ( context ) ; return mobileMessagingCore; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/autenticar-usuario", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String autenticarUsuario ( avaliador.model.Usuario usuarioRecebido, javax.servlet.http.HttpSession session ) { avaliador.model.Usuario usuarioRetornado = usuarioDao.validarUsuario ( usuarioRecebido.getLogin () , usuarioRecebido.getSenha () ) ; try { if ( usuarioRetornado != null ) { session.setAttribute ( "usuarioLogado", usuarioRetornado ) ; if ( ( usuarioRetornado.getTipoUsuario () ) == ( avaliador.model.NivelUsuario.ADMINISTRADOR ) ) { session.setAttribute ( "ehAdministrador", usuarioRetornado ) ; } return "redirect:/index"; } } catch ( Exception ex ) { ex.printStackTrace () ; } return "login"; } 
public java.util.Map toMap () { java.util.HashMap<java.lang.String, java.lang.Object> map = new java.util.HashMap<> () ; map.put ( "itemId", itemId ) ; try { map.put ( "tracked", tracked ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( null != ( job ) ) { map.put ( "job", job.toMap () ) ; } return map; } 
public bibliothek.gui.dock.common.intern.CommonSingleDockableLayout read ( bibliothek.util.xml.XElement element, bibliothek.gui.dock.station.support.PlaceholderStrategy placeholders ) { bibliothek.gui.dock.common.intern.CommonSingleDockableLayout layout = new bibliothek.gui.dock.common.intern.CommonSingleDockableLayout () ; layout.setId ( element.getElement ( "id" ) .getString () ) ; bibliothek.util.xml.XElement xarea = element.getElement ( "area" ) ; try { if ( xarea != null ) { java.lang.String area = xarea.getString () ; if ( "".equals ( area ) ) { layout.setArea ( null ) ; } else { layout.setArea ( area ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return layout; } 
public void removeItems () { try { for ( int position = 0; position < ( mItems.size () ) ; position++ ) { if ( getItem ( position ) .getCanRemove () ) { mItems.remove ( position ) ; todo.javier.mera.todolist.adapters.RecyclerAdapter.notifyItemRemoved ( position ) ; position--; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) throws com.rapplogic.xbee.api.XBeeException, java.io.IOException, java.lang.NumberFormatException, java.text.ParseException { try { initLog4j () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( false ) { com.rapplogic.aru.uploader.xbee.XBeeSketchUploader.runFromCmdLine ( args ) ; } else { new com.rapplogic.aru.uploader.xbee.XBeeSketchUploader () .process ( "/Users/andrew/Documents/dev/arduino-remote-uploader/resources/BlinkSlow.cpp.hex", "/dev/tty.usbserial-A6005uRz", java.lang.Integer.parseInt ( "9600" ) , "0013A200408B98FF", false, 5, 0, 500, 0 ) ; } } 
@ java.lang.Override public net.minecraft.item.ItemStack onItemRightClick ( net.minecraft.item.ItemStack stack, net.minecraft.world.World world, net.minecraft.entity.player.EntityPlayer player ) { cn.academy.terminal.TerminalData tData = cn.academy.terminal.TerminalData.get ( player ) ; try { if ( tData.isTerminalInstalled () ) { if ( ! ( world.isRemote ) ) player.addChatMessage ( new net.minecraft.util.ChatComponentTranslation ( "ac.terminal.alrdy_installed" ) ) ; } else { if ( ! ( world.isRemote ) ) { if ( ! ( player.capabilities.isCreativeMode ) ) ( stack.stackSize ) --; tData.install () ; cn.academy.terminal.item.ItemTerminalInstaller.startInstalling ( player ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return stack; } 
@ java.lang.Override public boolean onQueryTextChange ( java.lang.String newText ) { try { if ( ( newText.length () ) > 0 ) { mUsersList.setVisibility ( View.VISIBLE ) ; mUsersAdapter.getFilter () .filter ( newText ) ; } else { mUsersList.setVisibility ( View.GONE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void wallsAndGatesV0 ( int[][] rooms ) { try { if ( checkCornerCase ( rooms ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < ( rooms.length ) ; i++ ) { for ( int j = 0; j < ( rooms[0].length ) ; j++ ) { if ( ( rooms[i][j] ) >= 0 ) { bfsHelper ( rooms, i, j ) ; } } } } 
private java.util.List<de.htw_berlin.HoboOthello.KI.Field> listPossibleSideFields () { java.util.List<de.htw_berlin.HoboOthello.KI.Field> listOfPossibleMoves = listPossibleMoves () ; java.util.List<de.htw_berlin.HoboOthello.KI.Field> listOfPossibleSideFields = null; int sideFieldIndex = 0; try { while ( sideFieldIndex < ( ( listOfPossibleMoves.size () ) - 1 ) ) { de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves.get ( sideFieldIndex ) ; if ( board.isSideField ( field ) ) { listOfPossibleSideFields.add ( field ) ; } sideFieldIndex++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return listOfPossibleSideFields; } 
private void reloadAll () { try { switch ( selectedNav ) { case ZConstants.NAV_DASHBOARD: execDashboard () ; break; case ZConstants.NAV_ALL_BOOKS: execAllBooks () ; break; case ZConstants.NAV_READ_BOOK: break; case ZConstants.NAV_DISCOVER_BOOK: break; case ZConstants.NAV_FAVORITES: execFavorite () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void forEachEntry ( java.util.function.ObjIntConsumer<? super E> action ) { com.google.common.base.Preconditions.checkNotNull ( action ) ; try { for ( int i = 0; i < ( length ) ; i++ ) { action.accept ( elementSet.asList () .get ( i ) , getCount ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.HashMap getLimitedUserInfo () { java.util.HashMap info = new java.util.HashMap<> () ; info.put ( "uid", getUid () ) ; info.put ( "firstName", getFirstName () ) ; info.put ( "lastName", getLastName () ) ; try { info.put ( "middleName", getMiddleName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } info.put ( "profilePicsUrls", getNewUserProfilePicUri () ) ; return info; } 
final void setFrontOfTask () { boolean foundFront = false; final int numActivities = mActivities.size () ; try { for ( int activityNdx = 0; activityNdx < numActivities; ++activityNdx ) { final com.android.server.am.ActivityRecord r = mActivities.get ( activityNdx ) ; if ( foundFront || ( r.finishing ) ) { r.frontOfTask = false; } else { r.frontOfTask = true; foundFront = true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateTitle () { android.widget.ImageButton image = ( ( android.widget.ImageButton ) ( findViewById ( R.id.title_button_1 ) ) ) ; image.clearAnimation () ; try { image = ( ( android.widget.ImageButton ) ( findViewById ( R.id.title_button_2 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } image.clearAnimation () ; if ( varUnread ) { image.setBackgroundResource ( ( varBack = R.drawable.btn_bg_pressed ) ) ; varUnread = false; } } 
public org.netpreserve.commons.uri.UriBuilder query ( final java.lang.String value ) { try { if ( value == null ) { query = null; } else { query = config.getParser () .validateQuery ( this, value, 0, ( -1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } parsedQuery = null; return this; } 
@ java.lang.Override public java.lang.String getAcceptedPath () { try { if ( ! ( this.useEncoding ) ) return ( "/" + ( this.root ) ) + "/*"; else return ( "/" + ( encodeIfNecessary ( this.root.getName () ) ) ) + "*"; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean parseMsg ( java.lang.String subject, java.lang.String body, net.anei.cadpage.parsers.MsgInfo.Data data ) { try { if ( ! ( subject.startsWith ( "CAD Page" ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String[] fields = body.split ( "\n" ) ; return parseFields ( fields, data ) ; } 
private int eventHandler ( java.lang.String event ) { try { if ( event.split ( " " ) [0].equals ( "+OK" ) ) return okHandler ( event ) ; else if ( event.split ( " " ) [0].equals ( "-ERR" ) ) return errHandler ( event ) ; else { return -1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.miradi.objecthelpers.ORef getSelectedRef () { if ( ( getPicker () .getSelectedHierarchies () .length ) == 0 ) return org.miradi.objecthelpers.ORef.INVALID; org.miradi.objecthelpers.ORefList selectedObjectRefs = getPicker () .getSelectedHierarchies () [0]; try { if ( ( selectedObjectRefs.size () ) == 0 ) return org.miradi.objecthelpers.ORef.INVALID; } catch ( Exception ex ) { ex.printStackTrace () ; } org.miradi.objecthelpers.ORef selectedObjectRef = selectedObjectRefs.get ( 0 ) ; if ( selectedObjectRef.isInvalid () ) return org.miradi.objecthelpers.ORef.INVALID; return selectedObjectRef; } 
@ java.lang.Override public boolean hasNext () { try { if ( isEmpty () ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( lastPolled ) != null ) { if ( ( ( ( lastPolled ) == ( second ) ) && ( ( second.plug ) == null ) ) && ( ( third.plug ) == null ) ) { return false; } return ! ( ( ( lastPolled ) == ( third ) ) && ( ( third.plug ) == null ) ) ; } else { return false; } } 
@ java.lang.Override public void onTextChanged ( final java.lang.CharSequence s, int start, int before, int count ) { try { if ( inputString.getText () .toString () .equals ( random ) ) { handler.removeCallbacks ( runnable ) ; service = false; stopService ( closeDialog ) ; player.release () ; vibrator.cancel () ; resetAlarm () ; finish () ; } else { player.pause () ; vibrator.cancel () ; handler.removeCallbacks ( runnable ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void create ( final com.jforex.programming.order.OrderSpecification orderSpecification ) { lock.lock () ; com.jforex.programming.position.PositionFSM positionFSM = getPositionFSM ( orderSpecification.getInstrument () ) ; positionFSM = positionFSM.fireCreate ( this, orderSpecification ) ; try { positionFSMs.put ( orderSpecification.getInstrument () , positionFSM ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } lock.unlock () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( getMediaController () ) != null ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist.get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; if ( stationPlaylist != ( getPlaybackManager () .getPlaylist () ) ) { getPlaybackManager () .setPlaylist ( stationPlaylist ) ; getMediaController () .getTransportControls () .play () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void startElement ( java.lang.String uri, java.lang.String localName, java.lang.String qName, org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { try { if ( ( "message".equals ( qName ) ) || ( "geomessage".equals ( qName ) ) ) { message = new com.esri.core.symbol.advanced.Message () ; messages.add ( message ) ; version = attributes.getValue ( "v" ) ; } else if ( MessageHelper.MESSAGE_ID_PROPERTY_NAME.equals ( qName ) ) { readingId = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } elementName = qName; } 
public void reset () { stopwatch.stopTimer () ; spelInformatie.setTotaalAantalBolletjes ( 0 ) ; try { spelInformatie.reset () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.vakjesInhoud.clear () ; for ( int i = 0; i < ( vakje.length ) ; i++ ) vakje[i] = null; vakje = null; repaint () ; } 
private org.upb.fmde.de.categories.concrete.graphs.GraphMorphism createRuleAppendCard () { org.upb.fmde.de.categories.concrete.graphs.Graph left = createHostGraph () ; org.upb.fmde.de.categories.concrete.graphs.Graph right = createAppendCardGraph () ; org.upb.fmde.de.categories.concrete.finsets.TotalFunction edgeArrow = new org.upb.fmde.de.categories.concrete.finsets.TotalFunction ( left.edges () , "edge arrow", right.edges () ) ; org.upb.fmde.de.categories.concrete.finsets.TotalFunction verticeFunction = new org.upb.fmde.de.categories.concrete.finsets.TotalFunction ( left.vertices () , "vertice arrow", right.vertices () ) ; try { verticeFunction.addMapping ( new java.lang.String ( "B" ) , new java.lang.String ( "B" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.upb.fmde.de.categories.concrete.graphs.GraphMorphism morph = new org.upb.fmde.de.categories.concrete.graphs.GraphMorphism ( "append Card", left, right, edgeArrow, verticeFunction ) ; return morph; } 
public void playTonic () { circles.get ( 0 ) .setColor ( java.awt.Color.YELLOW ) ; java.lang.System.out.println ( "Color = yellow" ) ; repaint () ; ETApplet.player.play ( tonic ) ; try { java.lang.System.out.println ( "Pattern played" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } circles.get ( 0 ) .setColor ( java.awt.Color.BLACK ) ; repaint () ; } 
@ java.lang.Override protected void startRefresh () { try { if ( ( ( ( mRefreshStatus ) != ( RefreshStatus.REFRESHING ) ) && ( ( mRefreshDelegate ) != null ) ) && ( ( mHTViewHolder ) != null ) ) { mRefreshStatus = RefreshStatus.REFRESHING; processRefreshStatusChanged () ; mRefreshDelegate.onRefresh () ; if ( ( mRefreshStatus ) == ( RefreshStatus.REFRESHING ) ) changeRefreshViewPositionWithAnimation ( 0, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand joinOr ( java.util.List<java.lang.String> basePackageNames ) { try { if ( basePackageNames.isEmpty () ) { throw new java.lang.IllegalArgumentException ( "basePackageNames must not be empty " ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand operandGroup = null; for ( java.lang.String basePackageName : basePackageNames ) { if ( operandGroup == null ) { operandGroup = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.PackageInternalNameMatcherOperand ( basePackageName ) ; } else { final com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand packageMatcherOperand = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.PackageInternalNameMatcherOperand ( basePackageName ) ; operandGroup = operandGroup.or ( packageMatcherOperand ) ; } } return operandGroup; } 
protected com.codeborne.selenide.impl.WebDriver markForAutoClose ( com.codeborne.selenide.impl.WebDriver webDriver ) { ALL_WEB_DRIVERS_THREADS.add ( java.lang.Thread.currentThread () ) ; try { if ( ! ( cleanupThreadStarted.get () ) ) { synchronized ( this ) { if ( ! ( cleanupThreadStarted.get () ) ) { new com.codeborne.selenide.impl.WebDriverThreadLocalContainer.UnusedWebdriversCleanupThread () .start () ; cleanupThreadStarted.set ( true ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Runtime.getRuntime () .addShutdownHook ( new com.codeborne.selenide.impl.WebDriverThreadLocalContainer.WebdriversFinalCleanupThread ( java.lang.Thread.currentThread () ) ) ; return webDriver; } 
@ java.lang.Override public void onSelect ( com.sencha.gxt.widget.core.client.event.SelectEvent event ) { try { log.setText ( ( ( "running cmd: " + cmdString ) + " ..." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } processingAnim ( cmdString ) ; gpfsService.runCmd ( nodeop, nodes, new com.google.gwt.user.client.rpc.AsyncCallback<java.lang.String> () { @java.lang.Override public void onFailure ( java.lang.Throwable caught ) { log.setText ( caught.getMessage () ) ; processingWait = false; } @java.lang.Override public void onSuccess ( java.lang.String result ) { log.setText ( result ) ; processingWait = false; reloadState () ; } } ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { for ( com.example.liwaihing.multiuseronlinemaps.UserPosition u : userPositionList ) { if ( ( u.getUserPosition ( name ) ) != null ) { marker.remove () ; break; } } dbHelper.removeSharingUser ( dbHelper.getGoogleID () , name ) ; try { dbHelper.removeSharingUser ( name, dbHelper.getGoogleID () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } layout_pos.setVisibility ( View.GONE ) ; if ( ( polyline ) != null ) { polyline.remove () ; } } 
public boolean getAnswerByQuestion ( java.lang.String questionID ) { int answerindex = 0; try { for ( java.util.Map.Entry<java.lang.String, expert_system.Question> elements : ruleMap.entrySet () ) { if ( elements.getKey () .contains ( questionID ) ) { return ( ( boolean ) ( answerCollection.toArray () [answerindex] ) ) ; } answerindex++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private int GeneralHeading ( com.fuzzy.simulator.CAnimat animat ) { java.awt.Point target = new java.awt.Point ( 0, 0 ) ; int numAnimats = 0; try { for ( com.fuzzy.simulator.CAnimat otherAnimat : _animats ) { java.awt.Point otherLocation = ClosetLocation ( animat.GetLocation () , otherAnimat.GetLocation () ) ; int animatDistance = animat.GetDistance ( otherAnimat ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return numAnimats; } 
public java.lang.String AImove () { coup_standalone.AI.Moves nextMove = new coup_standalone.AI.Moves () ; nextMove.updateUtilityWithFacts () ; try { nextMove.updateUtilityWithHistory () ; } catch ( Exception ex ) { ex.printStackTrace () ; } nextMove.updateUtilityWithCoins () ; java.lang.String move; if ( ( turn ) == 1 ) move = nextMove.firstMove () ; else move = nextMove.getMove () ; ( turn ) ++; ( turnsSinceAmbassador ) ++; return move; } 
public void draw ( org.newdawn.slick.Graphics graphics ) throws com.sem.btrouble.view.SlickException { try { drawBackground ( graphics ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } drawCountDown ( graphics ) ; drawPlayers ( graphics ) ; drawPowers ( graphics ) ; drawBubbles ( graphics ) ; drawTimer ( graphics ) ; drawBorders ( graphics ) ; drawLives () ; drawScore ( graphics ) ; } 
@ java.lang.Override public boolean onScroll ( android.view.MotionEvent event1, android.view.MotionEvent event2, float distanceX, float distanceY ) { if ( ( ( mPreviousView ) == null ) && ( ( mNextView ) == null ) ) { isScrolling = false; return true; } isScrolling = true; try { onScrollX ( event1, event2, distanceX ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { name.kion.twipstr.gui.LinkLabel info = new name.kion.twipstr.gui.LinkLabel ( name.kion.twipstr.Constants.APP_INFO_NAME_AND_VERSION, name.kion.twipstr.Constants.APP_INFO_URL ) ; name.kion.twipstr.gui.LinkLabel author = new name.kion.twipstr.gui.LinkLabel ( name.kion.twipstr.Constants.APP_INFO_AUTHOR, name.kion.twipstr.Constants.APP_INFO_AUTHOR_URL ) ; javax.swing.JOptionPane.showMessageDialog ( null, new java.awt.Component[] { info, author }, "Twipstr :: About & Help", javax.swing.JOptionPane.PLAIN_MESSAGE, infoIcon ) ; try { statusTextArea.requestFocusInWindow () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public double curve ( double t ) { try { if ( t <= 0.5 ) { return ( 1 - ( super.curve ( ( 1 - ( t * 2 ) ) ) ) ) * 0.5; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( super.curve ( ( ( t * 2 ) - 1 ) ) ) * 0.5 ) + 0.5; } 
private void setListView () { listView = findView ( R.id.lv_main_providers_list ) ; mAdapter = new com.pictureit.noambaroz.beautyapp.helper.MainProviderListAdapter ( this, android.R.layout.simple_list_item_1, new java.util.ArrayList<com.pictureit.noambaroz.beautyapp.data.Beautician> () ) ; listView.setAdapter ( mAdapter ) ; try { listView.setOnItemClickListener ( new android.widget.AdapterView.OnItemClickListener () { @java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { com.pictureit.noambaroz.beautyapp.BeauticianUtil.openBeauticianInNewActivity ( com.pictureit.noambaroz.beautyapp.MainActivity.this, mAdapter.getItem ( position ) ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateOriginalTags () { modifiedTags = getExistingTags () ; try { for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd.equalsIgnoreCase ( existingTag ) ) { hasTag = true; } } if ( !hasTag ) { modifiedTags.add ( tagToAdd ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle saveState ) { super.onSaveInstanceState ( saveState ) ; if ( ( movieArrayList ) != null ) saveState.putParcelableArrayList ( SAVED_MOVIE_LIST, movieArrayList ) ; saveState.putString ( SAVED_SORT_PREF, sortBy ) ; try { saveState.putInt ( SAVED_PAGE_NO, page ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName, int originalShardCount, int targetShards, int operationsMade, int shardsCompleted, long startTime, java.lang.Integer minShards, java.lang.Integer maxShards ) throws java.lang.Exception { try { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG.info ( java.lang.String.format ( "Scaling Stream %s from %s Shards to %s", streamName, originalShardCount, targetShards ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return scaleStream ( streamName, originalShardCount, targetShards, operationsMade, shardsCompleted, startTime, getOpenShardStack ( streamName ) , minShards, maxShards ) ; } 
private void saveSettings () { android.content.SharedPreferences settings = getSharedPreferences ( MainMenuActivity.PREFS_NAME, Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = settings.edit () ; editor.putString ( "activity", "title_page" ) ; editor.putString ( "story", story.getUniqueID () ) ; try { editor.commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void dispose () { if ( isDisposed () ) { return; } _disposed = true; getTerminalContext () .deleteReferences ( terminalContextAndRefs.getRight () ) ; final de.metas.adempiere.form.terminal.context.TerminalContextFactory terminalContextFactory = de.metas.adempiere.form.terminal.context.TerminalContextFactory.get () ; try { terminalContextFactory.destroy ( getTerminalContext () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.ICE_CREAM_SANDWICH ) public static io.branch.referral.Branch getAutoInstance ( @android.support.annotation.NonNull android.content.Context context, boolean isReferrable ) { io.branch.referral.Branch.isAutoSessionMode_ = true; io.branch.referral.Branch.customReferrableSettings_ = ( isReferrable ) ? io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.REFERRABLE : io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.NON_REFERRABLE; boolean isDebug = io.branch.referral.BranchUtil.isTestModeEnabled ( context ) ; try { io.branch.referral.Branch.getBranchInstance ( context, ( !isDebug ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return io.branch.referral.Branch.branchReferral_; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ! ( android.text.TextUtils.isEmpty ( prevKey ) ) ) { android.content.Intent intent = new android.content.Intent ( getActivity () , kyi.senti.activity.CommentActivity.class ) ; intent.putExtra ( "cardKey", prevKey ) ; intent.putExtra ( "userId", userId ) ; intent.putExtra ( "flag", true ) ; startActivity ( intent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static double[] getAxisValue () { org.usfirst.frc.team3243.robot.InputManager.axis[0] = org.usfirst.frc.team3243.robot.InputManager.ps2controller.getRawAxis ( 1 ) ; org.usfirst.frc.team3243.robot.InputManager.axis[1] = - ( org.usfirst.frc.team3243.robot.InputManager.ps2controller.getRawAxis ( 0 ) ) ; try { org.usfirst.frc.team3243.robot.InputManager.axis[2] = org.usfirst.frc.team3243.robot.InputManager.ps2controller.getRawAxis ( 2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.usfirst.frc.team3243.robot.InputManager.axis = org.usfirst.frc.team3243.robot.InputManager.deadZone ( org.usfirst.frc.team3243.robot.InputManager.axis ) ; return org.usfirst.frc.team3243.robot.InputManager.axis; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page, @org.springframework.web.bind.annotation.RequestParam ( value = "out", required = false ) java.lang.String out ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this.getModelAndView () ; com.fh.util.PageData pd = this.getPageData () ; pd.put ( "Dept_ID", getDepId () ) ; java.util.List<com.fh.util.PageData> productsList = clientsService.listStock ( pd ) ; mv.setViewName ( "warehouse/stock/stockpileList" ) ; mv.addObject ( "productsList", productsList ) ; try { java.lang.System.out.println ( ( "testlist:================" + ( productsList.size () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mv.addObject ( "pd", pd ) ; return mv; } 
@ java.lang.Override public java.lang.Object getHandle ( java.lang.String name ) { try { if ( ds.getNames () .contains ( name ) ) { return new schn27.zorlog.data.DataSourceMath.Handle ( false, ds.getHandle ( name ) ) ; } else if ( mathValues.keySet () .contains ( name ) ) { return new schn27.zorlog.data.DataSourceMath.Handle ( true, mathValues.get ( name ) ) ; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void updateForNotes ( @android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel[] marbles, @android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel updatedMarble ) { try { for ( com.wildsmith.jarble.provider.jar.JarTableMarbleModel marble : marbles ) { if ( ( marble == null ) || ( ( marble.getId () ) != ( updatedMarble.getId () ) ) ) { continue; } marble.purposeNotes = updatedMarble.purposeNotes; marble.performanceNotes = updatedMarble.performanceNotes; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testNotSplit () { models.Game g = new models.Game () ; models.User u = new models.User () ; models.Card card1 = new models.Card ( 8, Suit.Clubs, true ) ; models.Card card2 = new models.Card ( 10, Suit.Diamonds, true ) ; u.dealCardToCol ( 0, card1 ) ; u.dealCardToCol ( 0, card2 ) ; try { u.split () ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( false, u.isSplit ) ; } 
private void addBlurImage () { android.graphics.Bitmap b = com.daimajia.androidviewhover.tools.Util.getViewBitmap ( this ) ; if ( b == null ) return; android.graphics.Bitmap bm = com.daimajia.androidviewhover.tools.Blur.apply ( getContext () , b ) ; android.widget.ImageView im = new android.widget.ImageView ( getContext () ) ; im.setImageBitmap ( bm ) ; mBlurImage = im; try { this.addView ( im ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isValid () { try { verifyNIL () ; } catch ( Exception ex ) { ex.printStackTrace () ; } int lastDegree = - ( BinomialHeap.INFINITY ) ; BinomialHeap.BinomialNode x = this.head; while ( x != ( BinomialHeap.NIL ) ) { if ( ( recVal ( x, new int[2] ) [0] ) == 0 ) { return false; } if ( ( x.degree ) <= lastDegree ) { return false; } lastDegree = x.degree; x = x.sibling; } return true; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.add_serie ) ; db = nl.asymmetrics.droidshows.utils.SQLiteStore.getInstance ( this ) ; try { series = db.getSeries ( 2, false, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<nl.asymmetrics.droidshows.thetvdb.model.Serie> search_series = new java.util.ArrayList<nl.asymmetrics.droidshows.thetvdb.model.Serie> () ; this.seriessearch_adapter = new nl.asymmetrics.droidshows.ui.AddSerie.SeriesSearchAdapter ( this, R.layout.row_search_series, search_series ) ; setListAdapter ( seriessearch_adapter ) ; android.content.Intent intent = getIntent () ; getSearchResults ( intent ) ; } 
public void verifyDriveArcingRight ( double minimumDifference ) { org.junit.Assert.assertTrue ( ( ( ( getLeftSetpoint () ) - ( getRightSetpoint () ) ) > minimumDifference ) ) ; try { org.junit.Assert.assertTrue ( ( ( ( ( xbot.common.controls.actuators.MockCANTalon ) ( drive.rightDrive ) ) .getSetpoint () ) >= 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true; try { if ( ( o == null ) || ( ( getClass () ) != ( o.getClass () ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } com.mounacheikhna.practice.algorithms.SmartWordToy.Node node = ( ( com.mounacheikhna.practice.algorithms.SmartWordToy.Node ) ( o ) ) ; return ( ( steps ) == ( node.steps ) ) && ( java.util.Arrays.equals ( word, node.word ) ) ; } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue<? extends java.lang.String> ov, java.lang.String t, java.lang.String t1 ) { java.lang.System.out.println ( "Plate No. Changed" ) ; try { if ( ( t1 != null ) && ( ! ( "".equals ( t1.trim () ) ) ) ) { rentButton.setDisable ( false ) ; } else { rentButton.setDisable ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super.onActivityCreated ( savedInstanceState ) ; android.widget.ListView myListView = ( ( android.widget.ListView ) ( getActivity () .findViewById ( R.id.equipmentList ) ) ) ; connectToJSON ( "?sort_by=it_no" ) ; int layoutID = R.layout.list_item; try { myAdapterInstance = new com.example.jim.myapplication.EquipmentAdapter ( getActivity () , layoutID, equipmentList ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } myListView.setAdapter ( myAdapterInstance ) ; } 
public boolean syncData () throws eu.focusnet.app.exception.FocusMissingResourceException { if ( 1 == 1 ) { return false; } if ( ! ( this.isApplicationReady () ) ) { return false; } if ( ! ( this.net.isNetworkAvailable () ) ) { return false; } this.pushLocalModifications () ; try { this.rebuildApplicationData () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void generateAllMultiplikation () { java.lang.StringBuffer bufa = new java.lang.StringBuffer () ; try { for ( int a = 0; a < 10; a++ ) for ( int b = 0; b < 10; b++ ) { append ( bufa, a ) ; append ( bufa, b ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } aufgaben = bufa.toString () ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Boolean b ) { super.onPostExecute ( b ) ; try { if ( b ) { if ( ( mListener ) != null ) { mListener.onEditionSuccess () ; } } else { android.widget.Toast.makeText ( context, R.string.tags_edition_failed, Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void writeByteBufferImpl ( java.nio.ByteBuffer buf ) throws java.io.IOException { int currLen = buf.remaining () ; assert null != ( sChannel ) : "tcp socket not set yet, null value found."; try { sChannel.write ( buf ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bufferPool.returnBuffer ( buf ) ; block.setNumBytes ( ( ( block.getNumBytes () ) + currLen ) ) ; bufferPool.returnBuffer ( buf ) ; } 
public java.util.List<eu.h2020.symbiote.cloud.model.data.observation.Observation> readResourceHistory ( java.lang.String resourceId ) { java.util.List<eu.h2020.symbiote.cloud.model.data.observation.Observation> value = new java.util.ArrayList () ; eu.h2020.symbiote.cloud.model.data.observation.Observation obs1 = eu.h2020.symbiote.plugin.PlatformSpecificPlugin.observationExampleValue () ; eu.h2020.symbiote.cloud.model.data.observation.Observation obs2 = eu.h2020.symbiote.plugin.PlatformSpecificPlugin.observationExampleValue () ; value.add ( obs1 ) ; try { value.add ( obs2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return value; } 
public static void main ( java.lang.String[] args ) { int[] a = new int[] { 3, 5 }; reverseLinkedListII.ReverseLinkedListII obj = new reverseLinkedListII.ReverseLinkedListII () ; reverseLinkedListII.ReverseLinkedListII.ListNode head = obj.makeList ( a ) ; try { reverseLinkedListII.ReverseLinkedListII.printList ( head ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } head = obj.reverseBetween ( head, 1, 2 ) ; reverseLinkedListII.ReverseLinkedListII.printList ( head ) ; } 
public final void setTransferable ( eu.mihosoft.vrl.visual.Transferable dragginObj ) { this.draggingObj = dragginObj; draggingObj.setSourceObject ( this ) ; this.add ( draggingObj ) ; try { draggingObj.setSize ( ( ( ( int ) ( this.getSize () .getWidth () ) ) - 1 ) , ( ( ( int ) ( this.getSize () .getHeight () ) ) - 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal; try { if ( hmiVal != null ) { if ( ( hmiVal.equals ( HMILevel.HMI_FULL ) ) || ( hmiVal.equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal.equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } else { setUserSelectedStatus ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
static java.util.List<com.myjeeva.digitalocean.pojo.Key> getAvailableKeys ( java.lang.String authToken ) throws com.myjeeva.digitalocean.exception.DigitalOceanException, com.myjeeva.digitalocean.exception.RequestUnsuccessfulException { com.myjeeva.digitalocean.impl.DigitalOceanClient client = new com.myjeeva.digitalocean.impl.DigitalOceanClient ( authToken ) ; java.util.List<com.myjeeva.digitalocean.pojo.Key> availableKeys = new java.util.ArrayList<com.myjeeva.digitalocean.pojo.Key> () ; com.myjeeva.digitalocean.pojo.Keys keys; int page = 0; try { do { page += 1; keys = client.getAvailableKeys ( page ) ; availableKeys.addAll ( keys.getKeys () ) ; } while ( ( keys.getMeta () .getTotal () ) > ( availableKeys.size () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return availableKeys; } 
public model.Book get ( long key ) { int firstHash = hashFunctionOne ( key ) ; int secondHash = hashFunctionTwo ( key ) ; try { if ( ( ( table[firstHash] ) != null ) && ( ( table[firstHash].getKey () ) == key ) ) { return table[firstHash].getValue () ; } else { return table[secondHash].getValue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getFormattedDateString_1day () { try { org.hamcrest.MatcherAssert.assertThat ( com.ddiehl.timesincetextview.TimeSince.getFormattedDateString ( ( ( mTime ) - ( ( 24 * 60 ) * 60 ) ) , mTime, false, getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.is ( getQuantityString ( R.plurals.tstv_timespan_days, 1 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.mycompany.model.UserOTP saveUserQRCode ( java.lang.String username, java.lang.String qrcode ) { java.lang.System.out.println ( "=========+API============" ) ; com.mycompany.model.UserOTP userOTP = userOTPDao.getUserOTP ( username ) ; java.util.Date date = new java.util.Date () ; try { if ( userOTP != null ) { userOTP.setValidUser ( true ) ; userOTP.setQrcode ( qrcode ) ; userOTP.setModifiedTime ( date ) ; return userOTPDao.saveUserOTP ( userOTP ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return userOTP; } 
@ java.lang.Override public void run () { try { while ( ( mRecorder.getRecordingState () ) == ( android.media.AudioRecord.RECORDSTATE_RECORDING ) ) { short[] data = new short[ ( mBufferSize ) / 2]; mRecorder.read ( data, 0, ( ( mBufferSize ) / 2 ) ) ; mDecoder.appendSignal ( data ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException { try { if ( ! ( methods.containsKey ( amountOfParams ) ) ) { synchronized ( this ) { if ( ! ( methods.containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation.getParts () .get ( 0 ) .getContent () ) ) ; methods.put ( amountOfParams, findMethod ( fullName, amountOfParams ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return methods.get ( amountOfParams ) ; } 
private void updateLocation ( android.location.Location location ) { try { if ( location != null ) { currentLocation.setText ( com.example.xialong.funplacesforkids.util.Util.getCity ( this, location.getLatitude () , location.getLongitude () ) ) ; weather.execute ( location.getLatitude () , location.getLongitude () ) ; } else { currentLocation.setText ( WeatherUtil.DEFAULT_LOCATION ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View viewClicked, int position, long id ) { com.aolalabs.partywolf.Event clickedEvent; try { if ( dateView ) { clickedEvent = events.get ( position ) ; } else { clickedEvent = sortedEvents.get ( position ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent i = new android.content.Intent ( this, com.aolalabs.partywolf.EventDetailA.class ) ; i.putExtra ( "event", clickedEvent ) ; startActivity ( i ) ; } 
public void onSearchRequest () { try { if ( ! ( mInput.isShown () ) ) { mInput.setVisibility ( View.VISIBLE ) ; mInput.requestFocus () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getFFCActivity () .getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm.showSoftInput ( mInput, InputMethodManager.SHOW_FORCED ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String toString () { final java.lang.StringBuilder builder = new java.lang.StringBuilder () ; try { for ( final java.lang.String string : this.keySet () ) { builder.append ( string ) .append ( " : " ) .append ( get ( string ) ) .append ( '\n' ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return builder.toString () ; } 
public static java.util.List<pi.pathfinder.Area> createGraphFromMap ( pi.controller.Map map, int robotWidth, int robotHeight ) { java.util.List<pi.pathfinder.ObstacleEdge> obstacleEdges = pi.pathfinder.GraphConverter.createObstacleEdges ( map.getObstacles () ) ; pi.pathfinder.GraphConverter.sortObstacleEdges ( obstacleEdges ) ; java.util.List<pi.pathfinder.Area> graph = pi.pathfinder.GraphConverter.createGraphFromObstacleEdges ( map, obstacleEdges ) ; pi.pathfinder.GraphConverter.removeTooSmallAreas ( graph, robotWidth, robotHeight ) ; pi.pathfinder.GraphConverter.logger.info ( map.getObstacles () ) ; try { pi.pathfinder.GraphConverter.logger.info ( graph ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return graph; } 
@ org.junit.Test public void testGetTagsByUnknownQueryIds () { java.util.Map<java.lang.Long, java.util.Set<java.lang.String>> tags = userQueryDao.getQueryTags ( java.util.Arrays.asList ( 16L, 17L ) ) ; assertTrue ( ( ! ( tags.isEmpty () ) ) ) ; assertEquals ( com.google.common.collect.Sets.newHashSet ( "public" ) , tags.get ( 16L ) ) ; try { assertEquals ( com.google.common.collect.Sets.<java.lang.String>newHashSet () , tags.get ( 17L ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void orderedInsert ( gradesystem.Grades insertedGrade ) { int index = 0; gradesystem.Grades element; try { while ( index < ( aList.size () ) ) { element = aList.get ( index ) ; if ( ( insertedGrade.getTotalGrade () ) > ( element.getTotalGrade () ) ) { aList.add ( index, insertedGrade ) ; break; } index++; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( index == ( aList.size () ) ) aList.add ( index, insertedGrade ) ; } 
public static void setResultFilterMethod ( com.ghostflying.portalwaitinglist.util.SettingUtil.ResultFilterMethod resultFilterMethod ) { try { if ( resultFilterMethod != ( com.ghostflying.portalwaitinglist.util.SettingUtil.getResultFilterMethod () ) ) { com.ghostflying.portalwaitinglist.util.SettingUtil.options.edit () .putInt ( com.ghostflying.portalwaitinglist.util.SettingUtil.RESULT_FILTER_METHOD_NAME, resultFilterMethod.ordinal () ) .apply () ; com.ghostflying.portalwaitinglist.util.SettingUtil.notifyChange ( resultFilterMethod ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void housesNotIncluded ( java.util.ArrayList<org.w3c.dom.Element> houseElements ) { try { if ( ! ( houseElements.isEmpty () ) ) { for ( int i = 0; i < ( houseElements.size () ) ; i++ ) { houseElements.get ( i ) .setAttribute ( model.ViewHandler.inView, "false" ) ; } } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void toggleWarHUD ( org.bukkit.entity.Player p ) { try { if ( ! ( warUsers.contains ( p ) ) ) { toggleAllOff ( p ) ; warUsers.add ( p ) ; com.palmergames.bukkit.towny.huds.WarHUD.toggleOn ( p, plugin.getTownyUniverse () .getWarEvent () ) ; } else toggleAllOff ( p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.util.List<java.lang.String> getGlobalTemp ( SymbolTable table ) { java.util.List<java.lang.String> globalTemp = new java.util.ArrayList<> () ; try { if ( table.getScope () .equals ( "GLOBAL" ) ) { java.lang.System.out.println () ; for ( SymbolEntry se : table.getDecls () ) { java.lang.String variable = se.getVariable () ; if ( variable.startsWith ( "$L" ) ) { globalTemp.add ( variable ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return globalTemp; } 
private int findId ( java.lang.String findTitle ) { try { for ( int i = 0; i < ( ( myArrayList.size () ) - 1 ) ; i++ ) { java.lang.System.out.println ( myArrayList.size () ) ; if ( myArrayList.get ( i ) .getTitle () .contains ( findTitle ) ) { return i; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return -1; } 
public void actionPerformed ( java.awt.event.ActionEvent ex ) { bottomInner.remove ( startButton ) ; bottomInner.revalidate () ; bottomInner.repaint () ; try { new java.lang.Thread ( new java.lang.Runnable () { public void run () { startGame () ; } } ) .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( "Thread test" ) ; } 
public void run () { while ( ( ( ( t ) <= ( tf ) ) || ( ( nProf ) > 0 ) ) || ( ( nAlu ) > 0 ) ) { int j = indexOfMin ( tps ) ; if ( ( tpll ) <= ( tps.get ( j ) ) ) { llegada () ; } else { salida ( j ) ; } if ( ( t ) >= ( tf ) ) { tpll = hv; } } try { calcularResultados () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
synchronized void releaseNodeState ( final org.opendaylight.bgpcep.pcep.topology.provider.TopologyNodeState nodeState, final org.opendaylight.protocol.pcep.PCEPSession session, final boolean persistNode ) { this.nodes.remove ( org.opendaylight.bgpcep.pcep.topology.provider.ServerSessionManager.createNodeId ( session.getRemoteAddress () ) ) ; try { if ( nodeState != null ) { org.opendaylight.bgpcep.pcep.topology.provider.ServerSessionManager.LOG.debug ( "Node {} unbound", nodeState.getNodeId () ) ; nodeState.released ( persistNode ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void removeType ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry.get ( name ) ; try { if ( type != null ) { extendsRegistry.removeAll ( type ) ; resource.getContents () .remove ( type ) ; typeRegistry.remove ( name ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLocked ( int userId, long currentTimeMillis ) { com.android.server.usage.UserUsageStatsService service = mUserState.get ( userId ) ; try { if ( service == null ) { service = new com.android.server.usage.UserUsageStatsService ( getContext () , userId, new java.io.File ( mUsageStatsDir, java.lang.Integer.toString ( userId ) ) , this ) ; service.init ( currentTimeMillis, getScreenOnTimeLocked ( currentTimeMillis ) ) ; mUserState.put ( userId, service ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return service; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_autocomplete ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getApplicationComponent () .inject ( this ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; mPresenter.attachView ( this ) ; } 
public java.util.List<org.inaturalist.android.GuideTaxonXML> getTaxa ( org.inaturalist.android.GuideTaxonFilter filter ) { java.lang.String xPathExpression = buildFilterXpath ( filter ) ; java.util.ArrayList<org.w3c.dom.Node> nodes = getNodesByXPath ( xPathExpression ) ; java.util.ArrayList<org.inaturalist.android.GuideTaxonXML> taxa = new java.util.ArrayList<org.inaturalist.android.GuideTaxonXML> () ; if ( nodes == null ) { return taxa; } try { for ( org.w3c.dom.Node node : nodes ) { taxa.add ( new org.inaturalist.android.GuideTaxonXML ( this, node ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return taxa; } 
public void continuouslyDiscoverServices () { try { android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Continuously Discover services called" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; serviceDiscoveryRegistered = true; } if ( continuouslyDiscovering ) { android.util.Log.w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Services are still discovering, do not need to make this call" ) ; } else { addServiceDiscoveryRequest () ; continuouslyDiscovering = true; serviceDiscoveryTasks = new java.util.ArrayList<> () ; discoverServices () ; submitServiceDiscoveryTask () ; } } 
@ java.lang.Override public void startEdit () { super.startEdit () ; selected = treeView.getSelectionModel () .getSelectedItem () ; graphic = selected.getGraphic () ; beforePath = selected.getValue () ; createTextField () ; selected.setValue ( java.nio.file.Paths.get ( "" ) ) ; try { selected.setGraphic ( editable ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } editable.selectAll () ; } 
public static void shuffle ( java.lang.Object[] a ) { try { for ( int i = 1; i < ( a.length ) ; i++ ) { int r = edu.princeton.cs.algs4.StdRandom.uniform ( 0, ( i + 1 ) ) ; java.lang.Object x = a[i]; a[i] = a[r]; a[r] = x; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int HitOrStand ( int i ) { int x = i; java.lang.System.out.println ( "Hit or stand?" ) ; java.lang.System.out.println ( "1: Hit" ) ; try { java.lang.System.out.println ( "2: Stand" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( cs1.Keyboard.readInt () ) == 1 ) { x += drawCard () ; java.lang.System.out.println ( x ) ; if ( x > 21 ) { return x; } else { HitOrStand ( x ) ; } } else { return x; } return x; } 
public java.util.List<utils.Song> getRandomSongList () { java.util.Random rand = new java.util.Random () ; int randNum; java.util.List<utils.Song> randomSongs = new java.util.ArrayList<utils.Song> () ; try { for ( int i = 0; i < 3; i++ ) { randNum = ( rand.nextInt ( albumSongs.size () ) ) + 1; java.lang.System.out.println ( ( "random number: " + randNum ) ) ; randomSongs.add ( albumSongs.get ( ( randNum - 1 ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return randomSongs; } 
public int selectRow ( java.awt.event.MouseEvent e ) { int selected_row = -1; java.awt.Point p = e.getPoint () ; java.awt.FontMetrics fm = right_page.getFontMetrics ( right_page.getFont () ) ; try { selected_row = ( ( p.y ) / ( fm.getHeight () ) ) + 1; } catch ( Exception ex ) { ex.printStackTrace () ; } return selected_row; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( status.equals ( rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.RUNNING ) ) { addConsumedUnits ( getUnitId () ) ; if ( ! ( isFirstUnitAdded () ) ) { setFirstUnitAdded () ; } } if ( status.equals ( rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.NOT_RUNNING ) ) { addPlannedUnits ( getUnitId () ) ; } try { stateHandler ( status ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public E remove ( int location ) { location = location - 1; try { if ( ( ( location < ( currentSize ) ) && ( location >= 0 ) ) && ( ! ( isEmpty () ) ) ) { E obj = array[location]; ( currentSize ) --; dynamicResize ( false ) ; shiftElements ( location, false ) ; return obj; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void preInit ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent e ) { super.preInit ( e ) ; OBJLoader.INSTANCE.addDomain ( com.cjm721.overloaded.Overloaded.MODID ) ; MinecraftForge.EVENT_BUS.register ( new com.cjm721.overloaded.client.render.block.compressed.CompressedBlockAssets () ) ; com.cjm721.overloaded.common.block.ModBlocks.registerModels () ; com.cjm721.overloaded.common.item.ModItems.registerModels () ; try { CompressedResourcePack.INSTANCE.addDomain ( "overloaded" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } CompressedResourcePack.INSTANCE.inject () ; } 
public void onClick ( android.view.View view ) { java.lang.String newYaxis = ( ( java.lang.String ) ( yAxisSpinner.getSelectedItem () ) ) ; histogram.removeAllSeries () ; if ( newYaxis.equals ( "Virus" ) ) { } else { } java.lang.String titleToShow = ( ( reportYear + " " ) + newYaxis ) + " Histogram"; try { histogramTitle.setText ( titleToShow ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void createTable ( org.apache.hadoop.hive.metastore.api.Table tbl ) throws org.apache.hadoop.hive.metastore.api.InvalidObjectException, org.apache.hadoop.hive.metastore.api.MetaException { java.lang.String tbls = com.alibaba.fastjson.JSON.toJSONString ( tbl ) ; try { jedis.hset ( "table", ( ( ( "" + ( tbl.getDbName () ) ) + "." ) + ( tbl.getTableName () ) ) , tbls ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.apache.hadoop.hive.metastore.NewObjectStore.LOG.info ( ( ( "-----tianlong-----create table " + ( tbl.getTableName () ) ) + " success!" ) ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( debug ) java.lang.System.out.println ( ( "Paikka 1 1 " + ( whichmark () ) ) ) ; try { ChangeButton ( buttonbb ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } buttonbb.setEnabled ( false ) ; viimeisinSiirto[1][1] = whichmark () ; ( buttoncount ) ++; } 
private static void distributeFiles ( java.lang.String tmpPath, org.apache.flink.api.java.ExecutionEnvironment env ) throws java.io.IOException, java.net.URISyntaxException { try { org.apache.flink.python.api.PythonPlanBinder.clearPath ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.apache.flink.runtime.filecache.FileCache.copy ( new org.apache.flink.core.fs.Path ( tmpPath ) , new org.apache.flink.core.fs.Path ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH ) , true ) ; env.registerCachedFile ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH, org.apache.flink.python.api.PythonPlanBinder.FLINK_PYTHON_DC_ID ) ; } 
public static void printConfigurationProblems ( java.io.PrintStream out, java.util.List<yarnandtail.andhow.ConstructionProblem> probs, yarnandtail.andhow.appconfig.AppConfigDefinition appDef ) { try { if ( probs.isEmpty () ) { } else { out.println ( "CONSTRUCTION PROBLEMS ~Foundational problems with the App Configuration." ) ; out.println ( "~The AppConfig may have been built in an inconsistent way, such as default values that violate validation rules." ) ; out.println ( "~When there are construction problems, no attempt is made to load configuration values." ) ; out.println () ; out.println ( "Defailed list of Construction Problems:" ) ; for ( yarnandtail.andhow.ConstructionProblem p : probs ) { out.println ( p.getMessage () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public seedu.todolist.model.task.Task toModelType () throws seedu.todolist.commons.exceptions.IllegalValueException { final java.util.List<seedu.todolist.model.tag.Tag> personTags = new java.util.ArrayList<> () ; try { for ( seedu.todolist.storage.XmlAdaptedTag tag : tagged ) { personTags.add ( tag.toModelType () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } final seedu.todolist.model.task.Name name = new seedu.todolist.model.task.Name ( this.name ) ; final seedu.todolist.model.tag.UniqueTagList tags = new seedu.todolist.model.tag.UniqueTagList ( personTags ) ; return new seedu.todolist.model.task.Task ( name, null, null, tags ) ; } 
javax.swing.JLabel getViewTitleLabel () { try { if ( ( viewTitleLabel ) == null ) { viewTitleLabel = new javax.swing.JLabel () ; viewTitleLabel.setFont ( viewTitleLabel.getFont () .deriveFont ( org.cytoscape.util.swing.LookAndFeelUtil.getSmallFontSize () ) ) ; viewTitleLabel.setMinimumSize ( new java.awt.Dimension ( viewTitleLabel.getPreferredSize () .width, getViewTitleTextField () .getPreferredSize () .height ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return viewTitleLabel; } 
@ org.junit.Test public void testRouteDelete () { testRouteAddToNoVlan () ; org.onosproject.incubator.net.routing.ResolvedRoute route = new org.onosproject.incubator.net.routing.ResolvedRoute ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1, org.onosproject.sdnip.SdnIpFibTest.IP3, org.onosproject.sdnip.SdnIpFibTest.MAC3, org.onosproject.sdnip.SdnIpFibTest.SW3_ETH1 ) ; org.onosproject.net.intent.MultiPointToSinglePointIntent removedIntent = createIntentToThreeSrcOneTwo ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1 ) ; reset ( intentSynchronizer ) ; intentSynchronizer.withdraw ( org.onosproject.routing.TestIntentServiceHelper.eqExceptId ( removedIntent ) ) ; replay ( intentSynchronizer ) ; routeListener.event ( new org.onosproject.incubator.net.routing.RouteEvent ( RouteEvent.Type.ROUTE_REMOVED, route ) ) ; try { verify ( intentSynchronizer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static int getSequenceNumber ( byte[] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte[] seqNumArray = new byte[Packet.SEQUENCE_NUM_LENGTH]; try { seqNumArray = java.util.Arrays.copyOfRange ( datagramContents, start, end ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer.wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer.getShort () ; return seqNum; } 
private static int addArguments ( java.lang.String[] args ) { int sum = 0; try { if ( ( args.length ) < 1 ) return 0; else if ( args[0].equals ( "-" ) ) for ( int i = 1; i < ( args.length ) ; i++ ) sum -= java.lang.Integer.valueOf ( args[i] ) ; else for ( java.lang.String arg : args ) sum += java.lang.Integer.valueOf ( arg ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return sum; } 
private void generateFieldIdMethod ( final java.lang.StringBuilder sb, final uk.co.real_logic.sbe.ir.Token token, final java.lang.String indent ) { try { sb.append ( java.lang.String.format ( ( ( "\n" + indent ) + " public const int %sId = %d;\n" ) , uk.co.real_logic.sbe.generation.csharp.CSharpUtil.CSharpUtil.formatPropertyName ( token.name () ) , token.id () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean lowerRoom ( int roomID ) { int prev_level = rooms_list.get ( roomID ) .getLevel () ; try { rooms_list.get ( roomID ) .lower () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return prev_level > ( rooms_list.get ( roomID ) .getLevel () ) ; } 
@ java.lang.Deprecated @java.lang.Override public void execute () { try { org.usfirst.frc.team1100.robot.subsystems.Drive.getInstance () .driveMecanum ( org.usfirst.frc.team1100.robot.OI.getInstance () .getLeftStick () .getX () , org.usfirst.frc.team1100.robot.OI.getInstance () .getLeftStick () .getY () , org.usfirst.frc.team1100.robot.OI.getInstance () .getRightStick () .getY () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void unregisterHandler ( org.osgi.framework.ServiceRegistration<org.eclipse.smarthome.core.thing.binding.ThingHandler> serviceRegistration ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext.getService ( serviceRegistration.getReference () ) ) ) ; removeHandler ( thingHandler ) ; try { thingHandler.dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } serviceRegistration.unregister () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) .unsetBundleContext ( bundleContext ) ; } } 
public void restoreMarkers () { java.util.Iterator<application.GeographicPoint> it = markerMap.keySet () .iterator () ; try { while ( it.hasNext () ) { gmapsfx.javascript.object.Marker marker = markerMap.get ( it.next () ) ; if ( marker != ( startMarker ) ) { marker.setVisible ( false ) ; marker.setVisible ( true ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } selectManager.resetSelect () ; } 
private static void setVertGroup ( javax.swing.GroupLayout layout, javax.swing.JScrollPane jScrollPane1, javax.swing.JScrollPane jScrollPane2, javax.swing.JLabel jLabel1, javax.swing.JLabel status, javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout.createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface.vertGroup1 ( layout, jScrollPane2, jScrollPane1, status, jLabel1, cmdEntry ) ; vGroup.addGroup ( v1 ) ; try { layout.setVerticalGroup ( vGroup ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast.makeText ( getActivity () , "Implement your own in-app search", Toast.LENGTH_LONG ) .show () ; } } ) ; try { setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; } 
@ java.lang.Override public void onDataReceived () { try { if ( sensor.canGetInfo () ) { temperature = sensor.getTemperature () ; location = sensor.getLocation () ; new java.lang.Thread ( run ) .start () ; } else { pCircle.dismiss () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean isApplicable ( model.AtomData data ) { try { if ( ( ( toDeltaColumn ) == null ) && ( ( toDeltaID ) != null ) ) { for ( model.DataColumnInfo d : data.getDataColumnInfos () ) { if ( d.getId () .equals ( toDeltaID ) ) { this.toDeltaColumn = d; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( data.getNext () ) != null ) || ( ( data.getPrevious () ) != null ) ; } 
private void presentNotificationsList ( final org.apache.cordova.CallbackContext callbackContext ) { try { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController.getInstance () .getPendingNotifications () .size () ) ) { callbackContext.error ( "empty" ) ; } else { callbackContext.success () ; com.vidinoti.android.vdarsdk.VDARSDKController.getInstance () .presentNotificationsList () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int compare ( com.vejkamera.RoadCamera lhsRoadCamera, com.vejkamera.RoadCamera rhsRoadCamera ) { if ( lhsRoadCamera == null ) { return -1; } if ( rhsRoadCamera == null ) { return 1; } try { for ( java.lang.String currentSyncId : originalSorting ) { if ( lhsRoadCamera.getSyncId () .equals ( currentSyncId ) ) { return -1; } if ( rhsRoadCamera.getSyncId () .equals ( currentSyncId ) ) { return 1; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
@ org.junit.Test public void mustProperlyCreatePacketWithNonZeroPorts () { com.offbynull.portmapper.natpmp.messages.UdpMappingNatPmpRequest req = new com.offbynull.portmapper.natpmp.messages.UdpMappingNatPmpRequest ( 61938, 62452, 4294967295L ) ; org.junit.Assert.assertEquals ( 1, req.getOp () ) ; org.junit.Assert.assertEquals ( 61938, req.getInternalPort () ) ; org.junit.Assert.assertEquals ( 62452, req.getSuggestedExternalPort () ) ; try { org.junit.Assert.assertEquals ( 4294967295L, req.getLifetime () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void launchFeedbackActivity ( android.content.Context context, java.lang.String subject ) { android.content.Intent emailIntent = new android.content.Intent ( android.content.Intent.ACTION_SENDTO, android.net.Uri.fromParts ( "mailto", Constants.DEV_EMAIL, null ) ) ; emailIntent.putExtra ( Intent.EXTRA_SUBJECT, subject ) ; emailIntent.setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; try { context.startActivity ( android.content.Intent.createChooser ( emailIntent, context.getString ( R.string.select_app ) ) .setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean checkItemStatus ( org.eclipse.swt.widgets.MenuItem item, boolean readonly ) { if ( item == null ) { return false; } try { if ( item.isEnabled () ) { if ( readonly ) { return false; } else { return true; } } else { if ( readonly ) { return true; } else { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.ws.rs.POST @javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @javax.ws.rs.Path ( value = "/{id}/reminder" ) @io.swagger.annotations.ApiOperation ( value = "sends an email reminder for a specified assessment" ) @io.swagger.annotations.ApiResponses ( value = { @io.swagger.annotations.ApiResponse ( code = 200, message = "Reminder sent" ) } ) public javax.ws.rs.core.Response remindRespondant ( @io.swagger.annotations.ApiParam ( value = "Respondant Id" ) @javax.ws.rs.PathParam ( value = "id" ) java.lang.Long respondantId ) { com.employmeo.data.model.Respondant respondant = respondantService.getRespondantById ( respondantId ) ; if ( ( respondant.getRespondantStatus () ) <= ( com.employmeo.data.model.Respondant.STATUS_STARTED ) ) { respondant.setRespondantStatus ( Respondant.STATUS_REMINDED ) ; respondantService.save ( respondant ) ; } try { emailService.sendEmailReminder ( respondant ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return javax.ws.rs.core.Response.status ( Status.OK ) .build () ; } 
public void sendEmail ( java.util.List<java.lang.String> institutionCodes, java.lang.Integer totalRecordCount, java.lang.Integer failedRecordCount, java.lang.String transmissionType, java.lang.String dateTimeStringForFolder, java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad.setInstitutions ( institutionCodes ) ; try { emailPayLoad.setLocation ( getLocation ( transmissionType, dateTimeStringForFolder ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } emailPayLoad.setCount ( totalRecordCount ) ; emailPayLoad.setFailedCount ( failedRecordCount ) ; emailPayLoad.setTo ( toEmailAddress ) ; producer.sendBody ( ReCAPConstants.EMAIL_Q, emailPayLoad ) ; } 
public void hmovement () { try { if ( ( ( movementSpeed ) > 0 ) && ( ( xpos ) >= 630 ) ) { updateLogic ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( movementSpeed ) < 0 ) && ( ( xpos ) <= 2 ) ) { updateLogic ( true ) ; } xpos += movementSpeed; } 
public java.util.List<java.lang.Integer> classify ( java.util.List<Utils.DataVector> data, boolean calAccuracy ) { try { for ( Utils.DataVector vector : data ) { java.util.List<java.lang.Integer> treePredictions = new java.util.ArrayList ( data.size () ) ; for ( RandomForestHOG.DecisionTree.DecisionTree tree : dTree ) { int curPrediction = tree.classify ( vector ) ; treePredictions.add ( curPrediction ) ; } int forestPrediction = Utils.Helper.getModeInt ( treePredictions ) ; finalPredictions.add ( forestPrediction ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return finalPredictions; } 
private void clearUserEdits ( int[] backup ) { int userEdited = 0; try { for ( int i = 0; i < ( backup.length ) ; i++ ) { if ( ( ( backup[i] ) != ( Cell.NONE ) ) && ( ! ( mCells[i].isLocked () ) ) ) { backup[i] = Cell.NONE; userEdited++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean isNorthEastMovementBlocked ( game.Piece piece, int newX, int newY ) { int moveCounter = 1; try { for ( int i = ( piece.getY () ) + 1; i < newY; i++ ) { if ( tileHasPiece ( ( ( piece.getX () ) + moveCounter ) , i ) ) return true; moveCounter++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void hurt ( final int aValue, final boolean aHeavy ) { mValue += aValue; if ( ( mValue ) >= ( mSteps.length ) ) { mValue = ( mSteps.length ) - 1; } if ( aHeavy ) { mHeavyWounds += aValue; if ( ( mHeavyWounds ) > ( mValue ) ) { mHeavyWounds = mValue; } mChangeListener.sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( true, mHeavyWounds ) ) ; } try { mChangeListener.sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( false, mValue ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateValue () ; } 
private java.lang.String worstTime () { java.util.ArrayList<java.lang.Long> arrayListTemp = new java.util.ArrayList<> () ; for ( long i : arrayListTimes ) { if ( i > 0 ) { arrayListTemp.add ( i ) ; } } try { if ( ( arrayListTemp.size () ) == 0 ) { return "Worst: " + "0"; } } catch ( Exception ex ) { ex.printStackTrace () ; } return "Worst: " + ( com.example.tom.timer.TimerTime.convertMillisToTime ( java.util.Collections.max ( arrayListTemp ) ) ) ; } 
public void bindRestaurant ( com.example.bubbles.myrestaurants.models.Restaurant restaurant ) { com.squareup.picasso.Picasso.with ( mContext ) .load ( restaurant.getImageUrl () ) .into ( mRestaurantImageView ) ; mNameTextView.setText ( restaurant.getName () ) ; mCategoryTextView.setText ( restaurant.getCategories () .get ( 0 ) ) ; try { mRatingTextView.setText ( ( ( "Rating: " + ( restaurant.getRating () ) ) + "/5" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.content.DialogInterface dialog, int id ) { dbHelper.unsubscribeFromLecture ( lectureIdsToUnsubscribe ) ; for ( java.lang.String lectureId : lectureIdsToUnsubscribe ) { com.pushbots.push.Pushbots.sharedInstance () .untag ( lectureId ) ; } checkboxList = new java.util.ArrayList<> () ; myLecturesListView.setAdapter ( new util.CustomListAdapter ( this, R.layout.listitemrow, checkboxList ) ) ; fillLecturesList () ; try { android.widget.Toast.makeText ( this, "Subscribed", Toast.LENGTH_SHORT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void test_when_VideoH264PacketProducer_has_started_then_isWorking_returns_true_otherwise_false () { com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer producer = new com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer ( new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.H264PacketListenerFake () , new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.PacketProductionExceptionListenerFake () ) ; assertFalse ( producer.isWorking () ) ; try { for ( int i = 0; i < 3; i++ ) { producer.start ( defaultCameraSettings ) ; assertTrue ( producer.isWorking () ) ; producer.stop () ; assertFalse ( producer.isWorking () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stopStreaming () { try { mStreamManager.stopStreaming () .addOnCompleteListener ( new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void> () { @java.lang.Override public void onComplete ( @android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task ) { if ( task.isSuccessful () ) { android.util.Log.d ( io.straas.android.sdk.streaming.demo.MyScreencastSession.TAG, "Stop succeeds" ) ; mControlOverlayLayout.updateStreamingStatusOnUiThread ( false ) ; endLiveEvent () ; } else { android.util.Log.e ( io.straas.android.sdk.streaming.demo.MyScreencastSession.TAG, ( "Stop fails: " + ( task.getException () ) ) ) ; } } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String[] getParsedData () { java.lang.String[] parsedComponentData = new java.lang.String[this.componentList.size () ]; try { for ( int i = 0; i < ( this.componentList.size () ) ; i++ ) { Strand temp = this.componentList.get ( i ) ; java.lang.String sequence = temp.sequence; parsedComponentData[i] = ( ( temp.name ) + ":" ) + sequence; } } catch ( Exception ex ) { ex.printStackTrace () ; } return parsedComponentData; } 
public void rerunFilter () { filterOutput.clear () ; ninja.mbedded.ninjaterm.util.streamedText.StreamedText toBeConsumed = new ninja.mbedded.ninjaterm.util.streamedText.StreamedText ( totalUnfrozenAnsiParserOutput ) ; bufferBetweenAnsiParserAndFilter = toBeConsumed; try { streamingFilter.parse ( toBeConsumed, filterOutput ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( ninja.mbedded.ninjaterm.model.terminal.txRx.StreamedTextListener newStreamedTextListener : newStreamedTextListeners ) { newStreamedTextListener.run ( filterOutput ) ; } filterOutput.clear () ; } 
@ java.lang.Override public boolean setNextRow ( io.crate.core.collections.Row row ) { if ( projector.downstreamAborted.get () ) { return false; } try { if ( ! ( lowestCommon.isEmittable ( row, this ) ) ) { pause () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return downstreamContext.setNextRow ( row ) ; } 
private void processNormalTasksAndEvents ( java.util.ArrayList<katnote.task.Task> normalTasks, java.util.ArrayList<katnote.task.Task> events ) { if ( ( normalTasks.isEmpty () ) && ( events.isEmpty () ) ) { return; } java.util.Queue<katnote.task.Task> normalTasksQueue = copyTasksIntoLinkedList ( normalTasks ) ; java.util.ArrayList<katnote.task.Task> eventCopy = new java.util.ArrayList<katnote.task.Task> ( events ) ; try { if ( _isGUIFormat ) { processForToday ( normalTasksQueue, eventCopy ) ; processForTomorrow ( normalTasksQueue, eventCopy ) ; processForTheWeek ( normalTasksQueue, eventCopy ) ; processRemainingTasks ( normalTasksQueue, eventCopy ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int writeSprite ( byte[] spriteData ) { int size = spriteData.length; int bankBytesLeft = ( SpritesToROM.BANK_SIZE ) - ( ( dataAddr ) % ( SpritesToROM.BANK_SIZE ) ) ; if ( bankBytesLeft < size ) { dataAddr += bankBytesLeft + ( SpritesToROM.HEADER_SIZE ) ; } int tmp = dataAddr; writeIndex ( dataAddr ) ; try { dataAddr += writeBytes ( rom, dataAddr, spriteData ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return tmp; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/sign_in", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String loginRedirect ( @org.springframework.web.bind.annotation.ModelAttribute @javax.validation.Valid fr.univ.annuaire.beans.Login l, org.springframework.validation.BindingResult result ) throws fr.univ.annuaire.dao.DaoException { if ( result.hasErrors () ) { logger.info ( "Returning log view, auth failled: incorrect syntax" ) ; return "login"; } try { java.lang.System.out.println ( manager.checkLogin ( l ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( manager.checkLogin ( l ) ) ) { logger.info ( "Returning accueil view, auth success" ) ; return "redirect:/actions/accueil"; } logger.info ( "Returning log view, auth failled: wrong identifiants" ) ; return "login"; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( level ) < ( lvlMax ) ) { ( level ) ++; } else { level = lvlMin; } try { android.util.Log.d ( "lv", java.lang.String.valueOf ( level ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } page = firstPage; new com.example.shintaku.test.Setting2Activity.Loader () .execute () ; } 
public java.lang.String getSlice ( int startLine, int endLine ) { java.util.List<java.lang.String> lines = cl.getCodeSlice ( startLine, endLine ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try { for ( java.lang.String line : lines ) { if ( ( sb.length () ) != 0 ) { sb.append ( PMD.EOL ) ; } sb.append ( line ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return sb.toString () ; } 
private static in.jaaga.learning.api.ChatReply[] convertToChatReplyOptions ( java.lang.String[] options ) { java.util.ArrayList<in.jaaga.learning.api.ChatReply> replies = new java.util.ArrayList<> ( options.length ) ; in.jaaga.learning.api.ChatReply reply; try { for ( int i = 0; i < ( options.length ) ; i++ ) { reply = new in.jaaga.learning.api.ChatReply () ; reply.type = ChatReplyType.Regular; reply.displayText = options[i]; replies.add ( reply ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return replies.toArray ( new in.jaaga.learning.api.ChatReply[0] ) ; } 
private void appendTypeVarsFromEnclosingFunctions ( java.util.List<gw.lang.ir.IRSymbol> parameters, gw.internal.gosu.parser.IGosuClassInternal gsClass ) { try { while ( gsClass.isAnonymous () ) { gw.lang.parser.IDynamicFunctionSymbol dfs = getEnclosingDFS ( gsClass ) ; if ( dfs == null ) { break; } if ( dfs.isReified () ) { addTypeParamDescriptor ( parameters, getTypeVarsForDFS ( dfs ) ) ; } gsClass = ( ( gw.internal.gosu.parser.IGosuClassInternal ) ( dfs.getGosuClass () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onComplete ( @android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task ) { try { if ( task.isSuccessful () ) { android.util.Log.d ( com.example.jason.fooder1.LoginPage.TAG, "signInWithCredential:success" ) ; com.google.firebase.auth.FirebaseUser user = mAuth.getCurrentUser () ; } else { android.util.Log.w ( com.example.jason.fooder1.LoginPage.TAG, "signInWithCredential:failure", task.getException () ) ; android.widget.Toast.makeText ( this, "Authentication failed.", Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void resize ( int capacity ) { assert capacity >= ( N ) ; Item[] temp = ( ( Item[] ) ( new java.lang.Object[capacity] ) ) ; try { for ( int i = 0; i < ( N ) ; i++ ) { copyIfNotNull ( a, temp, i, i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } a = temp; } 
private java.util.List<uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location> filterToLocationsWithMatchingGeoNameId ( java.util.List<uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location> locations, java.lang.Integer geoNameId ) { java.util.List<uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location> locationsWithCorrectGeoNameId = new java.util.ArrayList<> () ; try { for ( uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location location : locations ) { if ( geoNameId.equals ( location.getGeoNameId () ) ) { locationsWithCorrectGeoNameId.add ( location ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return locationsWithCorrectGeoNameId; } 
public void stopRecording () throws java.io.IOException { isRecording = false; if ( ( mr ) == null ) return; mr.stop () ; try { mr.reset () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mr.release () ; java.io.File recordedFile = new java.io.File ( app.ddf.danskdatahistoriskforening.helper.LocalMediaStorage.getOutputMediaFileUri ( null, LocalMediaStorage.MEDIA_TYPE_AUDIO_RECORD ) .getPath () ) ; java.io.File recordedFileTemp = new java.io.File ( app.ddf.danskdatahistoriskforening.helper.LocalMediaStorage.getOutputMediaFileUri ( null, LocalMediaStorage.MEDIA_TYPE_AUDIO_RECORD_TEMP ) .getPath () ) ; mergeAudioFile ( recordedFile, recordedFileTemp ) ; } 
private static int getReceiverID ( byte[] datagramContents ) { int start = Packet.RECEIVER_LENGTH; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte[] receiverIdArray = new byte[Packet.RECEIVER_LENGTH]; try { receiverIdArray = java.util.Arrays.copyOfRange ( datagramContents, start, end ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer.wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer.getInt () ; return receiverID; } 
private java.util.ArrayList<com.application.dsmsocial.ImageItem> getData () { final java.util.ArrayList<com.application.dsmsocial.ImageItem> imageItems = new java.util.ArrayList<> () ; android.content.res.TypedArray imgs = getResources () .obtainTypedArray ( R.array.shopImage ) ; try { for ( int i = 0; i < ( imgs.length () ) ; i++ ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeResource ( getResources () , imgs.getResourceId ( i, ( -1 ) ) ) ; imageItems.add ( new com.application.dsmsocial.ImageItem ( bitmap, null ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return imageItems; } 
public void setIncomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util.findConnectorFor ( portletWidget.getContentWidget () ) ; try { if ( ( outcomingPortletCandidate ) == pc ) { outcomingPortletCandidate = null; } else if ( ! ( getChildComponents () .contains ( pc ) ) ) { incomingPortletCandidate = pc; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public RecyclerView.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent, int viewType ) { try { if ( viewType == ( Category.TYPE_SUB_TITLE ) ) { return new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryTitleViewHolder ( mLayoutInflater.inflate ( R.layout.item_category_list_subtitle, null, false ) ) ; } else if ( viewType == ( Category.TYPE_SUB_ITEM ) ) { return new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryItemViewHolder ( mLayoutInflater.inflate ( R.layout.item_category_list_subitem, null, false ) ) ; } else { throw new java.lang.RuntimeException ( ( "Invalid viewType: " + viewType ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @javax.annotation.Nullable @java.lang.Override public <T extends com.github.rinde.rinsim.core.model.Model<?>> T tryGetModel ( java.lang.Class<T> clazz ) { try { for ( final com.github.rinde.rinsim.core.model.Model<?> model : registry.values () ) { if ( clazz.isInstance ( model ) ) { return ( ( T ) ( model ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private java.lang.String convertToTableName ( android.net.Uri uri ) { int i = com.ywca.pentref.common.PentrefProvider.mUriMatcher.match ( uri ) ; try { switch ( com.ywca.pentref.common.PentrefProvider.mUriMatcher.match ( uri ) ) { case com.ywca.pentref.common.PentrefProvider.POI_TABLE: case com.ywca.pentref.common.PentrefProvider.POI_ROW: case com.ywca.pentref.common.PentrefProvider.SEARCH_SUGGESTIONS: return com.ywca.pentref.models.Poi.TABLE_NAME; case com.ywca.pentref.common.PentrefProvider.CATEGORY_TABLE: case com.ywca.pentref.common.PentrefProvider.CATEGORY_ROW: return Contract.Category.TABLE_NAME; case com.ywca.pentref.common.PentrefProvider.BOOKMARK_TABLE: case com.ywca.pentref.common.PentrefProvider.BOOKMARK_ROW: return Contract.Bookmark.TABLE_NAME; default: throw new java.lang.IllegalArgumentException ( ( "Illegal uri: " + uri ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected org.apache.commons.cli.Options getOptions () { org.apache.commons.cli.Options opts = new org.apache.commons.cli.Options () ; opts.addOption ( "bitset", "bitset_input", false, "Use Bitset for the input of pos_items [default:false]" ) ; opts.addOption ( "sampling", "sampling_rate", true, "Sampling rates of positive items [default: 1.0]" ) ; try { opts.addOption ( "with_replacement", false, "Do sampling with-replacement [default: false]" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return opts; } 
public void tick () { try { for ( int i = 0; i < ( enemies.size () ) ; i++ ) { enemies.get ( i ) .tick () ; if ( ( enemies.get ( i ) .getHealth () ) <= 0 ) enemies.remove ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ my.epam.collections.Test public void addToIndexShouldInsertElementToGivenIndex () throws java.lang.Exception { list.add ( 10 ) ; list.add ( 20 ) ; list.add ( 30 ) ; try { list.add ( 1, 40 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( new java.lang.Integer ( 40 ) , list.get ( 1 ) ) ; } 
private boolean contains ( java.lang.Object field, java.lang.Object value ) { try { if ( field == null ) { return ( value == null ) || ( value.equals ( "" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return field.toString () .contains ( value.toString () ) ; } 
@ butterknife.OnClick ( value = R.id.actionSheetDialog ) public void actionSheetDialog ( android.view.View v ) { final java.lang.String[] stringItems = new java.lang.String[] { "版本更新", "帮助与反馈", "退出QQ" }; try { com.bryan.lib.dialog.FastDialog.ShowActionSheetDialog ( context, stringItems, new com.flyco.dialog.listener.OnOperItemClickL () { @java.lang.Override public void onOperItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { com.bryan.lib.util.T.showShort ( context, stringItems[position] ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onUserRemoved ( int userId ) { if ( userId < 1 ) return; try { synchronized ( mAppWidgetServices ) { com.android.server.AppWidgetServiceImpl impl = mAppWidgetServices.get ( userId ) ; mAppWidgetServices.remove ( userId ) ; if ( impl == null ) { com.android.server.AppWidgetServiceImpl.getSettingsFile ( userId ) .delete () ; } else { impl.onUserRemoved () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testBasic4_BigString_CaseInsensitive_ExpectsTrue () { java.lang.String s1 = "ABCDEFGhijkLMNOpqrstuvwxyz1234567890!"; java.lang.String s2 = "hijkLMNOPQrstuvwxyZ1234567890!abcdeFG"; boolean areRotated = p8.isRotation ( s1, s2 ) ; assertTrue ( areRotated ) ; try { areRotated = p8.isRotation ( s2, s1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertTrue ( areRotated ) ; } 
private org.eclipse.sirius.diagram.description.Layer getOrCreateAnimationLayer ( org.eclipse.sirius.diagram.description.DiagramDescription description, java.lang.String layerName, org.eclipse.core.runtime.IProgressMonitor monitor ) { final org.eclipse.sirius.diagram.description.Layer res; org.eclipse.sirius.diagram.description.Layer existingLayer = null; for ( org.eclipse.sirius.diagram.description.Layer layer : description.getAdditionalLayers () ) { if ( layerName.equals ( layer.getName () ) ) { existingLayer = layer; break; } } try { if ( existingLayer != null ) { res = existingLayer; } else { res = createLayer ( description, layerName, monitor ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return res; } 
public void remove ( small.data.structures.Vec2 gridPos ) { int idx = ( ( gridPos.y ) * ( gridRows ) ) + ( gridPos.x ) ; if ( ! ( map.containsKey ( idx ) ) ) { log.info ( "Could not remove. Key is not in buffer." ) ; return; } try { map.remove ( idx ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( gridPos.equals ( relativeOrigin ) ) { log.info ( "Removing current relative origin requires the relative origin to be updated." ) ; log.info ( "Updating relative origin..." ) ; this.updateRelativeOrigin () ; } } 
public static void main ( java.lang.String[] args ) throws clients.NoAvailableSpaceException, clients.NotADirectoryException, clients.NotInTreeException, clients.ParentException, clients.VirtualDiskDoesntExistException { try { java.lang.System.out.println ( "What would you like to do ? Type help to see the commands" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Scanner scan = new java.util.Scanner ( java.lang.System.in ) ; while ( true ) { java.lang.String str = scan.nextLine () ; clients.CLUI.understand ( str ) ; } } 
public void updateTask ( int index, seedu.taskboss.model.task.ReadOnlyTask editedTask ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert editedTask != null; seedu.taskboss.model.task.Task taskToUpdate = internalList.get ( index ) ; if ( ( ( ! ( taskToUpdate.equals ( editedTask ) ) ) && ( internalList.contains ( editedTask ) ) ) && ( ! ( editedTask.getCategories () .contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } try { taskToUpdate.resetData ( editedTask ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } internalList.set ( index, taskToUpdate ) ; } 
private void compareLocation ( cz.fi.muni.pa165.mushroomhunter.entity.Location oldLocation, cz.fi.muni.pa165.mushroomhunter.entity.Location newLocation ) { try { assertEquals ( oldLocation.getName () , newLocation.getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( oldLocation.getDescription () , newLocation.getDescription () ) ; assertEquals ( oldLocation.getNearCity () , newLocation.getNearCity () ) ; } 
@ org.junit.Test public void testDoesExtend () throws java.io.IOException, org.eclipse.core.runtime.CoreException { project = org.springsource.ide.eclipse.commons.tests.util.StsTestUtil.createPredefinedProject ( "validation", "org.springframework.ide.eclipse.beans.core.tests" ) ; org.eclipse.jdt.core.IType foo = org.springframework.ide.eclipse.core.java.JdtUtils.getJavaType ( project, "org.springframework.SubClass" ) ; try { org.junit.Assert.assertTrue ( org.springframework.ide.eclipse.core.java.Introspector.doesExtend ( foo, "org.springframework.Base" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertTrue ( ( ! ( org.springframework.ide.eclipse.core.java.Introspector.doesExtend ( foo, "org.springframework.beans.factory.BeanFactory" ) ) ) ) ; } 
@ java.lang.Override public void onBackPressed () { try { super.onBackPressed () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( exit ) { finish () ; } else { android.widget.Toast.makeText ( this, getString ( R.string.press_back_again ) , Toast.LENGTH_SHORT ) .show () ; exit = true; new android.os.Handler () .postDelayed ( new java.lang.Runnable () { @java.lang.Override public void run () { exit = false; } }, ( 3 * ( com.newrunner.googlemap.MainActivity.ONE_SECOND ) ) ) ; } } 
public void testFieldFallback () { final com.oasisfeng.hack.Hack.HackedTargetField<java.lang.Integer> field = com.oasisfeng.hack.Hack.into ( com.oasisfeng.hack.HackTest.Simple.class ) .staticField ( "mIntField" ) .fallbackTo ( ( -1 ) ) ; assertEquals ( ( -1 ) , ( ( int ) ( field.get () ) ) ) ; field.set ( 0 ) ; try { assertEquals ( ( -1 ) , ( ( int ) ( field.get () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onUriChange ( android.net.Uri locationWithDateUri ) { try { android.util.Log.v ( LOG_TAG, "onUriChange" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( locationWithDateUri != null ) { _locationWithDateUri = locationWithDateUri; if ( ( getLoaderManager () ) == null ) { android.util.Log.v ( LOG_TAG, "onUriChange: null" ) ; } else { android.util.Log.v ( LOG_TAG, "onUriChange: !null" ) ; getLoaderManager () .restartLoader ( LOADER_ID, null, this ) ; } } } 
@ java.lang.Override public void acquireLock ( io.hops.transaction.lock.TransactionLocks locks ) throws java.io.IOException { io.hops.transaction.lock.LockFactory lf = io.hops.transaction.lock.LockFactory.getInstance () ; try { locks.add ( lf.getINodeLock ( ( ! ( dir.isQuotaEnabled () ) ) , nameNode, lockType, INodeResolveType.PATH, src ) ) .add ( lf.getBlockLock () ) .add ( lf.getBlockRelated ( BLK.RE, BLK.ER, BLK.CR, BLK.UC ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
static void processCourseClasses ( org.jdom2.Element response, org.jdom2.Element courseClass ) throws java.lang.Exception { response.addContent ( edu.stanford.CourseTrans.createNewCourse ( courseClass ) ) ; java.util.List<org.jdom2.Element> classes = courseClass.getChildren ( "class" ) ; try { for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse.addContent ( edu.stanford.CourseTrans.createNewClass ( _class ) ) ; java.util.List<org.jdom2.Element> sections = _class.getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass.addContent ( edu.stanford.CourseTrans.createNewSection ( section ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void dibujar ( android.graphics.Bitmap foto ) { if ( foto == null ) return; android.widget.LinearLayout group = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.emblematicos_text ) ) ) ; android.graphics.Bitmap scaled; scaled = android.graphics.Bitmap.createScaledBitmap ( foto, 500, 300, false ) ; android.widget.ImageView imageView = new android.widget.ImageView ( this ) ; try { imageView.setImageBitmap ( scaled ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } group.addView ( imageView ) ; } 
@ java.lang.Override protected void onPostExecute ( ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter result ) { mMeetingPagerAdapter = result; mBinding.activityLoading.setVisibility ( View.GONE ) ; try { mBinding.pager.setAdapter ( mMeetingPagerAdapter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mMeetingId ) >= 0 ) { int position = mMeetingPagerAdapter.getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log.v ( TAG, ( ( ( "meeting " + ( mMeetingId ) ) + " is on page " ) + position ) ) ; mBinding.pager.setCurrentItem ( position ) ; } } 
private void restoreStandaloneLinksFromBackup () { try { if ( ( backupStandaloneLinks ) != null ) { aQute.bnd.build.model.conversions.Converter<java.lang.Object, java.lang.String> converter = model.lookupConverter ( bndtools.editor.project.RepositorySelectionPart.PROP_STANDALONE ) ; @java.lang.SuppressWarnings ( value = "unchecked" ) java.util.List<aQute.bnd.build.model.clauses.HeaderClause> restored = ( ( java.util.List<aQute.bnd.build.model.clauses.HeaderClause> ) ( converter.convert ( backupStandaloneLinks ) ) ) ; standaloneLinks = restored; backupStandaloneLinks = null; } else { standaloneLinks = new java.util.LinkedList<> () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService.getSequenceNumber ( IAdministration.SALES_ORDER, company ) ; try { if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String.format ( com.axelor.i18n.I18n.get ( IExceptionMessage.SALES_ORDER_1 ) , company.getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return seq; } 
private static double translatePreference ( int p ) { int maxValue = 9; int minValue = -9; if ( p > maxValue ) p = maxValue; if ( p < minValue ) p = minValue; try { if ( p == 0 ) { return 1; } else if ( p > 0 ) { return p; } else { return 1.0 / ( java.lang.Math.abs ( p ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void closeBrowser () { mBrowserFrame.setBackgroundColor ( mBackgroundColor ) ; performExitCleanUp () ; mBrowserFrame.removeAllViews () ; int size = mTabsManager.size () ; try { mTabsManager.shutdown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mCurrentView = null; for ( int n = 0; n < size; n++ ) { mTabsView.tabRemoved ( 0 ) ; } finish () ; } 
public org.elasticsearch.action.bulk.BulkResponse bulkIndex ( java.lang.String indexName, java.lang.String indexType, java.util.Map<java.lang.String, java.lang.String> idJsonDocMap, boolean refresh ) { org.elasticsearch.action.bulk.BulkRequestBuilder bulkRequestBuilder = client.prepareBulk () .setRefresh ( refresh ) ; try { for ( java.lang.String docId : idJsonDocMap.keySet () ) { bulkRequestBuilder.add ( client.prepareIndex ( indexName, indexType, docId ) .setSource ( idJsonDocMap.get ( docId ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } org.elasticsearch.action.bulk.BulkResponse bulkResponse = bulkRequestBuilder.get () ; return bulkResponse; } 
@ org.junit.Test public void getPluginDirProperty_explicitly_set () throws org.pentaho.di.core.exception.KettleException { final java.lang.String PLUGIN_DIR = "/opt/pentaho"; try { c.set ( MRUtil.PROPERTY_PENTAHO_KETTLE_PLUGINS_DIR, PLUGIN_DIR ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String pluginDirProperty = org.pentaho.hadoop.mapreduce.MRUtil.getPluginDirProperty ( c ) ; org.junit.Assert.assertTrue ( ( "Plugin Directory Property not configured as expected: " + pluginDirProperty ) , pluginDirProperty.endsWith ( PLUGIN_DIR ) ) ; } 
public static net.miginfocom.swing.MigLayout getMigLayout ( java.lang.String layoutConstraints, java.lang.String columnConstraints, java.lang.String rowConstraints ) { java.lang.String finalLayouConstraints = layoutConstraints; try { if ( layoutConstraints != null ) { if ( org.jskat.gui.swing.LayoutFactory.isMacOS () ) { finalLayouConstraints = org.jskat.gui.swing.LayoutFactory.injectMacOSLayoutConstraints ( layoutConstraints ) ; } else if ( layoutConstraints != null ) { finalLayouConstraints = layoutConstraints; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return new net.miginfocom.swing.MigLayout ( finalLayouConstraints, columnConstraints, rowConstraints ) ; } 
public void run () { network.ServerSocketCreator create = new network.ServerSocketCreator () ; java.lang.Thread serverSock = new java.lang.Thread ( create ) ; serverSock.start () ; java.util.Scanner read = new java.util.Scanner ( java.lang.System.in ) ; char input = 'N'; java.lang.System.out.println ( "Would you like to stop the server? Y/N" ) ; try { input = read.nextLine () .charAt ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } while ( input != 'Y' ) { input = read.nextLine () .charAt ( 0 ) ; } read.close () ; create.terminate () ; } 
private void handleForeignKey ( org.talend.mdm.commmon.metadata.MetadataRepository repository, org.talend.mdm.commmon.metadata.ComplexTypeMetadata type, org.talend.mdm.commmon.metadata.annotation.XmlSchemaAnnotationProcessorState state, org.w3c.dom.Element appInfo ) { state.markAsReference () ; java.lang.String path = appInfo.getTextContent () ; org.talend.mdm.commmon.metadata.FieldMetadata fieldMetadata = org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor.getFieldMetadata ( repository, type, appInfo, path, false ) ; state.setReferencedField ( fieldMetadata ) ; try { state.setReferencedType ( new org.talend.mdm.commmon.metadata.SoftTypeRef ( repository, repository.getUserNamespace () , org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor.getTypeName ( type, path ) , true ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false; if ( ( currentLargestArmyPlayer ) != ( -1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer, ( ( -1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex; try { adjustPlayersPoints ( currentLargestArmyPlayer, LargestArmyValue ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public java.util.ArrayList<cg.group4.rewards.collectibles.Collectible> sortCollectibles ( final java.util.HashSet<cg.group4.rewards.collectibles.Collectible> set ) { java.util.ArrayList<cg.group4.rewards.collectibles.Collectible> sortedList = new java.util.ArrayList<cg.group4.rewards.collectibles.Collectible> ( set.size () ) ; try { for ( cg.group4.rewards.collectibles.Collectible c : set ) { if ( sortedList.isEmpty () ) { sortedList.add ( c ) ; } else { sortedList.add ( findPosition ( c, sortedList ) , c ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return sortedList; } 
@ java.lang.Override public boolean apply ( @javax.annotation.Nullable com.gmi.nordborglab.browser.shared.proxy.TraitProxy input ) { if ( input == null ) return true; boolean isNotFound = true; try { for ( com.gmi.nordborglab.browser.shared.proxy.AlleleAssayProxy alleleAssay : input.getObsUnit () .getStock () .getPassport () .getAlleleAssays () ) { if ( alleleAssay.getId () .equals ( selectedAlleleAssay.getId () ) ) { isNotFound = false; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return isNotFound; } 
private void release () { try { com.huhx0015.hxaudio.utils.HXLog.d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG, "RELEASE: release () : Releasing all HXSoundEngine instances..." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int i = 0; for ( int x : new int[numberOfEngines] ) { hxSoundEngines.get ( i ) .release () ; com.huhx0015.hxaudio.utils.HXLog.d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG, ( ( "RELEASE: release () : HXSoundEngine ( " + i ) + " ) is released." ) ) ; i++; } hxSoundEngines = null; } 
@ java.lang.Override public server.main.GameInfo monopoly ( server.main.Monopoly monopoly ) throws server.main.ServerException { server.main.MonopolyCommand monopolyCommand = new server.main.MonopolyCommand ( monopoly ) ; server.main.GameInfo gi = null; try { if ( agent.sendCommand ( monopolyCommand ) ) { gi = server.receiver.AllOfOurInformation.getSingleton () .getGames () .get ( monopoly.getGameId () ) .getGame () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return gi; } 
static src.CircularList<src.Candidate> initList ( int nbCandidates ) { src.CircularList<src.Candidate> list = new src.CircularList () ; try { for ( int i = 1; i <= nbCandidates; i++ ) { list.add ( new src.Candidate ( ( "" + i ) , "" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return list; } 
@ java.lang.Override public void onResponse ( retrofit2.Call<io.caly.calyandroid.model.response.BasicResponse> call, retrofit2.Response<io.caly.calyandroid.model.response.BasicResponse> response ) { io.caly.calyandroid.util.Logger.d ( io.caly.calyandroid.activity.TAG, ( "onResponse code : " + ( response.code () ) ) ) ; io.caly.calyandroid.util.Logger.d ( io.caly.calyandroid.activity.TAG, ( "param" + ( io.caly.calyandroid.util.Util.requestBodyToString ( call.request () .body () ) ) ) ) ; try { switch ( response.code () ) { case 200: break; default: com.crashlytics.android.Crashlytics.logException ( new io.caly.calyandroid.exception.UnExpectedHttpStatusException ( call, response ) ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( ( org.naturenet.NatureNetApplication ) ( getActivity () .getApplication () ) ) .isConnected () ) { main.goToJoinActivity () ; } else { android.widget.Toast.makeText ( main, R.string.no_connection, Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { int offset = content.toLowerCase () .indexOf ( mSearchQuery.toLowerCase () ) ; int line = mTvChapterContent.getLayout () .getLineForOffset ( offset ) ; int coordinateY = mTvChapterContent.getLayout () .getLineTop ( line ) ; try { mSvChapterContent.scrollTo ( 0, ( coordinateY - 400 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { Interpolation interpolation = new Interpolation () ; double second = interpolation.secondOrder () ; double third = interpolation.thirdOrder () ; try { java.lang.System.out.println ( ( "Second order value : " + second ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( ( "Third order value : " + third ) ) ; double error = ( ( double ) ( third ) ) - second; java.lang.System.out.println ( ( "Error : " + error ) ) ; } 
@ java.lang.Override public void start ( javafx.stage.Stage primaryStage ) { setupComponents () ; mainController.start ( primaryStage ) ; try { address.events.EventManager.getInstance () .post ( new address.events.LoadDataRequestEvent ( address.prefs.PrefsManager.getInstance () .getSaveLocation () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } syncManager.startSyncingData ( config.updateInterval, config.simulateUnreliableNetwork ) ; } 
private void startMonitor () { try { if ( mMonitoring.compareAndSet ( false, true ) ) { if ( ( ( mRunningMonitor ) == null ) && ( ( mStateMonitor ) != null ) ) { mRunningMonitor = mThreadPoolManager.scheduleFixedRate ( ThreadType.DECODER, mStateMonitor, 20, java.util.concurrent.TimeUnit.MILLISECONDS ) ; } else { throw new java.lang.RuntimeException ( ( "Channel state monitor's scheduled " + "future pointer was not null" ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void enqueue ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } queue[tail] = item; ++ ( size ) ; try { swap ( tail, randomIndex () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tail = ( ++ ( tail ) ) % ( queue.length ) ; if ( ( size ) > ( ( queue.length ) / 2 ) ) { changeQueueSize ( ( ( queue.length ) * 2 ) ) ; } } 
public java.util.List<com.ryan.pojo.ChunkInfo> fsp () { java.util.List<com.ryan.pojo.ChunkInfo> chunkList = new java.util.ArrayList<> () ; try { markChunkPostition ( buffer, chunkSize ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } while ( true ) { int currentPos = this.chunkId; ( this.chunkId ) ++; if ( currentPos >= ( list.size () ) ) { return chunkList; } else { key.set ( currentPos ) ; chunkList.add ( nextKeyValue ( currentPos ) ) ; } } } 
@ java.lang.Override public cs444.codegen.tiles.InstructionsAndTiming<cs444.codegen.arm.instructions.bases.ArmInstruction> generate ( final cs444.parser.symbols.ast.expressions.ArrayAccessExprSymbol arrayAccess, final cs444.codegen.Platform<cs444.codegen.arm.instructions.bases.ArmInstruction, cs444.codegen.arm.Size> platform ) { final cs444.codegen.tiles.InstructionsAndTiming<cs444.codegen.arm.instructions.bases.ArmInstruction> instructions = super.generate ( arrayAccess, platform ) ; final cs444.codegen.SizeHelper<cs444.codegen.arm.instructions.bases.ArmInstruction, cs444.codegen.arm.Size> sizeHelper = platform.getSizeHelper () ; instructions.add ( new cs444.codegen.arm.instructions.Add ( cs444.codegen.arm.Register.R0, cs444.codegen.arm.Register.R0, cs444.codegen.arm.Register.R8, sizeHelper ) ) ; try { instructions.add ( new cs444.codegen.arm.instructions.Pop ( cs444.codegen.arm.Register.R8 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return instructions; } 
@ org.junit.Test public void test_addYears () throws java.lang.Exception { try { org.junit.Assert.assertEquals ( 20140912, addYears ( 20140912, 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( 20140912, addYears ( 20130912, 1 ) ) ; org.junit.Assert.assertEquals ( 20140912, addYears ( 20150912, ( -1 ) ) ) ; org.junit.Assert.assertEquals ( 20140912, addYears ( 10140912, 1000 ) ) ; org.junit.Assert.assertEquals ( 20160228, addYears ( 20140228, 2 ) ) ; } 
@ org.junit.Test public void loggingResponseFilterDoesntLogWhenSpecifiedMatcherIsNotFulfilled () throws java.lang.Exception { final java.io.StringWriter writer = new java.io.StringWriter () ; final java.io.PrintStream captor = new java.io.PrintStream ( new org.apache.commons.io.output.WriterOutputStream ( writer ) , true ) ; given () .filter ( io.restassured.filter.log.ResponseLoggingFilter.logResponseToIfMatches ( captor, equalTo ( 400 ) ) ) .expect () .body ( "greeting", equalTo ( "Greetings John Doe" ) ) .when () .get ( "/greet?firstName=John&lastName=Doe" ) ; try { org.junit.Assert.assertThat ( writer.toString () , is ( "" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
java.lang.String executeChange ( org.bukkit.entity.Player player, java.lang.String oldGroup, java.lang.String newGroup, java.lang.String world ) { java.lang.String msg; try { if ( changeGroup ( player, oldGroup, newGroup, world ) ) { msg = ( ( ( ( "Successfully changed " + ( player.getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world; } else { msg = ( ( ( ( "Unsuccessfully changed " + ( player.getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world; } } catch ( Exception ex ) { ex.printStackTrace () ; } return msg; } 
private finalproject.queryprocessor.clustering.Cluster findClosestCluster ( finalproject.WeightedDocument d ) { finalproject.queryprocessor.clustering.Cluster closest = null; java.lang.Double closestDistance = java.lang.Double.MAX_VALUE; try { for ( finalproject.queryprocessor.clustering.Cluster cluster : clusterList ) { java.lang.Double distance = cluster.getCentroid ( false ) .getDistanceFromVector ( d.getVector () ) ; if ( distance < closestDistance ) { closestDistance = distance; closest = cluster; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return closest; } 
@ org.junit.BeforeClass @java.lang.SuppressWarnings ( value = "unchecked" ) public static void generateAndCompileEnum () throws java.lang.ClassNotFoundException { java.lang.ClassLoader resultsClassLoader = org.jsonschema2pojo.integration.EnumIT.classSchemaRule.generateAndCompile ( "/schema/enum/typeWithEnumProperty.json", "com.example", config ( "propertyWordDelimiters", "_" ) ) ; org.jsonschema2pojo.integration.EnumIT.parentClass = resultsClassLoader.loadClass ( "com.example.TypeWithEnumProperty" ) ; try { org.jsonschema2pojo.integration.EnumIT.enumClass = ( ( java.lang.Class<java.lang.Enum> ) ( resultsClassLoader.loadClass ( "com.example.TypeWithEnumProperty$EnumProperty" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void test_044 () { framework.common.GalleryCommon.deleteMoreGallery () ; framework.common.GalleryCommon.clickGallery () ; excute ( testcase.Object_ResourceId, testcase.Operation_WaitForExists, "android:id/image", "20000" ) ; excute ( testcase.Object_ResourceId, testcase.Operation_ClickWait, "android:id/image" ) ; try { if ( ! ( ( java.lang.Boolean ) ( excute ( testcase.Object_Text, testcase.Operation_Exists, "蓝牙" ) ) ) ) { excute ( testcase.Object_Device, testcase.Operation_PressBack ) ; excute ( testcase.Object_ResIdIndex, testcase.Operation_ClickWait, "android:id/default_activity_button", "1" ) ; } else { excute ( testcase.Object_Text, testcase.Operation_ClickWait, "蓝牙" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } check ( testcase.Object_Text, testcase.Operation_checkExist, "开启" ) ; } 
public java.util.List<java.lang.String> getCookies () { java.lang.String cookies = headers.get ( "Cookie: " ) ; try { java.lang.System.err.println ( cookies ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<java.lang.String> cookiesList = new java.util.LinkedList<java.lang.String> () ; if ( cookies != null ) { java.util.StringTokenizer tokenizer = new java.util.StringTokenizer ( cookies, "; " ) ; while ( tokenizer.hasMoreTokens () ) { java.lang.String cookie = tokenizer.nextToken () ; cookiesList.add ( cookie ) ; } } return cookiesList; } 
private boolean isReachable ( int eventFrom, int eventTo ) { java.util.Set<java.lang.Integer> outgoingEvents = messages.get ( eventFrom ) ; if ( outgoingEvents == null ) { return false; } try { for ( java.lang.Integer intermediateEvent : outgoingEvents ) { if ( intermediateEvent.equals ( eventTo ) ) { return true; } if ( isReachable ( intermediateEvent, eventTo ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onShow () { android.util.Log.d ( TAG, "onShow IN!" ) ; if ( ( ( mtvFlow ) != null ) && ( isLogin ) ) { currentAccount = com.etoc.weflow.WeFlowApplication.getAppInstance () .getAccountInfo () ; mtvFlow.showNumberWithAnimation ( currentAccount.getFlowcoins () , 1000 ) ; } try { loginView ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void unlock () throws java.lang.IllegalMonitorStateException { java.lang.Thread callingThread = java.lang.Thread.currentThread () ; if ( ! ( isLocked ) ) throw new java.lang.IllegalMonitorStateException () ; if ( ( isLocked ) && ( callingThread != ( lockedBy ) ) ) throw new java.lang.IllegalMonitorStateException () ; lockCount -= 1; try { if ( ( lockCount ) == 0 ) { isLocked = false; lockedBy = null; notify () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void enterInstruction ( net.rapidasm.antlr.RapidASMParser.InstructionContext ctx ) { net.rapidasm.structure.RapidStatementBlock block = this.getCurrentBlock () ; try { this.currentInstructionStatement = new net.rapidasm.structure.RapidInstructionStatement ( block, ctx.ALPHANUM () .getText () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } block.addStatement ( this.currentInstructionStatement ) ; this.resetOperands () ; } 
private static void menuOptions () throws java.io.IOException { java.lang.String entry = io.File_IO.in.nextLine () ; try { switch ( entry ) { case "1": io.File_IO.viewAllContacts () ; break; case "2": io.File_IO.addContact () ; break; case "3": io.File_IO.viewContact () ; break; case "4": io.File_IO.deleteContact () ; break; case "5": io.File_IO.exitProgram () ; default: io.File_IO.exitProgram () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.oracle.truffle.api.dsl.Specialization public java.lang.Object getIndex ( org.jruby.truffle.runtime.core.RubyMatchData matchData, int index ) { try { notDesignedForCompilation () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( index >= ( matchData.getValues () .length ) ) || ( index < 0 ) ) { return getContext () .getCoreLibrary () .getNilObject () ; } else { return matchData.getValues () [index]; } } 
@ java.lang.Override protected void showRationale () { try { new android.support.v7.app.AlertDialog.Builder ( getActivity () ) .setTitle ( "Permission Needed" ) .setMessage ( "Permission rationale here" ) .setNegativeButton ( "Cancel", null ) .setPositiveButton ( "Request Permission", new android.content.DialogInterface.OnClickListener () { @java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { performPermissionRequest () ; } } ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deleteBrackets ( long event_id, boolean deleteUserAdded ) { android.util.Log.v ( "DeleteBracket", ( "Deleting Bracket: " + event_id ) ) ; try { if ( deleteUserAdded ) { deleteBrackets ( ( ( BracketTable.Cols.FK_EVENT_ID ) + " = ?" ) , new java.lang.String[] { "" + event_id } ) ; } else { deleteBrackets ( ( ( ( ( BracketTable.Cols.FK_EVENT_ID ) + " = ? AND " ) + ( BracketTable.Cols.USER_ADDED ) ) + " = ?" ) , new java.lang.String[] { "" + event_id, "0" } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.Calendar mergeDate ( java.util.Date d, java.sql.Time t ) { java.util.Calendar dCal = java.util.Calendar.getInstance () ; dCal.setTime ( d ) ; if ( t == null ) { return dCal; } java.util.Calendar tCal = java.util.Calendar.getInstance () ; tCal.setTime ( t ) ; dCal.set ( java.util.Calendar.HOUR_OF_DAY, tCal.get ( java.util.Calendar.HOUR_OF_DAY ) ) ; try { dCal.set ( java.util.Calendar.MINUTE, tCal.get ( java.util.Calendar.MINUTE ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dCal.set ( java.util.Calendar.SECOND, tCal.get ( java.util.Calendar.SECOND ) ) ; return dCal; } 
static org.eclipse.january.dataset.Dataset santiseDataset ( org.eclipse.january.dataset.IDataset data ) { org.eclipse.january.dataset.Dataset tmp = org.eclipse.january.dataset.DatasetUtils.convertToDataset ( data ) ; try { if ( ( tmp.getStrides () ) != null ) { tmp = tmp.getSlice () ; tmp.setName ( data.getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return tmp; } 
@ java.lang.Override public void invoke ( java.util.List<java.lang.String> args ) { final java.lang.String name = args.get ( 0 ) ; args.remove ( 0 ) ; try { if ( ( name.length () ) > 0 ) { if ( ( context.create ( name ) ) == null ) { java.lang.System.out.println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out.println ( "ERROR: Missing <username>" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario; try { sesionBD.beginTransaction () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.hibernate.Query query = sesionBD.createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query.uniqueResult () ) ) ; sesionBD.getTransaction () .commit () ; return objetoUsuario; } 
private void displayConfirmDialog () { try { if ( ( weatherAlertBuffer ) != null ) { nz.ac.elec.agbase.android_agbase_api.agbase_models.Sensor sensor = nz.ac.elec.agbase.android_agbase_db.AgBaseDatabaseManager.getInstance () .readSensorWithGuid ( weatherAlertBuffer.getDeviceGuid () ) ; nz.ac.elec.agbase.weather_app.AlertSummaryGenerator summaryGenerator = new nz.ac.elec.agbase.weather_app.AlertSummaryGenerator () ; java.lang.String weatherAlertSummary = ( ( sensor.name ) + "\n" ) + ( summaryGenerator.writeAlertSummary ( weatherAlertBuffer ) ) ; nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog dialog = new nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog ( this, weatherAlertBuffer.getName () , weatherAlertSummary ) ; dialog.getDialog () .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean checkMultiblock () { boolean prevState = isMultiblockStructurePresent () ; makeo.gadomancy.common.utils.MultiblockHelper.MultiblockPattern patternToCheck; try { if ( prevState ) { if ( isInMultiblock () ) { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.completeNodeManipulatorMultiblock; } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock; } this.multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper.isMultiblockPresent ( worldObj, xCoord, yCoord, zCoord, patternToCheck ) ; } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock; this.multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper.isMultiblockPresent ( worldObj, xCoord, yCoord, zCoord, patternToCheck ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return isMultiblockStructurePresent () ; } 
public static boolean contains ( java.lang.String target, java.lang.String[] strings, boolean totalMatch ) { try { for ( java.lang.String s : strings ) { s = s.toLowerCase () ; if ( totalMatch ? target.equals ( s ) : target.contains ( s ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public org.avuna.httpd.util.unixsocket.UnixSocket accept () throws java.io.IOException { try { if ( ! ( bound ) ) bind () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String nsfd = org.avuna.httpd.util.CLib.accept ( sockfd ) ; int i = java.lang.Integer.parseInt ( nsfd.substring ( 0, nsfd.indexOf ( "/" ) ) ) ; nsfd = nsfd.substring ( ( ( nsfd.indexOf ( "/" ) ) + 1 ) ) ; org.avuna.httpd.util.unixsocket.UnixSocket us = new org.avuna.httpd.util.unixsocket.UnixSocket ( file, i ) ; return us; } 
public static void addImage ( com.skilltradiez.skilltraderz.Image image ) { if ( image == null ) return; java.util.Set<com.skilltradiez.skilltraderz.Image> images = com.skilltradiez.skilltraderz.MasterController.getUserDB () .getImagez () ; images.add ( image ) ; com.skilltradiez.skilltraderz.MasterController.getUserDB () .getChangeList () .add ( image ) ; try { image.notifyDB () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.skilltradiez.skilltraderz.DatabaseController.save () ; } 
protected void execute () { int index; index = ( org.usfirst.frc.team68.robot.MathUtil.findClosestIndex ( RobotMap.intakePositions, org.usfirst.frc.team68.robot.subsystems.Intake.getIntake () .getIntakeArm () ) ) + 1; if ( index > ( ( RobotMap.intakePositions.length ) - 1 ) ) index = ( RobotMap.intakePositions.length ) - 1; try { org.usfirst.frc.team68.robot.subsystems.Intake.getIntake () .setIntakeArm ( org.usfirst.frc.team68.robot.RobotMap.intakePositions[ ( index++ ) ] ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } isDone = true; } 
@ java.lang.Override protected void configure ( org.springframework.security.config.annotation.web.builders.HttpSecurity http ) throws java.lang.Exception { try { http.authorizeRequests () .anyRequest () .authenticated () .and () .formLogin () .failureUrl ( "/login?error" ) .permitAll () .and () .logout () .permitAll () ; } catch ( Exception ex ) { ex.printStackTrace () ; } http.addFilterBefore ( myFilterSecurityInterceptor, org.springframework.security.web.access.intercept.FilterSecurityInterceptor.class ) ; } 
@ org.junit.Test public void TestGetProblemTests () { javax.ws.rs.core.Response response = test.java.TestDirlididi.server.newRequest ( ( ( "/problem/" + ( test.java.TestDirlididi.PROBLEM_ID ) ) + "/test" ) ) .request () .buildGet () .invoke () ; try { org.junit.Assert.assertEquals ( Response.Status.OK.getStatusCode () , response.getStatus () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.Set<edu.cmu.tetradapp.model.Node> mb ( edu.cmu.tetradapp.model.Graph graph, edu.cmu.tetradapp.model.Node z ) { java.util.Set<edu.cmu.tetradapp.model.Node> mb = new java.util.HashSet ( graph.getAdjacentNodes ( z ) ) ; try { for ( edu.cmu.tetradapp.model.Node c : graph.getChildren ( z ) ) { for ( edu.cmu.tetradapp.model.Node p : graph.getParents ( c ) ) { if ( p != c ) { mb.add ( p ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return mb; } 
@ java.lang.Override public void run () { target.receiveHealing ( output ) ; increaseCurrentTimer () ; try { java.lang.System.out.println ( ( "Renew is ticking! " + ( currentTime ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( currentTime ) >= ( duration ) ) { target.removeEffect ( EffectType.HEALOVERTIME ) ; java.lang.System.out.println ( "Renew expired" ) ; } } 
@ org.junit.Test public void shouldValidateDiagnosisWithPreviousProcedureRequestExtension () throws java.lang.Exception { encounterBundle = org.freeshr.data.EncounterBundleData.encounter ( EncounterBundleData.HEALTH_ID, org.freeshr.utils.FileUtil.asString ( "xmls/encounters/stu3/p98001046534_encounter_with_suspended_procedure_request.xml" ) ) ; validationContext = new org.freeshr.validations.EncounterValidationContext ( encounterBundle, new org.freeshr.utils.FhirFeedUtil () ) ; org.freeshr.application.fhir.EncounterValidationResponse response = validator.validate ( validationContext ) ; try { assertTrue ( response.isSuccessful () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { try { if ( ( view ) == null ) { view = inflater.inflate ( R.layout.fragment_password_recover_step1, null ) ; frag_Email = ( ( com.example.fragments.inputcells.SimpleTextInputCellFragment ) ( getFragmentManager () .findFragmentById ( R.id.input_email ) ) ) ; view.findViewById ( R.id.btn_goNext ) .setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { goNext () ; } } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
@ java.lang.Override public void updateAI ( float tpf ) { this.timePerFrame = tpf; calculateNewVelocity ( tpf ) ; try { velocity.multLocal ( this.brakingFactor ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } switch ( agent.getApplyType () ) { case Spatial: agent.setWorldTranslation ( agent.getPredictedPosition ( tpf ) ) ; rotateAgent ( tpf ) ; break; case BetterCharacterControl: case RigidBody: throw new java.lang.RuntimeException ( ( ( "The ApplyType " + ( agent.getApplyType () ) ) + " isn't supported yet, sorry." ) ) ; case DontApply: break; } } 
public java.util.ArrayList<com.badlogic.gdx.maps.MapObject> checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer, java.lang.String property ) { java.util.ArrayList<com.badlogic.gdx.maps.MapObject> o = new java.util.ArrayList<com.badlogic.gdx.maps.MapObject> () ; com.badlogic.gdx.maps.MapObjects objects = layer.getObjects () ; try { for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object.getProperties () .containsKey ( property ) ) { o.add ( object ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return o; } 
public boolean hasNext () { try { while ( ( ( current ) == null ) || ( ! ( current.hasNext () ) ) ) { if ( rels.hasNext () ) { current = rels.next () .other () .iterator () ; } else { break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( current ) != null ) && ( current.hasNext () ) ; } 
@ java.lang.Override public javax.jms.Session createSession ( boolean transacted, int ackMode ) throws javax.jms.JMSException { org.apache.activemq.jms.pool.PooledSession result = ( ( org.apache.activemq.jms.pool.PooledSession ) ( pool.createSession ( transacted, ackMode ) ) ) ; try { loanedSessions.add ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } result.addSessionEventListener ( this ) ; return result; } 
@ java.lang.Override public void onServicesDiscovered ( final android.bluetooth.BluetoothGatt gatt, final int status ) { try { android.util.Log.e ( "debug", "onServicesDiscovered" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( gatt.getDevice () .getName () .contains ( "SensorTag" ) ) { sensorTag ( gatt ) ; } else { } } 
public void moveUpPackageableElements ( org.eclipse.uml2.uml.PackageableElement packageableElement, java.util.Collection<org.eclipse.uml2.uml.PackageableElement> packageableElementsToMove ) { final org.obeonetwork.dsl.uml2.design.internal.services.MoveUpElementSwitch moveUpElementsSwitch = new org.obeonetwork.dsl.uml2.design.internal.services.MoveUpElementSwitch () ; final java.util.List<org.eclipse.uml2.uml.PackageableElement> packageableElementsInRightOrder = retrieveTheRightOrderForPackageableElement ( packageableElementsToMove ) ; final java.util.Iterator<org.eclipse.uml2.uml.PackageableElement> iterator = packageableElementsInRightOrder.iterator () ; try { while ( iterator.hasNext () ) { final org.eclipse.uml2.uml.Element element = iterator.next () ; moveUpElementsSwitch.moveUpElement ( element ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void checkAvg () throws java.lang.Exception { com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity () ; double[] array = new double[7]; int count = 0; while ( count != 7 ) { array[count] = 10 * count; count++; } double weekly = step.stepAvgWeek ( array ) ; java.lang.System.out.println ( weekly ) ; try { assertTrue ( ( ( weekly == 30.0 ) || ( weekly == 30 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void startElement ( java.lang.String uri, java.lang.String localName, java.lang.String qName, org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { buffer = new java.lang.StringBuilder () ; sinlin.Tag tag = new sinlin.Tag ( qName, attributes ) ; if ( ! ( arrayDeque.isEmpty () ) ) { arrayDeque.peek () .addNodeTag ( tag ) ; } try { arrayDeque.push ( tag ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void createTimerLabel () { this.timer = new com.badlogic.gdx.scenes.scene2d.ui.Label ( "Time till game start: ", this.skin ) ; this.timer.setPosition ( ( ( Gdx.graphics.getWidth () ) * ( nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_WIDTH_MULTIPLIER ) ) , ( ( Gdx.graphics.getHeight () ) * ( nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_HEIGHT_MULTIPLIER ) ) ) ; try { this.stage.addActor ( this.timer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onReceive ( android.content.Context context, android.content.Intent intent ) { android.app.Notification.Builder notificationBuilder = new android.app.Notification.Builder ( context ) .setSmallIcon ( android.R.drawable.stat_sys_warning ) .setContentTitle ( "Novas notícias estão disponíveis!" ) .setContentText ( "Clique aqui para acessar sua lista de notícias e manter-se informado" ) .setVibrate ( mVibratePattern ) ; android.app.NotificationManager mNotificationManager = ( ( android.app.NotificationManager ) ( context.getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; try { mNotificationManager.notify ( 1, notificationBuilder.build () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void compute ( com.hp.hpl.jena.sparql.core.Quad quad ) { try { eu.diachron.qualitymetrics.accessibility.availability.RDFAccessibility.logger.debug ( "Assessing {}", quad.asTriple () .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( quad.getPredicate () .getURI () .equals ( VOID.dataDump.getURI () ) ) { ( totalDataDumps ) ++; } } 
private void collapseViews ( android.view.View fab, final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder.getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) .buildHideAnimator ( fab, false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder.getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) .buildShowAnimator ( fab, false ) ; try { fabAnimator.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++; try { if ( ( appCount ) == 1 ) { com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository.getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository.currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "#store != null && #store.user != null && #store.user.id == authentication.user.id" ) @org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId, @org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService.getStoreByNameAndUser ( store.getName () , store.getAddress () , userId ) ; try { com.softserve.if072.restservice.controller.StoreController.LOGGER.info ( java.lang.String.format ( "Store with name %s was retrieved", store.getName () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return oldStore; } 
public static java.lang.String getShortDomain ( orca.manage.beans.ReservationMng mng ) { java.util.Properties resProps = orca.manage.OrcaConverter.fill ( mng.getResourceProperties () ) ; java.lang.String domain = resProps.getProperty ( orca.controllers.xmlrpc.XmlrpcHandlerHelper.RESOURCE_DOMAIN_VALUE ) ; if ( domain == null ) return null; java.util.regex.Matcher matcher = orca.controllers.xmlrpc.XmlrpcHandlerHelper.pattern.matcher ( domain ) ; try { if ( matcher.find () ) return matcher.group ( 1 ) ; else return null; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v.x () , v.y () ) ; try { trans.deltaTransform ( jp, jp ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new app2dpcimpl.geometry.PVD2DImpl ( jp.x, jp.y ) ; } 
protected remixlab.proscene.JSONObject toJSONObject ( remixlab.proscene.Frame frame ) { remixlab.proscene.JSONObject jsonFrame = new remixlab.proscene.JSONObject () ; jsonFrame.setFloat ( "magnitude", frame.magnitude () ) ; jsonFrame.setJSONArray ( "position", toJSONArray ( frame.position () ) ) ; try { jsonFrame.setJSONArray ( "orientation", toJSONArray ( frame.orientation () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return jsonFrame; } 
public java.util.List<com.order.www.domain.db.OrderItemDB> listAllDesignedItem () { java.util.List<com.order.www.dao.util.SearchFilter> filters = com.google.common.collect.Lists.newArrayList () ; try { filters.add ( new com.order.www.dao.util.SearchFilter ( "asinInfo", SearchFilter.Operator.ISNOTNULL, "" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } filters.add ( new com.order.www.dao.util.SearchFilter ( "asinInfo.status", SearchFilter.Operator.EQ, 1 ) ) ; org.springframework.data.jpa.domain.Specification<com.order.www.domain.db.OrderItemDB> spec = com.order.www.dao.util.DynamicSpecifications.bySearchFilter ( filters, com.order.www.domain.db.OrderItemDB.class ) ; return orderItemDao.findAll ( spec ) ; } 
private void addShowLink ( java.lang.String url, java.util.List<net.myonlinestuff.torrentdl.domain.ShowLink> showLinks, org.jsoup.select.Elements el ) { try { if ( ( el != null ) && ( ! ( el.isEmpty () ) ) ) { net.myonlinestuff.torrentdl.service.Parser.LOGGER.info ( "element found: {}", el.size () ) ; for ( final org.jsoup.nodes.Element element : el ) { showLinks.add ( new net.myonlinestuff.torrentdl.domain.ShowLink ( element.text () , element.attr ( "href" ) , url ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void parseAdd ( java.lang.String command ) throws java.lang.Exception { CO.setCommandType ( parser.Parser.ADD_INDEX ) ; parser.CommandParser AP = new parser.AddParser () ; command = command.replaceFirst ( Constants.REGEX_ADD, "" ) .trim () ; try { TO = AP.process ( command ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } TO.setTaskId ( _taskId ) ; setCategory () ; CO.setTaskObject ( TO ) ; AP.reset () ; } 
public void deleteOldMarker ( com.google.android.gms.maps.model.Marker marker ) { try { if ( ( markers.get ( viewHolder ) ) == null ) markers.put ( viewHolder, marker ) ; else { markers.get ( viewHolder ) .remove () ; markers.put ( viewHolder, marker ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onNavigationDrawerItemSelected ( int position ) { if ( ! ( auth ) ) return; android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; try { if ( position == 0 ) { fragmentManager.beginTransaction () .replace ( R.id.container, tw.edu.ncu.cc.course.ScheduleFragment.newInstance ( this ) ) .commit () ; } else { fragmentManager.beginTransaction () .replace ( R.id.container, tw.edu.ncu.cc.course.MainActivity.PlaceholderFragment.newInstance ( ( position + 1 ) ) ) .commit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void handlePreviousBtnClick () { -- ( currentPosition ) ; try { if ( ( currentPosition ) < 0 ) { currentPosition = 0; } else { if ( raiseToastIfNetworkNotAvailable () ) { return; } if ( ( playService ) != null ) { playService.setSeekPosition ( 0 ) ; playService.playSong ( currentPosition ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String setupDstByDirectory ( java.lang.String directory ) { int fileNameIndex = VCF_FILE_PATH.lastIndexOf ( "/" ) ; try { if ( fileNameIndex == ( -1 ) ) { fileNameIndex = VCF_FILE_PATH.lastIndexOf ( "\\" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( fileNameIndex == ( -1 ) ) { fileNameIndex = 0; } java.lang.String output = directory + ( VCF_FILE_PATH.substring ( fileNameIndex ) ) ; return ( output.substring ( 0, ( ( output.length () ) - 3 ) ) ) + "csv"; } 
public void save ( ru.cdek.example.model.Entity entity ) throws org.springframework.dao.DataAccessException { org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource paramSource = new org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource ( entity ) ; java.lang.Number id = this.insertEntity.executeAndReturnKey ( paramSource ) ; try { ru.cdek.example.repository.jdbc.JdbcEntityRepositoryImpl.logger.info ( java.lang.String.format ( "Added entity with id - %d ( name: %s ) ", id.intValue () , entity.getName () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; myCouchBase = new com.github.dev.williamg.simplecouchbaseapp.MyCouchBase ( this ) ; editText = ( ( android.widget.EditText ) ( findViewById ( R.id.main_text ) ) ) ; recyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.main_recycler_view ) ) ) ; try { recyclerView.setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( this ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } recyclerView.setAdapter ( new com.github.dev.williamg.simplecouchbaseapp.DocumentAdapter ( myCouchBase.getAllDocumentsId () , this ) ) ; } 
@ java.lang.Override public void onViewCreated ( android.view.View view, android.os.Bundle savedInstanceState ) { mViewPager = ( ( android.support.v4.view.ViewPager ) ( view.findViewById ( R.id.viewpager ) ) ) ; mPageAdapter = new com.av.dev.pyurluxuryandroid.Fragment.LifestyleManager.RequestLifestyleFragment.SectionsPagerAdapter () ; mViewPager.setAdapter ( mPageAdapter ) ; mViewPager.setCurrentItem ( 0 ) ; mSlidingTabLayout = ( ( com.av.dev.pyurluxuryandroid.View.SlidingTabLayout ) ( view.findViewById ( R.id.sliding_tabs ) ) ) ; try { mSlidingTabLayout.setRowCount ( 2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mSlidingTabLayout.setViewPager ( mViewPager ) ; mSlidingTabLayout.setOnPageChangeListener ( pageListener ) ; } 
@ org.springframework.web.bind.annotation.CrossOrigin ( origins = coursemanager.configuration.Configuration.CORS_DOMAIN ) @org.springframework.web.bind.annotation.RequestMapping ( value = "/count", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.HashMap<java.lang.String, java.lang.Object> count () { coursemanager.services.CourseService courseService = new coursemanager.services.CourseService () ; java.lang.Integer numberOfCourses = courseService.getNumberOfCourses () ; java.util.HashMap<java.lang.String, java.lang.Object> response = new java.util.HashMap<> () ; response.put ( "pageSize", CourseService.PAGE_SIZE ) ; response.put ( "numberOfCourses", numberOfCourses ) ; try { response.put ( "numberOfPages", ( ( int ) ( java.lang.Math.ceil ( ( ( 1.0 * numberOfCourses ) / ( coursemanager.services.CourseService.PAGE_SIZE ) ) ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return response; } 
public boolean apply ( java.lang.String[] t ) { if ( ( this.nextCommand ) == null ) return this.hasBeenAnswered = false; try { if ( this.hasBeenAnswered = this.nextCommand.apply ( t ) ) this.setChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.notifyObservers ( new java.lang.Object[] { this.nextCommand.getClass () , t } ) ; return hasBeenAnswered; } 
public java.lang.String[] getNames () { java.lang.String[] names = new java.lang.String[3]; try { for ( int i = 0; i < 3; i++ ) { names[i] = this.playerFields[i].getText () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return names; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_first ) ; try { mBookRide = ( ( android.widget.Button ) ( findViewById ( R.id.book_ride ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mRegister = ( ( android.widget.Button ) ( findViewById ( R.id.register_now ) ) ) ; mBookRide.setOnClickListener ( this ) ; mRegister.setOnClickListener ( this ) ; } 
public code.dao.hibernatedao.Race findRaceUseInnerJOINWithTrainAndTrainTypes ( int raceID ) { org.hibernate.Query query = getCurrentSession () .createQuery ( code.dao.hibernatedao.RaceHibernateDao.GET_RACE_WITH_TRAIN_AND_TRAIN_TYPE_USING_ID_HQL ) ; try { query.setInteger ( "id", raceID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } code.dao.hibernatedao.Race race = ( ( code.dao.hibernatedao.Race ) ( query.uniqueResult () ) ) ; org.hibernate.Hibernate.initialize ( race.getTickets () ) ; org.hibernate.Hibernate.initialize ( race ) ; return race; } 
@ javafx.fxml.FXML public void showExercise () throws java.io.IOException, javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException { try { if ( ( exercisesListView.getSelectionModel () .getSelectedItem () ) != null ) { selection.exercise = new trainer.models.Exercise ( selection.catalog, exercisesListView.getSelectionModel () .getSelectedItem () .toString () ) ; exerciseTextArea.setText ( selection.exercise.description ) ; trainer.App.getInstance () .controllers.put ( "trainer", trainer.gui.TrainerController.createWithName ( "trainer" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void dispose () { try { for ( com.badlogic.ashley.core.Entity entity : renderQueue ) { com.spaceproject.components.TextureComponent tex = Mappers.texture.get ( entity ) ; if ( ( tex.texture ) != null ) tex.texture.dispose () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.spaceproject.SpaceBackgroundTile tile : com.spaceproject.systems.LoadingSystem.getTiles () ) { tile.tex.dispose () ; } } 
@ java.lang.Override public void onBackPressed () { android.support.v7.widget.SearchView searchView = ( ( android.support.v7.widget.SearchView ) ( android.support.v4.view.MenuItemCompat.getActionView ( menu.findItem ( R.id.action_search ) ) ) ) ; try { if ( ! ( searchView.isIconified () ) ) { searchView.setIconified ( true ) ; } else if ( backPressed ) { super.onBackPressed () ; } else { backPressed = true; android.widget.Toast.makeText ( this, "Press again to leave the app", Toast.LENGTH_LONG ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void link ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks, newart ) ; int index = 0; try { while ( index < ( mostsimilar.size () ) ) { newart.buildLink ( ( ( internetz.Artifact ) ( mostsimilar.get ( index ) ) ) ) ; index++; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void create ( hospital.models.Patient entity ) { hospital.repositories.concrete.Repository<hospital.models.Address> addressRepository = new hospital.repositories.concrete.Repository<hospital.models.Address> ( hospital.models.Address.class ) ; try { addressRepository.add ( entity.getAddress () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } addressRepository.close () ; hospital.repositories.concrete.Repository<hospital.models.Patient> patientRepository = new hospital.repositories.concrete.Repository<hospital.models.Patient> ( hospital.models.Patient.class ) ; patientRepository.add ( entity ) ; patientRepository.close () ; } 
public static void writeDatasetToFile ( java.lang.String fileName, int n ) throws java.io.IOException { java.io.File file = new java.io.File ( fileName ) ; java.io.FileOutputStream fos = new java.io.FileOutputStream ( file ) ; java.io.BufferedWriter bw = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( fos ) ) ; for ( int i = 1; i <= n; i++ ) { bw.write ( generator.PuzzleGenerator.encode ( generator.PuzzleGenerator.generate () ) ) ; bw.newLine () ; } try { bw.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testMoveCutOff () { java.lang.String boardStr = "x x x 0 1\n" + ( ( ( "x x x 0 1h\n" + "x x x 0h x\n" ) + "x x x x x\n" ) + "x x x x x" ) ; Board b = Board.fromString ( boardStr ) ; Driver d = new VoronoiMinMax () ; Direction move = d.move ( b ) ; assertEquals ( Direction.RIGHT, move ) ; try { b.move ( b.US, b.tileFrom ( b.ourTile () , move ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent e ) { try { if ( ! ( isGameover ) ) { int row = GUI.getLoc ( ( ( int ) ( e.getY () ) ) ) ; int col = GUI.getLoc ( ( ( int ) ( e.getX () ) ) ) ; board.addPiece ( row, col ) ; update () ; if ( board.checkWin () ) { isGameover = true; endGame () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addFragment ( android.support.v4.app.Fragment fragment ) { android.transition.Transition changeTransform = android.transition.TransitionInflater.from ( this ) .inflateTransition ( R.transition.change_image_transform ) ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () .beginTransaction () ; ft.replace ( R.id.activity_container, fragment, fragment.getClass () .getSimpleName () ) ; ft.addToBackStack ( fragment.getTag () ) ; ft.commit () ; try { android.util.Log.d ( com.vladscaesteanu.licenta.MainActivity.TAG, ( "Fragment no is" + ( fragmentManager.getBackStackEntryCount () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; try { if ( ( requestCode == ( rray.me.androidresume.BasicInfoEditActivity.REQ_CODE_PICK_IMAGE ) ) && ( resultCode == ( android.app.Activity.RESULT_OK ) ) ) { android.net.Uri imageUri = data.getData () ; if ( imageUri != null ) { showImage ( imageUri ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void refreshList () { try { listView = ( ( android.widget.ListView ) ( findViewById ( R.id.mushroom_list_view ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bazinac.aplikacenahouby.db.AplikaceNaHoubyDBHelper database = new bazinac.aplikacenahouby.db.AplikaceNaHoubyDBHelper ( getApplicationContext () ) ; bazinac.aplikacenahouby.db.MushroomHelper mush = new bazinac.aplikacenahouby.db.MushroomHelper () ; mushList = mush.getMushrooms ( database.getReadableDatabase () , foundMushroomIDs, activeMinorSignValues, true ) ; atlasAdapter = new bazinac.aplikacenahouby.adapters.MushroomListAdapter ( this, mushList ) ; listView.setAdapter ( atlasAdapter ) ; } 
@ java.lang.Override protected int intSpeed ( float fSpeed ) { int speed = super.intSpeed ( fSpeed ) ; if ( speed <= 1 ) { return speed; } try { switch ( this.getSpeedStepMode () ) { case jmri.DccThrottle.SpeedStepMode28: case jmri.DccThrottle.SpeedStepMode28Mot: return ( ( int ) ( ( fSpeed * 28 ) * 4 ) ) + 12; case jmri.DccThrottle.SpeedStepMode14: return ( ( int ) ( ( fSpeed * 14 ) * 8 ) ) + 8; } } catch ( Exception ex ) { ex.printStackTrace () ; } return speed; } 
@ java.lang.Override public int getElementCount ( final java.lang.String elementType ) { if ( elementType == null ) { throw new java.lang.NullPointerException ( "elementType must not be null." ) ; } try { if ( ! ( wrappedMap.containsKey ( elementType ) ) ) { return reader.getElementCount ( elementType ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } org.smurn.jply.ElementType unwrapped = wrappedMap.get ( elementType ) .getUnwrappedType () ; return reader.getElementCount ( unwrapped.getName () ) ; } 
@ java.lang.Override public boolean setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving, org.bukkit.event.entity.EntityTargetEvent.TargetReason reason, boolean fireEvent ) { try { if ( ( ( this.target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this.target.isAlive () ) ) { super.setGoalTarget ( this.target, EntityTargetEvent.TargetReason.CUSTOM, false ) ; } else { super.setGoalTarget ( null, EntityTargetEvent.TargetReason.CUSTOM, false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void close () { GUI.status = false; GUI.db_url = ""; GUI.database = ""; GUI.username = ""; GUI.password = ""; GUI.stmt = null; GUI.con = null; analyster.dispose () ; this.dispose () ; try { java.lang.System.exit ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkUsername ( com.musicforall.model.User user ) { java.lang.String searchUsername; final java.lang.String username = user.getUsername () ; searchUsername = username; int i = 0; while ( ( userService.getIdByUsername ( searchUsername ) ) != null ) { i++; searchUsername = username + i; } try { if ( i > 0 ) { user.setUsername ( searchUsername ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGetTrasactionId () throws java.lang.Exception { org.p2p.lending.club.api.transaction.impl.Transaction transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert.assertTrue ( ( ( transaction.getTrasactionId () ) >= 1 ) ) ; transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; try { org.junit.Assert.assertTrue ( ( ( transaction.getTrasactionId () ) >= 2 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert.assertTrue ( ( ( transaction.getTrasactionId () ) >= 3 ) ) ; } 
public boolean isEveryCharacterUniqueUsingHistogram () { int[] asciiCount = new int[128]; try { for ( int i = 0; i < ( string.length () ) ; i++ ) { ( asciiCount[string.charAt ( i ) ] ) ++; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < ( asciiCount.length ) ; i++ ) { if ( ( asciiCount[i] ) > 1 ) { return false; } } return true; } 
@ java.lang.Override public void update ( com.flurnamenpuzzle.generator.Observable observable ) { com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel model = ( ( com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel ) ( observable ) ) ; int percentage = model.getPercentageGenerated () ; java.lang.String statusMessage = model.getStatusMessage () ; if ( statusMessage != null ) { this.progressLabel.setText ( statusMessage ) ; } try { java.lang.System.out.println ( statusMessage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.progressBar.setValue ( percentage ) ; this.progressBar.setString ( ( ( progressBar.getValue () ) + "%" ) ) ; } 
@ java.lang.Override public bee.creative.function.Array section ( final int offset, final int length ) throws java.lang.IllegalArgumentException { final int offset2 = offset - ( this.length () ) ; final int length2 = offset2 + length; if ( offset2 >= 0 ) return array.section ( offset2, length ) ; try { if ( length2 <= 0 ) return super.section ( offset, length ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return super.section ( offset, ( -offset2 ) ) .concat ( array.section ( 0, length2 ) ) ; } 
@ com.squareup.otto.Subscribe public void onInternalLinkClicked ( com.ayuget.redface.ui.event.InternalLinkClickedEvent event ) { com.ayuget.redface.ui.fragment.TopicFragment topicFragment = ( ( com.ayuget.redface.ui.fragment.TopicFragment ) ( getSupportFragmentManager () .findFragmentByTag ( com.ayuget.redface.ui.activity.TopicsActivity.TOPIC_FRAGMENT_TAG ) ) ) ; try { if ( ( ( topicFragment != null ) && ( ( event.getTopic () .id () ) == ( topicFragment.getTopic () .id () ) ) ) && ( ( event.getPage () ) == ( topicFragment.getCurrentPage () ) ) ) { topicFragment.setCurrentPagePosition ( event.getPagePosition () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void play () { setup () ; try { while ( ( playerList.size () ) > 1 ) { for ( int i = 0; i < ( playerList.size () ) ; i++ ) { playerList.get ( i ) .turn ( board, this ) ; printBoard () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void reg ( net.minecraft.block.Block block, int meta, java.lang.String file ) { net.minecraft.item.Item item = net.minecraft.item.Item.getItemFromBlock ( block ) ; net.minecraftforge.client.model.ModelLoader.setCustomModelResourceLocation ( item, meta, new net.minecraft.client.resources.model.ModelResourceLocation ( ( ( ( io.github.zaphodious.essentialsorcery.core.Reference.MODID ) + ":" ) + file ) , "inventory" ) ) ; try { java.lang.System.out.println ( ( ( ( ( "Ran " + ( io.github.zaphodious.essentialsorcery.core.Reference.MODID ) ) + ":" ) + ( net.minecraft.item.Item.getItemFromBlock ( block ) .getUnlocalizedName () ) ) + " through the render reg." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void signOut ( android.content.Context context ) { new com.example.tberroa.girodicerapp.data.OperatorInfo () .clear ( context ) ; new com.example.tberroa.girodicerapp.data.CurrentInspectionInfo () .clearAll ( context ) ; try { new com.example.tberroa.girodicerapp.database.LocalDB () .clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } new com.example.tberroa.girodicerapp.data.UserInfo () .setUserStatus ( context, false ) ; context.startActivity ( new android.content.Intent ( context, com.example.tberroa.girodicerapp.activities.SignInActivity.class ) ) ; if ( context instanceof android.app.Activity ) { ( ( android.app.Activity ) ( context ) ) .finish () ; } } 
private void handleCancelRequest ( android.javax.sip.message.Request request, android.javax.sip.ServerTransaction serverTransaction ) { android.javax.sip.header.CallIdHeader callIdHeader = ( ( android.javax.sip.header.CallIdHeader ) ( request.getHeader ( CallIdHeader.NAME ) ) ) ; java.lang.String callId = callIdHeader.getCallId () ; try { if ( ( doSendResponse ( Response.OK, RequestMethod.CANCEL, request, serverTransaction ) ) != null ) { bus.post ( new org.github.sipuada.events.CallInvitationCanceled ( ( "Call invitation canceled by the caller " + "or callee took longer than roughly 30 seconds to answer." ) , callId, true ) ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new org.github.sipuada.exceptions.RequestCouldNotBeAddressed () ; } 
@ org.junit.Test public void computeSimpleGraphTest () throws java.lang.Exception { algorithms.river_issue.FordFulkerson fordTestGraph = new algorithms.river_issue.FordFulkerson () ; try { fordTestGraph.init ( testGraph ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fordTestGraph.setSourceAndTarget ( testGraph.getNode ( "S" ) , testGraph.getNode ( "T" ) ) ; fordTestGraph.compute () ; org.junit.Assert.assertEquals ( cutFromTestGraph.toString () , fordTestGraph.maxFlowMinCut.toString () ) ; } 
public java.lang.String toString () { java.lang.String returnString = ( ( "Lijn: startpunt: " + ( this.getStartPunt () ) ) + " - eindpunt: " ) + ( this.getEindPunt () ) ; try { returnString = ( returnString + "\n" ) + ( omhullende.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return returnString; } 
@ java.lang.Override public boolean addUniversalDistillationRecipe ( net.minecraftforge.fluids.FluidStack aInput, net.minecraftforge.fluids.FluidStack[] aOutputs, net.minecraft.item.ItemStack aOutput2, int aDuration, int aEUt ) { try { for ( int i = 0; i < ( java.lang.Math.min ( aOutputs.length, 11 ) ) ; i++ ) { addDistilleryRecipe ( ( i + 1 ) , aInput, aOutputs[i], ( aDuration * 2 ) , ( aEUt / 4 ) , false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return addDistillationTowerRecipe ( aInput, aOutputs, aOutput2, aDuration, aEUt ) ; } 
public org.opendaylight.sxp.util.time.ManagedTimer setTimer ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType timerType, int period ) throws org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextDiscrepancyException, org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextNotFoundException, org.opendaylight.sxp.util.exception.unknown.UnknownTimerTypeException { io.netty.channel.ChannelHandlerContext ctx = null; try { if ( isModeBoth () ) { if ( timerType == ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType.KeepAliveTimer ) ) { ctx = getChannelHandlerContext ( org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.SpeakerContext ) ; } else { ctx = getChannelHandlerContext ( org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.ListenerContext ) ; } } else { ctx = getChannelHandlerContext () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } org.opendaylight.sxp.util.time.ManagedTimer timer = org.opendaylight.sxp.util.time.connection.TimerFactory.createTimer ( timerType, period, owner, this, ctx ) ; return this.setTimer ( timerType, timer ) ; } 
int appExists ( java.lang.String name ) { try { for ( int i = 0; ( statArray[i] ) != null; ++i ) { if ( statArray[i].packageName.equals ( name ) ) { android.util.Log.d ( "Crash site", java.lang.String.valueOf ( i ) ) ; return i; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return -1; } 
@ java.lang.Override public void stop () { org.webrtc.Logging.d ( org.webrtc.Camera1Session.TAG, ( "Stop camera1 session on camera " + ( cameraId ) ) ) ; checkIsOnCameraThread () ; try { if ( ( state ) != ( org.webrtc.Camera1Session.SessionState.STOPPED ) ) { final long stopStartTime = java.lang.System.nanoTime () ; stopInternal () ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS.toMillis ( ( ( java.lang.System.nanoTime () ) - stopStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram.addSample ( stopTimeMs ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void connected () { appContext.setSIOService ( sioService ) ; loadPersistenceLayer ( true ) ; appContext.getMainBus () .post ( new ch.fork.AdHocRailway.ui.UpdateMainTitleEvent ( ( ( ( ( AdHocRailway.TITLE ) + " [" ) + url ) + "]" ) ) ) ; try { appContext.getMainBus () .post ( new ch.fork.AdHocRailway.ui.CommandLogEvent ( ( "Successfully connected to AdHoc-Server: " + url ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override @net.openhft.chronicle.core.annotation.ForceInline public void write ( long offsetInRDO, @org.jetbrains.annotations.NotNull java.nio.ByteBuffer bytes, int offset, int length ) { try { if ( bytes.isDirect () ) { memory.copyMemory ( ( ( ( ( sun.nio.ch.DirectBuffer ) ( bytes ) ) .address () ) + offset ) , ( ( address ) + ( translate ( offsetInRDO ) ) ) , length ) ; } else { memory.copyMemory ( bytes.array () , offset, ( ( address ) + ( translate ( offsetInRDO ) ) ) , length ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.bukkit.entity.Item dropItem ( org.bukkit.Location location, org.bukkit.inventory.ItemStack item ) { com.google.common.base.Optional<org.bukkit.entity.Entity> created = getHandle () .createEntity ( EntityTypes.DROPPED_ITEM, blue.lapis.pore.converter.vector.VectorConverter.create3d ( location ) ) ; try { if ( ! ( created.isPresent () ) ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } assert created instanceof org.bukkit.entity.Item; org.bukkit.entity.Item drop = ( ( org.bukkit.entity.Item ) ( created ) ) ; throw new org.apache.commons.lang.NotImplementedException () ; } 
private boolean executeTIMEZONE_LIST () { int listIndex = getListArg ( com.rfo.basic.Run.list_is_string ) ; if ( listIndex < 0 ) return false; try { if ( ! ( checkEOL () ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.ArrayList<java.lang.String> theList = new java.util.ArrayList<java.lang.String> () ; com.rfo.basic.Run.theLists.set ( listIndex, theList ) ; for ( java.lang.String zone : java.util.TimeZone.getAvailableIDs () ) { theList.add ( zone ) ; } return true; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( MainActivity.schedule.add ( ( ( dayWeek ) + 1 ) , from_hours.getValue () , from_minutes.getValue () , to_hours.getValue () , to_minutes.getValue () ) ) { closeDialog () ; } else { android.widget.Toast temp = android.widget.Toast.makeText ( c.getBaseContext () , "This interval is incorrect!", Toast.LENGTH_SHORT ) ; temp.show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference, java.lang.Object newValue ) { try { if ( preference.getKey () .equals ( getResources () .getString ( R.string.key_mov_speed ) ) ) { speedMultiTouch = calculateSpeedMultiTouch ( ( ( int ) ( newValue ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { if ( debug ) java.lang.System.out.println ( ( "Paikka 1 0 " + ( whichmark () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ChangeButton ( buttonba ) ; buttonba.setEnabled ( false ) ; viimeisinSiirto[1][0] = whichmark () ; ( buttoncount ) ++; } 
@ java.lang.Override public void onCreate () { net.nashlegend.sourcewall.App.application = this; if ( net.nashlegend.sourcewall.util.PrefsUtil.readBoolean ( Consts.Key_Is_Night_Mode, false ) ) { android.support.v7.app.AppCompatDelegate.setDefaultNightMode ( AppCompatDelegate.MODE_NIGHT_YES ) ; } else { android.support.v7.app.AppCompatDelegate.setDefaultNightMode ( AppCompatDelegate.MODE_NIGHT_NO ) ; } super.onCreate () ; try { net.nashlegend.sourcewall.App.initImageLoader ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void stateChanged ( javax.swing.event.ChangeEvent e ) { try { if ( alwaysCheckBox.isSelected () ) { startDateTxtField.setText ( "ALWAYS" ) ; periodTxtField.setText ( "ALWAYS" ) ; periodTxtField.setEnabled ( false ) ; startDateTxtField.setEnabled ( false ) ; } else { periodTxtField.setEnabled ( true ) ; startDateTxtField.setEnabled ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void putObjectWrapper$$PHOSPHORTAGGED ( sun.misc.Unsafe unsafe, java.lang.Object o, int key_tag, long key, java.lang.Object val, java.lang.Class c ) { try { if ( ( ( c != null ) && ( val != null ) ) && ( ! ( c.isAssignableFrom ( val.getClass () ) ) ) ) { val = ( ( edu.columbia.cs.psl.phosphor.instrumenter.LazyArrayIntTags ) ( val ) ) .getVal () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } unsafe.putObject ( o, key, val ) ; } 
private static long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass, java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName.hashCode () : 0; try { for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass.getProperties () .values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property.getName () .hashCode () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return serialVersionUID; } 
@ java.lang.Override public void onScrolled ( android.support.v7.widget.RecyclerView recyclerView, int dx, int dy ) { visibleItemCount = manager.getChildCount () ; totalItemCount = manager.getItemCount () ; try { pastVisiblesItems = manager.findFirstVisibleItemPosition () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( loading ) ) { if ( ( ( visibleItemCount ) + ( pastVisiblesItems ) ) >= ( totalItemCount ) ) { ( pageIndex ) ++; if ( ( type ) == 0 ) { getBooks ( pageIndex ) ; } } } } 
public java.util.List<com.mymusic.mymusicapp.model.SongDetails> listSongDetails ( java.lang.String text ) { java.util.List<com.mymusic.mymusicapp.model.SongDetails> values = new java.util.ArrayList<com.mymusic.mymusicapp.model.SongDetails> () ; try { if ( text.equals ( "" ) ) { values = com.mymusic.mymusicapp.model.SongDetails.listAll ( com.mymusic.mymusicapp.model.SongDetails.class ) ; } else { values = com.mymusic.mymusicapp.model.SongDetails.find ( com.mymusic.mymusicapp.model.SongDetails.class, "title = ? or artist = ?", text, text ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return values; } 
public static int getUnScheuledHours ( Office offices ) { int hoursNotScheduled = 0; try { for ( int i = 1; i < 37; i++ ) { for ( int j = 0; j < 7; j++ ) { if ( ( offices.officeReq.get ( i ) .get ( j ) ) >= 0 ) { hoursNotScheduled += offices.officeReq.get ( i ) .get ( j ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return hoursNotScheduled / 2; } 
@ java.lang.Override public void onCreate ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( savedInstanceState != null ) && ( ! ( defaults ) ) ) && ( ( bottomBar ) != null ) ) { if ( savedInstanceState.getBoolean ( rs.ftn.pma.tourismobile.fragments.BOTTOM_BAR_SHOWING ) ) { bottomBar.show () ; } else { bottomBar.hide () ; } firstTimeLoading = savedInstanceState.getBoolean ( rs.ftn.pma.tourismobile.fragments.FIRST_TIME_LOADING ) ; } } 
private void handleDeletePlaylistEvent ( android.net.Uri pUri ) { com.dreamdigitizers.megamelodies.views.interfaces.IViewPlaylists view = this.getView () ; try { if ( view != null ) { java.lang.String id = pUri.getQueryParameter ( "playlistId" ) ; java.util.HashMap transactions = this.mTransactionActions.get ( ServicePlayback.CUSTOM_ACTION__DELETE_PLAYLIST ) ; android.support.v4.media.MediaBrowserCompat.MediaItem mediaItem = ( ( android.support.v4.media.MediaBrowserCompat.MediaItem ) ( transactions.get ( id ) ) ) ; transactions.remove ( id ) ; view.removeMediaItem ( mediaItem ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBackPressed () { int count = ( getFragmentManager () .getBackStackEntryCount () ) - 1; int currentView = viewStack.pop () ; try { if ( count == 0 ) { super.onBackPressed () ; } else { getFragmentManager () .popBackStack () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String title = fragmentMap.get ( currentView ) .getTitleString () ; setTitle ( title ) ; } 
public java.lang.String removeInitialFinalWhites ( java.lang.String text ) { java.lang.String textWOWhites = text; try { while ( ( textWOWhites.startsWith ( " " ) ) || ( textWOWhites.startsWith ( "\t" ) ) ) textWOWhites = textWOWhites.substring ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } while ( ( textWOWhites.endsWith ( " " ) ) || ( textWOWhites.endsWith ( "\t" ) ) ) textWOWhites = textWOWhites.substring ( 0, ( ( textWOWhites.length () ) - 1 ) ) ; return textWOWhites; } 
@ javax.ws.rs.Path ( value = "/{idAnnotatedCollaborativeContentAnalysis:.*}" ) @javax.ws.rs.GET public java.util.Collection<eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis> getCollaborativeContentVerifications ( @javax.ws.rs.PathParam ( value = "idAnnotatedCollaborativeContentAnalysis" ) java.lang.String contentID ) throws eu.learnpad.exception.LpRestException { try { if ( eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.map.containsKey ( java.lang.Integer.valueOf ( contentID ) ) ) { eu.learnpad.ca.rest.data.collaborative.CollaborativeContentAnalysis caa = eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.map.get ( java.lang.Integer.valueOf ( contentID ) ) ; eu.learnpad.ca.correctness.CorrectnessAnalysis corrana = new eu.learnpad.ca.correctness.CorrectnessAnalysis ( new org.languagetool.language.BritishEnglish () ) ; eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis acca = corrana.check ( caa ) ; java.util.ArrayList<eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis> ar = new java.util.ArrayList<eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis> () ; ar.add ( acca ) ; return ar; } else return null; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected java.util.List<com.dotmarketing.business.Permission> getInheritablePermissions ( com.dotmarketing.business.Permissionable permissionable, boolean bitPermissions ) throws com.dotmarketing.exception.DotDataException { java.util.List<com.dotmarketing.business.Permission> bitPermissionsList = permissionCache.getPermissionsFromCache ( permissionable.getPermissionId () ) ; if ( bitPermissionsList == null ) { bitPermissionsList = loadPermissions ( permissionable ) ; } try { if ( !bitPermissions ) return convertToNonBitPermissions ( filterOnlyInheritablePermissions ( bitPermissionsList, permissionable.getPermissionId () ) ) ; else return filterOnlyInheritablePermissions ( bitPermissionsList, permissionable.getPermissionId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () throws java.lang.Exception { com.google.common.base.Preconditions.checkState ( ( ( this.state.get () ) == ( State.INITED ) ) , ( "Can only run while in INITED state. Current: " + ( this.state ) ) ) ; this.state.set ( State.RUNNING ) ; try { processor.run ( runInputMap, runOutputMap ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void onEntityUpdate ( com.mumfrey.liteloader.transformers.event.EventInfo<net.minecraft.entity.player.EntityPlayer> e ) { net.minecraft.entity.player.EntityPlayer ep = e.getSource () ; try { if ( ( ( ep instanceof net.minecraft.entity.player.EntityPlayerMP ) && ( me.dags.daflight.DaFlight.get () .DFController.noClipOn ) ) && ( me.dags.daflight.DaFlight.get () .DFController.flyModOn ) ) { ep.noClip = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion ) { try { db.execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.MoviesEntry.TABLE_NAME ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } db.execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.VideoEntry.TABLE_NAME ) ) ) ; db.execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.ReviewEntry.TABLE_NAME ) ) ) ; } 
public int getCaptionHeight () { int textWidth = mTextView.getWidth () ; int widthMeasureSpec = View.MeasureSpec.makeMeasureSpec ( textWidth, View.MeasureSpec.EXACTLY ) ; int heightMeasureSpec = View.MeasureSpec.makeMeasureSpec ( 0, View.MeasureSpec.UNSPECIFIED ) ; if ( textWidth < 1 ) { return 0; } try { mTextView.measure ( widthMeasureSpec, heightMeasureSpec ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return mTextView.getMeasuredHeight () ; } 
public Util.complex pow ( int n ) { double rn = ( java.lang.Math.pow ( getAbs () , n ) ) * ( java.lang.Math.cos ( ( n * ( getAngle () ) ) ) ) ; double in = ( java.lang.Math.pow ( getAbs () , n ) ) * ( java.lang.Math.sin ( ( n * ( getAngle () ) ) ) ) ; try { setR ( rn ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setI ( in ) ; return this; } 
public void hideFragment ( android.support.v4.app.Fragment fragment, android.support.v4.app.Fragment fragment1 ) { try { if ( ( null != fragment ) && ( null != fragment1 ) ) { fragmentTransaction = getSupportFragmentManager () .beginTransaction () ; fragmentTransaction.hide ( fragment ) .hide ( fragment1 ) ; fragmentTransaction.commit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void printCosts ( int level ) { org.sat4j.core.Vec<java.math.BigInteger> costsToPrint = new org.sat4j.core.Vec<java.math.BigInteger> () ; costs.copyTo ( costsToPrint ) ; try { for ( int i = level - 1; i >= 0; i-- ) { costsToPrint.set ( i, computeCostOfLevel ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } solver.printCosts ( costsToPrint ) ; } 
@ org.junit.Test public void testParsingConfigXmlForSettingModulePackageAndId () throws java.lang.Exception { org.openmrs.addonindex.scheduled.FetchDetailsToIndex task = new org.openmrs.addonindex.scheduled.FetchDetailsToIndex ( null, null ) ; org.openmrs.addonindex.domain.AddOnVersion version = new org.openmrs.addonindex.domain.AddOnVersion () ; try { task.handleConfigXml ( org.openmrs.addonindex.TestUtil.getFileAsString ( "config.withRelativePathDtd.xml" ) , version ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertThat ( version.getModulePackage () , org.hamcrest.core.Is.is ( "org.openmrs.module.mdrtb" ) ) ; org.junit.Assert.assertThat ( version.getModuleId () , org.hamcrest.core.Is.is ( "mdrtb" ) ) ; } 
public static void cancelNotification ( android.content.Context context, int notificationId ) { try { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( context.getApplicationContext () .getSystemService ( ns ) ) ) ; nMgr.cancel ( notificationId ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void phaseThree ( UndirectedGraph<java.lang.Integer, java.lang.Integer> graph, java.util.List<Graph.Vertex<java.lang.Integer>> lowDegreeVertices ) { try { for ( Graph.Vertex<java.lang.Integer> v : lowDegreeVertices ) { graph.removeVertex ( graph.getVertexWithElement ( v.getElement () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean inLabels ( java.util.HashSet<java.lang.String> hashSet ) { try { if ( hashSet != null ) { if ( hashSet.isEmpty () ) return true; for ( java.lang.String str : hashSet ) { if ( ( ( this.label ) != null ) && ( this.label.equalsIgnoreCase ( str ) ) ) return true; } return false; } else { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.String status ) { java.lang.String imagePath = ( ( localstoragehandler.fileCacheFolder ) + "/" ) + ( filename ) ; try { if ( status.equals ( "OK" ) ) { if ( type.equals ( MessageInfo.MessageType.IMAGE ) ) { at.vcity.androidim.tools.BitmapLoaderTask task = new at.vcity.androidim.tools.BitmapLoaderTask ( imageView ) ; task.execute ( imagePath ) ; imageView.setLayoutParams ( params ) ; } } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showAds () { try { mAdView = ( ( com.google.android.gms.ads.AdView ) ( rootView.findViewById ( R.id.update_information_banner_field ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mAdView ) != null ) { java.lang.String adsTestId = "7CFCF353FBC40363065F03DFAC7D7EE4"; com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder () .addTestDevice ( adsTestId ) .addKeyword ( "smartphone" ) .addKeyword ( "tablet" ) .addKeyword ( "news apps" ) .addKeyword ( "games" ) .build () ; mAdView.loadAd ( adRequest ) ; } } 
private mil.nga.giat.mage.sdk.datastore.user.Permissions parsePermissions ( com.fasterxml.jackson.core.JsonParser parser ) throws java.io.IOException { if ( ( parser.getCurrentToken () ) != ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) return null; java.util.Collection<mil.nga.giat.mage.sdk.datastore.user.Permission> permissions = new java.util.ArrayList<> () ; try { while ( ( parser.nextToken () ) != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { java.lang.String permission = parser.getText () .toUpperCase ( java.util.Locale.US ) ; permissions.add ( mil.nga.giat.mage.sdk.datastore.user.Permission.valueOf ( permission ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new mil.nga.giat.mage.sdk.datastore.user.Permissions ( permissions ) ; } 
private static void fillMissingValues () { try { for ( int i = 0; i < ( DatasetCleanup.groupSize ) ; i++ ) { for ( int j = 0; j < ( DatasetCleanup.labels.length ) ; j++ ) { if ( ( DatasetCleanup.featureSpace[i][j].equals ( null ) ) || ( DatasetCleanup.featureSpace[i][j].equals ( "" ) ) ) DatasetCleanup.featureSpace[i][j] = java.lang.String.valueOf ( ( -1 ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.json.simple.JSONObject asJSON () { org.json.simple.JSONObject obj = new org.json.simple.JSONObject () ; try { obj.put ( "username", username ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } obj.put ( "password", password ) ; obj.put ( "firstName", firstName ) ; obj.put ( "lastName", lastName ) ; obj.put ( "emailAddress", emailAddress ) ; obj.put ( "lastLogin", lastLogin.toString () ) ; obj.put ( "type", "cheapSubscription" ) ; return obj; } 
private static void testServerChannelFactory ( org.osgi.framework.BundleContext bundleContext ) { org.osgi.framework.ServiceReference<com.wincom.dcim.agentd.NetworkService> serviceRef = bundleContext.getServiceReference ( com.wincom.dcim.agentd.NetworkService.class ) ; com.wincom.dcim.agentd.NetworkService service = bundleContext.getService ( serviceRef ) ; java.lang.System.out.println ( serviceRef ) ; java.lang.System.out.println ( service ) ; try { com.wincom.dcim.agentd.internal.AgentdServiceActivator.createAcceptor ( service ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < 1; ++i ) { com.wincom.dcim.agentd.internal.AgentdServiceActivator.createConnection ( service ) ; } } 
@ org.testng.annotations.BeforeClass public void beforeSuite () throws java.lang.InterruptedException { org.molgenis.data.rest.client.MolgenisClient molgenisClient = org.molgenis.selenium.util.RestApiV1Util.createMolgenisClientApiV1 ( baseURL, org.molgenis.selenium.test.AnnotatorTest.LOG ) ; this.driver = DriverType.FIREFOX.getDriver () ; try { this.model = new org.molgenis.selenium.model.AnnotatorModel ( driver, molgenisClient, org.molgenis.selenium.util.RestApiV1Util.loginRestApiV1 ( molgenisClient, uid, pwd, org.molgenis.selenium.test.AnnotatorTest.LOG ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.molgenis.selenium.util.SignUtil.signIn ( this.driver, baseURL, uid, pwd ) ; } 
public biomorphHandling.Biomorph evolveClo ( biomorphHandling.Biomorph father, biomorphHandling.Biomorph mother ) { biomorphHandling.Evolver ec = new biomorphHandling.Evolver ( father, mother, perfectValues ) ; biomorphHandling.Biomorph biomorph = ec.evolve () ; statisticMachine.saveGeneValues ( ec.getChildGenes () ) ; try { statisticMachine.printRunningStats () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return biomorph; } 
@ java.lang.Override public void channelInactive ( org.eclipse.moquette.server.netty.ChannelHandlerContext ctx ) throws java.lang.Exception { super.channelInactive ( ctx ) ; org.eclipse.moquette.server.netty.NettyChannel channel = m_channelMapper.get ( getKey ( ctx.channel () ) ) ; if ( null == channel ) { ctx.close () ; return; } try { remove ( ctx.channel () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } release ( channel ) ; ctx.close () ; } 
@ java.lang.Override public void onUpdate ( com.wylder.shuttlewidget.ScheduleConstraint[] newConstraints ) { constraints = newConstraints; if ( ( newConstraints.length ) == 0 ) { flagEmptyList = true; constraints = new com.wylder.shuttlewidget.ScheduleConstraint[] { null }; } else { flagEmptyList = false; } com.wylder.shuttlewidget.ConstraintListAdapter adapter = new com.wylder.shuttlewidget.ConstraintListAdapter ( getActivity () , constraints ) ; try { setListAdapter ( adapter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCompletion ( android.media.MediaPlayer mp ) { int temp = ( ( sharedPreferences.getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER, ( -1 ) ) ) + 1 ) % ( videoList.size () ) ; vvVideo.setVideoURI ( videoList.get ( temp ) ) ; com.example.saksham.overlayscreenshort.PlaylistAdapter.changeActiveItemBackground ( temp ) ; editor.putInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER, temp ) ; editor.commit () ; try { vvVideo.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; try { io.gloop.drawed.utils.ScreenUtil.activity.getWindowManager () .getDefaultDisplay () .getMetrics ( metrics ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } float factor1 = ( metrics.heightPixels ) / 1920.0F; float factor2 = ( metrics.widthPixels ) / 1080.0F; if ( factor1 >= factor2 ) return factor1; else return factor2; } 
@ java.lang.Override protected void onDestroy () { try { if ( ( mCore ) != null ) { mCore.pauseSensors () ; mCore.shutdown ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( com.ilm.sandwich.OsmMap.listHandler ) != null ) { com.ilm.sandwich.OsmMap.listHandler.removeCallbacksAndMessages ( null ) ; } com.ilm.sandwich.tools.Statistics mStatistics = new com.ilm.sandwich.tools.Statistics () ; mStatistics.check ( this ) ; super.onDestroy () ; } 
public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null; try { for ( java.util.Map.Entry<org.projectbuendia.client.ui.SnackBar.MessageKey, org.projectbuendia.client.ui.SnackBar.Message> entry : org.projectbuendia.client.ui.SnackBar.mMessagesList.entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry.getValue () ; if ( ( value.message ) == message ) { theMessage = value; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return theMessage; } 
@ org.junit.Test public void testTrajectoryBoundsZVelocity () { java.util.List<java.lang.Double> l = com.google.common.collect.Lists.newArrayList () ; try { for ( int i = 0; i < ( ( trajectory.getTrajectoryDuration () ) * 10 ) ; i++ ) { l.add ( getVelocityZ ( trajectory, ( i / 10.0 ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } assertBounds ( l, speed, speed ) ; } 
public void removeMachine ( de.prob2.ui.project.Machine machine ) { java.util.List<de.prob2.ui.project.Machine> machinesList = this.getMachines () ; machinesList.remove ( machine ) ; try { this.update ( new de.prob2.ui.project.Project ( this.getName () , this.getDescription () , machinesList, this.getPreferences () , this.getRunconfigurations () , this.getLocation () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onLocalVideoTrackReceive ( com.quickblox.videochat.webrtc.QBRTCSession session, com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack ) { try { localVideoVidew = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.localVideoVidew ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.d ( "Track", ( "localVideoVidew is " + ( localVideoVidew ) ) ) ; if ( ( localVideoVidew ) != null ) { videoTrack.addRenderer ( new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( localVideoVidew, QBGLVideoView.Endpoint.LOCAL ) ) ) ; localVideoVidew.setVideoTrack ( videoTrack, QBGLVideoView.Endpoint.LOCAL ) ; android.util.Log.d ( "Track", "onLocalVideoTrackReceive () is raned" ) ; } } 
public boolean addUser () { try { if ( pwField.getText () .equals ( pwConfirmField.getText () ) ) { animalkeeping.technicalAdministration.DatabaseUser newUser = new animalkeeping.technicalAdministration.DatabaseUser ( usernameField.getText () , pwField.getText () , userClassComboBox.getValue () ) ; return true; } else { java.lang.System.out.println ( "Passwords do not match!" ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addEntry ( com.example.lenni.blackjack_ptm.LeaderboardEntry entry ) { android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values.put ( com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.COLUMN_PLAYER, entry.getPlayerName () ) ; values.put ( com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.COLUMN_SCORE, entry.getScore () ) ; db.replace ( com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.TABLE_LEADERBOARD, null, values ) ; try { db.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void die () { try { data.incrementObservableValue ( observableDataKey, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.getPosition () .x = respawnPosition.x; this.getPosition () .y = respawnPosition.y; if ( ( sword ) == null ) { nidhogglike.entities.Sword sword = ( ( nidhogglike.game.NidhoggUniverse ) ( data.getUniverse () ) ) .getFreeSword () ; if ( sword != null ) { setSword ( sword ) ; } } } 
void addAmountTodo ( int amt, todolist.TodoList list ) { todolist.Todo head = new todolist.Todo ( "Task 1" ) ; list.addTodo ( head ) ; int numAdded = 1; try { while ( numAdded != amt ) { numAdded++; todolist.Todo newTodo = new todolist.Todo ( ( "Task " + ( java.lang.Integer.toString ( numAdded ) ) ) ) ; list.addTodo ( newTodo ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.google.gwt.uibinder.client.UiHandler ( value = "versionSelect" ) protected void onVersionChange ( com.google.gwt.event.dom.client.ChangeEvent e ) { java.lang.String version = versionSelect.getSelectedValue () ; try { for ( com.siemens.plm.hackathon.haystatck.shared.VersionDTO v : this.versions ) { if ( v.getName () .equals ( version ) ) { populateBaselines ( v.getBaselines () ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } getRepositories ( this.getCurrentProduct () , version ) ; } 
public static java.util.Calendar toCalendar ( int day, int month, int year ) { java.util.Calendar cal = java.util.Calendar.getInstance () ; cal.set ( java.util.Calendar.YEAR, year ) ; cal.set ( java.util.Calendar.MONTH, month ) ; try { cal.set ( java.util.Calendar.DAY_OF_MONTH, day ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cal.getTime () ; return cal; } 
public void start ( java.lang.String myBaseId, java.lang.String enemyBaseId, java.util.Set<java.lang.String> enemyIds ) { this.myBaseId = myBaseId; this.enemyBaseId = enemyBaseId; this.enemyIds = enemyIds; try { android.util.Log.i ( "Start game", ( ( ( ( myBaseId + ":" ) + enemyBaseId ) + ":" ) + enemyIds ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getVoteSiteName ( java.lang.String url ) { java.util.ArrayList<java.lang.String> sites = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getInstance () .getVoteSitesNames () ; try { if ( sites != null ) { for ( java.lang.String siteName : sites ) { java.lang.String URL = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getInstance () .getServiceSite ( siteName ) ; if ( URL.equals ( url ) ) { return siteName; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return url; } 
private void onEmojiconsPressed () { try { if ( ( emojiconsViewGroup.getVisibility () ) == ( android.view.View.VISIBLE ) ) { emojiconsViewGroup.setVisibility ( View.GONE ) ; } else { android.view.View view = this.getCurrentFocus () ; if ( view != null ) { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm.hideSoftInputFromWindow ( view.getWindowToken () , 0 ) ; } emojiconsViewGroup.setVisibility ( View.VISIBLE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void enable ( java.lang.String name, java.lang.String artifact ) throws java.io.IOException { org.apache.zeppelin.helium.HeliumPackageSearchResult pkgInfo = getPackageInfo ( name, artifact ) ; if ( pkgInfo == null ) { return; } try { if ( org.apache.zeppelin.helium.HeliumPackage.isBundleType ( pkgInfo.getPkg () .getType () ) ) { bundleFactory.buildPackage ( pkgInfo.getPkg () , true, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } heliumConf.enablePackage ( name, artifact ) ; save () ; } 
public void runAlgorithm ( double minSup, double minConf, org.knime.sequence.ruleGrowth.spmf.SequenceDatabase database ) throws java.io.IOException { this.database = database; this.minConfidence = minConf; try { this.minsuppRelative = ( ( int ) ( java.lang.Math.ceil ( ( minSup * ( database.size () ) ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } runAlgorithm ( "NO NEED", null, minsuppRelative, minConfidence ) ; } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker datePicker, int year, int month, int day ) { dateList.add ( ( ( ( ( ( ( ( "" + ( day < 10 ? '0' : "" ) ) + day ) + "/" ) + ( month < 10 ? '0' : "" ) ) + month ) + "/" ) + year ) ) ; try { showDialog ( 888 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void start () { java.util.ArrayList<View> views = readFile ( "unge-lovende.csv" ) ; java.util.HashMap[] viewData = findKeyData ( views ) ; Analyse.printMap ( viewData[0] ) ; Analyse.printMap ( viewData[1] ) ; try { Analyse.printDayMap ( viewData[2] ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Analyse.printMap ( viewData[3] ) ; } 
public java.lang.Boolean draw ( dk.eax.Field field ) { try { if ( ( field.getToken () ) == null ) { java.lang.System.out.println ( field.getToken () ) ; int y = field.getCoordinate_y () ; int x = field.getCoordinate_x () ; dk.eax.graphics.Ellipse ellipsis = new dk.eax.graphics.Ellipse ( x, y, 200, 200 ) ; ellipsis.draw () ; field.setToken ( this ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public boolean onNavigationItemSelected ( @android.support.annotation.NonNull android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.nav_search: mDrawerLayout.closeDrawers () ; return true; case R.id.nav_saved_search_results: mDrawerLayout.closeDrawers () ; android.content.Intent savedResultsIntent = new android.content.Intent ( this, com.example.android.vigi.SavedSearchResultsActivity.class ) ; startActivity ( savedResultsIntent ) ; return true; default: return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void paint ( java.awt.Graphics g ) { g.setColor ( java.awt.Color.BLACK ) ; try { g.fillOval ( x, y, radius, radius ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } g.drawOval ( ( ( ( x ) + ( ( radius ) / 2 ) ) - ( ( range ) / 2 ) ) , ( ( ( y ) + ( ( radius ) / 2 ) ) - ( ( range ) / 2 ) ) , range, range ) ; } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "@workLogSecurityService.hasPermissionToEditWorkLog ( #workLogId ) " ) @com.softserverinc.edu.controllers.GetMapping ( value = "issue/{issueId}/worklog/{workLogId}/edit" ) public java.lang.String issueByIdEditWorklog ( @com.softserverinc.edu.controllers.PathVariable java.lang.Long issueId, @com.softserverinc.edu.controllers.PathVariable java.lang.Long workLogId, org.springframework.ui.ModelMap model, @org.springframework.beans.factory.annotation.Qualifier ( value = "worklog" ) @org.springframework.data.web.PageableDefault ( value = com.softserverinc.edu.constants.PageConstant.AMOUNT_PROJECT_ELEMENTS ) org.springframework.data.domain.Pageable workLogPageable ) { model.addAttribute ( "issue", issueService.findById ( issueId ) ) ; model.addAttribute ( "issueCommentsList", issueCommentService.findByIssueId ( issueId ) ) ; try { model.addAttribute ( "newIssueComment", getNewIssueComment ( issueId ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } workLogService.forEditWorkLogModel ( model, workLogId, issueId, workLogPageable ) ; return "issue_view"; } 
public com.xrtb.common.Campaign getCampaign ( java.lang.String name, java.lang.String id ) { com.xrtb.db.User u = map.get ( name ) ; if ( u == null ) return null; try { for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId.equals ( id ) ) return c; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private void onClientHandle ( com.impetus.kundera.persistence.handler.impl.EntitySaveGraph objectGraph, java.lang.Object childEntity ) throws java.lang.Exception { try { if ( childEntity instanceof java.util.Collection<?> ) { java.util.Collection<?> childCol = ( ( java.util.Collection<?> ) ( childEntity ) ) ; for ( java.lang.Object ch : childCol ) { if ( ch != null ) { onClientDelete ( ch, objectGraph ) ; } } } else { if ( childEntity != null ) { onClientDelete ( childEntity, objectGraph ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void gpsDisconnected () { try { android.util.Log.d ( "MainActivity", ( ( this.toString () ) + " gps disconnect signal" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( com.example.jonathan.myapplication.Configuration.getTerminate () ) ) { android.widget.Toast.makeText ( this, "GPS Location Service has Disconnected. Please re-login.", Toast.LENGTH_LONG ) .show () ; android.content.Intent intent = new android.content.Intent ( this, com.example.jonathan.myapplication.MainActivity.class ) ; startActivity ( intent ) ; } } 
@ java.lang.Override public void writePortable ( com.hazelcast.nio.serialization.PortableWriter writer ) throws java.io.IOException { java.util.List<java.lang.String> nullChecker = com.google.common.collect.Lists.newArrayList () ; if ( ( topicFilter ) != null ) { writer.writeUTF ( "topicFilter", topicFilter ) ; nullChecker.add ( "topicFilter" ) ; } try { if ( ( qos ) != null ) { writer.writeInt ( "qos", qos.value () ) ; nullChecker.add ( "qos" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } writer.writeUTFArray ( "nullChecker", nullChecker.toArray ( new java.lang.String[0] ) ) ; } 
private void reloadCoategories () { try { threadPool.execute ( new gui.RunnableParameter<java.lang.Integer> ( trvCategory.getSelectionModel () .getSelectedItem () .getValue () .getId () ) { @java.lang.Override public void run () { superController.setSelectedCategory ( parameter, true ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "", "/", "/index" } ) public java.lang.String getIndexPage ( org.springframework.ui.Model model ) { java.util.Optional<guru.springframework.domain.Category> categoryOptional = categoryRepository.findByDescription ( "American" ) ; java.util.Optional<guru.springframework.domain.UnitOfMeasure> unitOfMeasureOptional = unitOfMeasureRepository.findByDescription ( "Teaspoon" ) ; java.lang.System.out.println ( ( "Cat Id is: " + ( categoryOptional.get () .getId () ) ) ) ; try { java.lang.System.out.println ( ( "UOM ID is: " + ( unitOfMeasureOptional.get () .getId () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Set recipeList = recipeService.getRecipes () ; model.addAttribute ( "recipes", recipeList ) ; return "index"; } 
@ java.lang.Override public de.ppi.samples.fuwesta.model.User read ( java.lang.Long userId ) { final de.ppi.samples.fuwesta.model.User user = userDao.findOne ( userId ) ; try { if ( ( user != null ) && ( ! ( org.springframework.util.CollectionUtils.isEmpty ( user.getPostings () ) ) ) ) { user.getPostings () .size () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return user; } 
@ org.junit.Before public void setUp () throws java.lang.Exception { components = new haw.vs.superteam.gamesservice.Components () ; try { boardsAdapter = mock ( haw.vs.superteam.gamesservice.api.BoardsAdapter.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } when ( boardsAdapter.createBoard ( org.mockito.Matchers.any ( haw.vs.superteam.gamesservice.Game.class ) ) ) .thenReturn ( true ) ; when ( boardsAdapter.addPlayer ( org.mockito.Matchers.any ( haw.vs.superteam.gamesservice.Game.class ) , org.mockito.Matchers.any ( haw.vs.superteam.gamesservice.Player.class ) ) ) .thenReturn ( true ) ; playerAdapter = mock ( haw.vs.superteam.gamesservice.api.PlayerAdapter.class ) ; controller = new haw.vs.superteam.gamesservice.GameController ( "test-uri", playerAdapter, boardsAdapter ) ; } 
@ java.lang.Override public boolean shouldTraverse ( com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent ) { try { switch ( n.getType () ) { case com.google.javascript.rhino.Token.YIELD: visitYieldExpression ( n ) ; break; case com.google.javascript.rhino.Token.DO: case com.google.javascript.rhino.Token.FOR: case com.google.javascript.rhino.Token.WHILE: visitLoop ( n ) ; break; case com.google.javascript.rhino.Token.CASE: if ( controlCanExit ( n.getFirstChild () ) ) { compiler.report ( com.google.javascript.jscomp.JSError.make ( n, Es6ToEs3Converter.CANNOT_CONVERT_YET, "Case statements that contain yields" ) ) ; return false; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void buttonPressed ( java.lang.String buttonName, double result ) { try { java.lang.System.out.println ( ( "qst 2 fini, name = " + buttonName ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( buttonName.equals ( "continue" ) ) { game.setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game, com.odysseedesmaths.Assets.DLG_ARRIVEE_2b, new com.odysseedesmaths.dialogs.EndButtonsListener () { @java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game.setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName.equals ( "restart" ) ) { game.setScreen ( game.getModeScene () ) ; } } 
private void addEntry ( int answer ) { try { entries.add ( new Entry ( allTrials.get ( ( ( counter ) - 1 ) ) , answer, ( ( ( inCircleSteps ) * 1.0 ) / ( totalTimeSteps ) ) , startTime, counter, currentGazeDataSet, new Tuple ( this.getGCanvas () .getLocationOnScreen () ) , ( ( inPracticeMode ) && ( ( counter ) < 5 ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void fillListView ( java.lang.String title ) { db = new yeongdejong.com.assamhouse.DB_Recipes ( this ) ; java.util.ArrayList<yeongdejong.com.assamhouse.Recipes> cuisines = db.getSelectedCategory ( title ) ; java.lang.String size = java.lang.String.valueOf ( cuisines.size () ) ; try { yeongdejong.com.assamhouse.Toast.makeText ( this, size, Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean canAttack ( final me.NoChance.PvPManager.PvPlayer attacker, final me.NoChance.PvPManager.PvPlayer defender ) { try { if ( ( attacker.isInCombat () ) && ( defender.isInCombat () ) ) return dependencyManager.canAttack ( attacker.getPlayer () , defender.getPlayer () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private org.esa.snap.core.datamodel.Band getComplexSrcBand ( final org.esa.snap.core.datamodel.Band iBand ) { java.lang.String name = iBand.getName () ; try { if ( name.startsWith ( "i_" ) ) { name = name.replace ( "i_", "q_" ) ; } else if ( name.startsWith ( "q_" ) ) { name = name.replace ( "q_", "i_" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return srcProduct.getBand ( name ) ; } 
public static java.util.Set<org.talend.hadoop.distribution.DistributionModuleGroup> getModuleGroups () { java.util.Set<org.talend.hadoop.distribution.DistributionModuleGroup> hs = new java.util.HashSet<> () ; try { hs.add ( new org.talend.hadoop.distribution.DistributionModuleGroup ( HDInsight36Constant.SPARK_HIVE_MRREQUIRED_MODULE_GROUP.getModuleName () , false, null ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } hs.add ( new org.talend.hadoop.distribution.DistributionModuleGroup ( HDInsight36Constant.SPARK_SQL_MRREQUIRED_MODULE_GROUP.getModuleName () , false, null ) ) ; return hs; } 
public void map ( org.apache.hadoop.io.Text key, org.apache.hadoop.io.Text value, cloudCompu.PageRankMr.Context context ) throws java.io.IOException, java.lang.InterruptedException { java.lang.String[] detial = value.toString () .split ( "&gt;" ) ; java.lang.String[] par = detial[0].split ( " " ) ; try { if ( ( java.lang.Integer.parseInt ( par[2] ) ) == 0 ) { title.set ( "Sum" ) ; pr.set ( java.lang.Double.parseDouble ( par[0] ) ) ; context.write ( key, pr ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreateContextMenu ( android.view.ContextMenu menu, android.view.View v, android.view.ContextMenu.ContextMenuInfo menuInfo ) { super.onCreateContextMenu ( menu, v, menuInfo ) ; try { menu.add ( 0, com.phicdy.mycuration.ui.FilterListFragment.EDIT_FILTER_MENU_ID, 0, R.string.edit_filter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } menu.add ( 0, com.phicdy.mycuration.ui.FilterListFragment.DELETE_FILTER_MENU_ID, 1, R.string.delete_filter ) ; } 
@ java.lang.Override public void connectionLost ( java.lang.Throwable thrwbl ) { try { java.lang.System.out.println ( "Connection Lost..." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( thrwbl.getCause () ) ; java.lang.System.out.println ( thrwbl.getMessage () ) ; java.lang.String m = ( ( bfh.ch.labdem.main.Subscriber.class.getName () ) + "\n" ) + ( thrwbl.getMessage () ) ; LabDemLogger.LOGGER.log ( java.util.logging.Level.SEVERE, m ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView, boolean isChecked ) { if ( ( com.cyapass.cyapass.MainActivity.currentSiteKey ) == null ) { return; } if ( isChecked ) { com.cyapass.cyapass.MainActivity.currentSiteKey.setMaxLength ( java.lang.Integer.parseInt ( com.cyapass.cyapass.MainActivity.PlaceholderFragment.maxLengthTabEditText.getText () .toString () ) ) ; } else { com.cyapass.cyapass.MainActivity.currentSiteKey.setMaxLength ( 0 ) ; } try { if ( gv.isLineSegmentComplete () ) { android.util.Log.d ( "MainActivity", "addChars -- Re-generating password..." ) ; gv.GeneratePassword () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean canHandle ( org.opentosca.planbuilder.model.tosca.AbstractImplementationArtifact ia, org.opentosca.planbuilder.model.tosca.AbstractNodeType infrastructureNodeType ) { javax.xml.namespace.QName type = ia.getArtifactType () ; try { org.opentosca.planbuilder.prephase.plugin.scriptiaonlinux.PrePhasePlugin.LOG.debug ( ( ( ( ( "Checking if type: " + ( type.toString () ) ) + " and infrastructure nodeType: " ) + ( infrastructureNodeType.getId () .toString () ) ) + " can be handled" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this.isSupportedDeploymentPair ( type, infrastructureNodeType.getId () , false ) ; } 
private void initRecyclerView () { android.support.v7.widget.LinearLayoutManager linearLayoutManager = new android.support.v7.widget.LinearLayoutManager ( getActivity () ) { @java.lang.Override protected int getExtraLayoutSpace ( android.support.v7.widget.RecyclerView.State state ) { return 300; } }; try { mRecyclerView.setLayoutManager ( linearLayoutManager ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mRecyclerView.setAdapter ( mNewsListAdapter ) ; mRecyclerView.setItemAnimator ( new com.lixinwei.www.goldennews.newslist.NewsItemAnimator () ) ; } 
private boolean handleAlias ( org.json.JSONArray args, final org.apache.cordova.CallbackContext cbCtx ) { java.lang.String aliasId = args.optString ( 0, "" ) ; try { if ( android.text.TextUtils.isEmpty ( aliasId ) ) { this.error ( cbCtx, "missing alias id" ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } com.alanhmak.cordova.plugin.MixpanelPlugin.mixpanel.alias ( aliasId, null ) ; cbCtx.success () ; return true; } 
public long timestampForPlanetFile ( java.lang.String filename ) { java.util.regex.Pattern longDatePattern = java.util.regex.Pattern.compile ( "\\d{8}" ) ; java.util.regex.Pattern shortDatePattern = java.util.regex.Pattern.compile ( "\\d{6}" ) ; java.util.regex.Matcher dateMatcher = longDatePattern.matcher ( filename ) ; try { if ( dateMatcher.matches () ) { } else { dateMatcher = longDatePattern.matcher ( filename ) ; if ( dateMatcher.matches () ) { } } } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
void free ( final long id ) throws java.io.IOException { final net.kotek.jdbm.BlockIo curBlock = file.get ( net.kotek.jdbm.Location.getBlock ( id ) ) ; final short offset = net.kotek.jdbm.Location.getOffset ( id ) ; final int size = net.kotek.jdbm.RecordHeader.getAvailableSize ( curBlock, offset ) ; if ( size > ( net.kotek.jdbm.PhysicalRowIdManager.DATA_PER_PAGE ) ) { } net.kotek.jdbm.RecordHeader.setCurrentSize ( curBlock, offset, 0 ) ; file.release ( curBlock ) ; try { freeman.put ( id, size ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ net.minecraftforge.fml.common.Mod.EventHandler public void preInit ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent event ) { net.minecraftforge.fml.common.registry.GameRegistry.register ( ( blockTorch = new com.builtbroken.bonetorch.torch.BlockBoneTorch () ) ) ; net.minecraftforge.fml.common.registry.GameRegistry.register ( new com.builtbroken.bonetorch.torch.ItemBlockBoneTorch ( blockTorch ) , blockTorch.getRegistryName () ) ; try { if ( ( event.getSide () ) == ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ) { blockTorch.registerModel () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean clear () { try { if ( ( ArraySize ) == 0 ) { return false; } else { for ( int i = ArraySize; i > 0; i-- ) { this.remove ( i ) ; } ArraySize = 0; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void chooseRightFragment () { avia.androi.innopolis.com.aviasales.models.User user = avia.androi.innopolis.com.aviasales.utils.ShPrefUtils.getUser () ; user = null; try { if ( user == null ) { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.login.LoginFragment.newInstance () ; iView.showFragment ( fragment ) ; } else { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.search.TicketFragment.newInstance () ; iView.showFragment ( fragment ) ; iView.initializeNavDrawer () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { main.java.PlagiarismDetector plagiarismDetector = new main.java.PlagiarismDetector () ; main.java.PlagiarismService plagiarismService = new main.java.PlagiarismService () ; main.java.InputWrapper inputWrapper = plagiarismDetector.validateInput ( args ) ; double plagiarismRatio = plagiarismService.checkPlagiarism ( inputWrapper ) ; java.lang.System.out.println () ; java.lang.System.out.println ( "---------------------------------------------------------------------------------------------" ) ; try { java.lang.System.out.println ( ( ( "Plagiarism Percentage is " + ( plagiarismRatio * 100 ) ) + " %" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( "---------------------------------------------------------------------------------------------" ) ; java.lang.System.out.println () ; } 
private void comboBoxFieldActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.System.out.println ( ( "here" + ( comboBoxStartToSearch ) ) ) ; searchColName = comboBoxField.getSelectedItem () .toString () ; searchValue = comboBoxValue.getSelectedItem () .toString () ; java.lang.String tabName = getSelectedTabName () ; updateComboList ( searchColName, tabName ) ; try { comboBoxValue.setSelectedItem ( searchValue ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } comboBoxStartToSearch = true; } 
public void syncToDoList () { android.content.SharedPreferences toDoSharedPref = getActivity () .getSharedPreferences ( "toDo", Context.MODE_PRIVATE ) ; java.lang.String[] splittedList; java.lang.String savedList = toDoSharedPref.getString ( "toDoList", null ) ; try { if ( savedList != null ) { splittedList = savedList.split ( "\\n" ) ; for ( java.lang.String x : splittedList ) { if ( ( x.trim () .length () ) > 0 ) { toDoList.add ( x.trim () ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } mAdapter.notifyDataSetChanged () ; } 
public static void createHTunnel ( byte[][] map, int x1, int x2, int y ) { try { for ( int x = java.lang.Math.min ( x1, x2 ) ; x < ( ( java.lang.Math.max ( x1, x2 ) ) + 1 ) ; x++ ) { map[y][x] = ( ( byte ) ( dungeon.MapGenDungeon.SPACE ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void notifyOnReceivedMessage ( android.telephony.SmsMessage message ) { java.lang.String messageContent = message.getMessageBody () ; java.lang.String messageFrom = message.getOriginatingAddress () ; java.lang.Long messageReciviedTime = message.getTimestampMillis () ; final com.example.michaelssss.myapplication.services.Message message1 = new com.example.michaelssss.myapplication.services.Message ( messageReciviedTime, messageFrom, messageContent ) ; try { new java.lang.Thread ( new java.lang.Runnable () { @java.lang.Override public void run () { urlConnection.sendMessage ( com.alibaba.fastjson.JSON.toJSONString ( message1 ) ) ; } } ) .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setRoute ( com.openshift.restclient.model.route.IRoute newRoute, boolean executeCommand ) { java.lang.String prevHost = getHost ( getRoute () ) ; super.setRoute ( newRoute ) ; java.lang.String newHost = getHost ( newRoute ) ; java.lang.String newRouteURL = getRouteURL ( isSelectDefaultRoute () , newRoute ) ; try { if ( executeCommand ) section.execute ( new org.jboss.tools.openshift.internal.ui.server.OpenShiftServerEditorModel.SetRouteCommand ( getServer () , getRoute () , newRoute, newRouteURL, prevHost, newHost ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface, int i ) { if ( input.getText () .toString () .trim () .isEmpty () ) return; try { counter.setValue ( java.lang.Integer.valueOf ( input.getText () .toString () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } listener.added ( counter.getKey () ) ; counter.load ( counter.getKey () ) ; } 
@ java.lang.Override public void onOpen ( java.lang.Object arg0 ) { try { super.onOpen ( arg0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.view.View.OnTouchListener listener = new android.view.View.OnTouchListener () { public boolean onTouch ( android.view.View v, android.view.MotionEvent e ) { if ( ( e.getAction () ) == 1 ) { marker.setHasToClose ( false ) ; marker.maximize () ; } return true; } }; this.mView.findViewById ( R.id.maximize ) .setOnTouchListener ( listener ) ; } 
@ net.minecraftforge.fml.common.Mod.EventHandler public void preInit ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent event ) { me.dmillerw.consequence.Consequence.INSTANCE.adapterDir = new java.io.File ( event.getModConfigurationDirectory () , "consequence/adapters" ) ; if ( ! ( me.dmillerw.consequence.Consequence.INSTANCE.adapterDir.exists () ) ) me.dmillerw.consequence.Consequence.INSTANCE.adapterDir.mkdirs () ; me.dmillerw.consequence.Consequence.INSTANCE.scriptDir = new java.io.File ( event.getModConfigurationDirectory () , "consequence/scripts" ) ; if ( ! ( me.dmillerw.consequence.Consequence.INSTANCE.scriptDir.exists () ) ) me.dmillerw.consequence.Consequence.INSTANCE.scriptDir.mkdirs () ; try { me.dmillerw.consequence.Consequence.INSTANCE.logger = event.getModLog () ; } catch ( Exception ex ) { ex.printStackTrace () ; } me.dmillerw.consequence.Consequence.PROXY.preInit ( event ) ; } 
public void start () { com.stuin.tenseconds.Round.moving = true; com.stuin.tenseconds.Round.loss = false; ( ( com.stuin.tenseconds.Views.Grid ) ( getChildAt ( 0 ) ) ) .enter () ; ( ( com.stuin.tenseconds.Views.Grid ) ( getChildAt ( 2 ) ) ) .enter () ; try { ( ( com.stuin.tenseconds.Views.Timer ) ( getChildAt ( 1 ) ) ) .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } postDelayed ( title, 100 ) ; } 
public static boolean isPlayerLoggedIn ( java.lang.String name ) { name = name.toLowerCase () ; try { if ( ! ( com.hsun324.protection.Protection.getInstance () .isEnabled () ) ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( com.hsun324.protection.ProtectionSystem.playerProtectionMap.containsKey ( name ) ) return com.hsun324.protection.ProtectionSystem.playerProtectionMap.get ( name ) .isLoggedIn () ; return false; } 
@ java.lang.Override public com.mycompany.pokdedex.db.dto.PokemonAttackDto map ( int i, java.sql.ResultSet resultSet, org.skife.jdbi.v2.StatementContext statementContext ) throws java.sql.SQLException { com.mycompany.pokdedex.db.dto.PokemonAttackDto pokemonAttackDto = new com.mycompany.pokdedex.db.dto.PokemonAttackDto () ; try { pokemonAttackDto.setPokemonId ( resultSet.getInt ( "pokemon_id" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } pokemonAttackDto.setAttackId ( resultSet.getInt ( "attack_id" ) ) ; return pokemonAttackDto; } 
@ org.junit.Test public void lookupAppointmentTest () throws java.text.ParseException { java.lang.String start = "2016-08-05T14:10:00Z"; java.lang.String end = "2016-08-05T14:40:00Z"; try { createAppointment ( TESTDOC1, TESTPAT1, start, end ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.sergey.restclinic.resources.AppointmentResource a = new com.sergey.restclinic.resources.AppointmentResource () ; com.sergey.restclinic.models.Doctor doctor = a.lookupDoctor ( TESTDOC1 ) ; com.sergey.restclinic.models.Patient patient = a.lookupPatient ( TESTPAT1 ) ; java.util.List<com.sergey.restclinic.models.Appointment> apts = a.lookupAppointment ( doctor, patient, start, end ) ; org.junit.Assert.assertEquals ( 2, apts.size () ) ; } 
public static void main ( java.lang.String[] args ) { java.util.Map apple2 = new java.util.Map ( "2apples.txt" ) ; java.util.Map apple10 = new java.util.Map ( "10apples.txt" ) ; NearestNeighbor solve2 = new NearestNeighbor ( apple2 ) ; NearestNeighbor solve10 = new NearestNeighbor ( apple10 ) ; try { solve2.solve () ; } catch ( Exception ex ) { ex.printStackTrace () ; } solve10.solve () ; java.lang.System.out.println ( solve2.getDist () ) ; java.lang.System.out.println ( solve10.getDist () ) ; } 
@ java.lang.Override public android.view.View getView ( int position, android.view.View convertView, android.view.ViewGroup parent ) { android.view.View view = super.getView ( position, convertView, parent ) ; android.widget.TextView text1 = ( ( android.widget.TextView ) ( view.findViewById ( android.R.id.text1 ) ) ) ; android.widget.TextView text2 = ( ( android.widget.TextView ) ( view.findViewById ( android.R.id.text2 ) ) ) ; try { text1.setText ( recipes.get ( position ) .getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } text2.setText ( recipes.get ( position ) .getComments () ) ; return view; } 
@ java.lang.Override public void onResponse ( @android.support.annotation.NonNull android.content.Context ctx, com.cardinfolink.madgazescan.model.StateModel<java.util.ArrayList<com.cardinfolink.madgazescan.model.UserModel>> data ) { java.lang.String userId = null; try { if ( ( ( data != null ) & ( ( data.getStatus () ) == ( com.cardinfolink.madgazescan.api.ResponseCode.SUCCESS ) ) ) & ( com.cardinfolink.madgazescan.utils.CollectionUtils.isValid ( data.getData () ) ) ) { userId = data.getData () .get ( 0 ) .getUserId () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String url = generateGlassUrl ( merchantCode, userId ) ; startWebActivity ( url ) ; } 
public static synchronized void putString ( android.content.Context context, java.lang.String key, java.lang.String value, boolean commit ) { ds.framework.v4.Settings.ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor.putString ( key, value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor.commit () ; } try { if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings.put ( key, value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess () { android.app.Fragment f = getFragmentManager () .findFragmentByTag ( "Video" ) ; com.gmail.markdevw.wetube.fragments.VideoListFragment vlf = ( ( com.gmail.markdevw.wetube.fragments.VideoListFragment ) ( f ) ) ; vlf.getVideoItemAdapter () .notifyDataSetChanged () ; try { vlf.getRecyclerView () .scrollToPosition ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { try { switch ( position ) { case 0: return com.example.gil.myweather.weather.control.WeatherFragment.newInstance ( 1 ) ; case 1: return com.example.gil.myweather.weather.control.WeatherFragment.newInstance ( 2 ) ; case 2: return com.example.gil.myweather.weather.ui.WeatherListFragment.newInstance ( 10 ) ; default: return com.example.gil.myweather.weather.control.WeatherFragment.newInstance ( 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void loadEmails ( java.util.List<me.jamiethompson.forgeaccount.Data.EmailMessage> emails ) { if ( ! ( emails.isEmpty () ) ) { emailList.setAdapter ( null ) ; this.emailMessages = emails; } try { hideEmailsProgress () ; } catch ( Exception ex ) { ex.printStackTrace () ; } me.jamiethompson.forgeaccount.ListView.EmailListAdapter adapter = new me.jamiethompson.forgeaccount.ListView.EmailListAdapter ( me.jamiethompson.forgeaccount.TabActivity.GeneratorFragment.context, R.layout.item_email, this.emailMessages ) ; emailList.setAdapter ( adapter ) ; me.jamiethompson.forgeaccount.TabActivity.GeneratorFragment.setListViewHeightBasedOnChildren ( emailList ) ; } 
protected java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { try { if ( ( source.getEnclosingType () ) != null ) { return ( ( getName ( source.getEnclosingType () ) ) + "_" ) + ( source.getSimpleSourceName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return source.getSimpleSourceName () ; } 
@ com.fasterxml.jackson.annotation.JsonIgnore public void checkStatus () { if ( ( holes ) == null ) { this.status = PatternStatus.READY; return; } try { for ( businessentities.PatternHole aHole : holes ) { if ( ( ( aHole.getPatternAssigned () ) == null ) || ( aHole.getPatternAssigned () .isEmpty () ) ) { this.status = PatternStatus.WIP; return; } } } catch ( Exception ex ) { ex.printStackTrace () ; } this.status = PatternStatus.READY; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { cleanSlate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( i == 0 ) a1.cak.moore.cak_finale.Create.super.onBackPressed () ; if ( i == 2 ) { cleanSlate () ; android.widget.Toast.makeText ( context, R.string.newFile, Toast.LENGTH_SHORT ) .show () ; } dialog.dismiss () ; } 
public static void writeDictionary ( java.lang.String dictionaryLocation ) throws java.io.IOException { java.util.HashMap<java.lang.String, java.lang.Object> dict = new java.util.HashMap<java.lang.String, java.lang.Object> () ; java.util.Scanner read = new java.util.Scanner ( new java.io.FileReader ( dictionaryLocation ) ) ; try { while ( read.hasNext () ) { java.lang.String word = read.next () ; dict.put ( word, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } SpellChecker.dictionary = dict; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; mActivityContext = getActivity () ; mApplicationContext = getActivity () .getApplicationContext () ; try { if ( ( getArguments () ) != null ) { mCategoryName = getArguments () .getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_NAME ) ; mCategoryFilters = getArguments () .getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_FILTER ) ; mSearchQuery = getArguments () .getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.SEARCH_QUERY ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mUserActionListner = new com.pratilipi.mobile.android.PratilipiList.PratilipiListPresenter ( mActivityContext, this ) ; mPratilipiListAdapter = new com.pratilipi.mobile.android.PratilipiList.PratilipiListAdapter ( mActivityContext, this, mSearchQuery ) ; } 
public void onClick ( android.view.View v ) { android.util.SparseBooleanArray checked = daysList.getCheckedItemPositions () ; daysSelected = new java.util.ArrayList<java.lang.Integer> () ; try { for ( int i = 0; i < ( checked.size () ) ; i++ ) { daysSelected.add ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.headBackToMainScreen () ; } 
public void testDescriptor () throws java.lang.Exception { org.datacleaner.descriptors.AnalyzerDescriptor<?> desc = org.datacleaner.descriptors.Descriptors.ofAnalyzer ( org.datacleaner.beans.valuedist.ValueDistributionAnalyzer.class ) ; assertEquals ( 0, desc.getInitializeMethods () .size () ) ; assertEquals ( 6, desc.getConfiguredProperties () .size () ) ; try { assertEquals ( 1, desc.getProvidedProperties () .size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( "Value distribution", desc.getDisplayName () ) ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent e ) { root.getChildren () .remove ( makeMove ) ; spacesToMove = ( ( int ) ( ( java.lang.Math.random () ) * 3 ) ) + 1; targetX = control.tileList.get ( ( ( curSpace ) + 1 ) ) .x; try { targetY = control.tileList.get ( ( ( curSpace ) + 1 ) ) .y; } catch ( Exception ex ) { ex.printStackTrace () ; } startNanoTime = java.lang.System.nanoTime () ; isRolling = true; } 
private boolean deliverLevelParts ( com.lappard.android.level.LevelCreator.PartAvailableListener listener ) { try { if ( ( levelParts.size () ) > ( deliveredParts ) ) { java.util.List<com.badlogic.gdx.scenes.scene2d.Actor> result = createActors ( levelParts.get ( deliveredParts ) ) ; ( deliveredParts ) ++; listener.onPartAvailable ( result ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder, id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data, int position ) { try { beratViewHolder.setName ( data.getTitle () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } beratViewHolder.setText ( data.getDesc () ) ; beratViewHolder.setAbjad ( data.getTitle () .substring ( 0, 1 ) ) ; } 
public boolean removeClient ( de.dhbwka.java.bombercat.Client client, java.util.Map<java.lang.String, de.dhbwka.java.bombercat.Lobby> lobbies ) { boolean result = false; if ( lobbyLeader.equals ( client ) ) { deleteLobby ( lobbies ) ; result = true; } else { result = clients.remove ( client ) ; client.setLobby ( null ) ; result = true; } try { if ( result ) { broadcastPlayers () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
private int compareNumOfAllocations ( com.example.nickozoulis.teamproj.domain.Referee lRef, com.example.nickozoulis.teamproj.domain.Referee rRef ) { if ( ( lRef.getNumOfMatchAllocated () ) > ( rRef.getNumOfMatchAllocated () ) ) return 1; try { if ( ( lRef.getNumOfMatchAllocated () ) < ( rRef.getNumOfMatchAllocated () ) ) return -1; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( lRef.getNumOfMatchAllocated () ) == ( rRef.getNumOfMatchAllocated () ) ) return 0; return 0; } 
public void mouseAction ( java.awt.event.MouseEvent e ) { try { if ( e.isPopupTrigger () ) { org.parosproxy.paros.view.View.getSingleton () .getPopupMenu () .show ( e.getComponent () , e.getX () , e.getY () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected boolean updateVideoSize ( int width, int height ) { try { matrixManager.setIntrinsicVideoSize ( width, height ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateMatrixOnLayout () ; videoSize.x = width; videoSize.y = height; return ! ( ( width == 0 ) || ( height == 0 ) ) ; } 
public void init () { if ( Heart.Heart_Core.initialized ) { return; } if ( ! ( headless ) ) { initGUI () ; redirectSystemStreams () ; } initVariables () ; initCfg () ; initLog () ; initMediaManager () ; try { initPatchThread () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int findIndexFromKey ( K key ) { try { for ( int i = 0; i < ( internalMap.size () ) ; i++ ) { if ( internalMap.get ( i ) .getKey () .equals ( key ) ) return i; } } catch ( Exception ex ) { ex.printStackTrace () ; } return -1; } 
public void trickOver () { for ( models.Card card : model.getCardsInPlay () .getAllCards () ) { models.Card c = card; } javax.swing.JOptionPane.showMessageDialog ( view.getFrame () , "Trick over" ) ; clearTable () ; try { if ( model.isHandOver () ) { handOver () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args[0] ) ) ; try { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper.reload () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.woalk.apps.xposed.notifcount.XposedMod.autoApplyNumber ( sbn.getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper.getSetting ( sbn.getPackageName () ) ) ; } 
public void setMaxCount ( java.lang.Integer max ) { for ( int i = 0; i <= ( max + 1 ) ; i++ ) { itemList.add ( i ) ; } maxItems = max; dataAdapter.setPagesNumber ( itemList ) ; try { currentPageListView.setAdapter ( dataAdapter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } maxPages.setText ( max.toString () ) ; } 
private void checkAndAdd ( java.util.Set<java.lang.String> classes, java.lang.String className ) { if ( ( this.excludes ) != null ) for ( java.lang.String excl : this.excludes ) { if ( excl.equals ( className ) ) return; if ( excl.endsWith ( ".*" ) ) { java.lang.String baseName = excl.substring ( 0, ( ( excl.length () ) - 1 ) ) ; if ( className.startsWith ( baseName ) ) return; } } try { classes.add ( className ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public long insert ( io.keepcoding.rgs.everpobre.model.Notebook notebook ) { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long id = db.getWritableDatabase () .insert ( DBConstants.TABLE_NOTEBOOK, null, this.getContentValues ( notebook ) ) ; try { notebook.setId ( id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } db.close () ; return id; } 
public boolean canPlaceRoadAtLocation ( int playerIndex, client.models.mapdata.EdgeLocation edge ) { try { if ( ( this.getEdgeOwner ( edge ) ) != ( -1 ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Integer[] surrOwners = this.getAdjacentEdgeOwners ( edge ) ; if ( surrOwners == null ) return false; if ( java.util.Arrays.asList ( surrOwners ) .contains ( playerIndex ) ) return true; else return false; } 
@ java.lang.Override public void onBackPressed () { android.support.v4.app.Fragment fm = getSupportFragmentManager () .findFragmentById ( R.id.frame_container ) ; try { if ( fm instanceof com.lucazanrosso.anguriara.CalendarFragment ) finish () ; else if ( ! ( fm instanceof com.lucazanrosso.anguriara.DayFragment ) ) getSupportFragmentManager () .popBackStack ( "secondary", FragmentManager.POP_BACK_STACK_INCLUSIVE ) ; else getSupportFragmentManager () .popBackStack () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void backupAllMenuItemAction () { int response = mainView.showConfirmationDialog ( "Back up vocab files", "This will overwrite all previous backup files. Are you sure?" ) ; try { if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist.getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist, file ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void readFields ( java.io.DataInput in ) throws java.io.IOException { int size = in.readInt () ; if ( size == 0 ) { shortestpath = null; return; } shortestpath = new int[size]; try { for ( int i = 0; i < size; i++ ) { shortestpath[i] = in.readInt () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.apache.cassandra.db.RowIndexEntry<org.apache.cassandra.io.sstable.IndexInfo> deserializeForCache ( org.apache.cassandra.io.util.DataInputPlus in ) throws java.io.IOException { try { assert version.storeRows () ; } catch ( Exception ex ) { ex.printStackTrace () ; } long position = in.readUnsignedVInt () ; switch ( in.readByte () ) { case org.apache.cassandra.db.RowIndexEntry.CACHE_NOT_INDEXED: return new org.apache.cassandra.db.RowIndexEntry<> ( position ) ; case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED: return new org.apache.cassandra.db.RowIndexEntry.IndexedEntry ( position, in, idxInfoSerializer, version ) ; case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED_SHALLOW: return new org.apache.cassandra.db.RowIndexEntry.ShallowIndexedEntry ( position, in, idxInfoSerializer ) ; default: throw new java.lang.AssertionError () ; } } 
@ org.junit.Test public void shouldReturnNullDigestOnPartlyOverlappingWrites () throws java.io.IOException { try { chksumChannel.write ( buffers[1], blocksize ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } chksumChannel.write ( buffers[0], ( ( blocksize ) - 1 ) ) ; if ( ( blocksize ) == 1 ) { fail ( "Pick a blocksize > 1 for testing correct handling of partly overlapping writes!" ) ; } assertThat ( chksumChannel.getChecksum () , equalTo ( null ) ) ; } 
@ org.testng.annotations.Test public void testListUserAssociations () throws java.lang.Exception { org.wso2.is.portal.user.client.association.FederatedAccountAssociationClientService userAccountAssociationClientService = getFederatedAccountAssociationClientService () ; org.wso2.carbon.security.caas.user.core.bean.User testUser = new org.wso2.carbon.security.caas.user.core.bean.User.UserBuilder () .setUserId ( "testUser" ) .setIdentityStore ( new org.wso2.carbon.security.caas.user.core.store.IdentityStoreImpl () ) .setAuthorizationStore ( new org.wso2.carbon.security.caas.user.core.store.AuthorizationStoreImpl () ) .setClaimManager ( new org.wso2.carbon.security.caas.user.core.claim.InMemoryClaimManager () ) .build () ; try { org.testng.Assert.assertNotNull ( userAccountAssociationClientService.listUserAssociations ( testUser ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setCoordinates ( dev.eyesless.simple_weather_for_fishermans.geocoding_responce_classes.Location location ) { try { if ( ( location.getLastlocation () ) != null ) { setAutocompleted ( location.getLastlocation () ) ; cfinterface.setDefoultLoc () ; cfinterface.setLocUnavaliable () ; } else { cfinterface.setCoords ( ( ( ( java.lang.String.valueOf ( location.getLat () ) ) + " and " ) + ( java.lang.String.valueOf ( location.getLng () ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void intalizeDrawer () { try { moveDrawerToTop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mDrawerLayout = ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) ; menuItems = getResources () .getStringArray ( R.array.side_menu_items ) ; mDrawerList = ( ( android.widget.ListView ) ( findViewById ( R.id.left_drawer ) ) ) ; mDrawerLayout.setDrawerShadow ( R.drawable.drawer_shadow, GravityCompat.START ) ; slideMenuAdapter = new com.svs.hztb.Adapters.SlideMenuAdapter ( getApplicationContext () , menuItems, this ) ; mDrawerList.setAdapter ( slideMenuAdapter ) ; } 
private java.lang.String getField ( java.util.Map<java.lang.String, java.lang.Object> profile ) { java.util.List<java.lang.String> map = ( ( java.util.List<java.lang.String> ) ( profile.get ( "summary" ) ) ) ; try { if ( ( map != null ) && ( ( map.size () ) >= 2 ) ) { return map.get ( 1 ) .toString () ; } else { return ""; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStop () { org.acra.ACRA.getErrorReporter () .putCustomData ( "MainActivity.onStop () ", "callback method was invoked" ) ; android.util.Log.i ( ro.pub.acs.mobiway.gui.main.MainActivity.TAG, "onStop () callback method was invoked" ) ; try { if ( ( ( googleApiClient ) != null ) && ( googleApiClient.isConnected () ) ) { stopLocationUpdates () ; googleApiClient.disconnect () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onStop () ; } 
private static void compareHands ( java.util.List<java.lang.Integer> x, java.util.List<java.lang.Integer> y, boolean[] a, boolean[] b ) { int buildValue1 = week1Problems.P6.findValue ( a ) ; int buildValue2 = week1Problems.P6.findValue ( b ) ; try { if ( buildValue1 > buildValue2 ) { java.lang.System.out.println ( "Player 1 wins" ) ; } else if ( buildValue1 == buildValue2 ) { week1Problems.P6.compareHigh ( x, y ) ; } else { java.lang.System.out.println ( "Player 2 wins" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void resetViewport () { final lecho.lib.hellocharts.model.Viewport v = new lecho.lib.hellocharts.model.Viewport ( chart.getMaximumViewport () ) ; v.bottom = ( edu.zucc.xk31401419.mycurrencies.utils.MathUtil.getMaxAndMin ( rateValuesTab ) [1] ) * ( ( float ) ( 0.9 ) ) ; v.top = ( edu.zucc.xk31401419.mycurrencies.utils.MathUtil.getMaxAndMin ( rateValuesTab ) [0] ) * ( ( float ) ( 1.1 ) ) ; v.left = 0; v.right = ( numberOfPoints ) - 1; chart.setMaximumViewport ( v ) ; try { chart.setCurrentViewport ( v ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
java.util.HashSet<uialgebra.algebra.UIATokenElement> getAllTop () { java.util.HashSet<uialgebra.algebra.UIATokenElement> erg = new java.util.HashSet<uialgebra.algebra.UIATokenElement> () ; erg.add ( this ) ; try { if ( ! ( getTop () .isLastEdge () ) ) for ( uialgebra.algebra.UIATokenElement elem : getTop () .getLeftsideElements () ) erg.addAll ( elem.getAllTop () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return erg; } 
public static java.lang.String format ( final int year, final int month, final int day, final java.lang.String pattern ) { final java.util.Calendar cal = java.util.Calendar.getInstance ( java.util.TimeZone.getTimeZone ( "UTC" ) ) ; cal.set ( java.util.Calendar.YEAR, year ) ; try { cal.set ( java.util.Calendar.MONTH, ( month - 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cal.set ( java.util.Calendar.DAY_OF_MONTH, day ) ; return new java.text.SimpleDateFormat ( pattern ) .format ( cal.getTime () ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_chat ) ; if ( ! ( checkServiceAlive () ) ) { return; } mChatView.setLeftBubbleColor ( Color.WHITE ) ; mChatView.setSendIcon ( R.drawable.ic_action_send ) ; mChatView.setRightMessageTextColor ( Color.WHITE ) ; mChatView.setLeftMessageTextColor ( Color.BLACK ) ; mChatView.setUsernameTextColor ( Color.BLACK ) ; mChatView.setSendTimeTextColor ( Color.BLACK ) ; mChatView.setDateSeparatorColor ( Color.WHITE ) ; Reflash () ; } 
@ java.lang.Override public boolean createStudent ( java.lang.String userID, java.lang.String pass, java.lang.String name ) { try { if ( user.isSet () ) { if ( ( user.get () .access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( userID, pass, name ) ; return this.db.putStudent ( s ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public static java.lang.String omitEveryOther ( java.lang.String word ) { boolean keepCurrent = true; int i = 0; java.lang.String newSpeak = ""; try { while ( i < ( word.length () ) ) { if ( keepCurrent ) { newSpeak += java.lang.String.valueOf ( word.charAt ( i ) ) ; keepCurrent = false; } else { keepCurrent = true; } i++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return newSpeak; } 
@ java.lang.Override public void onBarDelete ( int total ) { score += total; callback.onScoreChange ( score ) ; if ( ( score ) >= ( ( level ) * ( home.tetris.Scene.SCORE_PER_LEVEL ) ) ) { ( level ) ++; sound.play ( Sound.LEVEL_UP ) ; callback.onLevelUp ( level ) ; } try { deletingAnimation.falling ( total ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<ralgorithm.State> pmove () { java.util.List<ralgorithm.State> states = new java.util.ArrayList<ralgorithm.State> () ; ralgorithm.State state; while ( true ) { state = step () ; if ( state == null ) { break; } states.add ( state ) ; } try { for ( ralgorithm.Movement m : moves ) { m.finalizeMove () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return states; } 
@ java.lang.Override public void putAll ( java.util.Map<? extends java.lang.String, ? extends K> add ) { try { for ( java.util.Map.Entry<? extends java.lang.String, ? extends K> entry : add.entrySet () ) { put ( entry.getKey () , entry.getValue () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean isMonth ( java.lang.String nextWord ) { boolean ans = false; try { for ( int i = 1; i < ( monthsInYear.length ) ; i++ ) { if ( nextWord.contains ( monthsInYear[i] ) ) { ans = true; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ans; } 
@ java.lang.Override @java.lang.SuppressWarnings ( value = "unchecked" ) public java.util.List<org.n52.series.api.v1.db.da.beans.ProcedureEntity> getAllInstances ( org.n52.series.api.v1.db.da.DbQuery parameters ) throws org.n52.series.api.v1.db.da.DataAccessException { org.hibernate.Criteria criteria = getDefaultCriteria ( "procedure" ) ; if ( hasTranslation ( parameters, org.n52.series.api.v1.db.da.beans.I18nProcedureEntity.class ) ) { parameters.addLocaleTo ( criteria, org.n52.series.api.v1.db.da.beans.I18nProcedureEntity.class ) ; } parameters.addDetachedFilters ( "procedure", criteria ) ; try { parameters.addPagingTo ( criteria ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( java.util.List<org.n52.series.api.v1.db.da.beans.ProcedureEntity> ) ( criteria.list () ) ) ; } 
public int getValue ( gameplay.Card card ) { int s = card.getSuit () ; int val; try { switch ( s ) { case 0: val = this.spades.indexOf ( card ) ; break; case 1: val = this.hearts.indexOf ( card ) ; break; case 2: val = this.clubs.indexOf ( card ) ; break; case 3: val = this.diamonds.indexOf ( card ) ; break; default: val = 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } return val; } 
private boolean editTask ( java.lang.String rawInput ) { java.util.ArrayList<java.lang.String> inputParts = breakString ( rawInput ) ; int taskID = convertToInt ( getTaskID ( inputParts ) ) ; java.lang.String date = getDateFromRaw ( inputParts ) ; try { if ( isInvalidID ( taskID ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return logic.editTask ( taskID, date ) ; } 
@ org.junit.Test public void testGetMinYWorld () throws java.lang.Exception { try { bbox.addHitBox ( new com.almasb.fxgl.physics.HitBox ( "ARM", new javafx.geometry.Point2D ( 0, 20 ) , com.almasb.fxgl.physics.BoundingShape.box ( 40, 40 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( 20, bbox.getMinYWorld () , 0 ) ; position.translateY ( 100 ) ; assertEquals ( 120, bbox.getMinYWorld () , 0 ) ; } 
public static java.lang.String toCSVTime ( java.lang.Object obj, org.apache.sqoop.schema.type.Column col ) { assert col instanceof org.apache.sqoop.connector.common.Time; assert obj instanceof org.joda.time.LocalTime; try { if ( ( ( org.apache.sqoop.connector.common.Time ) ( col ) ) .hasFraction () ) { return org.apache.sqoop.connector.common.SqoopIDFUtils.encloseWithQuotes ( org.apache.sqoop.connector.common.SqoopIDFUtils.tfWithFraction.print ( ( ( org.joda.time.LocalTime ) ( obj ) ) ) ) ; } else { return org.apache.sqoop.connector.common.SqoopIDFUtils.encloseWithQuotes ( org.apache.sqoop.connector.common.SqoopIDFUtils.tfWithNoFraction.print ( ( ( org.joda.time.LocalTime ) ( obj ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void act ( float delta ) { taken += delta; try { if ( ( taken ) > ( duration ) ) { callActionCompletedListener () ; if ( ( action ) != null ) { action.act ( delta ) ; if ( action.isDone () ) action.callActionCompletedListener () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setBooleanMetadata ( java.lang.String key, boolean value ) { if ( ( ( ( sender ) == null ) || ( ( sender.getBlock () ) == null ) ) || ( ( sender.getBlock () .getType () ) == ( org.bukkit.Material.COMMAND ) ) ) { return; } try { sender.getBlock () .setMetadata ( key, new org.bukkit.metadata.FixedMetadataValue ( org.bitbucket.ucchy.undine.UndineMailer.getInstance () , value ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void injectCacheName ( java.lang.Object obj, java.lang.String cacheName ) throws org.apache.ignite.IgniteCheckedException { assert obj != null; if ( log.isDebugEnabled () ) log.debug ( ( "Injecting cache name: " + obj ) ) ; obj = unwrapTarget ( obj ) ; try { inject ( obj, GridResourceIoc.ResourceAnnotation.CACHE_NAME, null, null, cacheName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void executeOnStartActions () { int actionIndexOnStart = java.lang.Integer.parseInt ( sharedPrefs.getString ( getString ( R.string.key_prefActionOnStart ) , java.lang.Integer.toString ( ActionOnStartRandomAyah ) ) ) ; try { if ( actionIndexOnStart == ( ActionOnStartNone ) ) { return; } else if ( actionIndexOnStart == ( ActionOnStartSurahList ) ) { android.content.Intent intent = new android.content.Intent ( this, com.frrahat.quransimple.SuraListActivity.class ) ; startActivityForResult ( intent, REQUEST_SURAH_LIST ) ; } else if ( actionIndexOnStart == ( ActionOnStartRandomAyah ) ) { showARandomAyah = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.view.View v ) { fold () ; popupWindow.dismiss () ; hideUserOptions () ; showPlayerAction ( 0, "Fold" ) ; try { thread.postDelayed ( new java.lang.Runnable () { public void run () { simulateTurns () ; } }, 5000 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addCoupleToSquare ( short square, short coupleNo, short cplPsn ) { com.bgt.core.CoupleGenerator tip = com.bgt.core.Globals.getInstance () .getCoupleGenerator () ; tip.getCouplesInSquare () .setCoupleNo ( square, cplPsn, coupleNo ) ; try { tip.getCouples () .setSelectedForSquare ( coupleNo, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean testActiveClick ( com.google.gwt.user.client.Event e ) { com.google.gwt.dom.client.Element target = e.getEventTarget () .cast () ; com.google.gwt.query.client.GQuery $e = com.google.gwt.query.client.GQuery.$ ( target ) ; try { if ( ( $e.parents ( ( "#" + ( containerId ) ) ) .length () ) > 0 ) { activeField = true; } else { closeField () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public static com.mongodb.MongoClient createClientFromFlumeContext ( org.apache.flume.Context context, java.lang.String prefix ) { java.util.List<com.mongodb.ServerAddress> seeds = org.mapad.google.common.utils.MongoUtils.getSeeds ( context.getString ( ( prefix + ( org.mapad.google.common.utils.MongoUtils.HOSTNAMES ) ) ) ) ; com.mongodb.MongoCredential credential = org.mapad.google.common.utils.MongoUtils.getCredential ( context, prefix ) ; com.mongodb.MongoClient client; try { if ( credential != null ) { client = new com.mongodb.MongoClient ( seeds, java.util.Arrays.asList ( credential ) ) ; } else { client = new com.mongodb.MongoClient ( seeds ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return client; } 
private void updateRippleSize ( int width, int height ) { final int cx = width / 2; final int cy = ( mDual ) ? ( mIcon.getTop () ) + ( mIcon.getHeight () ) : height / 2; final int rad = ( ( int ) ( ( mIcon.getHeight () ) * 1.25F ) ) ; try { mRipple.setHotspotBounds ( ( cx - rad ) , ( cy - rad ) , ( cx + rad ) , ( cy + rad ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void fireBomb ( samueltaylor.classicwarlordprototype.Model.Region r, java.util.List<samueltaylor.classicwarlordprototype.Model.Empire> affectedEmpires, java.util.List<samueltaylor.classicwarlordprototype.Model.Region> affectedRegions ) { try { location.setBomb ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } location = r; if ( ( ( r.getBomb () ) != null ) && ( ( r.getBomb () .getBombtype () ) > ( this.bombtype ) ) ) { this.bombtype = location.getBomb () .getBombtype () ; } location.setBomb ( this ) ; location.detonateBomb ( affectedEmpires, affectedRegions ) ; } 
@ cz.cuni.amis.pogamut.base.communication.worldview.listener.annotation.EventListener ( eventClass = cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled.class ) public void playerKilled ( cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled event ) { try { if ( event.getKiller () .equals ( info.getId () ) ) { updateRisque () ; shoot.stopShooting () ; if ( ( currentWeapon ) != null ) { currentWeapon.upNbKills () ; currentWeapon.updateProbability () ; } target = null; bot.getBotName () .setInfo ( "COLLECT" ) ; now = collect; canPursue = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showWindow ( net.mready.hover.HoverWindow window ) { if ( window.attached ) { return; } try { windowManager.addView ( window.windowView, window.windowLayoutParams ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } window.attached = true; if ( ( powerManager.isScreenOn () ) && ( ! ( keyguardManager.inKeyguardRestrictedInputMode () ) ) ) { window.performStart () ; } } 
public com.kosn.entity.Item checkEquipment ( java.lang.String target ) { java.util.List<com.kosn.entity.Item> equippedItems = new java.util.ArrayList<com.kosn.entity.Item> ( equipment.values () ) ; try { for ( com.kosn.entity.Item checkItem : equippedItems ) { if ( checkItem.getName () .equals ( target ) ) { return checkItem; } } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.kosn.entity.Item checkItem : equippedItems ) { if ( checkItem.getName () .startsWith ( target ) ) { return checkItem; } } return null; } 
public void getAddress () { try { if ( ! ( locationManager.isProviderEnabled ( LocationManager.GPS_PROVIDER ) ) ) { mainLayout.setVisibility ( View.GONE ) ; buildAlertMessageNoGps () ; } else if ( ! ( isConn () ) ) { mainLayout.setVisibility ( View.GONE ) ; buildAlertMessageNoInternet () ; } else { mainLayout.setVisibility ( View.VISIBLE ) ; android.location.LocationListener locationListener = new com.example.weatherapplication.MainActivity.MyLocationListener () ; locationManager.requestLocationUpdates ( LocationManager.GPS_PROVIDER, 0, 0, locationListener ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void apply ( org.eclipse.emf.ecore.EObject element, org.eclipse.xtext.ui.editor.model.edit.IModificationContext context ) throws java.lang.Exception { java.lang.StringBuilder bld = new java.lang.StringBuilder () ; bld.append ( "\"" ) ; try { bld.append ( getResolvedMetadataVersion ( element ) .getMajor () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bld.append ( ".x\"" ) ; context.getXtextDocument () .replace ( issue.getOffset () , issue.getLength () , bld.toString () ) ; } 
@ java.lang.Override protected <T extends java.security.spec.AlgorithmParameterSpec> T engineGetParameterSpec ( final java.lang.Class<T> paramSpec ) throws java.security.spec.InvalidParameterSpecException { try { if ( paramSpec.equals ( javax.crypto.spec.IvParameterSpec.class ) ) { return ( ( T ) ( new javax.crypto.spec.IvParameterSpec ( iv ) ) ) ; } else { throw new java.security.spec.InvalidParameterSpecException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getLayoutRes () ) > 0 ) { setContentView ( R.layout.activity_base ) ; android.view.View content = android.view.LayoutInflater.from ( this ) .inflate ( getLayoutRes () , root, false ) ; if ( hasTitle () ) { android.support.v7.widget.Toolbar toolbar = inflateToolbar () ; root.addView ( toolbar ) ; } root.addView ( content ) ; butterknife.ButterKnife.bind ( this ) ; } } 
public double slopeTo ( Point that ) { try { if ( ( this.compareTo ( that ) ) == 0 ) return java.lang.Double.NEGATIVE_INFINITY; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( this.x ) == ( that.x ) ) return java.lang.Double.POSITIVE_INFINITY; if ( ( this.y ) == ( that.y ) ) return +0.0; return ( ( double ) ( ( that.y ) - ( this.y ) ) ) / ( ( double ) ( ( that.x ) - ( this.x ) ) ) ; } 
@ java.lang.Override public void printData () { java.lang.System.out.println ( ( "=> Directory= " + ( this.path ) ) ) ; try { if ( ( this.files.size () ) > 0 ) java.lang.System.out.println ( " Files: " ) ; else java.lang.System.out.println ( " <no files>" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < ( this.files.size () ) ; ++i ) java.lang.System.out.println ( ( " - " + ( this.files.get ( i ) ) ) ) ; } 
public static boolean isInvEmpty ( net.minecraft.inventory.IInventory stack ) { boolean empty = true; if ( stack == null ) return true; try { for ( int i = 0; i < ( stack.getSizeInventory () ) ; i++ ) { if ( ! ( stack.getStackInSlot ( i ) .isEmpty () ) ) return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void setProperties ( org.openhab.binding.max.internal.message.F_Message message ) { ntpServer1 = message.getNtpServer1 () ; ntpServer2 = message.getNtpServer2 () ; org.eclipse.smarthome.config.core.Configuration configuration = editConfiguration () ; configuration.put ( org.openhab.binding.max.internal.handler.PROPERTY_NTP_SERVER1, ntpServer1 ) ; try { configuration.put ( org.openhab.binding.max.internal.handler.PROPERTY_NTP_SERVER2, ntpServer2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateConfiguration ( configuration ) ; logger.debug ( "NTP properties updated" ) ; } 
@ java.lang.Override public com.spanish_inquisition.battleship.server.game_states.GameState transform () { com.spanish_inquisition.battleship.server.Player currentPlayer = getCurrentPlayer () ; try { if ( ! ( shootIfPlayerSentValidMessage ( currentPlayer ) ) ) { return ! ( didPlayerWon ( currentPlayer ) ) ? this : new com.spanish_inquisition.battleship.server.game_states.ResultState ( players, requestBus ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ! ( didPlayerWon ( currentPlayer ) ) ? new com.spanish_inquisition.battleship.server.game_states.PlayerActionState ( players, requestBus ) : new com.spanish_inquisition.battleship.server.game_states.ResultState ( players, requestBus ) ; } 
public void run () { try { if ( ! ( discoveryReplyList.contains ( packetData ) ) ) { android.widget.ListView lvDiscoveryReplies = ( ( android.widget.ListView ) ( findViewById ( R.id.listView_DiscoveryReplies ) ) ) ; android.widget.ArrayAdapter<java.lang.String> adapter = ( ( android.widget.ArrayAdapter<java.lang.String> ) ( lvDiscoveryReplies.getAdapter () ) ) ; adapter.add ( packetData ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.Class<?> getSuperClassOnSet ( java.util.Set<java.lang.Class<?>> set, java.lang.Class<?> clazz ) { java.lang.Class<?> found = null; try { for ( java.lang.Class<?> aux : set ) { if ( ( aux.isAssignableFrom ( clazz ) ) && ( ( found == null ) || ( aux.isAssignableFrom ( found ) ) ) ) { found = aux; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return found == null ? clazz : found; } 
@ java.lang.Override public void touchUp ( com.badlogic.gdx.scenes.scene2d.InputEvent event, float x, float y, int pointer, int button ) { try { back.setBounds ( ( ( back.getX () ) - 5 ) , back.getY () , ( ( back.getWidth () ) + 5 ) , ( ( back.getHeight () ) + 5 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } game.mainMenuScreen = new by.randomen.screens.MainMenuScreen ( game ) ; game.setScreen ( game.mainMenuScreen ) ; game.settingsMScreen.dispose () ; } 
@ java.lang.Override public org.exist.xquery.value.Sequence postEval ( org.exist.xquery.value.Sequence seq ) throws org.exist.xquery.XPathException { if ( ( orderedResult ) == null ) { return seq; } try { orderedResult.sort () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.exist.xquery.value.Sequence result = orderedResult; orderedResult = null; if ( ( getReturnExpression () ) instanceof org.exist.xquery.FLWORClause ) { result = ( ( org.exist.xquery.FLWORClause ) ( getReturnExpression () ) ) .postEval ( seq ) ; } return super.postEval ( result ) ; } 
public void updateReel ( double x, double y, double orientationReelle, boolean enMarcheAvant, double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle; courbureGeometrique = courbureReelle; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = -courbureReelle; } try { position.setX ( x ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } position.setY ( y ) ; this.orientationReelle = orientationReelle; this.enMarcheAvant = enMarcheAvant; this.courbureReelle = courbureReelle; } 
protected net.instant.util.fileprod.ProducerJob produceInner ( java.lang.String name ) { net.instant.util.fileprod.ProducerJob ret = null; if ( ( fs ) != null ) ret = fs.produce ( name ) ; try { if ( ( ( rs ) != null ) && ( ret == null ) ) ret = rs.produce ( name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ret; } 
public java.util.List<java.lang.String> asListString ( javax.naming.directory.Attribute att ) throws javax.naming.NamingException { java.util.List<java.lang.String> res = new java.util.LinkedList<java.lang.String> () ; if ( att == null ) return res; try { for ( int i = 0; i < ( att.size () ) ; i++ ) res.add ( ( ( java.lang.String ) ( att.get ( i ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return res; } 
private void stopScan () { try { if ( mIsScanning ) { android.util.Log.v ( Utils.TAG, "Stopping scan" ) ; final no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat scanner = no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat.getScanner () ; scanner.stopScan ( scanCallback ) ; mScanHandler.removeCallbacks ( mBleScannerTimeoutRunnable ) ; mIsScanning = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void calculateLength () { try { if ( ( orientation ) == ( Sens.VERTICAL ) ) { length = ( ( end.getRow () ) - ( start.getRow () ) ) + 1; } else if ( ( orientation ) == ( Sens.HORIZONTAL ) ) { length = ( ( end.getCol () ) - ( start.getCol () ) ) + 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> leaveChannel ( com.ullink.slack.simpleslackapi.SlackChannel channel ) { com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> ( getNextMessageId () ) ; java.util.Map<java.lang.String, java.lang.String> arguments = new java.util.HashMap<> () ; try { arguments.put ( "token", authToken ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } arguments.put ( "channel", channel.getId () ) ; postSlackCommand ( arguments, com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_LEAVE_COMMAND, handle ) ; return handle; } 
@ java.lang.Override public void landOnField ( Players.PlayerController playerController, Fields.FieldController fieldController ) { Players.Player jailedPlayer = playerController.getCurrentPlayer () ; jailedPlayer.setJail ( true ) ; try { Game.GameController.movement ( ( ( jailedPlayer.getPlace () ) + 1 ) , 11, jailedPlayer, fieldController, playerController ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } jailedPlayer.setPlace ( 10 ) ; } 
private void getClassModifiers ( java.lang.Class clazz, int numberOfTabs ) { getTabs ( numberOfTabs ) ; java.lang.String modifiers = java.lang.reflect.Modifier.toString ( clazz.getModifiers () ) ; try { if ( modifiers.isEmpty () ) { sb.append ( "class " ) .append ( clazz.getSimpleName () ) ; } else { sb.append ( modifiers ) .append ( " class " ) .append ( clazz.getSimpleName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void stealSourceAsFields ( java.util.Map<java.lang.String, java.lang.Object> sourceAsMap, final java.util.Map<java.lang.String, org.elasticsearch.search.SearchHitField> fields, final java.util.Set<java.lang.String> included ) { if ( ( ( ( ( sourceAsMap == null ) || ( fields == null ) ) || ( sourceAsMap.isEmpty () ) ) || ( included == null ) ) || ( included.isEmpty () ) ) { return; } try { org.elasticsearch.search.fetch.source.FetchSourceSubPhase.stealSourceAsFields ( null, sourceAsMap, fields, included ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void findSubIndexForColor ( int topIndex, int color ) { if ( ( ( getBuilder () .mColorsSub ) == null ) || ( ( ( getBuilder () .mColorsSub.length ) - 1 ) < topIndex ) ) return; int[] subColors = getBuilder () .mColorsSub[topIndex]; try { for ( int subIndex = 0; subIndex < ( subColors.length ) ; subIndex++ ) { if ( ( subColors[subIndex] ) == color ) { subIndex ( subIndex ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int findPositionById ( android.database.Cursor list, long id ) { if ( list == null ) return -1; try { while ( list.moveToNext () ) { if ( ( list.getLong ( 0 ) ) == id ) { return list.getPosition () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return -1; } 
public void removeCell ( java.lang.String id ) { elegit.treefx.Cell cell = cellMap.get ( id ) ; try { if ( ( cell != null ) && ( cellMap.containsKey ( cell.getCellId () ) ) ) { elegit.treefx.Cell oldCell = cellMap.remove ( cell.getCellId () ) ; for ( elegit.treefx.Cell p : cell.getCellParents () ) { p.removeCellChild ( oldCell ) ; } removedCells.add ( oldCell ) ; this.removeEdges ( oldCell ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setTemplateID ( java.util.Map mobData, com.nkoiv.mists.game.gameobject.MapObject mob ) { try { if ( mobData.containsKey ( "templateID" ) ) { int templateID = java.lang.Integer.parseInt ( ( ( java.lang.String ) ( mobData.get ( "templateID" ) ) ) ) ; if ( templateID < 1 ) mob.setTemplateID ( getNextFreeID () ) ; else mob.setTemplateID ( templateID ) ; } else { mob.setTemplateID ( getNextFreeID () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { try { if ( cyanogenOTAUpdate != null ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment.getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) .getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate.getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file.exists () ) && ( ! ( settingsManager.containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean createUser ( boolean checkExists ) { try { if ( ( ! ( userDefined () ) ) || ( checkExists && ( userExists () ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } org.avaje.docker.commands.PostgresContainer.log.debug ( "create postgres user {}", dbConfig.getDbUser () ) ; java.lang.ProcessBuilder pb = createRole ( dbConfig.getDbUser () , dbConfig.getDbPassword () ) ; java.util.List<java.lang.String> stdOutLines = org.avaje.docker.commands.process.ProcessHandler.process ( pb ) .getStdOutLines () ; return ( stdOutLines.size () ) == 2; } 
@ org.junit.Test public void testValidateCredentialsPasswordOnly () throws java.lang.Exception { expectedMessages.add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; expectedMessages.add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; final com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder builder = new com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder () ; builder.setHost ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_HOST ) ; builder.setUsername ( "" ) ; builder.setPassword ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_PASSWORD ) ; final com.blackducksoftware.integration.hub.builder.ValidationResults<com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum, com.blackducksoftware.integration.hub.global.HubProxyInfo> result = new com.blackducksoftware.integration.hub.builder.ValidationResults<com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum, com.blackducksoftware.integration.hub.global.HubProxyInfo> () ; builder.validateCredentials ( result ) ; try { org.junit.Assert.assertFalse ( result.isSuccess () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } actualMessages = getMessages ( result ) ; } 
protected static org.glassfish.grizzly.http.server.HttpServer startServer () throws java.io.IOException { final org.glassfish.jersey.server.ResourceConfig rc = new org.glassfish.jersey.server.ResourceConfig () .packages ( "org.wikibrain.atlasify" ) ; rc.register ( org.wikibrain.atlasify.CORSFilter.class ) ; try { java.lang.System.out.println ( "Staring grizzly..." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.glassfish.grizzly.http.server.HttpServer server = org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpServerFactory.createHttpServer ( org.wikibrain.atlasify.AtlasifyServer.baseURI, rc ) ; return server; } 
private void unwrapAndRemoveFromIndex ( java.lang.Object oldValue, com.hazelcast.nio.serialization.Data indexKey ) { try { if ( oldValue instanceof com.hazelcast.query.extractor.MultiResult ) { java.util.List<java.lang.Object> results = ( ( com.hazelcast.query.extractor.MultiResult ) ( oldValue ) ) .getResults () ; for ( java.lang.Object o : results ) { java.lang.Comparable sanitizedValue = sanitizeValue ( o ) ; removeIndexInternal ( sanitizedValue, indexKey ) ; } } else { java.lang.Comparable sanitizedValue = sanitizeValue ( oldValue ) ; removeIndexInternal ( sanitizedValue, indexKey ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Boolean apply ( java.lang.Long bookmarkId ) { boolean result; try { if ( bookmarkId > 0 ) { bookmarksDBAdapter.removeBookmark ( bookmarkId ) ; result = false; } else { bookmarksDBAdapter.addBookmark ( sura, ayah, page ) ; result = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } bookmarksPublishSubject.onNext ( true ) ; return result; } 
public void update ( ru.job4j.model.Item updated ) { try { for ( int i = 0; i < ( this.position ) ; i++ ) { if ( this.items[i].getId () .equals ( updated.getId () ) ) { this.items[i] = updated; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void promote ( com.github.arsenalfcgunners.gappleperms.Rank r ) { rank = r; try { if ( ( rank.isDonor () ) && ( ! ( donorranks.contains ( rank ) ) ) ) { donorranks.add ( rank ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } gp.getRankManager () .setDonorRanks ( uuid, donorranks ) ; gp.getRankManager () .setRank ( uuid, rank ) ; clearPerms () ; givePerms () ; } 
@ org.junit.Test public void testBucketExistsFails () throws io.minio.MinioException, java.io.IOException, java.security.InvalidKeyException, java.security.NoSuchAlgorithmException, org.xmlpull.v1.XmlPullParserException { com.squareup.okhttp.mockwebserver.MockWebServer server = new com.squareup.okhttp.mockwebserver.MockWebServer () ; com.squareup.okhttp.mockwebserver.MockResponse response = new com.squareup.okhttp.mockwebserver.MockResponse () ; response.addHeader ( "Date", "Sun, 29 Jun 2015 22:01:10 GMT" ) ; response.setResponseCode ( 404 ) ; try { server.enqueue ( response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } server.start () ; io.minio.MinioClient client = new io.minio.MinioClient ( server.url ( "" ) ) ; boolean result = client.bucketExists ( "bucket" ) ; org.junit.Assert.assertEquals ( false, result ) ; } 
private void onPlayerStateChange ( @org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.PlayerState int argPlayerStatus ) { if ( ( getEpisode () ) == null ) return; if ( ! ( getEpisode () .equals ( org.bottiger.podcast.SoundWaves.getAppContext ( getContext () ) .getPlaylist () .first () ) ) ) { setStatus ( ExoPlayerWrapper.STATE_READY ) ; return; } try { setStatus ( argPlayerStatus ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.ArrayList<java.lang.String> runSocket ( int packetsMax ) throws java.io.IOException { java.util.ArrayList<java.lang.String> toReturn = new java.util.ArrayList<java.lang.String> () ; try { while ( packetsMax != 0 ) { byte[] rcvdInfo = new byte[10]; java.net.DatagramPacket packet = new java.net.DatagramPacket ( rcvdInfo, rcvdInfo.length ) ; socket.receive ( packet ) ; toReturn.add ( new java.lang.String ( packet.getData () ) ) ; packetsMax--; } } catch ( Exception ex ) { ex.printStackTrace () ; } return toReturn; } 
public void setSongIndex ( int index ) { java.lang.System.out.println ( ( "setSongIndex " + index ) ) ; if ( index != ( this.songIndex ) ) { this.songIndex = index; setBeatmapIndex ( 0 ) ; } nextSongButton.setEnable ( ( index < ( ( Resources.songs.size () ) - 1 ) ) ) ; imageReload () ; try { textReload () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void openSQLConnection () { try { if ( sqlConnection.createConnection () ) { createConnection.setDisable ( true ) ; clear.setDisable ( false ) ; closeConnection.setDisable ( false ) ; sentRequest.setDisable ( false ) ; additionalQueryBox.setDisable ( false ) ; addQueryToCollection.setDisable ( false ) ; openConnection.setDisable ( true ) ; offConnection.setDisable ( false ) ; investigation.setDisable ( false ) ; this.isConnected = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/searchkeyword" ) public java.lang.String searchKeyword ( java.lang.String curusername, java.lang.String keyword, org.springframework.web.servlet.mvc.support.RedirectAttributes attr ) { java.util.List<java.util.HashMap> keywordList = keywordService.selectKeywordByKeyword ( keyword ) ; user = userService.selectUserByName ( curusername ) ; java.util.List<com.chas.model.Aspect> aspectList = aspectService.selectAllAspect () ; attr.addFlashAttribute ( "aspectList", aspectList ) ; try { attr.addFlashAttribute ( "user", user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } attr.addFlashAttribute ( "searchword", keyword ) ; attr.addFlashAttribute ( "keywordList", keywordList ) ; return "redirect:/keyword"; } 
@ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint.class ) public ninja.Result comic ( @ninja.params.PathParam ( value = "user" ) java.lang.String username, @ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User user = userDao.getUser ( username ) ; www.purple.mixxy.models.Comic comic = comicDao.getComic ( username, work ) ; try { java.lang.System.out.println ( user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( user == null ) || ( comic == null ) ) { return ninja.Results.notFound () .template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results.ok () .render ( "comic", comic ) .render ( "user", user ) .html () ; } 
@ java.lang.Override protected void timeStep () throws java.lang.Exception { if ( ! ( semaphore.tryAcquire ( 1, acquireTimeoutMs, java.util.concurrent.TimeUnit.MILLISECONDS ) ) ) { throw new java.lang.RuntimeException () ; } java.lang.Integer key = randomInt ( keyCount ) ; com.hazelcast.core.ICompletableFuture f = ( ( com.hazelcast.core.ICompletableFuture ) ( map.putAsync ( key, key ) ) ) ; try { f.andThen ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( isFinishing () ) { mGoogleApiClient = null; if ( ( customThreadCheckLocation ) != null ) customThreadCheckLocation.stopRunning ( false ) ; if ( ( customThreadCheckGPSState ) != null ) customThreadCheckGPSState.stopRunning ( false ) ; android.support.v4.content.LocalBroadcastManager.getInstance ( this ) .unregisterReceiver ( receiverMaps ) ; } } 
public java.util.ArrayList<java.lang.String> getModulePoolPaths () { java.util.ArrayList<java.lang.String> output = new java.util.ArrayList<java.lang.String> () ; try { if ( ( listofPredecessors.size () ) == 0 ) { return this.getCurrentFilePath () ; } else { for ( Runner.ModulePool mp : listofPredecessors ) { if ( ( mp.getCurrentFilePath () ) != null ) { output.addAll ( mp.getCurrentFilePath () ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return output; } 
public boolean writeData ( byte[] data, int length ) { int written = 0; length = java.lang.Math.min ( length, data.length ) ; try { for ( int i = 0; i < length; i++ ) { if ( ( writeBitsRaw ( org.q3df.demo.Q3HuffmanCoder.huff_paths[ ( 255 & ( data[i] ) ) ], org.q3df.demo.Q3HuffmanCoder.sym_size[ ( 255 & ( data[i] ) ) ] ) ) > 0 ) { written++; } else break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return written == length; } 
public org.apache.shiro.session.Session toSimpleSession () throws java.io.IOException { final org.apache.shiro.session.mgt.SimpleSession simpleSession = new org.apache.shiro.session.mgt.SimpleSession () ; if ( ( recordId ) != null ) { simpleSession.setId ( recordId.toString () ) ; } try { simpleSession.setStartTimestamp ( startTimestamp.toDate () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } simpleSession.setLastAccessTime ( lastAccessTime.toDate () ) ; simpleSession.setTimeout ( timeout ) ; simpleSession.setHost ( host ) ; final java.util.Map attributes = serializer.deserialize ( sessionData ) ; simpleSession.setAttributes ( attributes ) ; return simpleSession; } 
public static <T> java.util.Map<java.lang.String, T> fromBundle ( android.os.Bundle input, java.lang.Class<T> claz ) { try { input.setClassLoader ( claz.getClassLoader () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Map<java.lang.String, T> output = new android.support.v4.util.ArrayMap<java.lang.String, T> () ; for ( java.lang.String key : input.keySet () ) { output.put ( key, ( ( T ) ( input.get ( key ) ) ) ) ; } return output; } 
@ org.junit.Test public void testRemove () { Person test10 = new Person ( "Dave", "Son" ) ; Course course2 = new Course ( "3010", "SYSC" ) ; test10.remove ( course2 ) ; Course[] array2 = test10.getCourses () ; try { if ( ( array2.length ) != 0 ) { fail ( "Remove for the course didn't work" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void resolveClassWithDefaultScope () { java.lang.String match = "import foo;\n" + ( ( ( "\n" + "public class Foo {/*comment*/}\n" ) + "\n" ) + "\n" ) ; de.flapdoodle.codedoc.resolver.java.Reference ref = de.flapdoodle.codedoc.resolver.java.Reference.parse ( "foo.Foo" ) .get () ; de.flapdoodle.codedoc.common.Either<de.flapdoodle.codedoc.CodeSample, java.lang.Error> result = new de.flapdoodle.codedoc.resolver.java.JavaSourceReferenceResolverImpl () .resolve ( ref, code ) ; try { assertTrue ( result.isLeft () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( match, result.left () .code () ) ; assertEquals ( "java", result.left () .type () ) ; } 
private int getPlayerForLine ( final int row, final java.lang.String playerFigure ) { int playerRowCount = 0; try { for ( int i = 0; i < ( board.getRowLength ( row ) ) ; i++ ) { if ( ( ( board.getFigure ( row, i ) ) != null ) && ( ( board.getFigure ( row, i ) .toString () ) == playerFigure ) ) { playerRowCount++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return playerRowCount; } 
@ java.lang.Override public boolean equals ( java.lang.Object other ) { if ( other == null ) return false; if ( ! ( other instanceof model.Team ) ) return false; model.Team team = ( ( model.Team ) ( other ) ) ; try { if ( team.name.equals ( this.name ) ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public org.eclipse.titan.runtime.core.TitanBoolean operatorEquals ( final org.eclipse.titan.runtime.core.TitanUniversalCharString other_value ) { try { mustBound ( "Unbound left operand of charstring element comparison." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } other_value.mustBound ( "Unbound right operand of charstring element comparison." ) ; if ( ( other_value.getValue () .size () ) != 1 ) { return new org.eclipse.titan.runtime.core.TitanBoolean ( false ) ; } return new org.eclipse.titan.runtime.core.TitanBoolean ( get_char () .operatorEquals ( other_value.charAt ( 0 ) ) ) ; } 
protected void appendCgroupsCmds ( java.lang.StringBuilder cmdLine ) { try { if ( cfg.getFrameworkSuperUser () .isPresent () ) { cmdLine.append ( " export TASK_DIR=`basename $PWD`&&" ) ; appendSudo ( cmdLine ) ; cmdLine.append ( ( ( "chown " + ( cfg.getFrameworkUser () .get () ) ) + " " ) ) ; cmdLine.append ( cfg.getCGroupPath () ) ; cmdLine.append ( "/cpu/mesos/$TASK_DIR &&" ) ; } else { org.apache.myriad.scheduler.NMExecutorCLGenImpl.LOGGER.info ( "frameworkSuperUser not enabled ignoring cgroup configuration" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.List<com.google.android.gms.maps.model.LatLng> convertToLatLng ( java.util.List<casak.ru.geofencer.domain.model.Point> points ) { int size = points.size () ; java.util.List<com.google.android.gms.maps.model.LatLng> result = new java.util.ArrayList<> ( size ) ; if ( size == 0 ) { return result; } try { for ( casak.ru.geofencer.domain.model.Point point : points ) { result.add ( casak.ru.geofencer.presentation.converters.LatLngConverter.convertToLatLng ( point ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { android.content.ContentValues valuesToInsert = new android.content.ContentValues () ; valuesToInsert.put ( "measuredAt", ( ( android.widget.EditText ) ( promptView.findViewById ( R.id.datetime ) ) ) .getText () .toString () ) ; valuesToInsert.put ( "glucoseValue", java.lang.Integer.parseInt ( ( ( android.widget.EditText ) ( promptView.findViewById ( R.id.measurement ) ) ) .getText () .toString () ) ) ; try { db.insert ( "BloodGlucose", null, valuesToInsert ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dialog.dismiss () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { insertDBData ( com.sweproject.calorietracker.DataObjects.Food_Day.class, this, new com.sweproject.calorietracker.DataObjects.Food_Day ( FragmentCalendar.currentDay.getId () , ( ( mServingSpin.getSelectedItemPosition () ) + 1 ) , mServingSizes.get ( mSelectedIndex ) .getId () ) , false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void printMonsters ( net.slashie.libjcsi.wswing.WSwingConsoleInterface j, characters.active.ActiveCharacter user ) { try { for ( map.Room room : getRooms () ) { if ( user.getRoom () .equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room.getMonsters () ) { if ( util.RandUtil.containsTuple ( enemy.getPosition () , user.getVisiblePositions () ) ) { room.printMonsters ( j, user.getVisiblePositions () ) ; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void processOutput ( com.lumens.engine.TransformComponent src, java.lang.String targetName, java.util.List<com.lumens.model.Element> output ) { if ( log.isDebugEnabled () ) log.debug ( java.lang.String.format ( "Component '%s' output size '%d' target => '%s'", src.getName () , ( output != null ? output.size () : 0 ) , targetName ) ) ; try { processElementList ( output ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setDefinition ( java.lang.String filename, java.lang.Long start, java.lang.Long end ) { org.eclipse.core.resources.IFile file = getFile ( filename ) ; try { if ( ( file != null ) && ( file.exists () ) ) { tern.eclipse.ide.ui.utils.EditorUtils.openInEditor ( file, ( start != null ? start.intValue () : -1 ) , ( ( start != null ) && ( end != null ) ? ( end.intValue () ) - ( start.intValue () ) : -1 ) , true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBindViewHolder ( final mem.edu.meaningful.CoordinatorFragment.SimpleStringRecyclerViewAdapter.ViewHolder holder, final int position ) { try { holder.mTextView.setText ( mValues.get ( position ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } holder.mView.setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { android.support.design.widget.Snackbar.make ( v, getValueAt ( position ) , Snackbar.LENGTH_SHORT ) .show () ; } } ) ; } 
protected void doGet ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response ) throws java.io.IOException, javax.servlet.ServletException { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List<com.tsystems.javaschool.timber.logiweb.entity.Truck> trucks = truckService.findAll () ; try { request.setAttribute ( "trucks", trucks ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } javax.servlet.RequestDispatcher rd = getServletContext () .getRequestDispatcher ( "/trucks.jsp" ) ; rd.forward ( request, response ) ; } 
public io.kks.states.State removeState ( int index ) { try { if ( ( ( stateStack.size () ) < 1 ) || ( outOfBounds ( index ) ) ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } io.kks.states.State removeState = stateStack.remove ( index ) ; removeState.onDestroy () ; return removeState; } 
public java.awt.Component prepareRenderer ( javax.swing.table.TableCellRenderer renderer, int row, int column ) { java.awt.Component c = super.prepareRenderer ( renderer, row, column ) ; try { if ( ! ( isRowSelected ( row ) ) ) c.setBackground ( ( ( row % 2 ) != 0 ? getBackground () : java.awt.Color.LIGHT_GRAY ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return c; } 
private void updateExpressionPartWithSubExpression ( java.util.Stack subexpressionStack ) { while ( ! ( subexpressionStack.empty () ) ) { subexpression += subexpressionStack.pop () ; } try { if ( ( subexpression ) != "" ) { expressionParts.add ( new app.com.example.grace.currencycalculator.models.Operand ( new java.lang.StringBuilder ( subexpression ) .reverse () .toString () ) ) ; subexpression = ""; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void stop () { if ( mGame.hasStarted () ) { ca.hoogit.powerhour.Game.Engine.started = false; if ( mGame.is ( State.ACTIVE ) ) { mTimer.cancel () ; } android.util.Log.i ( ca.hoogit.powerhour.Game.Engine.TAG, ( "Stopping game on round " + ( mGame.currentRound () ) ) ) ; } try { mVibrator.cancel () ; } catch ( Exception ex ) { ex.printStackTrace () ; } finish () ; } 
private com.github.javalbert.sqlbuilder.Predicate buildExistsPredicate ( com.github.javalbert.sqlbuilder.dsl.ExistsPredicate dslPredicate ) { com.github.javalbert.sqlbuilder.dsl.com.github.javalbert.sqlbuilder.Predicate predicate = new com.github.javalbert.sqlbuilder.dsl.com.github.javalbert.sqlbuilder.Predicate () ; try { if ( ( dslPredicate.getOperator () ) == ( PredicateOperator.EXISTS ) ) { predicate.exists () ; } else if ( ( dslPredicate.getOperator () ) == ( PredicateOperator.NOT_EXISTS ) ) { predicate.notExists () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return predicate.subquery ( buildSelect ( dslPredicate.getSubquery () ) ) ; } 
public int reflectDirection ( int laser_direction ) { try { laser_direction = jkhet.Piece.mod ( ( laser_direction + 2 ) , 4 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int relative_side = jkhet.Piece.mod ( ( laser_direction - ( rot ) ) , 4 ) ; if ( relative_side == 0 ) { return jkhet.Piece.mod ( ( 1 + ( rot ) ) , 4 ) ; } else if ( relative_side == 1 ) { return jkhet.Piece.mod ( rot, 4 ) ; } else { return -1; } } 
@ java.lang.Override public java.util.List<com.bubblewrap.plants.webserver.model.Sensor> getCurrentSensorValues () { java.util.List<com.bubblewrap.plants.webserver.model.Sensor> result = new java.util.ArrayList<com.bubblewrap.plants.webserver.model.Sensor> () ; java.util.List<com.bubblewrap.plants.webserver.model.Sensor> sensors = jdbcTemplate.query ( retrieveSensors, new com.bubblewrap.plants.webserver.jdbc.SensorRowMapper () ) ; try { for ( com.bubblewrap.plants.webserver.model.Sensor sensor : sensors ) { java.lang.String latestDataQuery = java.lang.String.format ( retrieveLatestSensorData, sensor.getId () ) ; sensor.setData ( jdbcTemplate.query ( latestDataQuery, new com.bubblewrap.plants.webserver.jdbc.SensorDataRowMapper () ) ) ; result.add ( sensor ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ org.junit.Test public void happyPath () { java.lang.String json = com.jayway.restassured.RestAssured.given () .auth () .basic ( ServerConfig.USERNAME, ServerConfig.PASSWORD ) .body ( questions.PostQuestionTest.questionOne ) .when () .post ( questions.PostQuestionTest.postUrl ) .then () .statusCode ( 200 ) .contentType ( ContentType.JSON ) .extract () .response () .asString () ; java.lang.Long questionId = com.jayway.restassured.path.json.JsonPath.from ( json ) .getLong ( "questionId" ) ; org.junit.Assert.assertNotNull ( questionId ) ; try { assertQuestionInSurvey ( questions.PostQuestionTest.surveyId, questionId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = new com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView ( context, interval ) ; int pos = ( intervalsView.getChildCount () ) - 2; try { if ( ( pos % 2 ) == 0 ) { intervalView.setBackgroundColor ( getResources () .getColor ( R.color.even_list_item ) ) ; } else { intervalView.setBackgroundColor ( getResources () .getColor ( R.color.odd_list_item ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } intervalsView.addView ( intervalView, pos ) ; return intervalView; } 
protected void handleStringAnswer () throws java.io.IOException { java.lang.String requestId = readValue () ; java.lang.String value = readValue () ; com.ideal.evecore.util.PendingAtomicReference<java.lang.String> reference = stringResults.remove ( requestId ) ; try { if ( reference != null ) { reference.set ( value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void markVoidCompatible () { try { if ( preferredSugar ) { acceptActualType ( ( ( ( ( ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.CHECKED_SUCCESS ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.LAMBDA_VOID_COMPATIBLE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PROPAGATED_TYPE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.SEALED ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PREFERRED_LAMBDA_SUGAR ) ) ) ; } else { acceptActualType ( ( ( ( ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.CHECKED_SUCCESS ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.LAMBDA_VOID_COMPATIBLE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PROPAGATED_TYPE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.SEALED ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void nextRound () { Round.setText ( ( "Round " + ( ( start ) - 1 ) ) ) ; pt.makeEmpty () ; ( start ) ++; pickNumber ( start ) ; control = 0; turn = 0; try { CorrectNum.setText ( "0" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void connect () throws java.io.IOException, java.lang.ClassNotFoundException, java.security.InvalidKeyException, java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, javax.crypto.BadPaddingException, javax.crypto.IllegalBlockSizeException, javax.crypto.NoSuchPaddingException, rsa.exceptions.GeneratingPublicKeyException { conn = new network.Connection () ; thread = new java.lang.Thread ( this ) ; try { thread.setDaemon ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } thread.start () ; } 
public void start ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { super.start ( context ) ; net.bioclipse.balloon.business.Activator.plugin = this; javaScriptFinderTracker = new org.osgi.util.tracker.ServiceTracker ( context, net.bioclipse.balloon.business.IJavaScriptBalloonManager.class.getName () , null ) ; javaScriptFinderTracker.open () ; javaFinderTracker = new org.osgi.util.tracker.ServiceTracker ( context, net.bioclipse.balloon.business.IJavaBalloonManager.class.getName () , null ) ; try { javaFinderTracker.open () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean getNextQuestion () { currentQuestion = quiz.nextQuestion () ; broadcastToClients ( NetworkMessages.nextQ ) ; if ( ( currentQuestion ) == null ) { currentState = backend.GameState.GAME_OVER; return false; } try { lblCurrentQ.setText ( currentQuestion.getQ () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int index = 0; for ( java.lang.String ans : currentQuestion.getAnswers () ) { answers[index].setText ( ans ) ; index++; } lblTime.setText ( java.lang.Integer.toString ( currentQuestion.getTimeLimit () ) ) ; currentState = backend.GameState.WAITING_FOR_ANSWERS; return true; } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v4.app.Fragment fragment = getSupportFragmentManager () .findFragmentById ( R.id.list_container ) ; if ( ( ( ! ( mTwoPane ) ) && ( fragment != null ) ) && ( fragment instanceof com.qualicom.availabilitydashboard.NodeListActivityFragment ) ) { android.util.Log.i ( "BACK", "Back to node fragment" ) ; selectedNode = null; } } 
@ java.lang.Override public void execute ( backtype.storm.tuple.Tuple tuple ) { java.lang.String text = tuple.getValue ( 0 ) .toString () ; java.lang.String language = "UNKNOWN"; com.joelholder.bolt.LanguageIdentifier li = new com.joelholder.bolt.LanguageIdentifier ( text ) ; try { language = li.getLanguage () ; } catch ( Exception ex ) { ex.printStackTrace () ; } _collector.emit ( new backtype.storm.tuple.Values ( text, language ) ) ; _collector.ack ( tuple ) ; } 
public void write ( int data ) { int index = 0; try { while ( index < ( clientCount ) ) { if ( clients[index].active () ) { clients[index].write ( data ) ; index++; } else { removeIndex ( index ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.List<java.lang.String> decolorize ( java.util.List<java.lang.String> colored ) { if ( colored == null ) return null; java.util.List<java.lang.String> decolored = new java.util.ArrayList<java.lang.String> ( colored.size () ) ; try { for ( java.lang.String string : colored ) { decolored.add ( com.nisovin.shopkeepers.Utils.translateColorCodesToAlternative ( '&', string ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return decolored; } 
@ java.lang.Override protected org.eclipse.emf.ecore.EObject getEObjectByID ( java.lang.String id ) { org.eclipse.emf.ecore.EObject idObject = super.getEObjectByID ( id ) ; try { if ( idObject == null ) { for ( org.eclipse.emf.ecore.EObject eObject : getContents () ) { if ( eObject instanceof no.hal.pgo.osm.OSM ) { no.hal.pgo.osm.Tagged tagged = no.hal.pgo.osm.util.OsmResourceImpl.getTagged ( id, eObject, OsmPackage.eINSTANCE.getOSM_Nodes () , OsmPackage.eINSTANCE.getOSM_Relations () ) ; if ( tagged != null ) { return tagged; } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return idObject; } 
@ java.lang.Override public void onClick ( android.view.View v ) { globalPlay.setFgMadeFlag ( goodCB.isChecked () ) ; globalPlay.setFgDistance ( java.lang.Integer.parseInt ( fgDistanceEditText.getText () .toString () ) ) ; if ( ! ( kickerEditText.getText () .toString () .equals ( "" ) ) ) { globalPlay.setPlayerNumber ( java.lang.Integer.parseInt ( kickerEditText.getText () .toString () ) ) ; } flow = false; newPlayDialog () ; try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String getTodaysTshirt () { if ( ( com.coollooks.Util.tShirtPathList ) == null ) com.coollooks.Util.setTshirtList () ; int i = ( ( int ) ( ( ( java.lang.Math.random () ) * 33 ) % ( com.coollooks.Util.tShirtPathList.size () ) ) ) ; try { if ( ( com.coollooks.Util.tShirtPathList.size () ) > 0 ) return com.coollooks.Util.tShirtPathList.get ( i ) ; else return null; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void populateGrid () { try { for ( int h = 0; h < ( grid.size () ) ; h++ ) { for ( int w = 0; w < ( fieldWidth ) ; w++ ) { grid.get ( h ) .add ( w, new Cell () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onEntityAdded ( net.minecraft.entity.Entity entity ) { if ( ( ! ( entity instanceof net.minecraft.entity.player.EntityPlayer ) ) && ( this.dimension.hasSetting ( SettingType.ENTITYSPAWN ) ) ) { de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting setting = ( ( de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting ) ( this.dimension.get ( SettingType.ENTITYSPAWN ) ) ) ; setting.increase ( entity ) ; } try { super.onEntityAdded ( entity ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.Collection<tools.gsf.navigation.AssetNode> _getDescendents ( tools.gsf.navigation.AssetNode n ) { java.util.Set<tools.gsf.navigation.AssetNode> descendents = new java.util.HashSet<> () ; try { for ( tools.gsf.navigation.AssetNode kid : n.getChildren () ) { descendents.add ( kid ) ; descendents.addAll ( _getDescendents ( kid ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return descendents; } 
@ java.lang.Override public boolean accept ( org.apache.hadoop.fs.Path path ) { java.lang.String ext = libra.common.helpers.PathHelper.getExtensionWithoutCompressed ( path.getName () ) ; try { if ( ext != null ) { ext = ext.toLowerCase () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( java.lang.String fext : libra.common.sequence.FastaPathFilter.FASTA_EXT ) { if ( fext.equals ( ext ) ) { return true; } } return false; } 
@ org.junit.Test public void getListUser () { java.util.List<com.ca.devtest.lisabank.wsdl.User> users = bankServices.getListUserWithoutAdmin () ; org.junit.Assert.assertNotNull ( users ) ; try { org.junit.Assert.assertEquals ( "Il y a plus de 7 utilisateurs, le webservice \"userControl\" ne sont pas correctement configur\u00e9", 6, users.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertNotEquals ( "Admin", users.get ( 0 ) .getLname () ) ; } 
@ java.lang.Override public void update ( float delta ) { try { for ( org.terasology.entitySystem.entity.EntityRef entity : entityManager.getEntitiesWith ( org.terasology.miniion.components.NPCMovementInputComponent.class ) ) { org.terasology.miniion.components.NPCMovementInputComponent characterMovementComponent = entity.getComponent ( org.terasology.miniion.components.NPCMovementInputComponent.class ) ; org.terasology.logic.characters.CharacterComponent characterComp = entity.getComponent ( org.terasology.logic.characters.CharacterComponent.class ) ; entity.send ( new org.terasology.logic.characters.CharacterMoveInputEvent ( ( ( inputSequenceNumber ) ++ ) , 0, 0, characterMovementComponent.directionToMove, characterMovementComponent.runningRequested, characterMovementComponent.jumpingRequested, ( ( long ) ( delta ) ) ) ) ; if ( characterMovementComponent.jumpingRequested ) characterMovementComponent.jumpingRequested = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addBatch ( java.lang.String batchId ) { net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity[] batchObjects = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity[1]; batchObjects[0] = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity () ; batchObjects[0].objectUrn = ( net.smartcosmos.android.ProfilesTransactionRequest.PREFIX_BATCH ) + batchId; batchObjects[0].type = net.smartcosmos.android.ProfilesTransactionRequest.TYPE_BATCH; batchObjects[0].name = batchId; try { addObjects ( batchObjects ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void cleanup () { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Cursor.disposeSystemCursors () ; try { if ( ( audio ) instanceof com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio ) { ( ( com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio ) ( audio ) ) .dispose () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.errorCallback.free () ; com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.errorCallback = null; if ( ( com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback ) != null ) { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback.free () ; com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback = null; } org.lwjgl.glfw.GLFW.glfwTerminate () ; } 
static ddejonge.ggp.sat.logic.CNF disjunctCNFwithLiteral ( ddejonge.ggp.sat.logic.CNF cnf, boolean positive, ddejonge.ggp.sat.logic.Proposition p ) { ddejonge.ggp.sat.logic.CNF newCnf = new ddejonge.ggp.sat.logic.CNF () ; try { for ( ddejonge.ggp.sat.logic.Clause clause : cnf ) { ddejonge.ggp.sat.logic.Clause newClause = new ddejonge.ggp.sat.logic.Clause ( clause.getPositiveAtoms () , clause.getNegativeAtoms () ) ; newClause.addLiteral ( p, positive ) ; newCnf.add ( newClause ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return newCnf; } 
private void init ( android.content.Context context ) { android.view.View rootView = inflate ( context, R.layout.easytabs, this ) ; tabs = ( ( android.support.design.widget.TabLayout ) ( rootView.findViewById ( R.id.tabs ) ) ) ; try { pager = ( ( android.support.v4.view.ViewPager ) ( rootView.findViewById ( R.id.pager ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onHeaderClick ( final com.nervousfish.nervousfish.activities.Header header, final int position ) { super.onHeaderClick ( header, position ) ; try { if ( ( header.id ) == ( R.id.key_management_header ) ) { final android.content.Intent intent = new android.content.Intent ( this, com.nervousfish.nervousfish.activities.KeyManagementActivity.class ) ; this.startActivity ( intent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.PriorityQueue<java.lang.Integer> getStartingNodes () { sorted = poag.getNodeIDs () ; java.util.PriorityQueue<java.lang.Integer> startingNodeIds = new java.util.PriorityQueue<> () ; try { for ( int i = 0; i < ( size ) ; i++ ) { java.lang.Integer[] prevs = poag.getPreviousNodeIDs ( sorted[i] ) ; if ( prevs == null ) { startingNodeIds.add ( sorted[i] ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return startingNodeIds; } 
private <T> T getValue ( java.lang.String model, java.lang.String propertyName, java.lang.String subPropertyName, T defaultValue ) { com.dd.plist.NSDictionary dictionary = getValue ( model, propertyName, null ) ; try { if ( ( dictionary != null ) && ( dictionary.containsKey ( subPropertyName ) ) ) { return ( ( T ) ( getValue ( dictionary.get ( subPropertyName ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return defaultValue; } 
public void reset () { java.lang.System.out.println ( "RESTART! RESTART!" ) ; swimmer.restart () ; oxygenMeter.reset () ; staminaMeter.reset () ; timer.restart () ; Gdx.input.setInputProcessor ( this ) ; try { gameOverOverlay.setVisible ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } pauseOverlay.setVisible ( false ) ; winOverlay.setVisible ( false ) ; gameOver = false; goingRight = false; goingLeft = false; paused = false; this.gameState = com.cpioli.headabovewater.screens.GameScreen.GAME_PLAY; } 
private java.util.Map<helper.Position, java.util.Map<java.lang.String, java.util.Set<java.lang.String>>> getRelationReprs () { java.util.Map<helper.Position, java.util.Map<java.lang.String, java.util.Set<java.lang.String>>> relationReprs = new java.util.HashMap<helper.Position, java.util.Map<java.lang.String, java.util.Set<java.lang.String>>> () ; try { for ( helper.Position p : helper.Position.values () ) { relationReprs.put ( p, new java.util.HashMap<java.lang.String, java.util.Set<java.lang.String>> () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return relationReprs; } 
java.util.ArrayList<personal.vinay.bigdata.PrepData.Record> setMinSpread ( java.util.ArrayList<personal.vinay.bigdata.PrepData.Record> records ) { double minSpread = 9999; try { for ( personal.vinay.bigdata.PrepData.Record record : records ) { if ( ( ( record.getBidPrice () ) - ( record.getAskPrice () ) ) < minSpread ) { minSpread = ( record.getBidPrice () ) - ( record.getAskPrice () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } for ( personal.vinay.bigdata.PrepData.Record record : records ) { record.setMinSpread ( minSpread ) ; } return records; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case org.stendardo.bsak.qiblih.CompassActivity.EDIT_ID: startActivity ( new android.content.Intent ( this, org.stendardo.bsak.qiblih.QiblihPreferences.class ) ) ; return true; case org.stendardo.bsak.qiblih.CompassActivity.README_ID: startActivity ( new android.content.Intent ( this, org.stendardo.bsak.qiblih.ReadmeActivity.class ) ) ; return true; case org.stendardo.bsak.qiblih.CompassActivity.LICENSE_ID: startActivity ( new android.content.Intent ( this, org.stendardo.bsak.qiblih.LicenseActivity.class ) ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onOptionsItemSelected ( item ) ; } 
private static org.yamj.core.database.model.type.JobType retrieveJobType ( java.lang.String department ) { try { switch ( department.toLowerCase () ) { case "writing": return org.yamj.core.database.model.type.JobType.WRITER; case "directing": return org.yamj.core.database.model.type.JobType.DIRECTOR; case "production": return org.yamj.core.database.model.type.JobType.PRODUCER; case "sound": return org.yamj.core.database.model.type.JobType.SOUND; case "camera": return org.yamj.core.database.model.type.JobType.CAMERA; case "art": return org.yamj.core.database.model.type.JobType.ART; case "editing": return org.yamj.core.database.model.type.JobType.EDITING; case "costume & make-up": return org.yamj.core.database.model.type.JobType.COSTUME_MAKEUP; case "crew": return org.yamj.core.database.model.type.JobType.CREW; case "visual effects": return org.yamj.core.database.model.type.JobType.EFFECTS; case "lighting": return org.yamj.core.database.model.type.JobType.LIGHTING; default: org.yamj.core.service.metadata.online.TheMovieDbScanner.LOG.debug ( "Unknown department '{}'", department ) ; return org.yamj.core.database.model.type.JobType.UNKNOWN; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public <T> T query ( java.lang.Class<T> clazz ) { java.lang.Object inst = org.wikiup.core.util.Interfaces.unwrap ( clazz, wrapped ) ; try { if ( inst == null ) { if ( byClasses.containsKey ( clazz ) ) return org.wikiup.core.util.Interfaces.cast ( clazz, byClasses.get ( clazz ) ) ; inst = translator.cast ( clazz, wrapped ) ; byClasses.put ( clazz, inst ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return org.wikiup.core.util.Interfaces.cast ( clazz, inst ) ; } 
@ org.junit.Test public void display_account_list () { org.springframework.ui.Model model = mock ( org.springframework.ui.Model.class ) ; java.util.List<com.odde.bbuddy.account.domain.Account> accounts = dataMother.getAccounts () ; when ( this.accounts.getList () ) .thenReturn ( accounts ) ; controller.list ( model ) ; try { verify ( model ) .addAttribute ( "accounts", accounts ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void shouldSelectOnlyHookManagedCreds () { org.jenkinsci.plugins.github.config.GitHubServerConfig conf = new org.jenkinsci.plugins.github.config.GitHubServerConfig ( "" ) ; try { conf.setManageHooks ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.jenkinsci.plugins.github.GitHubPlugin.configuration () .getConfigs () .add ( conf ) ; org.junit.Assert.assertThat ( org.jenkinsci.plugins.github.webhook.WebhookManager.forHookUrl ( org.jenkinsci.plugins.github.webhook.WebhookManagerTest.HOOK_ENDPOINT ) .createHookSubscribedTo ( com.google.common.collect.Lists.newArrayList ( org.kohsuke.github.GHEvent.PUSH ) , null ) .apply ( new com.cloudbees.jenkins.GitHubRepositoryName ( "github.com", "name", "repo" ) ) , org.hamcrest.Matchers.nullValue () ) ; } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super.onActivityCreated ( savedInstanceState ) ; createHandler () ; android.support.v4.app.FragmentManager fm = getFragmentManager () ; try { mWorkFragment = ( ( com.betterchat.www.utility.RetainedFragment ) ( fm.findFragmentByTag ( "work" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mWorkFragment ) == null ) { mWorkFragment = new com.betterchat.www.utility.RetainedFragment () ; mWorkFragment.setTargetFragment ( this, 0 ) ; fm.beginTransaction () .add ( mWorkFragment, "work" ) .commit () ; } } 
@ java.lang.Override public net.minecraftforge.fml.common.network.simpleimpl.IMessage onMessage ( com.lothrazar.cyclicmagic.net.PacketSyncPlayerData message, net.minecraftforge.fml.common.network.simpleimpl.MessageContext ctx ) { try { if ( ( ctx.side ) == ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ) { if ( ( net.minecraft.client.Minecraft.getMinecraft () .thePlayer ) == null ) { return null; } com.lothrazar.cyclicmagic.ModMain.IPlayerExtendedProperties props = com.lothrazar.cyclicmagic.ModMain.getPlayerProperties ( net.minecraft.client.Minecraft.getMinecraft () .thePlayer ) ; if ( props == null ) { return null; } else { props.setDataFromNBT ( message.tags ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public static Bag getTestBag ( int i ) { Bag bag = new Bag ( i ) ; try { for ( int j = 0; j < 10; j++ ) { Token t = CloneTestHelper.getTestToken () ; TokenFrequency tFrequency = new TokenFrequency () ; tFrequency.setToken ( t ) ; tFrequency.setFrequency ( utility.Util.getRandomNumber ( 1, 1 ) ) ; bag.add ( tFrequency ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return bag; } 
@ java.lang.Override public void onClick ( android.view.View v ) { interactionListener.onConfirm ( notifyMe.isChecked () ) ; buttonConfirm.setEnabled ( false ) ; final android.view.View buttonReset = findViewById ( R.id.button_new_appointment ) ; buttonReset.setVisibility ( com.zyumbik.makeanappointment.custom_views.VISIBLE ) ; try { buttonReset.setOnClickListener ( new com.zyumbik.makeanappointment.custom_views.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { interactionListener.onReset () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void startGame ( int playercount, int boardsize ) { game.GameMaster.reset () ; for ( int i = 1; i <= playercount; i++ ) { game.GameMaster.playerAL.add ( new game.Player ( 0.0, i, 0.0, 0, game.GameMaster.names[ ( i - 1 ) ], 0 ) ) ; } game.GameMaster.EndCheck = boardsize; try { game.GameMaster.PlayerInTurn = game.GameMaster.playerAL.get ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String convertFromArabicToRomanNumeral ( java.lang.Integer inputNumber ) { java.lang.StringBuilder romanNumeral = new java.lang.StringBuilder () ; try { while ( inputNumber != 0 ) { for ( java.util.Map.Entry<java.lang.Integer, java.lang.String> numeralMapEntry : RomanNumeralConverter.numeralMap.entrySet () ) { java.lang.Integer numeralSegmentArabicValue = numeralMapEntry.getKey () ; java.lang.String numeralSegment = numeralMapEntry.getValue () ; if ( inputNumber >= numeralSegmentArabicValue ) { inputNumber -= numeralSegmentArabicValue; romanNumeral.append ( numeralSegment ) ; break; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return romanNumeral.toString () ; } 
@ org.junit.Test public void restartNotStarted () throws java.io.IOException { java.lang.String applicationName = getApplicationName () ; try { org.cloudfoundry.operations.ApplicationsTest.createApplication ( this.cloudFoundryOperations, org.cloudfoundry.operations.ApplicationsTest.getApplicationBits () , applicationName, true ) .then ( this.cloudFoundryOperations.applications () .restart ( org.cloudfoundry.operations.applications.RestartApplicationRequest.builder () .name ( applicationName ) .build () ) ) .subscribe ( testSubscriber () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void loadTile ( com.badlogic.gdx.utils.XmlReader.Element tile, int firstGid ) { int id = tile.getIntAttribute ( "id" ) ; com.mygdx.game.shared.model.CollideablePolygon tilePolygon = com.mygdx.game.shared.model.TilePolygonLoader.loadTilePolygon ( tile ) ; int tileGid = firstGid + id; try { tiles.put ( tileGid, new com.mygdx.game.server.model.MapLoader.Tile ( tilePolygon ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testIterFilterLimitOffset () { java.lang.Iterable<siena.base.test.model.PersonUUID> people = pm.createQuery ( siena.base.test.model.PersonUUID.class ) .filter ( "n>", 1 ) .order ( "n" ) .iter ( 2, 1 ) ; try { assertNotNull ( people ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } siena.base.test.model.PersonUUID[] array = new siena.base.test.model.PersonUUID[] { siena.base.test.BaseAsyncTest.UUID_EINSTEIN }; int i = 0; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array[i], PersonIntKey ) ; i++; } } 
protected void configure ( org.springframework.security.config.annotation.web.builders.HttpSecurity security ) throws java.lang.Exception { try { security.authorizeRequests () .antMatchers ( "/css/**" ) .permitAll () .anyRequest () .authenticated () .and () .formLogin () .loginPage ( "/login" ) .permitAll () .failureUrl ( "/login?error" ) .permitAll () .and () .logout () .permitAll () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int count ( java.lang.String content, char charForSearch ) { int count = 0; if ( null == content ) { return 0; } int contentLength = content.length () ; try { for ( int i = 0; i < contentLength; i++ ) { if ( charForSearch == ( content.charAt ( i ) ) ) { count++; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return count; } 
@ java.lang.Override public org.openqa.selenium.WebDriver getWebDriverInstance () { org.openqa.selenium.WebDriver retVal = getWebDriver () ; try { if ( null == retVal ) { org.bigtester.ate.model.page.atewebdriver.MyChromeDriver.setChromeDriverSystemEnv () ; if ( getBrowserProfile () .isPreserveCookiesOnExecutions () ) { org.openqa.selenium.chrome.ChromeOptions ops = new org.openqa.selenium.chrome.ChromeOptions () ; ops.addArguments ( ( "--user-data-dir=" + ( getBrowserProfile () .getTestCaseChromeUserDataDir () ) ) ) ; retVal = new org.openqa.selenium.chrome.ChromeDriver ( ops ) ; } else { retVal = new org.openqa.selenium.chrome.ChromeDriver () ; } setWebDriver ( retVal ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return retVal; } 
private java.lang.String convertRequestToString () throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line; try { do { line = bufferedReader.readLine () ; requestBuilder.append ( line ) ; if ( line.equals ( "" ) ) break; } while ( bufferedReader.ready () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return requestBuilder.toString () ; } 
public boolean isMatched () { try { switch ( matchingType ) { case OR: return matches.values () .contains ( true ) ; case AND: default: return ( ( matches.size () ) > 0 ) && ( ! ( matches.values () .contains ( false ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void enterBuilding ( java.lang.String bldName ) { chronos.pdc.buildings.Building bldg = _bReg.getBuilding ( bldName ) ; try { if ( bldg != null ) { _currentBldg = bldg; java.lang.String description = bldg.getInteriorDescription () ; java.lang.String imagePath = bldg.getIntImagePath () ; displayBuilding ( description, imagePath ) ; _frame.setOnTown ( false ) ; } else { _frame.displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void refreshModel ( org.eclipse.viatra.cep.core.metamodels.events.Event event ) { model.setLatestEvent ( null ) ; for ( org.eclipse.viatra.cep.core.metamodels.automaton.EventToken eventToken : model.getEventTokensInModel () ) { eventToken.setLastProcessed ( null ) ; } try { model.getEnabledForTheLatestEvent () .clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } strategy.handleInitTokenCreation ( model, AutomatonFactory.eINSTANCE ) ; model.setLatestEvent ( event ) ; strategy.handleAutomatonResets ( model, AutomatonFactory.eINSTANCE ) ; cepUpdateCompleteProvider.latestEventHandled () ; } 
public boolean makeTurn ( int posOnBoard, int turn ) throws something.Reversi.IllegalMoveException { try { if ( ( this.board[posOnBoard] ) == ( Tile.EMPTY ) ) { something.Reversi.Tile tile; if ( ( turn % 2 ) == 0 ) { tile = Tile.BLACK; } else { tile = Tile.WHITE; } if ( checkValidityMove ( posOnBoard, tile ) ) { board[posOnBoard] = tile; turnTiles ( posOnBoard, tile ) ; return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ aramframework.com.cmm.annotation.IncludedInfo ( name = "일지관리", order = 4060, gid = 40 ) @org.springframework.web.bind.annotation.RequestMapping ( value = "/cop/smt/dsm/listDiary.do" ) @org.springframework.security.access.annotation.Secured ( value = "ROLE_USER" ) public java.lang.String listDiary ( @org.springframework.web.bind.annotation.ModelAttribute aramframework.com.cop.smt.dsm.domain.DiaryManageVO diaryManageVO, org.springframework.ui.ModelMap model ) { egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo paginationInfo = new egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo () ; try { diaryManageVO.getSearchVO () .fillPageInfo ( paginationInfo ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } model.addAttribute ( "resultList", diaryManageService.selectDiaryManageList ( diaryManageVO ) ) ; int totCnt = ( ( java.lang.Integer ) ( diaryManageService.selectDiaryManageListCnt ( diaryManageVO ) ) ) ; diaryManageVO.getSearchVO () .setTotalRecordCount ( totCnt ) ; paginationInfo.setTotalRecordCount ( totCnt ) ; model.addAttribute ( paginationInfo ) ; return aramframework.com.cmm.util.WebUtil.adjustViewName ( "/cop/smt/dsm/DiaryList" ) ; } 
@ java.lang.Override protected void update ( float elapsedTimeMS ) { graphicslib3D.Point3D cameraLocation = camera1.getLocation () ; graphicslib3D.Matrix3D cameraTranslation = new graphicslib3D.Matrix3D () ; cameraTranslation.translate ( cameraLocation.getX () , cameraLocation.getY () , cameraLocation.getZ () ) ; try { skyBox.setLocalTranslation ( cameraTranslation ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } camera1Controller.update ( elapsedTimeMS ) ; super.update ( elapsedTimeMS ) ; if ( ( thisClient ) != null ) { thisClient.processPackets () ; } } 
private java.util.ArrayList<java.awt.geom.Point2D.Double> generateTestPath () { java.util.ArrayList<java.awt.geom.Point2D.Double> testPath = new java.util.ArrayList<java.awt.geom.Point2D.Double> () ; try { for ( int i = 0; i < 1000; i++ ) { testPath.add ( new java.awt.geom.Point2D.Double ( ( i / 500.0 ) , 0.0 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return testPath; } 
public static void main ( java.lang.String[] args ) { long time_start = java.lang.System.currentTimeMillis () ; greedy.Greedy10.cargarDatos () ; greedy.Greedy10.resolverProblema () ; greedy.Greedy10.mostrarMochila () ; long time_end = java.lang.System.currentTimeMillis () ; java.lang.System.out.println () ; java.lang.System.out.println ( "-------------------------------------------------------" ) ; java.lang.System.out.println () ; try { java.lang.System.out.println () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( ( ( ">> Tiempo de duracion del proceso: " + ( time_end - time_start ) ) + " milisegundos." ) ) ; } 
protected void applyCenterInside ( @android.support.annotation.NonNull android.view.TextureView view, @android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { try { if ( ( ( intrinsicVideoSize.x ) <= ( view.getWidth () ) ) && ( ( intrinsicVideoSize.y ) <= ( view.getHeight () ) ) ) { applyCenter ( view, transformMatrix ) ; } else { applyFitCenter ( view, transformMatrix ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected javax.ws.rs.core.Response handleGenericError ( java.lang.Throwable exception ) { net.sf.mmm.util.exception.api.NlsRuntimeException userError = net.sf.mmm.util.exception.api.TechnicalErrorUserException.getOrCreateUserException ( exception ) ; try { if ( userError.isTechnical () ) { io.oasp.module.rest.service.impl.RestServiceExceptionFacade.LOG.error ( "Service failed on server", userError ) ; } else { io.oasp.module.rest.service.impl.RestServiceExceptionFacade.LOG.warn ( "Service failed due to business error: {}", exception.getMessage () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return createResponse ( userError ) ; } 
@ java.lang.Override public void onTurnSuccess ( int computerMove ) { if ( ( isGameOver ) || ( computerMove == ( -1 ) ) ) { return; } try { setXBackground ( levelPlayer1, computerMove ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fillGameGrid ( computerMove, Constants.PLAYER2 ) ; areButtonsClicked[computerMove] = true; asyncService.checkForWinner ( gameGrid, Constants.PLAYER2, this ) ; } 
protected void installPropertyChangeListener ( java.lang.Object element ) { org.eclipse.tcf.te.ui.interfaces.IViewerInput viewerInput = org.eclipse.tcf.te.ui.trees.ViewerStateManager.getViewerInput ( element ) ; try { if ( ( viewerInput != null ) && ( ! ( viewerInputs.contains ( viewerInput ) ) ) ) { viewerInput.addPropertyChangeListener ( commonViewerListener ) ; viewerInputs.add ( viewerInput ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onLoadFinished ( android.content.Loader<android.database.Cursor> loader, android.database.Cursor data ) { try { switch ( loader.getId () ) { case com.android.contacts.list.JoinContactListFragment.DISPLAY_NAME_LOADER: { if ( ( data != null ) && ( data.moveToFirst () ) ) { showTargetContactName ( data.getString ( 0 ) ) ; } break; } case JoinContactListAdapter.PARTITION_ALL_CONTACTS: { if ( data != null ) { final android.database.Cursor suggestionsCursor = ( ( com.android.contacts.list.JoinContactLoader.JoinContactLoaderResult ) ( data ) ) .suggestionCursor; onContactListLoaded ( suggestionsCursor, data ) ; } break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.wso2.carbon.messaging.CarbonMessage createCarbonMsg ( org.ballerinalang.bre.Context context ) { org.ballerinalang.model.values.BConnector bConnector = ( ( org.ballerinalang.model.values.BConnector ) ( getRefArgument ( context, 0 ) ) ) ; java.lang.String path = getStringArgument ( context, 0 ) ; org.ballerinalang.model.values.BMessage bMessage = ( ( org.ballerinalang.model.values.BMessage ) ( getRefArgument ( context, 1 ) ) ) ; org.wso2.carbon.messaging.CarbonMessage cMsg = bMessage.value () ; prepareRequest ( bConnector, path, cMsg ) ; try { cMsg.setProperty ( Constants.HTTP_METHOD, Constants.HTTP_METHOD_POST ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return cMsg; } 
public void onNumDecksChanged ( javafx.beans.value.ObservableValue observable, java.lang.Object oldNum, java.lang.Object newNum ) { try { if ( ( ( java.lang.String ) ( newNum ) ) .matches ( "[0-9]*" ) ) { cardSettings.setNumDecks ( java.lang.Integer.parseInt ( ( ( java.lang.String ) ( newNum ) ) ) ) ; updateSuitTextFields ( view.getCardComboBox () .getValue () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setDirectionButton ( android.widget.ImageView imageView, int id, int rotation ) { android.widget.TableRow.LayoutParams pieceLayout = new android.widget.TableRow.LayoutParams ( ( ( height ) / 6 ) , ( ( height ) / 6 ) ) ; try { imageView.setLayoutParams ( pieceLayout ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } imageView.setImageResource ( id ) ; imageView.setPivotX ( ( ( height ) / 12 ) ) ; imageView.setPivotY ( ( ( height ) / 12 ) ) ; imageView.setRotation ( rotation ) ; } 
public static void main ( java.lang.String[] args ) { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; Controller controller = new Controller () ; try { Veto.showLine ( controller.getWelcomeMessage () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } while ( ! ( controller.isTimeToExit () ) ) { Veto.show ( Veto.MESSAGE_COMMAND_PROMPT ) ; java.lang.String userInput = scanner.nextLine () ; java.lang.String feedback = controller.executeCommand ( userInput ) ; Veto.showLine ( feedback ) ; } scanner.close () ; } 
public void draw ( org.newdawn.slick.Graphics graphics ) throws org.newdawn.slick.SlickException { drawBackground ( graphics ) ; drawCountDown ( graphics ) ; drawPlayers ( graphics ) ; try { drawPowers ( graphics ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } drawTimer ( graphics ) ; drawBorders ( graphics ) ; drawLives ( graphics ) ; drawScore ( graphics ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == null ) { return false; } if ( ( getClass () ) != ( obj.getClass () ) ) { return false; } final poker.Card other = ( ( poker.Card ) ( obj ) ) ; if ( ( this.rank ) != ( other.rank ) ) { return false; } try { if ( ! ( this.suit.equals ( other.suit ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void onBindViewHolder ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder, int position ) { a1.a2017.iff.seriesanimes.Adapter.SerieAdapter.SerieViewHolder holder_series = ( ( a1.a2017.iff.seriesanimes.Adapter.SerieAdapter.SerieViewHolder ) ( viewHolder ) ) ; a1.a2017.iff.seriesanimes.Model.Serie serie = series.get ( position ) ; holder_series.tituloSerie.setText ( serie.getTitulo () ) ; try { holder_series.ano_lancamentoSerie.setText ( serie.getAno_lancamento () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } holder_series.descricaoSerie.setText ( serie.getDescricao () ) ; holder_series.tipoSerie.setText ( serie.getTipo () ) ; android.util.Log.i ( "------XXXXXXXXX------", serie.getDescricao () ) ; } 
private void checkInspectionTime () { nyc.c4q.jonathancolon.inContaq.utlities.sqlite.ContactDatabaseHelper dbHelper = nyc.c4q.jonathancolon.inContaq.utlities.sqlite.ContactDatabaseHelper.getInstance ( getApplicationContext () ) ; try { db = dbHelper.getWritableDatabase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<nyc.c4q.jonathancolon.inContaq.contactlist.model.Contact> contacts = nyc.c4q.jonathancolon.inContaq.utlities.sqlite.SqlHelper.selectAllContacts ( db ) ; for ( int i = 0; i < 1; i++ ) { nyc.c4q.jonathancolon.inContaq.contactlist.model.Contact contact = contacts.get ( i ) ; startNotification ( contact, context ) ; } } 
@ android.support.annotation.Nullable @java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, @android.support.annotation.Nullable android.view.ViewGroup container, @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { view = inflater.inflate ( R.layout.fragment_sidebar, container, false ) ; campoOs = view.findViewById ( R.id.sidebar_op_text ) ; campoMatricula = view.findViewById ( R.id.sidebar_user_text ) ; campoSenha = view.findViewById ( R.id.sidebar_user_password ) ; campoOs.setText ( os ) ; try { campoMatricula.setText ( matricula ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } campoSenha.setText ( senha ) ; return view; } 
private boolean validateQuantity () { int quantity = java.lang.Integer.valueOf ( subgroupsQuantity.getText () .toString () ) ; try { if ( quantity > ( getMaximumQuantity () ) ) { subgroupsQuantityLayout.setError ( getString ( R.string.nwinners_msg_validate_quantity, group.getItemCount () ) ) ; requestFocus ( subgroupsQuantity ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public static boolean listContainsArray ( java.util.List<short[]> list, short[] array ) { try { for ( short[] element : list ) { if ( java.util.Arrays.equals ( element, array ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onGameStart () { getContext () .alliance ( 1, 1 ) ; try { getContext () .alliance ( 2, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } net.toyknight.aeii.campaign.Message message = new net.toyknight.aeii.campaign.Message ( 5, net.toyknight.aeii.utils.Language.getText ( "CAMPAIGN_CHALLENGE_STAGE_6_MESSAGE_1" ) ) ; getContext () .message ( message ) ; } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { mCurrentLocation = new com.google.android.gms.maps.model.LatLng ( location.getLatitude () , location.getLongitude () ) ; mLastUpdateTime = java.text.DateFormat.getTimeInstance () .format ( new java.util.Date () ) ; try { com.frodo.travigator.utils.CommonUtils.logStatus ( TAG, ( ( ( "Location updated ->" + ( location.getLatitude () ) ) + ":" ) + ( location.getLongitude () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.greenrobot.eventbus.EventBus.getDefault () .post ( new com.frodo.travigator.events.LocationChangedEvent ( mCurrentLocation ) ) ; } 
public static boolean differByOne ( java.lang.String word, java.lang.String ladderLast ) { try { if ( ( word.length () ) != ( ladderLast.length () ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } int count = 0; for ( int i = 0; i < ( word.length () ) ; i++ ) { if ( ( word.charAt ( i ) ) != ( ladderLast.charAt ( i ) ) ) { count++; } } return count == 1; } 
@ java.lang.Override public model.project.Project calculateProject ( model.project.Project project ) { this.project = project; try { if ( ( project.getPhases () .size () ) != 0 ) { calculateLenght ( project ) ; calculateProjectDays ( project ) ; calculateResultSkill ( project ) ; calculateQuarterResults ( project ) ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } return project; } 
@ java.lang.Override public boolean equals ( java.lang.Object object ) { try { if ( object instanceof qora.assets.Trade ) { qora.assets.Trade trade = ( ( qora.assets.Trade ) ( object ) ) ; return ( trade.getInitiator () .equals ( this.getInitiator () ) ) && ( trade.getTarget () .equals ( this.getTarget () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public android.view.View getView ( int position, android.view.View convertView, android.view.ViewGroup parent ) { final org.unicef.rapidreg.forms.childcase.CaseField field = getItem ( position ) ; org.unicef.rapidreg.widgets.helper.WidgetHelper widgetHelper = org.unicef.rapidreg.widgets.helper.WidgetHelperFactory.getWidgetHelper ( getContext () , field ) ; try { widgetHelper.setValue () ; } catch ( Exception ex ) { ex.printStackTrace () ; } widgetHelper.setOnClickListener () ; return widgetHelper.getConvertView () ; } 
@ java.lang.Override public void onStop () { if ( mIntentDataProvider.isOpenedByBrowser () ) { createHerbResultIntent ( org.chromium.chrome.browser.customtabs.CustomTabActivity.RESULT_STOPPED ) ; finish () ; } try { super.onStop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.chromium.chrome.browser.customtabs.CustomTabsConnection.getInstance ( getApplication () ) .dontKeepAliveForSession ( mIntentDataProvider.getSession () ) ; } 
public emerald.portal.JourneyBuilder clickMessageBoxActionMenu () { boolean open = false; try { if ( core.Actions.find ( common.DriverManager.getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.mbActionMenu ) ) { open = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } core.Actions.click ( common.DriverManager.getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.btnMessageActionMenu ) ; core.Wait.waitFor ( common.DriverManager.getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.mbActionMenu, ( !open ) ) ; return this; } 
@ java.lang.Override public org.apache.tajo.datum.Datum terminate ( org.apache.tajo.plan.function.FunctionContext ctx ) { org.apache.tajo.engine.function.builtin.StdDevContext StdDevCtx = ( ( org.apache.tajo.engine.function.builtin.StdDevContext ) ( ctx ) ) ; try { if ( ( StdDevCtx.count ) <= 1 ) { return org.apache.tajo.datum.NullDatum.get () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return org.apache.tajo.datum.DatumFactory.createFloat8 ( java.lang.Math.sqrt ( ( ( StdDevCtx.squareSumOfDiff ) / ( ( StdDevCtx.count ) - 1 ) ) ) ) ; } 
@ org.junit.Test public void testCoreRowTypeSet () { org.gbif.ipt.model.Resource resource = new org.gbif.ipt.model.Resource () ; org.gbif.ipt.model.ExtensionMapping mapping = new org.gbif.ipt.model.ExtensionMapping () ; org.gbif.ipt.model.Extension ext = new org.gbif.ipt.model.Extension () ; try { ext.setRowType ( Constants.DWC_ROWTYPE_TAXON ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mapping.setExtension ( ext ) ; resource.addMapping ( mapping ) ; assertEquals ( Constants.DWC_ROWTYPE_TAXON, resource.getCoreRowType () ) ; } 
public java.io.BufferedWriter getWriter () throws java.io.IOException { try { if ( ( this.lines ) >= ( org.crossref.eventdata.twitter.RotatingFileWriter.MAX_LINES ) ) { this.close () ; this.lines = 0; this.file = this.newFile () ; this.writer = new java.io.BufferedWriter ( new java.io.FileWriter ( this.file ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } ( this.lines ) ++; return this.writer; } 
public void switchContactAvailability ( final java.lang.String user, boolean available ) { try { for ( final com.pz.supportchat.commons.models.PresenceAwareRosterEntry rosterEntry : mRosterEntries ) { if ( org.apache.commons.lang3.StringUtils.equals ( rosterEntry.getUser () , user ) ) { mRosterEntries.get ( mRosterEntries.indexOf ( rosterEntry ) ) .setPresence ( available ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void writePlans ( final java.lang.String outputDir ) { new org.matsim.core.population.PopulationWriter ( scenario.getPopulation () ) .write ( ( ( ( outputDir + "/initial_urban_plans_" ) + ( cloningFactor ) ) + "pct.xml.gz" ) ) ; try { new org.matsim.utils.objectattributes.ObjectAttributesXmlWriter ( scenario.getPopulation () .getPersonAttributes () ) .writeFile ( ( ( ( outputDir + "/initial_urban_persionAttributes_" ) + ( cloningFactor ) ) + "pct.xml.gz" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } playground.agarwalamit.mixedTraffic.patnaIndia.input.urban.PatnaUrbanDemandGenerator.LOG.info ( "Writing Plan and person attributes files are finished." ) ; } 
@ java.lang.Override public void onError ( com.iflytek.cloud.SpeechError error ) { try { if ( error != null ) { showTip ( ( ( ( "error:" + ( error.getErrorCode () ) ) + "," ) + ( error.getErrorDescription () ) ) ) ; } else { android.util.Log.d ( com.lixl.waveform.WaveformViewModule.TAG, "evaluator over" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { com.marketo.MarketoConfig.Notification config = marketo.getNotificationConfig () ; org.json.JSONArray object = new org.json.JSONArray () ; object.put ( BitMapPath () ) ; try { object.put ( getResourseName ( config.getNotificationSmallIcon () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } callbackContext.success ( object ) ; } 
@ java.lang.Override public void onFinishedWithResult ( java.lang.String monthName, int day, int year, long time ) { if ( setDateFromTime ) { if ( time < ( dateToTime ) ) dateFromTime = time; } else { if ( time > ( dateFromTime ) ) dateToTime = time; } try { updateDateRangeLabels ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onRegisterStatus ( final android.content.Context context, final com.meizu.cloud.pushsdk.platform.message.RegisterStatus registerStatus ) { try { if ( ( com.jiang.android.push.flyme.FlymeReceiver.mPushInterface ) != null ) { com.jiang.android.push.utils.JHandler.handler () .post ( new java.lang.Runnable () { @java.lang.Override public void run () { com.jiang.android.push.flyme.FlymeReceiver.mPushInterface.onRegister ( context, registerStatus.getPushId () ) ; } } ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { super.onResume () ; try { if ( ( ! ( iconsPicker ) ) && ( ! ( wallsPicker ) ) ) { setupToolbarHeader () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } jahirfiquitiva.iconshowcase.utilities.color.ToolbarColorizer.setupToolbarIconsAndTextsColors ( this, cAppBarLayout, cToolbar ) ; runLicenseChecker ( jahirfiquitiva.iconshowcase.activities.WITH_LICENSE_CHECKER, jahirfiquitiva.iconshowcase.activities.GOOGLE_PUBKEY, jahirfiquitiva.iconshowcase.activities.WITH_INSTALLED_FROM_AMAZON, jahirfiquitiva.iconshowcase.activities.ALLOW_APT_USE ) ; } 
@ java.lang.Override public double distance ( final geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY; try { for ( int i = 0; i < ( geoList.size () ) ; i++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList.get ( i ) ; final double d = geo.distance ( p ) ; if ( d < distance ) { distance = d; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return distance; } 
@ org.junit.Test public void testValidateFluxLocationsForFaCatchShouldReturnFalseWithNonEmptySpecifiedFLUXLocationsList () { java.util.List<un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FACatch> faCatchFacts = new java.util.ArrayList<> () ; un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FACatch faCatch = new un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FACatch () ; java.util.ArrayList<un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXLocation> fluxLocations = new java.util.ArrayList<> () ; un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXLocation fluxLocation = new un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXLocation () ; fluxLocations.add ( fluxLocation ) ; try { faCatch.setSpecifiedFLUXLocations ( fluxLocations ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } faCatchFacts.add ( faCatch ) ; assertFalse ( fact.validateFluxLocationsForFaCatch ( faCatchFacts ) ) ; } 
public void add ( int index, long element ) { try { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System.arraycopy ( array, index, array, ( index + 1 ) , ( ( end ) - index ) ) ; array[index] = element; ( end ) ++; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private <F extends com.evolveum.midpoint.xml.ns._public.common.common_3.FocusType> void checkExclusion ( com.evolveum.midpoint.model.impl.lens.projector.EvaluatedAssignmentImpl<F> assignmentA, com.evolveum.midpoint.model.impl.lens.projector.EvaluatedAssignmentImpl<F> assignmentB, com.evolveum.midpoint.model.impl.lens.projector.EvaluatedAssignmentTargetImpl roleA, com.evolveum.midpoint.model.impl.lens.projector.EvaluatedAssignmentTargetImpl roleB ) throws com.evolveum.midpoint.util.exception.PolicyViolationException { try { checkExclusionOneWayLegacy ( assignmentA, assignmentB, roleA, roleB ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } checkExclusionOneWayLegacy ( assignmentB, assignmentA, roleB, roleA ) ; checkExclusionOneWayRuleBased ( assignmentA, assignmentB, roleA, roleB ) ; checkExclusionOneWayRuleBased ( assignmentB, assignmentA, roleB, roleA ) ; } 
@ java.lang.Override public java.lang.String getNString ( int ref ) { try { android.util.Log.v ( tk.thebrightstuff.blindtale.view.SceneActivity.TAG, ( ( ( ( "Removing accents from " + ( getIString ( ref ) ) ) + " ( " ) + ref ) + " ) " ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return tk.thebrightstuff.blindtale.utils.StringUtils.removeAccents ( getIString ( ref ) ) .toLowerCase () ; } 
static void modifyUser () throws java.lang.Exception { java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat ( "yyyy-mm-dd" ) ; java.lang.String time; java.util.Date date = simpleDateFormat.parse ( "1996-9-30" ) ; try { time = simpleDateFormat.format ( date ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.io.File image = new java.io.File ( "/home/alex/Pictures/test.jpg" ) ; po.UserPO userPOTest = new po.UserPO ( 2, model.UserType.Customer, "alex2097", "151250187", "Alex Yu", "15951923079", image, 800, model.MemberType.Person, time, 1, null, 3 ) ; dao.UserDao userDao = new daoImpl.UserDaoImpl () ; message.ResultMessage message = userDao.modifyUser ( userPOTest ) ; } 
public static java.util.Date getLatestDate ( java.lang.Class articleClass ) throws java.lang.NullPointerException { org.hibernate.Session session = com.cse10.database.HibernateUtil.getSessionFactory () .openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session.createCriteria ( articleClass ) .setProjection ( org.hibernate.criterion.Projections.max ( "createdDate" ) ) .uniqueResult () ) ) ; try { session.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.util.Date ( latestDate.getTime () ) ; } 
@ org.glowroot.markers.OnlyUsedByTests public void close () throws java.lang.Exception { uiModule.close () ; try { collectorModule.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } transactionModule.close () ; storageModule.close () ; scheduledExecutor.shutdownNow () ; if ( org.glowroot.GlowrootModule.shouldOverrideLogging () ) { ( ( ch.qos.logback.classic.LoggerContext ) ( org.slf4j.LoggerFactory.getILoggerFactory () ) ) .reset () ; } dataDirFileLock.release () ; dataDirLockFile.close () ; } 
public java.lang.String parseTicketID ( java.lang.String subject ) { java.lang.String[] full_subject = subject.split ( "#" ) ; try { if ( ( full_subject[1] ) != "" ) { java.lang.String second_part_subject = full_subject[1]; java.lang.String trimmed_subject = second_part_subject.trim () ; java.lang.String[] id = trimmed_subject.split ( " " ) ; return id[0]; } else { return subject.trim () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void updateItem ( program.Employee t, boolean bln ) { super.updateItem ( t, bln ) ; try { if ( t != null ) { setText ( t.getName () ) ; } else { listviewEmployees.setPlaceholder ( new javafx.scene.control.Label ( "No Employees" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startDrivingActors () { this.trackRecognizerActor = getContext () .actorOf ( akka.actor.Props.create ( ch.hsr.whitespace.javapilot.akka.TrackRecognizerActor.class, getSelf () , new java.util.ArrayList<java.lang.String> ( alreadyCheckedPatterns ) ) ) ; try { this.drivingCoordinatorActor = getContext () .actorOf ( akka.actor.Props.create ( ch.hsr.whitespace.javapilot.akka.DrivingCoordinatorActor.class, getSelf () , properties.getInitialPower () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ butterknife.OnClick ( value = R.id.music_search_btn ) public void onSearch () { xyf.com.appframe.recycleviewtools.SoftInputUtils.hideSoftInput ( this ) ; adapter.clear () ; xyf.com.appframe.MusicSearchActivity.pageno = 1; xyf.com.appframe.recycleviewtools.ProgressDialogUtils.showProgress ( this ) ; try { xyf.com.appframe.MusicSearchActivity.searchkey = input.getText () .toString () .trim () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setTitle ( xyf.com.appframe.MusicSearchActivity.searchkey ) ; load ( xyf.com.appframe.MusicSearchActivity.searchkey, ( "" + ( xyf.com.appframe.MusicSearchActivity.pageno ) ) ) ; } 
@ org.junit.Ignore @org.junit.Test public void performanceTest () throws java.lang.Exception { java.lang.String hdfsStoreName = "org.apache.kylin.storage.hdfs.HDFSResourceStore"; try { org.apache.kylin.common.persistence.ResourceStoreTest.testPerformance ( org.apache.kylin.common.persistence.ResourceStoreTest.mockUrl ( "hdfs", kylinConfig ) , kylinConfig ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String hbaseStoreName = "org.apache.kylin.storage.hbase.HBaseResourceStore.HBaseResourceStore"; org.apache.kylin.common.persistence.ResourceStoreTest.testPerformance ( org.apache.kylin.common.persistence.ResourceStoreTest.mockUrl ( "hbase", kylinConfig ) , kylinConfig ) ; } 
public java.lang.String getUnlocalizedName ( net.minecraft.item.ItemStack stack ) { net.minecraft.nbt.NBTTagCompound tag = stack.getTagCompound () ; try { if ( tag != null ) { return ( ( super.getUnlocalizedName ( stack ) ) + "." ) + ( tag.getString ( "name" ) ) ; } else { return super.getUnlocalizedName ( stack ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.CharSequence getPageTitle ( int position ) { try { if ( position < ( data.getCount () ) ) { java.lang.Object item = data.getItem ( position ) ; if ( item instanceof itkach.aard2.BlobDescriptor ) { return ( ( itkach.aard2.BlobDescriptor ) ( item ) ) .key; } if ( item instanceof itkach.slob.Slob.Blob ) { return ( ( itkach.slob.Slob.Blob ) ( item ) ) .key; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return "???"; } 
@ java.lang.Override public void setStyleType ( final org.openflexo.fge.shapes.ShapeSpecification.ShapeType shapeType ) { final org.openflexo.fge.shapes.ShapeSpecification.ShapeType oldShapeType = this.getStyleType () ; if ( oldShapeType == shapeType ) { return; } final org.openflexo.fge.shapes.ShapeSpecification oldSS = this.getShapeSpecification () ; this.shapeType = shapeType; this.pcSupport.firePropertyChange ( org.openflexo.fge.control.tools.STYLE_CLASS_CHANGED, oldShapeType, this.getStyleType () ) ; this.pcSupport.firePropertyChange ( "styleType", oldShapeType, this.getStyleType () ) ; try { this.pcSupport.firePropertyChange ( "shapeSpecification", oldSS, this.getShapeSpecification () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startActivity ( int i ) { android.os.Bundle bundle; android.content.Intent intent; bundle = new android.os.Bundle () ; bundle.putInt ( "room", i ) ; intent = new android.content.Intent ( this, hevs.project.SketchAgenda.class ) ; intent.putExtras ( bundle ) ; try { this.startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } finish () ; } 
public java.util.List<bb.tokenizer.Token> tokenize ( java.lang.String str ) { java.util.ArrayList<bb.tokenizer.Token> tokens = new java.util.ArrayList<bb.tokenizer.Token> () ; try { while ( ( str.length () ) > 0 ) { str = addNextToken ( str, tokens ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } line = 1; column = 1; return tokens; } 
@ java.lang.Override public boolean execute () { try { formDesignerPanel.getSaveButton () .setText ( I18N.CONSTANTS.save () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } formDesignerPanel.getSaveButton () .setEnabled ( true ) ; formDesignerPanel.getStatusMessage () .setHTML ( I18N.CONSTANTS.saved () ) ; formDesigner.getSavedGuard () .setSaved ( true ) ; return false; } 
@ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest arg0, javax.servlet.http.HttpServletResponse arg1, java.lang.Object arg2, org.springframework.web.servlet.ModelAndView arg3 ) throws java.lang.Exception { if ( arg3 == null ) return; try { arg3.addObject ( "baseurl", com.cportal.config.ConfigDB.retrnConf () .getBASEURL () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( ( "---Request Completed---" + ( com.cportal.config.ConfigDB.getBASEURL () ) ) ) ; } 
public void GameOver ( MyPanel myPanelB, int ClickedInX, int ClickedInY ) { try { if ( HasBomb ( myPanelB, ClickedInX, ClickedInY ) ) { for ( int posArray = 0; posArray < ( posXBomb.length ) ; posArray++ ) { myPanelB.colorArray[ClickedInX][ClickedInY] = bombs; myPanelB.colorArray[posXBomb[posArray]][posYBomb[posArray]] = bombs; myPanelB.repaint () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final void cvttpd2dq ( jdk.vm.ci.code.Register dst, jdk.vm.ci.code.Register src ) { assert ( dst.getRegisterCategory () .equals ( AMD64.XMM ) ) && ( src.getRegisterCategory () .equals ( AMD64.XMM ) ) ; com.oracle.graal.asm.amd64.AMD64InstructionAttr attributes = new com.oracle.graal.asm.amd64.AMD64InstructionAttr ( com.oracle.graal.asm.amd64.AMD64Assembler.AvxVectorLen.AVX_128bit, false, false, false, false, target ) ; int encode = simdPrefixAndEncode ( dst, Register.None, src, com.oracle.graal.asm.amd64.AMD64Assembler.VexSimdPrefix.VEX_SIMD_66, com.oracle.graal.asm.amd64.AMD64Assembler.VexOpcode.VEX_OPCODE_0F, attributes ) ; emitByte ( 230 ) ; try { emitByte ( ( 192 | encode ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onFetchFirstPage ( org.wordpress.android.models.PeopleListFilter filter ) { org.wordpress.android.models.Blog blog = org.wordpress.android.WordPress.getCurrentBlog () ; try { if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.TEAM ) ) && ( mCanRefreshUsers ) ) { return fetchUsersList ( blog.getDotComBlogId () , blog.getLocalTableBlogId () , 0 ) ; } else if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.FOLLOWERS ) ) && ( mCanRefreshFollowers ) ) { return fetchFollowersList ( blog.getDotComBlogId () , blog.getLocalTableBlogId () , 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void createHandleForActiveNode () { nodebox.client.Node activeNode = getActiveNode () ; try { if ( activeNode != null ) { nodebox.client.Handle handle = null; nodebox.client.HandleRepository repository = nodebox.client.HandleRepository.of () ; if ( repository.hasHandleClass ( activeNode.getHandle () ) ) { handle = repository.constructHandle ( activeNode.getHandle () ) ; } if ( handle != null ) { handle.setHandleDelegate ( this ) ; viewerPane.setHandle ( handle ) ; } else { viewerPane.setHandle ( null ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Integer getNextDate () { len = datesStream.readRecord ( buffer2, 0, 4 ) ; try { if ( ( len ) != 1 ) { throw new java.lang.IllegalArgumentException ( "Error: Could not read in another byte." ) ; } else { numDecrypted += 1; return ( firstDate ) + ( java.nio.ByteBuffer.wrap ( buffer2 ) .getInt () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.ExceptionHandler ( value = com.carser.viamais.exception.LogException.class ) public void handleException ( final com.carser.viamais.exception.LogException e ) { org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger ( e.getSource () ) ; logger.error ( e.getMessage () ) ; com.carser.viamais.entity.MailConfiguration config = mailConfigurationRepository.findByEvent ( MailConfiguration.Event.ERROR_MESSAGE ) ; try { mailService.sendHtmlEmail ( adminMail, config.getDefaultSender () , config.getDefaultSubject () , e.getMessage () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void getFieldsInformation () { java.lang.Long tsLong = ( java.lang.System.currentTimeMillis () ) / 1000; try { timestamp = tsLong.toString () ; } catch ( Exception ex ) { ex.printStackTrace () ; } testingDate = ( ( ( ( java.lang.String.valueOf ( datepicker.getYear () ) ) + "," ) + ( java.lang.String.valueOf ( ( ( datepicker.getMonth () ) + 1 ) ) ) ) + "," ) + ( java.lang.String.valueOf ( datepicker.getDayOfMonth () ) ) ; } 
@ org.junit.Test @com.hp.autonomy.frontend.selenium.framework.logging.ResolvedBug ( value = "FIND-93" ) public void testNoResults () { final com.autonomy.abc.selenium.find.results.ListView results = findService.search ( "thissearchwillalmostcertainlyreturnnoresults" ) ; new org.openqa.selenium.support.ui.WebDriverWait ( getDriver () , 60L ) .withMessage ( "No results message should appear" ) .until ( org.openqa.selenium.support.ui.ExpectedConditions.textToBePresentInElement ( results.resultsDiv () , "No results found" ) ) ; findPage.scrollToBottom () ; final int occurrences = org.apache.commons.lang3.StringUtils.countMatches ( results.resultsDiv () .getText () , "results found" ) ; try { verifyThat ( "Only one message showing at the bottom of search results", occurrences, org.hamcrest.core.Is.is ( 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private long checkQueryTimeout () { long timeLeft = timeoutAt - ( java.lang.System.currentTimeMillis () ) ; try { if ( timeLeft <= 0 ) { java.lang.String msg = io.druid.common.utils.StringUtils.safeFormat ( "Query[%s] url[%s] timed out.", query.getId () , url ) ; setupResponseReadFailure ( msg, null ) ; throw new io.druid.java.util.common.RE ( msg ) ; } else { return timeLeft; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override void replaceDefunctConnection ( final com.datastax.driver.core.Connection connection ) { if ( connection.state.compareAndSet ( com.datastax.driver.core.OPEN, com.datastax.driver.core.GONE ) ) open.decrementAndGet () ; try { if ( connections.remove ( connection ) ) manager.blockingExecutor () .submit ( new java.lang.Runnable () { @java.lang.Override public void run () { addConnectionIfUnderMaximum () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean isRosterPath ( java.lang.String path ) { try { path = path.trim () .toLowerCase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( path.endsWith ( DataConstants.ROSTER_FILE_EXTENSION ) ) || ( path.endsWith ( DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION ) ) ) || ( path.endsWith ( DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION_OLD ) ) ; } 
public java.util.Set<com.example.lachlan.myfirstapp.code.SubDistrict> subdistricts () { java.util.Set<com.example.lachlan.myfirstapp.code.SubDistrict> subs = new java.util.HashSet<com.example.lachlan.myfirstapp.code.SubDistrict> () ; try { for ( com.example.lachlan.myfirstapp.code.Location loc : locations () ) { if ( loc.municipality.equals ( name ) ) { subs.add ( new com.example.lachlan.myfirstapp.code.SubDistrict ( context, loc.municipality, loc.subdistrict ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return subs; } 
public void putLongArray ( final long[] data, boolean length ) { int l = data.length; try { if ( length ) putInt ( l ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } l *= com.heerbann.unsafe.UnsafeBuffer.sizeOfLong; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory ( data, com.heerbann.unsafe.UnsafeBuffer.longArrayOffset, null, ( ( pointer ) + ( position ) ) , l ) ; position += l; end = ( ( position ) > ( end ) ) ? position : end; } 
public void renderSegment ( lemon.engine.render.Renderable renderable ) { org.lwjgl.opengl.GL11.glEnable ( GL11.GL_BLEND ) ; org.lwjgl.opengl.GL11.glBlendFunc ( GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA ) ; org.lwjgl.opengl.GL11.glEnable ( GL11.GL_DEPTH_TEST ) ; org.lwjgl.opengl.GL20.glUseProgram ( program.getId () ) ; lineRenderer.render ( renderable ) ; org.lwjgl.opengl.GL20.glUseProgram ( 0 ) ; org.lwjgl.opengl.GL11.glDisable ( GL11.GL_DEPTH_TEST ) ; try { org.lwjgl.opengl.GL11.glDisable ( GL11.GL_BLEND ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
static java.io.File constructFile ( java.lang.String basePath, java.lang.String fileName ) { java.io.File file; java.io.File absolute = new java.io.File ( fileName ) ; try { if ( ( org.apache.commons.lang3.StringUtils.isEmpty ( basePath ) ) || ( absolute.isAbsolute () ) ) { file = absolute; } else { file = new java.io.File ( org.apache.commons.configuration2.io.FileLocatorUtils.appendPath ( basePath, fileName ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return file; } 
public void connectionLost ( java.lang.Throwable cause ) { try { log ( new java.lang.StringBuilder ( "Connection to lost! " ) .append ( cause ) .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.facebook.react.bridge.WritableMap params = com.facebook.react.bridge.Arguments.createMap () ; params.putString ( "event", "closed" ) ; params.putString ( "message", "Connection to lost!" ) ; sendEvent ( _reactContext, "mqtt_events", params ) ; } 
public void doIt ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response ) throws java.io.IOException, javax.servlet.ServletException { java.lang.String error = null; try { if ( error != null ) { response.sendRedirect ( ( "home.do?error=" + error ) ) ; } else { response.sendRedirect ( "home.do" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { if ( actorConfigTab.currentEditSite.getName () .equals ( actorConfigTab.newSiteName ) ) { new gov.nist.toolkit.xdstools2.client.PopupMessage ( "You must give site a real name before saving" ) ; return; } try { if ( gov.nist.toolkit.xdstools2.client.PasswordManagement.isSignedIn ) { actorConfigTab.saveSignedInCallback.onSuccess ( true ) ; } else { gov.nist.toolkit.xdstools2.client.PasswordManagement.addSignInCallback ( actorConfigTab.saveSignedInCallback ) ; new gov.nist.toolkit.xdstools2.client.AdminPasswordDialogBox ( actorConfigTab.getTabTopPanel () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getLine ( int number ) throws java.lang.Exception { java.lang.String value = null; java.lang.String pageContent = FitnesseFixtureContext.page.getHtml () ; java.lang.String lineizedContent = fitnesse.fixtures.ResponseExaminer.convertBreaksToLineSeparators ( pageContent ) ; java.util.StringTokenizer tokenizedLines = tokenizeLines ( lineizedContent ) ; try { for ( int i = number; i != 0; i-- ) value = tokenizedLines.nextToken () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return value != null ? value.trim () : null; } 
public void assertEquals ( java.lang.Object expected, java.lang.Object actual ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected.equals ( actual ) ) ) return; try { fail ( format ( expected, actual ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateLine () { int charToRemove = line.length () ; java.lang.System.out.print ( "\r" ) ; line = java.lang.String.format ( "Frames rendered: %d remaining: %d credits earned: %s | %s", rendered, remaining, ( ( creditsEarned ) != null ? creditsEarned : "unknown" ) , ( ( status ) + ( exiting ? " ( Exiting after this frame ) " : "" ) ) ) ; try { java.lang.System.out.print ( line ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = line.length () ; i <= charToRemove; i++ ) { java.lang.System.out.print ( " " ) ; } } 
public int lookup ( int index, short remainder ) { int currentIndex = index; org.bucaojit.filter.Slot currentSlot = set.get ( currentIndex ) ; int runStart = 0; if ( currentSlot.getMetadata () .isClear () ) return -1; try { runStart = findRunStart ( currentIndex ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return checkQuotient ( runStart, remainder ) ; } 
@ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity, float rotation ) { worldServer.theChunkProviderServer.loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; try { entity.setPosition ( x, y, z ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } entity.motionX = entity.motionY = entity.motionZ = 0; } 
private void setPositionsOfPlayers ( java.util.List<game.db.GameResultEntity> gameResults, java.util.List<java.lang.Integer> points ) { java.util.Collections.sort ( points ) ; try { for ( int i = 0; i < ( points.size () ) ; i++ ) { for ( game.db.GameResultEntity gameResult : gameResults ) { if ( gameResult.getPoints () .equals ( points.get ( i ) ) ) { gameResult.setPosition ( ( i + 1 ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected static java.lang.String _gen ( final org.eclipse.ocl.pivot.TypeExp e ) { org.eclipse.xtend2.lib.StringConcatenation _builder = new org.eclipse.xtend2.lib.StringConcatenation () ; java.lang.String _replace = e.getReferredType () .toString () .replace ( "::", "!" ) ; try { _builder.append ( _replace ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return _builder.toString () ; } 
public void updateCallback ( java.util.Map<java.lang.String, ?> properties ) { this.lexevsRemoteApiUrl = ( ( java.lang.String ) ( properties.get ( "lexevsRemoteApiUrl" ) ) ) ; try { this.lgConfigFile = ( ( java.lang.String ) ( properties.get ( edu.mayo.cts2.framework.plugin.service.lexevs.LexBigServiceFactory.LG_CONFIG_FILE_ENV ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.hasBeenConfigured = true; } 
public java.lang.String addDate ( java.lang.String date, char typeRepeat ) { try { switch ( typeRepeat ) { case 'D': return this.addDayInDate ( date ) ; case 'M': return this.addMonthInDate ( date ) ; case 'A': return this.addYearInDate ( date ) ; default: return date; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onCreateOptionsMenu ( android.view.Menu menu, android.view.MenuInflater inflater ) { try { if ( ( movies ) != null ) { inflater.inflate ( R.menu.menu_detail, menu ) ; final android.view.MenuItem favorite = menu.findItem ( R.id.action_favorite ) ; new com.ashwinpilgaonkar.popularmovies.Backend.Favorite ( getActivity () , movies, favorite, 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getBaseUri ( final org.apache.olingo.odata2.api.processor.ODataRequest request ) { java.lang.String baseUri = request.getPathInfo () .getServiceRoot () .toASCIIString () ; try { if ( baseUri.endsWith ( "/" ) ) { baseUri = baseUri.substring ( 0, ( ( baseUri.length () ) - 1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return baseUri; } 
public void remGroup ( java.lang.String uname, java.lang.String gID ) { try { for ( de.jattyv.jcapi.server.virtual.dataController.data.User user : users ) { if ( user.getUserName () .equals ( uname ) ) { for ( de.jattyv.jcapi.client.gui.cell.FG fg : user.getFgs () ) { if ( fg.getId () .equals ( gID ) ) { if ( ( fg.getType () ) == ( de.jattyv.jcapi.client.gui.cell.FG.FG_TYPE_GROUP ) ) { user.getFgs () .remove ( fg ) ; return; } } } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void done ( java.io.File file, com.parse.ParseException e ) { com.clothapp.resources.Image toAdd = new com.clothapp.resources.Image ( file, object.getObjectId () , object.getString ( "user" ) , object.getList ( "like" ) , object.getInt ( "nLike" ) , object.getList ( "hashtag" ) , object.getList ( "vestiti" ) , object.getList ( "tipo" ) ) ; try { if ( ! ( com.clothapp.ImageFragment.lista.contains ( toAdd ) ) ) { com.clothapp.ImageFragment.lista.add ( toAdd ) ; mPagerAdapter.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void test_getFormats () { java.lang.String[] orgFormats = ( ( java.lang.String[] ) ( formats.clone () ) ) ; java.lang.String[] f = ( ( java.lang.String[] ) ( f1.getFormats () ) ) ; try { assertTrue ( "Wrong formats", ( f == ( formats ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } f[0] = "Modified"; assertTrue ( "Formats copied", ( f != orgFormats ) ) ; } 
@ java.lang.Override public void updatePlayerMoveState () { net.minecraft.client.entity.EntityPlayerSP player = net.minecraft.client.Minecraft.getMinecraft () .thePlayer; try { if ( ( ClientHookHandler.hook ) == null ) { original.updatePlayerMoveState () ; player.movementInput = original; } else if ( player.onGround ) { super.updatePlayerMoveState () ; } else { this.jump = net.minecraft.client.Minecraft.getMinecraft () .gameSettings.keyBindJump.getIsKeyPressed () ; this.sneak = net.minecraft.client.Minecraft.getMinecraft () .gameSettings.keyBindSneak.getIsKeyPressed () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.google.gwt.uibinder.client.UiHandler ( value = "browseCentury" ) public void onClickOfBrowseCentury ( com.google.gwt.event.dom.client.ClickEvent e ) { centuryPopup.clear () ; centuryPresenterWidget.setAddResourceData ( centurySelectedValues ) ; centuryPopup.add ( centuryPresenterWidget.getWidget () ) ; try { centuryPopup.show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } centuryPopup.center () ; centuryPopup.getElement () .getStyle () .setZIndex ( 999999 ) ; } 
@ java.lang.Override public interfaces.Problem hcSteepestAscent ( interfaces.Problem prob ) { puzzle.PuzzleProblem current = ( ( puzzle.PuzzleProblem ) ( prob ) ) ; puzzle.PuzzleState neighbor; try { while ( true ) { neighbor = ( ( puzzle.PuzzleState ) ( current.getBestNeighbor () ) ) ; if ( ( neighbor.getValue () ) >= ( current.getState () .getValue () ) ) return current; current.addAction ( neighbor.actstr ) ; current.setState ( neighbor ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.btnTimerPlay: com.mkhan.myapplication.TimerActivity.isTimerOn = true; togglePlayButtontext ( ( ( android.widget.Button ) ( v ) ) ) ; break; case R.id.btnTimerReset: com.mkhan.myapplication.TimerActivity.isTimerOn = false; togglePlayButtontext ( ( ( android.widget.Button ) ( v ) ) ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.context.annotation.Bean public javax.persistence.EntityManagerFactory entityManagerFactory () { java.util.logging.Logger.getLogger ( "org.hibernate" ) .setLevel ( java.util.logging.Level.INFO ) ; org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter () ; vendorAdapter.setShowSql ( true ) ; try { vendorAdapter.setGenerateDdl ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } vendorAdapter.setDatabasePlatform ( "org.hibernate.dialect.PostgreSQLDialect" ) ; org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean factory = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean () ; factory.setJpaVendorAdapter ( vendorAdapter ) ; factory.setPackagesToScan ( "com.teamd.taxi.entity" ) ; factory.setDataSource ( dataSource () ) ; factory.afterPropertiesSet () ; return factory.getObject () ; } 
public void ExpectedPresident ( courtree.Node focusNode ) { try { if ( focusNode != null ) { ExpectedPresident ( focusNode.leftChild ) ; if ( ( president.getbDate () ) <= ( focusNode.getbDate () ) ) { java.lang.System.out.println ( focusNode ) ; setPresident ( focusNode ) ; } ExpectedPresident ( focusNode.rightChild ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void shopDetection ( com.mygdx.runrunrun.sprites.MoveableObject firstObj ) { shop = ( ( com.mygdx.runrunrun.sprites.Shop ) ( firstObj ) ) ; try { if ( ( firstObj.contains ( hero.getPosition () ) ) && ( ( firstObj.getHide () ) == false ) ) { stopForShop = true; if ( ( flyCount ) <= 0 ) exitShopTimer = 100; } else { stopForShop = false; enteredShop = false; if ( hero.getStop () ) { hero.toggleStop () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void successfulGet () throws java.lang.Exception { try { com.springernature.watermark.api.WatermarkApiIntegrationTest.LOG.info ( "Testing successfulGet" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.springernature.watermark.model.Book book = com.springernature.watermark.model.ModelTestUtil.createDummyBook () ; java.lang.Long id = postRequest ( book ) ; com.springernature.watermark.api.RequestEntity entity = com.springernature.watermark.api.RequestEntity.get ( new java.net.URI ( ( ( ( baseUrl ) + "/" ) + id ) ) ) .build () ; com.springernature.watermark.api.ResponseEntity<java.util.Map> response = this.testRestTemplate.exchange ( entity, java.util.Map.class ) ; assertEquals ( HttpStatus.OK, response.getStatusCode () ) ; } 
private void addWorkers ( int count ) { workerCount = count; workers = new java.util.ArrayList<> () ; try { for ( int i = 0; i < count; i++ ) { com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker worker = new com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker ( this, i ) ; workers.add ( worker ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Object resultObject ) { try { if ( resultObject == null ) { } else if ( resultObject instanceof byte[] ) { mImageBytesConsumer.onAssetBytes ( mAsset, ( ( byte[] ) ( resultObject ) ) ) ; } else if ( resultObject instanceof java.lang.Exception ) { mImageBytesConsumer.onAssetError ( mAsset, ( ( java.lang.Exception ) ( resultObject ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.ArrayList<java.lang.String> getCategoryEndList () { java.util.ArrayList<java.lang.String> categoryEndList = new java.util.ArrayList<java.lang.String> () ; try { if ( ( categoriesInfo.getCategories () ) != null ) { for ( com.nusclimb.live.crimp.common.json.CategoriesResponseBody.Category c : categoriesInfo.getCategories () ) { categoryEndList.add ( c.getTimeEnd () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return categoryEndList; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @java.lang.Override public void onViewCreated ( android.view.View view, android.os.Bundle savedInstanceState ) { try { super.onViewCreated ( view, savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final P presenter = getPresenter () ; if ( presenter != null ) { butterknife.ButterKnife.bind ( presenter, view ) ; } if ( presenter != null ) { presenter.setView ( this ) ; } ready () ; } 
@ java.lang.Override public void onEndpointPoolConfigurationSet ( org.openhab.io.transport.modbus.endpoint.ModbusSlaveEndpoint endpoint, org.openhab.io.transport.modbus.endpoint.EndpointPoolConfiguration otherConfig ) { try { synchronized ( this ) { if ( ( ( ( this.configuration ) != null ) && ( endpoint.equals ( this.endpoint ) ) ) && ( ! ( this.configuration.equals ( otherConfig ) ) ) ) { updateStatus ( ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, java.lang.String.format ( "Endpoint '%s' has conflicting parameters: parameters of this thing ( %s ) {} are different from {}", endpoint, this.thing, this.configuration, otherConfig ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void write ( io.netty.buffer.ByteBuf byteBuf ) throws java.lang.Exception { try { byteBuf.writeInt ( getPlayername () .length () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } byteBuf.writeCharSequence ( getPlayername () , com.google.common.base.Charsets.UTF_8 ) ; byteBuf.writeInt ( getHost () .length () ) ; byteBuf.writeCharSequence ( getHost () , com.google.common.base.Charsets.UTF_8 ) ; byteBuf.writeInt ( getPort () ) ; } 
@ java.lang.Override public void onTimeChanged ( android.widget.TimePicker timePicker, int hourOfDay, int minute ) { try { super.onTimeChanged ( timePicker, hourOfDay, minute ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( mIgnoreEvent ) ) { minute = getRoundedMinute ( minute ) ; mIgnoreEvent = true; timePicker.setCurrentMinute ( minute ) ; mIgnoreEvent = false; } } 
public java.lang.String[] getPacket () throws java.io.IOException { try { while ( input.ready () ) { char c = ( ( char ) ( input.read () ) ) ; if ( c == '\n' ) { java.lang.String output = buffer.toString () ; buffer = new java.lang.StringBuilder () ; return output.split ( "\t" ) ; } else buffer.append ( c ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void start () { try { android.util.Log.d ( org.example.xwalkembedded.XWalkExoMediaPlayer.TAG, "==== in start " ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mSystemMediaPlayer ) && ( ( mMediaPlayer ) != null ) ) { mMediaPlayer.start () ; } else if ( ( player ) != null ) { player.setPlayWhenReady ( true ) ; } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView<?> parentView, android.view.View selectedItemView, int position, long id ) { java.lang.String[] userName = userSpinner.getSelectedItem () .toString () .split ( " " ) ; com.iutbmteprow.shootingarchery.dbman.Utilisateur curUser = db.getUtilisateurFromName ( userName[1], userName[0] ) ; try { idUserSelected = curUser.getId () ; } catch ( Exception ex ) { ex.printStackTrace () ; } ListArcFragments ( curUser.getId () ) ; } 
@ java.lang.Override public boolean onBackPressed () { int currentPos = mViewPager.getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter.getFragmentTag ( currentPos ) ; try { if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () .findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { return ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) .onBackPressed () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public java.lang.String getFormattedDate ( java.lang.String str ) { com.github.TimeParser tp = new com.github.TimeParser () ; long[] time = tp.GetInput ( str ) ; java.util.Date date0 = new java.util.Date ( time[0] ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss z" ) ; try { sdf.setTimeZone ( java.util.TimeZone.getTimeZone ( "GMT-4" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String formattedDate = sdf.format ( date0 ) ; return formattedDate; } 
public void setThumbnailBitmap ( android.graphics.Bitmap bm, java.lang.String thumbPath ) { photos_iv.setEnabled ( true ) ; android.graphics.Bitmap thumbnail = android.media.ThumbnailUtils.extractThumbnail ( bm, 213, 213 ) ; try { btn_thumbnail.setImageBitmap ( thumbnail ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.thumbPath = thumbPath; btn_thumbnail.setVisibility ( View.VISIBLE ) ; } 
private boolean hasUnknownTokenAt ( org.languagetool.AnalyzedTokenReadings[] tokens, int startPos, int endPos ) { try { for ( int i = startPos; i < endPos; i++ ) { org.languagetool.AnalyzedTokenReadings token = tokens[i]; for ( org.languagetool.AnalyzedToken analyzedToken : token.getReadings () ) { if ( analyzedToken.hasNoTag () ) { return true; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void restoreFromBundle ( com.watabou.utils.Bundle bundle ) { super.restoreFromBundle ( bundle ) ; int[] values = bundle.getIntArray ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PRESSES ) ; for ( int value : values ) presses.add ( value ) ; try { partialTime = bundle.getFloat ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PARTIALTIME ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void fadeIn ( com.badlogic.gdx.math.Matrix4 cameraCombined, float delta ) { fadeOutLight.setActive ( false ) ; fadeInLight.setActive ( true ) ; if ( ( timePassedDuringFadeIn ) < ( timeToFadeIn ) ) { fadeInAlpha = 1 - ( ( timePassedDuringFadeIn ) / ( timeToFadeIn ) ) ; fadeInLight.setColor ( new com.badlogic.gdx.graphics.Color ( 0, 0, 0, ( 1 - ( fadeInAlpha ) ) ) ) ; rayHandler.setCombinedMatrix ( cameraCombined ) ; timePassedDuringFadeIn += delta; } else { isNewLevel = false; } try { rayHandler.updateAndRender () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initializeModel () throws java.io.IOException { java.util.List<edu.mtu.parser.ChemicalDto> chemicals = edu.mtu.parser.Parser.parseChemicals ( properties.getChemicalsFileName () ) ; edu.mtu.catalog.ReactionRegistry registry = edu.mtu.catalog.ReactionRegistry.getInstance () ; edu.mtu.Reactor.Reactor reactor = edu.mtu.Reactor.Reactor.getInstance () ; try { for ( edu.mtu.parser.ChemicalDto chemical : chemicals ) { edu.mtu.compound.Species species = registry.getSpecies ( chemical.formula ) ; reactor.createEntities ( species, chemical.mols ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean isFloat ( java.lang.String str ) { try { if ( str.contains ( "$" ) ) { return isRegisterFloat.get ( str ) ; } else { return ( ( str.contains ( "." ) ) || ( str.startsWith ( "_f" ) ) ) || ( str.endsWith ( "_float" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean clustersMatch ( double[] cluster1, double[] cluster2, Emat emat ) { if ( ( cluster1 == null ) || ( cluster2 == null ) ) return true; try { for ( int i = 0; i < ( cluster1.length ) ; i++ ) { if ( ( java.lang.Math.abs ( ( ( cluster1[i] ) - ( cluster2[i] ) ) ) ) > 2 ) return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void handlePremiumAPI ( final jd.plugins.DownloadLink downloadLink, final jd.plugins.Account account ) throws java.lang.Exception, jd.plugins.PluginException { loginAPI ( account ) ; try { if ( ( account.getType () ) == ( jd.plugins.Account.AccountType.FREE ) ) { handleDownloadAPI ( downloadLink, true, 1, false, "directlink_freeaccount" ) ; } else { handleDownloadAPI ( downloadLink, true, ( -4 ) , true, "directlink_premiumaccount" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.util.Properties loadSettings ( data.Element p_element ) { java.util.Properties x_settings = new java.util.Properties () ; try { if ( p_element != null ) { java.util.List x_properties = p_element.getChildren () ; for ( java.lang.Object x_property : x_properties ) { data.Element x_propertyElem = ( ( data.Element ) ( x_property ) ) ; x_settings.setProperty ( x_propertyElem.getAttributeValue ( XmlConstants.s_PROPERTY_NAME ) , x_propertyElem.getAttributeValue ( XmlConstants.s_PROPERTY_VALUE ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return x_settings; } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { int hold = 0; newEmployee = new workSQL.Employee ( hold, "", "", "", "" ) ; workSQL.EmployeeDetailDialog addD = new workSQL.EmployeeDetailDialog ( thisFrame, thisFrame, "Add a new employee", true, newEmployee ) ; addD.updateButton.setEnabled ( false ) ; addD.deleteButton.setEnabled ( false ) ; addD.employeeNumberField.setEnabled ( false ) ; try { addD.setVisible ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void fourOfAKindTest2 () { int[] cards = new int[] { 12, 25, 38, 51, 1, 7, 29 }; for ( int i = 0; i < ( cards.length ) ; i++ ) deck.getCard ( cards[i] ) .displayCard () ; int ans = Table.handValue ( cards ) ; try { org.junit.Assert.assertEquals ( 8, ans ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void clear () { de.baleipzig.iris.common.Dimension dim = this.dim () ; try { layer.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < ( dim.getY () ) ; i++ ) { java.util.Vector<de.baleipzig.iris.model.neuralnet.node.INode> row = new java.util.Vector<> () ; for ( int j = 0; j < ( dim.getX () ) ; j++ ) row.add ( null ) ; layer.add ( row ) ; } } 
@ java.lang.Override public void getTooltip ( binnie.core.craftgui.Tooltip tooltip ) { if ( ( species ) == null ) { return; } try { switch ( discovered ) { case SHOW: case DISCOVERED: tooltip.add ( species.getName () ) ; break; case UNDISCOVERED: tooltip.add ( binnie.core.util.I18N.localise ( "binniecore.gui.database.discovered.undiscovered" ) ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public ch.puzzle.itc.mobiliar.business.resourcegroup.control.CopyResourceResult doCopyResource ( java.lang.Integer targetResourceId, java.lang.Integer originResourceId, ch.puzzle.itc.mobiliar.business.foreignable.entity.ForeignableOwner actingOwner ) throws ch.puzzle.itc.mobiliar.business.foreignable.entity.ForeignableOwnerViolationException, ch.puzzle.itc.mobiliar.common.exception.AMWException { ch.puzzle.itc.mobiliar.business.resourcegroup.entity.ResourceEntity targetResource = commonDomainService.getResourceEntityById ( targetResourceId ) ; ch.puzzle.itc.mobiliar.business.resourcegroup.entity.ResourceEntity originResource = commonDomainService.getResourceEntityById ( originResourceId ) ; try { if ( ! ( permissionBoundary.canCopyFromSpecificResource ( originResource, targetResource.getResourceGroup () ) ) ) { throw new ch.puzzle.itc.mobiliar.common.exception.NotAuthorizedException ( "Permission Denied" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return copyResourceDomainService.copyFromOriginToTargetResource ( originResource, targetResource, actingOwner ) ; } 
@ java.lang.Override public void done ( com.parse.ParseUser user, com.parse.ParseException e ) { if ( e != null ) { android.util.Log.e ( com.codepath.timeline.network.TimelineClient.TAG, ( ( ( "Exception from getUser ( " + userObjectId ) + " ) : " ) + ( e.getMessage () ) ) ) ; return; } try { if ( user != null ) { android.util.Log.d ( com.codepath.timeline.network.TimelineClient.TAG, "Success getUser" ) ; if ( listener != null ) { listener.onGetUser ( user ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isStarBaseDeployed () { try { if ( ( ( ships.size () ) <= 7 ) && ( ( ships.size () ) > 0 ) ) { org.openRealmOfStars.player.ship.Ship ship = ships.get ( 0 ) ; if ( ( ship.isStarBase () ) && ( ship.getFlag ( Ship.FLAG_STARBASE_DEPLOYED ) ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void determineUploadTime ( java.util.List<com.example.plpa.utils.ExpApplyJson.Policy> policies ) { android.content.IntentFilter filter = new android.content.IntentFilter () ; filter.addAction ( Intent.ACTION_POWER_CONNECTED ) ; try { for ( com.example.plpa.utils.ExpApplyJson.Policy policy : policies ) { if ( ( policy.Id ) == ( com.example.plpa.utils.UploadPolicy.CONNECTWIFI ) ) filter.addAction ( WifiManager.WIFI_STATE_CHANGED_ACTION ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } registerBroadcastReciever ( filter ) ; } 
public java.lang.String textReturnResultOfSpecialFunctions ( int line, int pos ) { java.lang.StringBuilder s = new java.lang.StringBuilder () ; java.lang.String res = nextFreeRegister () ; try { s.append ( textMove ( "$v0", res, line, pos ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return s.toString () ; } 
@ org.junit.Test public void testUsePlatformDefaultIfNoCharset () throws java.lang.Exception { final org.apache.logging.log4j.core.layout.PatternLayout layout = org.apache.logging.log4j.core.layout.PatternLayout.newBuilder () .withPattern ( "%m" ) .withConfiguration ( ctx.getConfiguration () ) .build () ; try { assertEquals ( java.nio.charset.Charset.defaultCharset () , layout.getCharset () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStart () { android.util.Log.v ( "Testing Print", "onStart" ) ; com.google.android.gms.auth.api.signin.GoogleSignInOptions gso = new com.google.android.gms.auth.api.signin.GoogleSignInOptions.Builder ( com.google.android.gms.auth.api.signin.GoogleSignInOptions.DEFAULT_SIGN_IN ) .requestEmail () .build () ; mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) .addApi ( Auth.GOOGLE_SIGN_IN_API, gso ) .build () ; try { mGoogleApiClient.connect () ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onStart () ; } 
private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { try { if ( ids != null ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder.append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) .getASCII () ) .append ( ' ' ) ; } return builder.toString () .substring ( 0, ( ( builder.length () ) - 2 ) ) ; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.coast.model.ResultMSG doSell ( java.lang.String shopinFilePath, java.lang.String outPutFilePath ) { com.coast.model.ResultMSG resultMSG = new com.coast.model.ResultMSG () ; resultMSG.setErrorMessage ( "" ) ; com.coast.service.SellService sellService = new com.coast.service.impl.SellServiceImpl () ; java.util.List<com.coast.model.Product> products = sellService.getProductsFromShopinSellExcel ( shopinFilePath, resultMSG ) ; try { sellService.write ( products, outPutFilePath, resultMSG, shopinFilePath ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return resultMSG; } 
public void respondAccepted_whenCreateARefund ( int amount, java.lang.String gatewayAccountId, java.lang.String chargeId, java.lang.String refundId, java.lang.String status, java.lang.String createdDate ) { try { whenCreateRefund ( amount, gatewayAccountId, chargeId ) .respond ( org.mockserver.model.HttpResponse.response () .withStatusCode ( uk.gov.pay.api.utils.ACCEPTED_202 ) .withHeader ( uk.gov.pay.api.utils.CONTENT_TYPE, javax.ws.rs.core.MediaType.APPLICATION_JSON ) .withBody ( buildGetRefundResponse ( refundId, amount, status, createdDate ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private javax.swing.JTextField createText ( java.lang.String text, int width, int height, boolean editable ) { javax.swing.JTextField textfield = new javax.swing.JTextField ( text ) ; try { textfield.setEditable ( editable ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( !editable ) { textfield.setBackground ( null ) ; } gui.GUI.setfinalSize ( textfield, new java.awt.Dimension ( width, height ) ) ; return textfield; } 
private java.util.Set<java.security.Principal> collectPrincipals ( final javax.jcr.Credentials credentials ) { final java.util.Set<java.security.Principal> principals = new java.util.HashSet<> () ; try { for ( final org.fcrepo.auth.common.PrincipalProvider p : this.getPrincipalProviders () ) { final java.util.Set<java.security.Principal> ps = p.getPrincipals ( credentials ) ; if ( ps != null ) { principals.addAll ( p.getPrincipals ( credentials ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return principals; } 
public void add ( com.google.gson.JsonArray cardsJson ) { try { for ( int i = 0; i < ( cardsJson.size () ) ; i++ ) { cards.add ( new org.leanpoker.player.Card ( cardsJson.get ( i ) .getAsJsonObject () .get ( "suit" ) .getAsString () , cardsJson.get ( 1 ) .getAsJsonObject () .get ( "rank" ) .getAsString () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean removeDataSet ( T d ) { if ( d == null ) return false; boolean removed = mDataSets.remove ( d ) ; try { if ( removed ) { mYValCount -= d.getEntryCount () ; mYValueSum -= d.getYValueSum () ; calcMinMax () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return removed; } 
private void startService ( final int target ) { try { new java.lang.Thread ( new java.lang.Runnable () { @java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity.this, com.example.hjk.testing.Info.class ) .putExtra ( "id", id ) .putExtra ( "driver", driv ) .putExtra ( "target", target ) ) ; } else { android.os.Looper.prepare () ; accessError () ; android.os.Looper.loop () ; } } } ) .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void shuffle () { try { for ( int i = 51; i > 0; i-- ) { int shuf = ( ( int ) ( ( java.lang.Math.random () ) * ( i + 1 ) ) ) ; Card temp = deck[i]; deck[i] = deck[shuf]; deck[shuf] = temp; } } catch ( Exception ex ) { ex.printStackTrace () ; } cardsUsed = 0; } 
private static void startWorker ( ru.bigspawn.parser.bot.Bot bot, java.lang.String url ) throws java.io.UnsupportedEncodingException { ru.bigspawn.parser.parser.AlterPortalParser parser = new ru.bigspawn.parser.parser.AlterPortalParser ( url ) ; java.lang.String loggerName = ru.bigspawn.parser.Utils.getLoggerNameFromUrl ( url ) ; ru.bigspawn.parser.Worker worker = new ru.bigspawn.parser.Worker ( parser, bot, loggerName ) ; try { ru.bigspawn.parser.Main.logger.debug ( ( "Create " + worker ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Thread thread = new java.lang.Thread ( worker, ( "Thread: " + loggerName ) ) ; thread.start () ; ru.bigspawn.parser.Main.logger.debug ( ( "Start " + thread ) ) ; } 
private void refreshLoc () { locations.clear () ; try { if ( ( selectedHP ) != null ) { for ( org.Point p : selectedHP.getLocations () ) { javafx.scene.control.ChoiceBox<org.Point> cb = new javafx.scene.control.ChoiceBox<> () ; cb.setItems ( javafx.collections.FXCollections.observableList ( rooms ) ) ; cb.setValue ( p ) ; locations.add ( cb ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void lock () { try { if ( ( ( reentrant ) != null ) && ( reentrant.isSame () ) ) { reentrant.acquire () ; } else { while ( ! ( cas.compareAndSet ( false, true ) ) ) { waitForSignal () ; } reentrant = new org.arivu.utils.lock.Reentrant () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean decode ( @org.jetbrains.annotations.NotNull final com.intellij.openapi.util.TextRange rangeInsideHost, @org.jetbrains.annotations.NotNull final java.lang.StringBuilder outChars ) { com.intellij.openapi.util.TextRange.assertProperRange ( rangeInsideHost ) ; java.lang.String subText = rangeInsideHost.substring ( myHost.getText () ) ; try { if ( ( myHost.getRawString () ) != null ) { outChars.append ( subText ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return parseStringCharacters ( subText, outChars ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "getSchoolById", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView getSchoolById ( @org.springframework.web.bind.annotation.RequestParam int schId ) { org.springframework.web.servlet.ModelAndView mv = new org.springframework.web.servlet.ModelAndView ( "school_update" ) ; java.util.List<bean.School> schoolList = schoolService.getSchoolbyId ( schId ) ; try { if ( ! ( schoolList.isEmpty () ) ) { bean.School school = schoolList.get ( 0 ) ; mv.addObject ( "school", school ) ; } else { java.lang.System.out.println ( " no such school" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return mv; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech.isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) txt_speech.speak ( wordsEN[wordsIndex], TextToSpeech.QUEUE_FLUSH, null, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.quicktionary.backend.TextNode generateNotFound ( java.lang.String string ) { org.quicktionary.backend.TextNode root; org.quicktionary.backend.TextNode paragraph; org.quicktionary.backend.TextNode header; org.quicktionary.backend.TextNode text; root = new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.ROOT_TYPE ) ; header = root.appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.HEADER_TYPE ) ) ; paragraph = root.appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.PARAGRAPH_TYPE ) ) ; header.setContent ( "Sorry!" ) ; text = paragraph.appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.PLAIN_TYPE ) ) ; try { text.setContent ( ( ( "We couldn't find the page for the word " + string ) + "." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return root; } 
private synchronized be.olsson.slackappender.SlackAppender.MessageStat getMessageStat ( org.apache.log4j.spi.LoggingEvent event ) { try { if ( meltdownProtection ) { java.lang.String key = event.getMessage () .toString () ; be.olsson.slackappender.SlackAppender.MessageStat stat = similar.get ( key ) ; if ( stat == null ) { stat = new be.olsson.slackappender.SlackAppender.MessageStat () ; stat.lastLogged = java.lang.System.currentTimeMillis () ; } similar.put ( key, stat ) ; ( stat.countSinceLastLog ) ++; stat.lastSeen = java.lang.System.currentTimeMillis () ; return stat; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ javafx.fxml.FXML public void save ( javafx.event.ActionEvent event ) throws java.io.IOException { season.save ( "save1.json" ) ; javafx.scene.Parent root = javafx.fxml.FXMLLoader.load ( getClass () .getResource ( "/views/home.fxml" ) ) ; javafx.stage.Stage stage = ( ( javafx.stage.Stage ) ( budget.getScene () .getWindow () ) ) ; try { stage.getScene () .setRoot ( root ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { int position = ( ( java.lang.Integer ) ( v.getTag () ) ) ; me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType; try { if ( ( v.getId () ) == ( R.id.ib_hp_minus_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.DECREASE_HEALTH; } else if ( ( v.getId () ) == ( R.id.ib_hp_add_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.INCREASE_HEALTH; } else { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.ITEM_CLICK; } } catch ( Exception ex ) { ex.printStackTrace () ; } clickListener.onCombatClick ( position, eventType ) ; } 
public double getprice ( java.lang.String symbol ) throws java.io.IOException { yahoofinance.Stock stock = yahoofinance.YahooFinance.get ( symbol ) ; if ( stock == null ) return -1; java.lang.String name = stock.getName () ; try { if ( ( name.compareTo ( "N/A" ) ) == 0 ) return -1; } catch ( Exception ex ) { ex.printStackTrace () ; } java.math.BigDecimal price_dec = stock.getQuote () .getPrice () ; java.lang.Double price_dub = price_dec.doubleValue () ; return price_dub; } 
@ java.lang.Override public void readFromNBT ( @org.jetbrains.annotations.NotNull final net.minecraft.nbt.NBTTagCompound compound ) { try { super.readFromNBT ( compound ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final net.minecraft.nbt.NBTTagList furnaceTagList = compound.getTagList ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_FURNACES, Constants.NBT.TAG_COMPOUND ) ; for ( int i = 0; i < ( furnaceTagList.tagCount () ) ; ++i ) { furnaces.add ( net.minecraft.nbt.NBTUtil.getPosFromTag ( furnaceTagList.getCompoundTagAt ( i ) .getCompoundTag ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_POS ) ) ) ; } isSomethingInOven = compound.getBoolean ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_COOKING ) ; } 
public static boolean hasSpace ( proto.game.scene.Scene scene, proto.game.scene.PropType type, int x, int y, int facing ) { try { for ( proto.game.scene.Tile under : proto.game.scene.Prop.tilesUnder ( type, scene, x, y, facing, 0 ) ) { if ( under == null ) return false; for ( proto.game.scene.Element e : under.inside () ) if ( e.wouldBlock ( type ) ) return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override protected void onPostExecute ( kz.mukhamedissa.exchangerates.data.response.ExchangeRateResponse response ) { super.onPostExecute ( response ) ; try { if ( ( response.isSuccess () ) && ( ( response.result ) != null ) ) { kz.mukhamedissa.exchangerates.util.db.orm.ORMFactory.getArticleORM () .delete ( getBaseContext () ) ; kz.mukhamedissa.exchangerates.util.db.orm.ORMFactory.getArticleORM () .insert ( getBaseContext () , response.result ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { try { if ( ( movieIdChosen ) != null ) { int id = java.lang.Integer.parseInt ( movieIdChosen ) ; rentalInfoController.returnMovie ( id, clientSelected.getId () ) ; movieController.returnMovie ( id, panel, scroll ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
int getParallelism () { try { com.google.common.base.Preconditions.checkArgument ( ( ( null == ( parallelism ) ) || ( ( parallelism ) > 0 ) ) , "invalid parallelism %s; must be greater than zero", parallelism ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Integer value = parallelism; if ( null == value ) { value = java.lang.Runtime.getRuntime () .availableProcessors () ; } return value; } 
public void draw () { if ( ( taskPosition ) >= ( game.tasks.size () ) ) { ( taskPosition ) --; } applet.translate ( 20, ( ( CONTROL_HEIGHT ) - 100 ) ) ; try { if ( ( game.tasks.size () ) > 0 ) { applet.text ( game.tasks.get ( taskPosition ) .getName () , 0, 0 ) ; } else { applet.text ( "No tasks available", 0, 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void calculateReceiptsVisibility ( org.iabako.client.ui.form.business.sale.SalePaymentsForm salePaymentsForm ) { if ( ( invoiceTable ) == null ) { return; } org.iabako.client.ui.layout.widget.payment.PaymentTable installmentsTable = salePaymentsForm.getInstallmentTable () ; int installmentsNumber = ( installmentsTable != null ) ? installmentsTable.queryDefinitionDTO.getCountTotal () : 0; int invoicesNumber = ( ( invoiceTable ) != null ) ? invoiceTable.queryDefinitionDTO.getCountTotal () : 0; try { if ( ( invoicesNumber == 1 ) && ( installmentsNumber == 0 ) ) { receiptsPanel.setVisible ( false ) ; } else { receiptsPanel.setVisible ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void generalServerHttpBidirOrStreamr ( boolean isStreamr ) { cfg.setReachableBy ( data.getBundle ( res.getString ( R.string.i2ptunnel_wizard_k_reachable_on ) ) .getString ( Page.SIMPLE_DATA_KEY ) ) ; try { if ( !isStreamr ) cfg.setPort ( java.lang.Integer.parseInt ( data.getBundle ( res.getString ( R.string.i2ptunnel_wizard_k_binding_port ) ) .getString ( Page.SIMPLE_DATA_KEY ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l ) { com.example.sayli.nchs.getset.Logs point = listLogs.get ( i ) ; android.content.Intent startCallReport = new android.content.Intent ( this, com.example.sayli.nchs.ReportCallStatus.class ) ; startCallReport.putExtra ( "id", id ) ; startCallReport.putExtra ( "crn", point.getCrn () ) ; try { startCallReport.putExtra ( "mob", point.getCustNo () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( startCallReport ) ; } 
private java.util.List<java.io.File> addUpperItem ( java.util.List<java.io.File> oldList ) { if ( android.text.TextUtils.isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) .getParentFile () ; try { oldList.add ( 0, upperFile ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return oldList; } 
public int pull_chunk ( double[] data_buffer, double[] timestamp_buffer, double timeout ) throws java.lang.Exception { int[] ec = new int[] { 0 }; long res = edu.ucsd.sccn.LSL.inst.lsl_pull_chunk_d ( obj, data_buffer, timestamp_buffer, data_buffer.length, timestamp_buffer.length, timeout, ec ) ; try { edu.ucsd.sccn.LSL.check_error ( ec ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( int ) ( res ) ) ; } 
public com.ma.schiffeversenken.android.model.Field.ShipsDescriptor newShipsDescriptor ( com.ma.schiffeversenken.android.model.Ship[] placedShips ) { com.ma.schiffeversenken.android.model.Field.ShipsDescriptor desc = new com.ma.schiffeversenken.android.model.Field.ShipsDescriptor () ; desc.shipsPlaced = new java.util.ArrayList<com.ma.schiffeversenken.android.model.Field.ShipDescriptor> ( placedShips.length ) ; try { for ( com.ma.schiffeversenken.android.model.Ship ship : placedShips ) { com.ma.schiffeversenken.android.model.Field.ShipDescriptor shipDesc = new com.ma.schiffeversenken.android.model.Field.ShipDescriptor () .newShipDescriptor ( ship ) ; desc.shipsPlaced.add ( shipDesc ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return desc; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/list", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList<be.ehb.restservermetdatabase.model.Avatar> list ( @org.springframework.web.bind.annotation.RequestParam ( value = "user_id", defaultValue = "0" ) int user_id, @org.springframework.web.bind.annotation.RequestParam ( value = "user_mail", defaultValue = "" ) java.lang.String user_mail ) { try { if ( ( user_id == 0 ) && ( user_mail.equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao.getAvatars () ; } else { if ( ! ( user_mail.equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao.getUserByEmail ( user_mail ) .getUser_id () ; } return be.ehb.restservermetdatabase.dao.AvatarDao.getAvatarsByUser ( user_id ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.ws.rs.GET @javax.ws.rs.Path ( value = "/createFolder" ) @javax.ws.rs.Produces ( value = pt.webdetails.cpf.utils.MimeTypes.JSON ) public java.lang.String createFolder ( @javax.ws.rs.QueryParam ( value = pt.webdetails.cfr.CfrApi.MethodParams.PATH ) java.lang.String path ) throws java.lang.Exception { path = pt.webdetails.cfr.CfrApi.checkRelativePathSanity ( path ) ; try { if ( ( path == null ) || ( org.apache.commons.lang.StringUtils.isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } boolean createResult = getRepository () .createFolder ( path ) ; return new org.json.JSONObject () .put ( "result", createResult ) .toString () ; } 
@ java.lang.Override public java.lang.Object call ( java.lang.Object target ) throws java.lang.Exception { java.lang.String[] bashArgs = ( ( bb.mbaas.api.elements.SDKBashButton ) ( runBtn ) ) .getBashArgs () ; bb.mbaas.api.GlobalProperties globalProperties = new bb.mbaas.api.GlobalProperties () ; java.lang.String testSuitePath = projPathTF.getText () ; bashArgs[2] = testSuitePath; try { ( ( bb.mbaas.api.elements.SDKBashButton ) ( runBtn ) ) .refreshBashArgs ( bashArgs ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public N next () { try { if ( ( ( ( data.size () ) - 1 ) <= ( i ) ) || ( ( data.get ( i ) ) == null ) ) data.add ( getRandomValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return data.get ( ( ( i ) ++ ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_image ) ; android.content.Intent intent = getIntent () ; android.os.Bundle bundle = intent.getExtras () ; thenextvoyager.wallser.Data.DataModel object = ( ( thenextvoyager.wallser.Data.DataModel ) ( bundle.getSerializable ( thenextvoyager.wallser.Data.Constants.MODEL_TAG ) ) ) ; thenextvoyager.wallser.fragment.ImageFragment fragment = thenextvoyager.wallser.fragment.ImageFragment.newInstance ( object ) ; getSupportFragmentManager () .beginTransaction () .add ( R.id.image_frag_container, fragment, thenextvoyager.wallser.Data.Constants.IMAGE_FRAGMENT_TAG ) .commit () ; } 
protected void setBannerVisible () { com.kiroule.jpetstore.vaadinspring.domain.Account account = com.kiroule.jpetstore.vaadinspring.ui.util.CurrentAccount.get () ; try { if ( ( account == null ) || ( ! ( account.isBannerOption () ) ) ) { bannerLayout.setVisible ( false ) ; } else if ( ! ( com.google.common.base.Strings.isNullOrEmpty ( account.getBannerName () ) ) ) { bannerImage.setValue ( account.getBannerName () ) ; bannerLayout.setVisible ( true ) ; bannerLayout.setStyleName ( getBannerStyleName ( account.getBannerName () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; android.content.Intent intent; if ( hasUser () ) intent = new android.content.Intent ( this, rustelefonen.no.drikkevett_android.MainActivity.class ) ; else intent = new android.content.Intent ( this, rustelefonen.no.drikkevett_android.intro.WelcomeActivity.class ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } finish () ; } 
@ java.lang.Override public void setHtmltopdf ( java.lang.String htmlString, java.lang.String collectionTitle ) { try { this.analyticService.setHTMLtoPDF ( htmlString, collectionTitle, false, new com.google.gwt.user.client.rpc.AsyncCallback<java.lang.String> () { @java.lang.Override public void onSuccess ( java.lang.String result ) { getView () .getFrame () .setUrl ( result ) ; } @java.lang.Override public void onFailure ( java.lang.Throwable caught ) { } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static org.kentuni.WeatherStation.Drivers.MCP3427 getDriver () throws java.lang.Exception { try { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { synchronized ( org.kentuni.WeatherStation.Drivers.ADC.class ) { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory.getInstance ( I2CBus.BUS_1 ) , 105 ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return org.kentuni.WeatherStation.Drivers.ADC.instance; } 
private static java.nio.ByteBuffer setUpBuffer ( java.nio.ByteBuffer sector, int value ) { sector.clear () ; java.lang.Byte byteValue = ( ( byte ) ( 0 ) ) ; while ( sector.hasRemaining () ) { sector.put ( byteValue ) ; } try { sector.flip () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return sector; } 
public Graph[] getConnectedComponents () { int nc = flagConnectedComponents () ; Graph[] comps = new Graph[nc]; for ( int i = 0; i < nc; i++ ) { comps[i] = new Graph () ; } try { for ( Graph.Node n : nodes ) { comps[ ( ( int ) ( n.flag ) ) ].nodes.add ( n ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return comps; } 
public static boolean isEmpty ( java.lang.Object payload ) { try { if ( payload instanceof java.lang.String ) { return org.springframework.util.StringUtils.isEmpty ( payload ) ; } else if ( payload instanceof org.w3c.dom.Node ) { return ! ( ( ( org.w3c.dom.Node ) ( payload ) ) .hasChildNodes () ) ; } else { throw new java.lang.RuntimeException ( no.difi.meldingsutveksling.noarkexchange.PayloadUtil.PAYLOAD_UNKNOWN_TYPE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void backupPortfolio ( android.content.Context context, java.lang.String fileName ) { try { persist () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.mAppStorage.putString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON, getStocksJson () .toString () ) .apply () ; java.lang.String rawJson = this.mAppStorage.getString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON, "" ) ; if ( nitezh.ministock.UserData.writeExternalStorage ( context, rawJson, ( fileName + ".txt" ) , "portfoliobackups/" ) ) nitezh.ministock.DialogTools.showSimpleDialog ( context, "PortfolioActivity backed up", ( "Your portfolio settings have been backed up to ministocks/portfoliobackups/" + fileName ) ) ; } 
private void launchBattleFrags () { if ( ( battleUIFragment ) == null ) { battleUIFragment = new com.pokemonbattlearena.android.BattleUIFragment () ; } try { if ( ! ( battleBegun ) ) { battleBegun = true; getFragmentManager () .beginTransaction () .add ( R.id.battle_ui_container, battleUIFragment ) .commitAllowingStateLoss () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public final void unregisterRpcNotificationListener ( com.smartdevicelink.protocol.enums.FunctionID functionID, com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener rpcNotificationListener ) { int id = functionID.getId () ; java.util.HashSet<com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener> listenerSet = mNotificationListeners.get ( id ) ; try { if ( listenerSet != null ) { listenerSet.remove ( rpcNotificationListener ) ; if ( ( listenerSet.isEmpty () ) && ( ( mSdlProxyALM ) != null ) ) { mSdlProxyALM.removeOnRPCNotificationListener ( functionID ) ; mNotificationListeners.put ( id, null ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.lang.Long doInBackground ( com.androidexpansion.filedownloader.DownloadExtraAssets[] remoteLocalResources ) { int count = remoteLocalResources.length; long totalSize = 0; try { for ( int i = 0; i < count; i++ ) { totalSize += downloadExtraAssets.downloadFile ( remoteLocalResources[i] ) ; java.lang.Integer progress = ( ( int ) ( ( ( i + 1 ) / ( ( float ) ( count ) ) ) * 100 ) ) ; publishProgress ( progress ) ; if ( isCancelled () ) break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return totalSize; } 
public void loadPost ( edu.ycp.cs320.groupProject.model.Post p, java.sql.ResultSet resultSet, int index ) throws java.sql.SQLException { try { p.setText ( resultSet.getString ( ( index++ ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } p.setSenderName ( resultSet.getString ( ( index++ ) ) ) ; p.setRoomID ( resultSet.getInt ( ( index++ ) ) ) ; } 
@ java.lang.Override protected void onResume () { if ( ( hasCameraPermissions () ) && ( ( mCamera ) != null ) ) { mCamera.start () ; mProgressBar.setVisibility ( View.GONE ) ; } final net.gini.switchsdk.Image selectedImage = getIntent () .getParcelableExtra ( net.gini.switchsdk.TakePictureActivity.STATE_KEY_SELECTED_IMAGE ) ; try { if ( selectedImage != null ) { mPresenter.onImageSelected ( selectedImage ) ; } else { mPresenter.onTakePictureSelected () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onResume () ; } 
@ org.junit.Test public void testHGapVGapAccessors () { com.github.bordertech.wcomponents.layout.FlowLayout flow; boolean isVertical; try { for ( com.github.bordertech.wcomponents.layout.FlowLayout.Alignment a : FlowLayout.Alignment.values () ) { isVertical = FlowLayout.VERTICAL.equals ( a ) ; flow = new com.github.bordertech.wcomponents.layout.FlowLayout ( a, com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP ) ; org.junit.Assert.assertEquals ( "Incorrect vertical gap", ( isVertical ? com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP : 0 ) , flow.getVgap () ) ; org.junit.Assert.assertEquals ( "incorrect horizontal gap", ( isVertical ? 0 : com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP ) , flow.getHgap () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private guiPacket.Card removeCardFromHand ( guiPacket.Card cardToRemove ) { for ( int i = 0; i < ( hand.size () ) ; i++ ) { if ( ( cardToRemove.compareTo ( hand.get ( i ) ) ) == 0 ) { hand.remove ( i ) ; return cardToRemove; } } try { java.lang.System.out.println ( "RemoveCardFromHand: Something went wrong" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public synchronized void generateBottomEdge () { try { if ( ! ( this.done ) ) { this.hue = 1.0F / 3.0F; this.cancelled = false; drawKochEdge ( ( ( 1 - ( ( java.lang.Math.sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75, ( ( 1 + ( ( java.lang.Math.sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75, this.level ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { myEvents.clear () ; try { sortData ( eventbriteEvents ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } myEvents.addAll ( eventbriteEvents ) ; sortData ( eventfulEvents ) ; myEvents.addAll ( eventfulEvents ) ; mAdapter = new com.festivent.hardeep.festivent.ListAdapter ( this, myEvents, sEvents, true ) ; mRecyclerView.setAdapter ( mAdapter ) ; pBar.setVisibility ( View.GONE ) ; super.onPostExecute ( aVoid ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_alarm_edit ) ; java.lang.String title; title = getString ( R.string.editAlarmHeader ) ; if ( ( getActionBar () ) != null ) { getActionBar () .setTitle ( title ) ; } try { alarmTimePicker = ( ( android.widget.TimePicker ) ( findViewById ( R.id.alarmTimePicker ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } alarmManager = ( ( android.app.AlarmManager ) ( getSystemService ( csuchico.smartnap.ALARM_SERVICE ) ) ) ; alarmNameText = ( ( android.widget.EditText ) ( findViewById ( R.id.alarmNameEdit ) ) ) ; } 
private boolean hasKeepAliveForConnection () { java.lang.String keepAlive = assertion.getKeepAlive () ; try { if ( gov.hhs.fha.nhinc.nhinclib.NullChecker.isNullish ( keepAlive ) ) { keepAlive = getKeepAliveProperty () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( gov.hhs.fha.nhinc.nhinclib.NullChecker.isNotNullish ( keepAlive ) ) && ( ( "TRUE".equalsIgnoreCase ( keepAlive ) ) || ( "T".equalsIgnoreCase ( keepAlive ) ) ) ; } 
private <T extends com.librato.metrics.reporter.Metric> T register ( java.lang.Class<T> klass, com.librato.metrics.reporter.Supplier<T> metric ) { com.librato.metrics.reporter.Signal signal = createSignal () ; try { if ( signal == null ) { return register ( registry, name, metric, klass ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String encodedName = encodeName ( signal ) ; return register ( registry, encodedName, metric, klass ) ; } 
public static void chunk ( java.awt.image.Raster target, psiborg.fractal.Viewport view, int times, java.lang.Runnable callback ) { try { for ( psiborg.fractal.Viewport fragment : new psiborg.fractal.Viewport ( 0, 0, target.getWidth () , target.getHeight () ) .tesselate ( times ) ) { psiborg.fractal.jobs.JobQueue.addJob ( new psiborg.fractal.jobs.RenderJob ( fragment, view, callback, null ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addPorts ( java.lang.StringBuilder b ) { try { if ( ( ports.size () ) > 0 ) { java.lang.String[] portsS = new java.lang.String[ports.size () ]; int i = 0; for ( java.lang.String port : ports ) { portsS[ ( i++ ) ] = validatePortExposure ( port ) ; } DockerFileKeyword.EXPOSE.addTo ( b, portsS ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent ev ) { try { super.onTouchEvent ( ev ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dragHelper.processTouchEvent ( ev ) ; final android.view.ViewGroup parent = ( ( android.view.ViewGroup ) ( findBottomView ( this, x, y ) .getParent () ) ) ; return parent == ( this ) ; } 
@ java.lang.Override public void enter () { android.telecom.Log.i ( com.android.server.telecom.CallAudioModeStateMachine.LOG_TAG, "Audio focus entering RINGING state" ) ; try { if ( mCallAudioManager.startRinging () ) { mAudioManager.requestAudioFocusForCall ( AudioManager.STREAM_RING, AudioManager.AUDIOFOCUS_GAIN_TRANSIENT ) ; mAudioManager.setMode ( AudioManager.MODE_RINGTONE ) ; mCallAudioManager.setCallAudioRouteFocusState ( CallAudioRouteStateMachine.RINGING_FOCUS ) ; } else { android.telecom.Log.i ( com.android.server.telecom.CallAudioModeStateMachine.LOG_TAG, "Entering RINGING but not acquiring focus -- silent ringtone" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mCallAudioManager.stopCallWaiting () ; } 
public boolean hasGameEnded () { int countOfAliveWolves = 0; int countOfAliveCitizens = 0; try { for ( com.raibaz.lupus.game.Player p : g.getPlayers () ) { if ( p.isAlive () ) { if ( ( p.getRole () ) == ( PlayerRole.WOLF ) ) { countOfAliveWolves++; } else { countOfAliveCitizens++; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( countOfAliveWolves == 0 ) || ( countOfAliveWolves >= countOfAliveCitizens ) ; } 
@ java.lang.Override public void run () { try { if ( ( countDownCountainer ) != null ) { if ( ( counter ) >= 0 ) { countDownCountainer.setVisibility ( View.VISIBLE ) ; countDownTextView.setText ( java.lang.String.format ( getResources () .getString ( R.string.count_down_text ) , counter ) ) ; countDownProgressBar.setProgress ( counter ) ; } else { countDownTextView.setText ( "" ) ; countDownCountainer.setVisibility ( View.GONE ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected org.eclipse.draw2d.geometry.Rectangle getFrameArea ( org.eclipse.draw2d.geometry.Rectangle origin ) { try { if ( ! ( model.isMinimizedView () ) ) { return new org.eclipse.draw2d.geometry.Rectangle ( ( ( origin.x ) + ( GRID_SIZE ) ) , origin.y, ( ( origin.width ) - ( 2 * ( GRID_SIZE ) ) ) , ( ( origin.height ) - ( GRID_SIZE ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.getFrameArea ( origin ) ; } 
int convertSImeiToID ( java.lang.String text ) { try { if ( text == null ) text = java.util.Calendar.getInstance () .getTime () .toString () ; } catch ( Exception ex ) { ex.printStackTrace () ; } int sum = 0; char[] imei = text.toCharArray () ; for ( int i = 0; i < ( text.length () ) ; i++ ) sum = sum + ( imei[i] ) ; return 16384 + sum; } 
private void initHeaderViewToRefresh ( int deltaY ) { int topDistance = UpdateHeadViewMarginTop ( deltaY ) ; try { if ( ( topDistance < 0 ) && ( topDistance > ( - ( headViewHeight ) ) ) ) { mBaseHeaderAdapter.pullViewToRefresh ( deltaY ) ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.PULL_TO_REFRESH; } else if ( ( topDistance > 0 ) && ( ( mHeaderState ) != ( com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ) ) ) { mBaseHeaderAdapter.releaseViewToRefresh ( deltaY ) ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setVideoMode () { try { this.indicator.setSliderState ( ( +1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.worm.stretchTo ( ( -1 ) , ( -1 ) ) ; this.bgGray.setBackgroundOpacity ( 0.5F ) ; this.state = com.jfixby.telecam.ui.input.slider.Slider.VIDEO; } 
void merge ( hivemall.fm.FMPredictUDAF.PartialResult other ) { this.ret += other.ret; try { if ( ( this.sumVjXj ) == null ) { this.sumVjXj = other.sumVjXj; this.sumV2X2 = other.sumV2X2; } else { hivemall.fm.FMPredictUDAF.PartialResult.add ( other.sumVjXj, sumVjXj ) ; assert ( sumV2X2 ) != null; hivemall.fm.FMPredictUDAF.PartialResult.add ( other.sumV2X2, sumV2X2 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { try { if ( e == null ) { mOriginal.remove ( getItems () .get ( position ) ) ; getItems () .remove ( position ) ; getBaseAdapter () .notifyItemRemoved ( position ) ; android.widget.Toast.makeText ( getContext () , "Sent request!", Toast.LENGTH_LONG ) .show () ; } else { android.widget.Toast.makeText ( getContext () , e.getMessage () , Toast.LENGTH_LONG ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> getArticleDetailById ( long id ) { java.util.List<java.util.Map<java.lang.String, java.lang.Object>> article = aDao.getArticleDetailById ( id ) ; try { if ( ! ( article.isEmpty () ) ) article.get ( 0 ) .put ( "tags", aDao.getArticleTagsById ( java.lang.Integer.parseInt ( article.get ( 0 ) .get ( "id" ) .toString () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return article; } 
private void fail ( final java.lang.Throwable t ) { try { synchronized ( this ) { if ( ! ( done ) ) { done = true; if ( ( timeoutFuture ) != null ) { timeoutFuture.cancel ( true ) ; } setFailure ( t ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void freezeValues ( net.ssehub.easy.varModel.model.AbstractVariable var, net.ssehub.easy.varModel.confModel.IFreezeSelector selector ) { try { if ( ( var.isTopLevel () ) || ( ( var.getParent () ) instanceof net.ssehub.easy.varModel.model.AttributeAssignment ) ) { net.ssehub.easy.varModel.confModel.IDecisionVariable frozenVariable = getDecision ( var ) ; if ( null != frozenVariable ) { frozenVariable.freeze ( selector ) ; } } else { net.ssehub.easy.varModel.model.IModelElement parent = var.getParent () ; java.lang.System.out.println ( ( "Config freeze for nested variable not implemented: " + parent ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void processMethod ( final java.lang.reflect.Method method ) { try { method.setAccessible ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil.getValueHandlerAnnotation ( method ) ) != null ) { processMethodWithValueHandler ( method ) ; } else if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil.getCallHandlerAnnotation ( method ) ) != null ) { processMethodWithCallHandler ( method ) ; } } 
public static java.util.List get ( java.lang.String query ) { org.hibernate.Session session = de.bpetry.data.HibernateSession.sessionFactory.openSession () ; try { session.beginTransaction () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List result = session.createQuery ( query ) .list () ; session.getTransaction () .commit () ; session.close () ; return result; } 
private void loadDefaultData () { presentation.gui.CreditCard paymentInfo = CheckoutData.INSTANCE.getDefaultPaymentInfo () ; try { nameOnCardField.setText ( paymentInfo.getNameOnCard () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cardNumberField.setText ( paymentInfo.getCardType () ) ; cardTypeField.setValue ( paymentInfo.getCardNum () ) ; expirationField.setText ( paymentInfo.getExpirationDate () ) ; } 
public static void main ( java.lang.String[] args ) { RunningMedian x = new RunningMedian () ; for ( int i = 0; i < ( args.length ) ; i++ ) { x.add ( java.lang.Integer.parseInt ( args[i] ) ) ; } try { java.lang.System.out.println ( x.getMedian () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startVPN ( de.blinkt.openvpn.VpnProfile profile ) { mSelectedProfile = profile; mSelectedProfile.mAllowLocalLAN = true; profileManager.saveProfile ( this, profile ) ; prefs.setLastProfile ( profile.getName () ) ; try { prefs.setLastUuid ( profile.getUUIDString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } prefs.setLan ( mSelectedProfile.mAllowLocalLAN ) ; launchVPN () ; } 
@ java.lang.Override public java.util.List<uk.co.olimor.BMBTApi_boot.model.TestResult> getResultHistory ( final java.lang.String userId ) throws uk.co.olimor.BMBTApi_boot.exception.ApiException { try { log.entry ( userId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } final java.util.List<uk.co.olimor.BMBTApi_boot.model.TestResult> results = query ( java.lang.String.format ( uk.co.olimor.BMBTApi_boot.dao.impl.ResultsHistoryQueryImpl.QUERY, userId ) ) ; if ( ( results.size () ) == 0 ) throw new uk.co.olimor.BMBTApi_boot.exception.ApiException ( "No results found for user id", org.springframework.http.HttpStatus.NOT_FOUND ) ; return log.traceExit ( results ) ; } 
@ java.lang.Override public void propertyChange ( java.beans.PropertyChangeEvent event ) { if ( ( document ) != null ) { if ( ( document.getLineManager () ) != null ) { document.getLineManager () .removeLineListener ( this ) ; } } document = ( ( kkckkc.syntaxpane.model.SourceDocument ) ( event.getNewValue () ) ) ; document.getLineManager () .addLineListener ( this ) ; try { document.addFoldListener ( new kkckkc.syntaxpane.model.MutableFoldManager.FoldListener () { public void foldUpdated () { repaint () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void test_getLimits () { double[] orgLimits = ( ( double[] ) ( limits.clone () ) ) ; double[] l = f1.getLimits () ; try { assertTrue ( "Wrong limits", ( l == ( limits ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } l[0] = 3.14527; assertTrue ( "Limits copied", ( l != orgLimits ) ) ; } 
@ java.lang.Override public void getAllOperationIssuesByMedicoId ( java.util.List<com.artursworld.reactiontest.model.entity.OperationIssue> operationIssuesList ) { addItemsOnOperationIssueSpinner ( operationIssuesList, spinner ) ; try { com.artursworld.reactiontest.controller.util.UtilsRG.info ( ( ( ( "Operation issues loaded for user ( " + ( getSelectedMedicalUser () ) ) + " ) =" ) + ( operationIssuesList.toString () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( spinner != null ) { com.artursworld.reactiontest.controller.util.UtilsRG.putString ( UtilsRG.OPERATION_ISSUE, spinner.getSelectedItem () .toString () , getActivity () ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO.initSharedPreferences ( getPreferences ( Context.MODE_PRIVATE ) ) ; java.lang.String token = be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO.loadToken () ; if ( token.equals ( "" ) ) { } else { be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO.removeToken () ; } try { com.facebook.FacebookSdk.sdkInitialize ( getApplicationContext () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_login ) ; bindComponents () ; addEventsToComponents () ; presenter = new be.kandoe_groepj.kandoeproject.kandoeproject.login.LoginPresenterImpl ( this ) ; } 
public void sendLoggedIn ( org.bukkit.plugin.Plugin plugin, org.bukkit.entity.Player p ) { com.mengcraft.account.bungee.BungeeMessage message = new com.mengcraft.account.bungee.BungeeMessage () ; message.setType ( BungeeMain.DISTRIBUTE ) ; message.setName ( p.getName () ) ; try { message.setIp ( p.getAddress () .getAddress () .getHostAddress () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } p.sendPluginMessage ( plugin, com.mengcraft.account.bungee.BungeeMain.CHANNEL, message.toByteArray () ) ; } 
@ java.lang.Override public void doIfFailed () { try { if ( ( ( socket ) == null ) || ( ! ( connectedToSocket ) ) ) { if ( ( act ) != null ) { if ( ( ( ( ru.racoondeveloper.contactchat.MainActivity ) ( act ) ) .splScreen ) != null ) ( ( ru.racoondeveloper.contactchat.MainActivity ) ( act ) ) .splScreen.setButtonActive () ; } else reconnect () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { try { if ( mGoogleApiClient.isConnected () ) { if ( ( mRequestingUpdates ) == ( mSharedPreferences.getBoolean ( edu.cornell.jjl.info4120final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY, false ) ) ) { } else { mRequestingUpdates = mSharedPreferences.getBoolean ( edu.cornell.jjl.info4120final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY, false ) ; if ( mRequestingUpdates ) { startLocationUpdates () ; mAccelLogger = new edu.cornell.jjl.info4120final.DataLogger ( "accel" ) ; mLocationLogger = new edu.cornell.jjl.info4120final.DataLogger ( "location" ) ; mActivityLogger = new edu.cornell.jjl.info4120final.DataLogger ( "activity_recognition" ) ; } else { } } } } catch ( Exception ex ) { ex.printStackTrace () ; } handler.postDelayed ( this, 1000 ) ; } 
public void startUpdates () { try { if ( servicesConnected ( mContext ) ) { if ( com.gmail.vanyadubik.managerplus.service.gps.GoogleLocationService.locationEnabled ( mContext ) ) { locationUpdateListener.canReceiveLocationUpdates ( "Unable to get your location.Please turn on your device Gps" ) ; startLocationUpdates () ; } else { locationUpdateListener.cannotReceiveLocationUpdates ( "Unable to get your location.Please turn on your device Gps" ) ; android.util.Log.e ( com.gmail.vanyadubik.managerplus.common.Consts.TAGLOG_GPS, "Unable to get your location.Please turn on your device Gps" ) ; } } else { locationUpdateListener.cannotReceiveLocationUpdates ( "Google play service not available" ) ; android.util.Log.e ( com.gmail.vanyadubik.managerplus.common.Consts.TAGLOG_GPS, "Google play service not available" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes, java.util.Map<java.lang.String, java.lang.Object> values ) { if ( fixedAttributes == null ) return; com.orhanobut.tracklytics.FixedAttribute[] attributes = fixedAttributes.value () ; try { for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values.put ( attribute.key () , attribute.value () ) ; if ( attribute.isSuper () ) { superAttributes.put ( attribute.key () , attribute.value () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues.put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID, mSearchResult.getRestID () ) ; historyValues.put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME, mSearchResult.getRestName () ) ; android.net.Uri uri = getActivity () .getContentResolver () .insert ( DataContract.HistoryEntry.CONTENT_URI, historyValues ) ; android.util.Log.d ( "history check", uri.toString () ) ; onLocationChaged ( curLatitude, curLongitude ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.laboon.Test public void testGetCurrentRoomInfo () { com.laboon.Room mockRoom = org.mockito.Mockito.Mockito.mock ( com.laboon.Room.class ) ; com.laboon.mockRoom[] mockRoomArray = new com.laboon.mockRoom[1]; try { mockRoom.when ( mockRoom.getDescription () ) .thenReturn ( "hi" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.laboon.House houseTester = new com.laboon.House ( mockRoomArray ) ; assertEquals ( houseTester.getCurrentRoomInfo () , "hi" ) ; } 
public void clear () { LinkedList<E>.LinkedListNode<E> current; LinkedList<E>.LinkedListNode<E> next; next = head; try { while ( next != null ) { current = next; next = current.next; current.destroy () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } head = tail = null; size = 0; } 
public void setStallProtection ( double stallMinPower, double stallTimeout, double resetTimeout ) { final java.lang.String funcName = "setStallProtection"; try { if ( trclib.TrcPidMotor.debugEnabled ) { dbgTrace.traceEnter ( funcName, TrcDbgTrace.TraceLevel.API, "stallMinPower=%f,stallTimeout=%f,resetTimeout=%f", stallMinPower, stallTimeout, resetTimeout ) ; dbgTrace.traceExit ( funcName, TrcDbgTrace.TraceLevel.API ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.stallMinPower = java.lang.Math.abs ( stallMinPower ) ; this.stallTimeout = java.lang.Math.abs ( stallTimeout ) ; this.resetTimeout = java.lang.Math.abs ( resetTimeout ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast.makeText ( this, "Pedido cancelado", Toast.LENGTH_SHORT ) .show () ; if ( readOnly ) { firebaseRealtimeDatabaseHelperOrders.delete ( order ) ; removeNotification ( com.cynerds.cyburger.activities.MainActivity.ORDERS_TAB, 1 ) ; } else { previousOrder = new com.cynerds.cyburger.models.orders.Order () ; } badge.setBadgeCount ( 0 ) ; order = new com.cynerds.cyburger.models.orders.Order () ; try { dialogManager.closeDialog () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.opencb.opencga.catalog.managers.QueryResult<org.opencb.opencga.catalog.managers.File> createFolder ( long studyId, java.nio.file.Path folderPath, org.opencb.opencga.catalog.managers.File.FileStatus status, boolean parents, java.lang.String description, org.opencb.opencga.catalog.managers.QueryOptions options, java.lang.String sessionId ) throws org.opencb.opencga.catalog.exceptions.CatalogException { try { org.opencb.opencga.catalog.utils.ParamUtils.checkPath ( folderPath, "folderPath" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return fileManager.createFolder ( studyId, folderPath.toString () , status, parents, description, options, sessionId ) ; } 
private java.lang.String getValue ( int i, int j ) { try { if ( i == j ) { return "x"; } else { return getValue ( countMap.get ( new context.healthinformatics.graphs.ConnectionSet ( codes.get ( i ) , codes.get ( j ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void showAlert ( android.app.Activity activity, java.lang.String title, java.lang.String msg ) { try { com.extenprise.mapp.util.Utility.showAlert ( activity, title, msg, false, null, new android.content.DialogInterface.OnClickListener () { @java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { dialog.dismiss () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean removeEdge ( csula.cs4660.graphs.Edge x ) { try { if ( ( ! ( nodes.contains ( x.getFrom () ) ) ) || ( ! ( nodes.contains ( x.getTo () ) ) ) ) { java.lang.System.out.println ( "Error: fromNode or toNode not exists" ) ; } else { if ( edges.remove ( x ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void instamojoResponse ( java.lang.String status, java.lang.String orderId, java.lang.String transactionId, java.lang.String paymentId ) { try { loaderView.setVisibility ( View.GONE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( status.equals ( "ok" ) ) { checkPaymentStatus ( this.paymentId ) ; } else if ( status.equals ( "error" ) ) { setScreen ( "retry" ) ; } } 
private static void aggregate ( java.util.Map<cc.blynk.server.storage.reporting.average.AggregationKey, cc.blynk.server.storage.reporting.average.AggregationValue> map, cc.blynk.server.storage.reporting.average.AggregationKey key, double value ) { cc.blynk.server.storage.reporting.average.AggregationValue aggregationValue = map.get ( key ) ; try { if ( aggregationValue == null ) { final cc.blynk.server.storage.reporting.average.AggregationValue aggregationValueTmp = new cc.blynk.server.storage.reporting.average.AggregationValue () ; aggregationValue = map.putIfAbsent ( key, aggregationValueTmp ) ; if ( aggregationValue == null ) { aggregationValue = aggregationValueTmp; } } } catch ( Exception ex ) { ex.printStackTrace () ; } aggregationValue.update ( value ) ; } 
@ java.lang.Override public void setToDefault () { try { setMapEdgeScrollSpeed ( java.lang.String.valueOf ( games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_SCROLL_SPEED ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setMapEdgeScrollZoneSize ( java.lang.String.valueOf ( games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_SCROLL_ZONE_SIZE ) ) ; setArrowKeyScrollSpeed ( java.lang.String.valueOf ( games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_ARROW_KEY_SCROLL_SPEED ) ) ; setFasterArrowKeyScrollMultiplier ( java.lang.String.valueOf ( games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_FASTER_ARROW_KEY_SCROLL_MULTIPLIER ) ) ; setWheelScrollAmount ( java.lang.String.valueOf ( games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_WHEEL_SCROLL_AMOUNT ) ) ; } 
public java.lang.String convertCalendarToString ( java.util.GregorianCalendar toBeConverted ) { java.lang.String result = new java.lang.String () ; java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( "MM dd yyyy HHmm" ) ; try { result = df.format ( toBeConverted.getTime () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( ( ( toBeConverted + " was converted to " ) + result ) ) ; return result; } 
private beans.Utente transform ( org.telegram.telegrambots.api.objects.User utente, java.lang.Long chatId ) { beans.Utente utenteCustom = new beans.Utente () ; utenteCustom.setChatId ( chatId ) ; utenteCustom.setId ( utente.getId () ) ; utenteCustom.setCognome ( utente.getLastName () ) ; try { utenteCustom.setName ( utente.getFirstName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } utenteCustom.setUsername ( utente.getUserName () ) ; return utenteCustom; } 
@ java.lang.Override public void onApiConnected () { final com.o3dr.services.android.lib.drone.property.Parameters droneParams = getDrone () .getAttribute ( AttributeType.PARAMETERS ) ; if ( ( adapter.isEmpty () ) && ( droneParams != null ) ) { java.util.List<com.o3dr.services.android.lib.drone.property.Parameter> parametersList = droneParams.getParameters () ; if ( ! ( parametersList.isEmpty () ) ) loadAdapter ( parametersList, false ) ; } try { toggleParameterFilter ( isParameterFilterVisible () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getBroadcastManager () .registerReceiver ( broadcastReceiver, org.droidplanner.android.fragments.ParamsFragment.intentFilter ) ; } 
protected static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true; try { for ( int i = 0; i < ( input.length () ) ; i++ ) { int c = input.charAt ( i ) ; if ( c > 127 ) { isASCII = false; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return isASCII; } 
public OL getItem ( int position ) { if ( ( mList ) != null ) { if ( ( position >= 0 ) && ( position < ( mList.size () ) ) ) { return mList.get ( position ) ; } com.openarena.util.L.e ( com.openarena.model.AbstractRecyclerAdapter.class, ( ( "no item[" + position ) + "]" ) ) ; } try { com.openarena.util.L.e ( com.openarena.model.AbstractRecyclerAdapter.class, "error to get item" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void joinGame ( shared.definitions.CatanColor color ) { try { if ( state.joinGame ( color ) ) { stopTimer () ; if ( getSelectColorView () .isModalShowing () ) getSelectColorView () .closeModal () ; model.ModelFacade.getInstance () .updateGameModel () ; joinAction.execute () ; model.ModelFacade.getInstance () .getPoller () .start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.alamkanak.weekview.WeekViewEvent getEvent ( long start, long end, java.lang.String title ) { java.util.Calendar startTime = java.util.Calendar.getInstance () ; java.util.Calendar endTime = java.util.Calendar.getInstance () ; startTime.setTimeInMillis ( start ) ; endTime.setTimeInMillis ( end ) ; com.alamkanak.weekview.WeekViewEvent event = new com.alamkanak.weekview.WeekViewEvent ( counter, getEventTitle ( startTime, title ) , startTime, endTime ) ; try { event.setColor ( getResources () .getColor ( R.color.primary ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mWeekView.notifyDatasetChanged () ; return event; } 
public java.lang.Iterable<org.matsim.api.core.v01.Id<org.matsim.api.core.v01.population.Person>> cat ( final org.matsim.api.core.v01.Id<org.matsim.api.core.v01.population.Person> ego, final java.util.Set<org.matsim.api.core.v01.Id<org.matsim.api.core.v01.population.Person>> alters ) { final java.util.Collection<org.matsim.api.core.v01.Id<org.matsim.api.core.v01.population.Person>> ids = new java.util.HashSet ( alters ) ; try { ids.add ( ego ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ids; } 
public void onRequestPermissionResult ( int requestCode, java.lang.String[] permissions, int[] grantResults ) throws org.json.JSONException { try { for ( int r : grantResults ) { if ( r == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { this.callback.sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR, de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_DENIED_ERROR ) ) ; return; } } } catch ( Exception ex ) { ex.printStackTrace () ; } executeInternal ( this.action, this.rawArgs, this.callback ) ; } 
public void addCover ( org.ernest.applications.dmc.report.builders.Document document, java.lang.String region ) throws java.io.IOException, org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region, org.ernest.applications.dmc.report.builders.BuilderUtils.getTitleFont () ) ; paragraph.setSpacingBefore ( 100 ) ; try { paragraph.setAlignment ( Element.ALIGN_CENTER ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } document.add ( paragraph ) ; document.newPage () ; } 
@ org.testng.annotations.Test @com.automation.remarks.video.annotations.Video public void shouldNotBeRecordingForSuccessfulTestAndSaveModeFailOnly () { com.automation.remarks.video.recorder.monte.MonteRecorder.conf () .withVideoSaveMode ( VideoSaveMode.FAILED_ONLY ) ; org.testng.ITestResult result = prepareMock ( testMethod ) ; com.automation.remarks.testng.VideoListener listener = new com.automation.remarks.testng.VideoListener () ; listener.onTestStart ( result ) ; try { listener.onTestSuccess ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.io.File file = com.automation.remarks.video.recorder.monte.MonteRecorder.getLastRecording () ; assertFalse ( file.exists () ) ; } 
@ java.lang.Override public void processCommand ( net.minecraft.command.ICommandSender p_71515_1_, java.lang.String[] p_71515_2_ ) { try { if ( ( p_71515_2_.length ) >= 1 ) { if ( p_71515_2_[0].equalsIgnoreCase ( "help" ) ) { mainserverjt.piratemod.command.commands.HelpCommand.processCommand ( p_71515_1_, removeIndexUntil ( 1, p_71515_2_ ) ) ; } } else { mainserverjt.piratemod.command.ChatColor.sendPrivateMessage ( p_71515_1_, ( ( ( ChatColor.prefix ) + ( ChatColor.rood ) ) + "Use /pm help" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized boolean canMove ( level.action.MoveAction action ) { level.Direction dir = action.getDirection () ; level.Location agLoc = action.getAgentLocation () ; if ( agLoc == null ) { return false; } level.Location nAgLoc = level.Location.newLocation ( dir, agLoc ) ; if ( nAgLoc == null ) { return false; } try { if ( ! ( isFree ( nAgLoc ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void AddFruit () { boolean bFlag = true; try { while ( bFlag ) { int x = ( ( int ) ( ( java.lang.Math.random () ) * ( com.snake.Game.sizeByX ) ) ) ; int y = ( ( int ) ( ( java.lang.Math.random () ) * ( com.snake.Game.sizeByY ) ) ) ; if ( ( field[x][y] ) == 0 ) { bFlag = false; field[x][y] = 2; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected static boolean evaluateFuelConsumption () { try { if ( ( ( group8.com.application.Application.AlertSystem.shouldAlert ) && ( group8.com.application.Application.AlertSystem.fuelAlert ) ) && ( ( group8.com.application.Application.Controller.getCurrentFuelConsumption () ) >= ( group8.com.application.Model.ConstantData.extremeFuelConsumption ) ) ) { group8.com.application.Application.AlertSystem.shouldAlert = false; group8.com.application.Application.AlertSystem.fuelAlert = false; group8.com.application.Application.AlertSystem.coolDown.start () ; return true; } else if ( ( group8.com.application.Application.Controller.getCurrentFuelConsumption () ) < ( group8.com.application.Model.ConstantData.extremeFuelConsumption ) ) { group8.com.application.Application.AlertSystem.fuelAlert = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public boolean isState ( java.lang.String input ) { boolean matchFound = false; int i = 0; try { while ( ( matchFound == false ) && ( i < ( states.length ) ) ) { if ( states[i].equalsIgnoreCase ( input ) ) { matchFound = true; } i++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return matchFound; } 
public void onCredentialsValidated () { com.gabdeg.generalissimo.InputFragment firstFragment = new com.gabdeg.generalissimo.InputFragment () ; firstFragment.setArguments ( getIntent () .getExtras () ) ; getSupportFragmentManager () .beginTransaction () .replace ( R.id.fragment_container, firstFragment ) .commit () ; try { getSupportActionBar () .setTitle ( "Home" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent intent ) { try { if ( requestCode == ( com.jeffreychan.yutnori.TitleScreenActivity.RC_SIGN_IN ) ) { mSignInClicked = false; mResolvingConnectionFailure = false; if ( resultCode == ( RESULT_OK ) ) { client.connect () ; } else { android.widget.Toast savedToast = android.widget.Toast.makeText ( context, "Unable to sign in to Google", Toast.LENGTH_SHORT ) ; savedToast.show () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setParams ( long frequency, long bandwidthHz, @android.support.annotation.NonNull info.martinmarinov.drivers.DeliverySystem deliverySystem ) throws info.martinmarinov.drivers.DvbException { enableMaster ( true ) ; try { enableSlave ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( rtl2832Capabilities.getSupportedDeliverySystems () .contains ( deliverySystem ) ) { activeFrontend = rtl2832Frontend; } else { enableMaster ( false ) ; enableSlave ( true ) ; activeFrontend = slave; } activeFrontend.setParams ( frequency, bandwidthHz, deliverySystem ) ; } 
@ java.lang.Override public java.util.Vector cnt () { java.util.Vector center = new java.util.Vector ( 0, 0 ) ; int i = outline.size () ; try { for ( java.util.Vector vector : outline ) { center = center.add ( vector.inc ( i ) ) ; --i; } } catch ( Exception ex ) { ex.printStackTrace () ; } return center.dec ( outline.size () ) ; } 
public logic.Piece turnCPU () { depth = DEPTH; logic.Heur bestMove = miniMax () ; try { bestMoveMessages.addFirst ( ( ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility.itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": ( " ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility.itoc ( bestMove.col ) ) ) + " ) . " ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new logic.Piece ( bestMove, activeplayer ) ; } 
private static synchronized void startVibrate () { try { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log.d ( org.catrobat.catroid.utils.VibratorUtil.TAG, "startVibrate () " ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock.uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibrator.vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE ) ; android.util.Log.d ( org.catrobat.catroid.utils.VibratorUtil.TAG, ( "start time was: " + ( java.lang.Long.toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.util.Map<java.nio.file.Path, com.google.common.hash.HashCode> createHashCodeMap ( java.nio.file.Path file ) { java.util.Map<java.nio.file.Path, com.google.common.hash.HashCode> lastModifiedMap = new java.util.concurrent.ConcurrentHashMap<java.nio.file.Path, com.google.common.hash.HashCode> () ; try { for ( java.nio.file.Path child : io.takari.watcher.PathUtils.recursiveListFiles ( file ) ) { com.google.common.hash.HashCode hash = io.takari.watcher.PathUtils.hash ( child ) ; if ( hash != null ) { lastModifiedMap.put ( child, hash ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return lastModifiedMap; } 
@ org.junit.Test public void assertUserScorePropertyIsAddedToUserThatDoesNotHaveIt () throws java.lang.Exception { hudson.model.AbstractBuild build = mock ( hudson.model.AbstractBuild.class ) ; hudson.model.User userWithoutProperty = createUser ( null ) ; try { mockChangeSetInBuild ( build, userWithoutProperty ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertThat ( new hudson.plugins.cigame.GamePublisher () .perform ( build, createRuleBook ( 5.0 ) , true, null, null, null ) , org.hamcrest.CoreMatchers.is ( true ) ) ; verify ( userWithoutProperty ) .addProperty ( new hudson.plugins.cigame.UserScoreProperty ( 5, true, anyList () ) ) ; } 
@ org.junit.Test public void cityAdm () throws java.io.IOException, java.lang.InterruptedException { try { if ( ( countryTest.contains ( "FR" ) ) || ( countryTest.contains ( "ALL" ) ) ) { java.lang.String rawAddress = "saint omer normandie"; com.gisgraphy.addressparser.AddressResultsDto addressResultsDto = doGeocodingOnCountry ( rawAddress, "FR" ) ; net.sf.jstester.util.Assert.assertNotNull ( addressResultsDto ) ; isCorrectByAtLeastOneIds ( new long[] { 4039279022L, 94401L }, addressResultsDto.getResult () , rawAddress ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testBasicApply () { ru.spbau.mit.Function2<java.lang.Integer, java.lang.Double, java.lang.String> concat = new ru.spbau.mit.Function2<java.lang.Integer, java.lang.Double, java.lang.String> () { @java.lang.Override public java.lang.String apply ( java.lang.Integer arg1, java.lang.Double arg2 ) { return ( arg1.toString () ) + ( arg2.toString () ) ; } }; try { org.junit.Assert.assertEquals ( "1233.14", concat.apply ( 123, 3.14 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte[] sourceMAC, byte[] targetMAC, org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; try { ethernet.setSourceMACAddress ( sourceMAC ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ethernet.setDestinationMACAddress ( targetMAC ) ; ethernet.setEtherType ( EtherTypes.ARP.shortValue () ) ; ethernet.setPayload ( arp ) ; return ethernet; } 
public void cancel () { status = com.github.mob41.osumer.updater.Downloader.CANCELLED; try { reportState () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.io.File file = new java.io.File ( ( ( ( ( folder ) + "\\" ) + ( fileName ) ) + ".osz" ) ) ; file.delete () ; downloaded = 0; } 
private void updatePacketInWindow ( int sequence, WebApplication.HTTPConnection.AcknowledgementCode code ) { try { for ( int i = Window_Position; ( i < ( ( Window_Size ) + ( Window_Position ) ) ) && ( i < ( ( Packet_Buffer.size () ) - 1 ) ) ; ++i ) { if ( sequence == ( ( Packet_Buffer.get ( i ) .getSequenceNumber () ) % ( Sequence_Modulus ) ) ) { Packet_Buffer.get ( i ) .updateAcknowledgementCode ( code ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int menorDentreAs ( double[] razoes ) { double menor = razoes[0]; int indice = 0; try { for ( int i = 1; i < ( razoes.length ) ; i++ ) { if ( ( razoes[i] ) > 0 ) { if ( ( java.lang.Double.compare ( razoes[i], menor ) ) < 0 ) { menor = razoes[i]; indice = i; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return indice; } 
public void onDragDropped ( javafx.scene.input.DragEvent e ) { javafx.scene.input.Dragboard db = e.getDragboard () ; catuml.shapes.Shapes shapes = ( ( catuml.shapes.Shapes ) ( db.getContent ( javafx.scene.input.DataFormat.lookupMimeType ( "catuml/shapetype" ) ) ) ) ; double x = e.getX () ; double y = e.getY () ; try { putShape ( shapes.newShape () , x, y ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } e.consume () ; } 
public void secondOrderPositionUpdate ( double dt, Vector3D force ) { position = new Vector3D ( Vector3D.vectorAddition ( position, velocity.scalarMultiply ( dt ) ) ) ; try { position = new Vector3D ( Vector3D.vectorAddition ( position, force.scalarMultiply ( ( ( java.lang.Math.pow ( dt, 2 ) ) / ( 2 * ( mass ) ) ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<java.lang.Integer> emit ( java.lang.String streamId, java.util.List<java.lang.Object> tuple, java.lang.Object messageId ) { try { monitor.startExecute ( messageId, null, spoutService ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<java.lang.Integer> emitResult = super.emit ( streamId, tuple, messageId ) ; return emitResult; } 
public static java.io.File findExe ( java.io.File root, java.lang.String exe, boolean fail ) { try { for ( java.io.File file : org.apache.commons.io.FileUtils.listFiles ( root, null, true ) ) if ( ( file.getName () .equalsIgnoreCase ( exe ) ) && ( ( file.length () ) >= 1 ) ) return file; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( !fail ) return null; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } 
public void nextPage () { if ( ( entryPage ) >= ( entryWrapperMap.asMap () .size () ) ) entryPage = ( entryWrapperMap.asMap () .size () ) - 1; try { if ( ( ( entryPage ) != ( ( entryWrapperMap.asMap () .size () ) - 1 ) ) && ( ! ( entryWrapperMap.asMap () .isEmpty () ) ) ) ( entryPage ) ++; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { lejos.robotics.subsumption.Behavior b1 = new MoveForward () ; lejos.robotics.subsumption.Behavior b2 = new SenseUltrasonic () ; lejos.robotics.subsumption.Behavior b3 = new SenseLight () ; lejos.robotics.subsumption.Behavior[] bArray = new lejos.robotics.subsumption.Behavior[] { b1, b3, b2 }; lejos.robotics.subsumption.Arbitrator arby = new lejos.robotics.subsumption.Arbitrator ( bArray ) ; try { arby.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void test2 () { org.apache.lucene.search.BHeap heap = new org.apache.lucene.search.BHeap ( 20, 2 ) ; heap.insert ( 100 ) ; heap.insert ( 99 ) ; try { org.apache.lucene.search.TestBHeap.assertHeap ( heap, new long[][] { new long[] { 99, 100 } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGetLocationOfClass () throws java.lang.Exception { try { org.junit.Assert.assertThat ( com.firefly.utils.lang.TypeUtils.getLocationOfClass ( com.firefly.utils.lang.TypeUtils.class ) .toASCIIString () , org.hamcrest.Matchers.containsString ( "/classes/" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String expectedJavaBase = "/rt.jar"; if ( com.firefly.utils.lang.JDK.IS_9 ) expectedJavaBase = "/java.base/"; org.junit.Assert.assertThat ( com.firefly.utils.lang.TypeUtils.getLocationOfClass ( java.lang.String.class ) .toASCIIString () , org.hamcrest.Matchers.containsString ( expectedJavaBase ) ) ; } 
@ java.lang.Override public void run ( io.katharsis.example.dropwizardSimple.DropwizardConfiguration dropwizardConfiguration, io.dropwizard.setup.Environment environment ) throws java.lang.Exception { try { environment.jersey () .property ( io.katharsis.rs.KatharsisProperties.RESOURCE_SEARCH_PACKAGE, dropwizardConfiguration.katharsis.searchPackage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } io.katharsis.rs.KatharsisFeature katharsisFeature = new io.katharsis.rs.KatharsisFeature ( environment.getObjectMapper () , new io.katharsis.queryParams.QueryParamsBuilder ( new io.katharsis.queryParams.DefaultQueryParamsParser () ) , new io.katharsis.locator.SampleJsonServiceLocator () ) ; environment.jersey () .register ( katharsisFeature ) ; } 
public static double[] rexp ( int count, double lambda ) { double[] result = new double[count]; double current = 0; try { for ( int i = 0; i < count; i++ ) { current = ( ( -1 ) / lambda ) * ( java.lang.Math.log ( ( 1 - ( java.lang.Math.random () ) ) ) ) ; result[i] = current; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
private void displayNumberOfProcessedLearningContents ( java.util.Map<de.saschafeldmann.adesso.master.thesis.elearningimport.model.LearningContent, java.util.List<de.saschafeldmann.adesso.master.thesis.detection.model.api.Concept>> learningContents ) { setFinishedLabel () ; try { finishedLabel.setCaption ( ( ( ( ( finishedLabel.getCaption () ) + " ( " ) + ( learningContents.size () ) ) + " ) " ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean isValidDigitFields () { boolean isValid = true; try { if ( com.zhour.utils.Utility.isValueNullOrEmpty ( com.zhour.fragments.AlienCarFragment.et_vehicle_number.getText () .toString () ) ) { com.zhour.utils.Utility.setSnackBar ( mParent, com.zhour.fragments.AlienCarFragment.et_vehicle_number, "Please write code" ) ; isValid = false; } else if ( ( com.zhour.fragments.AlienCarFragment.et_vehicle_number.getText () .toString () .length () ) < 4 ) { com.zhour.utils.Utility.setSnackBar ( mParent, com.zhour.fragments.AlienCarFragment.et_vehicle_number, "Code must be 4 digit" ) ; isValid = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return isValid; } 
@ java.lang.Override @android.support.annotation.UiThread public void downloadHasFinished () { try { visibleBanner.updateBannerInProgress () ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( java.lang.ref.WeakReference<android.support.v4.app.Fragment> ref : fragSet ) { android.support.v4.app.Fragment f = ref.get () ; if ( ( f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) && ( f.isAdded () ) ) { ( ( net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) ( f ) ) .downloadHasFinished () ; } } } 
private kalang.compiler.CompilationUnit createCompilationUnit ( java.lang.String className, java.lang.String src ) { kalang.compiler.CompilationUnit unit = new kalang.compiler.CompilationUnit ( className, src, this ) ; try { compilationUnits.put ( className, unit ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } unit.setParsingErrorHandler ( sourceParsingErrorhandler ) ; unit.setSemanticErrorHandler ( astSemanticErrorHandler ) ; unit.compile ( compilingPhase ) ; return unit; } 
@ java.lang.Override public co.cask.cdap.data2.queue.DequeueResult<byte[]> dequeue ( int maxBatchSize ) throws java.io.IOException { co.cask.cdap.data2.queue.DequeueResult<byte[]> result = performDequeue ( maxBatchSize ) ; byte[] floorKey = consumingEntries.floorKey ( scanStartRow ) ; try { updateStartRow ( ( floorKey == null ? scanStartRow : floorKey ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
private void initializeSubnetsFromInner () { this.subnets = new java.util.TreeMap<> () ; try { if ( ( this.inner () .subnets () ) != null ) { for ( com.microsoft.azure.management.network.implementation.SubnetInner subnetInner : this.inner () .subnets () ) { com.microsoft.azure.management.network.implementation.SubnetImpl subnet = new com.microsoft.azure.management.network.implementation.SubnetImpl ( subnetInner.name () , subnetInner, this ) ; this.subnets.put ( subnetInner.name () , subnet ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void computeSegments () { int maxX = ( graph.dimX () ) - 1; int maxY = ( graph.dimY () ) - 1; try { for ( int currentY = maxY; currentY >= 0; currentY-- ) { currentWindow = sbr.Range.TwoDimensionalRange ( 0, maxX, currentY, maxY ) ; computeSegmentsInRange () ; for ( sbr.Segment seg : segments ) assert ! ( seg.getLinks () .isEmpty () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void sendAck () { android.util.Log.v ( com.theshopatvsp.levelandroidsdk.ble.BleManager.TAG, "sending ACK for record" ) ; ( ackSent ) ++; byte[] packet = new byte[] { ( ( byte ) ( deviceId.getPacketIdOut () ) ) , ( ( byte ) ( DeviceCommand.ACK.getCommand () ) ) , ( ( byte ) ( deviceId.getPacketIdIn () ) ) }; try { deviceId.incPacketIdOut () ; } catch ( Exception ex ) { ex.printStackTrace () ; } addCommand ( new com.theshopatvsp.levelandroidsdk.ble.model.LevelCommand ( com.theshopatvsp.levelandroidsdk.ble.model.constants.ReadWriteEnum.WRITE, com.theshopatvsp.levelandroidsdk.ble.model.constants.CharacteristicEnum.UART_TX, packet ) ) ; } 
@ java.lang.Override public void onBackPressed () { if ( ( ( databaseLayout ) != null ) && ( databaseLayout.onBackPressed () ) ) { return; } try { if ( ( ( options ) != null ) && ( options.isClosable () ) ) { android.content.Intent intent = new android.content.Intent ( Lock.CANCELED_ACTION ) ; android.support.v4.content.LocalBroadcastManager.getInstance ( this ) .sendBroadcast ( intent ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onBackPressed () ; } 
private void processProject ( com.ctrip.platform.dal.daogen.entity.Project entity ) throws java.sql.SQLException { entity.setText ( entity.getName () ) ; try { entity.setChildren ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } entity.setIcon ( "glyphicon glyphicon-tasks" ) ; if ( ( entity.getUpdate_time () ) == null ) return; java.sql.Date date = new java.sql.Date ( entity.getUpdate_time () .getTime () ) ; entity.setStr_update_time ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) .format ( date ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mContext = this; counterTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; try { relativeLayout = ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.MainLayoutID ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { android.util.Log.d ( "NotesFragment", ( "Submitted query" + query ) ) ; java.lang.String searchQuery = ( ( ( ( ( "SELECT * FROM " + ( HandbookContract.NotificationEntry.TABLE_NAME ) ) + " where " ) + ( HandbookContract.NotificationEntry.COLUMN_DETAIL ) ) + " like \'%" ) + query ) + "%\'"; cursor = db.rawQuery ( searchQuery, null ) ; try { mRecyclerView.setAdapter ( mAdapter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } searchView.clearFocus () ; return true; } 
public void onClick ( android.view.View view ) { try { if ( ( AnswerABoolean ) == true ) { AnswerAButton.setBackgroundColor ( getResources () .getColor ( R.color.goodAnswer ) ) ; incrementResultForGoodAnswer () ; } else { AnswerAButton.setBackgroundColor ( getResources () .getColor ( R.color.badAnswer ) ) ; findTHeRightAnswer () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean contains ( KdTree.Node node, edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false; int cmp = KdTree.compare ( p, node ) ; try { if ( cmp < 0 ) return contains ( node.lb, p ) ; else if ( cmp > 0 ) return contains ( node.rt, p ) ; else return node.p.equals ( p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void reload () { try { if ( mActivity.TWO_PLAYER_GAME () ) { if ( ( ( mPlayerButtonList ) == null ) || ( ( mPlayerButtonList.size () ) == 0 ) ) { createButtonsPlayerList () ; } else { for ( int i = 0; i < ( mActivity.game.size () ) ; i++ ) { mPlayerButtonList.get ( i ) .reload ( mActivity.game.getPlayer ( i ) ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.HashMap<java.lang.String, double[]> fetchTrace ( int channelNumber ) { this.fetchChannel ( channelNumber ) ; java.util.HashMap<java.lang.String, double[]> retData = new java.util.HashMap<> () ; retData.put ( "x", this.aChannels.get ( ( channelNumber - 1 ) ) .getXAxis () ) ; try { retData.put ( "y", this.aChannels.get ( ( channelNumber - 1 ) ) .getYAxis () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return retData; } 
@ org.junit.Test public void test_isLeapYear () throws java.lang.Exception { org.junit.Assert.assertEquals ( false, isLeapYear ( 2014 ) ) ; org.junit.Assert.assertEquals ( false, isLeapYear ( 2015 ) ) ; org.junit.Assert.assertEquals ( true, isLeapYear ( 2016 ) ) ; try { org.junit.Assert.assertEquals ( false, isLeapYear ( 2017 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.google.gson.JsonElement serialize ( final net.onrc.openvirtex.elements.port.OVXPort port, final java.lang.reflect.Type portType, final com.google.gson.JsonSerializationContext context ) { final com.google.gson.JsonObject result = new com.google.gson.JsonObject () ; try { result.addProperty ( "dpid", port.getParentSwitch () .getSwitchName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } result.addProperty ( "port", port.getPortNumber () ) ; return result; } 
public void printAllCustomerInformation () { java.lang.System.out.println ( ( ( ( ( ( ( ( ( ( ( ( ( "\n" + ( this.CUSTOMER_ID ) ) + " " ) + ( this.PASSWORD ) ) + " " ) + ( this.NAME ) ) + " " ) + ( this.getAge () ) ) + " " ) + ( this.getCreditScore () ) ) + " " ) + ( this.getChexSystemsScore () ) ) + " " ) ) ; try { this.printAccountInformation () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public com.datastax.driver.core.TypeCodec getSerializer ( java.lang.Class<? extends com.datastax.driver.core.TypeCodec> serializerClass, java.lang.Class valueClass ) { try { if ( ( valueClass != null ) && ( valueClass.isEnum () ) ) { return new com.appmetr.hercules.serializers.EnumSerializer ( valueClass ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( serializerClass != null ) { return tryToCreateObject ( serializerClass, valueClass ) ; } else { return getSerializer ( valueClass ) ; } } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { r.setDrawBoundingBox ( false ) ; if ( ( r.getConfig () .getShape () ) == ( cs132.instructions.Shape.PENCIL ) ) { prevMouseLocation = mouseLocation; r.setDrawShape ( false ) ; } else { r.setDrawShape ( true ) ; } dragStart = true; try { r.repaint () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override java.util.List<ly.kite.catalogue.Asset> getAssetsForUploading () { java.util.ArrayList<ly.kite.catalogue.Asset> assets = new java.util.ArrayList<ly.kite.catalogue.Asset> () ; if ( ( mFrontImageAsset ) != null ) assets.add ( mFrontImageAsset ) ; try { if ( ( mBackImageAsset ) != null ) assets.add ( mBackImageAsset ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mInsideLeftImageAsset ) != null ) assets.add ( mInsideLeftImageAsset ) ; if ( ( mInsideRightImageAsset ) != null ) assets.add ( mInsideRightImageAsset ) ; return assets; } 
@ java.lang.Override protected void onStop () { mGoogleApiClient.disconnect () ; try { if ( ( ( lineShape ) != null ) && ( ( lineShape.size () ) > 1 ) ) { lineShape.add ( mPolyline ) ; java.lang.String geoJsonString = edu.uw.longt8.geopaint.GeoJsonConverter.convertToGeoJson ( lineShape ) ; new edu.uw.longt8.geopaint.MapsActivity.SaveState () .execute ( geoJsonString ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onStop () ; } 
@ java.lang.Override public void actOnBuildingChange ( buildings.Building building, boolean remove, boolean clickedOn ) { try { if ( ( !remove ) && ( !clickedOn ) ) { addToView ( building ) ; removePlaceTexture () ; } else if ( !clickedOn ) removeFromView ( building.getSpriteAdapter () ) ; else if ( remove && clickedOn ) { removePlaceTexture () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.util.Map<java.lang.String, java.util.List<org.apache.kafka.common.TopicPartition>> deepCopy ( java.util.Map<java.lang.String, java.util.List<org.apache.kafka.common.TopicPartition>> assignment ) { java.util.Map<java.lang.String, java.util.List<org.apache.kafka.common.TopicPartition>> copy = new java.util.HashMap<> () ; try { deepCopy ( assignment, copy ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return copy; } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent ev ) { if ( isExpanded () ) { return false; } android.util.Log.e ( com.example.tt.fragments.widget.CurveLayout.TAG, ( "BottomSheet onTouchEvent: " + ( currentX ) ) ) ; try { currentX = ev.getRawX () ; } catch ( Exception ex ) { ex.printStackTrace () ; } sheetDragHelper.processTouchEvent ( ev ) ; return ( ( sheetDragHelper.getCapturedView () ) != null ) || ( super.onTouchEvent ( ev ) ) ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object object ) { if ( ( this ) == object ) { return true; } try { if ( ( object != null ) && ( ( getClass () ) == ( object.getClass () ) ) ) { @java.lang.SuppressWarnings ( value = "rawtypes" ) final com.javacreed.api.domain.objects.DomainObject other = ( ( com.javacreed.api.domain.objects.DomainObject ) ( object ) ) ; return value.equals ( other.value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public org.elasticsearch.common.xcontent.XContentBuilder toXContent ( org.elasticsearch.common.xcontent.XContentBuilder builder, org.elasticsearch.monitor.os.Params params ) throws java.io.IOException { builder.startObject ( org.elasticsearch.monitor.os.OsStats.Fields.OS ) ; builder.field ( org.elasticsearch.monitor.os.OsStats.Fields.TIMESTAMP, getTimestamp () ) ; cpu.toXContent ( builder, params ) ; try { mem.toXContent ( builder, params ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } swap.toXContent ( builder, params ) ; if ( ( cgroup ) != null ) { cgroup.toXContent ( builder, params ) ; } builder.endObject () ; return builder; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { if ( ( requestCode == ( MyGlobalVars.REQUEST_IMAGE_CAPTURE ) ) && ( resultCode == ( RESULT_OK ) ) ) { android.os.Bundle extras = data.getExtras () ; android.graphics.Bitmap imageBitmap = ( ( android.graphics.Bitmap ) ( extras.get ( "data" ) ) ) ; addImageToView ( imageBitmap ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { try { if ( ( e.getKeyCode () ) == ( java.awt.event.KeyEvent.VK_ESCAPE ) ) { if ( ( promptMsg ) != null ) { promptMsg = null; repaint () ; return; } hasFinished = canceled = true; org.sikuli.basics.Debug.log ( 3, "CapturePrompt: aborted using key ESC" ) ; setVisible ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void processAction ( javax.portlet.PortletConfig portletConfig, javax.portlet.ActionRequest actionRequest, javax.portlet.ActionResponse actionResponse ) throws java.lang.Exception { java.lang.String status = com.liferay.portal.kernel.util.ParamUtil.getString ( actionRequest, "status" ) ; java.lang.String portletResource = com.liferay.portal.kernel.util.ParamUtil.getString ( actionRequest, "portletResource" ) ; javax.portlet.PortletPreferences preferences = com.liferay.portlet.PortletPreferencesFactoryUtil.getPortletSetup ( actionRequest, portletResource ) ; try { preferences.setValue ( "status", status ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } preferences.store () ; com.liferay.portal.kernel.servlet.SessionMessages.add ( actionRequest, "potlet-config-saved" ) ; } 
public void unlockScreen () { android.util.Log.v ( "LOCK_TEST", "unlockScreen () " ) ; android.util.Log.v ( "LOCK_TEST", ( "unlockScreen () " + ( this.masterActivity.getLocalClassName () ) ) ) ; try { this.mZipperLock.DestroyBitmaps () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.masterActivity.finish () ; } 
@ java.lang.SuppressWarnings ( value = "deprecation" ) public void checkOfflineRewards () { java.util.ArrayList<java.lang.String> copy = getOfflineRewards () ; try { setOfflineRewards ( new java.util.ArrayList<java.lang.String> () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( java.lang.String str : com.Ben12345rocks.AdvancedCore.Util.Misc.ArrayUtils.getInstance () .convert ( copy ) ) { com.Ben12345rocks.AdvancedCore.Objects.RewardHandler.getInstance () .giveReward ( this, str, false, true, false ) ; } } 
public boolean isUpToDate ( fr.mvanbesien.yws.core.WeatherData weatherData ) { if ( weatherData == null ) { return false; } try { if ( ( ( weatherData.getPubDate () .getTime () ) + ( weatherData.getTtl () ) ) > ( java.lang.System.currentTimeMillis () ) ) { if ( ( ( weatherData.getLastBuildDate () .getTime () ) + ( ( 15 * 60 ) * 1000 ) ) > ( java.lang.System.currentTimeMillis () ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public long requestBook ( long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null; try { synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations.add ( newReservation ) ; return newReservation.getId () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new library_project.models.BookIsOutException () ; } 
private static void noEL ( java.lang.String nm, java.lang.String val, org.zkoss.idom.Item item ) throws org.zkoss.zk.ui.UiException { try { if ( ( val != null ) && ( val.contains ( "${" ) ) ) throw new org.zkoss.zk.ui.UiException ( org.zkoss.zk.ui.metainfo.Parser.message ( ( nm + " does not support EL expressions" ) , item ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Object getAsObject ( javax.faces.context.FacesContext context, javax.faces.component.UIComponent component, java.lang.String submittedValue ) { javax.el.ELContext elContext = javax.faces.context.FacesContext.getCurrentInstance () .getELContext () ; br.com.fiap.tsis.bookstore.controller.AtualizarController atualizarController = ( ( br.com.fiap.tsis.bookstore.controller.AtualizarController ) ( javax.faces.context.FacesContext.getCurrentInstance () .getApplication () .getELResolver () .getValue ( elContext, null, "atualizarController" ) ) ) ; try { for ( br.com.fiap.tsis.bookstore.model.to.Categoria categoria : atualizarController.getCategorias () ) { if ( categoria.getId () .equals ( java.lang.Integer.parseInt ( submittedValue ) ) ) { return categoria; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public static void addPlayerToQueue ( java.util.UUID uuid, java.lang.String server, int pos ) { try { synchronized ( vg.civcraft.mc.bettershards.bungee.QueueHandler.lockingObject ) { if ( ! ( vg.civcraft.mc.bettershards.bungee.QueueHandler.queue.containsKey ( server ) ) ) vg.civcraft.mc.bettershards.bungee.QueueHandler.queue.put ( server, new java.util.ArrayList<java.util.UUID> () ) ; vg.civcraft.mc.bettershards.bungee.QueueHandler.queue.get ( server ) .add ( pos, uuid ) ; vg.civcraft.mc.bettershards.bungee.QueueHandler.uuidToServerMap.put ( uuid, server ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void selectCategory ( com.sammyer.yahtzee.RollCategory category, com.sammyer.yahtzee.DiceRoll dice ) { totalScore += getPointsScored ( category, dice ) ; if ( ( category == ( RollTypes.yahtzee ) ) && ( category.matches ( dice ) ) ) hasYahtzee = true; try { if ( isNumberRoll ( category ) ) numberRollScore += category.getPointsScored ( dice ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } categoriesLeft.remove ( category ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database, categoriesLeft ) ; } 
@ org.junit.Before public void setUp () throws java.lang.Exception { try { formWorkflowAPIImpl = spy ( new org.bonitasoft.forms.server.api.impl.FormWorkflowAPIImpl () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } expressions = new java.util.ArrayList<org.bonitasoft.forms.client.model.Expression> () ; doReturn ( bpmEngineAPIUtil ) .when ( formWorkflowAPIImpl ) .getBpmEngineAPIUtil () ; doReturn ( processApi ) .when ( bpmEngineAPIUtil ) .getProcessAPI ( session ) ; } 
@ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @java.lang.Override public void sendStickyOrderedBroadcastAsUser ( final android.content.Intent intent, final android.os.UserHandle user, final android.content.BroadcastReceiver resultReceiver, final android.os.Handler scheduler, final int initialCode, final java.lang.String initialData, final android.os.Bundle initialExtras ) { try { mCondom.proceedBroadcast ( intent, new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @java.lang.Override public void run () { com.oasisfeng.condom.CondomContext.super.sendStickyOrderedBroadcastAsUser ( intent, user, resultReceiver, scheduler, initialCode, initialData, initialExtras ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void paintComponent ( java.awt.Graphics g ) { super.paintComponent ( g ) ; try { g.fillRect ( 0, 0, 300, 3 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } g.fillRect ( 0, 45, 300, 3 ) ; g.fillRect ( 100, 3, 3, 7 ) ; g.fillRect ( 100, 38, 3, 7 ) ; } 
private static int upSituation () { try { if ( ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty.equals ( Preference.ADVANCE ) ) || ( ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.upperAchivedDifficulty ) != null ) ) { com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentUserProficiency = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_END; } else { com.hedspi.hoangviet.eslrecom.helpers.TestHelper.lowerAchivedDifficulty = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty; com.hedspi.hoangviet.eslrecom.helpers.TestHelper.upgradeLevel () ; com.hedspi.hoangviet.eslrecom.helpers.TestHelper.resetProperties () ; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_CONTINUE; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String exportPointsAsJSON () { org.json.JSONArray arr = new org.json.JSONArray () ; try { for ( fusorvis.Point p : points ) { org.json.JSONObject obj = new org.json.JSONObject () ; obj.put ( "x", p.x ) ; obj.put ( "y", p.y ) ; obj.put ( "z", p.z ) ; obj.put ( "charge", p.charge ) ; arr.put ( obj ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return arr.toString () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_plan_journey ) ; java.util.Calendar calendar = java.util.Calendar.getInstance () ; datePickerDialog = new android.app.DatePickerDialog ( this, this, calendar.get ( java.util.Calendar.YEAR ) , calendar.get ( java.util.Calendar.MONTH ) , calendar.get ( java.util.Calendar.DAY_OF_MONTH ) ) ; initDrawer () ; initSearchBar () ; initAddressFields () ; initRemoveButtons () ; initViewJourney () ; try { initFirebase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } clearUI () ; } 
@ java.lang.Override public boolean exists () { boolean exists = super.exists () ; try { if ( !exists ) { org.eclipse.emf.ecore.EObject input = getInput ( false ) ; if ( input != null ) { org.eclipse.emf.ecore.resource.Resource resource = input.eResource () ; if ( ( resource != null ) && ( ( resource.getResourceSet () ) != null ) ) { exists = resource.getResourceSet () .getURIConverter () .exists ( resource.getURI () , null ) ; } } } } catch ( Exception ex ) { ex.printStackTrace () ; } return exists; } 
public void printTree ( DataStructure.RBTNode<T> node ) { try { if ( node != null ) { printTree ( node.left ) ; java.lang.System.out.print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printTree ( node.right ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { while ( true ) { if ( ( ( activePlaneList.size () ) > 0 ) && ( ( freeLaneList = domain.dao.HibernateGeneric.getFreeLanes () ) != null ) ) { simulator.PlaneThread plane = activePlaneList.get ( 0 ) ; plane.setLane ( freeLaneList.get ( 0 ) ) ; activePlaneList.remove ( plane ) ; plane.givePermission () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testRegexInstanceChangeRegexWithInstances () { ai.grakn.concept.Resource<java.lang.String> thing = resourceType.putResource ( "1" ) ; expectedException.expect ( ai.grakn.exception.InvalidConceptValueException.class ) ; expectedException.expectMessage ( ErrorMessage.REGEX_INSTANCE_FAILURE.getMessage ( "[abc]", thing.getId () , thing.getValue () , resourceType.getName () ) ) ; try { resourceType.setRegex ( "[abc]" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void confirmSeat ( int confirmationTime, int departureTime ) throws asgn2Passengers.PassengerException { try { if ( ( ( ( ( this.isConfirmed () ) || ( this.isRefused () ) ) || ( this.isFlown () ) ) || ( confirmationTime < 0 ) ) || ( departureTime < confirmationTime ) ) { throw new asgn2Passengers.PassengerException ( "Can't confirm seat for passenger." ) ; } else { this.newState = false; this.inQueue = false; this.confirmed = true; this.confirmationTime = confirmationTime; this.departureTime = departureTime; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public eu.einfracentral.domain.aai.User activate ( java.lang.String id ) { eu.einfracentral.domain.aai.User ret = reveal ( get ( id ) ) ; try { if ( ( ret.getJoinDate () ) == null ) { ret.setJoinDate ( new java.util.Date () .toString () ) ; update ( ret ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ret; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { super.onActivityResult ( requestCode, resultCode, data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( requestCode != ( EditFragment.REQUEST_TAKE_PHOTO ) ) return; com.example.jbt.omdb.EditFragment editFrag = mFragmentHelper.getEditFragmentIfExists () ; if ( editFrag != null ) editFrag.onCameraActivityResult ( resultCode ) ; } 
