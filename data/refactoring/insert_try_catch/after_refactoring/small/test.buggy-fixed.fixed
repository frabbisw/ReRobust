@ java.lang.Override public void onCreate () { super.onCreate () ; try { com.google.firebase.database.FirebaseDatabase.getInstance () .setPersistenceEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.example.gek.pizza.data.AllDishes.getInstance () ; } 
public static se.comhem.web.test.domain.Gender getGenderByName ( java.lang.String name ) { se.comhem.web.test.domain.Gender gender = null; try { for ( se.comhem.web.test.domain.Gender type : se.comhem.web.test.domain.Gender.values () ) { if ( type.getName () .equals ( name ) ) { gender = type; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return gender; } 
private void drawJustified ( android.graphics.Canvas canvas ) { if ( ( this.getLayout () ) == null ) { return; } try { drawJustified ( canvas, this.getLayout () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { if ( requestCode == 100 ) { if ( resultCode == ( RESULT_OK ) ) { iv_takeImage.setImageURI ( file ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void startCooldown ( cooldown.WavesCooldown cooldown, int rounds ) { try { THs.add ( new cooldown.WavesCDHandler.TimeHelper ( cooldown, rounds ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void checkHealth ( Player player ) { try { java.lang.System.out.println ( ( ( "Your health is currently at " + ( player.Health ) ) + "health points." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { try { if ( ( future.cause () ) != null ) { future.channel () .close () ; promise.tryFailure ( future.cause () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void refreshNotes ( int pos, com.group.mydea.Nota nota ) { try { note.add ( nota ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cardAdapter.notifyDataSetChanged () ; } 
public void onComplete () { try { dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.support.annotation.NonNull @java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { android.app.Dialog dialog = super.onCreateDialog ( savedInstanceState ) ; try { dialog.getWindow () .requestFeature ( Window.FEATURE_NO_TITLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return dialog; } 
public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr.saveModel ( this, "COMMAND_NUM = ?", "EA" ) ; try { if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil.saveValue ( XinfengApplication.CONTEXT, Global.CONFIG_FILE_NAME, Global.HAS_SETTING_INFO, 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { try { new com.example.oauthtwitterdemo.activity.AuthorizationActivity.GetOAuthURL4TwitterAsyncTask () .execute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onResume () ; } 
private java.lang.String getCommandFromUser () { try { java.lang.System.out.print ( "Command: " ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String command = scanner.nextLine () ; return command; } 
@ java.lang.Override public void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setFieldFloatNull ( java.lang.Float value ) { realm.checkIfValid () ; try { if ( value == null ) { row.setNull ( columnInfo.fieldFloatNullIndex ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } row.setFloat ( columnInfo.fieldFloatNullIndex, value ) ; } 
private void playMusic () { try { if ( ( ! ( com.hugosama.samalinne.Utils.isOnSilence ( this ) ) ) && ( ! ( mediaPlayer.isPlaying () ) ) ) { mediaPlayer.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected int filterTweet ( java.util.List<java.lang.String> tweet ) { try { if ( ( tweet.size () ) < ( ( moa.SmoothingTechnique.MinNumberOfWords ) + 1 ) ) return -1; } catch ( Exception ex ) { ex.printStackTrace () ; } return tweet.indexOf ( this.m_hashTag ) ; } 
@ org.junit.Test public void shouldFindByGroups () throws java.lang.Exception { java.util.Set<io.gravitee.repository.management.model.Application> apps = applicationRepository.findByGroups ( java.util.Arrays.asList ( "application-group" ) ) ; assertNotNull ( apps ) ; try { assertEquals ( 2, apps.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void stateChanged ( org.eclipse.smarthome.core.items.Item item, org.eclipse.smarthome.core.types.State oldState, org.eclipse.smarthome.core.types.State newState ) { oldGroupState = this.state; try { setState ( function.calculate ( members ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sendGroupStateChangedEvent ( item.getName () , this.state, oldGroupState ) ; } 
@ java.lang.Override protected void updateProperties () { try { setEnabled ( isThereAtLeastOneFeatureThatHasChildren () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( isThereAtLeastOneFeatureThatHasChildren () ) ) { setChecked ( false ) ; } else { setChecked ( isEveryFeatureCollapsed () ) ; } } 
private java.util.Properties getPropertiesFromJobConfiguration ( gobblin.scheduler.JobConfiguration jobConfiguration ) { java.util.Properties jobProps = new java.util.Properties () ; try { jobProps.putAll ( getDefaultProperties () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } jobProps.putAll ( org.apache.commons.configuration.ConfigurationConverter.getProperties ( jobConfiguration ) ) ; return jobProps; } 
public dooyit.logic.Colour pickRandomColour () { try { if ( ( colourPool.size () ) == 0 ) { colourPool = new java.util.ArrayList<dooyit.logic.Colour> ( recommendedColour ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return colourPool.remove ( random.nextInt ( colourPool.size () ) ) ; } 
@ java.lang.Override public void onPageSelected ( int position ) { try { switch ( position ) { case 0: title.setText ( R.string.title_myBook ) ; break; case 1: title.setText ( R.string.title_allBook ) ; break; default: title.setText ( R.string.title_myBook ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.v3ld1n.Message get ( java.lang.String name ) { try { for ( com.v3ld1n.Message message : com.v3ld1n.V3LD1N.getMessages () ) { if ( message.getName () .equalsIgnoreCase ( name ) ) { return message; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return new com.v3ld1n.Message ( name, name ) ; } 
@ java.lang.Override public void onChildAdded ( sample.DataSnapshot snapshot, java.lang.String previousChildKey ) { try { bidItem = snapshot.getValue ( sample.BidItem.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fireBaseItems.add ( bidItem ) ; } 
@ com.google.gwt.uibinder.client.UiHandler ( value = "nameSearchBox" ) public void doSearch ( com.google.gwt.event.dom.client.KeyUpEvent keyUpEvent ) { try { org.bbop.apollo.gwt.client.TrackPanel.filterList () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onError ( org.reactome.web.pwp.client.tools.analysis.submitters.Request request, java.lang.Throwable exception ) { try { setStatusIcon ( CommonImages.INSTANCE.error () , true, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fireEvent ( new org.reactome.web.pwp.client.tools.analysis.event.ServiceUnavailableEvent () ) ; } 
@ java.lang.Override public void cancelJoinGame () { try { getJoinGameView () .showModal () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void sendToClient ( org.json.JSONObject response ) { try { out.println ( response.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } out.flush () ; java.lang.System.out.println ( ( "Response to client: " + response ) ) ; } 
public void init () { try { for ( int i = 0; i < ( kaspar.config.ConfigConstants.KINECT_CLOSEST_POINTS_HISTORY_SIZE ) ; i++ ) { update () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void splitWithConsecutiveDelimiters () { try { assertArrayEquals ( new java.lang.String[] { "foo", "", "bar" }, split ( "foo$$bar", '$' ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handlerNotification ( android.content.Context context, boolean binded, com.yy.httpproxy.service.PushedNotification pushedNotification ) { try { if ( !binded ) { showNotification ( context, pushedNotification ) ; } else { sendArrived ( context, pushedNotification ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ ome.annotations.RolesAllowed ( value = "user" ) public byte[] getThumbnailForSectionDirect ( int theZ, int theT, java.lang.Integer sizeX, java.lang.Integer sizeY ) { byte[] value = retrieveThumbnailDirect ( sizeX, sizeY, theZ, theT, true ) ; try { iQuery.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return value; } 
@ java.lang.Override public void onWebServiceCoordinatorError ( java.lang.Exception error ) { android.util.Log.e ( com.mixey69.roulettevideochat.ConnectionManager.LOG_TAG, ( "Web Service error: " + ( error.getMessage () ) ) ) ; try { if ( ( uiInterface ) != null ) { uiInterface.showWebServiceCoordinatorError ( error ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void refreshInputMultiplexer () { try { if ( ( inputMultiplexer ) != null ) { inputMultiplexer.clear () ; inputMultiplexer.addProcessor ( stage ) ; inputMultiplexer.addProcessor ( gameInputListener ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () throws java.lang.Exception { try { word2vec = org.deeplearning4j.models.embeddings.loader.WordVectorSerializer.loadGoogleModel ( new org.springframework.core.io.ClassPathResource ( "vec.bin" ) .getFile () , true, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { try { synchronized ( buffer ) { sourceFormat ( format ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { try { jetV.onNextStage ( false, ( which + 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void changeCacheSize ( final long cacheSize ) { try { if ( ( readCache ) != null ) readCache.changeMaximumAmountOfMemory ( calculateReadCacheMaxMemory ( cacheSize ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void setSelection ( long trackerID ) { try { if ( trackerIDToSelectionIDMap.containsKey ( trackerID ) ) { int item = trackerIDToSelectionIDMap.get ( trackerID ) ; spinner.setSelection ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void start ( javafx.stage.Stage stage ) { this.stage = stage; this.stage.setTitle ( "M4" ) ; this.players = new mule.Player[4]; try { initRootLayout () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Object visitEnum ( java.lang.Enum _enum ) { try { if ( ( _enum.getOwner () ) instanceof java.lang.Package ) { javaSourceGenerator.generateEnum ( _enum ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder, cz.cvut.fel.integracniportal.model.Folder parent ) { try { fileRepository.moveFolder ( mapFolder ( folder, null ) , mapFolder ( parent, null ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Object visitFail ( nez.lang.Nez.Fail e, java.lang.Object a ) { try { Fail () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/commit" ) @org.springframework.web.bind.annotation.ResponseBody public java.util.List<ua.org.ecity.entities.City> commitUpdate () { logger.info ( "GET: /update/commit" ) ; java.util.List<ua.org.ecity.entities.City> cities = updateDB () ; try { for ( ua.org.ecity.entities.City city : cities ) { cityService.saveCity ( city ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return cities; } 
protected void updateResourceBundle ( java.util.Locale locale ) { try { this.bundle = java.util.ResourceBundle.getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME, locale ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSelection ( com.afollestad.materialdialogs.MaterialDialog dialog, android.view.View itemView, int position, java.lang.CharSequence text ) { mPriority = position + 1; try { android.util.Log.d ( de.grau.organizer.activities.EditorActivity.DEBUG_TAG, ( "User Priority Dialog Result = " + ( mPriority ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setPriorityButton ( mPriority ) ; } 
@ Test public void User_getNameRetrievesName_True () { User newUser = new User ( "Willie", "will123" ) ; newUser.save () ; newUser.update ( "Willow", "Willie", "will123" ) ; try { assertEquals ( "Willow", newUser.getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { org.helioviewer.jhv.data.container.cache.JHVEventCache.getSingletonInstance () .add ( ev ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemRangeInserted ( int positionStart, int itemCount ) { try { super.onItemRangeInserted ( positionStart, itemCount ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( progressBar != null ) progressBar.setVisibility ( View.GONE ) ; } 
@ java.lang.Override public final int round ( double mean ) { int n = ( ( int ) ( mean ) ) ; try { if ( ( this.random () ) < ( mean - n ) ) n++; } catch ( Exception ex ) { ex.printStackTrace () ; } return n; } 
@ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { try { if ( data != null ) { android.util.Log.i ( "ffs", data.toString () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onTabSelected ( android.support.design.widget.TabLayout.Tab tab ) { viewPager.setCurrentItem ( tab.getPosition () ) ; try { if ( ( viewPagerAdapter.getCurrentFragment () ) != null ) { viewPagerAdapter.getCurrentFragment () .onResume () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testMouseXpos () { assertNotNull ( GameHUD.getMouseXpos () ) ; try { assertEquals ( GameHUD.getMouseXpos () , GameHUDTest.mouseXpos ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void writeJPEG ( final java.awt.image.BufferedImage image, final java.io.File file, final int compression ) throws java.io.IOException { try { jatoo.image.ImageUtils.writeJPEG ( image, new javax.imageio.stream.FileImageOutputStream ( file ) , compression ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void check ( jkind.engines.messages.ValidMessage vm ) { try { for ( java.lang.String property : vm.valid ) { if ( properties.remove ( property ) ) { message = new jkind.engines.ivcs.messages.ConsistencyMessage ( vm ) ; check ( vm, property ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void close () { try { if ( ( lastPage ) != null ) { lastPage.release () ; lastPage = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void drawOpen ( final controller.IController controller ) { try { if ( ! ( controller.getDiscardPile () .isEmpty () ) ) { controller.drawOpenCard () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.manjesh.collector.domain.Event addEvent ( @org.springframework.web.bind.annotation.RequestBody com.manjesh.collector.domain.Event event ) { try { java.lang.System.out.println ( ( "Ganesh ==> " + ( event.getOids () .length ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return event; } 
@ org.bukkit.event.EventHandler public void onPlayerTeleport ( org.bukkit.event.player.PlayerTeleportEvent event ) { try { if ( event.getPlayer () .getUniqueId () .equals ( player.getUniqueId () ) ) { destroy () ; player.closeInventory () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeapplet ( processing.core.PApplet tem ) { try { mainapplet.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } remove ( tem ) ; add ( mainapplet ) ; } 
@ android.support.annotation.CallSuper protected void doLoadItems () { isLoading = true; if ( ( adapter ) != null ) { adapter.showLoadingState ( isLoading ) ; } onDoLoadItems () ; try { timber.log.Timber.d ( "Loading items ..." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPause () { divyang.musicapp_v6.BackgroundMediaService.mediaPlayer.pause () ; try { setMediaPlaybackState ( PlaybackState.STATE_PAUSED ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } stopForeground ( false ) ; showPausedNotification () ; super.onPause () ; } 
@ org.junit.Test public void findByIdTest () throws java.lang.Exception { java.util.Optional<io.gravitee.repository.management.model.Application> optional = applicationRepository.findById ( "application-sample" ) ; try { assertTrue ( "Find application by name return no result ", optional.isPresent () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void connectionLost ( java.lang.Throwable cause ) { try { com.qhiehome.ihome.util.LogUtil.d ( com.qhiehome.ihome.lock.gateway.GateWayClient.TAG, "The connection was lost" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setDefaults ( java.lang.String configFileUnderAssets ) { try { if ( ! ( com.google.common.base.Strings.isNullOrEmpty ( configFileUnderAssets ) ) ) { mRemoteConfigFile = configFileUnderAssets; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDidLoadView () { try { setFullScreen () ; } catch ( Exception ex ) { ex.printStackTrace () ; } initMenu () ; initContentView () ; refreshListDataFromNet () ; } 
@ java.lang.Override public void onClick ( com.mcal.ModdedPE.app.View p1 ) { try { getPESdk () .getNModAPI () .setEnabled ( nmod, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } refreshNModDatas () ; } 
@ org.junit.Test public void testAndroidParamsProjectNumberOverridesLocal () throws java.lang.Exception { OneSignalInit () ; try { com.test.onesignal.MainOneSignalClassRunner.threadAndTaskWait () ; } catch ( Exception ex ) { ex.printStackTrace () ; } junit.framework.Assert.assertNotSame ( "123456789", ShadowPushRegistratorGPS.lastProjectNumber ) ; } 
public be.cegeka.battle.FightingSoldier attack ( be.cegeka.battle.FightingSoldier defender ) { try { if ( attackerWins ( defender ) ) { defender.killSoldier () ; return this; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.killSoldier () ; return defender; } 
public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { try { if ( ( note.getTitle () .isEmpty () ) || ( note.getContent () .isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mNote = note; } 
protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type, carelender.view.parser.CommandPart[] commandParts ) { try { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type.equals ( commandPart.getKeywordType () ) ) { return commandPart; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound par1 ) { try { super.readFromNBT ( par1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int[] measurements = par1.getIntArray ( com.minespaceships.mod.overhead.ChatRegisterEntity.recoverSpaceshipMeasures ) ; if ( measurements != null ) { ship = new com.minespaceships.mod.spaceship.Spaceship ( measurements ) ; } } 
public void setPlayer ( unimelb.distributed_algo_game.player.Player mPlayer ) { try { java.lang.System.out.println ( ( "MainGamePanel" + ( mPlayer.getName () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } p = mPlayer; gameTable.setPlayer ( mPlayer ) ; } 
@ java.lang.Override public void delete () { try { this.myAssignments.remove ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.fireAssignmentChanged () ; } 
@ org.junit.Test public void testDropClass2 () { try { this.student.dropClass ( "Yun", "145", 2017 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertFalse ( this.student.isRegisteredFor ( "Yun", "145", 2017 ) ) ; } 
public void debug ( java.lang.String msg ) { try { if ( debug ) { delegate.getLogger () .println ( msg ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean prepareToSave () { if ( ! ( validateForm () ) ) { return false; } try { configureOscSenderFromForm () ; } catch ( Exception ex ) { ex.printStackTrace () ; } configureOutputManagerFromForm () ; return true; } 
public void stop () throws java.lang.Exception { try { for ( java.lang.Long cid : commandMap.keySet () ) deleteCommand ( cid ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCameraChange ( com.google.android.gms.maps.model.CameraPosition arg0 ) { mClearMapLimit = false; mActiveSearch = false; mPage = 1; try { loadObservations () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void unregisterNSDService () { try { if ( ( networkRegistrationListener ) != null ) { mNsdManager.unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void randomizeParameters () { for ( int i = 0; i <= 3; i++ ) { names.add ( rage.parqu.util.Randomizer.randomString () ) ; } try { correctIndex = rage.parqu.util.Randomizer.randomSmallPositiveInteger ( 2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void resumeGame ( android.view.ViewGroup boardLayout ) { this.mBoardLayout = boardLayout; mBoard = new com.tevinjeffrey.tictactoe.game.board.impl.ThreeBoard ( mBoardCallback, boardLayout ) ; try { evaluateGameState ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<graphene.model.idl.G_EntityTag> getEntityTags () { final java.util.List<graphene.model.idl.G_EntityTag> tags = new java.util.ArrayList<graphene.model.idl.G_EntityTag> () ; try { tags.add ( G_EntityTag.ACCOUNT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return tags; } 
public java.lang.Boolean getHasWeekend () { try { if ( ( getValidWeekdays () .contains ( Weekday.SATURDAY ) ) || ( getValidWeekdays () .contains ( Weekday.SUNDAY ) ) ) { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public net.minecraft.item.ItemStack getStackInSlot ( int slot ) { int index = getIndexForSlot ( slot ) ; net.minecraftforge.items.IItemHandlerModifiable handler = getHandlerFromIndex ( index ) ; try { slot = getSlotFromIndex ( slot, index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return handler.getStackInSlot ( slot ) ; } 
@ java.lang.Override public void onViewDetachedFromWindow ( com.fastaccess.ui.widgets.recyclerview.BaseViewHolder holder ) { if ( holder instanceof com.fastaccess.ui.adapter.viewholder.TimelineCommentsViewHolder ) { ( ( com.fastaccess.ui.adapter.viewholder.TimelineCommentsViewHolder ) ( holder ) ) .pauseWebView () ; } try { super.onViewDetachedFromWindow ( holder ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void attendiSette () throws java.lang.InterruptedException { concurrent.LockManager.lockSette.lock () ; while ( concurrent.LockManager.inAttesaSette ) { concurrent.LockManager.conditionSette.await () ; } concurrent.LockManager.inAttesaSette = true; try { concurrent.LockManager.lockSette.unlock () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void editPatientProf ( android.view.View v ) { try { setFieldsEnability ( ( ! ( mEditTextCustomerFName.isEnabled () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setRotation ( float theta ) { try { rotate ( ( theta - ( this.rotation ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public void saveAsJson ( final javax.servlet.http.HttpServletResponse response, final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { try { cookFileToDownload ( "json", response, redirectAttributes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML private void getServerSelected () { try { handleServerTextField () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { view = inflater.inflate ( R.layout.fragment_single_city, container, false ) ; findView () ; try { initData () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
protected void emphasisAsSelected ( com.vaadin.ui.Button button ) { try { if ( ( this.selectedButton ) != null ) { this.selectedButton.removeStyleName ( "selected" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } button.addStyleName ( "selected" ) ; this.selectedButton = button; } 
public void addNewDevice ( android.support.v4.util.Pair<java.lang.String, java.lang.String> newDevice ) { try { if ( ! ( mNewDevices.contains ( newDevice ) ) ) { mNewDevices.add ( newDevice ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } notifyDataSetChanged () ; } 
private void encounterRender () { int option = getOption () ; try { switch ( option ) { case 0: fight () ; break; case 1: flee () ; break; default: return; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.AfterClass public static void tearDown () throws java.lang.Exception { try { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper.shutdown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this, com.lasergiraffe.rideshare.util.SignUp.class ) ; try { startActivity ( i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getSubserviceIdentifiers () { try { if ( ( this.subServiceIds.charAt ( 0 ) ) == '.' ) { return this.subServiceIds.substring ( 1 ) .trim () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this.subServiceIds; } 
public static void main ( java.lang.String[] args ) { try { wordtrainer.MainMenu.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void openContextMenu ( android.view.View view ) { try { getActivity () .openContextMenu ( view ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public <T extends edu.harvard.iq.datatags.model.graphs.nodes.Node> T setNodeFor ( edu.harvard.iq.datatags.model.graphs.Answer answer, T node ) { try { if ( ! ( answers.contains ( answer ) ) ) { answers.add ( answer ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } nextNodeByAnswer.put ( answer, node ) ; return node; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { try { setListAdapter ( new bd1415.unipd.dei.it.cardb.ClientiArrayAdapter ( inflater.getContext () , ApplicationData.privati ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onCreateView ( inflater, container, savedInstanceState ) ; } 
protected net.serenitybdd.core.pages.RenderedPageObjectView getRenderedView () { try { if ( ( renderedView ) == null ) { renderedView = new net.serenitybdd.core.pages.RenderedPageObjectView ( driver, this, getWaitForTimeout () , true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return renderedView; } 
@ java.lang.Override public void saveOrUpdate () { try { getRepo () .saveOrUpdate ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void saveArticleInHistory ( wikipedia.Article article ) { requestedArticles.add ( article ) ; try { articleMap.put ( article.getTitle () , article ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( com.intellij.openapi.actionSystem.AnActionEvent e ) { com.intellij.openapi.project.Project project = e.getData ( PlatformDataKeys.PROJECT ) ; try { gerritToolWindow.reloadChanges ( project, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } gerritUpdatesNotificationComponent.handleNotification () ; } 
@ java.lang.Override @org.springframework.transaction.annotation.Transactional public ar.edu.unq.desapp.grupoC.model.user.User findById ( final java.io.Serializable id ) { ar.edu.unq.desapp.grupoC.model.user.User user = this.getHibernateTemplate () .get ( this.persistentClass, id ) ; try { if ( user != null ) user.addRoles () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return user; } 
@ java.lang.Override protected void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mSwipeDetector.stop () ; } 
public void outputNames () { try { for ( int x = 0; x < ( this.studentNames.size () ) ; x++ ) { java.lang.System.out.println ( this.studentNames.get ( x ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
boolean castDisconnect ( boolean castDisconnect ) { try { if ( castDisconnect ) { castManager.disconnect () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return castDisconnect; } 
public void onClick ( android.view.View v ) { try { this.changeExpress ( ivLike, ivDislike, tvLikeCount, true, false, llLikeAnimator ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean executeSW_BREAK () { try { if ( ! ( checkEOL () ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mSwitch ) != null ) { ExecutingLineIndex = mSwitch.mEnd; } return true; } 
public void actionPerformed ( java.awt.event.ActionEvent evt ) { clockTick = 0; clockTime = ( ( double ) ( clockTick ) ) / 10.0; try { timeString = new java.lang.Double ( clockTime ) .toString ( 1.0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } displayTime.setText ( timeString ) ; } 
private void locateCatalog ( java.lang.StringBuilder basePath ) { java.io.File d = new java.io.File ( basePath.toString () ) ; try { if ( ! ( d.exists () ) ) { d.mkdir () ; logger.info ( "The catalog folder of this file has been created yet." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void nationLeave ( com.palmergames.bukkit.towny.object.Nation nation ) { remove ( nation ) ; try { com.palmergames.bukkit.towny.TownyMessaging.sendGlobalMessage ( com.palmergames.bukkit.towny.TownySettings.getWarTimeForfeitMsg ( nation.getName () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } checkEnd () ; } 
public void toDoDraw ( Player person ) { try { person.setHand ( ClassicUno._deck.remove ( 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( person ) ; } 
private void buildLayout () { setSizeUndefined () ; setMargin ( true ) ; com.vaadin.ui.HorizontalLayout actions = new com.vaadin.ui.HorizontalLayout () ; actions.setSpacing ( true ) ; try { addComponents ( actions, restaurantName, foodType, location, hoursOfBusiness ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setDateOfScreeningDate () throws java.lang.InterruptedException { clickWhenVisible ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.SCREENING_DATE_PICKER ) ; clickWhenVisible ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.SCHEDULER_DAY_OF_MONTH ) ; try { clickWhenVisible ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.SCREENING_DATE_PICKER_DONE_BUTTON ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testSetup () { assertNotNull ( Controller.conversation ) ; assertNotNull ( Controller.input ) ; assertNotNull ( Controller.analyzer ) ; assertNotNull ( Controller.mdp ) ; try { assertNotNull ( Controller.hyperVariables ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/regCandidate", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String addCandidate ( org.springframework.ui.Model model ) { try { model.addAttribute ( "candidate", new ua.com.jobsukraine.entity.Candidate () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "regcandidate/RegCandidateOne"; } 
public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { try { if ( download != null ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this.listDownloadThreads.get ( this.listDownloads.indexOf ( download ) ) ; if ( tmp.isRunning ) tmp.interrupt () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void nextPdfPage () { int next = ( mCurrentPage.getIndex () ) + 1; try { if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testNull () { try { assertFalse ( ( ( new com.mycompany.app.App () .search ( null, 1, 2 ) ) > 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onConfigurationChanged ( android.content.res.Configuration newConfig ) { try { super.onConfigurationChanged ( newConfig ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( newConfig.locale.equals ( mLastLocale ) ) ) { updateQsTile () ; } } 
@ java.lang.Override public boolean isLazy () { try { if ( ( isLazy ) == null ) { isLazy = usesIndirection () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return isLazy; } 
@ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { try { if ( ( name ) == null ) { sink.register ( future.channel () ) ; } else { sink.register ( name, future.channel () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void setAvroDataSupplier ( org.apache.hadoop.conf.Configuration configuration, java.lang.Class<? extends org.apache.parquet.avro.AvroDataSupplier> suppClass ) { try { configuration.set ( org.apache.parquet.avro.AvroWriteSupport.AVRO_DATA_SUPPLIER, suppClass.getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onItemSelected ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { try { if ( position != ( data.pvActiveSpriteId ) ) { data.pvActiveSpriteId = position; UpdateDisplay ( container ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initializeTabs () { try { pspTabs.addTab ( "Planning", web, planPanel, "Edit the plan" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } pspTabs.addTab ( "Design", web, designPanel, "Sketch a plan" ) ; this.add ( pspTabs ) ; } 
public void clearLastMessage () { try { synchronized ( lock ) { waitForMessage () ; messages.remove ( 0 ) ; senders.remove ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public double max () { try { if ( ! ( hasCapacity () ) ) { return data[ ( ( data.length ) - 1 ) ]; } else { return org.hipparchus.stat.StatUtils.max ( getData () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void parseColumnInfo ( @javax.annotation.Nonnull org.pharmgkb.parser.vcf.VcfMetadata.Builder mdBuilder, @javax.annotation.Nonnull java.lang.String line ) { try { mdBuilder.setColumns ( java.util.Arrays.asList ( org.pharmgkb.parser.vcf.VcfParser.sf_tabSplitter.split ( line ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.support.annotation.Nullable @java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, @android.support.annotation.Nullable android.view.ViewGroup container, @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { android.view.View view = inflater.inflate ( R.layout.fragment_managing_existing_products, container, false ) ; initializeData () ; try { initializeRecyclerView ( view ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } initializeAdapter () ; return view; } 
@ java.lang.Override protected void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void doInit () { try { super.doInit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } forestry.core.PluginCore.blocks.analyzer.init () ; forestry.core.PluginCore.blocks.escritoire.init () ; AlleleHelper.instance.init () ; Proxies.render.initRendering () ; } 
@ java.lang.Override protected void setup ( com.bigdata.Context context ) throws java.io.IOException, java.lang.InterruptedException { org.apache.hadoop.conf.Configuration conf = context.getConfiguration () ; numOfPage = conf.getInt ( "numOfPage", ( -1 ) ) ; try { super.setup ( context ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { try { openNewScenarioWindow ( tvScenarios.getSelectionModel () .getSelectedItem () , false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { mInterfaceManager.call ( MainInterfaceManager.CallMode.FEED_COUNT_SET ) ; try { setDebugDescription ( Common.DEBUG_DEFAULT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { float score = computeScore () ; try { saveDrawing () ; } catch ( Exception ex ) { ex.printStackTrace () ; } drawView.setEnabled ( true ) ; started = false; callback.onFinish ( score, ( 10000 - ( duration ) ) ) ; } 
private void actionButtonAddForToolBar () { try { noteAddFrame.dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } noteAddFrame.setVisible ( true ) ; } 
public void checkInMedia ( java.util.ArrayList<Media> list, int index ) { try { list.get ( index ) .checkInMedia () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return; } 
public burlap.mdp.core.oo.state.ObjectInstance copyWithName ( java.lang.String objectName ) { try { if ( ! ( objectName.equals ( className ) ) ) throw new java.lang.RuntimeException ( "Object must be class block" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return copy () ; } 
@ java.lang.Override protected void onHandleIntent ( android.content.Intent intent ) { try { getData ( "n2" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getData ( "p2" ) ; } 
@ java.lang.Override public void setupProperties () { try { super.setupProperties () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void init () { count = 0; try { chessBoard.init () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } andrzej.example.com.wordunscrambler.fragments.tabs.DictionariesFragment.otherWindowOpened = true; } 
static long acker ( int m, int n ) { long start; long end; start = java.lang.System.currentTimeMillis () ; try { javacpp.cmr.com.sdkvsndk.Algorithm.unacker ( m, n ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } end = java.lang.System.currentTimeMillis () ; return end - start; } 
@ java.lang.Override public void show () { Gdx.input.setInputProcessor ( stage ) ; createDefaultSkin () ; try { buttonSetup () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.io.PrintWriter openOutputFile ( java.lang.String filename ) throws java.io.IOException { try { if ( filename.equals ( "-" ) ) { return new java.io.PrintWriter ( java.lang.System.out, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.io.PrintWriter ( new java.io.BufferedWriter ( new java.io.FileWriter ( filename ) ) ) ; } 
public void c57run () { try { if ( ( noteEditor ) != null ) { if ( noteEditor.getScene () .getWindow () .isShowing () ) { noteEditor.c57run () ; } else { noteEditor = null; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String encode ( ouch.Readers.TextReadable text ) { java.lang.String inputValue = text.getEntireString () ; this.value = inputValue.toUpperCase () ; try { this.valueToCalc = numToDec () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return convert () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/login", method = org.springframework.web.bind.annotation.RequestMethod.POST, produces = "text/html" ) public java.lang.String loginHTML ( org.springframework.ui.ModelMap model, java.lang.String user_name, java.lang.String password, javax.servlet.http.HttpServletResponse response ) { try { if ( handleLogin ( model, user_name, password, response ) ) return "User/LoginSuccess"; } catch ( Exception ex ) { ex.printStackTrace () ; } return "User/Login"; } 
public void suspend () { try { if ( ( m_db ) != null ) { m_db.close () ; m_db = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private double gain ( Assignment5.TrainingSet trainingSet, Assignment5.Attribute attribute ) { try { assert attribute.isDiscrete () ; } catch ( Exception ex ) { ex.printStackTrace () ; } double gain = ( info ( trainingSet ) ) - ( info ( trainingSet, attribute ) ) ; assert gain >= 0; return gain; } 
public void printContact () { try { java.lang.System.out.println ( this.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void printClosedDates () { try { java.lang.System.out.println ( "\nPRINT SPECIAL WEEKDAYS" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } printDates ( weekDays ) ; java.lang.System.out.println ( "\nPRINT SPECIAL DATES" ) ; printDates ( dates ) ; } 
public void jump () { update () ; program.Program.writeDebug ( ( "jump ( in RobotBase ) , id: " + ( id ) ) ) ; try { container.processRobot ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent arg0 ) { try { mainPanel.setVisible ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } addRunesPanel.setVisible ( true ) ; } 
@ javax.annotation.Nullable @java.lang.Override public java.lang.Void apply ( @javax.annotation.Nullable net.bither.bitherj.db.imp.base.ICursor c ) { try { txItem[0] = net.bither.bitherj.db.imp.AbstractTxProvider.applyCursor ( c ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } txExists[0] = true; return null; } 
public void AddFlag ( java.lang.String gameName, java.lang.String teamName, java.lang.String tagSerial, java.lang.String flagName ) { try { SetFlagCapturedStatus ( gameName, teamName, tagSerial, Global.FlagStatus.Not_Captured ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } SetFlagName ( gameName, teamName, tagSerial, flagName ) ; } 
public void handleViewSelection ( boolean selected ) { monthTextView.setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; try { monthTextView.setBackground ( ( selected ? selectedBackground : background ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startServiceDiscovery () { try { _manager.discoverServices ( _channel, new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Discover services" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { try { new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen ) .execute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.ws.rs.Path ( value = "/start" ) @javax.ws.rs.GET @com.codahale.metrics.annotation.Timed public com.intermancer.predictor.svc.dom.ExperimentStatus start () { com.intermancer.predictor.svc.dom.ExperimentStatus experimentStatus = getExperimentStatus () ; try { experimentStatus.setThreadAlreadyExecuting ( ( ! ( startBackgroundThreadSafely () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return experimentStatus; } 
public void fullScreen ( java.lang.String renderer ) { try { if ( insideSettings ( "fullScreen", renderer ) ) { this.fullScreen = true; this.renderer = renderer; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean identifierValid ( java.lang.String ident ) { try { if ( fields.containsKey ( ident ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public Type peek () { try { if ( isEmpty () ) { throw new java.lang.NullPointerException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return myTopNode.myItem; } 
public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { com.childstudios.promunchkincounter.player getplayer = players.get ( position ) ; try { playerScreen ( view, getplayer, position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public cf.connotation.editorview.Page addPage () { cf.connotation.editorview.Page p = new cf.connotation.editorview.Page ( cardList, drawList, drawSubList, back_resource, page ) ; page = ( page ) + 1; try { addPage ( p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return p; } 
@ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file, final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.io.File fileFile = file.toFile () ; try { if ( fileFilter.accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE; } 
@ java.lang.Override public void run () { try { if ( ! ( userIsSeeking ) ) { seekBar.setProgress ( getCurrentPosition () ) ; textCurrentTime.setText ( getTimeString ( getCurrentPosition () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void clearUsers () throws java.lang.Exception { server.gameinfocontainer.GameInfoContainer gic = new server.gameinfocontainer.GameInfoContainer ( false ) ; byte[] bytes = toBytes ( gic ) ; try { fc.writeGamesBytes ( bytes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( web.quotes.data.User user ) { try { userRepository.save ( user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "redirect:/users/" + ( user.getUsername () ) ; } 
public void finish ( com.art.alligator.TransitionAnimation animation ) { if ( animation.needDelayActivityFinish () ) { mActivity.supportFinishAfterTransition () ; } else { mActivity.finish () ; } try { animation.applyToActivityAfterFinish ( mActivity ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onKillMonster ( entities.EntityMonster monster ) { try { this.healPlayer ( 20 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.kills = ( kills ) + 1; giveExp () ; tryGiveWeapon ( monster.getWeapon () ) ; } 
private void setCurrentSide ( com.dmitryvoronko.model.game.Side side ) { try { switch ( side ) { case X: setSelected ( sideX, sideO ) ; break; case O: setSelected ( sideO, sideX ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void QuestionsListValueChanged () { test.Main.index = QuestionsList.getSelectedIndex () ; try { loadQuest ( test.Main.index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test public void test2 () { try { junit.framework.Assert.assertEquals ( ( 2 * 3 ) , 6 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.ibtnClose: stopSelf () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { default: return super.onOptionsItemSelected ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void set ( T t ) { typeConverter.copyFromObject ( t, tmp ) ; try { set ( tmp ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void resume () { try { synchronized ( lock ) { if ( ! ( pendingPause.getAndSet ( false ) ) ) { lock.notify () ; } else { } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onTabSelected ( android.support.design.widget.TabLayout.Tab tab ) { try { viewPager.setCurrentItem ( tab.getPosition () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setWebSocket ( com.koushikdutta.async.http.WebSocket webSocket ) { this.webSocket = webSocket; try { this.webSocket.setStringCallback ( getStringCallback () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } subscribeStates () ; getStates () ; } 
@ java.lang.Override public void resume () { try { mStopWatcher.resume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mHandler.post ( mUiUpdate ) ; } 
@ org.junit.Before public void startUpdate () { update = new org.openmrs.module.openconceptlab.Update () ; try { updateService.startUpdate ( update ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void reset () { setValue ( startValue ) ; currentElement = 0; try { currentTween = tweens.get ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentTween.setValue ( startValue ) ; } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { try { if ( ( controlPanel.createRoomControl ) != null ) controlPanel.createRoomControl.setDisable ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mainFrm.mazePanel.createMaze ( true ) ; } 
public static void main ( java.lang.String[] args ) { try { java.lang.System.out.println ( "huhu 3" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( com.hongyu.reward.model.AppLocation locationInfo ) { try { mCityAdapter.updateLocateState ( LocateState.SUCCESS, locationInfo.getCity () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean addSlices ( java.util.Collection<it.polito.atlas.alea2.Slice> slices ) { try { this.slices.addAll ( slices ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/getAllTestDescriptions", method = org.springframework.web.bind.annotation.RequestMethod.GET ) @org.springframework.web.bind.annotation.ResponseBody public java.util.List<ua.dp.skillsup.tests.dao.entity.TestDescription> getAllTestDescriptions () { java.util.List<ua.dp.skillsup.tests.dao.entity.TestDescription> testDescriptions = new java.util.ArrayList<ua.dp.skillsup.tests.dao.entity.TestDescription> () ; try { testDescriptions.addAll ( service.getAllTestDescriptions () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( testDescriptions ) ; return testDescriptions; } 
public static void sendSignal ( com.unideb.bosch.automatedcar.framework.Signal s ) { try { for ( com.unideb.bosch.automatedcar.framework.ISystemComponent comp : com.unideb.bosch.automatedcar.framework.VirtualFunctionBus.components ) { comp.receiveSignal ( s ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void changeBackgroundColor ( int selectedColor ) { HeadColor = selectedColor; try { initTheme () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mainFragment ) != null ) mainFragment.setTheme ( HeadColor ) ; } 
public void run () { if ( ( mWebView ) == null ) { return; } try { mWebView.loadUrl ( ( "javascript:" + js ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void insert ( long startFrom, org.exbin.utils.binary_data.BinaryData insertedData ) { long length = insertedData.getDataSize () ; insertUninitialized ( startFrom, length ) ; try { replace ( startFrom, insertedData, 0, length ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void bindView ( org.amahi.anywhere.server.model.ServerFile file, org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata, android.view.View fileView ) { try { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter.bindFileView ( file, fileView ) ; } else { bindFileMetadataView ( file, fileMetadata, fileView ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void show () { seedu.geekeep.ui.HelpWindow.logger.fine ( "Showing help page about the application." ) ; try { dialogStage.show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void createResource () { eu.h2020.symbiotelibraries.cloud.model.CloudResource resource = getTestResource () ; java.util.List<eu.h2020.symbiotelibraries.cloud.model.CloudResource> resources = new java.util.ArrayList<eu.h2020.symbiotelibraries.cloud.model.CloudResource> () ; try { resources.add ( resource ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateReservedEvent () { try { ( ( main.ReservedEvent ) ( originalEvent ) ) .setReservedTimes ( ( ( main.ReservedEvent ) ( originalEvent ) ) .getReservedTimes () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void describe ( final org.sonar.api.batch.sensor.SensorDescriptor descriptor ) { descriptor.name ( "jDepend sensor" ) ; try { descriptor.onlyOnLanguage ( Rules.LANGUAGE_JAVA ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView, boolean isChecked ) { try { mQqzoneBtn.setBackgroundResource ( ( isChecked ? R.drawable.btn_share_qzone : R.drawable.btn_share_qzone_unselected ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.persistence.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { try { if ( reportDefinition.getOrganization () .getNciInstituteCode () .equals ( nciInstituteCode ) ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
java.lang.String getAttributeType () { try { if ( ( ( attributeTypeCombo ) == null ) || ( attributeTypeCombo.isDisposed () ) ) { return ""; } } catch ( Exception ex ) { ex.printStackTrace () ; } return attributeTypeCombo.getText () ; } 
private void draw () { try { if ( ! ( defer ) ) show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess () { try { android.util.Log.i ( nl.dobots.crownstone.gui.control.ControlMainFragment.TAG, "set pwm success" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } done () ; } 
public void getPredictions ( org.bionlpst.util.message.CheckLogger logger, org.bionlpst.corpus.Corpus corpus ) throws java.io.IOException, org.bionlpst.BioNLPSTException { java.util.Collection<org.bionlpst.app.source.CorpusSource.EntryRecord> records = collectEntries ( org.bionlpst.app.source.CorpusSource.EXTS_OUTPUT_ONLY ) ; try { org.bionlpst.app.source.CorpusSource.loadOutputAnnotations ( logger, corpus, records, AnnotationSetSelector.PREDICTION ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void switchKeyboardLayout ( java.lang.String layoutName ) { try { if ( ( layoutName == null ) || ( layoutName.isEmpty () ) ) { throw new java.lang.RuntimeException ( ( "A valid layout ID is expected. Found: " + layoutName ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public javax.swing.JMenuItem getMenuPresenter () { try { menuItem = super.getMenuPresenter () ; } catch ( Exception ex ) { ex.printStackTrace () ; } menuItem.addActionListener ( this ) ; return menuItem; } 
public void clearStoreItems () { try { getStoreItems () .clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void assertNotContainsDestination ( java.lang.String message, com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker, java.lang.String expected ) { try { org.junit.Assert.assertFalse ( message, ( null != ( broker.getDestination ( expected ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { children.priorSels[groupPosition] = childPosition; try { notifyItemChanged ( groupPosition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onViewCreated ( android.view.View view, @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { try { super.onViewCreated ( view, savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } hideStatusBar () ; mFirebaseAnalytics = com.google.firebase.analytics.FirebaseAnalytics.getInstance ( this ) ; registerRongCloudReceiveMessageListener () ; } 
@ java.lang.Override public void run () { try { if ( ( completionListener ) != null ) { completionListener.onCompletion ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( bus ) != null ) { bus.post ( new com.devbrackets.android.exomedia.event.EMMediaCompletionEvent () ) ; } } 
public void onDatabaseResynced () { try { if ( ( mDatabaseProgressDialog ) != null ) { mDatabaseProgressDialog.dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db.getNumProjects () ; mDbResyncing = false; initializeViews () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void setUp () throws java.lang.Exception { try { super.setUp () ; } catch ( Exception ex ) { ex.printStackTrace () ; } activity = getActivity () ; } 
private void launchMain () { time = 0; android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.mad.utsstudcentre.Controller.MainActivity.class ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } finish () ; } 
private void changeTrack ( int increment ) { mCurrentTrackIndex = ( ( mCurrentTrackIndex ) + increment ) % ( mTopTracks.size () ) ; if ( ( mCurrentTrackIndex ) < 0 ) { mCurrentTrackIndex += mTopTracks.size () ; } try { updateView () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void updatePageNumber () { try { while ( ( ( pageNumber ) > 0 ) && ( ( ( pageNumber ) * ( pageLength ) ) >= ( pagedDataProvider.getBackendSize () ) ) ) { -- ( pageNumber ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.AfterClass public static void afterClass () throws java.lang.Exception { try { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil.deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void batch () { try { doBatch () ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.jme3.scene.BatchNode.Batch batch : batches.getArray () ) { batch.geometry.setIgnoreTransform ( true ) ; batch.geometry.setUserData ( UserData.JME_PHYSICSIGNORE, true ) ; } } 
public static synchronized void setAdUnitUuid ( java.lang.String adUnitUuid ) { try { com.commutestream.sdk.CommuteStream.request.setAdUnitUuid ( adUnitUuid ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel out, int flags ) { out.writeString ( this.server ) ; out.writeString ( this.email ) ; try { out.writeString ( this.token ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } out.writeValue ( this.is_shib ) ; } 
@ java.lang.Override public synchronized void onSleep ( int duration ) { stopSensingTask () ; logInfo ( TAG, ( "Pausing sensor for " + duration ) ) ; try { getSensorEvent () .onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setLogScale ( boolean enabled ) throws java.lang.IllegalStateException { boolean old = isLogScaleEnabled () ; super.setLogScale ( enabled ) ; try { fireAxisLogScaleChanged ( old, enabled ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void modifyAlbum ( java.lang.Long albumId ) { try { for ( com.bcdlog.shared.model.AlbumModel album : getUserAlbums () ) { if ( album.getId () .equals ( albumId ) ) { albumModel = album; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } titleArea.updateAlbum ( albumModel ) ; } 
private boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel.getAppointmentManager () ; try { cals = appointmentManager.getCalendars () ; } catch ( Exception ex ) { ex.printStackTrace () ; } appointmentManager.createHttpClient () ; calIndex = 0; setButtons ( target ) ; return setFormModelObject () ; } 
private void addNotifyListener ( javax.swing.JComboBox<java.lang.String> combo ) { try { combo.addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent e ) { notifyChange () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String remove ( java.lang.String key ) { int index = getIndex ( key ) ; try { if ( storage[index].contains ( key ) ) ( size ) --; } catch ( Exception ex ) { ex.printStackTrace () ; } return storage[index].remove ( key ) ; } 
public void setPenalty ( boolean penalty ) { try { if ( ( ( ( sectorHistory ) != null ) && ( ! ( this.penalty ) ) ) && penalty ) { sectorHistory.penalty () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.penalty = penalty; } 
@ org.junit.Test public void testGroupParameters () throws java.lang.Exception { us.kbase.narrativemethodstore.ValidationResults vr = us.kbase.narrativemethodstore.db.test.ValidatorTest.validate ( 1, null ) ; try { junit.framework.Assert.assertEquals ( ( "" + vr ) , 1L, ( ( long ) ( vr.getIsValid () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table, java.lang.Object value, boolean isSelected, boolean hasFocus, int row, int column ) { try { if ( value != null ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override public com.google.inject.Module next () { final com.google.inject.Module module = moduleIt.next () ; try { de.skuzzle.tinyplugz.guice.TinyPlugzGuice.LOG.debug ( "Installing module '{}'", module ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return module; } 
public void setNasSelector ( java.lang.String nasSelector ) { try { if ( ! ( this.nasSelector.equals ( nasSelector ) ) ) { this.nasSelector = nasSelector; init () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void connecter () { setLoggedIn ( validateCredentials () ) ; try { client.setMotDePasse ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void readUserPrefs_nullFilePath_assertionFailure () throws seedu.doit.commons.exceptions.DataConversionException { try { this.thrown.expect ( java.lang.AssertionError.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } readUserPrefs ( null ) ; } 
public void setFloat ( java.lang.String var ) { try { this.argument.put ( var, new org.real2space.neumann.approssi.core.function.Variable<java.lang.Float> () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void saveCheckpointAsIncomplete ( java.lang.String tableId, java.lang.String rowId, java.lang.String callbackJSON, java.lang.String transId, java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE, tableId, rowId, callbackJSON, transId, leaveTransactionOpen ) ; try { queueRequest ( request ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initializeMap ( double robotStartX, double robotStartY ) { gameMap = new org.usfirst.frc1073.robot16.navClasses.Map ( mapLengthX, mapLengthY, robotStartX, robotStartY ) ; robotStartX = 0.0; robotStartY = 0.0; try { gameMap.initializeMap ( robotStartX, robotStartY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void initGame () { initWalls () ; initBat () ; initBall () ; initBrick () ; try { initBackground () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected java.util.List<org.apache.nifi.components.PropertyDescriptor> getSupportedPropertyDescriptors () { final java.util.List<org.apache.nifi.components.PropertyDescriptor> props = new java.util.ArrayList ( properties ) ; try { props.add ( org.apache.nifi.processors.hadoop.FetchHDFS.FILENAME ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return props; } 
public static void debug ( final java.lang.String message, final java.lang.String bundleId ) { final org.eclipse.e4.core.services.log.Logger logger = org.bonitasoft.studio.common.log.BonitaStudioLog.getLogger ( bundleId ) ; try { if ( logger != null ) { logger.info ( message ) ; } else { java.lang.System.out.println ( message ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { vn.edu.uit.jrfsit.utils.Utils.print ( this, "Đã đặt lại mật khẩu, vui lòng kiểm tra mail của bạn" ) ; try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void savePref ( java.lang.String key, boolean value ) { try { me.wizos.loread.data.WithSet.editor.putBoolean ( key, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } me.wizos.loread.data.WithSet.editor.apply () ; } 
@ java.lang.Override public void setLanguage ( java.lang.String language ) { try { data.put ( LANG, language ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.language = language; } 
public com.android.volley.RequestQueue getRequestQueue () { try { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley.newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx.getApplicationContext () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return mRequestQueue; } 
public void setPaths ( java.util.List<java.lang.String> paths ) { if ( paths == null ) { paths = new java.util.ArrayList<> () ; } this.paths = paths; try { views = new android.util.SparseArray ( paths.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "deprecation" ) @java.lang.Override public void onShowCustomView ( android.view.View view, int requestedOrientation, acr.browser.lightning.view.CustomViewCallback callback ) { try { mUIController.onShowCustomView ( view, callback, requestedOrientation ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { try { java.lang.System.out.println ( "Stop" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( client.getState () ) == ( client.BUSY ) ) { client.closeCall () ; connectionLabel.setText ( "No connection" ) ; } } 
public static void warning ( java.lang.String message ) { try { me.StevenLawson.TotalFreedomMod.TFM_Log.warning ( message, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { try { if ( ( task.get () ) == null ) { task.set ( stpool.runServerTask ( this ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super.onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions.indexOf ( selectedMsg ) ; try { outState.putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION, lastSelectedPosition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isOnline ( java.lang.String username ) { username = username.toLowerCase () ; try { if ( com.example.project.SessionManager.SessionManager.clients.containsKey ( username ) ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public java.lang.Object intercept ( java.lang.Object proxy, java.lang.reflect.Method method, java.lang.Object[] args, net.sf.cglib.proxy.MethodProxy methodProxy ) throws java.lang.Throwable { java.lang.Object result = null; try { result = methodProxy.invoke ( this.targetObject, args ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public java.lang.String save () { facade.create ( current ) ; try { web.FacesUtil.addInfoMessage ( "Book successfully saved" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } current = null; return "findBooks.xhtml"; } 
@ java.lang.Override public void run ( org.spongepowered.api.entity.living.Living owner, org.spongepowered.api.entity.living.Living target, org.spongepowered.api.event.entity.DamageEntityEvent event ) { try { if ( target instanceof org.spongepowered.api.entity.living.player.Player ) { processAttackOnPlayer ( owner, ( ( org.spongepowered.api.entity.living.player.Player ) ( target ) ) , event ) ; } else { processAttackOnEntity ( owner, event ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.metamx.common.lifecycle.LifecycleStop public void stop () { try { for ( java.util.Map<java.lang.Integer, io.druid.segment.realtime.RealtimeManager.FireChief> chiefs : this.chiefs.values () ) { for ( io.druid.segment.realtime.RealtimeManager.FireChief chief : chiefs.values () ) { com.metamx.common.guava.CloseQuietly.close ( chief ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test ( expected = java.util.InputMismatchException.class ) public void testAddTempsTooSmall () { double[] temperatureSeries = new double[] {}; ua.edu.ucu.tempseries.TemperatureSeriesAnalysis seriesAnalysis = new ua.edu.ucu.tempseries.TemperatureSeriesAnalysis ( temperatureSeries ) ; try { seriesAnalysis.addTemps ( 2, ( -300 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void startLocationUpdates () { try { com.google.android.gms.location.LocationServices.FusedLocationApi.requestLocationUpdates ( gapiClient, locationRequest, this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addSleeper ( final long identifier, final org.apache.reef.util.ComplexCondition call ) { try { if ( ( sleeperMap.put ( identifier, call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String.format ( "Duplicate identifier [%d] in sleeper map", identifier ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public edu.harvard.hms.dbmi.bd2k.irct.model.query.JoinType getSupportedJoinByName ( java.lang.String joinTypeName ) { try { for ( edu.harvard.hms.dbmi.bd2k.irct.model.query.JoinType joinType : this.supportedJoins ) { if ( joinType.getName () .equals ( joinTypeName ) ) { return joinType; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onResume () { super.onResume () ; currentIndex = savedValues.getInt ( "index", 0 ) ; try { displayContent ( currentIndex ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void init () { try { for ( node.Node n : nodes ) { n.passInitialMessages () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( "Initial messages passed." ) ; java.lang.System.out.println () ; } 
@ org.junit.Test public void testGetDisallowedViewWithAccessDeniedView () throws java.lang.Exception { viewProvider.setAccessDeniedViewClass ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView.class ) ; try { org.junit.Assert.assertTrue ( "Got disallowed view when should get access denied view", ( ( getView ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.TestView1.VIEW_NAME ) ) instanceof com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onNewInput ( java.lang.String input ) { try { suggestionsView.removeAllViews () ; } catch ( Exception ex ) { ex.printStackTrace () ; } trigger.exec ( input, mTerminalAdapter.getCurrentOutputId () ) ; } 
private void queueResearch ( SCBot.ResearchType upgrade ) { this.economy.reserveResources ( upgrade.mineralCost () , upgrade.gasCost () ) ; try { this.researchQueue.add ( upgrade ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onError ( com.androidnetworking.error.ANError anError ) { try { if ( listener != null ) listener.updateError ( parseError ( anError ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.openqa.selenium.WebDriver getWebDriverInstance () { org.openqa.selenium.WebDriver retVal = getWebDriver () ; try { if ( null == retVal ) { retVal = new org.openqa.selenium.safari.SafariDriver () ; setWebDriver ( retVal ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return retVal; } 
@ javax.ws.rs.POST @javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public backend.SaveCompetences[] saveUserCompetences ( backend.SaveCompetences[] saveCompetences ) { backend.DatabaseConnector db = new backend.DatabaseConnector () ; try { java.lang.System.out.println ( ( "De db connector: " + db ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( saveCompetences ) ; return null; } 
public int getMax () { try { if ( ( mMediaPlayer ) != null ) { return mMediaPlayer.getDuration () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 1; } 
public void setTax ( float tax ) { try { sqLiteDatabase = dbHelper.getWritableDatabase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.pantor.blink.FixedDec._0 valueOf ( java.lang.String s ) { java.math.BigDecimal bd = new java.math.BigDecimal ( s ) ; try { bd = bd.setScale ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new com.pantor.blink.FixedDec._0 ( bd.unscaledValue () .longValue () ) ; } 
@ java.lang.Override public void onServiceConnected ( android.content.ComponentName name, android.os.IBinder service ) { try { org.secuso.privacyfriendlyactivitytracker.persistence.StepCountPersistenceHelper.storeStepCounts ( service, context, oldWalkingMode ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } context.getApplicationContext () .unbindService ( mServiceConnection ) ; org.secuso.privacyfriendlyactivitytracker.utils.StepDetectionServiceHelper.stopAllIfNotRequired ( false, context ) ; org.secuso.privacyfriendlyactivitytracker.receivers.WidgetReceiver.forceWidgetUpdate ( context ) ; } 
@ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName, java.lang.String path, com.facebook.react.bridge.ReadableMap data, final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName, path ) ; try { ref.update ( data, promise ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void insertOrder ( java.util.Map<java.lang.String, java.lang.String> paramsMap ) { insertOrderBaseInfo ( paramsMap ) ; insertOrderCustInfo ( paramsMap ) ; insertOrderDealInfo ( paramsMap ) ; insertOrderPostInfo ( paramsMap ) ; try { insertOrderProdInfo ( paramsMap ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } insertOrderResInfo ( paramsMap ) ; } 
private void validateAuthMode ( java.lang.String modeToAdd ) { try { if ( modeToAdd.equals ( ProvidersType.oidc.name () ) ) { ensureNoAuthnProvider () ; } else { ensureNoIDPProvider () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess () { try { disconnectAndClose ( false, new nl.dobots.bluenet.ble.core.callbacks.IStatusCallback () { @java.lang.Override public void onSuccess () { callback.onSuccess () ; } @java.lang.Override public void onError ( int error ) { callback.onSuccess () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () throws java.lang.Exception { _inn = new chronos.pdc.buildings.Inn ( fakeNpcRegistry ) ; try { org.junit.Assert.assertNotNull ( _inn ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } _inn.setBusinessHours ( TEST_OPEN, TEST_CLOSING ) ; } 
private java.lang.String query ( java.lang.String exp ) { try { java.lang.System.out.println ( tokenize ( exp ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ""; } 
private void setIndexOnUsername ( com.orientechnologies.orient.core.db.record.ODatabaseRecordTx db ) { try { com.baasbox.service.logging.BaasBoxLogger.info ( "..creating index on _bb_user.user.name..:" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.baasbox.db.DbHelper.execMultiLineCommands ( db, com.baasbox.service.logging.BaasBoxLogger.isDebugEnabled () , false, "create index _bb_user.user.name unique;" ) ; com.baasbox.service.logging.BaasBoxLogger.info ( "...done..." ) ; } 
private void updateText ( int c ) { current = c; videoNumberLabel.setText ( java.lang.String.format ( "%d of %d", current, tapes.size () ) ) ; try { updateButtons () ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateFieldsWithInfo () ; updateModifyingButtons () ; } 
@ java.lang.Override public void effect ( org.bukkit.event.Event e, org.bukkit.inventory.ItemStack item, int level ) { try { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item, level ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void set ( org.nutz.dao.entity.Entity<?> en ) { try { synchronized ( map ) { this.map.put ( en.getType () , en ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void showGameOverMsg () { try { monopolBoard.showGameOverMsg ( "Game Over" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void menu () throws java.lang.InterruptedException { exit = false; menu = new org.academiadecodigo.bootcamp8.duckhunt.Menu () ; try { menu.menuSelection () ; } catch ( Exception ex ) { ex.printStackTrace () ; } init () ; } 
@ java.lang.Override public void clear () { this.myIP = null; try { setMyPortIsSet ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.myPort = 0; this.entries = null; } 
public void addData ( java.lang.String result ) { try { stringBuilder.append ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void remove () { try { if ( ( getParent () ) != null ) getParent () .remove ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dispose () ; } 
private double convertUnit ( double number, int index ) { try { if ( index != ( -1 ) ) return number / ( java.lang.Math.pow ( 10, Functions.Density.POWERS[index] ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
public void addChild ( kz.pvnhome.pvnt.File child ) { child.setParent ( this ) ; try { children.add ( child ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { try { switch ( position ) { case 0: return pl.poznan.put.fc.antipaymentGuard.fragments.PayCardDetailsFragment.newInstance ( payCard.getId () ) ; case 1: return pl.poznan.put.fc.antipaymentGuard.fragments.TransactionsListFragment.newInstance ( payCard.getId () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void addMatchPerformance ( int matchday, analyse.SpielPerformance matchPerformance ) { try { if ( matchPerformance == null ) matchPerformances.remove ( model.Mannschaft.getKey ( matchday ) ) ; else matchPerformances.put ( model.Mannschaft.getKey ( matchday ) , matchPerformance ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.apache.shiro.authz.annotation.RequiresPermissions ( value = "arsenal:stock:list" ) @com.bjsts.manager.controller.purchase.RequestMapping ( value = "/list", method = { RequestMethod.GET, RequestMethod.POST } ) public java.lang.String list ( com.bjsts.manager.query.user.UserSearchable stockSearchable, @org.springframework.data.web.PageableDefault ( size = com.bjsts.manager.core.constants.GlobalConstants.DEFAULT_PAGE_SIZE, sort = "createdTime", direction = Sort.Direction.DESC ) org.springframework.data.domain.Pageable pageable, org.springframework.ui.ModelMap modelMap ) { java.util.List<com.bjsts.manager.entity.purchase.StockEntity> stockEntityList = stockService.findAll () ; try { modelMap.addAttribute ( "list", stockEntityList ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "stock/list"; } 
public java.util.ArrayList<com.ocwvar.darkpurple.Bean.SongItem> stopMuiltMode () { isMuiltSelecting = false; try { notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.util.ArrayList ( checkedItems ) ; } 
@ java.lang.Override public void onDestroy () { try { unregisterReceiver ( mConnectionReceiver ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } destroyService () ; super.onDestroy () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent i2 = new android.content.Intent ( this, heyheyoheyhey.com.ifoundclassmate3.registerActivity.class ) ; try { startActivityForResult ( i2, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setLogWriter ( java.io.PrintWriter arg0 ) throws java.sql.SQLException { try { originalDataSource.setLogWriter ( arg0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initializeRobot () throws java.lang.Exception, java.lang.IllegalStateException, java.lang.InterruptedException { InitializeSensors () ; InitializeServos () ; InitializeMenu () ; try { InitializeMotors () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( com.protalk.serial.Serial _serial ) { try { super.onCreate ( _serial ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } add ( com.protalk.broker.resources.ReadonlyResource.getFactory () .create ( ReadonlyResource.TYPE_PPM, _serial ) ) ; } 
@ java.lang.Override public void run () { try { callbackContext.success ( ( com.marketo.Marketo.isSecureModeEnabled () ? 1 : 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setText ( java.lang.String text ) { try { if ( ( text == null ) || ( text.isEmpty () ) ) { super.setText ( defaultText ) ; } else { super.setText ( text ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { android.util.Log.d ( com.freddykilo.smartdoor.AutoButton.TAG, "AutoButton.onDestroy () " ) ; try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { try { super.onRestoreInstanceState ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.d ( TAG, "onRestoreInstanceState () " ) ; } 
public void setY ( int newY ) { try { deleteGridInstance () ; } catch ( Exception ex ) { ex.printStackTrace () ; } coord.setY ( newY ) ; updateGrid () ; } 
private void update ( long dt ) { try { synchronized ( m_particleSystem ) { m_particleSystem.tick () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void checkHotelPowerConsumption ( Hotel hotel ) { try { floors = hotel.getFloors () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void preInit () { try { net.minecraftforge.fml.common.registry.GameRegistry.registerBlock ( this, org.squiddev.cctweaks.items.ItemMultiBlock.class, name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } registerTileEntity ( org.squiddev.cctweaks.blocks.network.TileNetworkedWirelessBridge.class, "wirelessBridge" ) ; registerTileEntity ( org.squiddev.cctweaks.blocks.network.TileNetworkedModem.class, "wiredModem" ) ; } 
public io.realm.Realm getNewRealmInstance () { try { if ( ( org.glucosio.android.db.DatabaseHandler.mRealmConfig ) == null ) { org.glucosio.android.db.DatabaseHandler.mRealmConfig = new io.realm.RealmConfiguration.Builder () .schemaVersion ( 4 ) .migration ( new org.glucosio.android.db.Migration () ) .build () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return io.realm.Realm.getInstance ( org.glucosio.android.db.DatabaseHandler.mRealmConfig ) ; } 
public void setCurrentState ( com.cmpe.raft.consensus.node.state.NodeState currentState ) { try { if ( ( this.currentState ) != null ) { this.currentState.stopJobs () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.currentState = currentState; this.currentState.performTask () ; } 
public void shoot () { try { sound.play ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( bullets ) --; } 
public void getByteFromPosition ( byte[] dst, int k ) { try { get ( dst, ( ( ( ( header ) - k ) + ( capacity ) ) % ( capacity ) ) , k ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onUserReceived ( ru.gsench.githubusers.domain.github_repo.GitHubUser user ) { this.user = user; view.setUser ( user ) ; try { view.hideUserLoading () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void stop () { super.stop () ; try { com.github.ybq.android.spinkit.animation.AnimationUtils.stop ( sprites ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void order ( java.lang.String query ) throws java.lang.Exception { com.password.manager.core.query.Query q = new com.password.manager.core.query.Query ( query ) ; objects = q.run ( backupList ) ; try { if ( ! ( objects.isEmpty () ) ) notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void postProcessItemInsert ( @javax.annotation.Nonnull illarion.client.graphics.Item newItem ) { if ( orderNotSet ) { setOrder ( newItem.getOrder () ) ; show () ; } rectangleDirty = true; try { newItem.show ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void stopPeriodicEvent () { try { stopPeriodicEvent ( null, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected final java.nio.file.Path addTempFile ( java.nio.file.Path p ) { try { Capsule.log ( Capsule.LOG_VERBOSE, ( "Creating temp file/dir " + p ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } synchronized ( oc.tmpFiles ) { oc.tmpFiles.add ( p ) ; } return p; } 
@ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params, boolean fireCommand ) { boolean executed = executeCommand ( "set saturation", params ) ; try { setSaturation ( 254 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addEntity ( Entity e ) { try { entities.add ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPause () { bluetoothScanner.stopScan ( scanCallback ) ; nfcAdapter.disableForegroundDispatch ( this ) ; resultsAdapter.clearScanResults () ; try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party[] parties ) { try { if ( ( getActivity () ) != null ) { android.widget.Toast.makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen.", Toast.LENGTH_SHORT ) .show () ; mSwipeRefreshLayout.setRefreshing ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void associate ( com.task.Task task ) { this.task = task; if ( task == null ) return; try { initialTime = task.getTaskTime () ; } catch ( Exception ex ) { ex.printStackTrace () ; } targetTime = 0; currentTime = initialTime; } 
private void DrawField ( char[][] field ) { try { for ( char[] x : field ) { for ( char y : x ) { java.lang.System.out.print ( ( y + " " ) ) ; } java.lang.System.out.println () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void endSession ( android.view.View view ) { try { if ( ( mMetricsManager ) != null ) { mMetricsManager.printMetrics () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.finish () ; } 
public static void parse ( java.lang.String line ) { try { if ( line.contains ( ":" ) ) { Assembler.isLabel ( line ) ; Assembler.address += 4; } else { Assembler.moreParse ( line ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onReadUnready () { _history.add ( "unready" ) ; try { super.onReadUnready () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test public void testSaveScreenShot () throws java.io.IOException { org.ats.services.functional.Value file = new org.ats.services.functional.Value ( "/tmp/screen.png", false ) ; org.ats.services.functional.action.SaveScreenShot saveScreenShot = new org.ats.services.functional.action.SaveScreenShot ( file ) ; try { org.testng.Assert.assertEquals ( saveScreenShot.transform () , "wd.getScreenshotAs ( FILE ) .renameTo ( new File ( \"/tmp/screen.png\" ) ) ;\n" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailure ( retrofit2.Call<com.upgrad.movieon.Api.ResponseBody.DiscoverResponse> call, java.lang.Throwable t ) { try { progressBar.setVisibility ( View.GONE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } linearLayoutHolder.setVisibility ( View.VISIBLE ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { com.togather.user.UserService.updateQuestions ( ( ( java.util.List<java.lang.String> ) ( dataSnapshot.getValue () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getUpdateSubTasksTest () { boolean param; param = true; task.setUpdateSubTasks ( param ) ; try { assertEquals ( param, task.getUpdateSubTasks () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void addWindow ( com.stardust.enhancedfloaty.FloatyWindow window ) { try { if ( ( com.stardust.enhancedfloaty.FloatyService.windows.add ( window ) ) && ( ( com.stardust.enhancedfloaty.FloatyService.instance ) != null ) ) { window.onCreate ( com.stardust.enhancedfloaty.FloatyService.instance, com.stardust.enhancedfloaty.FloatyService.instance.mWindowManager ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deleteEffect ( int id ) { try { while ( ( getIndexOfEffect ( id ) ) != ( -1 ) ) { status.get ( getIndexOfEffect ( id ) ) .end ( this ) ; status.remove ( getIndexOfEffect ( id ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onLoadMore ( int currentPage ) { try { if ( ( contactsListAdapter ) != null ) { contactsListPresenter.setCurrentPage ( currentPage ) ; contactsListPresenter.getContacts () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void orders () { try { if ( ( a.compareTo ( b ) ) == 1 ) { wslf.geometry.Point t; t = a; a = b; b = t; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void close () { if ( ( this.timer ) != null ) this.timer.cancel () ; try { if ( ( this.websocket ) != null ) this.websocket.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.jeffreythomasprice.game.HashCodeBuilder append ( boolean x ) { try { result = ( ( result ) * ( com.jeffreythomasprice.game.HashCodeBuilder.MULTIPLIER ) ) + ( new java.lang.Boolean ( x ) .hashCode () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
public void openNewScenarioWindow () { try { openNewScenarioWindow ( null, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void bindService () { android.content.Intent intent = new android.content.Intent ( this, org.deviceconnect.android.deviceplugin.host.HostDeviceService.class ) ; intent.setAction ( "camera" ) ; try { bindService ( intent, mServiceConnection, Context.BIND_AUTO_CREATE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
static void stopTransfer ( int transferId ) { try { synchronized ( net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers.get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer.stop () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void drawBackground ( android.graphics.Canvas canvas ) { try { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas.drawColor ( Color.BLACK ) ; } else { canvas.drawColor ( mCenterCircleColor ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setClusterSize ( int newSize ) throws java.lang.InterruptedException { try { setClusterSize ( getSingleCluster () .getName () , newSize ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void closeDrawer () { try { mDrawer.closeDrawer ( mDrawerListView ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } drawerOpen = false; } 
private <TVisit> void addResultToContext ( java.lang.String resultKey, java.util.Map<java.lang.String, java.lang.Object> storage, org.apache.jmeter.report.core.DataContext dataContext, org.apache.jmeter.report.processor.ResultDataVisitor<TVisit> visitor ) { try { addResultToContext ( resultKey, storage, dataContext, visitor, null, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onTaskViewDismissed ( com.android.systemui.recents.model.Task t ) { com.android.systemui.recents.model.RecentsTaskLoader loader = com.android.systemui.recents.model.RecentsTaskLoader.getInstance () ; try { loader.deleteTaskData ( t, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } loader.getSystemServicesProxy () .removeTask ( t.key.id ) ; } 
@ java.lang.Override public void applyOnColumn ( org.talend.dataprep.api.dataset.DataSetRow row, org.talend.dataprep.transformation.api.action.context.ActionContext context ) { final java.lang.String columnId = context.getColumnId () ; org.talend.dataprep.transformation.api.action.metadata.column.DeleteColumn.LOGGER.debug ( "DeleteColumn for columnId {}", columnId ) ; context.getRowMetadata () .deleteColumnById ( columnId ) ; try { row.deleteColumnById ( columnId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void checkValue ( java.util.Collection<E> expected ) { boolean ordered = ( theCollection ) instanceof org.observe.collect.ObservableOrderedCollection; try { org.junit.Assert.assertThat ( expected, org.qommons.QommonsTestUtils.collectionsEqual ( theSyncedCopy, ordered ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setShadowColor ( @android.support.annotation.ColorInt int color ) { try { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius, color, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String chooseTrump ( int trump ) { java.lang.String packet = "3,"; try { packet.concat ( java.lang.Integer.toString ( trump ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return packet; } 
public java.util.ArrayList<com.izik.recipebook.Recipe> setFavoriteRecipesByUserId ( java.lang.String UserId ) { java.util.ArrayList<com.izik.recipebook.Recipe> favorites = com.izik.recipebook.Model.instance ( mContext ) .GetUserFavoriteRecipesById ( UserId ) ; try { mThumbIds = GetAllImagesFromArrayList ( favorites ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return favorites; } 
public void maybeRegisterModule ( com.fasterxml.jackson.databind.ObjectMapper objectMapper ) { try { if ( springfox.documentation.swagger1.configuration.SwaggerJacksonModule.isModuleSetup ( objectMapper ) ) { objectMapper.registerModule ( this ) ; objectMapper.configure ( SerializationFeature.FAIL_ON_EMPTY_BEANS, false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public jenkins.widgets.HistoryPageFilter getHistoryPageFilter () { jenkins.widgets.HistoryPageFilter<T> historyPageFilter = newPageFilter () ; try { historyPageFilter.add ( baseList ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } historyPageFilter.widget = this; return historyPageFilter; } 
public <T> void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable<T> runnable ) { try { transactional ( runnable, null, null, null, null, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void bindAdapter () { model = new cn.edu.jxnu.awesome_campus.model.library.BookBorrowedModel () ; try { adapter = new cn.edu.jxnu.awesome_campus.support.adapter.library.BookBorrowedAdapter ( getActivity () , model ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } recyclerView.setAdapter ( adapter ) ; } 
void paintClass () { lastSeen = CLASS; removeAll () ; javax.swing.JButton courses = new javax.swing.JButton ( "Courses" ) ; courses.addActionListener ( new project_rpg.GUI.CoursesListener () ) ; try { add ( courses ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateUI () ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void result ) { try { super.onPostExecute ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { instruments = new org.firstinspires.ftc.teamcode.organs.Instruments () ; try { instruments.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } bp = new org.firstinspires.ftc.teamcode.controllers.teleop.ButtonPusher ( new org.firstinspires.ftc.teamcode.organs.Pusher () ) ; camera = new org.firstinspires.ftc.teamcode.tissues.TCamera () ; neuronTest = new org.firstinspires.ftc.teamcode.controllers.tests.NeuronTest ( instruments, camera ) ; } 
public static void navigateToLocationSettings ( android.content.Context context ) { try { context.startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void startPrefixMapping ( java.lang.String prefix, java.lang.String uri ) { m_prefixMap.put ( prefix, uri ) ; try { if ( m_inXMLMetadata ) { m_localPrefixMap.put ( prefix, uri ) ; m_prefixList.add ( prefix ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ butterknife.OnClick ( value = R.id.image_view_setting ) void clickSetting () { try { startActivity ( new android.content.Intent ( this, app.com.warattil.activities.SettingActivity.class ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void exitOnClose () { try { client.sendMessage ( new in.bits.sochat.bean.Message ( in.bits.sochat.bean.Type.DISCONNECT, client.getUserName () , "", null, receiver ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.setVisible ( false ) ; java.lang.System.exit ( 0 ) ; } 
@ java.lang.Override protected void onStartLoading () { super.onStartLoading () ; try { if ( ! ( com.jasonbutwell.popularmovies.BackgroundTask.TMDBLoader.isLoaded ) ) { com.jasonbutwell.popularmovies.Ui.LoadingIndicator.show ( mBinding, true ) ; forceLoad () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void validateInput ( android.view.View v ) { try { if ( ( etNameInput ) != null ) listener.onTextNameChanged ( getPosition () , etNameInput ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stopBackgroundMusic () { try { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer.stop () ; bgMediaPlayer.release () ; bgMediaPlayer = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testPatternIIa5 () { java.lang.String word = "abaaa"; try { org.hamcrest.MatcherAssert.assertThat ( matcher.containsPatternII ( word.toCharArray () , 'a', 'b' ) , org.hamcrest.Matchers.is ( false ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void addInterceptors ( org.springframework.web.servlet.config.annotation.InterceptorRegistry registry ) { registry.addInterceptor ( passportInterceptor ) ; try { registry.addInterceptor ( loginRequiredInterceptor ) .addPathPatterns ( "/question/*" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.addInterceptors ( registry ) ; } 
@ java.lang.Override public void valueChanged ( javax.swing.event.ListSelectionEvent e ) { if ( e.getValueIsAdjusting () ) return; try { onBotSelection () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean contains ( java.lang.Object o ) { try { synchronized ( map ) { return map.containsKey ( o ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) { try { if ( ( ui.views.CommitsView.combo.getSelectionIndex () ) != ( -1 ) ) { java.lang.String branch = ui.views.CommitsView.combo.getItem ( ui.views.CommitsView.combo.getSelectionIndex () ) ; ui.views.CommitsView.showCommits ( project, branch ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { MainClient client = new MainClient () ; try { client.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { try { provider.setState ( ( ( ( provider.getId () ) & ( mProvidersEnabled ) ) != 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mList.add ( provider ) ; } 
private void register () { try { com.mingle.utils.BusProvider.getInstance () .register ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void shutdownExecutor ( org.andstatus.app.os.MyAsyncTask.PoolEnum pool ) { try { if ( pool != ( MyAsyncTask.PoolEnum.DEFAULT ) ) { org.andstatus.app.os.AsyncTaskLauncher.getExecutor ( pool ) .shutdown () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized boolean moveShapeRight ( int position ) { if ( ( stateComponent.activeShapes[position] ) == null ) return false; boolean retVar = moveShape ( 1, 0, stateComponent.activeShapes[position] ) ; try { if ( retVar ) putActiveShapeGhosts () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return retVar; } 
public void dispose () { this.stage.dispose () ; try { this.bg.dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.squareup.otto.Subscribe public void subscribe ( today.gacha.android.services.GachaLocationService.CurrentLocationEvent event ) { assertTrue ( event.isSuccess () ) ; assertNotNull ( event.getData () ) ; try { latch.countDown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void paint ( java.awt.Graphics graphics ) { super.paint ( graphics ) ; try { area.drawBoard ( graphics ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } hub.drawHub ( graphics ) ; hero.draw ( graphics ) ; drawMonsters ( graphics ) ; } 
public void dispose () { deregisterClient () ; try { currentEndpointIdentifier.set ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override @org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { try { this.bookTourDao.cancelBookTour ( idBT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPreference ( james.colorpickerdialog.dialogs.PreferenceDialog dialog, java.lang.Integer preference ) { try { android.widget.Toast.makeText ( this, java.lang.String.format ( "#%06X", ( 16777215 & preference ) ) , Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.preference = preference; } 
@ org.junit.Before public void setUp () throws java.lang.Exception { distributedClusterStore = new org.onosproject.store.cluster.impl.DistributedClusterStore () ; try { distributedClusterStore.activate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setCustomer ( java.lang.String customerText ) { try { ( ( android.widget.EditText ) ( findViewById ( R.id.twwelcome ) ) ) .setText ( customerText ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void registerClient ( io.apiman.gateway.engine.beans.Client client ) { try { super.registerClient ( client, emptyHandler ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { com.oneplus.base.Log.d ( com.oneplus.camera.ui.PreviewGallery.ImageFragment.TAG, "onCreate" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator animation ) { animateAlpha = 255 - ( ( java.lang.Integer ) ( animation.getAnimatedValue () ) ) ; try { invalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBackPressed () { try { if ( keyboard.isCustomKeyboardVisible () ) { keyboard.hideCustomKeyboard () ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( container.onBackHandle () ) return; presenter.onBackPressed () ; } 
public void addAppointment ( com.zyumbik.makeanappointment.data_models.AppointmentData appointment ) { dates.add ( appointment.getTimeInMillis () ) ; try { addresses.add ( appointment.getOffice () .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setPrivilege ( java.lang.String token, java.lang.String user, java.lang.String priv ) { try { com.EIMA.Database.DBQueries.modifyPrivlege ( token, user, priv ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setDateEnabled ( boolean dateEnabled ) { cachedFormats.clear () ; try { super.setDateEnabled ( dateEnabled ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void undoEditEndTime ( int index, java.time.LocalDateTime endTime ) { logic.Undo u = new logic.Undo () ; try { u.setCommand ( "editEndTime" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } u.setIndex ( index ) ; u.setEndTime ( endTime ) ; UndoList.push ( u ) ; } 
@ java.lang.Override public void start () throws java.io.IOException { try { logTracker.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( consumers ) != null ) { consumers.start () ; } running.set ( true ) ; } 
@ java.lang.Override public void newDownloadIndexes () { try { if ( ( banner ) != null ) { banner.updateBannerInProgress ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } reloadData () ; } 
public void clear () { try { synchronized ( visibleItems ) { mLastPosition = 0; visibleItems.clear () ; notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailure ( java.lang.Throwable t ) { scrollLoading = false; try { de.greenrobot.event.EventBus.getDefault () .postSticky ( new com.projects.nosleepproject.events.FailedLoadEvent ( new java.util.ArrayList<android.content.ContentValues> () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void economy_SMActionPerformed ( java.awt.event.ActionEvent evt ) { try { lines.get ( economy ) .set ( 2, "false" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean createNewList ( java.lang.String listName ) { databaseAccess.open () ; try { if ( databaseAccess.listNameValidity ( listName ) ) { databaseAccess.createGList ( listName ) ; databaseAccess.close () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Deprecated public static void debug ( org.apache.ignite.IgniteLogger log, java.lang.String msg ) { if ( true ) return; try { log.info ( msg ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public de.thm.ap.openfit.model.sugarORM.records.Activity add ( de.thm.ap.openfit.model.ISubActivity subActivity ) { try { subActivity.setActivity ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } subActivities.add ( ( ( de.thm.ap.openfit.model.sugarORM.records.SubActivity ) ( subActivity ) ) ) ; return this; } 
public void setMonthCellHeight ( int height ) { this.monthCellHeight = height; try { mMonthCellAdapter.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } resize () ; } 
protected static void addBlock ( net.minecraft.block.Block block, java.lang.String name ) { try { tbsc.tbsccore.init.BlockInit.registeredBlocks.put ( name, block ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cpw.mods.fml.common.registry.GameRegistry.registerBlock ( block, name ) ; } 
@ java.lang.Override public void removePropertyChangeListener ( org.eclipse.jface.util.IPropertyChangeListener listener ) { try { if ( propertyChangeListeners.contains ( listener ) ) { propertyChangeListeners.remove ( listener ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAuthenticationFailure ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response, org.springframework.security.core.AuthenticationException exception ) throws java.io.IOException, javax.servlet.ServletException { try { response.sendError ( HttpServletResponse.SC_UNAUTHORIZED, "Authentication failed" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showRenderer () { try { if ( ( mViewFlipper.getDisplayedChild () ) != ( cn.vicey.navigator.Views.NavigateView.VIEW_MAP_RENDERER ) ) mViewFlipper.setDisplayedChild ( cn.vicey.navigator.Views.NavigateView.VIEW_MAP_RENDERER ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void nodeEntry () { try { if ( ! ( this.failureFree ) ) { initialization () ; entryRequest () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setData ( java.util.List<com.ericsender.android_nanodegree.popmovie.parcelable.ReviewListObj> data ) { mRowObjs = data; try { notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void after ( org.geepawhill.contentment.Context context ) { transition.stop () ; keeper.addTo ( context.canvas ) ; animateDrawText ( 1.0, context ) ; try { animateComputeBox ( 1.0, context ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } animateDrawBox ( 1.0, context ) ; } 
private boolean CheckIsUsernameUnique ( java.lang.String uName ) { try { if ( ( FindPlayerByName ( uName ) ) == null ) return true; else return false; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void show () { try { if ( ( peopleRecycleView ) != null ) { peopleRecycleView.update ( wumf.com.sharedapps.firebase.observable.ObservablePeopleFirebase.getPeople () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void initiateSendIfNecessary () { try { if ( ! ( isSending.getAndSet ( true ) ) ) { sendBytesFromBuffer () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage prepare ( org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage msg, java.util.UUID destNodeId ) { try { if ( msg instanceof org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryNodeAddedMessage ) prepareNodeAddedMessage ( msg, destNodeId, null, null, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return msg; } 
public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { try { DRIVE.arcadeDrive ( ( - ( joy.getRawAxis ( 1 ) ) ) , ( - ( rotationDeadZone ( joy.getRawAxis ( 2 ) ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void closeInventory () { try { writeToNBT ( invItem.getTagCompound () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBackPressed () { ( ( com.themealz.themealz.TheMealzApplication ) ( this.getApplication () ) ) .removeFromMealOptionsMap ( parentID ) ; try { super.onBackPressed () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void log ( java.lang.String name, me.duncte123.skybot.CustomLog.Level lvl, java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name; try { me.duncte123.skybot.SkyBot.logger2.log ( lvl, message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setImage ( java.awt.Image image ) { try { if ( ( currentImage ) != image ) { if ( image == null ) { currentImage.flush () ; } currentImage = image; update () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removePicture ( java.lang.String picture ) { if ( ( pictures ) == null ) { pictures = new java.util.HashSet<> () ; } try { pictures.remove ( picture ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void clicked ( com.badlogic.gdx.scenes.scene2d.InputEvent event, float x, float y ) { try { game.setScreen ( new com.paladinzzz.game.screens.LevelScreen ( game ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { mLEScanner.stopScan ( mScanCallback ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addOrUpdatePray () { try { switch ( anaMode ( counter.name ) ) { case ADD: addPray () ; break; case UPDATE: dbCounter.updatePray () ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stop ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { tern.eclipse.ide.ui.TernUIPlugin.getTernDescriptorManager () .destroy () ; tern.eclipse.ide.ui.TernUIPlugin.plugin = null; try { super.stop ( context ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addAll ( java.util.List<T> data ) { try { addAll ( mData.size () , data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initDbHelper () { mDbHelper = new com.example.framgia.hrm_10.controller.database.DBHelper ( this ) ; try { mDbHelper.createAccount () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void start ( int interval ) { _executor.scheduleWithFixedDelay ( new com.nchen.impl.Monitor.NoiseTask () , 0, 1, java.util.concurrent.TimeUnit.SECONDS ) ; try { _executor.scheduleWithFixedDelay ( new com.nchen.impl.Monitor.CheckTask () , interval, interval, java.util.concurrent.TimeUnit.SECONDS ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void accessApplied ( java.lang.String key, int oldAccess, int newAccess ) { try { { brokenLines.remove ( key.replace ( " ", "" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void fetchFilteredModules ( java.util.List<de.fhws.campusapp.entity.Module> modules ) { allModulesDataset.addAll ( modules ) ; try { filteredModulesDataset.addAll ( modules ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } filter ( de.fhws.campusapp.adapter.ModuleListAdapter.oldSearchTerm ) ; activateProgressBar.showProgressBar ( false ) ; } 
@ java.lang.Override public void onError ( java.lang.String error ) { try { android.widget.Toast.makeText ( this, error, Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeVolumes ( java.util.List<java.net.URI> volumes ) { try { if ( ( ( _volumes ) != null ) && ( volumes != null ) ) { for ( java.net.URI uri : volumes ) { _volumes.remove ( uri.toString () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void init () { cond = new configuration.parameters.ConditionalParameter ( useImageCalibration ) ; try { cond.setAction ( false, new configuration.parameters.Parameter[] { scaleZ }, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateDownloadSize ( long size ) { try { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log.info ( "Increase download size ={}", size ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } backupOps.updateDownloadSize ( remoteBackupFileName, size ) ; } 
@ java.lang.Override public int getEndLine () { try { if ( ( parser ) != null ) { return org.jetbrains.kotlin.diagnostics.DiagnosticUtils.offsetToLineAndColumn ( parser.getDocument () , innerNode.getTextRange () .getEndOffset () ) .getLine () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return -1; } 
public void load () { try { getLoaderManager () .restartLoader ( 0, null, mLoaderCallbacks ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { BI2.setText ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } BI2.setVisibility ( View.GONE ) ; ( tag_num ) --; buttonStack.push ( BI2 ) ; } 
@ org.junit.Test public void test_backlogRef () { softwaremanagementtool.agile.SprintTask task = new softwaremanagementtool.agile.SprintTask () ; assertEquals ( task.getBacklogRef () , 9 ) ; try { assertEquals ( task.BacklogRefProperty () .get () , 9 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int printAll ( java.lang.String[] args ) throws com.fasterxml.jackson.core.JsonProcessingException, java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; try { org.paces.Stata.JSON.StataJSON.toJSON ( allData ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } allData = null; return 0; } 
public void emit ( java.lang.String event, java.lang.Object data ) { try { mLoop.enqueue ( new me.mneri.eloop.Loop.Event ( this, event, data ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handle ( javafx.scene.input.KeyEvent key ) { try { if ( ( mainStage.getScene () ) == ( gameScene ) ) { gameScreen.gameLogic.pressKey ( key.getCode () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { savedOriginalPosition = getAdapterPosition () ; try { startLevel () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setQuestionPanel () { try { for ( int i = 0; i < 10; i++ ) { if ( answered ( i ) ) { } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { super.onResume () ; com.physical_web.cms.physicalwebcms.SetupManager setupManager = new com.physical_web.cms.physicalwebcms.SetupManager ( this ) ; try { setupManager.checkRequirements () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public net.idik.lib.slimadapter.viewinjector.DefaultViewInjector visibility ( int id, int visibility ) { try { findViewById ( id ) .setVisibility ( visibility ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override public void onAnalysisCompleted ( org.reactome.web.pwp.client.common.events.AnalysisCompletedEvent event ) { setStatusIcon ( null, false, false ) ; try { errorPanel.makeVisible ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stopResizing () { try { if ( ( moveTool ) != null ) { if ( ! ( validSize ( moveTool ) ) ) { moveTool.resetResize () ; } moveTool = null; repaint () ; updateBuffer () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void result ) { super.onPostExecute ( result ) ; try { progressDialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } initMarker () ; addMarker () ; addDrawer () ; } 
public boolean canAcceptTraveller ( com.elytradev.teckle.common.worldnetwork.WorldNetworkTraveller traveller, net.minecraft.util.EnumFacing from ) { try { if ( isLoaded () ) { return getTile () .canAcceptTraveller ( traveller, from ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return isLoaded () ; } 
private void movePlayerToBufferIfNeeded () { try { if ( ( mapController.getPlayerBufferPosition () ) != null ) { mapController.updatePlayerPosition ( mapController.getPlayerBufferPosition () ) ; mapController.setPlayerBufferPosition ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void extendAndWrite ( int address, int allocSize, byte[] data ) { try { extend ( address, allocSize ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } write ( address, data, data.length, false ) ; } 
@ java.lang.Override public void onInterstitialLoaded ( com.mopub.mobileads.MoPubInterstitial interstitial ) { try { android.util.Log.d ( BuildConfig.LOG_TAG, "Interstitial loaded" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } listener.onAdLoaded ( adapter ) ; } 
private void updateWeather () { try { com.sauken.sunshine.sync.SunshineSyncAdapter.syncImmediately ( getContext () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void showFragment ( android.support.v4.app.Fragment fragment ) { try { if ( null != fragment ) { fragmentTransaction = getSupportFragmentManager () .beginTransaction () ; fragmentTransaction.show ( fragment ) ; fragmentTransaction.commit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void fetchData () { try { if ( ! ( utils.NetworkHelper.hasNetworkAccess ( this ) ) ) { utils.ToastHelper.toastAlert ( this, "Check network connection and try again." ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } new com.aarondevelops.f3c.MainActivity.ChargeLocationLoader () .execute () ; } 
@ java.lang.Override public void onBindViewHolder ( com.madun.yeehaw.adapter.viewHolder.ComHolder holder, int position ) { mLayoutId = getViewHolderLayoutId ( position, mData ) ; try { conver ( holder, mData.get ( position ) , mLayoutId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { long tst = java.lang.Long.parseLong ( org.universAAL.context.che.Activator.getProperties () .getProperty ( "RECYCLE.KEEP", "0" ) ) ; try { db.removeOldEvents ( ( ( java.lang.System.currentTimeMillis () ) - tst ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void printLine ( int width, char c ) { try { for ( int i = 0; i < width; i++ ) { out.print ( c ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } out.println () ; } 
public void test_045 () { framework.common.ClockCommon.switchMode ( "秒表" ) ; excute ( testcase.Object_Description, testcase.Operation_ClickWait, "开始" ) ; excute ( testcase.Object_ResourceId, testcase.Operation_ClickWait, "com.android.deskclock:id/right_button" ) ; try { check ( testcase.Object_Description, testcase.Operation_checkExist, "分享" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setNumber ( int number ) { numberTv.setText ( java.lang.String.valueOf ( number ) ) ; try { update () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void pushToAllDevices ( org.onosproject.net.packet.impl.PacketManager.PacketRequest request ) { try { for ( org.onosproject.net.Device device : deviceService.getDevices () ) { if ( ( deviceService.getRole ( device.id () ) ) == ( org.onosproject.net.MastershipRole.MASTER ) ) { return; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void generateBoard () { GameBoard.generateAllBasicProperties () ; try { GameBoard.generateAllChanceCardProperties () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive<?> child, final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout ) { try { m_layout_container.add ( child, layout ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
protected void onStop () { try { super.onStop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( searchThread ) != null ) && ( searchThread.isAlive () ) ) searchThread.stop () ; } 
@ org.junit.Test public void testGetCollector () { com.youama.nexus.parser.collector.ICollector linkCollector = com.youama.nexus.parser.collector.FactoryCollector.getCollector ( FactoryCollector.TYPE_LINK ) ; assertTrue ( ( linkCollector instanceof com.youama.nexus.parser.collector.LinkCollector ) ) ; try { linkCollector.setSource ( "a" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( "a", linkCollector.getSource () ) ; } 
public static com.baronhub.titan.project.common.enums.Permission getProfileType ( java.lang.String perm ) { try { if ( perm.equals ( com.baronhub.titan.project.common.enums.Permission.ADMIN.toString () ) ) return com.baronhub.titan.project.common.enums.Permission.ADMIN; } catch ( Exception ex ) { ex.printStackTrace () ; } return com.baronhub.titan.project.common.enums.Permission.USER; } 
private void setViewPrevious () { try { java.lang.System.out.println ( "Previous" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } model.InventoryItem previousItem = viewList.pPrev () ; if ( previousItem != null ) tab.setView ( previousItem ) ; } 
@ java.lang.Override public void onBackPressed () { super.onBackPressed () ; try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { mMediaPlayerPrepared = false; mPlayer.stop () ; mPlayer.release () ; try { stopForeground ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onDestroy () ; } 
@ java.lang.Override public void error ( @android.support.annotation.NonNull java.lang.Throwable caught ) { try { editFailed ( caught ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGetService_multipleService_shouldReturnServiceWithHighestPriority () { org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface service = context.getService ( org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface.class ) ; org.junit.Assert.assertNotNull ( service ) ; try { org.junit.Assert.assertTrue ( ( service instanceof org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImpl2 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addChild ( com.nucleus.scene.Node child ) { try { children.add ( child ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } child.parent = this; } 
public void add ( int addable ) { stat += addable; try { modelNotifyObservers () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { Log.Aircraft.info ( mName, "Piste d�gag�e" ) ; try { if ( ! ( runway.release ( this ) ) ) Log.Aircraft.error ( mName, "Piste utilis�e avant qu'elle ait �t� d�gag�e" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } crossHoldingCircuitAndExit () ; } 
@ java.lang.Override public void restoreUiState ( @android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { try { super.restoreUiState ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } progressLoading.setVisibility ( ( savedInstanceState.getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad.setEnabled ( savedInstanceState.getBoolean ( "btnLoadEnabled" ) ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { for ( com.google.firebase.database.DataSnapshot ds : dataSnapshot.getChildren () ) { list.add ( ds.getValue ( br.com.sardinha.iohan.eventos.Usuario.class ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } recyclerView.setAdapter ( new br.com.sardinha.iohan.eventos.confirmarPresentesAdapter ( list, eventID, this ) ) ; } 
@ java.lang.Override public void onChildRemoved ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { android.util.Log.d ( com.pajato.android.gamechat.database.handler.MessagesChangeHandler.TAG, java.lang.String.format ( java.util.Locale.US, com.pajato.android.gamechat.database.handler.MessagesChangeHandler.LOG_FORMAT, "onChildRemoved", dataSnapshot, null ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } process ( dataSnapshot, com.pajato.android.gamechat.event.MessageChangeEvent.REMOVED ) ; } 
@ java.lang.Override public void iconTextViewOnClick ( android.support.v7.widget.RecyclerView.ViewHolder v, int position ) { try { if ( position == 0 ) stopAnimation ( v, R.drawable.power_enable_icon ) ; else stopAnimation ( v, R.drawable.power_disable_icon ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final int[] get () throws com.invertor.modbus.exception.IllegalDataValueException { try { if ( ( ( size () ) > 31 ) || ( ( size () ) == 0 ) ) { throw new com.invertor.modbus.exception.IllegalDataValueException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return peekImpl () ; } 
@ java.lang.Override public void validate ( java.util.List<org.hl7.fhir.instance.validation.ValidationMessage> errors, org.w3c.dom.Element element, org.hl7.fhir.instance.model.Profile profile ) throws java.lang.Exception { try { validateResource ( errors, "", new org.hl7.fhir.instance.validation.InstanceValidator.DOMWrapperElement ( element ) , profile, false, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { try { node.accept ( writeVisitor, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getLevelStr () { try { if ( ( getCalcedLevel () ) >= 0 ) { return ( ( getCalcedLevel () ) + "/" ) + ( level ) ; } else { return getString ( R.string.none ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onResourceReady ( com.bumptech.glide.load.resource.drawable.GlideDrawable resource, com.bumptech.glide.load.model.GlideUrl model, com.bumptech.glide.request.target.Target<com.bumptech.glide.load.resource.drawable.GlideDrawable> target, boolean isFromMemoryCache, boolean isFirstResource ) { try { if ( ! ( category.isAvailable ) ) categoryImage.setAlpha ( 0.2F ) ; else categoryImage.setAlpha ( 1.0F ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onAction ( java.lang.String name, boolean keyPressed, float tpf ) { if ( keyPressed ) return; try { switch ( name ) { case "BACK": nifty.gotoScreen ( "Start" ) ; break; case "START": nifty.gotoScreen ( "PlayerLoading" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onNext ( T v ) { try { onNext ( v, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.arcao.geocaching4locus.fragment.dialog.LocusTestingErrorDialogFragment newInstance ( android.content.Context context ) { com.arcao.geocaching4locus.fragment.dialog.LocusTestingErrorDialogFragment fragment = new com.arcao.geocaching4locus.fragment.dialog.LocusTestingErrorDialogFragment () ; try { fragment.prepareDialog ( 0, ( locus.api.android.utils.LocusUtils.isLocusAvailable ( context ) ? R.string.error_locus_old : R.string.error_locus_not_found ) , AppConstants.LOCUS_MIN_VERSION.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return fragment; } 
public void checkErrorAndCast ( com.developmentontheedge.beans.DynamicPropertySet dps ) { try { isError ( dps ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.developmentontheedge.beans.DynamicProperty property : dps ) { checkErrorAndCast ( property ) ; } } 
@ java.lang.Override public void onDismiss () { for ( com.duchuyctlk.widget.PopupDismissCatchableSpinner.PopupDismissListener listener : mDismissListeners ) { listener.onDismiss ( null ) ; } try { if ( ( mPopupListener ) != null ) { mPopupListener.onDismiss () ; mPopupListener = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateState ( client.GameState st ) { st.setColorMap ( colors ) ; try { for ( java.util.function.Consumer<client.GameState> sl : stateListeners ) { sl.accept ( st ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } finish () ; } 
public void onClick ( android.content.DialogInterface dialog, int id ) { try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } saveData () ; android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.ast.blocksave.DashboardActivity.class ) ; startActivity ( intent ) ; } 
public void addStateChangedListener ( com.example.uicomponents.MultistateSwitch.StateChangedListener listener ) { if ( listener == null ) return; try { mListeners.add ( listener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( ( checkbox.getVisibility () ) == ( android.view.View.VISIBLE ) ) { return; } else { org.catrobat.catroid.ui.fragment.FormulaEditorFragment.showFragment ( view, this, getFormulaWithBrickField ( BrickField.ROBOME_MOVE_CYCLES ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void sleep ( int time ) { long startTime = java.lang.System.currentTimeMillis () ; try { while ( ( ( java.lang.System.currentTimeMillis () ) - startTime ) < time ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean Term () { try { if ( ! ( ( Var () ) || ( Int () ) ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void handle ( org.dsa.iot.dslink.node.actions.ActionResult event ) { org.dsa.iot.dslink.node.Node node = event.getNode () .getParent () ; try { unsubscribe () ; } catch ( Exception ex ) { ex.printStackTrace () ; } node.delete () ; } 
private void toggleTrading () { notate.remoteToggleImprovise () ; try { if ( trading ) { tradingStopped () ; } else { tradingStarted () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void setWeightWatcherSmartPoints () { recipeModel.setWeightWatcherSmartPoints ( 12 ) ; try { org.junit.Assert.assertEquals ( ( ( int ) ( recipeModel.getWeightWatcherSmartPoints () ) ) , 12 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void newSession () { try { currentSession = new munk.Session ( ( ( currentSession.getSessionNumber () ) + 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sessions.add ( currentSession ) ; } 
public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { try { synchronized ( this.cleanupTasks ) { this.cleanupTasks.add ( cleanupTask ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onPause () { try { if ( ( manager ) != null ) manager.stop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } paused = true; view.showPause () ; } 
public synchronized void removeLeftwards ( android.view.View view, int position ) { try { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { animateOut ( view, position, R.anim.slide_out_left, 150 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void add ( aQute.bnd.osgi.ClassDataCollector cd ) { try { delegates.add ( cd ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean removeItem ( com.mojang.ld22.item.Item i ) { com.mojang.ld22.item.Item item = findItem ( i ) ; try { if ( item == null ) return false; else items.remove ( item ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void updatePlayer ( model.Player p ) { try { update ( p.getSpriteBase () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void create ( my.javapr.addressbook.model.ContactData contact ) { initContactCreation () ; fillContactForm ( contact, true ) ; submitContactCreation () ; try { returnToHomePage () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stop () { try { timber.log.Timber.d ( "Stopping artoo link manager" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.stop () ; } 
private void stopImgWork () { try { if ( ( ( m_DownloadImageTask ) != null ) && ( ( m_DownloadImageTask.getStatus () ) == ( com.google.android.gms.common.api.Status.RUNNING ) ) ) { m_DownloadImageTask.cancel ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void mutation ( algorithm.Mutation mutation ) { algorithm.Population.logger.info ( "Мутация в популяции. Начало" ) ; mutation.mutate ( individuals ) ; try { algorithm.Population.logger.info ( "Мутация в популяции. Окончание" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void pop () { try { if ( ! ( isEmpty () ) ) { ( index ) --; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void actionButtonEditForToolBar () { noteEditFrame.dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker.addNoteToEditFrame () ; try { noteEditFrame.setVisible ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onScroll ( android.widget.AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount ) { try { spinner.setSelection ( firstVisibleItem ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void extendHandlerExceptionResolvers ( java.util.List<org.springframework.web.servlet.HandlerExceptionResolver> exceptionResolvers ) { try { for ( org.springframework.web.servlet.config.annotation.WebMvcConfigurer delegate : this.delegates ) { delegate.extendHandlerExceptionResolvers ( exceptionResolvers ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSpO2ParamsChanged () { try { mHandler.obtainMessage ( Const.MESSAGE_OXIMETER_PARAMS, mPackageParser.getOxiParams () ) .sendToTarget () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addPencil ( int value ) { validateValue ( value ) ; try { pencils.add ( value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Collections.sort ( pencils ) ; } 
@ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage message ) { try { if ( _sequencer.isRunning () ) { switch ( message.getCommand () ) { case 128: case 144: notifyPosition ( _sequencer.getTickPosition () ) ; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void onError () { try { android.util.Log.d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer.class.toString () , "onErrorCalled" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mOnErrorListener ) != null ) mOnErrorListener.onError () ; } 
public void run () { try { output = f.apply ( this, this.listInteger ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { try { scheduler.smrReceived ( event ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void skipNextIteration () { ( stepSkipIterationCounter ) ++; try { clearCommunicationAgent () ; } catch ( Exception ex ) { ex.printStackTrace () ; } progressCommandReceiverToSkipNextIteration () ; } 
@ java.lang.Override public void showNoContent () { try { if ( ( mAdapter.getItemCount () ) == 0 ) { mInfoTextView.setVisibility ( View.VISIBLE ) ; mInfoTextView.setText ( getString ( R.string.no_contacts ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onProfileLoaded ( cwa115.trongame.User.Profile profile ) { lastAddedFriendName = ( ( profile.getName () ) == null ) ? "/" : profile.getName () ; try { if ( ( mostPopularFriendName ) != null ) loadStats ( lastAddedFriendName, mostPopularFriendName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { addNewPOI () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void actionPerformed ( net.minecraft.client.gui.GuiButton button ) throws java.io.IOException { try { if ( button == ( buttonJEI ) ) com.phylogeny.extrabitmanipulation.api.jei.JustEnoughItemsPlugin.openCategory ( ChiseledArmorInfoRecipeCategory.UID ) ; else super.actionPerformed ( button ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } helpMode = buttonHelp.selected; if ( com.phylogeny.extrabitmanipulation.reference.JeiReferences.isJeiLoaded ) buttonJEI.visible = helpMode; } 
private static void createDirectory ( java.lang.String folderName, java.lang.String path ) { try { new java.io.File ( ( path + folderName ) ) .mkdirs () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess () { try { android.util.Log.i ( net.nitroshare.android.transfer.TransferService.TAG, java.lang.String.format ( "transfer %d succeeded", transferId ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } showSuccessNotification ( device ) ; } 
public void loadNar ( java.nio.file.Path path ) throws java.io.IOException { nak.nakloidGUI.coredata.CoreData.decompressNar ( path ) ; try { reloadScoreAndPitches () ; } catch ( Exception ex ) { ex.printStackTrace () ; } pathNar = path; NakloidGUI.preferenceStore.setValue ( "workspace.path_nar", path.toString () ) ; isSaved ( true ) ; } 
private void fillTower ( int N ) { try { for ( int i = N; i >= 1; i-- ) { towers.get ( 0 ) .push ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element, final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener listener ) { try { itemView.setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View view ) { listener.onItemClick ( element ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void close () throws java.lang.Exception { timer.cancel () ; try { executor.shutdown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void shouldRenderStatusTextView () { android.widget.TextView textView = ( ( android.widget.TextView ) ( activity.findViewById ( R.id.status ) ) ) ; try { assertNotNull ( textView ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.support.annotation.Nullable @java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, @android.support.annotation.Nullable android.view.ViewGroup container, @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { try { getComponent () .inject ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onCreateView ( inflater, container, savedInstanceState ) ; } 
@ org.junit.Before public void setup () { try { testingData = setupTestingData ( 10, 10, 5 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tree = new RandomForestHOG.DecisionTree.DecisionTree ( testingData, 0 ) ; } 
@ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { int id = menuItem.getItemId () ; try { doMenuAction ( id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void test_005 () { excute ( testcase.Object_Description, testcase.Operation_ClickWait, "城市" ) ; try { excute ( testcase.Object_Description, testcase.Operation_ClickWait, "搜索" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } check ( testcase.Object_Text, testcase.Operation_checkExist, "搜索…" ) ; } 
@ java.lang.Override public void run () { sendLogMessage ( "Implementation is running!" ) ; try { brickController.drawString ( "Hello World!", 1, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getNextTaskToCompute () { java.lang.String taskJson = jobs.get ( currentJobToCompute ) .getNewTask () ; try { currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return taskJson; } 
@ java.lang.Override public void customize ( org.apache.catalina.connector.Connector connector ) { org.apache.coyote.ProtocolHandler handler = connector.getProtocolHandler () ; try { if ( handler instanceof org.apache.coyote.http11.AbstractHttp11Protocol ) { org.apache.coyote.http11.AbstractHttp11Protocol protocol = ( ( org.apache.coyote.http11.AbstractHttp11Protocol ) ( handler ) ) ; protocol.setMaxHttpHeaderSize ( maxHttpHeaderSize ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void activate ( int whichToActivate ) { try { if ( ( ( state ) != 1 ) && ( ( state ) != 2 ) ) { state = 1; nextState = 2; com.hurryup.game.network.GameClient.sendMessage ( serialize () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { android.content.Intent intent = new android.content.Intent ( this, net.ilexiconn.hipster.MainActivity.class ) ; intent.putExtra ( "magister", magister ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } finish () ; } 
public void update ( org.newdawn.slick.GameContainer gc, int delta ) throws org.newdawn.slick.SlickException { super.update ( gc, delta ) ; clientObject.update ( gc, delta ) ; try { currentInputState = collectInputState ( delta, clientObject.getId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGetCanMoveFasterTrue () { it.polimi.ingsw.cg_23.model.players.Alien alien = new it.polimi.ingsw.cg_23.model.players.Alien ( "dummy" ) ; try { assertTrue ( alien.getCanMoveFaster () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( net.joaolourenco.legame.graphics.menu.Menu m ) { try { net.joaolourenco.legame.Registry.getMainClass () .setWorld ( new net.joaolourenco.legame.world.RandomWorld ( 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } m.close () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String substring, org.springframework.ui.Model uiModel ) { try { buildListReport ( substring, uiModel ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "reports/list"; } 
@ org.greenrobot.eventbus.Subscribe ( threadMode = org.greenrobot.eventbus.ThreadMode.MAIN ) public void onEvent ( com.ox.base.BaseEvent event ) { try { if ( ( event.eventType ) == ( com.ox.Constant.EVENT_SCROLL_HAPPENED ) ) { toggleBottom ( ( ( boolean ) ( event.data ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addRow ( java.lang.String row ) { try { rows.add ( row ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.numOfColumns = length () ; ( this.numOfRows ) ++; } 
protected void end () { org.usfirst.frc.team3130.robot.subsystems.Chassis.ReleaseAngle () ; try { org.usfirst.frc.team3130.robot.subsystems.Chassis.DriveTank ( 0, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void processQRCodes ( java.lang.String codeName ) { try { if ( ( path.size () ) < 1 ) { path.push ( codeName ) ; startTimeMillis = java.lang.System.currentTimeMillis () ; } else { smarterPathFinder ( codeName ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void Draw () { try { for ( branchAW.CardField cf : aFields ) { java.lang.System.out.println ( cf.toString () ) ; cf.Draw ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deleteUser ( isc.intake2.online_test.entities.User user ) { try { super.delete ( user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void printReceipt ( fr.pasteque.client.models.Receipt r ) { try { super.printReceipt ( r ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void query ( java.sql.Connection connection, java.lang.String query ) throws java.sql.SQLException { java.lang.System.out.println ( query ) ; java.sql.Statement stmt = connection.createStatement () ; try { stmt.execute ( query ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public double[] getBlackPoint () { try { if ( ( colorSpace ) instanceof org.verapdf.features.pb.objects.PDCIEDictionaryBasedColorSpace ) { org.verapdf.features.pb.objects.PDCIEDictionaryBasedColorSpace cie = ( ( org.verapdf.features.pb.objects.PDCIEDictionaryBasedColorSpace ) ( colorSpace ) ) ; return org.verapdf.features.pb.objects.PBColorSpaceFeaturesObjectAdapter.parseTristimulus ( cie.getBlackPoint () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void saveMoviesToRealm ( java.util.List<com.example.filip.movielist.pojo.MovieListModel> listOfMovies ) { mRealmInstance.beginTransaction () ; try { mRealmInstance.copyToRealmOrUpdate ( listOfMovies ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mRealmInstance.commitTransaction () ; } 
@ butterknife.OnClick ( value = R.id.label_touch_target ) public void labelTouch () { if ( mResolutionLayoutVisible ) { return; } try { finishWithResult ( "label" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onNewDiagnosisResult ( java.util.Collection<rocks.inspectit.shared.all.communication.data.diagnosis.results.ProblemOccurrence> problemOccurrences ) { try { diagnosisResults.getDiagnosisResults () .addAll ( problemOccurrences ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean getButton ( java.lang.String name ) { try { if ( buttons_.containsKey ( name ) ) return buttons_.get ( name ) .state; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void stopScaling () { try { glPopMatrix () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onRefresh () { try { new com.afn.onthego.async.LearnRequest ( this ) .execute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { try { refresh () ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onResume () ; } 
@ java.lang.Override public void processKeyEvent ( java.awt.event.KeyEvent e ) { if ( ( e.getKeyCode () ) == ( java.awt.event.KeyEvent.VK_DOWN ) ) { this.setPopupVisible ( true ) ; } try { super.processKeyEvent ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initGame () { this.board.init () ; this.currentPlayer = org.casestudy.target.chess.constants.PieceColor.White; this.moveList.clear () ; this.fullMoveCount = 1; try { this.printGameFEN () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( floobits.windows.AnActionEvent e ) { if ( ( context ) == null ) { return; } floobits.common.protocol.handlers.FlooHandler handler = context.getFlooHandler () ; if ( handler == null ) { return; } try { handler.state.setFollowing ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addItem ( java.lang.String key, hackerrepublic.sarkarsalahkar.models.Post post ) { try { posts.add ( 0, post ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } keys.add ( 0, key ) ; notifyDataSetChanged () ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { try { if ( textField1.getText () .isEmpty () ) { } else { name = textField1.getText () ; frame2.dispose () ; addClient ( name ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public double getCostOfRoute () { double finalCost = 0; try { for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return finalCost; } 
private void startTimer () { try { if ( ( timer ) == null ) { timer = new java.util.Timer () ; timer.schedule ( task, 0, 1000 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void setPublicUrl ( java.lang.String publicUrl ) throws org.apache.commons.configuration.ConfigurationException { io.subutai.common.settings.SystemSettings.validatePublicUrl ( publicUrl ) ; try { io.subutai.common.settings.SystemSettings.saveProperty ( "publicURL", publicUrl.toLowerCase () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onChange ( org.apache.twill.discovery.ServiceDiscovered serviceDiscovered ) { co.cask.cdap.common.zookeeper.coordination.ResourceRequirement requirement = requirements.get ( serviceDiscovered.getName () ) ; try { if ( requirement != null ) { performAssignment ( requirement, serviceDiscovered ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { started = false; instop = true; first = true; try { android.widget.Toast.makeText ( this, "recording has stopped, restart for continue or load another dataset", Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean run ( seedu.jimi.model.task.ReadOnlyTask task ) { try { if ( checkCompleted ) { if ( task.isCompleted () ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( task instanceof seedu.jimi.model.task.DeadlineTask ) || ( task instanceof seedu.jimi.model.task.FloatingTask ) ; } 
public void disable () { try { if ( ( ( mGoogleApiClient ) != null ) && ( mGoogleApiClient.isConnected () ) ) { LocationServices.FusedLocationApi.removeLocationUpdates ( mGoogleApiClient, this ) ; mGoogleApiClient.disconnect () ; mGoogleApiClient = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } isEnabled = false; } 
@ java.lang.Override protected void createEditPolicies () { try { installEditPolicy ( EditPolicy.CONNECTION_ROLE, new org.dbflute.erflute.editor.controller.editpolicy.element.connection.RelationEditPolicy () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( ( BabystepsTimer.getTime () ) != null ) BabystepsTimer.stop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } BabystepsTimer.startTimer () ; } 
@ java.lang.Override public void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } new se.umu.cs.pvt151.search.SearchRegularFragment.AnnotationsTask () .execute () ; } 
@ java.lang.Override protected void onStart () { super.onStart () ; try { loader3.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static android.net.Uri appendProfileWithDefault ( final java.lang.String profile, final android.net.Uri uri ) { try { if ( profile == null ) { return org.mozilla.gecko.db.DBUtils.appendProfile ( GeckoProfile.DEFAULT_PROFILE, uri ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return org.mozilla.gecko.db.DBUtils.appendProfile ( profile, uri ) ; } 
public void addEvent ( int eventID ) { this.hybridEventsWork[this.numberEvents] = new matching.eventProcessor.parallel.HybridEvent ( eventID ) ; try { startThreads () ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( this.numberEvents ) ++; } 
public void run () { try { main.Driver.prepareGUI () ; } catch ( Exception ex ) { ex.printStackTrace () ; } main.Driver.startCheck () ; } 
private void publishResults ( com.example.mappingservice.Result result ) { android.content.Intent intent = new android.content.Intent ( com.example.mappingservice.MappingService.NOTIFICATION ) ; intent.putExtra ( "result", result ) ; try { sendBroadcast ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; try { msg.text = json.getString ( "text" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return msg; } 
public void testErrorMessageFromErrorNotContainsStacktraceInProdMode () throws java.lang.Exception { try { open ( "/auratest/errorHandlingApp.app", Mode.PROD ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } findDomElement ( org.openqa.selenium.By.cssSelector ( ".errorFromAppTable .errorFromClientControllerButton" ) ) .click () ; assertDisplayedErrorMessage ( "Error from app client controller" ) ; } 
@ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot == null ) { return null; } try { setInventorySlotContents ( index, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return stackInSlot; } 
public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng, java.lang.String currentAddress ) { try { if ( ( map ) != null ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom ( latLng, com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map.animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateLocalVideoPosition ( long position ) { try { exoPlayer.seekTo ( position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void surChangementDeDonnees ( java.util.List<com.pam.codenamehippie.modele.UtilisateurModele> modeles ) { try { if ( ( modeles != null ) && ( ( modeles.size () ) != 0 ) ) { this.modele = modeles.get ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setEnabled ( boolean enabled ) { this.enabled = enabled; try { invalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStartLoading () { try { forceLoad () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( ( listener_ ) != null ) { listener_.onBlurStateChanged ( state ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void verifyEqualityConstraintsHold ( int numberOfEqualityConstraints, org.ejml.data.DenseMatrix64F linearEqualityConstraintsAMatrix, org.ejml.data.DenseMatrix64F linearEqualityConstraintsBVector, org.ejml.data.DenseMatrix64F solutionMatrix ) { double maxAbsoluteError = getMaxEqualityConstraintError ( numberOfEqualityConstraints, linearEqualityConstraintsAMatrix, linearEqualityConstraintsBVector, solutionMatrix ) ; try { assertEquals ( 0.0, maxAbsoluteError, 1.0E-5 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.Date getDate () { java.util.Calendar calendar = new java.util.GregorianCalendar ( year, ( ( month ) - 1 ) , dayOfMonth, hourOfDay, minute, second ) ; try { calendar.set ( java.util.Calendar.MILLISECOND, millisecond ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return calendar.getTime () ; } 
public void onMouseOver ( com.google.gwt.event.dom.client.MouseOverEvent event ) { geogebra.common.euclidian.event.AbstractEvent e = geogebra.web.euclidian.event.MouseEvent.wrapEvent ( event.getNativeEvent () ) ; try { wrapMouseEntered () ; } catch ( Exception ex ) { ex.printStackTrace () ; } e.release () ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item.getItemId () ; try { switch ( id ) { case R.id.add: { setDate () ; } break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public korat.finitization.IFieldDomain createObjSet ( korat.finitization.IClassDomain classDomain, boolean includeNull ) { korat.finitization.IObjSet ret = createObjSet ( classDomain.getClassOfObjects () ) ; ret.addClassDomain ( classDomain ) ; try { ret.setNullAllowed ( includeNull ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ret; } 
@ java.lang.Override public void notifyNewMember ( se.umu.cs.dist.ht15.dali_ens15bsf.groupmanagement.RemoteMember member, java.lang.String groupID ) { try { join ( member, groupID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/order/{orderId}" ) public java.lang.String orderDetail ( @org.springframework.web.bind.annotation.PathVariable java.lang.Long orderId, org.springframework.ui.ModelMap model ) { try { model.addAttribute ( "order", this.orderService.getOrder ( orderId ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "orderDetail"; } 
private void cancelAlarmManager () { try { android.util.Log.i ( com.example.sifat.gobar.LOG_TAG_TAXIPOSITIONSERVICE, "cancelAlarmManager" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } alarmManager.cancel ( pendingIntent ) ; } 
public void updateEverything ( float curTime ) { try { updateTimes ( curTime ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onChanged () { try { if ( ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem ) != null ) { com.example.terz99.digitalmenuv2.MyOrderActivity.totalPrice -= ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem.getmPrice () ) * ( ( double ) ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem.getmQuantity () ) ) ; com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem = null; setTotalPrice () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
static void draw ( int cards ) { try { for ( int i = 0; i < cards; i++ ) { stats.Deck.HAND.add ( stats.Deck.DECK.remove ( 0 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { try { super.onSaveInstanceState ( outState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private javafx.scene.control.Label createCountdownLabel () { javafx.scene.control.Label countDown = new javafx.scene.control.Label () ; try { countDown.setId ( "countDownLable" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return countDown; } 
public void onFinish () { try { if ( ( game.getNumberOfCompletedTricks () ) >= 10 ) { gameFragment.winnerHighlightToggle ( ( ( game.getTrickWinnerLocation () ) + 1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { Person person1 = new Person ( "Kari" ) ; Hus hus1 = new Hus () ; try { person1.setHus ( hus1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } hus1.setEier ( person1 ) ; } 
public void setManageConnectionsWarn ( java.lang.String manageConnectionsWarn ) { this.manageConnectionsWarn = manageConnectionsWarn; try { loginDialog.setWarnMessage ( manageConnectionsWarn, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public final void onNext ( java.util.List<com.hansjin.mukja_android.Model.Food> response ) { try { if ( response != null ) { uiThread_Search ( response ) ; } else { android.widget.Toast.makeText ( getActivity () , "검색 결과가 없습니다", Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean destroyGame ( final int gameID ) { gameList.get ( gameID ) .stop () ; try { gameList.set ( gameID, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public amagi82.modularcharactersheetcreator.entities.characters.Splat getSplat ( int position ) { amagi82.modularcharactersheetcreator.entities.characters.Splat splat = axisViewModel.getList () .get ( position ) .getSplat () ; try { updateIfNotEndpoint ( splat ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return splat; } 
@ java.lang.Override public java.lang.Boolean apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { try { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter.replaceRecentRangeWithPage ( update.deleteRangeStart, update.deleteRangeEnd, update.page ) ; } else { bookmarksDBAdapter.addRecentPage ( update.page ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ org.junit.Test public void setupMenu () { presenter.setupMenu () ; try { org.mockito.Mockito.verify ( mainView, org.mockito.Mockito.times ( 1 ) ) .setup () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setup () throws java.lang.Exception { try { this.mockMvc = org.springframework.test.web.servlet.setup.MockMvcBuilders.webAppContextSetup ( webApplicationContext ) .build () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onGetStarted ( android.view.View view ) { android.content.Intent getStarted = new android.content.Intent ( this, com.example.corneeldenhartogh.corneel_pset2.FillWords.class ) ; getStarted.putExtra ( "callingFillWords", getString ( R.string.instruction_filler ) ) ; try { startActivity ( getStarted ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailure ( int statusCode, org.apache.http.Header[] headers, byte[] responseBody, java.lang.Throwable error ) { try { if ( responseBody != null ) { android.util.Log.d ( "ERREUR", new java.lang.String ( responseBody ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { super.onResume () ; try { fragment.fav.attachChatUsersDb () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void add ( uk.co.amlcurran.queues.core.QueueItem queueItem ) { try { queueSource.add ( queueItem ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int position = java.lang.Math.max ( 0, ( ( queueSource.size () ) - 1 ) ) ; notifyItemInserted ( position ) ; } 
public static void main ( java.lang.String[] args ) { ca.thoughtwire.lock.HazelcastLockIT instance = new ca.thoughtwire.lock.HazelcastLockIT ( args[0] ) ; try { instance.test () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void playHand () { int handId = ( rand.nextInt ( 3 ) ) + 1; int handError = setHandFromId ( handId ) ; try { if ( handError != 0 ) { java.lang.System.out.println ( "This should be an exception!" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void onPause () { try { releaseMediaPlayer ( mediaPlayer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onPause () ; } 
@ java.lang.Override public void detachView () { mView = null; try { if ( ( ( subscription ) != null ) && ( ! ( subscription.isUnsubscribed () ) ) ) { subscription.unsubscribe () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemSelected ( com.jaredrummler.materialspinner.MaterialSpinner view, int position, long id, java.lang.String item ) { chosenDollar = item; position = position; try { callBack.updateUSD ( chosenDollar, rateData.get ( position ) .getRate () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testIrisDataFetcher () throws java.lang.Exception { org.deeplearning4j.base.MnistFetcher mnistFetcher = new org.deeplearning4j.base.MnistFetcher () ; java.io.File mnistDir = mnistFetcher.downloadAndUntar () ; try { assert mnistDir.isDirectory () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess () { try { callback.run () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { try { if ( e == null ) { gs.saveProfilePicToParse ( prepareProfilePicForSaving () ) ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML private void buttonCE ( javafx.event.ActionEvent event ) { inputText = ""; try { textFieldResults.setText ( "0" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean setSpaces ( java.util.LinkedList<java.lang.Short> zeSpace ) { try { if ( spacesToOccupy.isEmpty () ) { for ( java.lang.Short zeShort : zeSpace ) { spacesToOccupy.add ( zeShort ) ; } return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void initialisePresenter () { try { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity.getLastCustomNonConfigurationInstance () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( presenter ) == null ) { presenter = createPresenter () ; } } 
void runDiagnostics () { if ( ( this.errors ) == null ) { this.errors = new java.util.ArrayList<> () ; } validateContentPath () ; try { generateStatus () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { mShareNotSave = false; try { startBackup () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startGame () { try { if ( ( game.getState () ) == ( es.ucm.fdi.tp.basecode.bgame.model.Game.State.Starting ) ) super.start () ; else restart () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void writeEntityToNBT ( net.minecraft.nbt.NBTTagCompound nbt ) { try { super.writeEntityToNBT ( nbt ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void arcadeDrive ( double drivePower, double turnPower ) { try { arcadeDrive ( drivePower, turnPower, false, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStartView () { try { timber.log.Timber.d ( "onStartView" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void msg ( long time ) { try { msgs.add ( new tterrag.tppibot.reactions.FloodSpam.MessageCount.Message ( time ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void credentialsProvider () { java.lang.String IDENTITY_POOL = ""; com.amazonaws.auth.CognitoCachingCredentialsProvider credentialsProvider = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL, com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; try { setAmazonClient ( credentialsProvider ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBackPressed () { try { audioBackground.stop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.finish () ; java.lang.System.exit ( 0 ) ; } 
@ org.springframework.beans.factory.annotation.Autowired public void configureGlobal ( org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder auth ) throws java.lang.Exception { try { auth.jdbcAuthentication () .dataSource ( dataSource ) .usersByUsernameQuery ( getUserQuery () ) .authoritiesByUsernameQuery ( getAuthoritiesQuery () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { publishMessage ( entry.getValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity, java.lang.String query ) { try { this.fetchImages ( activity, query, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailure ( okhttp3.Call call, java.io.IOException e ) { try { e.printStackTrace () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setImageResource ( @android.support.annotation.DrawableRes int resId ) { try { super.setImageResource ( resId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mImageHelper ) != null ) { mImageHelper.setImageResource ( resId ) ; } } 
public void windowClosing ( java.awt.event.WindowEvent e ) { if ( ( ( repo ) != null ) && ( repo.exists () ) ) repo.close () ; try { java.lang.System.exit ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void save () { entry.setContent ( textArea.getText () ) ; try { entry.save () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( android.net.Uri uri ) { try { com.squareup.picasso.Picasso.with ( this ) .load ( uri ) .fit () .centerCrop () .into ( profileIcon ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addProfile ( java.lang.String id, io.hijynx.ensemble.ProviderProfile profile ) { try { categoryList.put ( id, profile ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void clear () { try { cells.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; try { selectCartaoExcluir.setVisible ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { try { db.execSQL ( DATABASE_CREATE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public de.thm.ap.openfit.model.sugarORM.records.SubActivity add ( de.thm.ap.openfit.model.IValue value ) { try { value.setSubActivity ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } values.add ( ( ( de.thm.ap.openfit.model.sugarORM.records.Value ) ( value ) ) ) ; return this; } 
public static void main ( java.lang.String[] args ) { version_3.TakenNames tn = new version_3.TakenNames ( 100 ) ; try { tn.check () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.exit ( 0 ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; mUm = ( ( android.os.UserManager ) ( getSystemService ( Context.USER_SERVICE ) ) ) ; try { setHasOptionsMenu ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testForceCompleteFromPending () { try { assertTrue ( block.isPending () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } block.forceComplete () ; when ( mockReconciler.isReconciled () ) .thenReturn ( true ) ; assertTrue ( block.isComplete () ) ; } 
public boolean stillToDo () { if ( ! ( isThereAvailableMove () ) ) return true; try { if ( isThereNothing () ) { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { com.letslunch.agileteam8.letslunch.homePage.eatingStatus userStatus = com.letslunch.agileteam8.letslunch.homePage.eatingStatus.BRING_LUNCH; try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } userResponseToEating ( userStatus.toString () ) ; } 
public void addEntries ( interQA.lexicon.Lexicon lexicon, interQA.lexicon.LexicalEntry.POS pos, java.lang.String frame ) { try { addEntries ( lexicon, pos, frame, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean push ( java.lang.String data ) { try { if ( isIn ( data ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } AntiMessDao.Datenbank.add ( data ) ; return true; } 
public void stop () { try { if ( this.started.get () ) { started.set ( false ) ; mixer.cancel () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( isFireHeldDown ) { shootLaser () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<ru.javawebinar.topjava.to.MealWithExceed> getByDate ( int userId, java.time.LocalDateTime start, java.time.LocalDateTime end ) { try { ru.javawebinar.topjava.web.meal.MealRestController.LOG.info ( "getAllByDateTime" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ru.javawebinar.topjava.util.MealsUtil.getWithExceeded ( service.getByDate ( userId, start, end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } 
@ java.lang.Override public void filter ( java.lang.CharSequence s ) { try { if ( ( ( mAdapter ) != null ) && ( ( mAdapter.getFilter () ) != null ) ) { mAdapter.getFilter () .filter ( s ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player playsFirst, nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { super.setPlayerAtPos ( playsFirst, 28 ) ; super.setPlayerAtPos ( otherPlayer, 27 ) ; try { super.setPlayerAtPos ( playsFirst, 35 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.setPlayerAtPos ( otherPlayer, 36 ) ; } 
private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt, net.minecraft.world.World world ) { nbt.setBoolean ( "found", false ) ; try { nbt.setLong ( "searchStarted", world.getWorldTime () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } nbt.removeTag ( "posX" ) ; nbt.removeTag ( "posZ" ) ; } 
@ java.lang.Override public void onPause () { super.onPause () ; try { ( ( T ) ( this ) ) .doOnPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } new edu.uw.scout.utils.UserPreferences ( getApplicationContext () ) ; edu.uw.scout.Scout.instance = this; sessionManager = new edu.uw.scout.services.TurbolinksSessionManager () ; userPreferences = new edu.uw.scout.utils.UserPreferences ( this ) ; } 
public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { try { if ( ( ! ( readOnlyDataCacheAvailable ) ) && useReadOnlyDataCache ) { exc.openacc.ACC.warning ( "Read-only data cache is unavailable" ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.useReadOnlyDataCache = useReadOnlyDataCache; } 
public static gluu.scim2.client.ScimClient getClient ( java.lang.String domain, java.lang.String umaMetaDataUrl, java.lang.String umaAatClientId, java.lang.String umaAatClientJksPath, java.lang.String umaAatClientJksPassword, java.lang.String umaAatClientKeyId ) { try { org.xdi.oxauth.model.util.SecurityProviderUtility.installBCProvider () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new gluu.scim2.client.UmaScimClient ( domain, umaAatClientId, umaAatClientJksPath, umaAatClientJksPassword, umaAatClientKeyId ) ; } 
@ org.junit.Test @junitparams.Parameters public void testReplaceFileNamePatternsWithSuffix ( java.lang.String filename, java.lang.String template, java.lang.String expected ) { java.lang.String result = de.austinpadernale.core.utils.ReplacementPatternProcessorTest.replacementPatternProcessor.replaceFileNameAndDateTimePatterns ( filename, template ) ; try { org.junit.Assert.assertEquals ( expected, result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { setCanMove ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void mouseDown ( java.awt.event.MouseEvent e ) { try { if ( ( e.getButton () ) == ( java.awt.event.MouseEvent.BUTTON2 ) ) { beginPanning ( getMouseX () , getMouseY () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int showDominatingSet () { java.util.Set<no.uib.ii.algo.st8.start.UnVertex> domset = no.uib.ii.algo.st8.algorithms.ExactDominatingSet.exactDominatingSet ( graph.getGraph () ) ; clearAll () ; try { markedVertices.addAll ( domset ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } redraw () ; return domset.size () ; } 
public void valueChanged ( javax.swing.event.ListSelectionEvent arg0 ) { try { setWebsiteDetails ( processedWebsites.get ( urlList.getSelectedIndex () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String getRandomValue () { java.lang.StringBuilder stringBuilder = new java.lang.StringBuilder () ; try { for ( int i = 0; i < ( length ) ; i++ ) { stringBuilder.append ( characterRandomizer.getRandomValue () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return stringBuilder.toString () ; } 
@ org.junit.Test public void testIsEmpty () { try { assertTrue ( fact.isEmpty ( "" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public byte[] asBytes () throws java.io.IOException { try { if ( ( responseAsBytes ) == null ) { consume () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return responseAsBytes; } 
public void removeDataCenter ( java.lang.String dcName ) { try { com.emc.storageos.management.jmx.recovery.DbManagerOps.log.info ( "Removing Cassandra nodes for {}", dcName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mbean.removeDataCenter ( dcName, false ) ; } 
public void setFuel ( java.lang.String fuel ) throws com.cardealer.model.InvalidLenghtException { try { if ( ( fuel.length () ) <= ( com.cardealer.model.Car.MAX_LENGTH_10 ) ) { this.fuel = fuel; } else { throw new com.cardealer.model.InvalidLenghtException ( "fuel" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startReadRequest () { currentReadRequest = java.lang.System.currentTimeMillis () ; try { android.util.Log.i ( net.fishandwhistle.openpos.BarcodeReaderActivity.TAG, ( "Launching read request " + ( currentReadRequest ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } enableScanning = true; } 
@ java.lang.Override public java.lang.Object put ( java.lang.String key, java.lang.Object value ) { java.lang.Object before; try { synchronized ( varFileConfig ) { before = varFileConfig.get ( key ) ; varFileConfig.set ( key, value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return before; } 
private void toggleProgressBar ( boolean isShow ) { try { if ( ( ( progressDialog ) != null ) && isShow ) { progressDialog.show () ; } else { if ( ( progressDialog ) != null ) { progressDialog.dismiss () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testSnakeDestruction () { try { game.executeCommand ( new GameCommands.ChangeSnakeVelocityCommand ( Utils.VelocityVector.down ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } game.update () ; game.update () ; assertTrue ( game.snake.getIsDestructed () ) ; } 
@ java.lang.Override public cw3.ReturnObject head () { try { if ( isEmpty () ) { return new cw3.ReturnObjectImpl ( ErrorMessage.EMPTY_STRUCTURE ) ; } else { return this.get ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { metronome.stop () ; metronome = null; try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.i ( com.example.vitalykulyk.metronom.MetronomService.TAG, "Service onDestroy" ) ; } 
public static long checkFileIdCompatibility ( int storageId, long fileId ) { try { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache.extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache.composeFileId ( storageId, ( ( int ) ( fileId ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return fileId; } 
@ java.lang.Override protected void doPaint ( java.awt.Graphics g ) { try { drawMapElements ( g ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } drawBuildings ( g ) ; drawOtherTrainers ( g ) ; drawTrainer ( g ) ; } 
@ java.lang.Override public void resetParametersToInitialValues () { try { super.resetParametersToInitialValues () ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < ( effects.size ) ; i++ ) { effects.get ( i ) .resetParametersToInitialValues () ; } } 
protected boolean newTeam ( java.lang.String name ) { try { if ( ! ( isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db.standardQuery ( ( ( "CREATE TABLE " + name ) + " ( player VARCHAR ( 20 ) , leader TINYINT ) ;" ) ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { try { mNetworkService.downloadImage ( msg.what ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void addCluster ( long cluster ) { try { clusterList.add ( cluster ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle bundle ) { save () ; try { super.onSaveInstanceState ( bundle ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addSequence () { try { seq[length] = RandomColor () ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( length ) ++; } 
public static void main ( java.lang.String[] args ) { try { com.pb.SpringApplication.run ( com.pb.Application.class, args ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testLoadView () { try { viewController.loadView ( "test", mockHomeView, mockHomePresenter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.mockito.Mockito.verify ( mockHomePresenter, org.mockito.Mockito.times ( 1 ) ) .setViewParent ( org.mockito.ArgumentMatchers.any ( ch.imedias.rsccfx.ViewController.class ) ) ; } 
@ java.lang.Override protected void onCreate ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setSplashLayout () ; NavigationApplication.instance.startReactContext () ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { saveCoords () ; try { dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.exist.xquery.value.Sequence postEval ( org.exist.xquery.value.Sequence seq ) throws org.exist.xquery.XPathException { try { if ( ( returnExpr ) instanceof org.exist.xquery.FLWORClause ) { seq = ( ( org.exist.xquery.FLWORClause ) ( returnExpr ) ) .postEval ( seq ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.postEval ( seq ) ; } 
@ org.junit.Before public void setUp () { conf = new org.apache.hadoop.conf.Configuration () ; try { conf.set ( "fs.my.impl", org.apache.sqoop.util.TestFileSystemUtil.MyFileSystem.class.getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void setSystemVersion ( java.lang.String systemVersion ) { com.cisco.oss.foundation.systemversion.SystemVersionFactory.SYSTEM_VERSION_THREAD_LOCAL.set ( systemVersion ) ; try { if ( systemVersion != null ) { org.slf4j.MDC.put ( "systemVersion", systemVersion ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String lastCheckInTime () { try { if ( ( this.getLast_check_in_time () ) == 0 ) { return "从未签到"; } } catch ( Exception ex ) { ex.printStackTrace () ; } return com.blade.kit.DateKit.formatDateByUnixTime ( this.getLast_check_in_time () , "yyyy-MM-dd HH:mm:ss" ) ; } 
@ java.lang.Override public void eventOccurred ( com.mathworks.matlab.api.editor.EditorEvent editorEvent ) { try { if ( ( editorEvent == ( com.mathworks.matlab.api.editor.EditorEvent.ACTIVATED ) ) && ( at.justin.matlab.util.Settings.getPropertyBoolean ( "autoDetailViewer" ) ) ) { at.justin.matlab.autoDetailViewer.AutoDetailViewer.doYourThing () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public nl.mawoo.wcmscript.modules.excel.ExcelExport save ( java.lang.String filename ) throws java.io.IOException { java.io.FileOutputStream outputStream = new java.io.FileOutputStream ( new java.io.File ( filename ) ) ; try { workbook.write ( outputStream ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } outputStream.close () ; workbook.close () ; return this; } 
@ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { try { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment.newInstance ( comment.getId () ) .show ( getChildFragmentManager () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static double CrossValidateKFold ( int testType, java.util.List<Mail> mails, int folds ) throws java.lang.Exception { java.lang.System.out.println ( "===Cross Validate K-Fold===" ) ; try { java.util.Collections.shuffle ( mails ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ModelValidations.KFoldTest ( testType, mails, folds ) ; } 
@ java.lang.Override public void updateModelStateToView () { m2vSetRadius () ; m2vSetEfficiency () ; m2vSetAirDensity () ; m2vSetCostPerUnit () ; m2vSetLocation () ; m2vSetNumberOfPanels () ; try { item.getTable () .layout () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onChanged () { removed = 0; mItemPositions.clear () ; try { super.onChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testCreate () throws java.lang.Exception { openstackKeyPairService.create ( "name" ) ; try { verify ( openstackKeyPairClient ) .create ( "name" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } verify ( keyPairConverter ) .apply ( keyPair ) ; } 
@ java.lang.Override public void onSuccess ( com.lithiumsheep.weatherwrapper.models.CurrentWeather currentWeather ) { android.widget.Toast.makeText ( this, "Success!", Toast.LENGTH_SHORT ) .show () ; try { setText ( false, currentWeather ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } savedInstance = new android.os.Bundle () ; onSaveInstanceState ( savedInstance ) ; handler.removeCallbacks ( toggleInputMode ) ; } 
public void sendVboData () { try { verticesVbo.sendDataAutoBind () ; } catch ( Exception ex ) { ex.printStackTrace () ; } colorsVbo.sendDataAutoBind () ; if ( indexed ) { indicesVbo.sendDataAutoBind () ; } if ( ( normalsVbo ) != null ) { normalsVbo.sendDataAutoBind () ; } } 
@ java.lang.Override public void addTransformer ( github.therealbuggy.configurator.transformer.Transformer<?> transformer ) { try { if ( ! ( transformers.contains ( transformer ) ) ) transformers.add ( transformer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected com.eswaraj.web.dto.DepartmentDto createDepartment ( java.lang.String categoryName, java.lang.String description, java.lang.Long categoryId ) { com.eswaraj.web.dto.DepartmentDto departmentDto = new com.eswaraj.web.dto.DepartmentDto () ; departmentDto.setName ( categoryName ) ; try { departmentDto.setDescription ( description ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return departmentDto; } 
public void persist () throws java.lang.Exception { removeDeletedSections () ; removeTemplateSection () ; createSectionDefinitionsForNewSections () ; if ( createNew ) { duplicateExistingPlanTemplate () ; } else { } try { addSectionsToProposalTemplate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } updatePlanTemplateTitle () ; } 
static void updateHeldBook ( net.minecraft.server.v1_11_R1.PlayerInventory inventory ) { inventory.setItem ( inventory.itemInHandIndex, new net.minecraft.server.v1_11_R1.ItemStack ( iieWelcomeKit.Book.setTag ( inventory.getItem ( inventory.itemInHandIndex ) .save ( new net.minecraft.server.v1_11_R1.NBTTagCompound () ) ) ) ) ; try { inventory.update () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { super.onDestroy () ; android.app.NotificationManager nManager = ( ( android.app.NotificationManager ) ( getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; nManager.cancel ( 1 ) ; me.johannesnz.smsim.Main.sendMessage ( "DC" ) ; try { me.johannesnz.smsim.Main.sender.detachDuplexOutputChannel () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void clearCertificateErrorNotifications ( com.fsck.k9.activity.setup.CheckDirection direction ) { final com.fsck.k9.controller.MessagingController ctrl = com.fsck.k9.controller.MessagingController.getInstance ( context ) ; try { ctrl.clearCertificateErrorNotifications ( account, direction ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.google.gwt.dev.resource.impl.PathPrefixSet createInclusivePathPrefixSet () { pathPrefixes = new com.google.gwt.dev.resource.impl.PathPrefixSet () ; try { pathPrefixes.add ( new com.google.gwt.dev.resource.impl.PathPrefix ( "", null ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return pathPrefixes; } 
@ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { try { super.channelUnlinked ( channelUID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void pause () { try { if ( ( exoPlayer ) != null ) { exoPlayer.setPlayWhenReady ( false ) ; } else if ( ( mediaPlayer ) != null ) { mediaPlayer.pause () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { java.lang.String numberString = org.opencps.backend.util.DossierNoGenerator.genaratorNoReception ( "{yyyy}{dd}{mm}{%-ABC1111/%}{nnnnnnnnnnnnnnnn}", 1 ) ; try { java.lang.System.out.println ( numberString ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getName () { try { if ( ( ( names ) != null ) && ( ( names.size () ) > 0 ) ) return names.get ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void refresh ( android.app.Activity activity ) { mActivity = activity; try { new net.skweez.sipgate.model.AccountInfo.RefreshAccountInfoTask () .execute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static int packageDepth ( java.lang.String pkgName ) { int cnt = 0; int i = 0; try { while ( ( i = pkgName.indexOf ( ".", i ) ) == ( -1 ) ) { cnt++; } } catch ( Exception ex ) { ex.printStackTrace () ; } return cnt; } 
@ org.junit.Test public void testExportWords () throws java.lang.Exception { try { java.lang.System.out.println ( "exportWords" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List<com.dth.entity.WordOccurrence> words = null; com.dth.service.transfer.XmlExportWords instance = null; instance.exportWords ( words ) ; } 
@ org.junit.Test public void recordFloat () throws java.lang.Exception { float f = 5.5F; try { assertThat ( hu.advancedweb.scott.helper.TestHelper.getLastRecordedStateFor ( "f" ) , org.hamcrest.CoreMatchers.equalTo ( java.lang.Float.toString ( f ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { try { if ( adapter instanceof fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ) { super.setAdapter ( adapter ) ; } else { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter, getContext () ) ; super.setAdapter ( hintAdapter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onNewIntent ( android.content.Intent intent ) { try { super.onNewIntent ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML private void btnDeny_Click ( javafx.event.ActionEvent event ) { try { if ( ( selectedIncident ) != null ) { database.DatabaseManager.denyIncident ( selectedIncident.getType () , selectedIncident.getLocation () ) ; instance.deleteIncident ( selectedIncident ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onDrawerClosed ( android.view.View view ) { try { super.onDrawerClosed ( view ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getSupportActionBar () .setTitle ( user.getDisplayName () ) ; } 
@ java.lang.Override public void setAdapter ( android.widget.Adapter adapter ) { mAdapter = adapter; try { requestLayout () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testOOM_508254 () throws java.lang.Exception { org.eclipse.cdt.core.parser.tests.ast2.BindingAssertionHelper helper = getAssertionHelper () ; try { helper.findName ( "waldo" ) .resolveBinding () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { agreedCalling = true; startRecorderVideo () ; startPlayerVideo () ; try { playRingtone ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addProblematicKanjis ( java.util.Set<java.lang.Integer> problematicKanjiList ) { problematicKanjis = problematicKanjiList; try { parent.updateProblematicKanjisAmount () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.content.DialogInterface dialog, int which ) { try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } getFragmentManager () .popBackStack () ; } 
@ java.lang.Override public void onSessionDown ( final org.opendaylight.protocol.bgp.rib.spi.BGPSession session, final java.lang.Exception e ) { try { org.opendaylight.protocol.bgp.rib.impl.SimpleSessionListener.LOG.debug ( "Session Down", e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailure ( final java.lang.Throwable caught ) { try { org.eclipse.kura.web.client.ui.EntryClassUi.hideWaitModal () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.eclipse.kura.web.client.util.FailureHandler.handle ( caught ) ; } 
@ org.junit.Test public void testFindInvalidArrAirpDirectFlights () throws java.sql.SQLException { try { assertTrue ( "This flight should not have existsed", ( ( com.FlightSearch.Tests.DatabaseInteractionTest.di.findDirectFlights ( com.FlightSearch.Tests.DatabaseInteractionTest.validDepDate, com.FlightSearch.Tests.DatabaseInteractionTest.validDepAirpCode, com.FlightSearch.Tests.DatabaseInteractionTest.invalidAirpCode, com.FlightSearch.Tests.DatabaseInteractionTest.validPrice, false ) .size () ) == 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void clear () { dataList.clear () ; stringDataList.clear () ; if ( ( filteredData ) != null ) filteredData.clear () ; try { com.adsamcik.signalcollector.adapters.FilterableAdapter.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void close () { try { if ( ( tx ) != null ) { cursor.close () ; tx.commit () ; } else { cursor.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { try { if ( ( currentRecordingState ) != ( com.github.stevewhit.mouserecorder.ui.MouseRecorderGUI.RecordingStates.Disable ) ) { setRecordingState ( com.github.stevewhit.mouserecorder.ui.MouseRecorderGUI.RecordingStates.Disable ) ; setPlaybackState ( com.github.stevewhit.mouserecorder.ui.MouseRecorderGUI.PlaybackStates.Enable ) ; } else { setPlaybackState ( com.github.stevewhit.mouserecorder.ui.MouseRecorderGUI.PlaybackStates.Disable ) ; setRecordingState ( com.github.stevewhit.mouserecorder.ui.MouseRecorderGUI.RecordingStates.Enable ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setChestAngularControlOnly () { double[] controlledPositionAxes = new double[] { 0.0, 0.0, 0.0 }; double[] controlledOrientationAxes = new double[] { 1.0, 1.0, 1.0 }; try { setChestControlledAxes ( controlledPositionAxes, controlledOrientationAxes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () { p = new edu.chl.LifeOfAGoblin.model.profile.Profile ( "Test" ) ; try { mockP = org.mockito.Mockito.mock ( edu.chl.LifeOfAGoblin.model.profile.Profile.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void fillForm ( java.lang.String xss_text ) { org.openqa.selenium.JavascriptExecutor js = ( ( org.openqa.selenium.JavascriptExecutor ) ( getWebDriver () ) ) ; java.lang.String fillFormScript = FILL_FORM_SCRIPT.replaceAll ( TEXT_TO_REPLACE, xss_text ) ; try { js.executeScript ( fillFormScript ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { try { stored.add ( store.getTarget () .getVariable () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return com.synflow.models.util.SwitchUtil.DONE; } 
public void stopContainerLogReaderById ( java.lang.String containerId ) { log.ContainerLogReader logReaderToRemove = runningContainerMap.remove ( containerId ) ; try { if ( logReaderToRemove != null ) { logReaderToRemove.stop () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void startWrittenTestMenuItemAction () { try { if ( ( mainView.getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView.getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String getInput () { try { java.lang.System.out.println ( "Please Enter An Input Below:" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Menu.scan = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String input = Menu.scan.nextLine () .replaceAll ( "\\s+", "" ) ; return input; } 
public void onFinish () { scrollTo ( 0, 0 ) ; try { field.requestFocus () ; } catch ( Exception ex ) { ex.printStackTrace () ; } scrolling = false; } 
@ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationRepeat ( android.animation.Animator animator ) { try { if ( ! ( repeated ) ) { current_instance.setText ( com.example.cesarsk.say_it.Utility.getRandomWord ( ( ( android.app.Activity ) ( current_instance.getContext () ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } repeated = ! ( repeated ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( v == ( buttonAddPatient ) ) { android.content.Intent intent = new android.content.Intent ( this, com.example.aa.electronicpatientscard.AddPatient.class ) ; startActivity ( intent ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setAsInner ( com.badlogic.gdx.utils.Array<com.esbjon.entities.Entity> addedEntities, com.badlogic.gdx.utils.Array<com.esbjon.mapobjects.Tile> addedTiles ) { ( vicinityCount ) ++; this.passOnEntity ( addedEntities ) ; try { addedTiles.add ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void handleUpRequest ( se.dexica.FloorRequest newRequest ) { java.lang.System.out.println ( "Handling up request" ) ; try { if ( onWayToDestination ( newRequest ) ) { upPath.add ( destination ) ; destination = newRequest; } else { upPath.add ( newRequest ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } sortUpPath () ; } 
private void jBtnAddTournamentActionPerformed () { model.NewTournamentDialog ntd = new model.NewTournamentDialog ( this ) ; try { ntd.setLocationRelativeTo ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ntd.setVisible ( true ) ; this.toFront () ; ntd.toFront () ; } 
final boolean hasValidValueCount () { try { if ( ( this.expectedValueCount ) < 0 ) { return true; } else { return ( this.expectedValueCount ) == ( this.valueCount.get () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.itextpdf.kernel.pdf.PdfCatalog setCollection ( com.itextpdf.kernel.pdf.collection.PdfCollection collection ) { try { put ( PdfName.Collection, collection.getPdfObject () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
public void onClick ( android.content.DialogInterface dialog, int whichButton ) { try { data.set ( 3, input.getText () .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } desc0 = input.getText () .toString () ; } 
public static void main ( java.lang.String[] args ) throws java.lang.InterruptedException { Client.Client client = new Client.Client () ; try { client.connect () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void sendMessage ( java.lang.String message ) { try { if ( ( _ws ) != null ) { _ws.send ( message ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void dispose ( io.reactivex.disposables.Disposable disposable ) { try { if ( ( disposable != null ) && ( ! ( disposable.isDisposed () ) ) ) { disposable.dispose () ; disposable = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public final void playTest () { try { snd.play () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertTrue ( snd.isPlaying () ) ; } 
private static void setEmailLastSentDate ( keepinchecker.database.entity.User user ) throws java.lang.Exception { try { user.setEmailLastSentDate ( new java.util.Date () .getTime () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } keepinchecker.utility.EmailUtilities.userManager.saveUser ( user ) ; } 
@ java.lang.Override public void onStop () { ensureStop () ; try { if ( registered ) { context.unregisterReceiver ( myNoisyAudioStreamReceiver ) ; registered = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { try { for ( com.td.core.ui.ICanvas canvas : canvases ) { canvas.dispatchEvent ( EventType.KEY_PRESSED, e ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void registerSave () { try { if ( ! ( undoStack.isEmpty () ) ) savedAtAction = undoStack.peek () ; else savedAtAction = null; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static synchronized void stopVibrate () { try { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log.d ( org.catrobat.catroid.utils.VibratorUtil.TAG, "stopVibrate () " ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator.cancel () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void destruct () throws java.sql.SQLException { try { for ( java.sql.Connection c : connections ) { c.commit () ; c.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getDescription () { try { if ( ( ( description ) == null ) || ( description.trim () .isEmpty () ) ) return null; else return description.trim () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { if ( ( mWebView ) == null ) { return; } try { mWebView.loadUrl ( url ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void modifyText ( org.eclipse.swt.events.ModifyEvent e ) { try { getContainer () .updateButtons () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/lectures", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String getClasses ( org.springframework.ui.Model model, javax.servlet.http.HttpServletRequest request ) { try { if ( canCreate ( request ) ) model.addAttribute ( "canCreate", true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } model.addAttribute ( "lecture", new it.unical.classmanager.model.data.Lecture () ) ; return getLectures ( model, request ) ; } 
@ java.lang.Override public void showBottomSheet ( com.cloudcontact.cloudcontact.Parse.ParseRow parseRow ) { try { if ( ( ( bottomSheet ) == null ) || ( ! ( bottomSheet.isShowing () ) ) ) { bottomSheet = new com.cloudcontact.cloudcontact.BottomSheet.BottomSheet ( this, parseRow ) ; bottomSheet.show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setBold () { try { buttonShape.setFill ( javafx.scene.paint.Color.DARKGRAY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setPrice ( java.math.BigDecimal price ) { try { this.price = price.setScale ( 2, java.math.RoundingMode.CEILING ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onStart () { try { super.onStart () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { java.lang.System.out.println ( "Running ..." ) ; try { while ( true ) { cm.run () ; if ( isMaster ) { } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( java.util.List<?> data ) { try { view.appendStories ( data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void reloadBMSFile () { try { if ( ( model ) != null ) { java.io.File f = new java.io.File ( model.getPath () ) ; model = loadBMSModel ( f ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } clear () ; } 
@ java.lang.Override public void draw ( java.awt.Graphics2D g ) { try { g.drawImage ( images[type], getRotation () , x, y ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ Test.Network.Test public void agricolaShouldHaveNumPlays0 () { int numPlays; Main.Containers.Boardgame game = games.get ( 0 ) ; try { numPlays = game.getNumberOfPlays () ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( 0, numPlays ) ; } 
@ java.lang.Override public void call () { try { mIsError.set ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setExpandedState ( boolean isExpanded, boolean animate ) { com.wnafee.vector.MorphButton.MorphState indicatorState = ( isExpanded ) ? MorphButton.MorphState.START : MorphButton.MorphState.END; try { if ( ( mMorphButton.getState () ) != indicatorState ) { mMorphButton.setState ( indicatorState, animate ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void tick () { try { if ( ( ! ( minicraft.Game.isValidClient () ) ) && ( ( t ) != null ) ) t.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void strafeLeft () { try { sendVels ( ( -1 ) , 2, 1, ( -2 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private Contact getContact ( java.lang.String name ) { try { for ( Contact contact : contacts.values () ) { if ( contact.getName () .equals ( name ) ) { return contact; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return new Contact () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { doodleView.setPenColor ( tempColor ) ; try { doodleView.setPenWidth ( tempProgress ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } selectDialog.dismiss () ; } 
@ java.lang.Override public void run () { try { listenForDevices ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void closeWifiAp () { try { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void loadProblemsForCourse ( final org.cloudcoder.app.shared.model.CourseSelection courseSelection ) { try { com.google.gwt.core.client.GWT.log ( ( "Loading problems and submission receipts for course " + ( courseSelection.getCourse () .getNameAndTitle () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.cloudcoder.app.client.page.SessionUtil.loadProblemAndSubmissionReceiptsInCourse ( page, courseSelection, session ) ; } 
public void showDialog ( java.io.File path ) { try { createFileDialog ( path ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence as ) { assignCandidates ( as ) ; try { evaluator.evaluate ( as ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return as; } 
public void drawCanvas ( double width, double height ) { grid.data = null; try { grid.redraw ( viewerPane, showGridNumbersCheckBox.isSelected () , showGridLinesCheckBox.isSelected () , false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.annotation.Nonnull public example.approval.model.ImmutableTaskAssignmentResult evaluate ( @javax.annotation.Nonnull example.approval.model.ImmutableTaskAssignmentRequest taskAssignmentRequest ) { try { logger.debug ( "Evaluate task assignment for {}", taskAssignmentRequest.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return evaluateAssignmentDecisionTableWithContext ( evaluateDecisionTableInput ( taskAssignmentRequest ) , ProcessConstant.DMN_TASK_ASSIGNMENT_KEY, ProcessConstant.VAR_ASSIGNEE ) ; } 
@ com.google.common.eventbus.Subscribe public void serverStarting ( net.minecraftforge.fml.common.event.FMLServerStartingEvent evt ) { try { evt.registerServerCommand ( new net.minecraftforge.server.command.ForgeCommand () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void setEntity ( com.query.maker.Core.Entity entity ) { this.entity = entity; this.entityClass = entity.getClass () ; try { this.entityClassName = entity.getClassName () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super.onSaveInstanceState ( outState ) ; try { if ( ( mTracksFragment ) != null ) { getSupportFragmentManager () .putFragment ( outState, "tracks_fragment", mTracksFragment ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void recordCurrentTimeLap () { java.lang.String currentTimeStr = getFormattedCurrentTime () ; try { recordedLaps.add ( ( ( ( "Lap " + ( ( recordedLaps.size () ) + 1 ) ) + ": " ) + currentTimeStr ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.ArrayList<android.support.v4.app.Fragment> getPlayerPages () { java.util.ArrayList<android.support.v4.app.Fragment> pages = new java.util.ArrayList<> () ; try { pages.add ( slim.body.spring.fragment.PlayerFragment.newInstance ( mTracks ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } pages.add ( slim.body.spring.fragment.AdviceFragment.newInstance () ) ; return pages; } 
public void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; try { outp.setFormat ( org.jdom2.output.Format.getPrettyFormat () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( outp.outputString ( e ) ) ; } 
protected void updateTitle ( com.intellij.ui.content.Content logContent, boolean disposed, java.lang.String s ) { try { logContent.setDisplayName ( ( ( title ( s ) ) + ( disposed ? " ( Inactive ) " : "" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test ( expected = java.lang.IllegalArgumentException.class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull () throws java.lang.Exception { try { service.getUserOperations ( null, null, null, null, null, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onSaved ( org.freeplane.features.map.MapModel map ) { try { if ( ( org.docear.plugin.services.ServiceController.getFeature ( org.docear.plugin.services.features.upload.UploadController.class ) ) != null ) { org.docear.plugin.services.ServiceController.getFeature ( org.docear.plugin.services.features.upload.UploadController.class ) .addMapToUpload ( map ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public long refill ( long limit ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager.currentTime () ; if ( now < ( nextRefillTime ) ) { return 0; } try { nextRefillTime = now + ( super.getTimeUnitInMillis () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return limit; } 
@ org.junit.Test public void testEqualsSameInstance () { try { org.junit.Assert.assertEquals ( object, object ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML public void nextButtonWasPressed () { imat.viewcontroller.ConfirmationViewController cvc = imat.viewcontroller.ConfirmationViewController.load ( "ConfirmationView.fxml" ) ; try { imat.viewcontroller.RootViewController.getInstance () .setContent ( cvc ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void fireAssignmentChanged () { try { resetLoads () ; } catch ( Exception ex ) { ex.printStackTrace () ; } fireAssignmentsChanged () ; } 
private static void sendHttpResponse ( co.paralleluniverse.comsat.webactors.netty.ChannelHandlerContext ctx, co.paralleluniverse.comsat.webactors.netty.FullHttpRequest req, co.paralleluniverse.comsat.webactors.netty.FullHttpResponse res, boolean close ) { try { co.paralleluniverse.comsat.webactors.netty.WebActorHandler.writeHttpResponse ( ctx, req, res, close ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public final void testOnTickWhenFinished () { org.junit.Assert.assertTrue ( cTimer.cRunning ) ; long timeStamp = java.lang.System.currentTimeMillis () ; cTimer.cFinishTime = timeStamp - ( cTimer.cDuration ) ; try { cTimer.tick ( timeStamp ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertFalse ( cTimer.cRunning ) ; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( placeLocateResults ) != null ) { outState.putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS, org.parceler.Parcels.wrap ( placeLocateResults ) ) ; } try { super.onSaveInstanceState ( outState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.AfterClass ( alwaysRun = true ) public void destroy () throws java.lang.Exception { try { super.cleanUp () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onEditorAction ( android.widget.TextView v, int actionId, android.view.KeyEvent event ) { try { if ( actionId == ( android.view.inputmethod.EditorInfo.IME_ACTION_DONE ) ) { commentPresenter.validateComment ( v.getText () .toString () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private boolean verifyImage ( spirite.image_data.ImageData image ) { try { if ( ! ( imageData.contains ( image ) ) ) { spirite.MDebug.handleError ( ErrorType.STRUCTURAL_MINOR, this, "Tried to checkout/in image from wrong workspce." ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public org.ehcache.internal.store.offheap.OffHeapValueHolder<V> apply ( final K k, final org.ehcache.internal.store.offheap.OffHeapValueHolder<V> present ) { try { notifyInvalidation ( key, present ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; onHandleExtras ( savedInstanceState, getIntent () .getExtras () ) ; onLoadContent ( savedInstanceState ) ; try { onLoadModules ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setDisabledIcon ( de.rincewind.api.gui.elements.util.Icon icon ) { try { if ( icon != null ) { this.disabledIcon = icon.toItem () ; } else { this.icon = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.getHandle () .readItemsFrom ( this ) ; } 
@ org.junit.Test public void test () { try { start ( new com.mauriciotogneri.greencoffee.testapp.test.steps.LoginSteps () , new com.mauriciotogneri.greencoffee.testapp.test.steps.ContactListSteps () , new com.mauriciotogneri.greencoffee.testapp.test.steps.ScreenshotSteps () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setAnotationTitle ( java.lang.String title ) { this.title = title; try { if ( ( title != null ) && ( ( getDefualtToolbar () ) != null ) ) { getDefualtToolbar () .setTitle ( title.toString () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setAdapter ( java.lang.Class<?> adapterType, java.lang.Object adapter ) { try { synchronized ( adapters ) { adapters.put ( adapterType, adapter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.rfo.basic.Var getArrayVarForWrite () { com.rfo.basic.Var var = getVarAndType () ; try { if ( validArrayVarForWrite ( var ) ) { return var; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( var != null ) { LineIndex -= var.name () .length () ; } return null; } 
void recordRequest ( java.lang.String url, org.lockss.servlet.CounterReportsRequestRecorder.PublisherContacted contacted, int publisherCode ) { try { if ( proxyMgr.isCounterCountable ( req.getHeader ( HttpFields.__UserAgent ) ) ) { org.lockss.servlet.CounterReportsRequestRecorder.getInstance () .recordRequest ( url, contacted, publisherCode, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void topologicalSort () { try { drawNodes = topologicalSort ( drawNodes ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { try { android.widget.Toast.makeText ( this, sms.toString () , Toast.LENGTH_LONG ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean star ( long userId, long replyId ) { try { if ( isStared ( userId, replyId ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String sql = "INSERT INTO SG_DiscussReplyStar ( ReplyId, UserId, AddTime ) VALUES ( ?, ?, NOW () ) "; return update ( sql, new java.lang.Object[] { replyId, userId } ) ; } 
@ com.facebook.react.uimanager.annotations.ReactProp ( name = "rawData" ) public void setRawData ( com.github.barteksc.pdfviewer.PDFView view, java.lang.String rawData ) { assetName = null; filePath = null; try { rawPDFData = ( rawData == null ) ? null : android.util.Base64.decode ( rawData, Base64.DEFAULT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } display ( view, false ) ; } 
public org.ektorp.ViewQuery key ( int i ) { try { reset () ; } catch ( Exception ex ) { ex.printStackTrace () ; } key = i; return this; } 
@ java.lang.Override public void run () { if ( ( Controller.getList () .indexOf ( obj ) ) == ( -1 ) ) { executorService.shutdown () ; } testIt ( obj.getUrl () ) ; try { java.lang.System.out.println ( time ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void mouseDragged ( java.awt.event.MouseEvent evt ) { try { setLocation ( ( ( evt.getXOnScreen () ) - ( mouseDragStartX ) ) , ( ( evt.getYOnScreen () ) - ( mouseDragStartY ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void initData () { try { super.initData () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mPullToRefreshLayout.enableLoadMore ( false ) ; } 
@ org.junit.Test public void shouldNotSendMetric () throws java.lang.Exception { java.lang.String name = "metrics.http.exception.p95"; sendValue ( name, delegate ) ; try { verifyZeroInteractions ( delegate ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void cancelAllJobs () { try { cancelJob ( fetchQStatInfoJob ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<java.lang.String> getSavedData ( java.lang.String type ) { java.util.List<java.lang.String> handwritingList; try { handwritingList = dataBaseHelper.getData ( type ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return handwritingList; } 
@ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters.remove ( name ) ; try { fireContainerEvent ( "removeParameter", name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBindViewHolder ( com.snowdays.snowdaysctrl.adapters.ParticipantsListAdapter.ViewHolder holder, int position ) { com.snowdays.snowdaysctrl.models.Participant element = mDataset.get ( position ) ; try { holder.mTextView.setText ( element.getId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deleteItem ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = new com.codepath.simpletodo.Item ( item.getId () , item.getText () ) ; try { deletedItem.delete () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStart () { try { if ( ( mInTransitMessage ) != null ) { mAdapter.prependMessage ( mInTransitMessage ) ; mMessageList.scrollToPosition ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/received/{convoId}", method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @org.springframework.web.bind.annotation.PathVariable final long userId, @org.springframework.web.bind.annotation.PathVariable final long convoId ) { try { convoService.changeConvoReadStatus ( userId, convoId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeUser ( com.iskrembilen.quasseldroid.IrcUser user ) { for ( com.iskrembilen.quasseldroid.IrcMode mode : com.iskrembilen.quasseldroid.IrcMode.values () ) { removeUserFromModeList ( mode, user ) ; } try { notifyObservers ( R.id.BUFFERUPDATE_USERSCHANGED ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void clearSearchAfterNewArtistSelection () { try { imm.hideSoftInputFromWindow ( edtextinput.getWindowToken () , 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } edtextinput.removeTextChangedListener ( fo ) ; searchlist.cleanAdpater () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.example.haitran.cura.fragments.CustomDialogChoiceFolderToSave customDialogChoiceFolderToSave = new com.example.haitran.cura.fragments.CustomDialogChoiceFolderToSave ( getActivity () , mData ) ; try { customDialogChoiceFolderToSave.onCreateDialog () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPause () { try { if ( mPreferences.lastOpenedIsStartPagePreference () ) { mPreferences.setStartPageIndex ( viewPager.getCurrentItem () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onPause () ; } 
public static boolean createDirFileWithoutFileName ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; try { if ( ! ( dir.exists () ) ) { return dir.mkdirs () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void deleteMeldung ( int index, int sitzungsID ) throws Terminkalender.BenutzerException, java.sql.SQLException { Terminkalender.Benutzer eingeloggterBenutzer = istEingeloggt ( sitzungsID ) ; datenbank.deleteMeldung ( eingeloggterBenutzer.getMeldungen () .get ( index ) .meldungsID ) ; try { eingeloggterBenutzer.deleteMeldung ( index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void constant () { try { assertEquals ( 3, ( ( long ) ( run ( b.constant ( 3 ) ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void start ( int time ) { try { vibrator.vibrate ( time ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void signalNextManeuver () { try { if ( ( directions.size () ) > 1 ) bl_handler.send ( ( ( directions.get ( 1 ) .BlueToothCode ) + "" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initialize ( java.lang.String[] args ) { try { super.initialize ( args ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } nachos.vm.VMKernel.pageTable = new java.util.HashMap<java.lang.Integer, java.util.HashMap<java.lang.Integer, nachos.vm.TranslationEntry>> () ; } 
private static void addRespawnTime ( org.bukkit.entity.Player p, java.lang.Integer add ) { try { com.cubicb.ssm.game.Stock.setRespawnTime ( p, ( ( com.cubicb.ssm.game.Stock.getRespawnTime ( p ) ) + add ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( event.getActionCommand () ) == "Hit" ) { java.lang.System.out.println ( "Hit" ) ; } try { if ( ( event.getActionCommand () ) == "Stay" ) { java.lang.System.out.println ( "Stay" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void removeSociety ( model.societies.Society society ) { try { societies.remove ( society ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } societiesMap.remove ( society.getId () ) ; } 
@ java.lang.Override public void afterTextChanged ( android.text.Editable editable ) { try { if ( editable.toString () .trim () .isEmpty () ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } homePresenter.getPageSuggestions ( searchEdittext.getText () .toString () ) ; } 
@ java.lang.Override public java.lang.Object execute ( org.eclipse.core.commands.ExecutionEvent event ) throws org.eclipse.core.commands.ExecutionException { final java.lang.String generatorIdentifier = event.getParameter ( "org.eclipse.vorto.codegen.generator.commandParameter" ) ; try { if ( evaluate ( generatorIdentifier ) ) { org.eclipse.vorto.codegen.ui.utils.PlatformUtils.switchPerspective ( PlatformUtils.JAVA_PERSPECTIVE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void peerDeviceListUpdated ( java.util.Collection<android.net.wifi.p2p.WifiP2pDevice> deviceList ) { try { jobSocketListener.peerListUpdated ( deviceList ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void openFile ( android.content.Context context, java.io.File file ) { try { com.frostwire.android.gui.util.UIUtils.openFile ( context, file.getAbsolutePath () , com.frostwire.android.gui.util.UIUtils.getMimeType ( file.getAbsolutePath () ) , true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void loadConfiguration () { com.nicodangelo.lumiere.handler.ConfigurationHandler.testValue = com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration.getBoolean ( "configValue", Configuration.CATEGORY_GENERAL, false, "this is an example configuration value" ) ; try { if ( com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration.hasChanged () ) { com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration.save () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( com.facebook.share.Sharer.Result shareResult ) { try { android.util.Log.i ( "Share Success", "Shared to facebook" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.btn_new: { android.content.Intent intent = new android.content.Intent ( this, net.teamsv.selfalarm.NewAlarmActivity.class ) ; startActivity ( intent ) ; break; } case R.id.btn_record: { break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void newDownloadIndexes () { try { if ( ( banner ) != null ) { banner.updateBannerInProgress ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } updateSearchText ( searchText ) ; } 
public static boolean playerAtRequestLimit ( java.util.UUID id ) { java.util.List<me.becja10.MCClassifieds.Utils.Request> requests = me.becja10.MCClassifieds.MCClassifieds.playerMap.get ( id ) ; try { if ( requests != null ) { return ( requests.size () ) >= ( me.becja10.MCClassifieds.MCClassifieds.requestLimit ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public com.mister.lib.model.Round getNextRound () { try { if ( ( ( lastRoundPointer ) + 1 ) < ( rounds.size () ) ) { return rounds.get ( ( ( lastRoundPointer ) + 1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void playNext () { ( trackIndex ) ++; if ( ( trackIndex ) >= ( resourceList.size () ) ) { trackIndex = 0; } try { getNextTrack ( trackIndex ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void load () { if ( org.wysaid.nativePort.NativeLibraryLoader.mLibraryLoaded ) return; org.wysaid.nativePort.NativeLibraryLoader.mLibraryLoaded = true; try { java.lang.System.loadLibrary ( "ffmpeg" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.loadLibrary ( "CGE" ) ; org.wysaid.nativePort.CGEFFmpegNativeLibrary.avRegisterAll () ; } 
public boolean updateStorageLocation ( android.content.Context ctx, java.lang.String mount ) { try { updateStorageLocation ( ctx ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void setAtPosition ( long position, int value ) { try { ensure ( position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.heerbann.unsafe.UnsafeBuffer.unsafe.putInt ( ( ( pointer ) + position ) , value ) ; } 
public void testConcurrentLoading () throws java.lang.InterruptedException { try { com.google.common.cache.CacheLoadingTest.testConcurrentLoading ( com.github.benmanes.caffeine.cache.Caffeine.newBuilder () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void waitForJavascriptFramework () { try { if ( ( detectedFramework ) != null ) { detectedFramework.waitToBeReady ( javascriptExecutor ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass, boolean withCoolDown ) { try { this.setPlayerClass ( playerClass, withCoolDown, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( isNext ) { updateNextRes ( targetPosition ) ; } else { updateLastRes ( targetPosition ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
com.z299studio.pb.Application.FileHeader getAppHeaderData ( android.content.Context context ) { if ( ( mBuffer ) == null ) { getData ( context ) ; } try { if ( ( mBuffer ) != null ) { mFileHeader = com.z299studio.pb.Application.FileHeader.parse ( mBuffer ) ; mLocalVersion = mFileHeader.revision; } } catch ( Exception ex ) { ex.printStackTrace () ; } return mFileHeader; } 
@ java.lang.Override public void onAttach ( android.content.Context context ) { try { super.onAttach ( context ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getActivity () ) instanceof com.globant.practice.presentation.view.fragment.SubscriberListFragment.SubscriberListFragmentActions ) { subscriberListFragmentActions = ( ( com.globant.practice.presentation.view.fragment.SubscriberListFragment.SubscriberListFragmentActions ) ( context ) ) ; } } 
public void verifyLogin ( java.lang.String username, java.lang.String password ) { try { if ( ! ( password.isEmpty () ) ) { api.login ( username, password ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { super.onDestroy () ; timer.cancel () ; try { tempTimer.cancel () ; } catch ( Exception ex ) { ex.printStackTrace () ; } matchRef.removeValue () ; } 
public void setMap () { setList () ; try { dfm.fireTableDataChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker datePicker, int selectedYear, int selectedMonth, int selectedDay ) { selectedMonth = selectedMonth + 1; try { dateET.setText ( ( ( ( ( selectedMonth + "/" ) + selectedDay ) + "/" ) + selectedYear ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setValidatedPeptidesPerFraction ( java.util.HashMap<java.lang.String, java.lang.Integer> validatedPeptidesPerFraction ) { try { zooActivateWrite () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.validatedPeptidesPerFraction = validatedPeptidesPerFraction; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/show/{id}" ) public java.lang.String show ( @org.springframework.web.bind.annotation.PathVariable int id, org.springframework.ui.Model model ) { try { initShow ( model, id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "train/show"; } 
@ java.lang.Override protected void restoreState () { for ( menu.ColorMenu.ComponentState comp : this.componentStates ) { comp.setSelectedColorMode ( comp.getActiveColorMode () ) ; } try { componentList.clearSelection () ; } catch ( Exception ex ) { ex.printStackTrace () ; } colorList.clearSelection () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { mListener.OnWallpaperSelected ( imageResId, name, url ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void paintComponent ( java.awt.Graphics g ) { super.paintComponent ( g ) ; try { if ( ( c.getWins () ) == 4 ) c.changePanel ( "4" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } repaint () ; } 
public void set ( java.lang.String path, int count ) { this.path.set ( path ) ; try { this.count.set ( count ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public json.JSONObject getAncestralGraphJSON ( java.lang.String nodeLabel ) { api.PartialOrderGraph graph = asr.getGraph ( nodeLabel ) ; try { java.lang.System.out.println ( graph.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } vis.POAGJson json = new vis.POAGJson ( graph ) ; return json.toJSON () ; } 
public java.math.BigDecimal calculateAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { try { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return calculateAverage () ; } 
@ java.lang.Override public void run () { try { if ( ( ( parentStatement ) != null ) && ( ! ( parentStatement.didRun () ) ) ) { returnType = script.getLogic () .run ( line, this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void longAdditionWorks () { long a = 1134903170; long b = 1836311903; try { assertEquals ( 2971215073L, ( a + b ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stopDefaultBehaviour () { this.getCurrentActivity () .setDefault ( false ) ; try { this.requestActivityFinish ( this.getCurrentActivity () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSucceeded ( org.ovirt.engine.core.compat.Guid cmdId, java.util.List<org.ovirt.engine.core.compat.Guid> childCmdIds ) { super.onSucceeded ( cmdId, childCmdIds ) ; try { log.info ( "Disk has been successfully added to Cinder. ID: {}", getDiskId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getCommand () .endAction () ; org.ovirt.engine.core.bll.tasks.CommandCoordinatorUtil.removeAllCommandsInHierarchy ( cmdId ) ; } 
private void processConfig () { assert ( currentConfig ) != null; try { savePath = currentConfig.getSavePath () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stopPeripheral () { try { if ( ( mGattServer ) != null ) { mGattServer.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mBleAdvertising.stopAdvertising () ; } 
@ org.springframework.web.bind.annotation.CrossOrigin @org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE, value = "/user" ) public org.springframework.http.HttpEntity<java.lang.Void> deleteUser ( @org.springframework.web.bind.annotation.RequestBody com.prodyna.ted.entity.User user ) { try { userService.deleteUser ( user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.springframework.http.ResponseEntity<java.lang.Void> ( org.springframework.http.HttpStatus.OK ) ; } 
private void removeEdge ( rgraph.Edge e ) { if ( e == null ) { return; } e.removeFromNodes () ; try { edges.remove ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void restore () { if ( ! ( maximized ) ) { return; } setWidth ( restoreWindowWidth ) ; setHeight ( restoreWindowHeight ) ; try { setX ( restoreWindowX ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setY ( restoreWindowY ) ; maximized = false; } 
void updateWindow ( net.mready.hover.HoverWindow window ) { if ( ! ( window.attached ) ) { return; } try { windowManager.updateViewLayout ( window.windowView, window.windowLayoutParams ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStop () { try { super.onStop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void onMoreButtonClick ( android.view.View v ) { try { moreBtnClick () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( moreOptionOpen ) ) { moreOptionOpen = true; } else { moreOptionOpen = false; } } 
void doRestart () { stopTimer () ; try { if ( ( isFirstClickDo ) && ( ! ( isGameEnd ) ) ) { myApp.writeStatistics ( currentWidth, currentHeight, currentMines ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } setOriginalValue () ; gameField.restartField () ; isRestartGame = true; } 
@ org.junit.Test public void getPrecisionMicroTest () { try { assertEquals ( 1, de.unima.ki.mamba.evaluation.Characteristic.getPrecisionMicro ( this.characteristics ) , 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void parseFuncDecl () throws VC.Recogniser.SyntaxError { try { parseParaList () ; } catch ( Exception ex ) { ex.printStackTrace () ; } parseCompoundStmt () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { mDbAdapter.resetWordStatus ( id ) ; mCursorAdapter.changeCursor ( mDbAdapter.fetchWordsByTrained ( null, java.lang.Integer.MAX_VALUE, java.lang.Integer.MAX_VALUE, ( -1 ) ) ) ; try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int hashCode () { int result = trackName.hashCode () ; try { result = ( 31 * result ) + ( trackDetails.hashCode () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public void enable () { try { this.mSensorManager.registerListener ( this, this.mAccelerometer, SensorManager.SENSOR_DELAY_GAME ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { revealCorrectAnswer ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updatePoints () ; } 
@ butterknife.OnClick ( value = R.id.profile_update_button ) public void onUpdateUser () { try { if ( updateBtn.getText () .equals ( "Update" ) ) { updateClicked () ; } else { cancelClicked () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Boolean visit ( org.lemsml.model.DerivedParameter typeDef ) throws org.lemsml.model.exceptions.LEMSCompilerException { javax.measure.Unit<?> dim = this.lems.getDimensionByName ( typeDef.getDimension () ) ; try { buildDependenciesAndContext ( typeDef, dim ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private void addValueToMainLine ( java.lang.String number ) { try { mainLine.setText ( new java.lang.StringBuilder ( mainLine.getText () ) .append ( number ) .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void toBeanNUll () { com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER.info ( com.feilong.tools.jsonlib.JsonUtil.toJSON ( null ) .toString ( 4, 4 ) ) ; try { com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER.info ( new net.sf.json.JSONObject () .toString ( 4 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void display ( final android.content.Context mContext, java.lang.String url, final android.widget.ImageView img ) { try { com.bumptech.glide.Glide.with ( mContext ) .load ( url ) .dontAnimate () .placeholder ( com.xinyi.czbasedevtool.base.manager.ui_about.GlideMaster.placeHolderRes ) .error ( com.xinyi.czbasedevtool.base.manager.ui_about.GlideMaster.errorHolderRes ) .into ( img ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { validateCredentials ( username, password ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.After public void tearDown () throws java.lang.Exception { try { android.util.Log.v ( nl.sense_os.userdataapi.SenseUserDataAPITest.TAG, "Tearing Down SenseUserDataAPITest" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.ArrayList<de.tmasser.responsetemplates.MultiLingualEntry> getAllEntries () { java.util.ArrayList<de.tmasser.responsetemplates.MultiLingualEntry> list = new java.util.ArrayList<> () ; try { for ( de.tmasser.responsetemplates.MultiLingualEntry entry : this.entries ) { list.add ( entry ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Collections.sort ( list ) ; return list; } 
@ java.lang.Override public void handleSnesClose () { try { snesState.closeCurrentListener () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about", "/Open/about" }, method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView about ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger.debug ( "index () " ) ; try { model1.setViewName ( "/Open/about" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return model1; } 
private void setBase () { try { setContentView ( ru.velkonost.lume.activity.BoardColumnsActivity.LAYOUT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setTheme ( R.style.AppTheme_Cursor ) ; butterknife.ButterKnife.bind ( this ) ; ru.velkonost.lume.Managers.TypefaceUtil.overrideFont ( getApplicationContext () , "SERIF", "fonts/Roboto-Regular.ttf" ) ; } 
private void runOnInputVcf ( @org.jetbrains.annotations.NotNull final java.lang.String inputVcf, @org.jetbrains.annotations.NotNull final java.lang.String outputVcf ) throws com.hartwig.hmftools.common.exception.HartwigException, java.io.IOException { try { com.hartwig.hmftools.consensusrule.ConsensusRuleFilterApplication.LOGGER.info ( ( "Loading explicit vcf input from " + inputVcf ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } processVariants ( com.hartwig.hmftools.common.variant.vcf.VCFFileLoader.loadSomaticVCF ( inputVcf ) , outputVcf ) ; } 
protected final void addEntryBefore ( final org.bonitasoft.web.toolkit.client.ui.component.form.entry.FormEntry entry, final org.bonitasoft.web.toolkit.client.ui.JsId jsid ) { try { getLastContainer () .prepend ( entry ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } entriesIndex.put ( entry.getJsId () .toString () , entry ) ; } 
@ java.lang.Override protected void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void drawRect ( int x, int y, int w, int h ) { currentPaint.setStyle ( Paint.Style.STROKE ) ; try { back.drawRect ( x, y, ( x + w ) , ( y + h ) , currentPaint ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDateSet ( com.wdullaer.materialdatetimepicker.date.DatePickerDialog datePickerDialog, int i, int i1, int i2 ) { startTime = startTime.withYear ( i ) ; startTime = startTime.withMonthOfYear ( i1 ) ; startTime = startTime.withDayOfYear ( i2 ) ; try { startTimeDialog () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onLoad () { super.onLoad () ; this.name = "weatherContainer"; try { this.addStyleName ( name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.getElement () .setId ( "weatherContainer" ) ; gwt.material.design.client.ui.MaterialWeather.showWeather ( location, name, color ) ; } 
@ java.lang.Override public void run () { try { refreshNewFolder ( p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onServiceConnected ( android.content.ComponentName className, android.os.IBinder service ) { tw.housemart.test.retrofit.net.NetService.LocalBinder binder = ( ( tw.housemart.test.retrofit.net.NetService.LocalBinder ) ( service ) ) ; mService = binder.getService () ; mService.registerLocate ( locateListener ) ; try { mService.connect () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void getGrid () { try { for ( ; ; ) { queryGrid () ; java.lang.System.out.println ( userGrid ) ; if ( userGrid.isValid () ) break; java.lang.System.out.println ( "Invalid sudoku board. Try again.\n" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setTempMin ( java.lang.Double tm ) { try { data.put ( "tmin", tm ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onSingleTapConfirmed ( android.view.MotionEvent e ) { try { listener.get () .onTapped () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void printDicts () { try { java.lang.System.out.println ( ( "English dictionary:\n" + ( enDict.size () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( ( "Foreign dictionary:\n" + ( foDict.size () ) ) ) ; } 
@ java.lang.Override public void putInPage ( java.lang.Object o, ru.spbau.mit.memory.page.RecordPage recordPage ) { try { recordPage.getByteBuffer () .putDouble ( ( ( double ) ( ( int ) ( o ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void addUnlockedPage ( net.minecraft.entity.player.EntityPlayerMP player, micdoodle8.mods.galacticraft.api.recipe.ISchematicPage page ) { try { if ( page != null ) MinecraftForge.EVENT_BUS.post ( new micdoodle8.mods.galacticraft.api.recipe.SchematicEvent.Unlock ( player, page ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { displaySummary () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setView ( com.flaredown.flaredownApp.Checkin.CheckinActivity.Views.SUMMARY ) ; } 
private void startScreenshots () { android.content.Intent intent = new android.content.Intent ( this, csci435.csci435_odbr.SnapshotIntentService.class ) ; try { startService ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setPageSize ( int value ) { pageSize = value; try { clearOfferCache () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void add ( kr.iamghost.kurum.AppConfigFileEntry fileEntry ) { try { add ( new java.io.File ( fileEntry.getOriginalPath () ) , fileEntry.getDropboxPath () , fileEntry.getExcludeList () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getString ( java.lang.String key ) { try { tempObject = get ( key ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( tempObject ) instanceof java.lang.String ) return ( ( java.lang.String ) ( tempObject ) ) ; return null; } 
@ java.lang.Override protected java.lang.Void doInBackground () throws java.lang.Throwable { try { start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { try { { calendar_model = new pkg311project.CalendarModel () ; calendar_frame = new pkg311project.CalendarFrame ( calendar_model ) ; calendar_controller = new pkg311project.CalendarController ( calendar_model, calendar_frame ) ; calendar_frame.setVisible ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { try { if ( future.isSuccess () ) { ctx.channel () .read () ; } else { future.channel () .close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int checkConflictState ( br.ufpe.cin.mergers.util.MergeContext context ) { java.util.List<br.ufpe.cin.mergers.util.MergeConflict> conflictList = br.ufpe.cin.files.FilesManager.extractMergeConflicts ( context.semistructuredOutput ) ; try { if ( ( conflictList.size () ) > 0 ) { return 1; } else { return 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onClose () { mLocationResultsArray.clear () ; try { rebuildMap () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onStart () { try { super.onStart () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void clearForm () { try { amountEditText.setText ( "" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } commentEditText.setText ( "" ) ; selectedDate = java.util.Calendar.getInstance () ; setInitialDate ( selectedDate ) ; } 
private void changePwdDone ( android.os.Bundle data ) { try { if ( data.getBoolean ( "status" ) ) { com.extenprise.mapp.medico.util.Utility.showMessage ( this, R.string.msg_change_pwd ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkGLError ( final java.lang.String message, final boolean throwException ) { try { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl.checkGLError ( throwException, message ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void WriteExpandingNodeToFile ( Node ExpandingNode ) { try { for ( Leaf leafToWrite : ExpandingNode.getNodeLeaves () ) { leafToWrite.WriteEachLeaf () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setServoUp () { try { SlideHolder.setPosition ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.greenrobot.eventbus.Subscribe ( threadMode = org.greenrobot.eventbus.ThreadMode.MAIN ) public void onEvent ( java.util.List<com.sharesmile.share.rfac.models.CauseData> causeDataList ) { try { if ( isVisible () ) { com.sharesmile.share.rfac.models.CauseList causeList = new com.sharesmile.share.rfac.models.CauseList () ; causeList.setCauses ( causeDataList ) ; setCausedata ( causeList ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void tintTaskDescription ( int colorId, java.lang.String name, android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name, null, activity.getResources () .getColor ( colorId ) ) ; try { activity.setTaskDescription ( tDesc ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.fundacionjala.automation.framework.pages.tablet.settings.NavigationPage selectConferenceRoom ( java.lang.String roomName ) { org.openqa.selenium.WebElement room = getConferenceRoom ( roomName ) ; try { if ( room != null ) { room.click () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
private void privateConstructor () { mMatrix.set ( getImageMatrix () ) ; super.setScaleType ( ScaleType.MATRIX ) ; try { super.setLongClickable ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setClickable ( true ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.bck_btn_id: { backButtonPressed () ; break; } case R.id.home_btn_id: { homeButtonPressed () ; break; } case R.id.fwd_btn_id: { forwardButtonPressed () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { checkIfClueFound () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { gameUI.gameHistoryTA.appendText ( ( gameUpdate + "\n" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addTransportTopicListener ( com.wombat.mama.MamaTransportTopicListener transportTopicListener ) { if ( null == ( mTopicListener ) ) { mTopicListener = new com.wombat.mama.MamaTransport.InternalTopicListener () ; nativeAddTopicListener ( mTopicListener, null ) ; } try { mTopicListener.setClientTopicListener ( transportTopicListener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () throws java.lang.Exception { azureStorageUtils = new org.talend.components.azurestorage.utils.AzureStorageUtils () ; try { folder = getClass () .getResource ( "/" ) .getPath () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { spinner.setVisibility ( View.VISIBLE ) ; try { new com.udacity.gradle.builditbigger.JokeEndpointsAsyncTask () .execute ( new android.support.v4.util.Pair<android.content.Context, java.lang.Integer> ( getContext () , ( -1 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void previousClick ( android.view.View view ) { try { if ( ( currentPosition ) > 0 ) { ( currentPosition ) --; viewPager.setCurrentItem ( currentPosition, true ) ; updateProgress () ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void preInit ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent event ) { registerPackets () ; BlockArmor.configFile = event.getSuggestedConfigurationFile () ; BlockArmor.logger = event.getModLog () ; try { twopiradians.blockArmor.common.tileentity.ModTileEntities.preInit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addCorpusToTree ( de.catma.document.Corpus corpus ) { try { corporaTree.addItem ( new java.lang.Object[] { corpus.toString () }, corpus ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void sendMessageToClient ( zillacorp.dbModel.Message message ) { java.lang.String serializedMessage = new com.google.gson.Gson () .toJson ( message ) ; try { outputToClient.println ( serializedMessage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int collectUserOption ( java.lang.String question ) { int response = 0; try { response = javax.swing.JOptionPane.showConfirmDialog ( null, question, windowMessage, javax.swing.JOptionPane.PLAIN_MESSAGE, javax.swing.JOptionPane.PLAIN_MESSAGE, chatIcon ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return response; } 
private void updateListHeight ( android.widget.ListView listView, com.medic.medicapp.WarningAdapter adapter ) { com.medic.medicapp.UIUtils.setListViewHeightBasedOnItems ( listView ) ; try { adapter.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void shutdown () { try { model.DBManager.lock.unlock () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; com.mozzandroidutils.file.MozzConfig.makeAppDirs ( this ) ; try { testDB () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void surfaceCreated ( android.view.SurfaceHolder holder ) { try { bg = new com.droidkings.game.Background ( android.graphics.BitmapFactory.decodeResource ( getResources () , R.drawable.gamebg1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } thread.setRunning ( true ) ; thread.start () ; } 
public java.lang.String getTimeDisplay ( shared.CustomTime time ) { java.lang.String display = EMPTY_STRING; try { if ( time != null ) { if ( time.hasTime () ) { display = this._timeFormat.format ( time.getTime () ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return display; } 
@ java.lang.Override public void delete ( java.util.List<java.lang.Integer> vmIds ) { for ( int id : vmIds ) { properties.remove ( java.lang.Integer.toString ( id ) ) ; } try { saveToFile () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void reset () { try { super.reset () ; } catch ( Exception ex ) { ex.printStackTrace () ; } path = new java.util.ArrayList<Agents.Node> () ; nodes = new java.util.HashMap<Agents.Node, Agents.Node> () ; pathNotCreatedYet = true; searchSteps = 0; movementSteps = 0; } 
@ java.lang.Override public void run () { try { edu.wpi.first.wpilibj.command.Scheduler.getInstance () .run () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { try { synchronized ( this.dataLoaderCallbacks ) { this.dataLoaderCallbacks.add ( callback ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onCreate () { super.onCreate () ; android.os.HandlerThread thread = new android.os.HandlerThread ( "DownloadService" ) ; thread.start () ; try { mServiceLooper = thread.getLooper () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mServiceHandler = new edu.vuum.mocca.DownloadService.ServiceHandler ( mServiceLooper ) ; } 
public static java.lang.String recordAlert ( org.json.JSONObject jmessage ) { try { de.xavaro.android.common.Json.put ( jmessage, "priority", "alertinfo" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return de.xavaro.android.common.ActivityManager.getInstance () .onMessage ( jmessage, false ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { mSong = dataSnapshot.getValue ( com.teinvdlugt.android.piano.Song.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mSong ) == null ) { finish () ; } else { loadSong () ; } } 
protected void addDropdownData ( final java.lang.String name, final java.util.List values ) { try { dropdownData.put ( name, values ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void ironArmor () { Gear.aRat[0] = 6; try { if ( ( Gear.aRat[0] ) > ( Gear.mw.soak ) ) { Gear.mw.armorName = "Iron Armor"; Gear.mw.soak = 6; java.lang.System.out.println ( "You found Iron Armor" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setListObjects ( java.util.List<com.golub.golubroman.megakittest.Cars.CarModel> carModels ) { try { if ( ( this.carModels.size () ) > 0 ) this.carModels.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.carModels = carModels; this.notifyDataSetChanged () ; } 
public void clearExerciseTable () { android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase () ; try { clearExerciseTable ( db ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact, java.lang.String data ) { java.lang.Long id = java.lang.Long.parseLong ( data ) ; try { if ( id.equals ( 0L ) ) { contact.setNationality ( null ) ; } else { contact.setNationality ( id ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void start () { try { new java.lang.Thread ( this ) .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String create ( final spark.Request req ) throws com.fasterxml.jackson.core.JsonProcessingException { try { this.userService.createUser ( req.body () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.logger.info ( "[CREATE] User created!" ) ; return this.prettyPrint ( new response.ResponseMessage ( "User created!!", 200 ) ) ; } 
public void addEvent ( java.lang.String eventId, java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository.findById ( eventDayId ) ; eventDay.getEvents () .add ( eventId ) ; try { eventDayRepository.save ( eventDay ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testDeleteApplicationPermissionOfApiUser ( eu.supersede.integration.api.feedback.types.ApiUserPermission permission ) throws java.lang.Exception { try { proxy.deleteApplicationPermissionsOfApiUser ( permission.getId () , token ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { try { com.chriscartland.octaviastreethilton.auth.AuthManager.onActivityResult ( this, requestCode, resultCode, data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void hideDeferred ( final org.geogebra.common.javax.swing.GBox box ) { try { setVisible ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } box.setVisible ( false ) ; } 
@ java.lang.Override public void init ( java.util.Properties properties ) throws org.pepstock.jem.log.JemException { super.init ( properties ) ; try { isJobRepositoryPersistent = org.pepstock.jem.springbatch.DataSourceFactory.isJobRepositoryPersistent ( properties ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String executeRequest ( java.lang.String command ) { try { if ( command.startsWith ( "LOGIN" ) ) { if ( checkLoginMessage ( command ) ) { return "SUCCESSUSER"; } else { return "FAILURE"; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return "INVALID"; } 
@ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { com.tc.util.Assert.assertTrue ( this.connectedClients.contains ( client ) ) ; try { this.connectedClients.remove ( client ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setGrowthLastYears ( java.lang.Integer lastYears ) { java.lang.Integer old = this.properties.growthLastYears; try { properties.growthLastYears = ( lastYears != null ) ? lastYears : ec.nbdemetra.ui.DemetraUI.GROWTH_LAST_YEARS.defaultValue () ; } catch ( Exception ex ) { ex.printStackTrace () ; } firePropertyChange ( ec.nbdemetra.ui.DemetraUI.GROWTH_CHART_LENGTH_PROPERTY, old, properties.growthLastYears ) ; } 
public void refreshList () { content.clear () ; try { content.addAll ( com.randomappsinc.studentpicker.Misc.PreferencesManager.get () .getNameLists () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Collections.sort ( content ) ; setNoContent () ; notifyDataSetChanged () ; } 
@ java.lang.Override public void execute () { try { moveShortcut ( shortcut, ( -1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { try { videoView.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } showHud () ; } 
@ java.lang.Override public void logOut () { sessionStorageService.clear () ; try { userStorageService.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.github.onepiecex.session.share.core.util.CookieEncryption getInstance ( java.lang.String secret ) { com.github.onepiecex.session.share.core.util.CookieEncryption cookieEncryption = com.github.onepiecex.session.share.core.util.CookieEncryption.cookieEncryptionMap.get ( secret ) ; try { if ( null == cookieEncryption ) { cookieEncryption = new com.github.onepiecex.session.share.core.util.CookieEncryption ( secret ) ; com.github.onepiecex.session.share.core.util.CookieEncryption.cookieEncryptionMap.put ( secret, cookieEncryption ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return cookieEncryption; } 
@ php.runtime.annotation.Reflection.Signature public void addAll ( php.runtime.env.Environment env, php.runtime.lang.ForeachIterator iterator ) throws java.lang.Throwable { if ( iterator == null ) { return; } try { while ( iterator.next () ) { env.invokeMethod ( this, "add", iterator.getValue () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () throws java.lang.Exception { try { test.TestEditTaskCommand.storageControllerInstance = storage.api.StorageController.getInstance () ; } catch ( Exception ex ) { ex.printStackTrace () ; } test.TestEditTaskCommand.testTaskList = repopulateTask () ; test.TestEditTaskCommand.taskControllerInstance = task.api.TaskController.getInstance () ; test.TestEditTaskCommand.commandParserInstance = new parser.api.CommandParser () ; } 
@ java.lang.Override public void onNewPurchase ( com.go.kchin.model.SimplePurchase arg ) { try { mProductPresenter.buyMore ( product.getId () , arg.getPurchasedItems () , arg.getPurchaseAmount () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setTotalPrice ( no.europark.parkingBooking.entity.TimeSpan timeSpan, no.europark.parkingBooking.entity.ParkingPlace parkingPlace ) { int totalPrice = no.europark.parkingBooking.Utility.CalculatePrice ( timeSpan, parkingPlace ) ; try { addModelVariable ( "TotalPrice", totalPrice ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent ae ) { try { insertYear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void myDraw ( android.graphics.Canvas canvas ) { canvas.drawBitmap ( mBitmapBackground, 0, 0, null ) ; try { mGroup.drawAll ( canvas ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.context.annotation.Bean public org.springframework.web.servlet.view.tiles3.TilesConfigurer tilesConfigurer () { org.springframework.web.servlet.view.tiles3.TilesConfigurer tiles = new org.springframework.web.servlet.view.tiles3.TilesConfigurer () ; try { tiles.setDefinitions ( "/layout/tiles.xml" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tiles.setCheckRefresh ( true ) ; return tiles; } 
private static com.fasterxml.jackson.databind.ObjectMapper mapperFromJSONFactory ( com.fasterxml.jackson.core.JsonFactory jsonFactory ) { final com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper ( jsonFactory ) ; mapper.configure ( SerializationFeature.FAIL_ON_EMPTY_BEANS, false ) ; try { mapper.findAndRegisterModules () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return mapper; } 
private void filter ( java.lang.String category ) { logic.logger.log ( java.util.logging.Level.INFO, ( ( todolist.model.NormalCommandHandler.LOGGING_SEARCHING_TASK ) + category ) ) ; try { uiHandler.filter ( category ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } uiHandler.sendMessage ( "Here are your filter results" ) ; } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { afkBooter.stopTrackingPlayer ( event.getPlayer () .getName () ) ; try { if ( afkBooter.getMovementTrackerFlag () ) { movementTracker.removePlayer ( event.getPlayer () .getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void checkOffsetAndCount ( final char[] buffer, final int charOffset, final int charCount ) { if ( buffer == null ) { throw new java.lang.NullPointerException () ; } try { java.io.IOUtils.checkOffsetAndCount ( buffer.length, charOffset, charCount ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void set ( T t, float time ) { typeConverter.copyFromObject ( t, tmp ) ; try { transition.set ( tmp, time ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showTimePickerDialog ( android.widget.EditText timeDisplay, java.util.Calendar date ) { activeTimeDisplay = timeDisplay; activeTime = date; android.app.DialogFragment newFragment = new com.project.team16.nfclock.timePickerFragment () ; try { newFragment.show ( getFragmentManager () , "myDialog" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void push ( int i ) { try { this.memory.add ( this.memory.size () , i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPreExecute () { super.onPreExecute () ; _camera = new net.biospherecorp.umorse.SimpleCamera ( _main ) ; try { _camera.initCamera () ; } catch ( Exception ex ) { ex.printStackTrace () ; } _flashLight = _camera.new net.biospherecorp.umorse.SimpleCamera.FlashLight () ; } 
public void quit () { try { synchronized ( syncThread ) { quit = true; syncThread.notify () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.List<java.lang.String> getPrivateRoomOptions () { java.util.List<java.lang.String> options = new java.util.ArrayList<> () ; try { options.add ( "No" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } options.add ( "Yes" ) ; return options; } 
public void delete ( java.lang.String cartId ) { try { if ( ! ( listOfCarts.containsKey ( cartId ) ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String.format ( ( "Cannot delete cart. " + "The cart doesn't exist" ) , cartId ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } listOfCarts.remove ( cartId ) ; } 
public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { try { synchronized ( this.dataLoaderCallbacks ) { this.dataLoaderCallbacks.remove ( callback ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( org.kore.kolabnotes.android.Utils.getReloadDataAfterDetail ( this ) ) { org.kore.kolabnotes.android.Utils.setReloadDataAfterDetail ( this, false ) ; } } 
@ java.lang.Override public void onStopNestedScroll ( android.view.View child, int type ) { try { super.onStopNestedScroll ( child, type ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( java.lang.Math.abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } 
@ java.lang.Override public void actionPerformed ( final java.awt.event.ActionEvent e ) { try { if ( e.getActionCommand () .equals ( "Save" ) ) { saveValues () ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } dispose () ; setVisible ( false ) ; } 
@ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { try { mCondom.proceedBroadcast ( intent, new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @java.lang.Override public void run () { com.oasisfeng.condom.CondomContext.super.sendStickyBroadcast ( intent ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test ( expected = javax.ws.rs.BadRequestException.class ) public void construct_throwsExceptionWhenPageSizeIsZero () { try { new uk.gov.register.presentation.resource.Pagination ( java.util.Optional.of ( 1L ) , java.util.Optional.of ( 0L ) , 10 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config = new com.badlogic.gdx.backends.android.AndroidApplicationConfiguration () ; config.useAccelerometer = true; config.useWakelock = true; initialize ( new com.scarlettapps.skydiver3d.Skydiver3D () , config ) ; } 
@ org.junit.Test public void testSequenceOfNullsAndValues () { org.obiba.magma.ValueSequence sequence = org.obiba.magma.type.TextType.get () .sequenceOf ( "\"\",\"Not Null\",\"\"" ) ; try { assertSequence ( sequence, new java.lang.String[] { null, "Not Null", null } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void start () { super.start () ; org.procrastinationpatients.tts.core.Engine.getInstance () .setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; try { org.procrastinationpatients.tts.core.Engine.getInstance () .getProcessor () .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( "Start!" ) ; } 
@ java.lang.Override public final net.minecraft.nbt.NBTTagCompound writeToNBT ( net.minecraft.nbt.NBTTagCompound root ) { try { root = super.writeToNBT ( root ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } writeCustomNBT ( root ) ; return root; } 
public static void populateWorld () { try { for ( assignment4.Critter c : assignment4.CritterWorld.getLivingCritters () ) { assignment4.CritterWorld.getWorld () [c.y_coord][c.x_coord] = c; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this.deviceDataMap ) == null ) { this.deviceDataMap = new com.emc.storageos.db.client.model.StringSetMap () ; } try { this.deviceDataMap.putAll ( deviceDataMapEntries ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void d ( java.lang.String tag, java.lang.Throwable t, @android.support.annotation.NonNull java.lang.String message ) { im.wangchao.mcommon.log.AbsLog[] array = im.wangchao.mcommon.log.LOG.logAsArray; try { for ( im.wangchao.mcommon.log.AbsLog log : array ) { log.d ( tag, t, message ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { try { com.jtorrent.peer.Peer._logger.debug ( "received UNCHOKE from peer {}", getHostAddress () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } _peerChoking = false; askForNewPiece ( repo ) ; } 
public synchronized int getPosition () { try { if ( ( currentTrackPlayer ) != null ) return currentTrackPlayer.getCurrentPosition () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.d ( org.fitchfamily.android.symphony.MusicService.TAG, "getPosition () not playing?" ) ; return 0; } 
@ java.lang.Override public void onScaleEnd ( android.view.ScaleGestureDetector detector ) { super.onScaleEnd ( detector ) ; try { swipeRefreshLayout.setEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance () { android.os.Bundle args = new android.os.Bundle () ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; try { fragment.setArguments ( args ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return fragment; } 
public void releasedAt ( java.awt.event.MouseEvent release ) { java.lang.System.out.println ( "Release" ) ; try { checkIfQuickClick ( release ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( draggedStack ) != null ) && ( ( draggedStack.size () ) > 0 ) ) { dragReleaseActions ( release ) ; } } 
public void addConversation ( uk.org.mattford.scoutlink.model.Conversation conv ) { try { conversations.put ( conv.getName () , conv ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Integer getSessionId () { try { if ( sessions.isEmpty () ) return -1; } catch ( Exception ex ) { ex.printStackTrace () ; } final com.orientechnologies.orient.client.remote.OStorageRemoteNodeSession curSession = sessions.values () .iterator () .next () ; return curSession.getSessionId () ; } 
@ java.lang.Override public void onTick ( long millisUntilFinished ) { android.util.Log.d ( "Autosave", ( "time left: " + ( ( historian.timeSinceChange ) - millisUntilFinished ) ) ) ; try { editorActivity.setSaveStatusBar ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void assertComplex ( boolean condition ) { try { assertFalse ( "Should be complex", condition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
io.nlopez.smartlocation.location.LocationProvider getCurrentProvider () { try { if ( ( ( currentProvider ) == null ) && ( ! ( providers.isEmpty () ) ) ) { currentProvider = providers.poll () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return currentProvider; } 
private dhbw.karlsruhe.it.solar.core.stages.Spacestation placeNewStation ( java.lang.String name, com.badlogic.gdx.math.Vector2 startlocation, dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation.placeNewStation ( name, startlocation, owner ) ; try { addActor ( newStation ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return newStation; } 
@ java.lang.Override protected void onPostExecute ( java.util.List<com.example.davidberg.androidkurs.VasttrafikJourney> journeys ) { try { updateJourneyList ( journeys ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { if ( ( com.mobile.myweather.app.WeatherMapActivity.mPlayer ) != null ) { com.mobile.myweather.app.WeatherMapActivity.mPlayer.stop () ; } try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mapView.onDestroy () ; } 
private void unlockControls () { filesList.setDisable ( false ) ; try { imageBox.setDisable ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } videoBox.setDisable ( false ) ; generateButton.setDisable ( false ) ; locked = false; } 
@ java.lang.Override public void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemSelected ( int index, uk.org.ngo.squeezer.model.PluginItem item ) { try { mActivity.show ( item ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void doGet ( javax.servlet.http.HttpServletRequest req, javax.servlet.http.HttpServletResponse res ) throws java.io.IOException, javax.servlet.ServletException { java.io.PrintWriter out = res.getWriter () ; try { out.println ( "<html><body>" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } out.println ( "<h1>Hello Servlet !!</h1>" ) ; out.println ( "</body></html>" ) ; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent arg0 ) { try { if ( chbDiaSilence.getSelection () ) { diaAlarmCount = ( config.alarm.diaAlarmSilenceSeconds ) * ( usbEventHz ) ; } else { chbDiaSilence.setText ( "Silence" ) ; diaAlarmCount = 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStop () { super.onStop () ; try { if ( ( ( videosAdapter ) != null ) && ( ( com.google.android.exoplayer2.util.Util.SDK_INT ) > 23 ) ) { videosAdapter.releasePlayers () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { stopMusic () ; try { music = manager.getResourceLoader () .getMusic ( ( ( "data/audio/music/" + musicName ) + ".mp3" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startMusic ( looping ) ; } 
protected static boolean unexpectedSegmentAlert ( org.usfirst.frc.team1197.TorTrajectoryLib.spline_generator.PathSegment.SegmentType type ) { try { java.lang.System.err.println ( ( ( ( ( org.usfirst.frc.team1197.TorTrajectoryLib.spline_generator.SplineErrMsg.basic_msg ) + "Unexpected path segment ( " ) + type ) + " ) ." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void processSuccess ( int responseCode, java.io.InputStream responseData ) { java.lang.System.out.println ( "response received" ) ; processResponseIntoAppsList ( responseData ) ; try { repeatRequestOrShowResults ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void concat ( gov.nist.toolkit.errorrecording.ErrorRecorder er ) { try { errMsgs.addAll ( er.getErrMsgs () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) { try { if ( this.contains ( splitPoint ) ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this.base; kill () ; if ( splitPoint != base ) { base.doInitScan () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void addInventory8 () { try { org.junit.Assert.assertFalse ( coffeeMaker.addInventory ( 5, 3, "a", 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void finalize () throws java.lang.Throwable { try { super.finalize () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mLeakedException ) != null ) { mLeakedException = null; } } 
@ org.junit.Test public void testHBaseStore () throws java.lang.Exception { java.lang.String storeName = "org.apache.kylin.storage.hbase.HBaseResourceStore"; try { org.apache.kylin.common.persistence.ResourceStoreTest.testAStore ( org.apache.kylin.common.persistence.ResourceStoreTest.mockUrl ( "hbase", kylinConfig ) , kylinConfig ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { try { getMapPanel () .zoomImage ( e.getWheelRotation () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static boolean checkMap ( java.lang.String key ) { try { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP.containsKey ( key.toLowerCase () ) ) return true; else return false; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.context.annotation.Bean public org.activiti.dmn.engine.DmnEngine ruleEngine () { org.activiti.dmn.engine.DmnEngineConfiguration dmnEngineConfiguration = new org.activiti.dmn.engine.DmnEngineConfiguration () ; try { dmnEngineConfiguration.setDataSource ( dataSource () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dmnEngineConfiguration.setDatabaseSchemaUpdate ( environment.getProperty ( "engine.dmn.schema.update", "true" ) ) ; return dmnEngineConfiguration.buildDmnEngine () ; } 
public void RefreshGraph ( br.uff.ic.provviewer.Variables variables ) { CollapseEdges ( variables ) ; variables.filter.RemoveFilters ( variables ) ; try { variables.view.repaint () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initIM () { try { com.alibaba.wxlib.util.SysUtil.setApplication ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker view, int year, int month, int dayOfMonth ) { try { ( ( com.example.user.worktime.TimeTablePagerFragment ) ( getParentFragment () ) ) .changeSelectedDate ( new org.joda.time.LocalDate ( year, ( month + 1 ) , dayOfMonth ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void removeChild ( org.jsoup.nodes.Node out ) { org.jsoup.helper.Validate.isTrue ( ( ( out.parentNode ) == ( this ) ) ) ; int index = out.siblingIndex () ; childNodes.remove ( index ) ; try { reindexChildren ( index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } out.parentNode = null; } 
protected static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file.getParent () , ( ( file.getName () ) + ".keep" ) ) ; try { file.renameTo ( n ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void execute ( io.realm.Realm realm ) { model.getPlaylist () .addAll ( new java.util.ArrayList ( songsList ) ) ; try { realm.copyToRealmOrUpdate ( model ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } listener.onSuccess ( true, mContext.getString ( R.string.playlist_created ) ) ; } 
private void clearContributingPlans () { try { this.contributingPlans.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( ( progressCounter ) > 0 ) { updateProgress ( ( -1 ) ) ; handler.postDelayed ( this, com.example.mjokic.quizapp.activities.ChallengeActivity.QUIZ_TICK ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public act.util.ClassNode visitSubTree ( $.Function<act.util.ClassNode, ?> visitor ) { try { visitSubTree ( visitor, new java.util.HashSet<act.util.ClassNode> () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override public void render () { try { if ( ! ( paused ) ) { worldController.update () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClickSetPathUp ( android.view.View view ) { try { if ( ( ( mProfileService ) != null ) && ( ( mProfileService.getMapClient ( mMasInstanceId ) ) != null ) ) { mProfileService.getMapClient ( mMasInstanceId ) .setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent photoPickerIntent = new android.content.Intent ( android.content.Intent.ACTION_PICK ) ; try { photoPickerIntent.setType ( "image/*" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivityForResult ( photoPickerIntent, com.vyn.motoclick.activities.MapsActivity.REQUEST ) ; } 
@ java.lang.Override protected void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPreExecute () { try { super.onPreExecute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void getRestoreStatus ( java.lang.String id, models.datatable.BackupDataTable.Type type ) { com.emc.vipr.model.sys.backup.BackupRestoreStatus status = util.BackupUtils.getRestoreStatus ( id, ( type == ( models.datatable.BackupDataTable.Type.LOCAL ) ) ) ; try { renderJSON ( new controllers.Backup.RestoreStatus ( status ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_main ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public de.uni_freiburg.informatik.ultimate.logic.TermVariable addInVar ( final de.uni_freiburg.informatik.ultimate.modelcheckerutils.cfg.variables.IProgramVar key, final de.uni_freiburg.informatik.ultimate.logic.TermVariable value ) { try { if ( mConstructionFinished ) { throw new java.lang.IllegalStateException ( "Construction finished, TransFormula must not be modified." ) ; } else { return mInVars.put ( key, value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
double a_ods_light_detected () { double l_return = 0.0; try { if ( ( v_sensor_ods ) != null ) { l_return = v_sensor_ods.getLightDetected () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return l_return; } 
void initChildView () { try { if ( ( childView ) == null ) { childView = getChildAt ( 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void playPause ( android.view.View view ) { try { if ( paused ) startTimer () ; else stopTimer () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void kurangiscore () { try { if ( ( score ) < 1 ) { } else { score -= 5; java.lang.String scoreString = java.lang.Integer.toString ( score ) ; scoretext.setText ( scoreString ) ; animateScore () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showInitialIntent ( boolean isVisible ) { editableIntent = cloneIntent ( this.originalIntent ) ; editableIntent.setComponent ( null ) ; try { setupVariables () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setupTextWatchers () ; showAllIntentData ( null ) ; showResetIntentButton ( isVisible ) ; } 
public static void print ( java.lang.String message ) { try { java.lang.System.out.println ( message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( ( currentTransaction ) != null ) { currentTransaction.markAsRolledBack () ; currentTransaction = null; connection.onError ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testLogDetailedPerformanceInfo () { try { performanceStateContainer.logDetailedPerformanceInfo ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String performance = com.hazelcast.simulator.utils.FileUtils.fileAsText ( com.hazelcast.simulator.coordinator.PerformanceStateContainerTest.PERFORMANCE_FILE ) ; org.junit.Assert.assertEquals ( ( "5500" + ( com.hazelcast.simulator.utils.FormatUtils.NEW_LINE ) ) , performance ) ; } 
private java.lang.String getSecurityToken () throws java.lang.Exception { try { if ( ( ( securityToken ) == null ) || ( securityToken.isEmpty () ) ) { com.ibm.streams.watsonexplorer.ca.client.ContentAnalytics.logger.trace ( "Security token not found! Initiating login..." ) ; adminLogin () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return securityToken; } 
@ java.lang.Override public boolean addPair ( final E domainElem, final E rangeElem ) { final boolean wasModified = super.addPair ( domainElem, rangeElem ) ; try { super.addPair ( rangeElem, domainElem ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return wasModified; } 
@ org.junit.Test public void recordMethodWithJustADeclaration () { java.lang.String outer = "outer!"; try { assertThat ( hu.advancedweb.scott.helper.TestHelper.getLastRecordedStateFor ( "outer" ) , org.hamcrest.CoreMatchers.equalTo ( outer ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int collide ( ch.aplu.android.Actor actor1, ch.aplu.android.Actor actor2 ) { try { ( ( ph.sm.sliceIt.Fruit ) ( actor1 ) ) .splatter () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return 1000; } 
private int getShapeX () { try { if ( sizeConstrainedWithWidth () ) { return getBorderSize () ; } else { return ( ( getPanelWidth () ) - ( getShapeWidth () ) ) / 2; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { java.lang.String dirPath = baseText.getText () .trim () ; java.lang.String keyWords = keywordText.getText () ; SwingGui.fileSearcher searcher = new SwingGui.fileSearcher ( dirPath, keyWords ) ; try { searcher.execute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setPowerUpType ( de.bricked.game.powerups.PowerUpType powerUpType ) { this.powerUpType = powerUpType; try { setText ( ( ( this.brickType.getID () ) + ( this.powerUpType.getID () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { am.updateList () ; try { tabs.getTabs () .add ( addTab ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } primaryStage.show () ; notifyPreloader ( new javafx.application.Preloader.StateChangeNotification ( javafx.application.Preloader.StateChangeNotification.Type.BEFORE_START ) ) ; } 
@ java.lang.Override public void update ( util.observer.QEvent e ) { try { refreshTile () ; } catch ( Exception ex ) { ex.printStackTrace () ; } refreshBorder () ; refreshImage () ; } 
public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder, java.lang.String newName ) { try { fileRepository.renameFolder ( newName, mapFolder ( folder, null ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void warn ( org.slf4j.Marker marker, java.lang.String msg ) { try { recordEvent ( Level.WARN, marker, msg, null, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { super.onPostExecute ( aVoid ) ; try { mStationMapFragment.redrawMarkers () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mStationMapFragment.lookingForBikes ( ( ! ( mParkingSwitch.isChecked () ) ) ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent ae ) { new codeu.chat.client.simplegui.NewAccount ( frame, context ) ; try { frame.setVisible ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public tollbooth.LogMessage getNextMessage () { try { if ( logMessageQueue.isEmpty () ) { return null; } else { return logMessageQueue.poll () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ lists.linkedlist.tests.Test void setObject () { lists.linkedlist.ListNode<java.lang.String> listNode = new lists.linkedlist.ListNode<java.lang.String> ( "Blabla" ) ; listNode.setObject ( "lorem ipsum" ) ; try { assertEquals ( "lorem ipsum", listNode.getData () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getError () throws java.lang.Exception { jfdi.logic.events.AddTaskFailedEvent event = new jfdi.logic.events.AddTaskFailedEvent ( AddTaskFailedEvent.Error.EMPTY_DESCRIPTION ) ; try { assertEquals ( AddTaskFailedEvent.Error.EMPTY_DESCRIPTION, event.getError () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void left () { try { if ( ( y ) > 0 ) { synchronized ( board ) { remove ( board, world ) ; this.y -= 1; print ( board ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void press () { try { if ( ! ( cmds.isEmpty () ) ) { cmds.remove ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void write ( java.lang.String s ) { try { if ( ( finalBluetoothSocket ) != null ) { socketManager.write ( s.getBytes () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void readDescPacket ( io.netty.buffer.ByteBuf buf ) { super.readDescPacket ( buf ) ; try { processTime = buf.readInt () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final void setCenteredRotation ( final float degrees ) { com.badlogic.gdx.math.Vector2 oldCenter = getCenter () ; setRotation ( degrees ) ; com.badlogic.gdx.math.Vector2 offset = dclib.geometry.VectorUtils.offset ( getCenter () , oldCenter ) ; try { translate ( offset ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeUser ( server.User nick, java.lang.String userMask ) { members.remove ( nick ) ; try { for ( server.User user : members ) { user.sendMessage ( ( ( ( ":" + userMask ) + " PART " ) + ( name ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void setJavaPointsToAnalysisMode () { org.eclipse.jface.preference.IPreferenceStore preferences = com.ensoftcorp.open.pointsto.Activator.getDefault () .getPreferenceStore () ; preferences.setValue ( com.ensoftcorp.open.pointsto.preferences.PointsToPreferences.POINTS_TO_ANALYSIS_MODE, com.ensoftcorp.open.pointsto.preferences.PointsToPreferences.JAVA_POINTS_TO_ANALYSIS_MODE ) ; try { com.ensoftcorp.open.pointsto.preferences.PointsToPreferences.loadPreferences () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { try { com.gmail.berndivader.MythicPlayers.MythicPlayers.inst () .getPlayerManager () .attachActivePlayer ( e.getPlayer () , true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord.getActorDestinationPublicKey () ; try { actorNetworkServiceRecord.setActorDestinationPublicKey ( actorNetworkServiceRecord.getActorSenderPublicKey () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } actorNetworkServiceRecord.setActorSenderPublicKey ( actorDestination ) ; return actorNetworkServiceRecord; } 
@ java.lang.Override public void reset () { try { for ( com.funcache.util.FastLinkedListItem item = head; item != null; item = item.getNext () ) { item.setNext ( null ) ; item.setPrevious ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } head = null; tail = null; } 
public static void killAMQConnection () throws java.io.IOException { com.sap.sme.occ.product.MQTest.channel.close ( 0, "" ) ; com.sap.sme.occ.product.MQTest.channel.abort () ; com.sap.sme.occ.product.MQTest.mqConnection.close ( 0, "" ) ; try { com.sap.sme.occ.product.MQTest.mqConnection.abort () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean deletedField ( java.lang.String fieldName, java.lang.Object value ) { boolean migrated = false; try { if ( "in2Old".equals ( fieldName ) ) { isdeletedFieldIn2_right_type = ( value != null ) && ( value instanceof org.talend.daikon.serialize.jsonio.PersistenceObjectForFieldRemoved.InnerClass2 ) ; migrated = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return migrated; } 
public void hideShoppingBag () { try { mainLayout.setRight ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( productViewController ) != null ) { productViewController.refresh () ; } } 
public java.util.List<com.arjanvlek.cyngnotainfo.Model.Device> getDevices () { try { fetchDataFromServer ( "device" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( offline ) { return offlineDevices; } else { return devices; } } 
@ javax.annotation.PreDestroy public void closeResourceResolver () { try { if ( ( ( this.resolver ) != null ) && ( this.resolver.isLive () ) ) { this.resolver.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.resolver = null; } 
public void addMessages ( java.util.List<tw.com.triplei.commons.Message> messages ) { try { this.messages.addAll ( messages ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { try { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.label = labelName; } 
@ java.lang.Override public void nearByChange () { try { checkConnectedSides () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu, android.view.MenuInflater inflater ) { try { inflater.inflate ( R.menu.menu_detail, menu ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } finishCreatingMenu ( menu ) ; } 
@ java.lang.Override public void onDestroy () { super.onDestroy () ; try { if ( ( broadcastManager ) != null ) { broadcastManager.unregisterReceiver ( com.mbientlab.metawear.api.MetaWearBleService.getMetaWearBroadcastReceiver () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testVanillaExchange () throws java.lang.Exception { java.lang.String output = getOutput () ; try { org.junit.Assert.assertTrue ( ( "Wrong output: " + output ) , output.contains ( "Hello World" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void prepareUserList ( ua.javatests.adressbookweb.model.UserData userData ) { java.lang.Boolean emptyUserList = userListIsEmpty () ; try { if ( emptyUserList == true ) { create ( userData ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void doGet ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response ) throws java.io.IOException, javax.servlet.ServletException { final javax.servlet.ServletContext context = getServletContext () ; try { context.getNamedDispatcher ( "register" ) .forward ( request, response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ edu.uci.python.test.benchmarks.Test public void pads_integerpartitions () { java.nio.file.Path script = java.nio.file.Paths.get ( "pads-integerpartitions.py" ) ; try { assertBenchNoError ( script, new java.lang.String[] { "700" } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( ( com.letsgo.model.datasources.UserDataSource ) ( userDataSource ) ) .open () ; } 
@ java.lang.Override public V get () { try { ensureInitialized () ; } catch ( Exception ex ) { ex.printStackTrace () ; } final V value = this.value.get () ; return value; } 
public com.mediamath.terminalone.models.T1Entity save ( com.mediamath.terminalone.models.T1Entity entity ) throws com.mediamath.terminalone.exceptions.ClientException, com.mediamath.terminalone.exceptions.ParseException { if ( entity == null ) return null; try { if ( ! ( isAuthenticated () ) ) return null; } catch ( Exception ex ) { ex.printStackTrace () ; } return postService.save ( entity ) ; } 
@ java.lang.Override public void onRefresh () { try { if ( ( selectedDevicesIds ) == null ) com.example.djordje.seeds.device.Device.showSelected ( this, com.example.djordje.seeds.MainActivity.available_devices_ids, com.example.djordje.seeds.MainActivity.start_date, com.example.djordje.seeds.MainActivity.end_date ) ; else com.example.djordje.seeds.device.Device.showSelected ( this, selectedDevicesIds, com.example.djordje.seeds.MainActivity.start_date, com.example.djordje.seeds.MainActivity.end_date ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void parseSingleType () { try { if ( isNumber ( dooyit.parser.DeleteParser.splitInput[dooyit.parser.DeleteParser.INDEX_SINGLE] ) ) { dooyit.parser.DeleteParser.taskIdForDeletion = java.lang.Integer.parseInt ( dooyit.parser.DeleteParser.splitInput[dooyit.parser.DeleteParser.INDEX_SINGLE].trim () ) ; } else { throw new dooyit.exception.IncorrectInputException ( "Invalid Task ID!" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () { instance = new minesweeper.logic.Game ( 3, 1, 0 ) ; instance.board.getSquare ( 0, 0 ) .setMine () ; try { instance.board.recountMines () ; } catch ( Exception ex ) { ex.printStackTrace () ; } instance.board.addNumbers () ; } 
private java.util.Set<java.util.List<java.lang.Integer>> pobierzPermutacje ( java.lang.Integer[] combination ) { java.util.Set<java.util.List<java.lang.Integer>> setOfArray = new java.util.HashSet<> () ; try { pobierzPermutacje ( combination, 0, setOfArray ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return setOfArray; } 
public int containsAce () { int count = 0; try { for ( com.codeclan.blackjack.Card card : hand ) { if ( card.isAce () ) { count += 1; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return count; } 
private void performHideLaunchScreen () { try { if ( ( mLaunchScreenDialog ) != null ) { mLaunchScreenDialog.dismiss () ; mLaunchScreenDialog = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mReadyWhen ) == ( org.xwalk.core.internal.XWalkLaunchScreenManager.ReadyWhenType.CUSTOM ) ) { mActivity.unregisterReceiver ( mLaunchScreenReadyWhenReceiver ) ; } } 
private void emitNotes ( int level, java.util.List<org.gedcom4j.writer.Note> notes ) throws org.gedcom4j.writer.GedcomWriterException { try { for ( org.gedcom4j.writer.Note n : notes ) { emitNote ( level, n ) ; emitCustomTags ( ( level + 1 ) , n.customTags ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void checkStick ( blackjack.Player player ) { try { if ( ( player.checkHandValue () ) > 21 ) { java.lang.System.out.println ( ( ( player.getName () ) + " is bust!" ) ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onNavigationItemSelected ( @android.support.annotation.NonNull android.view.MenuItem item ) { try { selectDrawerItem ( item ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void start ( edu.wpi.first.wpilibj.SerialPort serial_port ) { this.serial_port = serial_port; m_thread = new java.lang.Thread ( this ) ; try { m_thread.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } stop = false; } 
protected synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { try { objects.put ( obj.valueRef () , new java.lang.ref.WeakReference<org.liquidplayer.webkit.javascriptcore.JSObject> ( obj ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stopLoadAndNoMoreData () { try { if ( mPullLoading ) { mPullLoad = false; mPullLoading = false; recyclerViewFooter.setState ( LFRecyclerViewFooter.STATE_LOADOVER ) ; resetFooterHeight () ; } else { recyclerViewFooter.setState ( LFRecyclerViewFooter.STATE_LOADOVER ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void digest ( com.badlogic.neogenesis.Food food ) { try { biomass += food.getNutrition () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean isReady ( io.druid.indexing.common.actions.TaskActionClient taskActionClient ) throws java.lang.Exception { boolean retVal = super.isReady ( taskActionClient ) ; try { if ( ( lockAcquisitionLatch ) != null ) { lockAcquisitionLatch.countDown () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return retVal; } 
@ java.lang.Override public void onAnimationEnd ( android.animation.Animator animation ) { try { drawer.onAnimationEnd ( animation ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setState ( org.codetwisted.widget.DrawerLayout.STATE_IDLE, 0 ) ; } 
public void setPlayers () { try { gameLogic.createPlayers () ; } catch ( Exception ex ) { ex.printStackTrace () ; } colorForPlayer ( gameLogic.getNumberOfPlayer () ) ; } 
public android.graphics.Rect draw ( android.graphics.Canvas canvas ) { android.graphics.Rect srcRect = getSrcRect () ; try { if ( ( mScrRect ) != null ) canvas.drawBitmap ( bm, srcRect, mScrRect, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return mScrRect; } 
@ java.lang.Override public void onResponse ( org.json.JSONObject response ) { try { getJsonData[0] = response.toString () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void afterBurnin () { try { if ( ( nuMove ) != null ) { nuMove.alwaysSample () ; nuMove.setMinValue ( 0.001 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRED, rollbackFor = java.lang.Exception.class ) private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance, org.iabako.server.serviceimpl.user.User sessionUser, org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack.getFromPayment ( sessionUser, payment, EnterpriseTrackType.receiptTrack ) ; try { addPaymentTrack ( enterpriseBalance, track ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { sendMessageWithPayload ( mMessageEditText.getText () .toString () , FriendlyMessage.MessageType.Text, false, false ) ; try { mMessageEditText.setText ( "" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ net.java.html.json.Function static void changeSP ( final web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model, final java.lang.String data ) { try { if ( ! ( "".equals ( data ) ) ) { model.setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel.changeFP ( model ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test ( dataProvider = "createVersions" ) public void checkVersions ( java.lang.String version, int major, int minor, int patch, long buildNumber, java.lang.String qualifier ) { org.codehaus.mojo.buildhelper.versioning.VersionInformation vi = createVersion ( version ) ; try { assertVersion ( vi, major, minor, patch, buildNumber, qualifier ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setHeader ( java.lang.String header, java.lang.String value ) { if ( null == ( headers ) ) headers = new java.util.HashMap<java.lang.String, java.lang.String> () ; try { headers.put ( header, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void UpdateEmail ( java.lang.String email ) { try { if ( email != null ) ( ( android.widget.TextView ) ( header.findViewById ( R.id.email ) ) ) .setText ( email ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setupConfigFolders () { try { configFolder.mkdirs () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { incrementRoundsStartedEvent () ; android.content.Intent intent = new android.content.Intent ( getApplicationContext () , de.appphil.categories.activities.game.config.GameConfigActivity.class ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { try { if ( ( featureHouseComposer ) != null ) { featureHouseComposer.setUseFuji ( ( ! ( featureHouseComposer.usesFuji () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void onPostExecute ( java.util.ArrayList<java.lang.String> alerts ) { try { caller.asyncResponse ( alerts ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { contratoSelecionado.getListaServicos () .remove ( servicoSelecionado ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void exit () { net.qiujuer.tips.factory.cache.Cache.destroy () ; try { for ( android.app.Activity activity : mActivities ) { if ( ! ( activity.isFinishing () ) ) activity.finish () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void killRequest () { try { if ( ( ( mRequestThread ) != null ) && ( mIsWorking ) ) { mRequestThread.interrupt () ; mIsWorking = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void write ( java.io.DataOutput out ) throws java.io.IOException { try { org.apache.hadoop.io.Text.writeString ( out, candidateRange ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } out.writeLong ( rangeBegin ) ; out.writeLong ( rangeEnd ) ; } 
private net.imagej.legacy.IJ1Helper ij1Helper () { try { if ( ( legacyService ) instanceof net.imagej.legacy.LegacyService ) { ij1Helper = legacyService.getIJ1Helper () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ij1Helper; } 
@ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { try { super.onPrepareOptionsMenu ( menu ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateMenuItem = menu.findItem ( R.id.updateMenuItem ) ; remainingFormsToSyncMenuItem = menu.findItem ( R.id.remainingFormsToSyncMenuItem ) ; return true; } 
@ java.lang.Override public void success ( com.shopify.buy.model.Payment payment ) { try { this.checkout = payment.getCheckout () ; } catch ( Exception ex ) { ex.printStackTrace () ; } callback.success ( checkout ) ; } 
protected void addConnection ( java.util.List<de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D> polygon, de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vertex lastVertex, de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vertex currentVertex ) { de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D vector = de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Factory.newVector2D ( lastVertex, currentVertex ) ; try { polygon.add ( vector ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setAllAvailable () { try { for ( int large = 0; large < 9; large++ ) { for ( int small = 0; small < 9; small++ ) { setAvailable ( large, small ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateFavouriteOfferts ( java.lang.String id ) { com.example.wojciech.groupon.DbUtils.UpdateFavouritesDatabaseAsyncTask bat = new com.example.wojciech.groupon.DbUtils.UpdateFavouritesDatabaseAsyncTask ( mContext ) ; bat.execute ( id ) ; try { updateEvents ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setData ( com.github.mikephil.charting.data.LineData data ) { mLineData = data; mDataSets.addAll ( data.getDataSets () ) ; try { init () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onCancel () { main_activity.yy_playing_msg_dlg = null; try { main_activity.changeShengDao ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addAuthenticationLogEntry ( java.lang.String username, boolean status, java.lang.String message ) { try { db.addLoginEntry ( new postit.shared.AuditLog.LogEntry ( java.lang.System.currentTimeMillis () , EventType.AUTHENTICATE, username, null, status, message ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean addEffect ( com.mygdx.ouyagame.Skill.statusEffect.BaseStatusEffect effect ) { try { effects.add ( effect ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } effect.setListIAmIn ( effects ) ; owner.addActor ( effect ) ; effect.start ( owner ) ; return true; } 
@ java.lang.Override public void changeSpeedFactor ( double newSpeedFactor ) { try { simulationClock.changeSpeedFactor ( newSpeedFactor ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void reduce ( org.apache.hadoop.io.Text key, java.lang.Iterable<org.apache.hadoop.io.Text> values, com.AirTravel.Context context ) throws java.io.IOException, java.lang.InterruptedException { try { ProcessCancelFlightsAndFlightsDelayAndAirlineDelay ( key, values ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView, boolean isChecked ) { try { if ( isChecked ) { incompleteCB.setChecked ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getCurrentlyPlaying () throws java.io.IOException, java.lang.ClassNotFoundException { try { outToServer.writeObject ( "curr" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( java.lang.String ) ( inFromServer.readObject () ) ) ; } 
@ java.lang.Override public void tearDown ( final org.jboss.as.arquillian.container.ManagementClient managementClient ) throws java.lang.Exception { try { org.jboss.as.test.integration.web.rootcontext.RootContextUtil.removeVirtualServer ( managementClient.getControllerClient () , org.jboss.as.test.integration.web.rootcontext.RootContextEarUnitTestCase.HOST ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDetach () { try { super.onDetach () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.i ( com.produce.ciro.bchart4.OrderBookFragment.TAG, "on detach" ) ; } 
public void doSelectComputer ( int num ) { this.computerNum = num; try { this.computerGateway.find ( getComputerNum () , getLaboratory () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void updateRadarDistance ( float newMaxDistance ) { if ( newMaxDistance < 0 ) { return; } synchronized ( com.jmlb0003.prueba3.controlador.ARDataSource.RADIUS_LOCK ) { com.jmlb0003.prueba3.controlador.ARDataSource.sRadius = newMaxDistance; } try { synchronized ( com.jmlb0003.prueba3.controlador.ARDataSource.sZoomLevel ) { com.jmlb0003.prueba3.controlador.ARDataSource.sZoomLevel = com.jmlb0003.prueba3.controlador.ARDataSource.FORMAT.format ( newMaxDistance ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean settingsFileExist () { try { if ( this.settingsFile.exists () ) { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void unwatchDirectory ( java.lang.String directory ) { try { watchedInternalDirectories.remove ( directory ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { try { if ( ( args.length ) == 0 ) { java.lang.System.out.printf ( "Hello there!\n" ) ; } else { java.lang.System.out.printf ( "Hello there, %s!\n", args[ ( ( args.length ) - 1 ) ] ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onMapTimedDistance ( java.lang.String time ) { android.widget.TextView timeView; try { if ( ( getView () ) != null ) { timeView = ( ( android.widget.TextView ) ( getView () .findViewById ( R.id.timeToTargetTextView ) ) ) ; timeView.setText ( time ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void onStartAnimation () { android.view.View item = mFixedItem.get ( itemId ) ; try { itemAutoMove ( item, mPerTranslateY, 2.0F ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } preItemId = itemId; } 
public boolean analyze () throws java.io.IOException, java.net.URISyntaxException { boolean success = false; int faceNum = Utils.FaceRec.getFaceNum ( imageURL ) ; try { Utils.FaceRec.faceAnalyze ( imageURL, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( faceNum ) ; success = true; return success; } 
@ java.lang.Override public void onAdded () { try { for ( java.lang.Integer sk : base.data.getCanLearnSkillList () ) { if ( sk != 0 ) { this.addWidget ( new cn.academy.core.client.gui.dev.PageSkills.SkillList.SkillElement ( sk ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onAdded () ; } 
@ org.junit.Test ( expected = java.lang.IllegalArgumentException.class ) public void testIllegalIndex () { kuzzle.setSuperDefaultIndex ( null ) ; try { kuzzle.dataCollectionFactory ( "collection", null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void end () { timer.stop () ; try { intake.stop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void objetButtonActionPerformed ( java.awt.event.ActionEvent evt ) { ObjectLabEnterpriseSoftware.PrinterBuildView Build = new ObjectLabEnterpriseSoftware.PrinterBuildView () ; try { Build.startMakeBuildProcess () ; } catch ( Exception ex ) { ex.printStackTrace () ; } dispose () ; } 
public static void log ( net.dv8tion.jda.core.entities.Message m ) { try { if ( ! ( com.tisawesomeness.minecord.Config.getLogChannel () .equals ( "0" ) ) ) { Bot.jda.getTextChannelById ( com.tisawesomeness.minecord.Config.getLogChannel () ) .sendMessage ( m ) .queue () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void displayImage ( android.content.Context context, java.lang.Object path, android.widget.ImageView imageView ) { try { com.bumptech.glide.Glide.with ( context ) .load ( path ) .crossFade () .into ( imageView ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { android.util.Log.v ( "dimamir999", "handle click on add photo button" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } presenter.addNewPhoto ( photoView.getDrawable () ) ; } 
@ org.junit.Test public void testGetIdCardFromDBById () throws com.fasterxml.jackson.core.JsonProcessingException, java.sql.SQLException { java.util.List<org.qimei.training.pojo.IdCard> empIdCardData = dbHelper.getIdCardById ( 1 ) ; try { test.EmployeeManagementDBTests.logger.info ( test.EmployeeManagementDBTests.mapper.writeValueAsString ( empIdCardData ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assert empIdCardData != null; } 
private static void setItemVisibility ( android.app.Activity activity, int labelId, int spacerId, int valueId, boolean show ) { try { org.cowboycoders.cyclismo.util.StatsUtils.setItemVisibility ( activity, labelId, spacerId, valueId, show, show ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess () { try { disconnectAndClose ( true, new nl.dobots.bluenet.ble.core.callbacks.IStatusCallback () { @java.lang.Override public void onSuccess () { callback.onSuccess () ; } @java.lang.Override public void onError ( int error ) { callback.onSuccess () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPrepareDialogBuilder ( final android.app.AlertDialog.Builder builder ) { try { builder.setPositiveButton ( android.R.string.ok, this ) .setNegativeButton ( android.R.string.cancel, this ) .setNeutralButton ( R.string.button_default, this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void hideAllViewExceptKeyBoard () { try { for ( int i = 0; i < ( showViewList.size () ) ; i++ ) { hideView ( showViewList.get ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void preserveManagement ( java.util.Hashtable<java.lang.String, java.lang.Object> management ) { if ( ( this.management ) == null ) { this.management = management; } try { serializeAndStore ( this.management, model.UserSettings.FILEPATH_MANAGEMENT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setNextButtonEnabled ( boolean enabled ) { try { nextButton.setEnabled ( enabled ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { super.onResume () ; try { takeView () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handleResult ( java.lang.String data ) { try { updateServerUserData ( localProfile, true, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void d ( java.lang.String tag, java.lang.Object msg ) { try { if ( ( net.opentracker.android.LogWrapper.m_logLevel.compareTo ( net.opentracker.android.LogWrapper.LogLevel.kDebug ) ) <= 0 ) android.util.Log.d ( tag, msg.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void restartTango () { try { if ( ( mParameterNode ) != null ) mParameterNode.setPreferencesFromParameterServer () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mTangoServiceClientNode.callTangoConnectService ( TangoConnectRequest.RECONNECT ) ; } 
public synchronized soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered.putIfAbsent ( s, numStr ) ; try { if ( ret == null ) { add ( numStr ) ; return numStr; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ret; } 
public boolean isFull ( int i, int j ) { try { if ( isOpen ( i, j ) ) { return uf.connected ( getIndex ( i, j ) , sink ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void execute () { try { for ( com.intellij.openapi.module.Module module : toRemove ) { module.clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addError ( org.dnal.core.ErrorType errType, java.lang.String message ) { org.dnal.core.NewErrorMessage nem = new org.dnal.core.NewErrorMessage () ; try { nem.setErrorName ( errType.name () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } nem.setMessage ( message ) ; addError ( nem ) ; } 
@ org.junit.Test public void testIsFolderEmpty () throws eionet.meta.service.ServiceException { try { assertFalse ( "Folder empty", vocabularyService.isFolderEmpty ( 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void saveProfile ( com.mealtime.bean.UserMaster userMaster ) { userMaster.setUpdatedDate ( new java.util.Date () ) ; try { userMaster.setIsActive ( "YES" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } userMasterDAO.update ( userMaster ) ; } 
@ org.springframework.context.annotation.Bean org.springframework.core.convert.ConversionService conversionService () { org.springframework.core.convert.support.DefaultConversionService registry = new org.springframework.core.convert.support.DefaultConversionService () ; try { registry.addConverter ( new org.molgenis.data.convert.StringToDateConverter () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return registry; } 
@ java.lang.Override public void run () { listAdapter.notifyDataSetChanged () ; try { if ( ( checkpoints.size () ) > 0 ) { recyclerView.smoothScrollToPosition ( ( ( checkpoints.size () ) - 1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public long increaseCount () { ( this.loggingCount ) ++; try { this.setLastUpdated ( new java.util.Date () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this.loggingCount; } 
private void notifyChangedLessonRange ( int changedPosition ) { try { if ( mLatestLessonFirst ) notifyItemRangeChanged ( 0, changedPosition ) ; else { notifyItemChanged ( 0 ) ; notifyItemRangeChanged ( changedPosition, ( ( getItemCount () ) - changedPosition ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateControllers ( float delta ) { playerController.update ( delta, gameState ) ; try { projectileController.update ( delta, gameState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void update ( org.newdawn.slick.GameContainer container, int delta ) { try { for ( int i = 0; i < delta; i++ ) { _input.update ( container, this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void scrollToNearestPosition () { try { scrollToPosition ( ( ( int ) ( ( ( getFoldRotation () ) + 90.0F ) / 180.0F ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { try { quitButton.setDisable ( disabled ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mainMenuButton.setDisable ( disabled ) ; } 
public void mouseEntered ( java.awt.event.MouseEvent event ) { try { requestFocusInWindow () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String asStringTree () { java.lang.String result = tree.toStringTree ( parser ) ; try { com.whelanlabs.gameRuleBacktracker.Game.logger.debug ( ( "App.getStringTree () result = " + result ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public void passInitialMessages () { double[] identityMessage = new double[] { 1.0, 1.0, 1.0, 1.0 }; try { for ( node.Vertex n : neighborList ) { n.receiveMessage ( new message.Message ( this, identityMessage ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void stopManagedResources () { stopManagedResourceFlowElements ( this.flowConfiguration.getManagedResourceFlowElements () ) ; try { if ( ( this.exclusionFlowConfiguration ) != null ) { stopManagedResourceFlowElements ( this.exclusionFlowConfiguration.getManagedResourceFlowElements () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private org.hibernate.Session getParallelSession () { try { if ( ( ( parallelToSynchronizationSession ) == null ) && ( ( sessionFactory ) != null ) ) { parallelToSynchronizationSession = sessionFactory.openSession () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return parallelToSynchronizationSession; } 
@ java.lang.Override public void stop () { try { java.lang.System.exit ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void onAccountCreated ( android.accounts.Account newAccount, android.content.Context context ) { com.upenn.chriswang1990.sunshine.sync.SunshineSyncAdapter.configurePeriodicSync ( context, com.upenn.chriswang1990.sunshine.sync.SunshineSyncAdapter.SYNC_INTERVAL, com.upenn.chriswang1990.sunshine.sync.SunshineSyncAdapter.SYNC_FLEXTIME ) ; try { android.content.ContentResolver.setSyncAutomatically ( newAccount, context.getString ( R.string.content_authority ) , true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case android.R.id.home: showLogoutDialog () ; return true; default: return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void printList ( java.util.List valueList ) { try { for ( java.lang.Object value : valueList ) { java.lang.System.out.println ( value.toString () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setNewData ( java.util.List<T> data ) { this.mData = data; if ( ( mRequestLoadMoreListener ) != null ) { mNextLoadEnable = true; } mLastPosition = -1; try { com.chad.library.adapter.base.BaseQuickAdapter.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDismiss ( android.content.DialogInterface dialog ) { try { if ( isDataSet ) { com.example.umyhpuscdi.danceapp15.CreateEditCourse.buttonTime.setText ( chosenTime ) ; } else { com.example.umyhpuscdi.danceapp15.CreateEditCourse.buttonTime.setText ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void deleteMetadata ( final org.eclipse.hawkbit.repository.model.DistributionSet entity, final java.lang.String key, final java.lang.String value ) { try { distributionSetManagement.deleteDistributionSetMetadata ( entity, key ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addSpeed ( float speed, float torque ) { try { this.addSpeed ( speed, torque, new java.util.HashSet<java.lang.String> () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void notifyDataSetChanged () { currentCity = ""; mAdapter.notifyDataSetChanged () ; try { if ( ( mDownBtn ) != null ) { mDownBtn.setText ( ( mBinder.isDownloading () ? R.string.action_download_pause : R.string.action_download_start ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { allAnnotationsMapView.addAnnotations ( this.photos ) ; updateVisibleAnnotations () ; try { loadingStatus.removeFromSuperviewWithFade () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { android.support.v7.app.ActionBar actionBar = getSupportActionBar () ; try { if ( actionBar != null ) getSupportActionBar () .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected boolean onClicked ( @javax.annotation.Nonnull final com.kamesuta.mc.bnnwidget.WEvent ev, @javax.annotation.Nonnull final com.kamesuta.mc.bnnwidget.position.Area pgp, @javax.annotation.Nonnull final com.kamesuta.mc.bnnwidget.position.Point p, final int button ) { try { this.box.add ( this.widget.build () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public boolean sqlMapUpdateByExampleWithBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element, org.mybatis.generator.api.IntrospectedTable introspectedTable ) { try { resetUpdateXmlElementTableName ( element ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return super.sqlMapUpdateByExampleWithBLOBsElementGenerated ( element, introspectedTable ) ; } 
public static com.krishagni.catissueplus.core.biospecimen.domain.SpecimenShipmentReceivedEvent createForShipmentItem ( com.krishagni.catissueplus.core.administrative.domain.ShipmentItem item ) { com.krishagni.catissueplus.core.biospecimen.domain.SpecimenShipmentReceivedEvent event = new com.krishagni.catissueplus.core.biospecimen.domain.SpecimenShipmentReceivedEvent ( item.getSpecimen () ) ; try { event.setId ( item.getId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return event; } 
private static boolean isValidOtherDigitGrouping ( java.lang.String[] splitCCN ) { try { if ( ( splitCCN.length ) == 1 ) { return true; } else { return ( splitCCN[0].length () ) == 4; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
static java.lang.String boolNumeric ( java.lang.String boolValue ) { try { if ( boolValue.equals ( "true" ) ) { return "1"; } else { return "0"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public cz.lidinsky.tools.ToStringBuilder append ( int value ) { try { style.appendValue ( sb, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
private void showKeyboard ( android.view.Window window ) { try { window.setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void setTargetPassword () { try { java.lang.System.out.println ( "Please enter the target password..." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.targetPassword = userInputString () ; } 
@ org.junit.Test public void validateRomanNumber () { try { org.junit.Assert.assertEquals ( com.bitwiseglobal.dart.Converter.validateRomanNumber ( "XII" ) , 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void putString ( java.lang.CharSequence str ) { try { for ( int s = 0; s < ( str.length () ) ; s++ ) { putChar ( str.charAt ( s ) , 0, false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void reset ( java.util.List<com.github.gfx.helium.model.EpitomeEntry> list ) { try { clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.github.gfx.helium.model.EpitomeEntry entry : list ) { if ( entry.hasKnownScheme () ) { addItem ( entry ) ; } } notifyDataSetChanged () ; } 
public void handle_next_button ( javafx.event.ActionEvent e ) { try { tabs.getSelectionModel () .select ( ( ++ ( tabIndex ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void dropOffPassenger ( int taxi, int destination ) { try { addToMinuteOutput ( ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { try { mPlayer.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void finalize () throws java.lang.Throwable { try { super.finalize () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ! ( isReleased ) ) { android.util.Log.w ( TAG, ( ( "AnyMemoDBOpenHelper for db " + ( dbPath ) ) + " is not released before being GCed. This class must be explicitly released! Force releasing now." ) ) ; org.liberty.android.fantastischmemo.common.AnyMemoDBOpenHelperManager.forceRelease ( dbPath ) ; } } 
@ java.lang.Override public org.eclipse.cdt.managedbuilder.core.IInputOrder getInputOrder ( java.lang.String path ) { try { for ( org.eclipse.cdt.managedbuilder.internal.core.InputOrder io : getInputOrderList () ) { if ( ( path.compareToIgnoreCase ( io.getPath () ) ) == 0 ) { return io; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onVisibilityChanged ( boolean visible ) { handler.removeCallbacks ( drawRunner ) ; this.visible = visible; try { if ( visible ) { handler.post ( drawRunner ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setSessionOwnership ( java.lang.String session, java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool.buildWSSessionKey ( pSessionId, session ) ; try { org.scg.db.DB.JEDIS.set ( skey, pSessionId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.scg.db.DB.JEDIS.expire ( skey, org.scg.db.DB.PROP.getRedisDefaultSessionExpiration () ) ; } 
@ java.lang.Override protected void onTransportFailure ( java.lang.String oldTransportName, java.lang.String newTransportName, java.lang.Throwable failure ) { org.junit.Assert.assertEquals ( longPollingTransport.getName () , oldTransportName ) ; try { org.junit.Assert.assertEquals ( longPollingTransport.getName () , newTransportName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } failureLatch.countDown () ; } 
@ java.lang.Override public void run () { try { if ( ( mCoverView ) != null ) { context.getNativeModule ( com.facebook.react.uimanager.UIManagerModule.class ) .updateNodeSize ( mCoverView.getId () , coverViewWidth, coverViewHeight ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onTabClick ( int index ) { try { setCurrentItem ( index, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.devicehive.model.OAuthGrant getById ( java.lang.Long grantId ) { com.devicehive.model.OAuthGrant grant = find ( grantId ) ; try { if ( grant != null ) { grant = restoreRefs ( grant, null, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return grant; } 
public void hit () { hit = true; try { ship.incrementHitCount () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { try { for ( org.dcache.webadmin.view.util.SelectableWrapper<org.dcache.webadmin.view.beans.ActiveTransfersBean> wrapper : _transfers ) { wrapper.setSelected ( selected ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<java.lang.String> getAllCombinations ( java.lang.String phoneNumber ) { java.util.List<java.lang.String> combos = new java.util.LinkedList<> () ; try { generateCombosHelper ( combos, "", phoneNumber ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return combos; } 
private void submitForm ( final jd.parser.html.Form form ) throws java.lang.Exception { try { submitForm ( br, form, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showTimePickButton () { try { _timeText.setVisibility ( View.VISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } _timeSelectContainer.setVisibility ( View.VISIBLE ) ; _timeSelectContainer.setOnClickListener ( this ) ; } 
@ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler, org.jsoup.select.Elements elements, org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { try { checkChildElementPresence ( childTextualElementNames, elements, testSolutionHandler ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String resolveMessageIfNotSet ( java.lang.String message, java.lang.Throwable cause ) { try { if ( message == null ) { if ( cause == null ) { message = "Unknown"; } else { message = cause.getMessage () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return message; } 
public org.libreplan.web.resources.worker.LocalizationsController getLocalizations () { try { if ( workerModel.isCreating () ) { return localizationsForCreationController; } } catch ( Exception ex ) { ex.printStackTrace () ; } return localizationsForEditionController; } 
public void dealData () { recordHotSpot () ; dealColdData () ; try { currentHotSpotSet.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { editCheckBox ( e, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { org.mm.cellfie.ui.view.TransformationExpressionEditorPanel editorPanel = new org.mm.cellfie.ui.view.TransformationExpressionEditorPanel () ; try { editorPanel.setSheetNames ( container.getActiveWorkbook () .getSheetNames () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } showMappingEditorDialog ( editorPanel, ( -1 ) ) ; } 
@ org.junit.Test public void testErrors () { addToDataModel ( "x", 1 ) ; assertErrorContains ( "${'${noSuchVar}'}", org.apache.freemarker.core.InvalidReferenceException.class, "missing", "noSuchVar" ) ; try { assertErrorContains ( "${'${x/0}'}", "zero" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.CharSequence getPageTitle ( int position ) { try { if ( position < ( com.podraza.android.gaogao.gaogao.MainActivity.todos.size () ) ) { return com.podraza.android.gaogao.gaogao.MainActivity.todos.get ( position ) .getName () ; } else return null; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { try { beatsInterval.setValue ( ( 60.0 / ( beatsSlider.getValue () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void leave () { mUsername = null; try { mSocket.disconnect () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mSocket.connect () ; startSignIn () ; } 
@ java.lang.Override public void drawRectangle ( int x, int y, int width, int height ) { try { component.getGraphics () .drawRect ( x, y, ( width - 1 ) , ( height - 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface, int i ) { try { dialogInterface.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String format ( java.util.Date firstPostedAt ) { java.text.SimpleDateFormat fmt = new java.text.SimpleDateFormat ( "dd. MMMMM yyyy - HH:mm" ) ; try { if ( firstPostedAt != null ) { return fmt.format ( firstPostedAt ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return "<date unknown>"; } 
@ java.lang.Override public void onConnectionSuspended ( int i ) { try { android.util.Log.w ( name.chadschultz.nearbyapidemo.MainActivity.TAG, ( ( "onConnectionSuspended ( " + i ) + " ) " ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testLookLimitPass () { try { assertEquals ( true, server.logic.tables.LoanTable.getInstance () .looklimit ( 0 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.websocket.OnError public void onErrorReceived ( java.lang.Throwable t ) { try { java.lang.System.out.println ( "onErrorReceived Called. Halting all motion. " ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } halt ( null ) ; } 
@ org.junit.Test public void getDriverTest () { try { driver.setPoints ( 10 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } driver2.setPoints ( 15 ) ; driver4.setPoints ( 25 ) ; assertEquals ( driver4, season.getDriver ( 0 ) ) ; } 
public static cn.rui.chm.SharpSystem.HhpOption optionNameOf ( java.lang.String optionName ) { try { for ( cn.rui.chm.SharpSystem.HhpOption hhpOption : cn.rui.chm.SharpSystem.HhpOption.values () ) { if ( hhpOption.optionName.equals ( optionName ) ) { return hhpOption; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override protected void onStop () { super.onStop () ; try { if ( mConnection.isBound () ) { unbindService ( mConnection ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void borrarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { try { o.setFileLength ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } o.setFileName ( null ) ; } 
@ java.lang.Override protected void initialize () { motor.reset () ; try { motor.enableMC () ; } catch ( Exception ex ) { ex.printStackTrace () ; } motor.setPosition ( position ) ; } 
public static void main ( java.lang.String[] args ) throws java.lang.CloneNotSupportedException { RootedTree tree1 = new RootedTree ( 10000 ) ; RootedTree tree2 = new RootedTree ( tree1 ) ; try { java.lang.System.out.println ( AHUalgorithm.getResult ( tree1, tree2 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String listen () throws java.io.IOException { try { while ( true ) { java.lang.String message = in.readLine () ; if ( ( message != null ) && ( message.startsWith ( "MOVE" ) ) ) return message; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void assertPrime ( boolean condition ) { try { assertTrue ( "Should be prime", condition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { if ( ( dataSource ) == null ) { dataSource = MainActivity.dataSource; dataSource.deleteAllThrows () ; addDemoThrows () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { mUserFavoriteViewModel.deleteMovieById ( mMovieId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeTileTabKey ( mapEditor.application.main_part.app_utils.models.TabKey key ) { try { if ( ( key != null ) && ( openedTileTabs.contains ( key ) ) ) openedTileTabs.remove ( key ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { super.onResume () ; try { android.util.Log.i ( com.playxiangqi.hoxchess.MainActivity.PlaceholderFragment.TAG, "onResume..." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.playxiangqi.hoxchess.MainActivity activity = ( ( com.playxiangqi.hoxchess.MainActivity ) ( getActivity () ) ) ; activity.onBoardViewResume ( activity ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_location_armory ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void notifyRunInBackground ( com.wangjie.androidbucket.services.network.HippoResponse<T> response ) { try { if ( response.isSuccess () ) { if ( ( listener ) != null ) listener.onResponseInBackground ( response.getResult () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void translateUpRel ( int dy ) { try { if ( isFirst () ) { translateUp ( dy ) ; } else { translateAbs ( 0, ( -dy ) ) ; prevNode () .translateUpRel ( dy ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { toggleNodeMode () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest, int flags ) { dest.writeValue ( item ) ; dest.writeValue ( getStartTime () ) ; try { dest.writeValue ( getEndTime () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void toast ( android.content.Context context, final java.lang.String message, final int length ) { try { android.widget.Toast.makeText ( context, message, length ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handle ( long timestamp ) { try { if ( ( last_time ) > 0 ) { dt = timestamp - ( last_time ) ; updateWorld ( dt ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } last_time = timestamp; } 
@ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { try { while ( Pirates.pressedKeys.contains ( e.getKeyCode () ) ) { Pirates.pressedKeys.remove ( e.getKeyCode () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setLng ( java.lang.String lng ) { try { this.lng = java.lang.Double.valueOf ( lng ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void activate ( net.minecraft.item.ItemStack tokenIS ) { try { entityData.setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN, tokenIS ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void readContactInBackground () { try { new java.lang.Thread () { public void run () { searchForContactsAndDisplay () ; displayHandler.sendEmptyMessage ( 0 ) ; } }.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ net.minecraftforge.fml.common.Mod.EventHandler public void Init ( net.minecraftforge.fml.common.event.FMLInitializationEvent event ) { try { for ( cf.mcdTeam.Immersion.utils.IModPart part : partlist ) { part.Init () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } NetworkRegistry.INSTANCE.registerGuiHandler ( this, new cf.mcdTeam.Immersion.utils.GuiHandler () ) ; } 
private void setListViewAdapter () { try { if ( ( m_listViewAdapter ) == null ) { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this, getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void deleteFile ( java.io.File file ) throws java.io.IOException { try { if ( ( file != null ) && ( file.exists () ) ) { org.apache.commons.io.FileUtils.forceDelete ( file ) ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new java.io.IOException ( " ( Method deleteFileIfExist ) file is null or not exist." ) ; } 
private void newPAssError () { try { android.widget.Toast.makeText ( getBaseContext () , "New passwords don't match!", Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this, com.example.recleague.PostGame.class ) ; try { startActivity ( i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { super.onResume () ; init () ; de.beacon.tom.viibenav_radiomapper.model.BluetoothScan.getBtScan ( this ) .onResumeOperation () ; try { android.util.Log.d ( de.beacon.tom.viibenav_radiomapper.controller.InfoActivity.TAG, "RESUMING IN INFO" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void cool ( boolean on ) { try { if ( on != ( coolOn ) ) { hvac.cool ( on ) ; if ( on == false ) setFanCoolOff ( 3 ) ; coolOn = on; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void start () { try { stop.set ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.transaction.annotation.Transactional public br.com.eits.missoes.domain.entity.User insertUser ( br.com.eits.missoes.domain.entity.User user ) { try { if ( ( user.getId () ) == null ) { user.setPassword ( encoder.encodePassword ( user.getPassword () , "saltOregon" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return userRepository.saveAndFlush ( user ) ; } 
public void onWardrobeItemClicked ( int type, de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { try { startActivity ( de.ur.mi.fashionapp.util.LinkService.getDetailIntent ( this, type, item, wardrobeID, null, true ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { mCurrentSelectedMarkerClustered = false; try { mCurrentSelectedMarker = addSelectedMarker ( mCurrentSelectedItem ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.socrata.builders.DatasetBuilder addColumn ( com.socrata.builders.Column column ) { try { columns.add ( column ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ org.junit.Test public void testAddNote_invalid () throws java.lang.Exception { this.grads.setUser ( "rbob" ) ; java.lang.String studentId = "mhunt"; java.lang.String note = "this is a testing note"; exception.expect ( edu.sc.csce740.exception.LoggedInUserDoesNotHavePermissionException.class ) ; try { grads.addNote ( studentId, note, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void refresh () { try { request ( url ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public long calculateTotalCost () { long totalDiscounts = 0; try { for ( int i = 0; i < ( discounts.size () ) ; i++ ) totalDiscounts += discounts.get ( i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( totalCost ) - totalDiscounts; } 
@ java.lang.Override protected void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testEqualsAttributeJointInverse () { datastructures.AttributeJoint a = new datastructures.AttributeJoint () ; try { assertFalse ( mainAttributeJoint.equals ( a ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { sharedRadio.setChecked ( false ) ; try { edit.remove ( com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.SHARED_BATHROOM ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } edit.remove ( com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.PRIVATE_BATHROOM ) ; edit.putBoolean ( com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.PRIVATE_BATHROOM, true ) ; edit.apply () ; } 
public void monsterClicked () { int gold; gold = mapPres.damageMonster ( playerModel.getDamage () ) ; try { if ( gold > 0 ) { playerModel.setMoney ( ( ( playerModel.getMoney () ) + gold ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setPassword ( java.lang.String password ) { try { if ( ! ( edu.mum.onlinetest.utils.Based64Util.isValidMD5 ( password ) ) ) password = edu.mum.onlinetest.utils.Based64Util.md5 ( password ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.password = password; } 
public void preselectCamelVersionForRuntime ( java.lang.String runtimeCamelVersion ) { try { if ( org.fusesource.ide.foundation.ui.util.Widgets.isDisposed ( camelVersionCombo ) ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( org.fusesource.ide.projecttemplates.wizards.pages.FuseIntegrationProjectWizardRuntimeAndCamelPage.UNKNOWN_CAMEL_VERSION.equals ( runtimeCamelVersion ) ) { camelVersionCombo.setEnabled ( true ) ; } else { camelVersionCombo.setText ( runtimeCamelVersion ) ; } } 
public void addToAllFutureMsg ( com.friends.stay.keepintouch.Msg m ) { com.friends.stay.keepintouch.Contact contact = findContactByMsg ( m ) ; try { allFutureMessages.add ( m ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( contact != null ) { contact.getFutureMessages () .add ( m ) ; } } 
@ java.lang.Override public android.os.IBinder onBind ( android.content.Intent intent ) { try { if ( ( mp ) == null ) { mp = dalbers.com.noise.LoopMediaPlayer.create ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return mBinder; } 
public static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException, java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle, youtubeReference ) ; try { dt.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } application.FXController.YoutubeURL.clear () ; } 
public void addCheckbox ( @android.support.annotation.StringRes int titleId, @android.support.annotation.StringRes int commentId, java.lang.String property, android.view.View.OnClickListener listener ) { try { addModel ( com.kaliturin.blacklist.adapters.SettingsArrayAdapter.Model.CHECKBOX, getString ( titleId ) , getString ( commentId ) , property, listener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { try { if ( ( t.canceled ) > 0 ) { scalingTimes.add ( new ca.team2706.scouting.mcmergemanager.datamodels.ScalingTime ( t.upTimer.currentTime () , t.canceled ) ) ; t.canceled = 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { meta.setType ( "image" ) ; try { takePhoto () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void update () { fruitPanel.update () ; try { statusPanel.repaint () ; } catch ( Exception ex ) { ex.printStackTrace () ; } fruitFrame.repaint () ; validate () ; } 
public void setCacheable ( java.lang.Integer _seconds ) { int seconds = 172800; if ( _seconds != null ) { seconds = _seconds.intValue () ; } java.lang.String cacheControl = ( "max-age=" + seconds ) + ", public, must-revalidate"; try { addHeader ( "Cache-Control", cacheControl ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean jj_3R_28 () { try { if ( jj_scan_token ( org.sbml.jsbml.text.parser.MODULO ) ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ org.junit.Test public void shouldListOptionCorrectly () throws java.lang.Exception { try { org.junit.Assert.assertEquals ( ( "Please select an option :\n" + ( ( ( "\t[1]: List books\n" + "\t[2]: Check out Book\n" ) + "\t[3]: Return book\n" ) + "\t[4]: Quit\n" ) ) , app.getOptionList () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void saveHistory ( android.content.Context context, java.util.LinkedHashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.String>> histMap ) throws java.io.IOException { try { writeJsonFile ( context, mapToJson ( histMap ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void chatUpdate ( java.lang.String text ) { try { taChat.append ( ( text + "\n" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.annotation.SuppressLint ( value = "NewApi" ) @java.lang.Override protected void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mHandlerThread ) != null ) { mHandlerThread.quit () ; } android.util.Log.v ( TAG, "onDestroy" ) ; } 
public void setValue ( java.lang.String v ) { value = v; try { this.column_name = org.smap.sdal.Utilities.GeneralUtilityMethods.cleanName ( v, false, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void appendLine ( java.lang.String aLine ) { if ( ( out ) == null ) return; util.trace.Tracer.info ( this, aLine ) ; out.println ( aLine ) ; try { out.flush () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void despawn ( int UID, net.citizensnpcs.api.event.NPCRemoveEvent.NPCRemoveReason reason ) { if ( ( net.citizensnpcs.resources.npclib.NPCManager.list.get ( UID ) ) == null ) return; try { net.citizensnpcs.resources.npclib.NPCManager.GlobalUIDs.remove ( UID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } net.citizensnpcs.resources.npclib.NPCSpawner.despawnNPC ( net.citizensnpcs.resources.npclib.NPCManager.list.remove ( UID ) , reason ) ; } 
@ java.lang.Override public void onEnable () { try { plugin.getPluginManager () .registerEvent ( this, TweakCartEvent.Sign.VehicleCollidesWithSignEvent, "elevator" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } parser = new net.tweakcraft.tweakcart2elevators.ElevatorParser () ; plugin.log ( "Elevators enabled" ) ; } 
@ java.lang.Override public void onCancelled ( com.google.firebase.database.DatabaseError databaseError ) { try { android.util.Log.w ( "Event Listener", "loadHunt:onCancelled", databaseError.toException () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onRefresh () { android.util.Log.d ( name.parker.alon.viewerforgithub.view.InfoActivity.LOG_TAG, "PullToRefresh" ) ; swipeLayout.setRefreshing ( true ) ; try { loadData ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setUpsResponses ( java.lang.String upsResponses ) { try { this.upsResponses.add ( upsResponses ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( this.upsResponseCounter ) ++; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startid ) { try { fetchRssItemsFromResources () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.startid = startid; return START_NOT_STICKY; } 
@ java.lang.Override public void error ( java.lang.Throwable e ) { finish () ; rx.Subscriber<? super io.relayr.java.model.User> subscriber = io.relayr.android.RelayrSdk.getLoginSubscriber () ; try { if ( subscriber != null ) subscriber.onError ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void goResetPassword () { android.content.Intent intent = new android.content.Intent ( getActivity () , com.belatrixsf.connect.ui.resetpassword.ResetPasswordActivity.class ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addQualification () { if ( ( choosenQualifications ) == null ) choosenQualifications = new java.util.ArrayList<> () ; try { choosenQualifications.add ( qualificationService.addQualification ( school, degree ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } school = null; degree = null; } 
@ java.lang.Override public void onDestroy () { updateUI ( null ) ; try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean checkCopyOut ( Copy c ) { c.setOutTo ( this ) ; try { this.copiesOut.add ( c ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void addCell ( int x, int y ) { try { this.board.getCellAt ( x, y ) .setCurrentState ( CellState.ALIVE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onError () { try { android.widget.Toast.makeText ( this.context, R.string.network_error, Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void button2ActionPerformed ( java.awt.event.ActionEvent e ) { try { new PutOutStorage () .setVisible ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { try { forkjoinInfoList.add ( forkjoinInfo ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { show_alert ( "Upload Failed", ( "Unable to upload file to IRCCloud." + ( ( error ) != null ? "\n\n" + ( error ) : "" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void add ( greymerk.roguelike.treasure.loot.LootRuleManager other ) { if ( other == null ) return; try { this.rules.addAll ( other.rules ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet.getPayload () ; try { if ( message instanceof client.TextMessage ) { java.lang.System.out.println ( ( ( client.TextMessage ) ( message ) ) .getMessage () ) ; acknowledgePacket ( packet ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { try { deleteSelectedSites () ; } catch ( Exception ex ) { ex.printStackTrace () ; } disableActionMode () ; } 
public void turn_encoder ( double power, double distance ) { double start = getEncoderAvg () ; while ( ( java.lang.Math.abs ( ( ( getEncoderAvg () ) - start ) ) ) < distance ) { turn_basic ( power ) ; } try { stop_motors () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void dialogDismiss ( android.content.DialogInterface dialog ) { android.util.Log.e ( "CustomVersionDialogActi", "dialog dismiss 回调" ) ; try { if ( com.allenliu.sample.CustomVersionDialogActivity.isForceUpdate ) { MainActivity.mainActivity.finish () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void hideProgressDialog () { try { if ( ( ( progressDialog ) != null ) && ( progressDialog.isShowing () ) ) { progressDialog.hide () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void registerNetworkReceiver () { android.content.IntentFilter filter = new android.content.IntentFilter () ; filter.addAction ( ConnectivityManager.CONNECTIVITY_ACTION ) ; try { registerReceiver ( mNetworkStateReceiver, filter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void writeTo ( final org.jboss.netty.buffer.ChannelBuffer data ) { super.writeTo ( data ) ; try { data.writeInt ( this.markerId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } data.writeInt ( this.markerType.getValue () ) ; this.markerData.writeTo ( data ) ; } 
@ java.lang.Override public void doSumWeek ( int timeid ) { assessDao.weekjisuanpianqu ( timeid ) ; try { assessDao.weekSumWuye ( timeid ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void sendSliderToPhoto ( final com.jfixby.r3.api.ui.unit.animation.OnAnimationDoneListener animation_done_listener ) { try { this.animator.sendSliderToPhoto ( animation_done_listener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.state = com.jfixby.telecam.ui.input.slider.Slider.PHOTO; } 
@ org.junit.Test public void testConstructorExecutesOkIfTableNameSpecified () { com.buabook.kdb.data.KdbTable table = new com.buabook.kdb.data.KdbTable ( "my-test-table" ) ; try { org.junit.Assert.assertThat ( table, is ( not ( nullValue () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void ANDLW ( int k ) { int result = ( getWRegister () ) & k; if ( result == 0 ) { setSTATUSbitZ ( 1 ) ; } try { setWRegister ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.annotation.PostConstruct private void init () { setVnfmHelper () ; setup () ; try { executor = java.util.concurrent.Executors.newFixedThreadPool ( java.lang.Integer.parseInt ( org.openbaton.common.vnfm_sdk.AbstractVnfm.properties.getProperty ( "concurrency", "15" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addOwner ( mff.mapGenereator.Room owner ) { try { if ( ( owner != null ) && ( ! ( owners.contains ( owner ) ) ) ) { owners.add ( owner ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void initialize ( java.lang.String propertiesFile ) { try { if ( propertiesFile != null ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader.readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties.getPropertyAsSet ( "packagesToInstrument" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setPercentTolerance ( double p ) { try { if ( ( GetActiveController () ) == null ) return; } catch ( Exception ex ) { ex.printStackTrace () ; } GetActiveController () .setPercentTolerance ( p ) ; } 
public void deleteUser ( final org.jahia.services.content.rules.DeletedNodeFact node ) throws javax.jcr.RepositoryException { try { deleteUser ( node.getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void releaseResources () { try { if ( null != ( ebean ) ) { ebean.shutdown ( false, false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.openbaton.nfvo.api.RequestMapping ( value = "{id}/vnfrecords/{idVnf}/vdunits/{idVdu}/vnfcinstances", method = RequestMethod.DELETE ) @org.openbaton.nfvo.api.ResponseStatus ( value = org.springframework.http.HttpStatus.NO_CONTENT ) public void deleteVNFCInstance ( @org.openbaton.nfvo.api.PathVariable ( value = "id" ) java.lang.String id, @org.openbaton.nfvo.api.PathVariable ( value = "idVnf" ) java.lang.String idVnf, @org.openbaton.nfvo.api.PathVariable ( value = "idVdu" ) java.lang.String idVdu, @org.openbaton.nfvo.api.RequestHeader ( value = "project-id" ) java.lang.String projectId ) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, org.openbaton.nfvo.api.BadFormatException, org.openbaton.nfvo.api.NotFoundException, org.openbaton.nfvo.api.PluginException, org.openbaton.nfvo.api.VimException, org.openbaton.nfvo.api.WrongStatusException { try { networkServiceRecordManagement.deleteVNFCInstance ( id, idVnf, idVdu, null, projectId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( ( mStatus ) == ( STATUS_READY ) ) { mStatus = STATUS_RECOGNIZING; mTranscoder.transcode ( mUser3GPFilePath, mUserWaveFilePath, this ) ; updateStatus () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent event ) { try { if ( ( player.getTurn () ) && ( ! ( P1hasDrawnCard ) ) ) { player.DrawFromDD () ; P1hasDrawnCard = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void doLogout () { try { if ( ( currentUser ) != null ) { java.lang.System.out.println ( ( ( currentUser.getUsername () ) + " has been logged out" ) ) ; currentUser = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void act () { try { timber.log.Timber.d ( "categorySpinner selected %d", mCategorySpinner.getSelectedItemPosition () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int position = mCategorySpinner.getSelectedItemPosition () ; onCategoryChosen ( position ) ; } 
private void setValue ( int value ) { try { validateValue ( value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.value = value; } 
@ java.lang.Override public void remove () { if ( ( cachedNext ) == null ) throw new java.lang.IllegalStateException ( "First element has not been read, element has already been removed, or iterator has finished" ) ; if ( isNextCached ) throw new java.lang.IllegalStateException ( "remove () must be called after next () and before the next call to hasNext () " ) ; try { cachedNext.remove ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cachedNext = null; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { gamelogic.Logic l = new gamelogic.Logic () ; graphics.GameFrame f = new graphics.GameFrame ( l ) ; gamelogic.ClockRunner clock = new gamelogic.ClockRunner ( f ) ; try { f.setClock ( clock ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void packet ( com.nrkei.microservices.rapids_rivers.RapidsConnection connection, com.nrkei.microservices.rapids_rivers.Packet packet, com.nrkei.microservices.rapids_rivers.PacketProblems warnings ) { try { assertFalse ( warnings.hasErrors () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized io.grpc.ServerImpl shutdown () { if ( shutdown ) { return this; } shutdown = true; try { transportServer.shutdown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } timeoutService.shutdown () ; return this; } 
public void setTasks ( java.lang.String tasks ) { lblTaskTitle.setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle.setCaretPosition ( lblTaskTitle.getDocument () .getLength () ) ; try { repaint () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void start () { thread = new java.lang.Thread ( this, "myWave" ) ; try { thread.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testTabbarActionsEnablementForDiagram () { try { testTabbarActionsEnablementForDiagram ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { try { me.nereo.multi_image_selector.MultiImageSelector.create () .single () .start ( this, Config.REQUEST_IMAGE_CODE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dismissDialog () ; } 
@ java.lang.Override public void onResult ( com.google.android.gms.common.api.Status status ) { android.content.Intent intent = new android.content.Intent ( this, com.example.mrides.MainActivity.class ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { olimpiadas.sena.com.olimpiadasmath.util.DialogHelper.showCopyRightDialog ( v.getContext () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test public void testMatches () { java.util.List<?> result = db.query ( new com.orientechnologies.orient.core.sql.query.OSQLSynchQuery<java.lang.Object> ( "select from foo where name matches \' ( ?i ) ( ^\\\\Qa\\\\E$ ) | ( ^\\\\Qname2\\\\E$ ) | ( ^\\\\Qname3\\\\E$ ) \' and bar = 1" ) ) ; try { org.testng.Assert.assertEquals ( result.size () , 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addKey ( datastructures.AttributeJoint key ) { if ( ( this.keys ) == null ) this.keys = new java.util.ArrayList<> () ; try { this.keys.add ( key ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String prettyPrint () { populateMatrix ( root, rootInfo.rightDimension, 0 ) ; revertMatrix () ; java.lang.StringBuilder stringBuilder = new java.lang.StringBuilder () ; try { constructString ( stringBuilder ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return stringBuilder.toString () ; } 
@ org.junit.Test public void testCreateAndArticleList () { articleController.createArticle ( "article" ) ; try { assertEquals ( "article", articleController.articleList () .get ( 0 ) .getReference () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { int mPosition = mPendingDeleteItemPosition; mPendingDeleteItemPosition = android.support.v7.widget.RecyclerView.NO_POSITION; try { notifyItemChanged ( mPosition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.jrapidoc.model.Return.ReturnBuilder soapOutputHeader ( org.jrapidoc.model.TransportType soapHeader ) { try { this.soapOutputHeaders.add ( soapHeader ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override public void onError ( java.lang.Throwable e ) { try { com.netflix.eureka2.transport.base.HeartBeatConnection.logger.warn ( ( "Failed to send heartbeat message; terminating the connection " + ( delegate.name () ) ) , e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } shutdown ( e ) ; } 
public void setFirstRunFalse () { try { sunday.app.bairead.tool.PreferenceSetting.sharedPreferences.edit () .putBoolean ( sunday.app.bairead.tool.PreferenceSetting.KEY_FIRST_RUN, false ) .commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void show ( final org.wirez.core.client.canvas.CanvasHandler canvasHandler ) { canvasPreview.start ( canvasHandler.getCanvas () ) ; try { treeExplorer.show ( canvasHandler ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } card.show ( canvasPreview.asWidget () , treeExplorer.asWidget () ) ; } 
public void createWSServer () throws java.lang.Exception { try { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils.createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42, IJBossToolingConstants.SERVER_AS_42 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.khillynn.DB getDatabase () { try { if ( ( database ) == null ) { database = getMongo () .getDB ( MongoDBD.database ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return database; } 
@ java.lang.Override public void run () { android.content.Intent newActivity = new android.content.Intent ( this, com.itproject.android.androidtvsample.ListActivity.class ) ; try { newActivity.putExtra ( "UNAME", username ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } newActivity.putExtra ( "HOURS", numberofhours ) ; startActivity ( newActivity ) ; } 
@ com.thoughtworks.gauge.Step ( value = "Log out from SCM via cas/logout" ) public void logOutViaCasLogout () { Driver.webDriver.get ( com.cloudogu.ces.EcoSystem.getUrl ( "/cas/logout" ) ) ; openSCMApp () ; try { org.junit.Assert.assertThat ( Driver.webDriver.getTitle () , startsWith ( "CAS" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void updateFilescnt () { try { session.update ( ( ( namespace ) + ".updateFilescnt" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Object visitar ( br.univali.portugol.nucleo.asa.NoDeclaracaoVariavel noDeclaracaoVariavel ) throws br.univali.portugol.nucleo.asa.ExcecaoVisitaASA { try { if ( contemNo ( noDeclaracaoVariavel ) ) { nosQueSeraoMantidos.add ( noDeclaracaoVariavel ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public static void release () { try { if ( ( com.marklogic.client.test.Common.client ) != null ) { com.marklogic.client.test.Common.client.release () ; com.marklogic.client.test.Common.client = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void load ( final java.lang.String image, final java.io.InputStream imagePayload, final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException, java.lang.InterruptedException { try { load ( image, imagePayload, authConfig, handler ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void checkAlreadyDeclaredVariable ( java.lang.String variableName, com.espertech.esper.epl.variable.VariableService variableService ) throws com.espertech.esper.epl.expression.core.ExprValidationException { try { if ( ( variableService.getVariableMetaData ( variableName ) ) != null ) { throw new com.espertech.esper.epl.expression.core.ExprValidationException ( com.espertech.esper.epl.variable.VariableServiceUtil.getAlreadyDeclaredEx ( variableName, false ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.jetbrains.annotations.Nullable private com.intellij.openapi.projectRoots.Sdk getCurrentProjectJdk () { try { projectJdksModel.reset ( commonModel.getProject () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return projectJdksModel.getProjectSdk () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/reikningur/breyta-lykilordi", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String renderPasswordChange ( javax.servlet.http.HttpSession session, org.springframework.ui.ModelMap model ) { try { model.addAttribute ( "form_switch", "password" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } model.addAttribute ( "username", ( ( java.lang.String ) ( session.getAttribute ( "username" ) ) ) ) ; return "account"; } 
@ org.junit.Test public void testDeckGetCardsRemaining () { models.Deck deck = new models.Deck () ; try { assertEquals ( 52, deck.getCardsRemaining () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void requestGpsLocationUpdates () { try { if ( ! ( mLocationFetcher.isRequestingUpdates () ) ) { tryToExecuteLocationUpdatesInteractor () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void simplify () { try { if ( this.root.simplify () ) { this.fitness = -1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { com.tuesda.walker.circlerefresh.Activity activity = ( ( com.tuesda.walker.circlerefresh.Activity ) ( getContext () ) ) ; try { activity.runOnUiThread ( new java.lang.Runnable () { @java.lang.Override public void run () { back () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setEnv ( java.lang.String name, java.lang.String value ) { java.lang.String s = name + "="; if ( value != null ) s += value; try { if ( ( libc._putenv ( s ) ) != 0 ) throw new au.com.onegeek.sbtdotenv.NativeEnvironmentManager.EnvironmentException ( name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void increment () { try { executedLines.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } controller.bot.BotVar var = getVariable ( varNum ) ; var.write ( ( ( var.read ( this ) ) + ( 1 % ( controller.Game.MAX_INT ) ) ) ) ; } 
public void start () { try { if ( ( exoPlayer ) != null ) { exoPlayer.setPlayWhenReady ( true ) ; } else if ( ( mediaPlayer ) != null ) { mediaPlayer.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.sql.Statement createStatement ( java.sql.Connection connection, int fetchSize ) throws java.sql.SQLException { java.sql.Statement statement = createStatement ( connection ) ; try { statement.setFetchSize ( fetchSize ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return statement; } 
protected void setListView () { fr.smartapps.smalistview.SMAListView listView = ( ( fr.smartapps.smalistview.SMAListView ) ( findViewById ( R.id.list ) ) ) ; try { if ( listView != null ) { listView.initData ( 2, getDataViews () , this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startStages ( com.tc.async.api.StageManager stageManager, java.util.List<com.tc.async.api.PostInit> toInit ) { try { stageManager.startAll ( this.context, toInit, ServerConfigurationContext.VOLTRON_MESSAGE_STAGE, ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE, ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE, ServerConfigurationContext.PASSIVE_REPLICATION_STAGE, ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE, ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE, ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void step ( float stepLength ) { try { org.gearvrf.physics.GVRPhysicsWorld.setStepLength ( stepLength ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.gearvrf.physics.GVRPhysicsWorld.step () ; } 
@ java.lang.Override public void push ( edu.blackburn.cs.cs212sp16.triage.tebbevanwormer.Patient add ) { edu.blackburn.cs.cs212sp16.triage.tebbevanwormer.ListElement newElement = new edu.blackburn.cs.cs212sp16.triage.tebbevanwormer.ListElement ( add ) ; try { newElement.setNext ( newElement ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void start ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle"; try { org.opendaylight.aaa.shiroact.Activator.LOG.debug ( DEBUG_MESSAGE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.opendaylight.aaa.shiro.ServiceProxy.getInstance () .setEnabled ( true ) ; } 
@ io.swagger.annotations.ApiOperation ( httpMethod = "GET", value = "Resource to get a lesson", response = ua.artcode.model.Lesson.class, produces = "application/json" ) @ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get", method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService.getLessonByID ( id ) ; try { ua.artcode.controller.CourseController.LOGGER.info ( "Lesson get - OK, id {}", id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return lesson; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Boolean result ) { try { if ( !result ) { synchronized ( fi.lbd.mobile.fragments.ObjectListFragment.LOCK ) { android.util.Log.d ( "________", "Couldn't connect to locationclient. Releasing lock." ) ; fi.lbd.mobile.fragments.ObjectListFragment.searchInProgress = false; statusText.setText ( LOCATION_FAILED ) ; lastStatusText = LOCATION_FAILED; lastStatusBackground = LOCATION_BACKGROUND; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test @org.springframework.transaction.annotation.Transactional public void getNonExistingPoints () throws java.lang.Exception { try { restPointsMockMvc.perform ( get ( "/api/points/{id}", java.lang.Long.MAX_VALUE ) ) .andExpect ( status () .isNotFound () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void withMaxResultSize ( @android.support.annotation.IntRange ( from = 100 ) int width, @android.support.annotation.IntRange ( from = 100 ) int height ) { mOptionBundle.putInt ( com.yalantis.ucrop.UCrop.EXTRA_MAX_SIZE_X, width ) ; try { mOptionBundle.putInt ( com.yalantis.ucrop.UCrop.EXTRA_MAX_SIZE_Y, height ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void forbidsFieldInitializationWhenConstructorExists () throws java.lang.Exception { final java.lang.String file = "FieldInitConstructor.java"; try { this.validatePMD ( file, false, com.jcabi.matchers.RegexMatchers.containsPattern ( java.lang.String.format ( com.qulice.pmd.PMDValidatorTest.INIT_PATTERN, file ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void bankListCache () { try { bankList = bankMapper.getBankList () ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.paypal.dealbridge.storage.domain.Bank i : bankList ) { bankNO.put ( i.getBankOfficial () , i.getBankName () ) ; } } 
public void cutCmd () { try { app.getCopyPaste () .copyToXML ( app, app.getSelectionManager () .getSelectedGeos () , false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } deleteCmd ( true ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public T get ( int index ) { index = index - 1; try { com.google.common.base.Preconditions.checkElementIndex ( index, mobs.length, "Mob index is out of bounds." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( T ) ( mobs[index] ) ) ; } 
public void refreshListAppointment () { try { appointments = manageAppointmentsService.list ( sessionController.getCurrentUser () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
java.lang.String getReferenceStack () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "\nReference stack is below.\n" ) ; try { for ( java.lang.String e : stack ) { sb.append ( e ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return sb.toString () ; } 
@ java.lang.Override public void withdraw ( double x ) throws com.luxoft.training.javase.bankapp.domains.accounts.NotEnoughFundsException { try { if ( ( x >= 0 ) && ( x <= ( availableFunds () ) ) ) accountModified ( balance, ( balance -= x ) ) ; else throw new com.luxoft.training.javase.bankapp.domains.accounts.NotEnoughFundsException ( x ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void elapseOneSecond ( int time ) { try { if ( ( getLine () ) == 0 ) return; } catch ( Exception ex ) { ex.printStackTrace () ; } HW1.Customer firstCustomer = customersInLine.get ( 0 ) ; if ( ( firstCustomer.waited () ) <= 0 ) customerServed ( firstCustomer, time ) ; } 
private void addPattern ( java.lang.String pattern ) { try { patterns.add ( pattern ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } updatePattern () ; writeConfig () ; } 
@ java.lang.Override public void channelActive ( io.netty.channel.ChannelHandlerContext ctx ) throws java.lang.Exception { ctx.pipeline () .remove ( this ) ; try { ctx.fireChannelActive () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int getItemViewType ( int position ) { try { if ( position == ( listMember.size () ) ) { return ADD; } else { return MEMBER; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Object clone () { org.eclipse.ice.datastructures.form.emf.EMFEntry entry = new org.eclipse.ice.datastructures.form.emf.EMFEntry ( entryMetaData, org.eclipse.emf.ecore.util.EcoreUtil.create ( entryMetaData.getEContainingClass () ) ) ; try { entry.copy ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return entry; } 
private void joinLobby () { try { setAnalyser ( new connection.LobbyAnalyser () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } queue.clear () ; } 
public void initSignInPanel () { setVisible ( false ) ; try { add ( new com.chat.view.SignInPanel ( this ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setVisible ( true ) ; } 
private void btnRotationMouseClicked ( java.awt.event.MouseEvent evt ) { blokus.Piece p = blokus.Piece.rotationPiece ( selected ) ; try { this.affichePieceSelected ( p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } selected = p; } 
private void addRestResourceClasses ( java.util.Set<java.lang.Class<?>> resources ) { resources.add ( filter.corsFilter.class ) ; try { resources.add ( fjvb.nl.paardenvriendjes2018.service.MemberFacadeREST.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { isShowingRecents = false; taskbar.setVisibility ( View.GONE ) ; try { divider.setVisibility ( View.GONE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initialize () { try { getStyleClass () .add ( com.jfoenix.controls.JFXSlider.DEFAULT_STYLE_CLASS ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { try { if ( ( de.tucottbus.kt.drakon.DRAKON.drakonChart.getScale () ) > 0.2F ) { de.tucottbus.kt.drakon.DRAKON.drakonChart.setScale ( ( ( de.tucottbus.kt.drakon.DRAKON.drakonChart.getScale () ) - 0.1F ) ) ; de.tucottbus.kt.drakon.DRAKON.drakonChart.pack () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void fetchUsersData ( java.util.List<id.semmi.pickme.team.addteam.UserChip> userChips ) { try { if ( ( userChips.size () ) != 0 ) { chipsInput.setFilterableList ( userChips ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setCourses ( java.util.List<demo.catalog.coursera.org.courserademoapp.domain.Course> courses ) { mCourses = courses; clear () ; try { addAll ( courses ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected int getOffsetAtCoordinate ( int line, float x ) { try { x = convertToLocalHorizontalCoordinate ( x ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return getLayout () .getOffsetForHorizontal ( line, x ) ; } 
public void create ( java.lang.String name, java.lang.String mode ) { com.getknowledge.modules.dictionaries.programming.languages.ProgrammingLanguage programmingLanguage = new com.getknowledge.modules.dictionaries.programming.languages.ProgrammingLanguage () ; try { programmingLanguage.setName ( name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } programmingLanguage.setMode ( mode ) ; create ( programmingLanguage ) ; } 
@ java.lang.Override public boolean onUnbind ( android.content.Intent intent ) { try { android.util.Log.d ( TAG, "onUnbind () " ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onUnbind ( intent ) ; } 
@ java.lang.Override protected void onCreate ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_choose_market ) ; try { findViews () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setListeners () ; supportActionBar () ; setSearchSuggestionAdapter () ; initRececlerView () ; } 
@ org.junit.Test public void testCountVowels () throws java.lang.Exception { int vowels = 16; try { org.junit.Assert.assertEquals ( 16, vowels ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super.onActivityCreated ( savedInstanceState ) ; try { init ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testMissingDependencySimple () throws java.lang.Exception { try { doTestBrokenKotlinLibrary ( "library", "a/A.class" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.ws.rs.PUT @javax.ws.rs.Path ( value = "/{id}/contactInfoList" ) @javax.ws.rs.Consumes ( value = "application/json" ) @javax.ws.rs.Produces ( value = "application/json" ) public void updateContactInfoList ( @javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer patientId, java.util.List<model.ContactInfo> contactInfoList ) { java.lang.System.out.println ( "==============================" ) ; java.lang.System.out.println ( "update contact Info List in Patient Service says hello" ) ; try { java.lang.System.out.println ( contactInfoList.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } contactInfoDao.updateContactInfoByPatientId ( patientId, contactInfoList ) ; } 
public void setRoomKey ( java.lang.String key ) { roomKey = key; java.lang.System.out.println ( roomKey ) ; try { hostActionParser.setRoomKey ( key ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void loadMainViewPagerFragment () { android.support.v4.app.Fragment frag = getSupportFragmentManager () .findFragmentById ( R.id.fragment_main_container ) ; try { if ( frag == null ) { loadFragment ( com.quartzodev.fragments.ViewPagerFragment.newInstance ( ViewPagerFragment.MAIN_VIEW_PAGER, mFolderId, null, null ) , null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.HONEYCOMB ) @java.lang.Override public boolean onPreferenceClick ( android.support.v7.preference.Preference preference ) { try { showDateDialog ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void defineTextViews () { try { rosTextView = ( ( org.ros.android.view.RosTextView<msgs.ImageData> ) ( com.github.ros_java.android_ROS.controller.Listener.app.findViewById ( R.id.text ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void manualAnimeAdd ( java.lang.String name, util.AnimeData data, java.lang.String finishDate, java.lang.String type ) { java.lang.String list = util.window.AddAnimeDialog.checkDataConflict ( finishDate, type, false ) ; try { util.window.AddAnimeDialog.checkAnimeAlreadyAdded ( name, list, data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { try { this.doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override void update () { try { this.buffer.get ( 0 ) .flip () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void useAlleleQualityCBActionPerformed ( java.awt.event.ActionEvent e ) { try { updatedPreferenceMap.put ( PreferenceManager.SAM_ALLELE_USE_QUALITY, java.lang.String.valueOf ( useAlleleQualityCB.isSelected () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber, long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber, id ) ; try { singleCarStop.setEndDate ( java.util.Calendar.getInstance () .getTime () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } entityManager.merge ( singleCarStop ) ; return singleCarStop; } 
public void deleteByKey ( K key ) { java.util.Map<java.lang.String, java.lang.String> familyMap = this.cassandraMapping.getFamilyMap () ; try { deleteColumn ( key, familyMap.values () .iterator () .next () , null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isOpen ( int row, int col ) { try { if ( ! ( validSite ( row, col ) ) ) { throw new java.lang.IndexOutOfBoundsException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return open[site ( row, col ) ]; } 
@ org.junit.Test @com.yeahmobi.yunit.annotation.DatabaseSetup public void testGet () throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = this.personMapper.selectByPrimaryKey ( 1 ) ; try { org.junit.Assert.assertEquals ( "name1", person.getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.transaction.annotation.Transactional ( readOnly = false ) public com.wimk.entity.Child addChild ( com.wimk.entity.Child child ) { try { child.setId ( ( -1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return childRepository.saveAndFlush ( child ) ; } 
private void drawNextMonth ( android.graphics.Canvas canvas ) { try { setCalenderToFirstDayOfMonth ( calendarWithFirstDayOfMonth, currentDate, ( - ( monthsScrolledSoFar ) ) , 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } drawMonth ( canvas, calendarWithFirstDayOfMonth, ( ( height ) * ( ( - ( monthsScrolledSoFar ) ) + 1 ) ) ) ; } 
public hudson.model.Result run ( hudson.model.BuildListener listener ) throws java.lang.Exception { try { listener.getLogger () .print ( log ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } hudson.model.Result r = ( result == 0 ) ? Result.SUCCESS : Result.FAILURE; return r; } 
@ cz.mzk.recordmanager.webapp.controller.RequestMapping ( method = RequestMethod.POST, value = "/{libraryId}/configuration/{configId}" ) @cz.mzk.recordmanager.webapp.controller.ResponseBody public cz.mzk.recordmanager.api.model.OaiHarvestConfigurationDto deleteConfiguration ( @cz.mzk.recordmanager.webapp.controller.RequestBody cz.mzk.recordmanager.api.model.OaiHarvestConfigurationDto configurationDto, @cz.mzk.recordmanager.webapp.controller.PathVariable java.lang.Long libraryId, @cz.mzk.recordmanager.webapp.controller.PathVariable java.lang.Long configId ) { try { configurationDto.setId ( configId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } libraryService.updateOrCreateConfig ( configurationDto, libraryId ) ; return configurationDto; } 
public static void init ( android.app.Application application ) { try { com.parse.Parse.initialize ( application, com.rndapp.mtamap.Analytics.PARSE_KEY_ONE, com.rndapp.mtamap.Analytics.PARSE_KEY_TWO ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.oltpbenchmark.util.json.JSONArray put ( double value ) throws com.oltpbenchmark.util.json.JSONException { java.lang.Double d = value; try { com.oltpbenchmark.util.json.JSONObject.testValidity ( d ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } put ( d ) ; return this; } 
public java.lang.String view ( int productId ) { try { currentProduct.setProduct ( productService.getProductFromId ( productId ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "catalogue_product"; } 
public synchronized void start () { if ( running ) return; keyboard = new com.wolf.engine.core.input.Keyboard () ; mouse = new com.wolf.engine.core.input.Mouse ( this ) ; thread = new java.lang.Thread ( this ) ; try { thread.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void storeLocationInDb ( final xyz.smartsniff.Location location ) { java.lang.Thread storeLocationThread = new java.lang.Thread () { public void run () { databaseHelper.addLocation ( location ) ; } }; try { storeLocationThread.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onServiceConnected ( android.content.ComponentName name, android.os.IBinder service ) { try { android.util.Log.i ( com.example.dscs.StartFragment.TAG, "Service is connected." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mBinder = ( ( com.example.dscs.CrawlingService.CrawlingServiceBinder ) ( service ) ) ; mBinder.setOnJobFinishedListener ( this ) ; refreshButtonState () ; } 
public void stopPlayer () { try { audioPlayer.getMediaPlayer () .release () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void getXRefInfo ( java.util.List<org.verapdf.cos.xref.COSXRefInfo> infos ) throws java.io.IOException { try { this.getXRefInfo ( infos, 0L ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void registerReceiver () { broadcastReceiver = new com.kiwi.flickrbatchdownload.photolist.PhotoListActivity.MBroadcastReceiver () ; try { registerReceiver ( broadcastReceiver, new android.content.IntentFilter ( com.kiwi.flickrbatchdownload.download.DownloadService.IMAGE_TASKINFO_SENDBACK_ACTION ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void encode ( org.jruby.ir.persistence.IRWriterEncoder e ) { super.encode ( e ) ; e.encode ( getJumpTarget () ) ; e.encode ( getArg1 () ) ; try { e.encode ( getArg2 () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void disposeWindow () { if ( ( net.sf.memoranda.ui.App.frame ) == null ) return; try { java.lang.System.exit ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deleteMarkers () throws org.eclipse.core.runtime.CoreException { try { file.deleteMarkers ( IRascalResources.ID_RASCAL_MARKER, true, IFile.DEPTH_ZERO ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void pause ( android.widget.ImageButton playButton ) { mPlaying = false; playButton.setImageResource ( android.R.drawable.ic_media_play ) ; try { if ( ( ( mMediaPlayer ) != null ) && ( mMediaPlayer.isPlaying () ) ) { mMediaPlayer.pause () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setDataSet ( com.github.mikephil.charting.data.PieDataSet dataSet ) { mDataSets.clear () ; mDataSets.add ( dataSet ) ; try { init () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testSaveAndRead () throws java.io.IOException { storage.saveFile ( display ) ; try { org.junit.Assert.assertEquals ( display.toString () , storage.getDisplay ( storage.filePath ) .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft.setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil.limit ( input.left ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; try { sideRight.setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil.limit ( input.right ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void reveal ( org.minesweeper.core.Cell cell ) { try { reveal ( cell.getX () , cell.getY () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.vaadin.ui.Component createEditor ( de.mhus.lib.core.IProperties editorProperties, de.mhus.lib.vaadin.DialogControl control ) { de.mhus.lib.vaadin.operation.AbstractVaadinOperationEditor editor = createEditor () ; if ( editor == null ) return null; editor.setSizeFull () ; try { editor.initialize ( editorProperties, control ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return editor; } 
public void add ( com.yourpc_shop.entity.Category category ) { try { categoryDao.save ( category ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_bottom_navigation ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } initNavigation () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @org.springframework.web.bind.annotation.ResponseBody public long deleteInv ( @org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher[] invoiceVoucher ) { java.lang.String a = "test"; try { invoiceService.deleteInv ( invoiceVoucher ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
private void firePurchase ( java.lang.String sku, com.idkjava.thelements.error.ErrorHandler handler ) { mProductManager = com.idkjava.thelements.ElementsApplication.getProductManager () ; try { mProductManager.bindErrorHandler ( handler ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mProductManager.launchPurchase ( this, sku ) ; } 
public void run () { try { playAlarm ( msg ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void diagonalLeftToRight ( nl.hanze2017e4.gameclient.model.master.Board board ) { try { subDiagonalLeftToRightTwo ( board ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { try { fighter.attack ( attack ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference, java.lang.Object newValue ) { updateIntervalSettings.set ( java.lang.Integer.parseInt ( ( ( java.lang.String ) ( newValue ) ) ) ) ; try { pirattoManager.refresh () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void handle ( java.util.Map data ) { dbf.remove ( self ) ; try { returnVip () ; } catch ( Exception ex ) { ex.printStackTrace () ; } completion.success () ; } 
@ java.lang.Override protected void onPostExecute ( java.util.List<com.alokomkar.mymoviesapp.models.MovieModel.MovieResult> movieResults ) { super.onPostExecute ( movieResults ) ; if ( movieResults != null ) { mFavoriteMoviesList = movieResults; } else { mFavoriteMoviesList = new java.util.ArrayList<> () ; } try { dismissProgressView () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testRobPlayer () throws shared.exceptions.ServerException { try { java.lang.System.out.println ( "robPlayer" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int victim = 1; shared.locations.HexLocation loc = new shared.locations.HexLocation ( 1, 1 ) ; } 
private void changeIdentityPassword ( java.util.Map<java.lang.String, java.lang.String> accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass.remove ( "Identity" ) ; try { identity.setPassword ( newPassword ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeEffects () { try { player.removePotionEffect ( region.getType () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( java.lang.Void result ) { try { de.hdm.itprojekt.noteit.client.EditNotebook.getAllPermittedUsersbyNotebookID ( de.hdm.itprojekt.noteit.client.EditNotebook.currentNotebook.getId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent ev ) { try { settings.selectedLangIndex = ( ( javax.swing.JComboBox<?> ) ( ev.getSource () ) ) .getSelectedIndex () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void getValue () { try { java.lang.System.out.println ( tape.get ( head ) .intValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}", method = RequestMethod.PUT, produces = "application/json" ) @de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) { try { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService.createBoard ( gameID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void connect () { session = getSession () ; try { establishSession ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { mCurrentIndex = ( ( mCurrentIndex ) + 1 ) % ( mQuestionBank.length ) ; mIsCheater = false; try { updateQuestion () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public float reportRayFixture ( com.badlogic.gdx.physics.box2d.Fixture fixture, com.badlogic.gdx.math.Vector2 point, com.badlogic.gdx.math.Vector2 normal, float fraction ) { cFix = fixture; collision.set ( point ) ; try { this.normal.set ( normal ) .add ( point ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
@ java.lang.Override public void run () { android.content.Intent login2 = new android.content.Intent ( this, at.sw2017.xp4.hobit.FacebookLogin.class ) ; try { startActivityForResult ( login2, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.kurento.client.KurentoClient getKurentoClient () { try { if ( ( kurentoClient ) == null ) { kurentoClient = createKurentoClient () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return kurentoClient; } 
public static javax.vecmath.Matrix4d superposeAndTransform ( javax.vecmath.Point3d[] fixed, javax.vecmath.Point3d[] moved ) { try { org.biojava.nbio.structure.geometry.SuperPositions.superposer.setCentered ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return org.biojava.nbio.structure.geometry.SuperPositions.superposer.superposeAndTransform ( fixed, moved ) ; } 
@ java.lang.Override protected void onRestart () { android.app.Fragment frag = getFragmentManager () .findFragmentByTag ( "services" ) ; try { if ( frag != null ) { getFragmentManager () .beginTransaction () .remove ( frag ) .commit () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onRestart () ; } 
public static boolean isExtraPlayer ( java.lang.String name ) { try { for ( java.lang.String name2 : de.DaWik.DaWik.Config.ConfigManager.players ) { if ( name2.equalsIgnoreCase ( name ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void addToWindow () { try { mWindowManager.addView ( this, mParams ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { try { if ( ! ( hasBeenBuilt ) ) { widget.build () ; hasBeenBuilt = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { try { if ( ( args.length ) == 0 ) { java.lang.System.err.println ( "usage: prog songfile" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void connectToServer () { boolean connected = false; gc = new orbit.OrbitGame.GameClient () ; try { gc.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removePepe ( android.view.View view ) { try { updatePepes ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( pepes ) --; } 
@ java.lang.Override public void mouseDragged ( java.awt.event.MouseEvent e ) { try { newYPos = e.getY () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void hideFooterView () { footerTextView.setText ( "Pull up to refresh" ) ; try { footerView.setPadding ( 0, 0, 0, ( - ( footerHeight ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } state = -1; } 
@ java.lang.Override protected void onStart () { try { super.onStart () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mGoogleApiClient.connect () ; } 
public java.lang.String addItem ( de.iceburner.apps.serapeum.lib.LibraryItem item ) { java.lang.String key = createKey ( item.getName () .substring ( 0, 4 ) , mLibraryItems ) ; try { mLibraryItems.put ( key, item ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return key; } 
private void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu, org.Point point, double xLocation, double yLocation ) { try { contextMenu.show ( circles.get ( point ) .getScene () .getWindow () , xLocation, yLocation ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } handlePoint ( point ) ; } 
@ java.lang.Override public void launch ( mekanism.api.Pos3D target, int height ) { qiFeiGaoDu = height; try { launch ( target ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public cviz.config.TimelineConfig findChannelById ( java.lang.String id ) { try { for ( cviz.config.TimelineConfig channel : channels ) { if ( channel.getId () .equals ( id ) ) return channel; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void placeVolumes ( java.net.URI exportMaskURI, java.util.Map<java.net.URI, com.emc.storageos.db.client.model.Volume> volumes ) { try { maskToVolumes.put ( exportMaskURI, new java.util.HashMap ( volumes ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( java.net.URI volumeId : volumes.keySet () ) { unplacedVolumes.remove ( volumeId ) ; } } 
@ java.lang.Override public void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } synchronized ( this ) { b.recycle () ; b = null; } } 
private static <T> void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList<T> nodeList, java.util.List<org.netbeans.gradle.project.api.nodes.SingleNodeFactory> toPopulate ) { try { for ( T key : nodeList.keys () ) { toPopulate.add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList, key ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void writeUnsignedShort ( int s ) { try { com.alesharik.webserver.api.qt.QDataStream.U.putShort ( allocFor ( 2 ) , com.alesharik.webserver.api.ByteOrderUtils.format ( ( ( short ) ( s & 65535 ) ) , order ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeElement ( int index ) { try { if ( index < ( pattern.size () ) ) { pattern.remove ( index ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { try { super.onPostExecute ( aVoid ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } adapter.addCodes ( codeSampleEntries ) ; adapter.notifyDataSetChanged () ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { if ( lischt.kill () ) { java.lang.System.out.println ( "dig is kill" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } lischt.frameAdvance () ; repaint () ; } 
public void midiSystemUpdated () throws uk.co.xfactorylibrarians.coremidi4j.CoreMidiException { try { buildDeviceMap () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void contextLoads () { try { java.lang.System.out.println ( sampleTableRepo.findAll () .size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( 1, sampleTableRepo.findAll () .size () ) ; } 
@ org.junit.Test public void findPathRunLog () throws java.io.IOException { final java.net.URL testPath = com.google.common.io.Resources.getResource ( com.hartwig.healthchecks.common.io.path.PathRegexFinderTest.TEST_DIR ) ; final java.nio.file.Path path = com.hartwig.healthchecks.common.io.path.PathRegexFinder.build () .findPath ( testPath.getPath () , com.hartwig.healthchecks.common.io.path.PathRegexFinderTest.TEST_DIR ) ; try { org.junit.Assert.assertNotNull ( com.hartwig.healthchecks.common.io.path.PathRegexFinderTest.NOT_NULL, path ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getPathUrl () { try { if ( ( pathUrl ) == null ) { pathUrl = getPathEncoded () ; pathUrl += com.composum.sling.core.util.LinkUtil.getExtension ( resource, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return pathUrl; } 
public void run () { java.lang.System.err.println ( ( ( "BLACK: " + ( ( antiChess.AntiChess.timerLimit ) - ( antiChess.AntiChess.blackSeconds ) ) ) + "s left" ) ) ; try { if ( ( antiChess.AntiChess.blackSeconds ) >= ( antiChess.AntiChess.timerLimit ) ) antiChess.AntiChess.getWinner ( java.awt.Color.WHITE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( antiChess.AntiChess.blackSeconds ) ++; } 
public void setSettlement ( int newSettlement ) { currentSettlement = settlementList.get ( ( newSettlement - 1 ) ) ; currentBuildingList = currentSettlement.getBuildings () ; try { placedBuildingList = currentSettlement.getPlacedBuildings () ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateButtonDisplay () ; } 
private void onTaskAddedToQueue ( com.idevicesinc.sweetblue.PA_Task task ) { try { synchronized ( m_lock ) { task.assignDefaultOrdinal ( this ) ; task.onAddedToQueue ( this ) ; softlyCancelTasks ( task ) ; print () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailure ( int reasonCode ) { try { android.util.Log.d ( "WiFiDBC", "Peer Discovery not ready" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void arriveRobot ( program.RobotBase rb ) { program.Program.writeDebug ( ( "arriveRobot ( in NotRoad ) - Robot: " + ( rb.getId () ) ) ) ; addToList ( rb ) ; try { rb.updateField ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } rb.die () ; removeFromList ( rb ) ; } 
@ java.lang.Override public void close () { kafkaConsumerThreadPool.shutdown () ; wakeup () ; try { while ( ! ( kafkaConsumerThreadPool.isTerminated () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } isRunning.set ( false ) ; } 
@ org.junit.Test public void checkEmailField () { try { android.support.test.espresso.Espresso.onView ( android.support.test.espresso.matcher.ViewMatchers.withId ( R.id.txtEmail ) ) .perform ( android.support.test.espresso.action.ViewActions.click () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailure ( retrofit2.Call<appteam.nith.hillffair.models.Register> call, java.lang.Throwable t ) { try { loadToast.error () ; } catch ( Exception ex ) { ex.printStackTrace () ; } t.printStackTrace () ; loadToast.error () ; } 
public void checkID ( java.lang.String studentID ) { try { if ( aGradeSystem.containsID ( studentID ) ) { showWelcomeMsg () ; userID = studentID; promptCommand () ; } else { showErrorMsg () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void refreshUI () { allSongsViewController.refreshUI () ; try { albumsViewController.refreshUI () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { musicPlayer.playToggleActions () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { try { th.start ( ( ( this.currId ) ++ ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } synchronized ( this.noT ) { ( this.noT ) ++; } } 
public void saveUserInput ( java.lang.String input ) { if ( input.isEmpty () ) { return; } try { userInputHistory.addFirst ( input.trim () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } resetIterator () ; logger.info ( ( "Capturing user input: " + input ) ) ; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { fixedVersionText.setEnabled ( fixedVersionButton.getSelection () ) ; applyVersionButton.setEnabled ( fixedVersionButton.getSelection () ) ; try { refreshTableItems () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onColorChanged ( int i ) { try { selectedColor = java.lang.Integer.toHexString ( i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void updatePrgoramStatus ( int programId, boolean isDisabled ) { gov.va.escreening.entity.Program program = programRepository.findOne ( programId ) ; try { program.setIsDisabled ( isDisabled ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } programRepository.update ( program ) ; programRepository.commit () ; } 
public de.uniks.networkparser.xml.XMLEntity withValue ( java.lang.String value ) { de.uniks.networkparser.xml.XMLTokener tokener = new de.uniks.networkparser.xml.XMLTokener () ; try { tokener.withBuffer ( value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } withValue ( tokener ) ; return this; } 
public static co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args.putParcelable ( "store", org.parceler.Parcels.wrap ( store ) ) ; try { storeDetailFragment.setArguments ( args ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return storeDetailFragment; } 
public void showPopupWindow () { displayPopupWindow () ; try { setListView () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void test7 () throws java.lang.Exception { java.lang.String expected = "a b"; java.lang.String actual = Wrapper.wrap ( "a b", 4 ) ; try { assertEquals ( expected, actual ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public semantic.Value visitSentencia_imprimir ( grammar.LITEParser.Sentencia_imprimirContext ctx ) { semantic.Value valor = this.visit ( ctx.expresion () ) ; try { salida = salida.concat ( ( ( valor.toString () ) + "\n" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return Value.VOID; } 
public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers.add ( server ) ; disConnectedServers.remove ( server ) ; try { com.emc.storageos.auth.impl.LdapServerList.log.info ( "Change back to connected ldap server {}. Now all connected servers are {}", server, connectedServers ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void initialize ( android.content.Context context, com.binarapps.android.cookielogger.interfaces.CLogInterface send, java.lang.String tag ) { try { com.binarapps.android.cookielogger.AppContext.initialize ( context, send, tag ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void whenCheckingFitnessForNull_thenReturnNull () { org.corpus_tools.pepper.modules.PepperModule module = null; try { org.assertj.core.api.Assertions.assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () .checkFitness ( module ) ) .isNull () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.w3c.dom.Element createHintElement ( org.w3c.dom.Element performElement ) { org.w3c.dom.Element hintElement = performElement.getOwnerDocument () .createElement ( RulesetConstants.HINT ) ; try { performElement.appendChild ( hintElement ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return hintElement; } 
public static void initTextures () { try { dmfmm.StarvationAhoy.Core.Init.CropwashTextureRegistry.registerBlock ( WashLib.washBarrelName, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { ( time ) --; try { if ( ( time ) == 0 ) { task.cancel () ; task = null; gameStart () ; } else { sendTimeToStart () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void updateOrigin ( byte newIdentifier, long newTimestamp ) { checkOnEachPublicOperation.checkOnEachPublicOperation () ; try { s.innerWriteLock.lock () ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateReplicationState ( newIdentifier, newTimestamp ) ; } 
@ java.lang.Override public void onBackPressed () { super.onBackPressed () ; try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void moveToAddFillup () { android.content.Intent moveToAddFillup = new android.content.Intent ( super.getContext () , com.twild.gastracker.ActivityAddFillup.class ) ; moveToAddFillup.putExtra ( "car_index", currentCarIndex ) ; startActivity ( moveToAddFillup ) ; try { getActivity () .finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onLongClick ( android.view.View v ) { if ( ( getSelectedItemCount () ) == 0 ) { recentListActionModeUtil.startActionMode () ; } toggleSelection ( position ) ; try { recentListActionModeUtil.updateActionMode ( getSelectedItemCount () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ org.junit.Test public void hashCodeReturn0Test () { unitTests.State state = new unitTests.State () ; try { assertEquals ( state.hashCode () , ( -2056846209 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ cucumber.api.java.en.When ( value = "^\" ( [^\"]* ) \" starts with prefix \" ( [^\"]* ) \"$" ) public void startsWithPrefix ( final java.lang.String arg1, final java.lang.String arg2 ) throws java.lang.Throwable { try { result = tpString.startsWith ( arg1.getBytes () , getMarker ( arg1 ) , arg2.getBytes () , getMarker ( arg2 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User sender, com.avengers.netty.socket.gate.wood.Message message ) { try { gameLogic.disconnect ( sender ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void remove () { handlerRegistrationManager.removeHandler () ; try { for ( final org.wirez.lienzo.toolbox.HoverToolboxButton button : buttons ) { button.getShape () .removeFromParent () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void RegisterMachines () { genericminecraftmod.GenericMinecraftMod.blockGenericModFurnace = new genericminecraftmod.block.GenericFurnaceBlock () ; try { cpw.mods.fml.common.registry.GameRegistry.registerBlock ( genericminecraftmod.GenericMinecraftMod.blockGenericModFurnace, genericminecraftmod.GenericMinecraftMod.blockGenericModFurnace.getUnlocalizedName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected org.eclipse.draw2d.IFigure createFigure () { final org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel label = new org.yakindu.base.xtext.utils.gmf.figures.SyntaxColoringLabel () ; try { label.setTextWrap ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } label.setAlignment ( ( ( org.eclipse.draw2d.PositionConstants.LEFT ) | ( org.eclipse.draw2d.PositionConstants.TOP ) ) ) ; return label; } 
public java.lang.String getEmail () { org.libreplan.business.users.entities.User user = getBoundUser () ; try { if ( user != null ) { return user.getEmail () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ""; } 
public void killed () { alive = false; try { current.ants.remove ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } current.ants.trimToSize () ; } 
@ org.osgi.service.component.annotations.Reference ( name = "org.wso2.carbon.security.connector.CredentialStoreConnector", service = org.wso2.carbon.security.usercore.connector.AuthorizationStoreConnector.class, cardinality = org.osgi.service.component.annotations.ReferenceCardinality.AT_LEAST_ONE, policy = org.osgi.service.component.annotations.ReferencePolicy.DYNAMIC, unbind = "unregisterCredentialStoreConnector" ) protected void registerCredentialConnector ( org.wso2.carbon.security.usercore.connector.CredentialStoreConnector credentialStoreConnector, java.util.Map<java.lang.String, java.lang.String> properties ) { java.lang.String connectorId = properties.get ( "connector-id" ) ; try { org.wso2.carbon.security.internal.CarbonSecurityDataHolder.getInstance () .registerCredentialStoreConnector ( connectorId, credentialStoreConnector ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void createWebDriverWithoutProxy () { com.codeborne.selenide.Configuration.fileDownload = com.codeborne.selenide.Configuration.FileDownloadMode.HTTPGET; try { container.createDriver () ; } catch ( Exception ex ) { ex.printStackTrace () ; } verify ( container.factory ) .createWebDriver ( null ) ; } 
public io.github.sdsstudios.ScoreKeeper.Options.CheckBoxOption getCheckBoxOption ( java.lang.String id ) { io.github.sdsstudios.ScoreKeeper.Options.CheckBoxOption checkBoxOption = null; try { for ( io.github.sdsstudios.ScoreKeeper.Options.CheckBoxOption c : mCheckBoxOptions ) { if ( c.getmID () .equals ( id ) ) { checkBoxOption = c; break; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return checkBoxOption; } 
public void addToSignal ( int rssi ) { try { this.signalStrength.add ( rssi ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setUpDefaultCalligraphy () ; } 
public static void removeItemFromCurrentItemListInCurrentTodo ( int todoIndex, int itemIndex ) { try { ssd.project.mickeycj.todosapp.model.Repository.removeItemFromCurrentItemListInCurrentTodo ( todoIndex, ssd.project.mickeycj.todosapp.model.Repository.currentRepository.getItemFrom ( todoIndex, itemIndex ) .getTitle () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addData ( short[] data ) { try { if ( ( dataForDraw ) != null ) { nextStartPoint = addArrayToArray ( dataForDraw, data, nextStartPoint ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setCode ( java.lang.String code ) { this.code = code; try { this.errorCode = io.minio.ErrorCode.fromString ( this.code ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addToStart ( java.lang.String message ) { java.util.LinkedList<java.lang.String> tmp = new java.util.LinkedList<java.lang.String> () ; try { tmp.push ( message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tmp.addAll ( storedMessages ) ; storedMessages = tmp; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_normal_key_board ) ; try { initAnim () ; } catch ( Exception ex ) { ex.printStackTrace () ; } initView () ; valueList = virtualKeyboardView.getValueList () ; } 
protected void validateResourcePathAndName ( org.eclipse.emf.ecore.resource.Resource resource, com.ge.research.sadl.sADL.SadlModel model, java.lang.String modelActualUrl ) { try { if ( ! ( isReservedFolder ( resource, model ) ) ) { if ( isReservedName ( resource ) ) { addError ( SadlErrorMessages.RESERVED_NAME.get ( modelActualUrl ) , model ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addStreamDefinition ( java.lang.String streamDefinitionStr ) throws org.wso2.carbon.databridge.commons.exception.MalformedStreamDefinitionException, org.wso2.carbon.databridge.core.exception.StreamDefinitionStoreException { org.wso2.carbon.databridge.commons.StreamDefinition streamDefinition = org.wso2.carbon.databridge.commons.utils.EventDefinitionConverterUtils.convertFromJson ( streamDefinitionStr ) ; try { getStreamDefinitionStore () .saveStreamDefinitionToStore ( streamDefinition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onLayoutChange ( android.view.View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom ) { try { if ( ! ( paused ) ) { this.cacheView () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface, int i ) { try { superOnBackPressed () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( ( fileName ) != null ) && ( ! ( newFileName.isEmpty () ) ) ) { deletePicRef ( newPicRef ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/data/tests/setQuestionType" ) @org.springframework.web.bind.annotation.ResponseBody public java.lang.Boolean setCurrentQuestionType ( @org.springframework.web.bind.annotation.RequestParam ( value = "questionType" ) int questionType, @org.springframework.web.bind.annotation.RequestParam ( value = "questionID" ) java.lang.Long questionID ) { try { adminUtils.updateQuestion ( questionType, questionID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private java.lang.String getNamespace () { java.lang.String namespace = ""; try { for ( java.lang.String name : mNameSpaces ) { if ( ! ( namespace.equals ( "" ) ) ) namespace = namespace + "."; namespace = namespace + name; } } catch ( Exception ex ) { ex.printStackTrace () ; } return namespace; } 
public fr.visian.vip.client.sdk.request.filter.QueryFilterBuilder lower ( final double value ) { try { this.filters.put ( fr.visian.vip.client.sdk.request.filter.QueryFilterBuilder.Filter.LOWER.getName () , value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override public void close () { try { cache.closeRead () ; } catch ( Exception ex ) { ex.printStackTrace () ; } closed = true; } 
private java.lang.String substituteTags ( java.lang.String document ) { java.lang.String resultDocument = substituteSourceId ( document ) ; try { resultDocument = substitutePortNumber ( resultDocument ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return substituteHttpRoot ( resultDocument ) ; } 
@ org.junit.Test public void getPages_Stream_All_Pages () throws java.lang.Exception { java.util.stream.Stream<java.lang.Thread> pages = mapper.getPages ( 1 ) ; try { assertEquals ( 10, pages.count () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onConnected ( android.os.Bundle dataBundle ) { LocationServices.FusedLocationApi.requestLocationUpdates ( mGoogleApiClient, mLocationRequest, this ) ; try { mBestReading = LocationServices.FusedLocationApi.getLastLocation ( mGoogleApiClient ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mBestReading ) != null ) { handleLocationChanged () ; } } 
public void onDeleteMaxim ( com.tcolligan.maximmaker.data.Maxim maxim ) { try { com.tcolligan.maximmaker.data.MaximManager.getInstance () .deleteMaxim ( context, maxim ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } showMaxims ( maximManager.getMaximList () ) ; } 
public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final java.lang.String searcherValue ) { try { parameters.add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
public int getBestMove ( com.harambe.game.Board board ) { savedMove = -1; try { minimax ( board, globalDepth, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return savedMove; } 
@ java.lang.Override public void registerKeys () { try { registerKey ( Keys.GENERATION, 0, 0, java.lang.Integer.MAX_VALUE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testConversionToEureka1xDataCenterInfo () throws java.lang.Exception { com.netflix.eureka2.registry.datacenter.AwsDataCenterInfo v2DataCenterInfo = SampleAwsDataCenterInfo.UsEast1a.build () ; com.netflix.appinfo.AmazonInfo v1DataCenterInfo = toEureka1xDataCenterInfo ( v2DataCenterInfo ) ; try { com.netflix.eureka2.eureka1.utils.Eureka1ModelConvertersTest.verifyDataCenterInfoMapping ( v1DataCenterInfo, v2DataCenterInfo ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void hideBottom () { try { setNextTurnVisible ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setPlaceArmiesVisible ( false ) ; setFightVisible ( false ) ; setInformation ( "", false ) ; } 
public java.lang.Object get ( int index ) { try { indexRangeCheck ( index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.coding.basic.LinkedList.Node cursor = head; for ( int i = 0; i < index; i++ ) { cursor = cursor.next; } return cursor.next.data; } 
public void init ( android.hardware.Camera camera ) { setCamera ( camera ) ; getHolder () .addCallback ( this ) ; try { getHolder () .setType ( SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBackPressed () { finishAffinity () ; try { startActivity ( new android.content.Intent ( this, com.johnsimon.payback.ui.FeedActivity.class ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void refresh () { try { threads = postFacade.GetByParentId ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( threads ) == null ) { threads = new java.util.ArrayList<> () ; } } 
@ com.roms.config.Bean public com.roms.library.context.DatabaseDrivenMessageSource messageSource () { com.roms.library.context.DatabaseDrivenMessageSource messageSource = new com.roms.library.context.DatabaseDrivenMessageSource ( translationDao ) ; try { messageSource.setParentMessageSource ( propertiesMessageSource () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return messageSource; } 
private void run () { java.lang.String[] args = new java.lang.String[] { "-xargs", getAbsolutePath ( "props.xargs" ) , "-xargs", getAbsolutePath ( "init.xargs" ) }; try { org.knopflerfish.framework.Main.main ( args ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addToBoxList ( java.lang.String name ) { javax.swing.JLabel label = new javax.swing.JLabel ( name ) ; label.addMouseListener ( adapter ) ; objectBox.add ( label ) ; try { labels.add ( label ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testCreate () { com.endava.model.User user = createUser () ; try { doNothing () .when ( entityManager ) .persist ( user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } genDao.create ( user ) ; verify ( entityManager ) .persist ( user ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { startActivityForResult ( pickIntent, com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void updateToPass ( org.openhealthtools.mdht.uml.cda.consol.ResultObservation2 target ) { try { target.getReferenceRanges () .get ( 0 ) .getObservationRange () .setCode ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { super.onResume () ; try { android.util.Log.d ( TAG, "onResume" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public synchronized void enable () { m_initTime = edu.wpi.first.wpilibj.Timer.getFPGATimestamp () ; m_enabled = true; try { if ( ( table ) != null ) { table.putBoolean ( "enabled", true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void loaded () { super.loaded () ; try { if ( ( swipe ) != null ) { swipe.setEnabled ( true ) ; swipe.setRefreshing ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ io.swagger.annotations.ApiOperation ( httpMethod = "GET", value = "Resource to get a course", response = ua.artcode.model.Course.class, produces = "application/json" ) @ua.artcode.controller.RequestMapping ( value = "/courses/get", method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService.getByID ( id ) ; try { ua.artcode.controller.CourseController.LOGGER.info ( "Course get - OK, id {}", id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return course; } 
@ java.lang.Override public void onLoading ( nuclei.media.MediaPlayerController controller ) { try { if ( ( loading ) != null ) loading.setVisibility ( View.VISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mHandler ) != null ) mHandler.start () ; } 
public void unset () { try { org.slf4j.MDC.remove ( getMDCKey () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void init () { db = new com.ngngteam.pocketwallet.Data.MoneyDatabase ( this ) ; try { c = db.getExpensesFromNewestToOldest () ; } catch ( Exception ex ) { ex.printStackTrace () ; } adapter = new com.ngngteam.pocketwallet.Adapters.HistoryListViewAdapter ( this, c ) ; } 
@ java.lang.Override protected void onSizeChanged ( int w, int h, int oldw, int oldh ) { try { super.onSizeChanged ( w, h, oldw, oldh ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } width = w; height = h; } 
private boolean prepareSelectedFiles () { try { if ( prepareFiles () ) { preparedFiles.addAll ( selectedFiles.values () ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void info ( @javax.annotation.Nonnull java.lang.Object msg ) { try { if ( level.isGreaterOrEqual ( org.apache.log4j.Level.INFO ) ) { java.lang.System.out.println ( ( "[INFO]\t" + ( wrapMsg ( msg ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, java.lang.String[] permissions, int[] grantResults ) { try { super.onRequestPermissionsResult ( requestCode, permissions, grantResults ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.dreamitcodeit.storyteller.MapActivityPermissionsDispatcher.onRequestPermissionsResult ( this, requestCode, grantResults ) ; locFlag = true; } 
protected void releaseTreeLock () { try { getLockRoot () .releaseTreeLock () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void clicked ( int position ) { try { if ( mSeekBar.isCircle () ) { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addMessage ( android.view.View view ) { try { messageList.addView ( view ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } handler.post ( new java.lang.Runnable () { @java.lang.Override public void run () { messageWindow.fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } 
public void step ( double time, double delta ) { this.consumeMessages () ; try { this.dt ( time, delta ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setElements ( int arrayResourceId, boolean[] selected ) { try { setElements ( this.getResources () .getStringArray ( arrayResourceId ) , null, selected ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void unsuccessfulCheckoutMessageDisplayed () { com.twu.biblioteca.Book book = bookSystem.getBookByName ( "Dr. Seuss" ) ; try { org.junit.Assert.assertEquals ( bookSystem.checkOutBook ( "Dr. Seuss" ) , "That book is not available" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { background_color = this.dialog.getColor () ; try { setColors ( font_color, background_color ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.websocket.OnClose @javax.transaction.Transactional public void onClose ( final javax.websocket.Session session, javax.websocket.CloseReason closeReason, @javax.websocket.server.PathParam ( value = "EVENTID" ) java.lang.Long eventId, @javax.websocket.server.PathParam ( value = "MATERIALID" ) java.lang.Long materialId, @javax.websocket.server.PathParam ( value = "PARTICIPANTID" ) java.lang.Long participantId, @javax.websocket.server.PathParam ( value = "KEY" ) java.lang.String key ) { try { synchronized ( this ) { removeClient ( eventId, materialId, participantId ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void protocolDidReceiveCustomData ( int[] data, int length ) { try { java.lang.System.out.println ( ( "protocolDidReceiveCustomData: " + data ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.e ( TAG, ( "protocolDidReceiveCustomData: " + data ) ) ; } 
protected static void printLine ( final java.lang.String lineCharacter, final int lineSize ) { try { for ( int i = 0; i < lineSize; i++ ) { java.lang.System.out.print ( lineCharacter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println () ; } 
@ java.lang.Override public void onTermChanged ( int termID, java.lang.String termName ) { try { adapter.newList ( getCourseScoreByTerm ( termID ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String checkCardNumberFormat ( java.lang.String cardNumber ) { try { if ( ( getCardNumberFormat () ) == 1 ) { cardNumber = "**** **** **** " + ( cardNumber.substring ( ( ( cardNumber.length () ) - 4 ) , 19 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return cardNumber; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { android.util.Log.d ( com.as.atlas.googlemapfollowwe.MapsActivity.TAG, ( "buttonSend.setOnclick destination=" + ( com.as.atlas.googlemapfollowwe.MapsActivity.currentUserInfo.destination ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( com.as.atlas.googlemapfollowwe.MapsActivity.currentUserInfo.destination ) != null ) { sendDestionationToServer ( com.as.atlas.googlemapfollowwe.MapsActivity.currentUserInfo.destination ) ; } } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { android.content.Intent intent = new android.content.Intent () ; try { intent.setClass ( this, com.FSL.mcuTracker.ListActivity.class ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } callOtherActivity ( intent, query ) ; return false; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { try { listModel.remove ( selected_stagiare ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } new com.pointeuse.afpa.obj.Stagiaire () .removeStagaireByid ( stagiaire_id ) ; } 
@ java.lang.Override @io.vertx.codegen.annotations.Nullable public java.lang.String subtag ( int level ) { try { ensureHeaderProcessed () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( level < ( parsedValues.size () ) ) { return parsedValues.get ( level ) ; } return null; } 
public javax.swing.JButton buttonFourClicked () { javax.swing.JOptionPane.showMessageDialog ( null, two.getD4 () ) ; try { this.setBackground ( java.awt.Color.green ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return choice4; } 
@ java.lang.Override public void setInventorySlotContents ( int slot, net.minecraft.item.ItemStack stack ) { while ( slot >= ( mainInventory.size () ) ) { mainInventory.add ( null ) ; } try { mainInventory.set ( slot, stack ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { try { while ( Pirates.pressedKeys.contains ( e.getKeyCode () ) ) { Pirates.pressedKeys.remove ( ( ( java.lang.Integer ) ( e.getKeyCode () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void resume () { try { if ( paused ) { paused = false; if ( ( audio ) != null ) { audio.play () ; } startTime = ( java.lang.System.currentTimeMillis () ) - ( timeBeforePause ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) throws java.io.IOException { try { new core.VisionServerThread () .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } new core.VisionProcessingThread ( 1, Constants.TargetType.tower ) .start () ; } 
@ java.lang.Override public void exec ( com.ninty.runtime.NiFrame frame ) { com.ninty.runtime.OperandStack stack = frame.getOperandStack () ; int num1 = stack.popInt () ; int num2 = stack.popInt () ; try { stack.pushInt ( ( num2 / num1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_main ) ; } 
public com.facebook.swift.codec.metadata.ThriftTypeReference getMapKeyThriftTypeReference ( java.lang.reflect.Type javaType ) { try { if ( com.facebook.swift.codec.metadata.ThriftCatalog.isStructType ( javaType ) ) { return getThriftTypeReference ( javaType, com.facebook.swift.codec.metadata.ThriftCatalog.Recursiveness.FORCED ) ; } else { return getThriftTypeReference ( javaType, com.facebook.swift.codec.metadata.ThriftCatalog.Recursiveness.NOT_ALLOWED ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.util.List<com.cats.lisamariewatkins.popularmovies.Models.Movie> movies ) { try { if ( movies != null ) { showSuccessView () ; mMoviesAdapter.setMovies ( movies ) ; } else { showErrorView () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void complete () { try { sink.complete () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onUserEventsSelected () { java.lang.String user = new com.alorma.github.StoreCredentials ( this ) .getUserName () ; try { if ( user != null ) { setFragment ( com.alorma.github.ui.fragment.events.EventsListFragment.newInstance ( user ) , false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public int compareTo ( task2.Student s ) { try { if ( lastname.equals ( s.lastname ) ) return firstname.compareTo ( s.firstname ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return lastname.compareTo ( s.lastname ) ; } 
private void addColumn ( java.lang.String value ) throws java.io.IOException { csvStream.write ( ",".getBytes ( UTF8 ) ) ; try { addFirstColumn ( value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected boolean checkForStatePropertyAndOtherStateActions ( final org.sosy_lab.cpachecker.cpa.arg.ARGState pState ) { try { if ( ! ( singleCheck ) ) { visitedStates.add ( pState ) ; } else { return super.checkForStatePropertyAndOtherStateActions ( pState ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void overrideArgument ( java.lang.String key, long value ) { try { getArguments () .putLong ( key, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void replaceConnection ( com.datastax.driver.core.Connection connection ) { if ( ! ( connection.state.compareAndSet ( State.OPEN, State.TRASHED ) ) ) return; try { open.set ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } maybeSpawnNewConnection () ; doTrashConnection ( connection ) ; } 
public void validateUpdatedUser ( org.fiware.apps.marketplace.model.User oldUser, org.fiware.apps.marketplace.model.User updatedUser ) throws org.fiware.apps.marketplace.exceptions.ValidationException { try { validateUser ( updatedUser, false, ( ! ( oldUser.getEmail () .toLowerCase () .equals ( updatedUser.getEmail () .toLowerCase () ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean isPass () { try { if ( ( averageScore () ) > 50 ) { pass = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return pass; } 
public void assignVitalityToCharacter ( java.lang.Character character, net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; try { characterVitalityMap.put ( character, vitality ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } home () ; } 
public void downloadSelected ( android.view.View v ) { java.util.ArrayList<sk.matus.ksp.guitarist_swiss_knife.ScrapeUGActivity.ResultEntryView> marked = gatherMarked () ; saveExtracted = true; try { extractSongs ( marked ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.StringBuilder buildHtmlHeadScript () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html.append ( "<script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>" ) .append ( NewLine.CRLF ) ; try { html.append ( "<script type=\"text/javascript\" src=\"/js/bootstrap.min.js\"></script>" ) .append ( NewLine.CRLF ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return html; } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { try { synchronized ( p ) { p.onClick () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public synchronized void reset () throws java.io.IOException { byteBuf[0] = byteBufSave[0]; byteBuf[1] = byteBufSave[1]; unusedBytes = unusedBytesSave; try { super.reset () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addRootNode ( T data ) { try { dataSet.add ( data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } rootNode = new model.graph.implementation.NodeImpl ( data ) ; } 
private void checkContent () { try { if ( movieList.isEmpty () ) { noContent.setVisibility ( View.VISIBLE ) ; } else { noContent.setVisibility ( View.GONE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void close () { try { if ( ( connection ) != null ) { connection.disconnect () ; connection = null; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log.info ( "D-Bus connection closed." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void pause () { timePause = java.lang.System.currentTimeMillis () ; threshold.pause () ; mVibrator.cancel () ; sensorHandler.pause ( false ) ; try { mMusicPlayer.stopSong () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static java.lang.String getLastNumb ( java.lang.String str ) { try { if ( str.matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return str.replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ""; } 
public void disableSearchTab () { try { if ( ( m_resultsTab ) != null ) { m_tabbedPanel.disableTab ( m_resultsTab, org.opencms.ade.galleries.client.Messages.get () .key ( Messages.GUI_GALLERY_NO_PARAMS_0 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.graphwalker.java.test.Result execute () { java.lang.ClassLoader contextClassLoader = switchClassLoader ( classLoader ) ; org.graphwalker.java.test.Result result = createResult ( org.graphwalker.java.test.Reflections.invoke ( executor, execute, true ) ) ; try { switchClassLoader ( contextClassLoader ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { try { if ( e != null ) android.util.Log.d ( "Object saving error", e.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onMessage ( java.lang.String msg ) { try { cP.setEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void populateFileds ( edu.asu.msse.gnayak2.models.GalleryModel gallery ) { try { tfTitle.setText ( gallery.getTitle () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void showCreateAircraft ( @android.support.annotation.NonNull android.app.Activity activity, int requestCode ) { try { if ( activity != null ) { android.content.Intent intent = new android.content.Intent ( activity, com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity.class ) ; activity.startActivityForResult ( intent, requestCode ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void changeWaypoint ( int taskIndex, int waypointIndex, com.droneemployee.client.common.Coordinate newCoordinate ) { try { tasks.get ( taskIndex ) .setWaypoint ( waypointIndex, newCoordinate ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer.updateWaypoint ( taskIndex, waypointIndex, newCoordinate ) ; } } 
public org.json.JSONObject getDataWithoutHeader () { org.json.JSONObject dataCopy = new org.json.JSONObject ( data.toString () ) ; try { dataCopy.remove ( "message" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dataCopy.remove ( "title" ) ; return dataCopy; } 
@ java.lang.Override public void run () { try { callback.onMessageSendingSuccess ( callId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar, int progress, boolean fromUser ) { float value = minYaw + ( progress * stepYaw ) ; try { CurrentYawSpeed.setText ( java.lang.Float.toString ( value ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.view.View view ) { guess ( view ) ; try { switchQuestionAndAnswers () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { try { if ( window != null ) { window.setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator.getAnimatedValue () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPreExecute () { super.onPreExecute () ; try { mDefaultColor = mRegularPrice.getCurrentTextColor () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static <S extends ru.noties.spg.SPGSerializer<?, ?>> void addSerializer ( S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager.getInstance () .mSerializers; try { map.put ( serializer.getClass () , serializer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.verapdf.pd.colors.PDColorSpace getColorSpace ( org.verapdf.as.ASAtom name ) { org.verapdf.pd.colors.PDColorSpace colorSpace = this.pageResources.getColorSpace ( name ) ; try { if ( colorSpace != null ) { colorSpace.setInherited ( inheritedResources ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return colorSpace; } 
public void actionPerformed ( java.awt.event.ActionEvent click ) { try { repaint () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void createAndSendMessage ( java.lang.String recipients, java.lang.StringBuilder resultingHtml ) { java.lang.String subject = "Monthly department salary report"; javax.mail.internet.MimeMessage resultMessage = mailSender.createMessageWithHTMLCode ( resultingHtml.toString () , subject, recipients ) ; try { mailSender.sendMessage ( resultMessage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder, int direction ) { try { mAdapter.onItemDismiss ( viewHolder.getAdapterPosition () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } moving = true; } 
public void setBadgeNumber ( int num ) { try { badge.setBadgeCount ( num ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void giveFocusBack () { if ( org.geogebra.web.html5.main.AppW.anyAppHasFocus ) { return; } try { if ( org.geogebra.web.html5.main.AppW.nativeGiveFocusBack () ) { if ( ( org.geogebra.web.html5.main.AppW.lastActiveElement ) != null ) { org.geogebra.web.html5.main.AppW.anyAppHasFocus = true; org.geogebra.web.html5.main.AppW.lastActiveElement.focus () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( mobile.paluno.de.palaver.model.Message message ) { try { super.onPostExecute ( message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( message != null ) { history.put ( friend, message ) ; refreshListView () ; } } 
public static void write ( final java.awt.image.BufferedImage image, final java.lang.String formatName, final java.io.File file ) throws java.io.IOException { try { javax.imageio.ImageIO.write ( image, formatName, file ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { try { context.getInChannel () .setAttachment ( context ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cgl.iotcloud.streaming.http.server.HttpClientEndpoint endpoint = context.getRule () .getEndpoint () ; } 
@ java.lang.Override public void execute () { try { init () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { try { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean.setSelected ( selected ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void populateAdapter ( java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> pathAndDataMap ) { try { adapter = new comquintonj.github.atlantastreetartproject.MyAdapter ( this.getApplicationContext () , pathAndDataMap ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mRecyclerView.setAdapter ( adapter ) ; } 
@ javafx.fxml.FXML public void changeTime () { javafx.util.Duration d = new javafx.util.Duration ( slider.getValue () ) ; try { mediaPlayer.seek ( d ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentTime.setText ( com.FXplayer.Util.getPrettyDurationString ( slider.getValue () ) ) ; } 
private void disconnectGoogleApiClient () { try { if ( ( googleApiClient ) != null ) { googleApiClient.disconnect () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.pilloxa.backgroundjob.ReactMethod public void getAll ( com.pilloxa.backgroundjob.Callback callback ) { com.pilloxa.backgroundjob.WritableArray jobs = _getAll () ; try { callback.invoke ( jobs ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void open () { try { db = this.getWritableDatabase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onNewIntent ( android.content.Intent intent ) { try { super.onNewIntent ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setupFragment ( intent, null ) ; } 
public void multiply ( java.lang.String in ) { java.math.BigDecimal multiplicand = new java.math.BigDecimal ( in ) ; try { total = total.multiply ( multiplicand ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { mCamera = mPreview.changeCamera () ; try { flashMode = mCamera.getParameters () .getFlashMode () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( flashMode ) == null ) { flashEnabled = false; flashButton.setSelected ( false ) ; } } 
public void onDrawerClosed ( android.view.View view ) { super.onDrawerClosed ( view ) ; try { setActionBarTitle () ; } catch ( Exception ex ) { ex.printStackTrace () ; } invalidateOptionsMenu () ; } 
public void autoUpButton ( android.app.ActionBar actionBar ) { try { if ( actionBar != null ) ( this.actionBar = actionBar ) .setDisplayHomeAsUpEnabled ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationStart ( android.view.animation.Animation animation ) { try { handler.post ( createRunnable ( parent, startTime, startScale, endScale ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } parent.init () ; can_scroll = false; } 
protected void done () { mnExportAs.setEnabled ( true ) ; try { mnExportAsKmz.setEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mntmOpenKml.setEnabled ( true ) ; progressBar.setVisible ( false ) ; } 
private void analyzeLine ( java.lang.String line ) { com.gmail.chibitopoochan.soqlexec.ui.DialogProcessor.logger.debug ( com.gmail.chibitopoochan.soqlexec.ui.DialogProcessor.resources.getString ( Constants.Message.Information.MSG_011 ) , line ) ; try { if ( ! ( inQuery ) ) analyzeCommand ( line ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( inQuery ) analyzeQuery ( line ) ; } 
@ java.lang.Override protected void onPause () { super.onPause () ; android.content.SharedPreferences sharedPref = getPreferences ( ru.caustic.lasertag.ui.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = sharedPref.edit () ; editor.putBoolean ( "bridge_bluetooth_autoconnect", switchRememberDevice.isChecked () ) ; try { editor.commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void update () { setValues () ; try { refreshForm () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void printMainMenu () { java.lang.System.out.println ( " Appointment Booking System " ) ; try { java.lang.System.out.println ( "--------------------------------" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( "1. Login" ) ; java.lang.System.out.println ( "2. Register" ) ; java.lang.System.out.println ( "3. Exit" ) ; java.lang.System.out.println ( "Please choose an option ( 1,2,3 ) " ) ; } 
public void setStateRevealed () { try { if ( changeState ( de.wackernagel.android.sidekick.widgets.CircularRevealView.STATE_REVEALED ) ) { android.support.v4.view.ViewCompat.postInvalidateOnAnimation ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onFoodEaten ( net.minecraft.item.ItemStack par1ItemStack, net.minecraft.world.World world, net.minecraft.entity.player.EntityPlayer player ) { try { addAllEffects ( world, player ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void paintComponent ( java.awt.Graphics g ) { super.paintComponent ( g ) ; try { g.drawImage ( this.image, this.location.y, ( ( this.location.x ) + ( Level.SCORE_BAR ) ) , null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void triggerNearCacheEviction ( com.hazelcast.core.IMap<java.lang.Integer, java.lang.Integer> map ) { populateMap ( map, 1 ) ; try { pullEntriesToNearCache ( map, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStop () { try { super.onStop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.m2dl.shifoomi.repository.room.RoomRepository repository = com.m2dl.shifoomi.repository.room.RoomRepositoryFirebase.getInstance () ; repository.deleteRoom ( roomId ) ; } 
public void addEvent ( int eventID ) { this.hybridEventsWork[this.numberEvents] = new matching.eventProcessor.parallel.HybridEvent ( eventID ) ; try { startThreads () ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( this.numberEvents ) ++; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startId ) { try { if ( intent != null ) { if ( intent.hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent.getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return START_STICKY; } 
private java.lang.String formatTag ( java.lang.String tag ) { try { if ( ! ( tag.startsWith ( "#" ) ) ) { tag = "#" + tag; } } catch ( Exception ex ) { ex.printStackTrace () ; } return tag; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity<java.lang.Void> create ( @org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService.isExist ( product ) ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } try { productsService.create ( product ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } 
private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpSession session, final java.lang.String name ) { final java.lang.String value = request.getParameter ( name ) ; try { if ( value != null ) { session.setAttribute ( name, value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void showText ( java.lang.String text ) { try { this.showText ( text ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index, java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; } try { if ( ( cachedNames ) != null ) { cachedNames.add ( name ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { float progress = ( ( float ) ( valueAnimator.getAnimatedValue () ) ) ; try { updateClipPath ( ( ( clipStartRadius ) + progress ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { try { super.onPostExecute ( aVoid ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } movieAdapter.notifyDataSetChanged () ; } 
public void onClick ( android.content.DialogInterface dialog, int which ) { try { EndGame () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void openErrorPopup () { try { android.widget.Toast.makeText ( this, R.string.input_error_msg, Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void reportError ( java.lang.Throwable t ) { try { reportNote ( t.getMessage () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void save ( java.lang.String key, T value ) { try { if ( value != null ) { cache.put ( key, value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBackPressed () { com.ahgpoug.timetabletest3.DataBaseIO.writeCfg () ; try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void createSubject ( java.lang.String key ) { subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application, key, adCacheTimeInMilliseconds, renderer, availableCreatives, beaconService, null, adManager ) ; try { subject.setOnStatusChangeListener ( onStatusChangeListener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void destroy () throws java.lang.Exception { LOG.info ( "ThriftServerConfiguration destroy, shutdown eureka client." ) ; try { eurekaClient.shutdown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } LOG.info ( "ThriftServerConfiguration destroy, shutdown rpc server." ) ; thriftServer.stop () ; } 
private boolean checkMessage ( java.lang.String input ) { try { if ( ( input.equals ( null ) ) || ( input.trim () .equals ( "" ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void unloaded ( java.lang.String nsURI, org.eclipse.emf.ecore.EPackage pak ) { try { queryEnvironment.removeEPackage ( pak.getName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.util.List<? extends java.lang.Object> getXRef () { try { org.verapdf.model.impl.pb.cos.PBCosDocument.logger.warn ( "Xref not supported yes. return null" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.util.ArrayList<> () ; } 
@ org.junit.Test public void calculatePenalty_noPenalty () { initBasicProperty ( dateFormat.format ( new java.util.Date () ) ) ; initServicesForPTBillable () ; try { initDataForCurInstallment () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeFirstItem () { try { mAllDatas.remove ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.rsen.base.RBaseAdapter.notifyItemRemoved ( 0 ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { lineNum = 0; currentText = ""; try { log.setText ( currentText ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } shapeLayout.removeAllViews () ; } 
private org.apache.lucene.search.spans.SpanQuery fixField ( org.apache.lucene.search.spans.SpanQuery query ) { try { if ( query.getField () .equals ( fieldName ) ) { return query; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.apache.lucene.search.spans.FieldMaskingSpanQuery ( query, fieldName ) ; } 
public void pageMinus () { int page = tableDrawer.getPage () ; try { if ( page > 0 ) { page -= 1; tableDrawer.setPage ( page ) ; setPageBtnState () ; setPageNrToField ( page ) ; draw () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String chatInput ( java.lang.String displayText ) { java.lang.String returnedText = ""; try { returnedText = javax.swing.JOptionPane.showInputDialog ( null, displayText ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return returnedText; } 
private void showNicknameTaken () { try { if ( ! ( editTextNickname.getText () .toString () .trim () .isEmpty () ) ) { nicknameTaken = true; editTextNickname.setCompoundDrawablesWithIntrinsicBounds ( 0, 0, R.drawable.ic_error, 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onTouch ( android.view.View v, android.view.MotionEvent event ) { try { switch ( v.getId () ) { case R.id.relative_from: imageCenterScreen.setImageDrawable ( blackFlag ) ; break; case R.id.relative_to: imageCenterScreen.setImageDrawable ( greenFlag ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public int SetL ( java.lang.String x ) { try { if ( ( x.length () ) == 1 ) x = "0" + x; } catch ( Exception ex ) { ex.printStackTrace () ; } test1.L = x; jL.setText ( x ) ; return 1; } 
public void driveRaw ( double leftPower, double rightPower ) { frontleft.set ( leftPower ) ; try { frontright.set ( rightPower ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addUser ( customclass.User user ) { try { userList.add ( user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public interactivespaces.activity.component.web.WebServerActivityComponent addStaticContent ( java.lang.String uriPrefix, java.io.File baseDir ) { try { if ( ( webServer ) != null ) { addStaticContentHandler ( uriPrefix, baseDir ) ; } else { staticContent.add ( new interactivespaces.activity.component.web.BasicWebServerActivityComponent.StaticContent ( uriPrefix, baseDir ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { try { helper.logMessage ( "db consistency check is canceled", false, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } 
@ java.lang.Override public void show () { try { if ( ( isReady () ) && ( ( ad ) != null ) ) { ad.show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void fixFile () { java.lang.String filecontent = this.getContentofFile () ; filecontent = filecontent.replaceAll ( ";\n\n---", ";\n---" ) ; try { this.rewriteFile ( filecontent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationStart ( android.view.View view ) { try { getFab () .setVisibility ( View.VISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { LuceneImplementacion lucene = new LuceneImplementacion () ; try { lucene.BuscarIndice ( "lucene" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResumeFragments () { super.onResumeFragments () ; try { if ( ( com.facebook.AccessToken.getCurrentAccessToken () ) != null ) { userSkippedLogin = false; } else { showFragment ( com.socialapp.eventmanager.LoginActivity.SPLASH, true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onCompleted () { java.lang.System.out.println ( ( "Exiting last sum was : " + ( this.sum ) ) ) ; try { this.latch.countDown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setVisible ( boolean visible, com.betmansmall.game.GameInterface.GameInterfaceElements element ) { try { getElement ( element ) .setVisible ( visible ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { ( ( org.wordpress.android.WordPress ) ( context.getApplicationContext () ) ) .component () .inject ( this ) ; try { super.onReceive ( context, intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { org.ow2.proactive.scheduler.util.SchedulerStarter.logger.info ( "Shutting down..." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( org.ow2.proactive.scheduler.util.SchedulerStarter.discoveryService ) != null ) { org.ow2.proactive.scheduler.util.SchedulerStarter.discoveryService.stop () ; } } 
@ java.lang.Override public int hashCode () { int result = city.hashCode () ; try { result = ( 31 * result ) + ( street.hashCode () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
private void goBackToProductDetail () { try { getSupportFragmentManager () .popBackStack () ; } catch ( Exception ex ) { ex.printStackTrace () ; } getSupportFragmentManager () .getBackStackEntryAt ( 0 ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; gameView = new abyssproductions.double0driver.GameEngine.GameSurfaceView ( this ) ; try { this.setVolumeControlStream ( AudioManager.STREAM_MUSIC ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( gameView ) ; } 
private void invokeRenderProgressCallback ( java.lang.String info ) { renderProgressCallback.invoke ( com.shc.silenceengine.core.Game.getBatcher () , updateProgress () , info ) ; try { java.lang.System.out.println ( info ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getFileDirectory ( java.lang.String fileDir ) { try { if ( fileDir.equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING; } } catch ( Exception ex ) { ex.printStackTrace () ; } return fileDir; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{cartId}", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String getCart ( @org.springframework.web.bind.annotation.PathVariable ( value = "cartId" ) java.lang.String cartId, org.springframework.ui.Model model ) { try { model.addAttribute ( "cartId", cartId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "cart"; } 
public com.bugull.mongo.BuguUpdater<T> bitwise ( java.lang.String key, int value, com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; try { append ( Operator.BIT, key, logic ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.wait_imageview: waitButtonAction ( id ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void parseResTable () { table = new com.chris.pkg.manager.bean.android.resource.bean.ResChunkTable () ; try { parseResTableHeader () ; } catch ( Exception ex ) { ex.printStackTrace () ; } parseResPkg () ; } 
@ java.lang.Override public void handleCallSessionEvent ( int event ) { if ( ( mHandler ) == null ) { return; } try { mHandler.obtainMessage ( android.telecom.VideoCallImpl.MessageHandler.MSG_HANDLE_CALL_SESSION_EVENT, event ) .sendToTarget () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { com.jiang.android.push.flyme.FlymeReceiver.mPushInterface.onAlias ( context, subAliasStatus.getAlias () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void updateConfiguration ( com.fasterxml.jackson.databind.JsonNode jsonNode ) { try { mConfigurationManager.updateString ( com.vaporwarecorp.mirror.component.ForecastManagerImpl.PREF_API_KEY, jsonNode, "apiKey" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } loadConfiguration () ; } 
@ java.lang.Override protected void describeMismatchSafely ( com.twitter.model.User item, org.hamcrest.Description mismatchDescription ) { try { mismatchDescription.appendText ( "a user banned status was " ) .appendValue ( ( ! ( item.isAccountNonLocked () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( ( mSnackbar ) != null ) { this.sendEvent ( com.lugg.ReactSnackbar.ReactSnackbarModule.EVENT_HIDE, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setInfoText ( java.lang.String text ) { try { infoLabel.setText ( text ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addBank ( int index ) { try { bank.add ( hand.remove ( index ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onQueryTextChange ( java.lang.String newText ) { mSearchText = newText; try { if ( ( list ) != null ) doSearch () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void modifyMode ( boolean state ) { adapter = new uz.samtuit.samapp.adapters.MyItineraryAdapter ( getContext () , day, state, true, getFragmentManager () , this ) ; try { mRecyclerView.setAdapter ( adapter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; try { rest.addObserver ( listen ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } rest.getCustomerInfo ( this.customerId ) ; } 
private void bApplyMouseExited ( java.awt.event.MouseEvent evt ) { try { bApply.setIcon ( new javax.swing.ImageIcon ( replicatorg.app.ui.GraphicDesignComponents.getImage ( "mainWindow", "b_simple_12.png" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.jajja.jorm.sql.Appender[] getDeleteAppenders () { try { if ( isReturning ) { return com.jajja.jorm.sql.Postgres.DELETE_APPENDERS; } else { return super.getDeleteAppenders () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { captureStillPictureLocked ( current_ISO, current_EXP, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void logAndAppend ( java.lang.StringBuilder sb, java.lang.String str ) { try { com.liveramp.cascading_ext.flow.LoggingFlow.LOG.info ( str ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sb.append ( str ) .append ( "\n" ) ; } 
@ org.protocoderrunner.apidoc.annotation.ProtoMethod ( description = "Creates a new web view", example = "" ) @org.protocoderrunner.apidoc.annotation.ProtoMethodParam ( params = { "" } ) public org.protocoderrunner.apprunner.api.widgets.PWebView newWebview () { try { initializeLayout () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.protocoderrunner.apprunner.api.widgets.PWebView webView = new org.protocoderrunner.apprunner.api.widgets.PWebView ( getActivity () ) ; return webView; } 
@ java.lang.Override public void run () { try { onUSBDataReceive ( buffer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String saveUser () { try { userDao.add ( user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return index () ; } 
public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { try { synchronized ( subLaunches ) { subLaunches.put ( subLaunch, new org.eclipse.debug.core.model.IProcess[] {} ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static int toInt ( java.lang.String s ) { int r = 0; try { if ( ! ( s.equals ( "" ) ) ) { r = java.lang.Integer.parseInt ( s ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return r; } 
public int sumCards () { int sum = 0; try { for ( com.bishopireton.finalproject.Card card : cards ) sum += card.getValue () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return sum; } 
@ java.lang.Override public final void addOwnedElement ( eu.modelwriter.core.alloyinecore.structure.Element child ) { try { super.addOwnedElement ( child ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( child instanceof eu.modelwriter.core.alloyinecore.structure.Object ) { } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/addnotice" ) public java.lang.String addNotice ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response, org.springframework.ui.ModelMap modelMap ) throws java.io.UnsupportedEncodingException { java.lang.String content = request.getParameter ( "data" ) ; try { noticeService.add ( content ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "pages/template/notice"; } 
@ java.lang.Override public org.openflexo.foundation.resource.RepositoryFolder<org.openflexo.foundation.fml.rt.rm.ViewResource, ?> getFolder () { try { if ( ( getResource () ) != null ) { return getViewLibrary () .getParentFolder ( getResource () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { try { accountCrud.deleteAccount ( accountName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.sql.ResultSet GetFavoriteShopsByUser ( java.lang.String username ) throws java.sql.SQLException { try { ConnectToDB () ; } catch ( Exception ex ) { ex.printStackTrace () ; } stmt = conn.createStatement () ; java.lang.String sql = ""; java.sql.ResultSet rs = stmt.executeQuery ( sql ) ; return rs; } 
@ java.lang.Override protected void paintComponent ( java.awt.Graphics g ) { super.paintComponent ( g ) ; try { offsetTiles () ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateFogOfWar () ; renderTiles ( g ) ; hud.updateHUD ( g ) ; } 
@ org.springframework.transaction.annotation.Transactional public ua.in.ngo.ednist.self.SelfInfo getSelfInfo () { ua.in.ngo.ednist.self.SelfInfo info = selfInfoDao.getSelfInfo () ; try { if ( info != null ) { info.setLogoPath ( "/resources/self/logo/logo.png" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return info; } 
@ java.lang.Override public void redraw () { try { chartPanel.setChart ( this.getChart () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getAliases () { try { org.junit.Assert.assertThat ( net.time4j.tz.threeten.JdkZoneProviderTest.zp.getAliases () .isEmpty () , org.hamcrest.CoreMatchers.is ( true ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, @android.support.annotation.Nullable android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { view = inflater.inflate ( R.layout.fragment_main, container, false ) ; try { butterknife.ButterKnife.bind ( this, view ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
public void printError () { try { java.lang.System.out.printf ( ( ( ( ( ( "linha: " + ( line ) ) + " --> " ) + ( mensagem ) ) + ( variavel ) ) + '\n' ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( "---" ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int id ) { com.CMPUT301W15T02.teamtoapp.Model.Claim claim = adapter.getItem ( position ) ; try { claimListController.removeClaim ( claim ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void logToFile ( java.lang.String message ) throws java.lang.Exception { java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.FileWriter ( logFile, true ) ) ; writer.write ( message ) ; try { writer.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { ( ( com.abition.self.MainActivity ) ( context ) ) .newPlanDialog.show ( ( ( com.abition.self.MainActivity ) ( context ) ) .getSupportFragmentManager () , null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testInsideAreaDown () { area.setDirection ( Angle.DOWN ) ; area.setRange ( 5 ) ; model.area.TileCoordinate loc = new model.area.TileCoordinate ( 10, 11 ) ; try { org.junit.Assert.assertTrue ( area.isInRange ( loc ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { try { authLatch.countDown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void normalPropertiesDecrypted () { try { org.junit.Assert.assertEquals ( "foo", this.environment.resolvePlaceholders ( "${foo}" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onTouch ( android.view.View view, android.view.MotionEvent motionEvent ) { try { if ( autoHide ) { delayedHide () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public static void changeMode ( com.daquexian.chaoli.forum.viewmodel.BaseViewModel viewModel ) { try { if ( com.daquexian.chaoli.forum.meta.NightModeHelper.isDay () ) { com.daquexian.chaoli.forum.meta.NightModeHelper.setNight () ; } else { com.daquexian.chaoli.forum.meta.NightModeHelper.setDay () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } com.daquexian.chaoli.forum.meta.NightModeHelper.mViewModel = viewModel; } 
@ java.lang.Override public void newgame () throws java.io.IOException { try { out.writeByte ( 'N' ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void doTrainning ( android.view.View v ) { try { android.widget.Toast.makeText ( getApplicationContext () , "Going to Train Yourself activity", Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent intent = new android.content.Intent ( this, team_uganda.ieltsassistor.TrainYourself.class ) ; startActivity ( intent ) ; } 
public void setPaused ( boolean state ) { paused = state; try { if ( state ) { pauseButton.setText ( "Unpause" ) ; pApp.scene.water.setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton.setText ( "Pause" ) ; pApp.scene.water.setWindDirection ( Vector2f.UNIT_XY ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () throws java.lang.Exception { try { org.mockito.MockitoAnnotations.initMocks ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } presenter.attachView ( mockView ) ; } 
public void stopLoading () { progress.dismiss () ; progress = null; try { org.wildstang.wildrank.android.data.DataManager.prepareForEject () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { try { if ( user != null ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT, user.getId () ) ; return true; } else { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT, null ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStop () { try { super.onStop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public javafx.scene.image.Image getImage () { try { if ( this.animated ) { return this.animation.getCurrentFrame () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this.image; } 
private void DriveSmooth () { motorLinks.rotate ( 90, true ) ; try { motorRechts.rotate ( 90, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void resolved ( daris.client.model.object.DObject o ) { if ( o == null ) { return; } java.lang.String contentUrl = ( ( daris.client.model.dataset.DataSet ) ( o ) ) .contentDownloadUrl () ; try { if ( contentUrl != null ) { aeDownloadContent.enable () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected android.webkit.WebView createViewInstance ( com.facebook.react.uimanager.ThemedReactContext reactContext ) { android.webkit.WebView webView = reactContext; try { enableFileUpload ( webView ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return webView; } 
@ java.lang.Override public void update ( float tpf ) { try { sendMonstersToUI () ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateMonsterSelection () ; if ( ( attackResults ) != null ) { executeAttackResults ( tpf ) ; if ( ( attackResults ) == null ) { finishActionAndGoOn () ; } } } 
public static void create_window () { javax.swing.JFrame frame = new javax.swing.JFrame ( "Draw your Shape" ) ; try { frame.setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } frame.getContentPane () ; frame.pack () ; frame.setVisible ( true ) ; } 
public static void addPythonEngine ( com.suyong.kakaobot.script.PythonScriptEngine engine ) throws java.lang.Exception { try { com.suyong.kakaobot.KakaoTalkListener.pythonEngines.add ( engine ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void stream ( org.codehaus.staxmate.in.SMHierarchicCursor rootCursor ) throws javax.xml.stream.XMLStreamException { rootCursor.advance () ; try { org.sonar.plugins.flex.cobertura.CoberturaReportPasrer.collectPackageMeasures ( rootCursor.descendantElementCursor ( "package" ) , context, fileSystem ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void displaySchedule ( comp110.Schedule schedule ) { _scheduleStage = new javafx.stage.Stage () ; renderScheduleStage ( schedule ) ; try { _scheduleStage.show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void disconnect () { java.lang.System.out.println ( "Déconnexion." ) ; try { this.user.setIsConnected ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.user.disconnect () ; this.run ( this.port ) ; } 
@ Test public void test_war_play () { War newGame = new War () ; try { newGame.play ( 4, 4, 4 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.unascribed.lanthanoid.MovingSoundEntity get ( net.minecraft.entity.Entity ent ) { com.unascribed.lanthanoid.MovingSoundEntity s = com.unascribed.lanthanoid.MovingSoundEntity.sounds.get ( ent ) ; try { if ( ( s != null ) && ( s.donePlaying ) ) { com.unascribed.lanthanoid.MovingSoundEntity.sounds.remove ( s ) ; s = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return s; } 
public void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { try { synchronized ( mRequestQueue ) { mRequestQueue.add ( request ) ; processNextRequest () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean deleteEmployee ( java.lang.String employee_id ) throws java.sql.SQLException { controller.SQL_Handler.stmt = controller.SQL_Handler.sql_statements.get ( "DelEmp" ) ; try { controller.SQL_Handler.stmt.setString ( 1, employee_id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return controller.SQL_Handler.stmt.execute () ; } 
@ java.lang.Override public void onSessionInitiated ( final org.opendaylight.controller.sal.binding.api.BindingAwareBroker.ProviderContext session ) { ntfbenchmark.impl.NtfbenchmarkProvider.LOG.info ( "NtfbenchmarkProvider Session Initiated" ) ; try { session.addRpcImplementation ( org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.ntfbenchmark.rev150105.NtfbenchmarkService.class, this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { try { child.setAvatar ( cn.momia.image.api.ImageFile.url ( child.getAvatar () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return child; } 
@ org.junit.Test public void testApplicationInfoVersion () { try { org.junit.Assert.assertEquals ( "Version mismatch", "1.1.0-SNAPSHOT", appInfo.getVersion () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.String target = javax.swing.JOptionPane.showInputDialog ( "Name of the target to reach" ) ; try { decc.roadTo ( target ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override @net.openhft.chronicle.core.annotation.ForceInline public net.openhft.chronicle.bytes.Bytes<Underlying> writeSkip ( long bytesToSkip ) throws java.nio.BufferOverflowException, net.openhft.chronicle.core.io.IORuntimeException { try { writeCheckOffset ( writePosition, bytesToSkip ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } writePosition += bytesToSkip; return this; } 
public void setBackgroundColor ( int bgColor ) { this.mBackgroundColor = bgColor; try { super.setBackgroundColor ( this.mBackgroundColor ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } invalidate () ; } 
public void refreshSurfaceTexture ( int contentWidth, int contentHeight ) { this.mContentWidth = contentWidth; this.mContentHeight = contentHeight; try { updateTextureViewSize () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Character getCharacter ( java.lang.String name ) { try { for ( java.lang.Character aChar : charList ) { if ( aChar.getName () .equalsIgnoreCase ( name ) ) return aChar; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onSuccess ( java.util.Map<java.lang.String, java.lang.String> result ) { eu.h2020.symbiote.CoreResourceAccessMonitorApplicationTests.log.info ( ( "Successully received resource urls: " + result ) ) ; try { resultRef.set ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.content.DialogInterface dialog, int id ) { for ( de.dhbwloerrach.beaconlocation.models.Beacon beacon : new java.util.ArrayList ( selectedBeacons ) ) { selectedBeacons.remove ( beacon ) ; databaseHandler.deleteBeacon ( beacon ) ; } try { updateBeaconListView () ; } catch ( Exception ex ) { ex.printStackTrace () ; } updateMenuButtons () ; } 
private com.android.volley.RequestQueue getRequestQueue () { try { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley.newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx.getApplicationContext () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return mRequestQueue; } 
@ java.lang.Override public void readRestorableFromNBT ( net.minecraft.nbt.NBTTagCompound tagCompound ) { try { super.readRestorableFromNBT ( tagCompound ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } readBufferFromNBT ( tagCompound, inventoryHelper ) ; crystalLiquid = tagCompound.getInteger ( "liquid" ) ; } 
public void start () { try { checkingThread.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( isMaster ) { resourceManagerReadThread.start () ; } } 
public void getUserDetailsFromFB () { try { new com.example.events.PullDataFromFacebook ( cameToThisActivityFrom, this ) .getDataFromFacebook () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void onCancelAlready ( zemin.notification.NotificationEntry entry ) { try { onCancelFinished ( entry ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mCenter.cancel ( entry ) ; } 
@ org.smart4j.framework.mvc.annotation.Request.Post ( value = "/chart/json" ) public org.smart4j.framework.mvc.bean.Result getChartInfo ( org.smart4j.framework.mvc.bean.Params params ) { java.lang.Object[] chartObjs = orderService.getChartInfo ( params.getFieldMap () ) ; org.smart4j.framework.mvc.bean.Result result = new org.smart4j.framework.mvc.bean.Result ( true ) ; try { result.setData ( chartObjs ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void exec ( com.ninty.runtime.NiFrame frame ) { com.ninty.runtime.OperandStack stack = frame.getOperandStack () ; double num1 = stack.popDouble () ; double num2 = stack.popDouble () ; try { stack.pushDouble ( ( num2 - num1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setComboBoxModel ( org.miradi.objecthelpers.DateUnit dateUnit ) { java.lang.Object[] choiceItems = getChoiceItems ( dateUnit ) ; try { removeAllItems () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setModel ( new javax.swing.DefaultComboBoxModel ( choiceItems ) ) ; } 
public static void saveContent ( java.lang.String text ) { try { if ( me.shreyasr.quicknote.notepad.NotepadUtils.hasCurrentNote () ) me.shreyasr.quicknote.notepad.NotepadUtils.prefs.edit () .putString ( me.shreyasr.quicknote.notepad.NotepadUtils.getCurrentNoteTitle () , text ) .apply () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean setTimeOfPrimeVacDateFields () throws java.lang.InterruptedException { java.lang.Thread.sleep ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.SLEEP_500 ) ; try { findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) .sendKeys ( "10:29" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) .sendKeys ( Keys.ENTER ) ; clickWhenVisible ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_CLOSE_BUTTON ) ; return true; } 
public void markTaskCompletion () { if ( this.countDownLatch.isPresent () ) { this.countDownLatch.get () .countDown () ; } try { this.taskState.setProp ( ConfigurationKeys.TASK_RETRIES_KEY, this.retryCount.get () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void start () { xyz.jaoafa.mymaid.BugReport.plugin = xyz.jaoafa.mymaid.MyMaid.getJavaPlugin () ; try { xyz.jaoafa.mymaid.BugReport.plugin.getLogger () .info ( "BugReportを起動しました。" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemDismiss ( int position ) { try { if ( ( mTaskList.size () ) > 0 ) { mTaskList.remove ( position ) ; notifyItemRemoved ( position ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { try { synchronized ( mBuffer ) { if ( ( mBuffer ) != null ) { mBuffer.add ( buffer ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS; try { if ( Player.MODERATOR.getName () .equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void addBooleanElement ( java.lang.String element ) { try { com.google.common.base.Preconditions.checkNotNull ( element ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.booleanElements.add ( element ) ; } 
@ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { try { if ( success ) { mOnOff = ! ( mOnOff ) ; changeButtonImage ( mOnOff ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void exportRendering () { try { mRenderWindow.exportRendering ( java.lang.String.valueOf ( raytracer.Raytracer.stopTime ( tStart ) ) , mMaxRecursions, ( ( int ) ( mAntiAliasingSamples ) ) , mDebug, mGiLevel, mGiSamples ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { view = inflater.inflate ( R.layout.fragment_goals, container, false ) ; initializeGUI () ; setInitialValues () ; try { finalizeGUI () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
public void stateChanged ( javax.swing.event.ChangeEvent e ) { org.processmining.plugins.heuristicsnet.miner.heuristics.miner.settings.HeuristicsMinerSettings hMS = settings.getHmSettings () ; try { settings.setHmSettings ( hMS ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationEnd ( android.animation.Animator animation ) { try { updateItem ( getAdapterPosition () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { try { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH, "PHASE" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int getShapeY () { try { if ( sizeConstrainedWithWidth () ) { return ( ( getPanelHeight () ) - ( getShapeHeight () ) ) / 2; } else { return getBorderSize () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { this.db = db; tdd.tracker.hobby.hobbytrackerincremental.database.TableManager tableAdmin = tdd.tracker.hobby.hobbytrackerincremental.database.TableManager.getInstance () ; try { for ( tdd.tracker.hobby.hobbytrackerincremental.database.Table t : tableAdmin.getTables () ) t.createTable ( db ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addUserInSession ( javax.servlet.http.HttpServletRequest request, Account.Models.User user ) { javax.servlet.http.HttpSession session = request.getSession ( true ) ; try { session.setAttribute ( session.getId () , user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact, @org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { try { this.contactRepository.editContact ( contact, id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "redirect:/"; } 
@ java.lang.Override public void onFailure ( java.lang.Error error ) { timber.log.Timber.e ( error.getMessage () ) ; try { android.widget.Toast.makeText ( this, error.getMessage () , Toast.LENGTH_LONG ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setText ( false, null ) ; } 
public static void main ( java.lang.String[] args ) { try { while ( true ) { com.solarus.IG pacmanGraphique = new com.solarus.IG () ; pacmanGraphique.initialisationEcran () ; pacmanGraphique.ecranDeDemarrage () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void moveToNextQueue ( java.nio.file.Path file ) throws java.lang.InterruptedException { directoryQueue.put ( file ) ; try { ru.shishmakov.core.DirectoryFileWatcher.logger.info ( "--> put file \'{}\' : directoryQueue", file.getFileName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void enableTexCoordPointer () { if ( ( texCoordID ) != ( -1 ) ) enableVertexPointer ( texCoordID ) ; try { glUniform1i ( enableTextureID, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String promptControl () { java.lang.String ctrl = ""; java.lang.System.out.print ( "Enter a control: " ) ; try { ctrl = Keyboard.readString () ; } catch ( Exception ex ) { ex.printStackTrace () ; } ctrl = ctrl.toLowerCase () ; return ctrl; } 
public static void startForResult ( android.app.Activity activity ) { android.content.Intent intent = new android.content.Intent ( activity, com.everypay.sdk.views.CardFormActivity.class ) ; try { activity.startActivityForResult ( intent, com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { super.onDestroy () ; if ( ( connection ) != null ) connection.close () ; try { unregisterReceiver ( btReceiver ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { try { com.jstakun.gms.android.config.ConfigurationManager.getInstance () .setLocation ( location ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mLocationHandler.sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; } 
private void showAudioControlsForced () { try { if ( ( areAudioControlsAvailable () ) && ( ! ( audioControls.isShowing () ) ) ) { audioControls.show ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void removeSocket ( java.lang.String username ) { try { mappedSockets.remove ( username ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getData () { java.util.List<com.cidic.sdx.model.BrandModel> list = brandServiceImpl.getBrandData ( "0" ) ; try { java.lang.System.out.println ( list.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setId ( java.lang.String id ) { try { if ( ( id != null ) && ( ! ( id.isEmpty () ) ) ) { org.corpus_tools.salt.graph.GraphFactory.createIdentifier ( this, id ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player, @javax.annotation.Nullable java.lang.String source ) { if ( source == null ) { return; } try { player.setSource ( source ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void dispatchPropertyEvent ( gr.entij.PropertyEvent e ) { try { propertyListeners = gr.entij.Entity.fireEvent ( propertyListeners, e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void surfaceCreated ( android.view.SurfaceHolder surfaceHolder ) { try { android.util.Log.d ( "minko", "DummyCameraPreview.surfaceCreated" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( isActive () ) _callback.run ( surfaceHolder, 0, 0, 0 ) ; } 
public static void main ( java.lang.String[] args ) { Driver.parseFile () ; Driver.root = new Node ( null, Driver.attributes, Driver.data ) ; Driver.root.calculateI () ; try { Driver.print () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void showAnnotation () { if ( ( annotation ) == null ) { annotation = new org.redpin.android.ui.mapview.LocationMarkerAnnotation ( this ) ; container.addView ( annotation ) ; } try { annotation.setEnabled ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } annotation.setVisibility ( getVisibility () ) ; } 
public void maalSelect () { try { if ( ( maal_list.getValue () ) != null ) { int id = java.lang.Integer.parseInt ( maal_list.getValue () ) ; retrieve.getRow ( id ) ; fillMaal ( id ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void start () { org.semux.core.PendingManagerTest.pendingMgr = new org.semux.core.PendingManager () ; try { org.semux.core.PendingManagerTest.pendingMgr.start ( org.semux.core.PendingManagerTest.chain, org.semux.core.PendingManagerTest.channelMgr ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startId ) { try { if ( android.support.compat.BuildConfig.DEBUG ) android.util.Log.d ( iso.piotrowski.marek.nyndro.RemainderService.RemainderService.TAG, "onStartCommand: [service] start" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } doRemind () ; return START_NOT_STICKY; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super.onSaveInstanceState ( outState ) ; try { TicTacToeGame.sInfoColor = mInfoTextView.getTextColors () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return; } 
@ javax.ws.rs.POST @javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @javax.ws.rs.Path ( value = "/room/{roomId}/add-card" ) public org.phase.game.entities.Card addCardToCommonDesk ( org.phase.game.entities.Card cards ) { try { this.card = new org.phase.game.entities.Card ( cards.getOwner () , cards.getType () , cards.getMark () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this.card; } 
@ java.lang.Override public E previous () { try { if ( hasPrevious () ) current = current.prev; else throw new java.util.NoSuchElementException () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( E ) ( current.data ) ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { java.lang.String value = input.getText () .toString () ; try { if ( ( value.length () ) > 0 ) { addFood ( value ) ; populateFoodListView () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { mFScreenEventCallback.setHolder ( holder ) ; try { eventCallback.bindHolder ( holder, position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mXibaListPlayUtil.startFullScreen ( url, position, holder.container, eventCallback, mFScreenEventCallback ) ; } 
public void startVelocity () { vectorDriveActive = true; driveThreadActive = true; try { driveThread.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailure ( int error_code ) { try { failureHandler ( error_code ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { lcdLines[localI] = ( str + " " ) .substring ( 0, 20 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.facebook.react.bridge.ReactMethod public void rotate ( int rotation ) { try { setApplicationOrientation ( rotation ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller, net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; try { assignControlOfCharacterToUser ( controller, character ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setConsoleText ( java.lang.String text ) { try { LabelConsole.setText ( "Console got message:" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "unused" ) java.lang.String[] listServices () { android.os.IBinder sspBinder = me.ycdev.android.lib.common.internalapi.android.os.ServiceManagerIA.getService ( mSspName ) ; me.ycdev.android.lib.ssproxy.proxy.ISysServiceProxy sspService = me.ycdev.android.lib.ssproxy.proxy.SysServiceProxyNative.asInterface ( sspBinder ) ; try { if ( sspService != null ) { return sspService.listServices () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override protected void setUpTestData () throws java.io.IOException { org.mule.transport.sftp.SftpAutoDeleteTestCase.latch = new org.mule.util.concurrent.Latch () ; try { sftpClient.mkdir ( org.mule.transport.sftp.SftpAutoDeleteTestCase.AUTO_DELETE_OFF ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sftpClient.mkdir ( org.mule.transport.sftp.SftpAutoDeleteTestCase.AUTO_DELETE_ON ) ; } 
@ java.lang.Override public void addTextChangedListener ( android.text.TextWatcher watcher ) { if ( ( mListeners ) == null ) { mListeners = new java.util.ArrayList<> () ; super.addTextChangedListener ( getTextWatcherDelegator () ) ; } try { mListeners.add ( watcher ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addSong ( int index ) throws java.io.IOException { outToServer.writeObject ( "add" ) ; try { outToServer.writeObject ( index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onNodeDragEnd ( final com.ait.lienzo.client.core.shape.wires.NodeDragEndEvent event ) { try { doResize ( AbstractWiresEvent.Type.END, index, event.getDragContext () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getMagnets () .shapeMoved () ; } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth ) { try { mBirthday.setText ( ( ( ( ( dayOfMonth + "-" ) + ( monthOfYear + 1 ) ) + "-" ) + year ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void removeTimetableAt ( int position ) { getFileManager () .delete ( timetables.get ( position ) .getId () ) ; try { timetables.remove ( position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } adapter.notifyItemRemoved ( position ) ; updateNoTimetablesTextView () ; } 
@ org.junit.Before public void setup () { broadcaster = new com.space.server.engine.impl.Broadcaster () ; engine = org.mockito.Mockito.Mockito.mock ( com.space.server.engine.api.GameEngine.class ) ; broadcaster.setEngine ( engine ) ; try { broadcaster.setWorldId ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int i = categoryList.getSelectedIndex () ; catArr.get ( i ) .setVisible ( false ) ; validate () ; try { repaint () ; } catch ( Exception ex ) { ex.printStackTrace () ; } change = true; } 
public void addItem ( res.Item i ) { inventory.add ( i ) ; try { genImage () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { try { if ( deletarCotacaoNaBase () ) { finish () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { try { synchronized ( block1Transfers ) { return block1Transfers.get ( key ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.String msg ) { messageEditText.setText ( "" ) ; try { sendMessageButton.setClickable ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } messageEditText.requestFocus () ; } 
@ java.lang.Override protected void onStop () { super.onStop () ; try { android.util.Log.d ( com.project.uoft.thermostat_interface.MainActivity.TAG, "onStop" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mNest.removeAllListeners () ; com.project.uoft.thermostat_interface.Auth.removeAuthListener () ; } 
public static void main ( java.lang.String[] args ) { HighScores hs = HighScoresParser.readHighScores ( "resources/highscores.txt" ) ; try { java.lang.System.out.println ( hs.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this, cl ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResult ( com.google.android.gms.common.api.Status status ) { try { if ( status.isSuccess () ) { } else { android.util.Log.e ( TAG, ( "Removing geofence failed: " + ( status.getStatusMessage () ) ) ) ; sendError () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationEnd ( android.animation.Animator animation ) { performDismiss ( downView, downPosition ) ; try { mCallbacks.onViewSwiped ( downPosition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void decrease ( android.view.View view ) { try { if ( ( numberOfCoffees ) > 0 ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1; tv.setText ( ( "" + ( numberOfCoffees ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { try { super.onRestoreInstanceState ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mQuery = savedInstanceState.getString ( "query" ) ; } 
private void showSettingsFrame () { try { settingsFrame.setVisible ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void update () { try { if ( Gdx.input.isKeyJustPressed ( Input.Keys.L ) ) { if ( isDay ) { changeLightType ( com.github.jotask.tusk.states.play.world.environment.DayCycle.LIGHT.NIGHT ) ; } else { changeLightType ( com.github.jotask.tusk.states.play.world.environment.DayCycle.LIGHT.DAY ) ; } isDay = ! ( isDay ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setBattle ( battle.Battle battle, boolean seenWild ) { this.setState ( VisualState.BATTLE ) ; try { gui.view.map.VisualState.setBattle ( battle, seenWild ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.transaction.annotation.Transactional public void remove ( int id ) { com.ontime.model.Project project = this.get ( id ) ; try { dao.remove ( project ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setUp () throws java.lang.Exception { try { java.lang.System.setProperty ( "HADOOP_USER_NAME", "hdfs" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } hive = org.apache.hadoop.hive.ql.metadata.Hive.get () ; checker = new org.apache.hadoop.hive.ql.metadata.HiveMetaStoreChecker ( hive ) ; } 
public void push ( int seconds ) { try { stack.push ( cur ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cur = seconds; driver.manage () .timeouts () .implicitlyWait ( cur, java.util.concurrent.TimeUnit.SECONDS ) ; } 
@ java.lang.Override public void onLongPress ( android.view.MotionEvent event ) { try { ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) .handle_long_press () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void select ( final int tx, final int ty ) { if ( empty () ) { Solitaire.discardPile.rebank () ; return; } try { Solitaire.discardPile.addCard ( pop () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.eclipse.core.runtime.IStatus execute ( org.eclipse.core.runtime.IProgressMonitor monitor, org.eclipse.core.runtime.IAdaptable info ) throws org.eclipse.core.commands.ExecutionException { this.oldOrder = this.orderedModules; this.orderedModules = this.newOrder; try { this.bundleTableViewer.setInput ( this.orderedModules ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return org.eclipse.core.runtime.Status.OK_STATUS; } 
public void onNewTab () { uk.co.nickthecoder.wrkfoo.tool.Home tool = new uk.co.nickthecoder.wrkfoo.tool.Home () ; try { mainWindow.addTab ( tool ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/" ) public org.springframework.web.servlet.ModelAndView index ( org.springframework.ui.ModelMap model ) { try { model.addAttribute ( "message", "Game of Life" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } model.addAttribute ( "gof", boardService.print () ) ; return new org.springframework.web.servlet.ModelAndView ( "index" ) ; } 
@ java.lang.Override public void inputClosed ( org.apache.mina.core.session.IoSession session ) throws java.lang.Exception { super.inputClosed ( session ) ; try { this.trigger ( session, HandlerEventType.InputClosed, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void enterScope () { hash = new java.util.Hashtable<java.lang.String, java.lang.Object> () ; try { scopes.add ( hash ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onAttachedToWindow () { super.onAttachedToWindow () ; start () ; try { if ( ( getChildCount () ) == 0 ) { createAircraft () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setActive () { activeTrajectory = defaultTrajectory; nextTrajectory = defaultTrajectory; try { resetPID () ; } catch ( Exception ex ) { ex.printStackTrace () ; } isActive = true; } 
public void drop () throws java.sql.SQLException { java.lang.String statement = worm.abstractation.QueryGenerator.drop ( from, where ) ; try { database.sqlWithoutResult ( statement, ( ( args ) == null ? new java.lang.Object[0] : args.toArray () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service, org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { try { org.onebusaway.android.report.ui.Open311ProblemFragment.show ( this, R.id.ri_report_stop_problem, mOpen311, service, obaArrivalInfo, mAgencyName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void enterScope ( java.lang.String name ) { java.lang.System.out.println ( ( "enterScope " + name ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList.get ( ( ( fCurrentEvent ) ++ ) ) ; try { assertEquals ( event.fType, VCDLoaderTest.ExpectTraceBuilder.EXPECT_ENTER ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected java.util.List<org.junit.runners.model.FrameworkMethod> getChildren () { final java.util.List<org.junit.runners.model.FrameworkMethod> children = super.getChildren () ; try { java.util.Collections.shuffle ( new java.util.LinkedList<org.junit.runners.model.FrameworkMethod> ( children ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return children; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_settings ) ; sharedpreferences = getSharedPreferences ( io.rasprovers.remotus.activities.Settings.MyPREFERENCES, Context.MODE_PRIVATE ) ; } 
private void updateCanvas ( android.graphics.Canvas canvas ) { drawIcons ( canvas ) ; try { drawSelectedIcon ( canvas ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void sendSpace () { try { sendKeyChar ( ( ( char ) ( KeyCodes.SPACE ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { java.lang.String organisatorID = dataSnapshot.getValue ( java.lang.String.class ) ; try { textView17.setText ( organisatorID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void close () { try { if ( ( port ) != null ) { port.close () ; port = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void removeNode ( N node ) { super.removeNode ( node ) ; try { if ( ( listenerList ) != null ) { org.corpus_tools.salt.extensions.notification.graph.impl.NotifierHelper.notify ( listenerList, Listener.NOTIFICATION_TYPE.REMOVE, GRAPH_ATTRIBUTES.LAYER_NODES, node, null, this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void print () { try { for ( java.lang.Double d : attributes ) { java.lang.System.out.print ( ( d + " " ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println () ; } 
public java.lang.String detailProduit ( int idProduit ) { this.idProductRef = idProduit; this.productRef = proxyCatalog.getProductRefById ( idProductRef ) ; try { init () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "/pages/detailproduit.xhtml?faces-redirect=true"; } 
public void handleGcmFailure ( final java.lang.Throwable error ) { try { this.sharedPreferences.edit () .putBoolean ( com.toshi.service.RegistrationIntentService.ETH_SERVICE_SENT_TOKEN_TO_SERVER, false ) .apply () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.toshi.util.LogUtil.exception ( getClass () , "Error while registering gcm", error ) ; } 
@ org.junit.Test public void testBestVector () { de.unidue.ltl.gapfill.util.SubstituteVector result = de.unidue.ltl.gapfill.util.SubstituteVectorUtil.getBestSubstituteVector ( de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1, de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv2, de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv3, de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv4, de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b ) ; try { org.junit.Assert.assertEquals ( de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b, result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public net.minecraft.network.play.server.SPacketUpdateTileEntity getUpdatePacket () { net.minecraft.nbt.NBTTagCompound tag = new net.minecraft.nbt.NBTTagCompound () ; try { writeToNBT ( tag ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new net.minecraft.network.play.server.SPacketUpdateTileEntity ( this.pos, 1, tag ) ; } 
private void configureUrlLable () { address = new javax.swing.JTextField ( url ) ; try { address.setBounds ( 20, 5, 560, 30 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } address.setEditable ( false ) ; window.add ( address ) ; } 
public boolean restore ( android.os.Bundle bundle ) { if ( bundle == null ) { return false; } try { mContentListModel = bundle.getParcelableArrayList ( com.stdnull.v2api.model.V2MainFragModel.KEY_V2EXBEAN ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ( ( mContentListModel ) != null ) && ( ! ( mContentListModel.isEmpty () ) ) ; } 
public void handle ( org.dsa.iot.dslink.node.actions.ActionResult event ) { try { if ( ( localDevice ) != null ) localDevice.terminate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } init () ; } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { try { searchWord ( query ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void onRefresh () { try { fetchRequests () ; } catch ( Exception ex ) { ex.printStackTrace () ; } swipeLayoutRequests.setRefreshing ( false ) ; } 
@ java.lang.Override public void onDismiss ( android.content.DialogInterface dialog ) { try { super.onDismiss ( dialog ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( callback ) != null ) { callback.onDismiss () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { ( ( org.bridge.activity.MainActivity ) ( context ) ) .startPubNoteIntent () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void onScreenOn () { try { if ( ( java.lang.Integer.parseInt ( Build.VERSION.SDK ) ) < ( Build.VERSION_CODES.ECLAIR_MR1 ) ) org.wahtod.wififixer.prefs.PrefUtil.writeBoolean ( this, org.wahtod.wififixer.WifiFixerService.SCREENOFF, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.wahtod.wififixer.WifiFixerService.screenstate = true; } 
private void setPactorInCollisionBucket ( java.lang.String pactorName ) { Engine.TileCoordinate tc = getPositionFor ( pactorName ) ; createCollisionBucketForTileCoordinateIfBucketAbsent ( tc ) ; try { sharedPactorLocationBuckets.get ( tc ) .add ( pactorName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void resetPlayers () { try { for ( nl.tudelft.model.Player player : players ) { player.reset () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { updateUI ( null ) ; try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected org.uqbar.lacar.ui.model.ControlBuilder createBuilder ( org.uqbar.lacar.ui.model.PanelBuilder container ) { org.uqbar.lacar.ui.model.builder.StyledControlBuilder numericField = container.addNumericField ( withDecimals ) ; try { this.withFilter ( new org.uqbar.arena.filters.NumericFilter ( withDecimals ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.configureSkineableBuilder ( numericField ) ; return numericField; } 
@ java.lang.Override public void onReceivedError ( android.webkit.WebView view, int errorCode, java.lang.String description, java.lang.String failingUrl ) { didReceiveError = true; pageIsLoaded = false; try { ViewPagerDownloadManager.instance.done ( this, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } showErrorMessage ( R.string.network_error_message, FontAwesomeIcons.fa_exclamation_circle ) ; } 
@ java.lang.Override public void evaluate ( java.math.BigInteger value ) { try { if ( value != null ) { long x = value.longValue () ; evaluateMinMax ( x ) ; ( count ) ++; sum += x; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean doesNickNameExist ( java.lang.String nickName ) { try { if ( ! ( nickNames.containsKey ( nickName ) ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void push ( com.badlogic.gdx.files.FileHandle file ) { try { if ( ( index ) != ( history.size ) ) history.truncate ( index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } history.add ( file ) ; ( index ) ++; } 
public void addTo ( java.lang.String to ) throws javax.mail.internet.AddressException { if ( ( this.to ) == null ) { this.to = new java.util.ArrayList<> () ; } try { this.to.add ( new javax.mail.internet.InternetAddress ( to ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override @org.springframework.transaction.annotation.Transactional public void update ( java.lang.Iterable<? extends org.molgenis.data.Entity> entities ) { try { elasticSearchService.index ( entities, getEntityMetaData () , IndexingMode.UPDATE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } elasticSearchService.refresh ( getEntityMetaData () ) ; } 
public void play () { if ( ( mPlayer ) == null ) return; if ( ! ( mPlayer.isPlaying () ) ) mPlayer.start () ; try { if ( ! ( isTimingThreadRunning ) ) startTimingThread () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handleResult ( com.google.zxing.Result rawResult ) { try { saveResult ( rawResult.getText () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onLongClick ( android.view.View view ) { try { if ( ( onItemLongClickListener ) != null ) { onItemLongClickListener.onItemLongClick ( holder.itemView, position ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onRefresh () { try { presenter.performCall () ; } catch ( Exception ex ) { ex.printStackTrace () ; } swipeRefreshLayout.setRefreshing ( false ) ; } 
public void setStage ( messageapp.gui.Stage newStage ) { this.stage = newStage; try { if ( newStage != null ) newStage.setup () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void getActiveInstrumentBoxes () { java.util.List<gui.styling.StyledCheckbox> list = org.mockito.Mockito.mock ( java.util.List.class ) ; try { detailViewController.setActiveInstrumentBoxes ( list ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( list, detailViewController.getActiveInstrumentBoxes () ) ; } 
@ java.lang.Override public void onPause () { super.onPause () ; try { mScannerView.stopCamera () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onMapReady ( com.google.android.gms.maps.GoogleMap map ) { this.map = map; map.setMyLocationEnabled ( true ) ; try { map.setOnMarkerClickListener ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } map.setOnInfoWindowClickListener ( this ) ; } 
@ java.lang.Override public void share ( java.lang.String cardId, boolean privacyResult, cm.aptoide.pt.v8engine.timeline.view.ShareCardCallback shareCardCallback ) { try { socialRepository.share ( cardId, privacyResult, shareCardCallback, getTimelineSocialActionObject ( cm.aptoide.pt.v8engine.timeline.view.displayable.AggregatedSocialVideoDisplayable.CARD_TYPE_NAME, cm.aptoide.pt.v8engine.analytics.Analytics.AppsTimeline.BLANK, cm.aptoide.pt.v8engine.timeline.view.displayable.SHARE, cm.aptoide.pt.v8engine.analytics.Analytics.AppsTimeline.BLANK, getPublisherName () , cm.aptoide.pt.v8engine.analytics.Analytics.AppsTimeline.BLANK ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void attendiEndAll () throws java.lang.InterruptedException { concurrent.LockManager.lockEndAll.lock () ; try { while ( concurrent.LockManager.inAttesaEndAll ) { concurrent.LockManager.conditionEndAll.await () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } concurrent.LockManager.lockEndAll.unlock () ; } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run ( java.lang.String t ) { try { java.lang.System.out.println ( ( "err " + t ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int id ) { try { presenter.onClickDelete ( originalURL ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setEdges ( com.company.DataStructure.Node<T> child ) { try { if ( ! ( getEdges () .contains ( child ) ) ) { getEdges () .add ( child ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeUser ( java.lang.String user ) { java.lang.String where = ( "user LIKE \"" + user ) + "\""; try { database.delete ( com.michael.database.CookieTable.TABLE, where, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkValidationResult ( org.freeshr.validations.FhirValidationResult validationResult ) { try { checkForConceptValidationError ( validationResult ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } checkForConditionErrors ( validationResult ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { mapFrame.setAlwaysOnTop ( false ) ; try { main.frame.setAlwaysOnTop ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { action.doActionAndScheduleNext ( player, trackSelector, surface, mainHandler, null ) ; try { clock.postDelayed ( mainHandler, this, repeatIntervalMs ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void evolve () { try { TSP.chromosomes = Evolution.Evolve ( TSP.chromosomes, TSP.cities ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void terminate () { try { if ( ( this.schemaPosition ) != null ) { this.schemaPosition.stop () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.connectionPool.release () ; } 
@ java.lang.Override public void onErrorResponse ( com.android.volley.VolleyError error ) { try { android.util.Log.e ( "Error", "That didn't work!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void getRouteSegment ( android.location.net.osmand.Location loc, net.osmand.ResultMatcher<net.osmand.binary.RouteDataObject> result ) { try { currentPositionHelper.getRouteSegment ( loc, result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkCondExpr () { final com.puppycrawl.tools.checkstyle.api.DetailAST condAst = getMainAst () .findFirstToken ( TokenTypes.LPAREN ) .getNextSibling () ; try { checkExpressionSubtree ( condAst, getIndent () , true, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.view.View v ) { try { if ( ( player1_textureState ) < 4 ) { ( Gameplay.player1_pers ) ++; ( player1_textureState ) ++; com.example.myapplication.Options.setPlayersPicturesForVar ( player1_textureState, player1_leftArrow, player1_texture, player1_rightArrow ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void windowClosing ( java.awt.event.WindowEvent e ) { int i = javax.swing.JOptionPane.showConfirmDialog ( frame, "Quit EsperNet IRCBot? IRC \nconnections will close.", "Warning!", javax.swing.JOptionPane.OK_CANCEL_OPTION ) ; try { if ( i == ( javax.swing.JOptionPane.OK_OPTION ) ) { so101.ircbot.maskbot.IRCBot.getInstance () .closeConnections () ; java.lang.System.exit ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setVariables ( java.lang.String executionId, java.util.Map<java.lang.String, ? extends java.lang.Object> variables ) { try { setVariables ( executionId, variables, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testfindUserByIDWithNull () { Bank bnk = new Bank () ; try { bnk.withCustomerUser ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } User usrGet = bnk.findUserByID ( "steverog1" ) ; assertTrue ( ( usrGet == null ) ) ; } 
@ java.lang.Override protected void handleResponse ( java.lang.String response ) { try { responseLatch.countDown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void replaceText ( int start, int end, java.lang.String text ) { try { if ( validate ( text ) ) { super.replaceText ( start, end, text ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public T getByUniqueProperty ( final java.lang.String propertyName, final java.lang.Object value ) { org.hibernate.Criteria criteria = createCriteria () ; try { criteria.add ( org.hibernate.criterion.Restrictions.eq ( propertyName, value ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return uniqueResult ( criteria ) ; } 
public void modifyOrderedItem ( com.aooci.ordercat.vo.OrderedItemVo orderedItemVo ) { try { this.orderOperationService.updateOrderedItem ( this.operatedOrderVo, orderedItemVo ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void stopAudioPlayback () { try { if ( ( audioPlayer ) != null ) { audioPlayer.stop () ; audioPlayer.reset () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.greenrobot.eventbus.EventBus.getDefault () .post ( new com.createchance.doorgod.util.AppListForegroundEvent ( true ) ) ; } 
public void addFriend ( models.User friend ) { try { if ( ( models.UserToUser.exists ( this, friend ) ) || ( ( this ) == friend ) ) return; } catch ( Exception ex ) { ex.printStackTrace () ; } models.UserToUser u2u = new models.UserToUser ( this, friend ) ; } 
private static void updateTriggerIndicator ( android.view.View trigger ) { try { if ( ( com.ceco.lollipop.gravitybox.ModPieControls.mCenterTrigger ) && ( com.ceco.lollipop.gravitybox.ModPieControls.mTrigindEnabled ) ) { trigger.setBackgroundColor ( com.ceco.lollipop.gravitybox.ModPieControls.mTrigindColor ) ; } else { trigger.setBackgroundColor ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void write ( byte[] b, int off, int len ) throws java.io.IOException { try { out.write ( b, off, len ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( len > 0 ) count += len; } 
@ java.lang.Override public void success ( java.lang.Object o, retrofit.client.Response response ) { android.widget.Toast.makeText ( mContext, "Post uploaded!", Toast.LENGTH_SHORT ) .show () ; try { android.util.Log.d ( "Chooser", "Post uploaded!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void log ( com.noveogroup.android.log.Logger.Level level, java.lang.String msg, java.lang.Throwable t ) { try { logger.print ( level, t, msg ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot2 ) { try { for ( com.google.firebase.database.DataSnapshot postSnapshot2 : dataSnapshot2.getChildren () ) { troutenamelist.add ( postSnapshot2 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setLeftTextColor ( int color ) { this.mLeftTextColor = color; try { invalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPageSelected ( int position ) { try { if ( ( mViewPager ) != null ) { if ( position < 3 ) { android.util.Log.d ( DEBUG_KEY, ( "item id is " + position ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { try { super.onActivityCreated ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.setListAdapter ( new com.group.cs.wi_free.DeviceListFragment.WifiPeerListAdapter ( getActivity () , R.layout.row_devices, peers ) ) ; } 
private synchronized void addInsert ( android.content.ContentValues insert ) { try { if ( ( mDataInsertList ) != null ) { mDataInsertList.add ( insert ) ; if ( ( mDataInsertList.size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setColor ( java.lang.String color ) { try { ClientModelRoot._instance.setColor ( color ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void launch ( android.view.View v ) { android.content.Intent login = new android.content.Intent ( this, com.cultivate.juniordesign.cultivate.LoginActivity.class ) ; try { startActivity ( login ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.content.DialogInterface dialog, int which ) { try { openCameraForVideos () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean isIDNumberExisted ( java.lang.String idNumber ) { com.edu.timebank.service.infrastructure.tableBean.UserEntityExample userEntityExample = new com.edu.timebank.service.infrastructure.tableBean.UserEntityExample () ; try { userEntityExample.createCriteria () .andIdNumberEqualTo ( idNumber ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ! ( userEntityMapper.selectByExample ( userEntityExample ) .isEmpty () ) ; } 
public double square ( double hertz, double frame ) { try { if ( ( sin ( hertz, frame ) ) > 0.5 ) return 1; } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
@ java.lang.Override public void OnLoginResult ( javapoker.client.LoginResultEvent event ) { java.lang.System.out.println ( "Received LoginResult" ) ; try { java.lang.System.out.println ( ( "Information is: " + ( event.validLogin ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( event.validLogin ) { table.playerId = event.playerId; } } 
public void doDelete () { try { setExternalScholarshipPhdGratuityContribuitionEvent ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setParty ( null ) ; org.fenixedu.academic.domain.accounting.events.gratuity.GratuityContributionFile document = getDocument () ; if ( document != null ) { setDocument ( null ) ; document.delete () ; } super.delete () ; } 
@ java.lang.Override public void check ( bantam.visitor.Program ast ) { try { ast.accept ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void start ( I iface, lk.filetributed.client.rpc.services.services.joinRequest_args args, org.apache.thrift.async.AsyncMethodCallback<lk.filetributed.client.rpc.services.messageProtocol> resultHandler ) throws org.apache.thrift.TException { try { iface.joinRequest ( args.ipAddress, args.port, resultHandler ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPause () { super.onPause () ; scanLeDevice ( false ) ; try { mLeDeviceListAdapter.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onConnected ( @android.support.annotation.Nullable android.os.Bundle bundle ) { android.location.Location mLastLocation = LocationServices.FusedLocationApi.getLastLocation ( mGoogleApiClient ) ; try { if ( mLastLocation != null ) { onLocationConnected ( new com.google.android.gms.maps.model.LatLng ( mLastLocation.getLatitude () , mLastLocation.getLongitude () ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void incrementWaitTime ( float deltaTime ) { try { waitTime -= deltaTime * ( java.lang.Math.min ( type.getMaxWorkers () , workers.size () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { try { ui.update ( direction ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentIndex = ( currentIndex ) + ( direction ) ; } 
@ java.lang.Override public void run () { try { highLightMiddleRow ( listview, view, adapter, currentPosInMiddle ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } listView.smoothScrollBy ( ( viewBottom - ( ( ( mRootLayoutHeight ) / 3 ) + viewHeight ) ) , 1000 ) ; } 
@ java.lang.Override public void onPageSelected ( int position ) { net.raysuhyunlee.avant_garde.FingersFragment item = ( ( net.raysuhyunlee.avant_garde.FingersFragment ) ( adapter.getItem ( position ) ) ) ; net.raysuhyunlee.avant_garde.DB.Situation situation = item.situation; try { sendSituation ( situation, position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void showProfile () { try { switchFragment ( com.example.rav.testingo.ProfileFragment.newInstance () , true, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void initMessageBox () { messageBox = new javafx.scene.control.Label () ; try { messageBox.setId ( "messageBox" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int getTileID ( int x, int y, int layer ) { try { if ( ! ( isInBounds ( x, y, layer ) ) ) return com.kambius.darkrange.mapeditor.LevelMap.NONE_TILE; } catch ( Exception ex ) { ex.printStackTrace () ; } return mapArray[layer][y][x]; } 
@ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem.getItemId () ) ; try { drawerLayout.closeDrawers () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void addTimeout ( java.lang.Long timeout, java.net.DatagramPacket dp, int expectedAckNum ) { try { timeoutList.add ( timeout ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } timeoutToDatagramPacket.put ( timeout, dp ) ; ackNumToTimeout.put ( expectedAckNum, timeout ) ; } 
public void notCovered2 () { try { java.lang.System.out.println ( "notCovered method 2" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setUserVisibleHint ( boolean isVisibleToUser ) { try { super.setUserVisibleHint ( isVisibleToUser ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( isVisibleToUser ) { com.rudie.severin.textadventure.DatabaseClasses.DBInterfacer helper = com.rudie.severin.textadventure.DatabaseClasses.DBInterfacer.getInstance ( getActivity () ) ; setText ( charId ) ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { try { changeDirectedness ( mode ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onComplete ( com.google.firebase.database.DatabaseError databaseError, com.google.firebase.database.DatabaseReference databaseReference ) { try { if ( databaseError == null ) { notifySuccess () ; } else { notifyError ( databaseError.getMessage () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onRewardedVideoAdLoaded () { try { _adapter.logD ( "RewardedAdListener: onRewardedVideoAdLoaded: begin." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } _adapter._isRewardedVideoAdLoading = false; refreshAdAvailability () ; org.cocos2dx.plugin.AdsWrapper.onAdsResult ( _adapter, AdsWrapper.RESULT_CODE_VideoReceived, "Reward based video ad is received/loaded." ) ; _adapter.logD ( "RewardedAdListener: onRewardedVideoAdLoaded: end." ) ; } 
@ org.junit.Test public void buildServiceUrl () { int documentId = 17; java.lang.String expected = ( at.fhj.swd13.pse.test.service.DocumentServiceIT.serviceUrl ) + ( java.lang.Integer.toString ( documentId ) ) ; try { assertEquals ( expected, at.fhj.swd13.pse.test.service.DocumentServiceIT.documentService.buildServiceUrl ( documentId ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void valueChange ( org.vaadin.viritin.fields.MValueChangeEvent<com.dungeonstory.backend.data.ArmorType> event ) { com.dungeonstory.backend.data.ArmorType currentarmorType = event.getValue () ; try { if ( currentarmorType != null ) { weight.setValue ( ( ( double ) ( currentarmorType.getBaseWeight () ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public no.havard.javaflow.model.ClassDefinitionBuilder withField ( com.github.javaparser.ast.type.Type type, java.lang.String name ) { try { this.fields.add ( new no.havard.javaflow.model.FieldDefinition ( type, name ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
public void stopRecording () { try { if ( com.byteshatf.callrecorder.CallRecording.isRecording ) { mediaRecorder.stop () ; mediaRecorder.reset () ; mediaRecorder.release () ; mediaRecorder = null; com.byteshatf.callrecorder.CallRecording.isRecording = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } exoPlayer.setPlayWhenReady ( false ) ; ng.com.brownjee.bakingapp.fragments.StepsDetailsActivityFragment.mediaSession.setActive ( false ) ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super.onPostExecute ( s ) ; try { android.widget.Toast.makeText ( this, "Sent Information to Server...", Toast.LENGTH_LONG ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.widget.Toast.makeText ( this, s, Toast.LENGTH_LONG ) .show () ; } 
@ java.lang.Override public void apply ( final org.eclipse.emf.common.util.URI deleted ) { java.util.Set<org.eclipse.emf.common.util.URI> _deletedFiles = xtextBuildResultCollector.getDeletedFiles () ; try { _deletedFiles.add ( deleted ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; initTabs () ; try { initDrawer () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test ( expected = java.lang.IllegalThreadStateException.class ) public void threadFactoryReturnRunningThreadFail () { queueManager = org.threadly.concurrent.PrioritySchedulerQueueManagerTest.pScheduler.new org.threadly.concurrent.PriorityScheduler.QueueManager ( new org.threadly.concurrent.StartingThreadFactory () , org.threadly.concurrent.PrioritySchedulerQueueManagerTest.THREAD_NAME ) ; try { queueManager.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onBeforeClusterItemRendered ( org.ecomap.android.app.Problem problem, com.google.android.gms.maps.model.MarkerOptions markerOptions ) { try { markerOptions.icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource ( problem.res_id ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public float sumConsumptionValue () { float sum = 0.0F; try { for ( by.tarif.web.databuffer.Register register : this.list ) { sum += register.getConsumption () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return sum; } 
@ org.dasein.cloud.azure.tests.network.Mock ( invocations = 1 ) <T> T get ( java.lang.Class<T> model, java.lang.String resource ) { assertEquals ( "AzureMethod#get method not called with correct resource parameter", expectdResource, resource ) ; try { assertEquals ( "Incorrect type passed in for model", expectedClassz, model ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public boolean straight () { try { if ( inOrder ( myCards ) ) { return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void saveState ( @android.support.annotation.NonNull android.view.View view ) { final android.util.SparseArray<android.os.Parcelable> parcelableSparseArray = new android.util.SparseArray<android.os.Parcelable> () ; try { view.saveHierarchyState ( parcelableSparseArray ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mViewState = parcelableSparseArray; } 
public com.stratio.crossdata.common.data.DataStoreName createTestDatastore () { createTestDatastore ( "dataStoreTest", "production" ) ; final java.lang.String DATASTORE_NAME = "dataStoreTest"; com.stratio.crossdata.common.data.DataStoreName dataStoreName = new com.stratio.crossdata.common.data.DataStoreName ( DATASTORE_NAME ) ; try { insertDataStore ( DATASTORE_NAME, "production" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return dataStoreName; } 
private boolean isCatsGame () { try { for ( Space space : spaces ) { if ( space.isEmpty () ) return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}", method = org.springframework.web.bind.annotation.RequestMethod.GET ) @org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email, @org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) boolean forgotPassword ) { try { if ( forgotPassword ) { return application.forgotPassword ( email ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 0; } 
@ java.lang.Override public void onError ( java.lang.Throwable e ) { try { view.currentUserFailedToReceive ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } view.completedCurrentUserRequest () ; } 
@ java.lang.Override public void select ( boolean setActiveColor, int animationDuration ) { try { labelView.animate () .scaleX ( 1 ) .scaleY ( 1 ) .setDuration ( animationDuration ) .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.select ( setActiveColor, animationDuration ) ; } 
@ java.lang.Override public boolean effect ( Player current ) { try { current.gainMoney ( 200 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void setGivenName ( java.lang.String givenName ) { try { if ( ! ( givenName.isEmpty () ) ) { this.givenName = ( givenName.substring ( 0, 1 ) .toUpperCase () ) + ( givenName.substring ( 1 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.tekCorp.api.control.RequestMapping ( value = "/add", method = RequestMethod.POST ) @org.tekCorp.api.control.ResponseBody public org.tekCorp.api.domain.Type add ( @org.tekCorp.api.control.RequestBody org.tekCorp.api.domain.Type type ) { org.tekCorp.api.domain.Type oriType = typeRepository.findByName ( type.getName () ) ; if ( oriType != null ) { return oriType; } try { type = typeRepository.save ( type ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return type; } 
@ com.mindorks.placeholderview.annotations.swipe.SwipeOut private void onSwipedOut () { try { if ( ( ( tk.talcharnes.unborify.PhotoCard.isReported ) != null ) && ( tk.talcharnes.unborify.PhotoCard.isReported ) ) { tk.talcharnes.unborify.PhotoCard.isReported = false; setReport () ; } else { setVote ( "dislikes" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPictureTaken ( byte[] data, android.hardware.Camera camera ) { try { synchronized ( this ) { mCameraListener.onPictureTaken ( data ) ; capturingImage = false; camera.startPreview () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setSlideOffset ( int offset ) { try { mSlideOffset = java.lang.Math.min ( java.lang.Math.max ( 0, offset ) , mSlideMaxHeight ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } requestLayout () ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { try { processAction () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void close () { try { org.apache.http.client.utils.HttpClientUtils.closeQuietly ( httpClient ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } httpClient = null; if ( ( exFuncs ) != null ) { for ( com.xmlcalabash.functions.XProcExtensionFunctionDefinition xf : exFuncs ) { xf.close () ; } } exFuncs = null; } 
private boolean isExistingNote ( int note_id ) { if ( note_id < 0 ) return false; try { if ( note_id > ( noteData.size () ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void sendResults ( java.lang.String resultReceiver, int port, java.lang.Object results ) { try { Connector.sendData ( resultReceiver, port, results ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean emptyUnitBoard () { try { unitBoard.removeAll () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void initialize () { try { stateMachine.initialize () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override final java.util.Collection<org.matsim.core.mobsim.qsim.interfaces.MobsimVehicle> getAllVehicles () { java.util.Collection<org.matsim.core.mobsim.qsim.interfaces.MobsimVehicle> vehicles = new java.util.ArrayList<> () ; try { vehicles.addAll ( buffer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } vehicles.addAll ( vehQueue ) ; return vehicles; } 
@ java.lang.Override protected void onDestroy () { try { vibrationHandler.stopVibrate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } announcementHandler = null; vibrationHandler = null; gameHandler = null; prefs = null; super.onDestroy () ; } 
@ java.lang.Override public boolean hasNext () { try { while ( ! ( mRhsIterator.hasNext () ) ) { if ( ! ( nextLhs () ) ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return mRhsIterator.hasNext () ; } 
public void solve () { try { solveH ( 0, 0, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void registerModules () { mitb.TitanBot.MODULES.add ( new mitb.module.modules.TestCommandModule () ) ; mitb.TitanBot.MODULES.add ( new mitb.module.modules.LastSeenModule () ) ; try { mitb.TitanBot.LOGGER.info ( "Registered all modules." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initDependencyInjection () { try { component = com.wisdomlanna.www.dagger2_mvp_example.DaggerApplicationComponent.builder () .androidModule ( new com.wisdomlanna.www.dagger2_mvp_example.AndroidModule ( this ) ) .utilModule ( new com.wisdomlanna.www.dagger2_mvp_example.UtilModule ( this ) ) .build () ; } catch ( Exception ex ) { ex.printStackTrace () ; } getComponent () .inject ( this ) ; } 
@ javax.inject.Inject public void configureScheduler ( @edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { try { dispatcher = java.util.concurrent.Executors.newFixedThreadPool ( concurrency ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean atacar ( business.entities.Personaje oponente, int energia ) throws util.ApplicationException { if ( energia > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } try { usarEnergia ( energia ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return oponente.recibirAtaque ( energia ) ; } 
public synchronized boolean moveShapeDown ( int position ) { if ( ( stateComponent.activeShapes[position] ) == null ) return false; boolean retVar = moveShapeDown ( stateComponent.activeShapes[position] ) ; try { if ( retVar ) putActiveShapeGhosts () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return retVar; } 
public void resetViewerFilters () { currentView.resetFilters () ; try { currentView.getViewer () .refresh ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stop () { try { synchronized ( this ) { if ( ( mDisposable ) != null ) { mDisposable.dispose () ; mDisposable = null; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean getMoreResults () throws java.sql.SQLException { com.alibaba.druid.filter.FilterChainImpl chain = createChain () ; boolean value = chain.statement_getMoreResults ( this ) ; updateCount = null; try { recycleFilterChain ( chain ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return value; } 
public void connectServer () { try { mServerConnector = cn.iotguard.common.socket.ServerConnector.getInstance ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mServerConnector.connect ( cn.iotguard.sce.app.AndroidApplication.HOST_NAME, cn.iotguard.sce.app.AndroidApplication.HOST_PORT ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config = new com.badlogic.gdx.backends.android.AndroidApplicationConfiguration () ; initialize ( new com.remnants.game.Remnants () , config ) ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startId ) { android.util.Log.i ( logTAG, "SailfishNotificationService starting" ) ; try { com.splunk.mint.Mint.initAndStartSession ( this, Constants.MINT_API_KEY ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return START_STICKY; } 
private int notify_update ( int update_flag, int arg1, int arg2 ) { try { if ( ( mNativeEventListener ) != null ) { return mNativeEventListener.notify_update ( update_flag, arg1, arg2 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return -1; } 
private void processWordsByRow ( java.util.List<java.lang.String> lines ) { try { for ( java.lang.String line : common.PDFContainer.words ) { countWordOccurence ( line ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void VerifyNumOfRevenueAgenies1 () { int NumOfRevenueAgencies2016 = 150; int numOfRevenueAgenciesapp = pages.revenue.RevenuePage.GetTop5WidgetTotalCount ( WidgetOption.Top5Agencies ) ; try { org.junit.Assert.assertEquals ( "Number of Revenue Agencies did not match", numOfRevenueAgenciesapp, NumOfRevenueAgencies2016 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean execute () { try { reload () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( org.bbop.apollo.gwt.client.TrackPanel.trackInfoList.isEmpty () ) { return true; } return false; } 
public void onCameraUnavailable ( java.lang.String cameraId ) { mPreferences.setCamActiv ( cameraId, true ) ; try { de.simu.decoit.android.decomap.util.Toolbox.logTxt ( this.getLocalClassName () , "Camera is in use!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onSaveInstanceState () { android.os.Bundle bundle = new android.os.Bundle () ; if ( ( ( mParentDelegate ) != null ) && ( ( mParentDelegate.mBundle ) != null ) ) { bundle = mParentDelegate.mBundle; } try { onSaveInstanceState ( bundle ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState.putLong ( com.jdelorenzo.capstoneproject.EditDayFragment.ARG_ROUTINE_ID, mRoutineId ) ; try { super.onSaveInstanceState ( outState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void showErrorDialog ( java.lang.String title, java.lang.String message ) { try { javax.swing.JOptionPane.showMessageDialog ( this, message, title, javax.swing.JOptionPane.ERROR_MESSAGE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void removePattern ( java.lang.String pattern ) { patterns.remove ( pattern ) ; updatePattern () ; try { writeConfig () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void doShowBalance ( android.view.View v ) { try { act.sayOk ( "Customer Balance", A.balance, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public byte[] getSubnegotiation () { byte[] result = new byte[this.subnegotiation.length]; try { java.lang.System.arraycopy ( subnegotiation, 0, result, 0, subnegotiation.length ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
static void switchToDefaultContent () { try { com.alllxt.selenium.framework.webdriver.manager.LocalDriverManager.getDriver () .switchTo () .defaultContent () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( java.lang.Object target, java.lang.Object returnValue ) { java.util.Iterator<org.ovirt.engine.ui.uicommonweb.models.vms.InstanceImageLineModel> lineModelIterator = orderedDisksIterator ( ( ( java.util.List<org.ovirt.engine.core.common.businessentities.storage.Disk> ) ( returnValue ) ) , vm ) ; try { storeNextDisk ( lineModelIterator, vm ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void saveWithParameters ( org.openlmis.reporting.model.Template template ) { try { templateRepository.save ( template ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( org.openlmis.reporting.model.TemplateParameter parameter : template.getTemplateParameters () ) { parameter.setTemplate ( template ) ; templateParameterRepository.save ( parameter ) ; } } 
public void Disconnect ( java.sql.Connection connection ) { try { closeQuietly ( connection ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void playRoadBuildingCard () { this.firstRoadPlaced = false; this.secondRoadPlaced = false; this.startMove ( PieceType.ROAD, true, false ) ; try { this.startMove ( PieceType.ROAD, true, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void drawPolyline ( int[] ints, int[] ints1, int i ) { try { if ( ( ( currentItem ) != null ) && ( ( gc ) != null ) ) { gc.drawPolyline ( ints, ints1, i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface, int i ) { try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setLensDistortion ( boofcv.struct.distort.PixelTransform_F32 distToUndist ) { this.ellipseDetector.setLensDistortion ( distToUndist ) ; try { if ( ( this.ellipseRefiner ) != null ) this.ellipseRefiner.setTransform ( distToUndist ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.intensityCheck.setTransform ( distToUndist ) ; } 
@ java.lang.Override public void onDisabled ( com.iazasoft.footguy.Context context ) { super.onDisabled ( context ) ; try { sleep ( context ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.iazasoft.footguy.Intent i0 = new com.iazasoft.footguy.Intent ( context, com.iazasoft.footguy.ScreenListenerService.class ) ; com.iazasoft.footguy.Footguy.mContext.stopService ( i0 ) ; } 
public void setStats ( com.mycompany.mlproject.Stats stats ) { stats.count_human_dna = totalRecords; stats.count_mutant_dna = mutantRecords; try { stats.ratio ( mutantRecords, totalRecords ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deInit () { try { synchronized ( this ) { if ( ( mConnect ) != null ) { mConnect.disconnect () ; mConnect = null; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testSetDelivery_address () { try { address.setDelivery_address ( "2" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( "2", address.getDelivery_address () ) ; } 
@ java.lang.Override public void onCreate () { super.onCreate () ; com.parse.Parse.enableLocalDatastore ( this ) ; try { com.parse.Parse.initialize ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.facebook.FacebookSdk.sdkInitialize ( getApplicationContext () ) ; com.parse.ParseFacebookUtils.initialize ( this ) ; } 
public void ignore ( edu.cs499.Actor target ) { if ( target == ( this ) ) return; for ( edu.cs499.Actor a : ignoredAnimals ) { if ( a == target ) return; } ignoredAnimals.add ( target ) ; try { ignoredTime.add ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public <T extends cn.liutils.cgui.gui.event.GuiEvent> void listen ( java.lang.Class<? extends T> clazz, cn.liutils.cgui.gui.event.IGuiEventHandler<T> handler, int priority ) { try { eventBus.listen ( clazz, handler, priority ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void endEngine () { pl.engine.Utils.debug ( "END GAME.." ) ; gameManager.stopTimer () ; try { gameManager.summaryScoreByGame ( this, teams ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void applicationStartedUploading () { gui.startCompetitionUploadButton.setEnabled ( false ) ; gui.stopCompetitionUploadButton.setEnabled ( true ) ; try { startUploadTimer () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void execute () { window.moveCursorSW () ; try { notifyAllObservers () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean accept ( java.io.File pathname ) { try { if ( pathname.getName () .matches ( this.filterRule ) ) { return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void closeConnection () { try { if ( ( mongo ) != null ) { mongo.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void visit ( org.teavm.backend.wasm.model.expression.WasmGetLocal expression ) { try { value = new org.teavm.backend.wasm.render.CExpression ( ( "var_" + ( expression.getLocal () .getIndex () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.alibaba.otter.canal.client.CanalConnector newSingleConnector ( java.net.SocketAddress address, java.lang.String destination, java.lang.String username, java.lang.String password ) { com.alibaba.otter.canal.client.impl.SimpleCanalConnector canalConnector = new com.alibaba.otter.canal.client.impl.SimpleCanalConnector ( address, username, password, destination ) ; try { canalConnector.setSoTimeout ( ( 30 * 1000 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return canalConnector; } 
void createRoute ( ru.fivt.dostavimvse.models.Order order ) { org.hibernate.Session session = ru.fivt.dostavimvse.HibernateSessionFactory.getSessionFactory () .openSession () ; try { session.beginTransaction () ; } catch ( Exception ex ) { ex.printStackTrace () ; } order.setStartDate ( java.time.LocalDateTime.now () ) ; } 
@ java.lang.Override public void clicked ( com.badlogic.gdx.scenes.scene2d.InputEvent event, float x, float y ) { try { p.inventory.equiped.equip ( itm ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void read () throws fr.vuzi.http.error.HttpException, java.io.IOException { HttpUtils.RequestParser.parse ( this, inputStream ) ; parameters = new java.util.HashMap<> () ; try { guessHostname () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.codegroup.challengecloud.model.Image getImageById ( java.lang.String imageId ) { try { com.codegroup.challengecloud.dao.impl.ImageDaoMySQL.log.debug ( ( "Looking for image with id=" + imageId ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.List list = find ( "from Image where IMAGE_ID = ?", imageId ) ; return ( ( com.codegroup.challengecloud.model.Image ) ( list.get ( 0 ) ) ) ; } 
@ java.lang.Override public void invalidateDrawable ( android.graphics.drawable.Drawable dr ) { try { if ( dr != null ) { invalidate () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setDoubleAttribute ( java.lang.String key, double value ) { try { throw notSupportedOnClient () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent event ) throws seedu.address.model.person.exceptions.EventNotFoundException { try { addressBook.removeEvent ( event ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } indicateAddressBookChanged () ; } 
@ java.lang.Override public void onSubmit ( org.reactome.web.pwp.client.tools.analysis.submitters.FormPanel.SubmitEvent event ) { try { setStatusIcon ( CommonImages.INSTANCE.loader () , true, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } errorPanel.makeVisible ( false ) ; } 
@ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create", method = RequestMethod.POST ) public java.lang.String createPost ( @be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { try { project = projectService.create ( project ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.Long id = project.getId () ; return "redirect:/project/" + id; } 
public boolean validatePasswordStrength ( java.lang.String input ) { boolean valid = true; try { valid &= ! ( input.equals ( "" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return valid; } 
public void startPleaseNewThread () { myThread = new A.B ( iter, constructor ) ; try { myThread.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( ( "Call start new thread with iterator " + ( iter ) ) ) ; } 
private void dropCurrentConnection () { try { if ( ( mCurrentConnectionRef ) != null ) { mCurrentConnectionRef.removeValue () ; mCurrentConnectionRef = null; mCurrentLastOnlineRef.setValue ( ServerValue.TIMESTAMP ) ; mCurrentLastOnlineRef = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public N next () { N nextNode = theNextNode; if ( nextNode == null ) throw new java.util.NoSuchElementException () ; theLastNode = nextNode; try { theNextNode = ( ( N ) ( nextNode.getClosest ( ( !forward ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return theLastNode; } 
public java.lang.String showNewQuestion () { try { newPost = postService.getNewPost () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "showNewQuestion_success"; } 
@ java.lang.Override public void onFailure ( com.parse.ParseException exception ) { try { callback.onFailure ( exception ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void getFileTests () { Main.numberOfException = 0; Main.numberOfFiles = 0; try { Main.IsBuggy ( Main.path ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Main.createTest ( Main.path ) ; } 
public void cmdReload ( org.bukkit.command.CommandSender s ) { HCH.reloadConfigs () ; try { s.sendMessage ( gvlfm78.plugin.Hotels.managers.Mes.mes ( "chat.commands.reload.success" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateSizeList ( javax.faces.event.AjaxBehaviorEvent event ) { try { listProduct = service.getProductsForConiferType ( ch.hearc.ig.odi.epicearc.business.ConiferType.valueOf ( coniferToBook.getCode () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } productToBook = null; } 
@ java.lang.Override public void start () { try { if ( ! ( isRunning ) ) { isRunning = true; yanbinwa.iCollection.service.CollectionServiceImpl.logger.info ( "Start collection service ..." ) ; client.start () ; } else { yanbinwa.iCollection.service.CollectionServiceImpl.logger.info ( "Collection service has already started ..." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getActivity () ) instanceof io.tanners.taggedwallpaper.interfaces.IGetTag ) { this.tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) .getTag () ; } else { } } 
@ java.lang.Override public void setFacebookLink ( java.net.URL facebookLink ) { if ( facebookLink == null ) { this.facebookLink = null; return; } try { this.facebookLink = facebookLink.toString () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void setUp () throws java.lang.Exception { try { super.setUp () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.intellij.codeInsight.CodeInsightSettings _instance = com.intellij.codeInsight.CodeInsightSettings.getInstance () ; _instance.AUTOCOMPLETE_ON_CODE_COMPLETION = false; } 
private void disPlayVideo ( java.lang.String linkVideo ) { if ( linkVideo == null ) return; try { setVideoUri ( linkVideo ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } playVideo ( linkVideo ) ; } 
private void setSpeed ( int n ) { try { speed = ( generator.nextInt ( ( n - 10 ) ) ) + 10; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { try { deletePerson () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate () { super.onCreate () ; try { appConfig = getAppConfig () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( me.xiaonian.mowidroid.kit.ApplicationKit.isMainProcess ( this ) ) { getInitializer () .init () ; } } 
private void removeEverything () { try { marker1.remove () ; } catch ( Exception ex ) { ex.printStackTrace () ; } marker1 = null; if ( ( line ) != null ) { line.remove () ; } } 
@ java.lang.Override public void registerEvent ( @org.jetbrains.annotations.NotNull java.lang.Object event ) { timestamps.add ( getEventTime () ) ; try { removeRedundancy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { vn.edu.uit.jrfsit.utils.Utils.print ( activity, "Cập nhật thất bại, kiểm tra kết nối" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateCacheWithException () throws java.lang.Exception { org.oscm.billing.external.pricemodel.service.PriceModel priceModel = new org.oscm.billing.external.pricemodel.service.PriceModel ( org.oscm.internal.pricemodel.external.ExternalPriceModelServiceBeanTest.PRICE_MODEL_UUID ) ; org.mockito.Mockito.doThrow ( new org.oscm.internal.types.exception.BillingApplicationException () ) .when ( externalPriceModelBean ) .convertToLocalizedBillingResource ( priceModel, null ) ; try { externalPriceModelBean.updateCache ( priceModel ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPause () { super.onPause () ; try { unregisterReceiver ( downloadReceiver ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateSortMethod ( java.lang.String sortMethod ) { this.sortMethod = sortMethod; try { updateMovies ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void ifThereAreJsFilesThenRequestsWillBeGeneratedInProd () throws java.lang.Exception { given ( aspect ) .indexPageRequires ( "appns/Class" ) .and ( aspect ) .hasClass ( "appns/Class" ) ; try { then ( aspect ) .prodRequestsForContentPluginsAre ( "js", "js/prod/closure-advanced/bundle.js", "js/prod/closure-simple/bundle.js", "js/prod/closure-whitespace/bundle.js", "js/prod/combined/bundle.js" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void setContainer ( java.lang.String oPanelName ) { try { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody.getElement () .setId ( "overlayContainer" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody.getElement () .setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName; com.google.gwt.user.client.ui.RootPanel.get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) .add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } 
@ java.lang.Override public void fetchUsersData ( java.util.List<id.semmi.pickme.team.addteam.UserChip> userChips ) { try { if ( ( ( userChips.size () ) != 0 ) && ( ! ( userChips.isEmpty () ) ) ) { chipsInput.setFilterableList ( userChips ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void stopScannerAndAdvertiser () { android.util.Log.d ( org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoverer.TAG, ( "stopScannerAndAdvertiser: " + ( org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BleAdvertiser.currentThreadToString () ) ) ) ; stopPeerAddressHelperAdvertiser () ; stopScanner () ; try { stopAdvertiser () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean mustMatchToken ( int toMatch, java.lang.String msgId, int pos, int len, boolean lookAhead ) throws java.io.IOException { try { if ( matchToken ( toMatch, lookAhead ) ) { return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } reportError ( msgId, pos, len ) ; return false; } 
private void handleLoadMoreMsg () { footerViewLoading.setVisibility ( View.GONE ) ; footerViewLoadingVisible = false; isLoadingData = false; try { listViewAdapter.addData ( updateItems ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } listViewAdapter.notifyDataSetChanged () ; } 
@ java.lang.Override public void close () { try { super.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } getReportingConnection () .disconnect () ; getSchedulerConnection () .disconnect () ; } 
public void MakeCfgClassesNull () { try { if ( ( mShortStrokeSol ) != null ) mShortStrokeSol.free () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mLongStrokeSol ) != null ) mLongStrokeSol.free () ; mShortStrokeSol = null; mLongStrokeSol = null; } 
@ java.lang.Override public void run () { try { if ( loading ) { progressBar.setVisibility ( View.VISIBLE ) ; } else { progressBar.setVisibility ( View.INVISIBLE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( v.getId () ) == ( R.id.view_drawer_search_filters_keyword_edittext ) ) { keywordEditText.setText ( "" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addChild ( org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; try { children.put ( child.getId () , child ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void endGame () { java.lang.System.out.println ( ( "Points: " + ( points ) ) ) ; try { java.lang.System.exit ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { dateTimeFragment.show ( getSupportFragmentManager () , com.kunzisoft.switchdatetimesample.Sample.TAG_DATETIME_FRAGMENT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean initEconomy () { org.bukkit.plugin.RegisteredServiceProvider<net.milkbowl.vault.economy.Economy> economyProvider = getServer () .getServicesManager () .getRegistration ( net.milkbowl.vault.economy.Economy.class ) ; try { if ( economyProvider != null ) { me.ellbristow.ATMsigns.ATMsigns.economy = economyProvider.getProvider () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( me.ellbristow.ATMsigns.ATMsigns.economy ) != null; } 
public void listener () { try { init ( index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void showFab () { try { if ( ( getFab () .getVisibility () ) == ( android.view.View.GONE ) ) { getFab () .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { if ( listener != null ) { listener.onConnectionStatusChanged ( null, tempPort ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean jj_3R_35 () { try { if ( jj_3R_55 () ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void update () { try { if ( climb ) motor.set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor.set ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { this.removeActiveConnection ( connection ) ; try { this.propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED, connection ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.nd4j.linalg.api.complex.IComplexNDArray copy ( org.nd4j.linalg.api.complex.IComplexNDArray x, org.nd4j.linalg.api.complex.IComplexNDArray y ) { try { org.nd4j.linalg.jcublas.SimpleJCublas.copy ( x, y ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return y; } 
@ org.junit.After public void tearDown () throws java.lang.Exception { if ( ( caService ) != null ) { caService.unbind () ; caService = null; } try { if ( ( simulator ) != null ) { simulator.stop () ; simulator = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onStartFailure ( int errorCode ) { try { if ( errorCode != ( ADVERTISE_FAILED_ALREADY_STARTED ) ) { java.lang.String msg = "Service failed to start: " + errorCode; mHandler.sendMessage ( android.os.Message.obtain ( null, 0, msg ) ) ; } else { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<Model.Move> getAvailableWhiteMoves () { try { if ( ( ( availableWhiteMoves ) != null ) && ( ( availableWhiteMoves.size () ) > 0 ) ) return availableWhiteMoves; else return getAllWhiteAvailableMoves () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void index ( org.xbib.elasticsearch.plugin.jdbc.util.IndexableObject object, boolean create ) throws java.io.IOException { object.index ( rebuild_index ) ; try { super.index ( object, create ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public icsetlv.trial.model.TraceNode getLastestNode () { int len = size () ; try { if ( len > 0 ) { return this.exectionList.get ( ( len - 1 ) ) ; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { record = new io.deepstream.Record ( "recordA", new java.util.HashMap () , connectionMock, config, deepstreamClientMock ) ; record.addRecordEventsListener ( recordEventsListener ) ; try { record.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void schedule ( java.lang.Runnable task, java.util.Calendar starts ) { try { schedule ( task, starts.getTime () .getTime () , 0, 0, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void switchToFragment ( android.support.v4.app.Fragment fragment ) { try { getSupportFragmentManager () .beginTransaction () .replace ( R.id.content_container, fragment, "chatFragment" ) .addToBackStack ( java.lang.String.valueOf ( fragment.getId () ) ) .setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) .commitAllowingStateLoss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { dialogDrinkAccepted.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } winnerDrink = 1; finishDialogChooseDrink ( position2 ) ; } 
public void onClick ( android.content.DialogInterface dialog, int which ) { try { deleteSchoolSubject ( parent.getItemAtPosition ( position ) .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setText ( ch.hearc.chatvideo.tools.StringCrypter message ) { try { ch.hearc.chatvideo.gui.JPanelChat.getInstance () .setText ( message.decrypter () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void close0 () { closeColumns ( true ) ; com.questdb.cairo.Misc.free ( txMem ) ; com.questdb.cairo.Misc.free ( metaMem ) ; try { com.questdb.cairo.Misc.free ( columnSizeMem ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.questdb.cairo.Misc.free ( path ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setTheme () ; setContentView ( R.layout.activity_confirm_appointment ) ; init () ; try { setUpRecyclerView () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setHasStableIds ( boolean hasStableIds ) { super.setHasStableIds ( hasStableIds ) ; try { if ( ( mOriginalAdapter ) != null ) mOriginalAdapter.setHasStableIds ( hasStableIds ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addStatelessParam ( com.vmware.http.request.RequestParam requestParam ) { try { allParams.add ( requestParam ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void mouseReleased ( java.awt.event.MouseEvent e ) { try { if ( ( e.getClickCount () ) == 2 ) { setMaximized ( frame, ( ! ( isMaximized ( frame ) ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar, int i, boolean b ) { try { if ( b ) { mediaPlayer.seekTo ( i ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void doInBack () throws java.lang.Exception { try { com.avoscloud.chat.service.CacheService.cacheUserIfNone ( message.getFrom () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void comboSortActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.String kategori = ( ( java.lang.String ) ( comboSort.getSelectedItem () ) ) ; try { if ( "Semua Data".equals ( kategori ) ) { getAllData () ; } else { getSelectedData ( kategori ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View view = inflater.inflate ( R.layout.fragment_assignments_recycler, container, false ) ; try { butterknife.ButterKnife.bind ( this, view ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return view; } 
@ java.lang.Override public void onDestroy () { try { if ( ( mListView ) != null ) { mListView.removeOnScrollListener ( viewScrollListener ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mPopularMovieViewPresenter ) != null ) { mPopularMovieViewPresenter.destroy () ; mPopularMovieViewPresenter = null; } super.onDestroy () ; } 
@ java.lang.Override protected void onActivityResult ( int aRequestCode, int aResultCode, android.content.Intent data ) { try { if ( data != null ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing.getListingFromIntent ( data ) ; products.add ( newListing ) ; arrayAdapter.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected static synchronized void startShakeListener () { com.jackwink.tweakable.Tweakable.mOnShakeEnabled = true; try { com.jackwink.tweakable.Tweakable.mShakeDetector.start ( com.jackwink.tweakable.Tweakable.mSensorManager ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationEnd ( android.animation.Animator animator ) { try { setVisibility ( View.GONE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void itemStateChanged ( java.awt.event.ItemEvent e ) { try { if ( ( e.getStateChange () ) == ( java.awt.event.ItemEvent.SELECTED ) ) { configured = false; buttonBlockDescription.setText ( "getDescription blocked" ) ; } else { buttonBlockDescription.setText ( "getDescription not blocked" ) ; configured = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { try { pcs.removePropertyChangeListener ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onStart () { try { super.onStart () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void applyTraversal ( org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversal<org.apache.tinkerpop.gremlin.structure.Vertex, org.apache.tinkerpop.gremlin.structure.Vertex> traversal ) { try { traversal.has ( Schema.ConceptProperty.ID.name () , id.toString () ) .not ( __.hasLabel ( ai.grakn.util.Schema.BaseType.CASTING.name () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onMessageReceived ( java.lang.String text ) { try { mission.processResponse ( text ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mission.getPrompt () ) != null ) { sender.send ( mission.getPrompt () ) ; } } 
static java.util.List<PolygonalNumber> checkSolution ( int size, java.util.List<PolygonalNumber> partial, PolygonalNumber p ) { try { partial.add ( 0, p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( CyclicalFigurate.isSolution ( size, partial ) ) return partial; return null; } 
public void setDefaultDamage () { try { this.damage = ( ( int ) ( java.lang.Math.ceil ( ( ( level ) * 0.1 ) ) ) ) + 1; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void initClusterEventListener () throws org.wso2.andes.kernel.AndesException { org.wso2.andes.server.cluster.coordination.CoordinationComponentFactory coordinationComponentFactory = new org.wso2.andes.server.cluster.coordination.CoordinationComponentFactory () ; org.wso2.andes.kernel.AndesKernelBoot.clusterNotificationListenerManager = coordinationComponentFactory.createClusterNotificationListener () ; try { org.wso2.andes.kernel.AndesContext.getInstance () .setClusterNotificationListenerManager ( org.wso2.andes.kernel.AndesKernelBoot.clusterNotificationListenerManager ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void write ( int lvl, java.lang.Object[] objs ) { boolean writeToStdout = lvl <= ( water.util.Log.currentLevel ) ; try { water.util.Log.write ( lvl, writeToStdout, objs ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setMessages ( java.util.Collection<java.lang.String> messages ) { try { messagesAdapter.setMessages ( messages ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void setListView () { fr.smartapps.smalistview.SMAListView listView = ( ( fr.smartapps.smalistview.SMAListView ) ( findViewById ( R.id.list ) ) ) ; try { if ( listView != null ) { listView.initData ( 1, getDataViews () , this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int hashCode () { try { if ( ( hashcode ) == 0 ) { hashcode = this.fs.hashCode () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return hashcode; } 
public com.yalantis.ucrop.UCrop useSourceImageAspectRatio () { mCropOptionsBundle.putFloat ( com.yalantis.ucrop.UCrop.EXTRA_ASPECT_RATIO_X, 0 ) ; try { mCropOptionsBundle.putFloat ( com.yalantis.ucrop.UCrop.EXTRA_ASPECT_RATIO_Y, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
private void printTreePostOrder ( org.intelligentjava.algos.trees.AbstractBinarySearchTree.Node entry ) { try { if ( entry != null ) { printTreeInOrder ( entry.left ) ; printTreeInOrder ( entry.right ) ; if ( ( entry.value ) != null ) { java.lang.System.out.println ( entry.value ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public nikita.model.noark5.v4.Fonds update ( nikita.model.noark5.v4.Fonds fonds ) { try { if ( fonds.getFondsStatus () .equals ( nikita.config.N5ResourceMappings.STATUS_CLOSED ) ) { } } catch ( Exception ex ) { ex.printStackTrace () ; } return fondsRepository.save ( fonds ) ; } 
@ java.lang.Override public final void end () throws java.io.IOException { super.end () ; try { tokenAttrs.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateCanvasIF () { canvasIf = serialiseCanvas () ; try { canvasIf.repaint () ; } catch ( Exception ex ) { ex.printStackTrace () ; } canvasFrame.remove ( canvasIf ) ; canvasFrame.add ( canvasIf ) ; } 
public void msend ( java.lang.String msg ) throws java.io.IOException { java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( msg ) ) ) { java.lang.System.out.println ( "Msend failed, try again" ) ; } try { sock.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Double getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0; try { for ( com.snf.model.Transacao transacao : consultaTransacaoVM.getCaixaSelecionado () .getTransacoes () ) { valorTotal += transacao.getValor () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return valorTotal; } 
com.graphhopper.routing.BikeLoop.Route.Arc removeEdgeIndex ( int index ) { com.graphhopper.routing.BikeLoop.Route.Arc arc = edges.remove ( index ) ; try { bitSet.clear ( arc.edgeId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cost -= arc.cost; score -= arc.score; return arc; } 
public boolean columnIsDead ( int column ) { try { setTempBoard () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( add ( column ) ) == 1 ) { restoreBoardState () ; return true; } restoreBoardState () ; return false; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; try { setTheme ( app.getActiveTheme () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setTheme ( app.getActiveFont () ) ; super.onCreate ( savedInstanceState ) ; } 
@ rxbus.ecaray.com.rxbuslib.rxbus.RxBusReact ( clazz = { java.lang.String.class, java.lang.Integer.class } ) public void showContent4 ( java.lang.String content, int i ) { try { android.util.Log.d ( "tagutil", ( ( "收到的参数: " + content ) + i ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { try { if ( ( pl.getGame () .getStatus () ) != ( GameStatus.PLAYING ) ) { e.setCancelled ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean add ( Cell[][] c ) { if ( ( ( buffer ) != null ) && ( ( buffer.size () ) == ( length ) ) ) return false; try { buffer.add ( c ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( mCurrentLocation ) != null ) { mapView.setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test public void testCompareCellsASCNumberEQ () throws com.stratio.crossdata.common.exceptions.UnsupportedException { try { org.testng.Assert.assertEquals ( compareCell ( OrderDirection.DESC, 1, 1 ) , 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean isFull () { try { if ( ( list.size () ) != ( ( capacity ) - 1 ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ org.junit.Test public void isValid () { org.cloudfoundry.client.ValidationResult result = org.cloudfoundry.client.v2.spaces.ListSpaceAuditorsRequest.builder () .id ( "test-id" ) .build () .isValid () ; try { org.junit.Assert.assertEquals ( org.cloudfoundry.client.ValidationResult.Status.VALID, result.getStatus () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj, edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { try { for ( java.lang.String key : origObj.getAttributeKeys () ) newObj.addAttribute ( key, origObj.getAttribute ( key ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void takeBet ( int bet ) { if ( bet < 0 ) throw new java.lang.IllegalArgumentException ( "Bet cannot be negative." ) ; try { if ( ! ( balanceExceedsLimitBy ( bet ) ) ) throw new java.lang.IllegalArgumentException ( "Placing bet would go below limit." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } balance = ( balance ) - bet; } 
private void showUI ( boolean show ) { try { if ( show ) { add ( panel ) ; } else { remove ( panel ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.sample.web.admin.controller.html.system.codes.GetMapping ( value = "/find" ) public java.lang.String findCode ( @com.sample.web.admin.controller.html.system.codes.ModelAttribute ( value = "searchCodeForm" ) com.sample.web.admin.controller.html.system.codes.SearchCodeForm form, org.springframework.ui.Model model ) { lombok.val where = modelMapper.map ( form, com.sample.domain.dto.system.Code.class ) ; lombok.val pages = codeService.findAll ( where, form ) ; try { model.addAttribute ( "pages", pages ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "modules/system/codes/find"; } 
public void refresh () { try { data.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } loadData () ; } 
public static void addBoundsListener ( final javafx.stage.Stage stage, final java.lang.Class<?> prefNode ) { try { jgnash.uifx.util.StageUtils.addBoundsListener ( stage, prefNode.getName () .replace ( '.', '/' ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public nl.tudelft.ti2806.riverrush.game.state.GameState finish ( final java.lang.Integer team ) { this.screen.dispose () ; try { this.dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new nl.tudelft.ti2806.riverrush.game.state.FinishedGameState ( this.dispatcher, this.game, team ) ; } 
@ java.lang.Override public void run () { com.datdo.mobilib.util.MblUtils.getMainThreadHandler () .postDelayed ( this, delayMillis ) ; try { action.run () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void setUp () throws java.lang.Exception { try { if ( ! ( syncgatewayTestsEnabled () ) ) return; } catch ( Exception ex ) { ex.printStackTrace () ; } super.setUp () ; } 
public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory.createLocationInstance () ; try { res.setLocation ( location ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return res; } 
public void put ( int x, int y, java.awt.Color color ) { try { put ( x, y, textFactory.getSolid ( color ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCompletion ( android.media.MediaPlayer mp ) { mp.stop () ; try { mp.release () ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentState = com.trojx.fangyan.activity.StoryActivity.STATUS_IDLE; ad.stop () ; } 
public final de.aw.monma.gv.SplitBuchung createSplitbuchung () { try { removeGegenbuchung () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mSplitBuchung ) == null ) { mSplitBuchung = new de.aw.monma.gv.SplitBuchung ( this ) ; } setHasSplitBuchung ( true ) ; return mSplitBuchung; } 
@ java.lang.Override public void put ( double value ) throws java.io.IOException { this.writer.write ( java.lang.Double.toString ( value ) ) ; try { this.writer.write ( '\n' ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBeginningOfSpeech () { try { android.util.Log.d ( "onBeginningOfSpeech", "onBeginningOfSpeech" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ! ( isMeasurementStarted ) ) { onStartClicked () ; } else { onStopClicked ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { myKitabPresenter.onSuccess ( loginResult ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.sujan.mykitaab.MainActivity.class ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void onInputSizeChanged ( int width, int height ) { this.mInputWidth = width; this.mInputHeight = height; try { initFboTexture ( mInputWidth, mInputHeight ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public org.jboss.portletbridge.bridge.scope.BridgeRequestScope removeRequestScopeById ( org.jboss.portletbridge.bridge.context.BridgeContext ctx, java.lang.String id ) { org.jboss.portletbridge.bridge.scope.BridgeRequestScope scope = this.bridgeRequestScopeCache.remove ( id ) ; try { if ( scope != null ) { scope.clear () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return scope; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { showNextPage () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess ( @android.support.annotation.NonNull es.uv.uvlive.data.gateway.response.MessageListResponse messageListResponse ) { onMessagesReceived ( messageListResponse ) ; try { if ( ( messageListResponse.getMessages () .size () ) == 0 ) { endList = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkBinaryEOF ( boolean checked ) { try { if ( ( strategy.BinaryGrammar ) && checked ) { If ( _Func ( "eof" ) ) ; { Fail () ; } EndIf () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setBotLineLenDp ( float lenDp ) { this.botLineLen = dpToPx ( lenDp ) ; initSize () ; try { invalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; mPeople = new java.util.ArrayList<> () ; try { mAdapter = new android.widget.ArrayAdapter ( getContext () , android.R.layout.simple_list_item_1, mPeople ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public void doSomething () { try { another () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String next () { try { if ( hasNext () ) { ( element ) ++; return supa.get ( ( ( element ) - 1 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { pnnl.goss.tutorial.launchers.AggregatorLauncher.log.debug ( "Creating aggregator launcher" ) ; startAggregator () ; try { setupControlChannel () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void answerCorrect ( android.view.View view ) { try { answerCorrect () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void mouseDown ( int buttons ) { if ( ( org.sikuli.script.RobotDesktop.heldButtons ) != 0 ) { org.sikuli.script.RobotDesktop.heldButtons |= buttons; } else { org.sikuli.script.RobotDesktop.heldButtons = buttons; } try { doMouseDown ( org.sikuli.script.RobotDesktop.heldButtons ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onError ( java.lang.Throwable e ) { com.netflix.eureka2.transport.base.HeartBeatConnection.logger.error ( ( "Heartbeat receiver subscription got an error. This will close the connection " + ( delegate.name () ) ) , e ) ; try { shutdown ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { addFooterView ( mLoadingView ) ; try { if ( ( mLoadMoreListener ) != null ) { mLoadMoreListener.onLoadMore ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.support.annotation.Nullable @java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View fragment; fragment = inflater.inflate ( R.layout.fragment_landing_header, container, false ) ; try { butterknife.ButterKnife.inject ( this, fragment ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return fragment; } 
public synchronized java.lang.String dequeueGrog () { java.lang.String str = null; try { if ( grogAvailable ) { str = arduinoMessages.remove () ; if ( arduinoMessages.isEmpty () ) { grogAvailable = false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return str; } 
@ java.lang.Override protected void jointDependentSet_d_i () { try { d_i.set ( owner.getRigidTranslation () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } owner.getRigidRotation () .inverseTransform ( d_i ) ; d_i.add ( owner.getLink () .getComOffset () ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = com.it.audit.web.constants.RequestURI.INDEX_CENTER_URI ) public org.springframework.web.servlet.ModelAndView centerContent ( @org.springframework.web.bind.annotation.PathVariable com.it.audit.enums.UserRole role ) { try { switch ( role ) { case ADMIN: return new org.springframework.web.servlet.ModelAndView ( "user/list", "role", role.name () ) ; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.springframework.web.servlet.ModelAndView () ; } 
private boolean skipLang ( java.lang.String langToCheck, java.util.List<java.lang.String> langs ) { try { for ( java.lang.String lang : langs ) { if ( langToCheck.equals ( lang ) ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Deprecated public void setSelectedList ( java.util.Set<java.lang.Integer> set ) { try { mCheckedPosList.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( set != null ) { mCheckedPosList.addAll ( set ) ; } notifyDataChanged () ; } 
@ java.lang.Override public void unapply ( com.robin.magic_realm.components.effect.SpellEffectContext context ) { try { if ( context.Target.getGameObject () .hasThisAttribute ( _effectName ) ) { context.Target.getGameObject () .removeThisAttribute ( _effectName ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { setPriority ( java.lang.Thread.MAX_PRIORITY ) ; synchronized ( com.utyf.pmetro.map.TRP.rt ) { com.utyf.pmetro.map.TRP.rt.createGraph () ; com.utyf.pmetro.map.TRP.setStart ( com.utyf.pmetro.map.TRP.routeStart ) ; com.utyf.pmetro.map.TRP.setEnd ( com.utyf.pmetro.map.TRP.routeEnd ) ; } try { progDialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } MapActivity.mapActivity.mapView.redraw () ; } 
@ java.lang.Override public void servicePolicy ( io.apiman.manager.api.beans.policies.PolicyBean policy ) { try { logger.info ( ( ( Messages.i18n.format ( "StorageImportDispatcher.ImportingServicePolicy" ) ) + ( policy.getName () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } policy ( policy ) ; } 
@ java.lang.Override public boolean supportsInput ( java.lang.Object input, java.lang.String contentType ) { try { for ( org.n52.epos.transform.MessageTransformer<org.n52.epos.event.EposEvent> t : transformers ) { if ( t.supportsInput ( input, contentType ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
boolean enableBackgroundScan ( boolean enable ) { try { if ( enable ) { mWifiConfigStore.enableAllNetworks () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return mWifiNative.enableBackgroundScan ( enable ) ; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { try { db.execSQL ( com.example.shoukhin.locatingfriends.MyDbHelper.CREATE_FRIEND_TABLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkNotRemoved ( wad.domain.Activity activity ) { java.lang.String activityName = activity.getName () ; assertNotEquals ( 0, activity.getAttendeeCount () ) ; wad.domain.Activity repoActivity = activityRepository.findByName ( activityName ) ; try { assertNotNull ( repoActivity ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void loadImage ( android.net.Uri uri, java.lang.String chanName, java.lang.String key, boolean fromCacheOnly, android.widget.ImageView imageView ) { try { loadImage ( uri, chanName, key, new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void remove ( int position ) { contentList.remove ( position ) ; indi.yume.tools.adapter_renderer.recycler.RendererAdapter.notifyItemRemoved ( position ) ; try { indi.yume.tools.adapter_renderer.recycler.RendererAdapter.notifyItemRangeChanged ( 0, getItemCount () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPreExecute () { try { super.onPreExecute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void test6LetterWord () throws java.lang.Exception { try { this.wordJumble.setWordLength ( 6 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( 6, this.wordJumble.scramble () .length () , edu.westga.cs6242.wordjumble.ModelWordJumbleTest.RANGE ) ; } 
@ java.lang.Override public void onButtonClick ( android.app.AlertDialog _dialog, int actionId ) { try { if ( ( com.panzyma.nm.auxiliar.AppDialog.OK_BUTTOM ) == actionId ) { Load_Data ( com.panzyma.nm.view.LOAD_DATA_FROM_LOCALHOST ) ; _dialog.dismiss () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void Union ( int node1Id, int node2Id ) { try { nodeIds[Root ( node2Id ) ] = Root ( node1Id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void startMusic () { try { mediaPlayer.setLooping ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mediaPlayer.start () ; } 
public static void main ( java.lang.String[] args ) { java.util.Date date = new java.util.Date () ; java.lang.System.out.println ( "Hello, World" ) ; try { java.lang.System.out.println ( date.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onLoadMore ( int page ) { try { listPokemonPresenter.list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest.create () .withOffset ( ( ( page - 1 ) * 10 ) ) .withLimit ( 10 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onStart () { try { if ( ( newInstanceTile ) == null ) { newInstanceTile = ( ( javafx.scene.layout.StackPane ) ( instancePane.getChildren () .get ( 0 ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final BinaryNum setIfLessThan ( final BinaryNum other ) { try { if ( ( this.toInt () ) < ( other.toInt () ) ) { return new BinaryNum ( "1" ) ; } else { return new BinaryNum ( "0" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateDownloads ( java.util.List<com.chaemil.hgms.model.Download> downloads ) { this.downloads.clear () ; this.downloads.addAll ( downloads ) ; try { notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.lang.String getField ( int index ) { try { if ( index <= ( NF ) ) { return field.get ( index ) ; } else { return ""; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void showSimpleSnackbar ( int mainTextResource, boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; try { showSnackbar ( mainTextResource, shortLength, ( -1 ) , null, root ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void buildTables () { try { super.buildTables () ; } catch ( Exception ex ) { ex.printStackTrace () ; } buildSequences ( tableContainer ) ; } 
public void addEntities () { try { while ( ( enemyCount ) < ( enemyCountMax ) ) { com.github.fishio.EnemyFish eFish = com.github.fishio.LevelBuilder.randomizedFish () ; add ( eFish ) ; ( enemyCount ) ++; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void ElfoVerdeAtiraFlechaERecebe2deXP () { ElfosVerdes teste = new ElfosVerdes () ; teste.atirarFlechaDeVidro ( new Dwarf () ) ; try { assertEquals ( 2, teste.getExperiencia () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initialize () { if ( ( cloudWatchClient ) == null ) { cloudWatchClient = new com.amazonaws.services.cloudwatch.AmazonCloudWatchClient ( awsCredentials ) ; } try { if ( addInstanceData ) { com.j256.simplemetrics.persister.CloudWatchMetricsPersister.instanceId = com.j256.simplemetrics.persister.CloudWatchMetricsPersister.downloadInstanceId ( com.j256.simplemetrics.persister.CloudWatchMetricsPersister.AWS_CONNECT_TIMEOUT_MILLIS ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.io.DataOutputStream GetOutputStream () { try { if ( null == ( com.plugish.woominecraft.Connection.outputStream ) ) { setOutputStream () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return com.plugish.woominecraft.Connection.outputStream; } 
protected void trim ( int n ) { try { nucleotideSequence = nucleotideSequence.substring ( 0, ( ( nucleotideSequence.length () ) - n ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( ( tabs.getCurrentTab () ) == 0 ) { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_INCOME, null ) ; } else { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_EXPENDITURE, null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { int viewId = view.getId () ; try { if ( viewId == ( CLOSE_LINK_ID ) ) { closeWindow () ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( viewId == ( LICENSE_LINK_ID ) ) { showLicenseText () ; return; } } 
public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { try { view.populateTopicList ( watchedTopics.values () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { int id = v.getId () ; try { if ( id == ( R.id.assistant_check ) ) { checkAccount.setEnabled ( false ) ; accountCreator.isAccountActivated () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onWebSocketError ( @org.jetbrains.annotations.NotNull java.lang.Throwable cause ) { super.onWebSocketError ( cause ) ; try { cause.printStackTrace ( java.lang.System.err ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setName ( java.lang.reflect.Field field ) { try { name = com.epam.jdi.uitests.web.selenium.elements.pageobjects.annotations.WebAnnotationsUtil.getElementName ( field ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } varName = field.getName () ; } 
@ java.lang.Override public void onConfigurationChanged ( android.content.res.Configuration newConfig ) { super.onConfigurationChanged ( newConfig ) ; try { new net.mpross.pws.MainActivity.datagrab () .execute ( "" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { help ( matcher.findCandidates ( ops () , new net.imagej.ops.OpRef ( name, opType, null, null ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setDataRetriever ( org.matrix.androidsdk.data.DataRetriever dataRetriever ) { try { checkIfActive () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mDataRetriever = dataRetriever; } 
@ java.lang.Override public void onItemClick ( int position, android.view.View v ) { try { android.widget.Toast.makeText ( getApplicationContext () , "Suggestion Selected!", Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onUploadError ( fr.bmartel.speedtest.SpeedTestError speedTestError, java.lang.String errorMessage ) { forceStopTask () ; timer.cancel () ; try { timer.purge () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void rbit ( int size, jdk.vm.ci.code.Register dst, jdk.vm.ci.code.Register src ) { try { super.rbit ( size, dst, src ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ mc.alk.arena.objects.events.ArenaEventHandler ( needsPlayer = false ) public void onPlace ( org.bukkit.event.block.BlockPlaceEvent e ) { try { if ( e.getBlockPlaced () .getType () .equals ( mc.adambor.ArenaPlunger.ArenaPlunger.material ) ) { e.setCancelled ( true ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void playRemoteVideo ( long position, boolean autoPlay ) { try { updateRemoteVideoPosition ( position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } loadRemoteMedia ( position, autoPlay ) ; } 
public void removePlayerFromSidebar ( java.lang.String name ) { try { fwScoreboard.resetScores ( name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testIsBlankWhenTextTypeAndTextIsNotBlank () { try { assertFalse ( fact.isBlank ( new eu.europa.fisheries.uvms.rules.service.TextType () .withValue ( "test" ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void getDistance ( android.view.View view ) { coor1 = null; coor2 = null; com.example.kygrykhon.knownuggettrial.MainActivity.dialog = android.app.ProgressDialog.show ( view.getContext () , "Getting distance..", "Please wait while we fetch coordinates..", true ) ; try { acquireCoordinate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } acquireCoordinate () ; } 
private void doSettings () { try { frame.getContentPane () .removeAll () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setFrame () ; frame.validate () ; frame.repaint () ; } 
public static void main ( java.lang.String[] args ) { try { javafx.application.Application.launch ( args ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { try { objects.remove ( obj.valueRef () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.laboki.eclipse.plugin.smartsave.instance.Instance begin () { this.startListening () ; try { this.updateText () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return super.begin () ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setVisible ( false ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int id ) { saveTask.execute () ; org.catrobat.paintroid.dialog.LayersDialog.getInstance () .resetLayer () ; try { startLoadImageIntent () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onRequest ( final android.content.Intent request, final android.content.Intent response ) { try { mHostMediaPlayerManager.playMedia ( response ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
protected final org.voltdb.iv2.TxnEgo advanceTxnEgo () { try { m_txnEgo = m_txnEgo.makeNext () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return m_txnEgo; } 
public void SetSubbed () { try { SetSubbed ( CacheChats.Subs.contains ( CurrentChat ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void removerPorId ( java.lang.Object id ) { javax.persistence.Query query = getEntityManager () .createQuery ( "delete Transacao where id = :id" ) ; query.setParameter ( "id", id ) ; try { query.executeUpdate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int doAttack ( com.slimekiller.main.Unit target ) { int damageDealt = ( ( ( attack ) - ( target.defence ) ) <= 0 ) ? 0 : ( attack ) - ( target.defence ) ; try { target.subHealth ( damageDealt ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return damageDealt; } 
public void insertUpdate ( javax.swing.event.DocumentEvent e ) { try { if ( comment_set ) { org.paint.gui.DirtyIndicator.inst () .dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text.getText () ; javax.swing.SwingUtilities.invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void t05eContainsInOrder () { java.util.List<java.lang.String> list = java.util.Arrays.asList ( "v1", "v2", "v3" ) ; try { org.hamcrest.MatcherAssert.assertThat ( list, org.hamcrest.collection.IsIterableContainingInOrder.contains ( "v1", "v2", "v3" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCompleted ( boolean success, java.lang.String result, java.lang.Throwable throwable ) { try { lock.openAll () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testIsListEmptyOrBetweenNumberOfItemsWhenListSizeIs1AndShouldBeBetween1And1 () throws java.lang.Exception { java.util.List<java.lang.String> list = java.util.Arrays.asList ( "" ) ; boolean listEmptyOrBetweenNumberOfItems = fact.isListEmptyOrBetweenNumberOfItems ( list, 1, 1 ) ; try { assertTrue ( listEmptyOrBetweenNumberOfItems ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void addPages () { super.addPages () ; try { addPage ( this.fileCreationPage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } addPage ( this.representationCreationPage ) ; } 
public void addUserSession ( java.lang.String sUserId, java.lang.String sSession ) { try { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { nl.ru.crpstudio.CrpUtil.userCache.add ( new nl.ru.crpstudio.UserSession ( sUserId, sSession, true ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int getCount () { try { if ( ( distinctRecords.size () ) > 0 ) { return distinctRecords.size () ; } else { return 1; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int countUser ( java.lang.String username ) throws exceptions_assignments.Exceptions_2.NotLoggedInException { try { for ( exceptions_assignments.Exceptions_2.User u : loggedin ) { if ( u.getUsername () .equals ( username ) ) { return loggedin.size () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } throw new exceptions_assignments.Exceptions_2.NotLoggedInException () ; } 
private void getDataAndCode () { try { messengerSender.setMessage ( com.phonemap.phonemap.constants.Sockets.RETURN_DATA_AND_CODE ) .sendRepliesTo ( response ) .send () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.PUT, value = "/menu/{id}" ) public void updatePizza ( @org.springframework.web.bind.annotation.RequestBody com.tramppizza.domains.Pizza pizza, @org.springframework.web.bind.annotation.PathVariable java.lang.Long id ) { try { menuService.updatePizza ( id, pizza ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent myIntent = new android.content.Intent ( this, com.example.douglass_macbook.ss12_simon_says.ActivityInstruction.class ) ; try { this.startActivityForResult ( myIntent, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.Double getRatioScore ( java.lang.Double jufuPercent, java.lang.Double hgaGameRatio ) { try { lingda.service.GameRatioAnalyzer.logger.info ( "analyzer gives {}", ( jufuPercent * ( hgaGameRatio - 1 ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return jufuPercent * ( hgaGameRatio - 1 ) ; } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { try { if ( ( this.language ) != null ) { outState.putInt ( "CURRENT_LANG", this.language.getId () ) ; super.onSaveInstanceState ( outState ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void info ( java.lang.String s ) { try { if ( ( underlyingLogger ) == null ) { java.lang.System.out.println ( s ) ; } else { underlyingLogger.info ( s ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void pause ( com.softtanck.imusic.bean.Music music ) { try { if ( mplayer.isPlaying () ) { mplayer.pause () ; com.softtanck.imusic.ConstantValue.MUSIC_CURRENT_STATE = com.softtanck.imusic.ConstantValue.MUSIC_STATE_PAUSE; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void setUp () throws java.io.FileNotFoundException { try { config = pl.touk.sputnik.configuration.ConfigurationBuilder.initFromResource ( "test-sonar.properties" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent profileViewIntent = new android.content.Intent ( getApplicationContext () , com.socialteinc.socialate.ViewOtherUserProfile.class ) ; try { profileViewIntent.putExtra ( "entertainmentUploader", mEntertainmentUploader ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( profileViewIntent ) ; } 
@ java.lang.Override public void setControllerManager ( controller.ControllerManager ccontrollerManager ) { super.setControllerManager ( ccontrollerManager ) ; try { commandParser.setControllerManager ( ccontrollerManager ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onLoadMore ( int page, int totalItemsCount ) { java.lang.System.out.println ( ( page - 1 ) ) ; try { bwRest.getRestClient ( ( page - 1 ) , "load" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
private void sendResult ( net.minecraft.command.ICommandSender player, java.lang.String modid, java.lang.String result ) { try { player.addChatMessage ( new net.minecraft.util.ChatComponentText ( TTCore.lang.localize ( ( "command.config.result." + result ) , modid ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initView () { com.huichongzi.fastwidget4android.widget.AnimationListViewNew blindsListView = ( ( com.huichongzi.fastwidget4android.widget.AnimationListViewNew ) ( findViewById ( R.id.blinds_listview_act_list ) ) ) ; blindsListView.setAdapter ( new com.huichongzi.fastwidget4android.adapter.AnimationListAdapter ( this ) ) ; try { blindsListView.setAnimationType ( AnimationListViewNew.TYPE_BLINDS ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } blindsListView.setIsVertical ( true ) ; } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { try { for ( int i = 0; i < 5; i++ ) switchToSnap ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void kill () { health_ = 0; alive_ = false; GameScreen.worldController_.updateScore ( points_on_death_ ) ; try { GameScreen.worldController_.world_.decreaseTargetCount () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "static-method" ) private void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException, java.lang.ClassNotFoundException { try { in.defaultReadObject () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addFilterItem ( int position, com.yeahdev.yeahurls.model.NoteItem model ) { try { this.noteItemCollection.add ( position, model ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } notifyItemInserted ( position ) ; } 
public static void main ( java.lang.String[] args ) { com.valentine.game.core.Screen.init () ; com.valentine.game.core.Game.init () ; com.valentine.game.core.Looper.init () ; com.valentine.game.core.Input.init () ; com.valentine.game.core.Window.init () ; try { java.lang.System.err.println ( "[Game]" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void drawPalette ( int[] colors, boolean[] selectedColors ) { try { drawPalette ( colors, selectedColors, null, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void uploadNotOkTemplate () throws java.io.IOException, java.net.URISyntaxException { objective.taskboard.it.HttpResponse response = uploadTemplate ( objective.taskboard.it.UploadTemplateIT.notOkTemplate () ) ; try { org.junit.Assert.assertThat ( response.getStatusLine () .getStatusCode () , org.hamcrest.Matchers.not ( 200 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setupSketch () { try { initDimensions () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setupSketchTask.start () ; isSetup = true; surfaceReady = true; } 
public void transform ( final java.lang.Double m11, final java.lang.Double m12, final java.lang.Double m21, final java.lang.Double m22, final java.lang.Double dx, final java.lang.Double dy ) { try { ctx.transform ( m11, m12, m21, m22, dx, dy ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder, int position ) { try { updateItemClickListener ( position, holder.itemView ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void selectOnMap ( org.activityinfo.ui.client.component.form.field.map.MapItem mapItem ) { try { map.setView ( mapItem.getLatLng () , org.activityinfo.ui.client.component.form.field.map.MapPanel.ZOOM_LEVEL, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSecondFragmentRequested () { try { mFragmentManager.beginTransaction () .setCustomAnimations ( R.animator.slide_in, 0, R.animator.slide_out, 0 ) .replace ( R.id.fragment_container_frame_layout, new com.jiahaoliuliu.dialogfragmentstransition.SecondFragment () ) .addToBackStack ( null ) .commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void close () throws java.io.IOException { try { htsjdk.samtools.util.CloserUtil.close ( reader ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.reader = null; } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void releaseConnection ( org.apache.http.HttpClientConnection conn, java.lang.Object newState, long validDuration, java.util.concurrent.TimeUnit timeUnit ) { try { this.open.set ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void closeTradeOverlay () { tradeOverlayVisible = false; try { engine.removeTrade ( currentTrade ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void desenha ( java.awt.Graphics g ) { try { g.drawOval ( x, y, largura, altura ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void isFavCallBack () { try { if ( mControl.getModel () .ismIsFav () ) { mTitleBar.findViewById ( R.id.fav ) .setActivated ( true ) ; } else { mTitleBar.findViewById ( R.id.fav ) .setActivated ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stopService () { getActivity () .stopService ( mclab1.pages.MediaPlayerFragment.playIntent ) ; try { getActivity () .unbindService ( mclab1.pages.MediaPlayerFragment.musicConnection ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.support.v4.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.ab_refresh: this.refresh () ; return true; case R.id.ab_search: return true; default: return super.onOptionsItemSelected ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.google.cloud.bigtable.config.CallOptionsConfig.Builder setShortRpcTimeoutMs ( int shortRpcTimeoutMs ) { try { com.google.common.base.Preconditions.checkArgument ( ( shortRpcTimeoutMs > 0 ) , "Short Timeout ms has to be greater than 0." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.shortRpcTimeoutMs = shortRpcTimeoutMs; return this; } 
private void hidePopup () { try { qrcode.setVisible ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public com.microsoft.azure.management.sql.implementation.SqlDatabaseImpl withoutElasticPool () { try { this.inner () .withElasticPoolName ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
private boolean saveConfirmed () { try { if ( ( de.uni_hannover.sra.minimax_simulator.Main.getWorkspace () .getCurrentProjectFile () ) == null ) { return saveProjectAs () ; } else { return saveProject () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void set ( int r, double value ) { try { data.set ( r, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void doZap () { try { if ( com.js.geometryapp.editor.Editor.ZAP_SUPPORTED ) { disposeOfStateSnapshot () ; mState = new com.js.geometryapp.editor.EditorState () ; mCommandHistory.clear () ; mCommandHistoryCursor = 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBackPressed () { try { if ( ( myCountDownTimer ) != null ) myCountDownTimer.cancel () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent intent = new android.content.Intent ( this, com.randpdevs.calcoff.MainActivity.class ) ; startActivity ( intent ) ; } 
public void leaveRoom () { try { android.util.Log.d ( com.sam.hex.NetActivity.TAG, "Leaving room." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } stopKeepingScreenOn () ; if ( ( mRoomId ) != null ) { Games.RealTimeMultiplayer.leave ( getClient () , this, mRoomId ) ; mRoomId = null; } } 
@ java.lang.Override protected void initializeLibraryDependencies () { if ( ! ( org.chromium.base.BuildInfo.hasLanguageApkSplits ( this ) ) ) { org.chromium.base.ResourceExtractor.setResourcesToExtract ( org.chromium.ui.base.ResourceBundle.getActiveLocaleResources () ) ; } try { org.chromium.base.PathUtils.setPrivateDataDirectorySuffix ( org.chromium.chrome.browser.ChromeApplication.PRIVATE_DATA_DIRECTORY_SUFFIX, this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void executeJavascript ( java.lang.String strJavascript ) { try { { com.rho.BrowserField field = ( ( com.rho.BrowserField ) ( m_oMainScreen.getField ( 0 ) ) ) ; field.executeScript ( ( "javascript:" + strJavascript ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setLocalValue ( java.lang.String rowKey, int col, java.lang.Object value ) { try { localValues.put ( new com.lassitercg.faces.components.sheet.Sheet.RowColIndex ( rowKey, col ) , value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onClick ( org.apache.wicket.ajax.AjaxRequestTarget target ) { try { super.onClick ( target ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tree.select ( target, lemming.ui.tree.GenericFolder.getModelObject () ) ; } 
public void runCalibrateCapture () { try { new java.lang.Thread ( new PositivePosture.CalibrateCapture () ) .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void standardInit ( java.lang.Integer size ) { try { for ( java.lang.Integer i = 1; i < ( size + 1 ) ; i++ ) { cards.add ( new com.nirus.game.basics.Card ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { showKeyboard ( passcode ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateFadeLevel ( float fade ) { this.fade = fade; try { repaint () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean jj_3R_190 () { try { if ( jj_3R_197 () ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void quotedField () { char c = reader.read () ; try { if ( isQuote ( c ) ) { state = unportant.gist.csvparser.fsm.FsmParser.State.END_OF_QUOTED_OR_ESCAPED_QUOTE; } else { append ( c ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.ArrayList<mainPackage.Player> removePlayerFromList ( mainPackage.Player p ) { try { listPlayers.remove ( p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return listPlayers; } 
private void NOTINTERESTEDReceived () throws java.lang.Exception { btLogger.writeToLog ( btLogger.receivedNotInterested ( targetPeerID ) ) ; try { if ( receivedInterested ) { threadManager.updateInterested ( this, false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } receivedInterested = false; } 
public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { try { tags.put ( stackTag.getName () , stackTag ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static int freePort () { java.util.Random random = new java.util.Random () ; int port; try { do { port = random.nextInt ( 65535 ) ; } while ( org.opencron.common.utils.HttpUtils.isLocalPortUsing ( port ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return port; } 
@ org.junit.Test public void testRemoveMiddleNodeWithEvenNodes () { try { ll.removeMiddleNode () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertEquals ( "1 -> 2 -> 4 -> 5", ll.toString () ) ; } 
@ java.lang.Override protected void onDestroy () { super.onDestroy () ; try { if ( ( mCameraSource ) != null ) { mCameraSource.release () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void draw ( javafx.scene.layout.Pane canvas ) { remove ( canvas ) ; java.lang.System.out.println ( "Drawing sprite..." ) ; try { canvas.getChildren () .addAll ( spriteView ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int getPulseOutDuration () { try { if ( getOverwriteValue () ) { return Settings.System.getIntForUser ( mContext.getContentResolver () , Settings.System.DOZE_PULSE_DURATION_OUT, R.integer.doze_pulse_duration_out, UserHandle.USER_CURRENT ) ; } else { return getInt ( "doze.pulse.duration.out", R.integer.doze_pulse_duration_out ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { try { if ( newRoot == null ) { cgModelRoot = null; } else { cgModelRoot = newRoot.clone () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static java.lang.String getCustomTokenForUser ( java.lang.Long userId ) { try { com.pratilipi.common.util.FirebaseApi.initialiseFirebase () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return com.google.firebase.auth.FirebaseAuth.getInstance () .createCustomToken ( userId.toString () ) ; } 
@ java.lang.Override public void change ( java.lang.Object e ) { try { normalizeComponents () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setImageTypeSupported ( java.util.List<com.smartdevicelink.proxy.rpc.enums.FileType> imageTypeSupported ) { try { if ( imageTypeSupported != null ) { store.put ( com.smartdevicelink.proxy.rpc.ImageField.KEY_IMAGE_TYPE_SUPPORTED, imageTypeSupported ) ; } else { store.remove ( com.smartdevicelink.proxy.rpc.ImageField.KEY_IMAGE_TYPE_SUPPORTED ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.support.annotation.Nullable public java.lang.String getSupervisor ( int i ) { i--; try { if ( ( i < ( sections.length ) ) && ( i >= 0 ) ) return sections[i].getSupervisor () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onException ( java.lang.Exception e ) { try { if ( ( inspector ) != null ) inspector.onConnectError ( request, address, e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } callback.setException ( e ) ; } 
private void initSource () throws java.lang.Exception { try { dataLine = javax.sound.sampled.AudioSystem.getSourceDataLine ( af ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.math.BigDecimal calculateLambda () throws java.lang.Exception { try { this.lambda = this.underlyingPrice.multiply ( this.delta ) .divide ( this.theoreticalValue, this.scale, java.math.RoundingMode.HALF_DOWN ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this.lambda; } 
public int[] keysToArray () { int[] keysArr = new int[this.size]; if ( ( this.size ) == 0 ) { return keysArr; } try { generateKeysArray ( root, keysArr, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return keysArr; } 
public protocol.Servlet getServletAtLocation ( java.lang.String location ) { try { if ( locationMapping.containsKey ( location ) ) { return locationMapping.get ( location ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return new server.DefaultServlet ( parent ) ; } 
protected void updateCurrentRecord () { try { currentRecord = getPageStartRecord () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testEmptyComoodityFilter () throws java.lang.Exception { org.auscope.portal.mineraloccurrence.MineralTenementFilter filter = new org.auscope.portal.mineraloccurrence.MineralTenementFilter ( "", "", "", "", "", "" ) ; java.lang.String result = filter.getFilterStringAllRecords () ; try { org.junit.Assert.assertTrue ( result.isEmpty () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void addType ( java.lang.String type ) { try { this.types.put ( type, new java.lang.Integer ( this.types.size () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void jButtonSquareRootActionPerformed ( java.awt.event.ActionEvent evt ) { try { numStorage.SetDisplay ( mathProc.Sqrt ( numStorage.GetNumber () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } UpdateDisplay () ; } 
@ java.lang.Override protected void onCreate ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } initContainer ( savedInstanceState ) ; } 
@ org.junit.Test public void unitTest_getAllPlayers_noPacman () { java.util.List<com.pm.server.player.Pacman> pacmanReturnedList = pacmanRepository.getAllPlayers () ; try { org.junit.Assert.assertTrue ( pacmanReturnedList.isEmpty () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.content.DialogInterface dialog, int id ) { try { if ( noteExists ) { controller.deleteNote ( note ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } setResult ( edu.gatech.androidnoteapp.RESULT_OK ) ; finish () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { button1.setText ( ( ( mark ) + "" ) ) ; placeMarkOnBoard ( 0, 0 ) ; try { button1.setEnabled ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } checkForWinOrDraw () ; } 
@ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { try { this.handleForEventMap ( event, org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.handleForEventMap ( event, org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END, true ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.action_save_details: updateDetails () ; finish () ; break; case R.id.action_delete_details: showDeleteConfirmationDialog () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onOptionsItemSelected ( item ) ; } 
@ org.junit.Test public void testLimitCheckIncorrect () { boolean limitReached = this.player.balanceExceedsLimitBy ( this.bet ) ; try { assertTrue ( limitReached ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void checkTest () { try { if ( ( udao.checkUser ( "2012301130118", "wudazihuan" ) ) != null ) { java.lang.System.out.println ( "登录成功" ) ; } else java.lang.System.out.println ( "登录失败" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected boolean hasPermission ( org.bukkit.command.CommandSender sender ) { try { if ( sender.hasPermission ( ( "bendingitems.command." + ( name ) ) ) ) { return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.annotation.SuppressLint ( value = "InlinedApi" ) @java.lang.Override public void run () { try { mRootView.setSystemUiVisibility ( ( ( ( ( android.view.View.SYSTEM_UI_FLAG_FULLSCREEN ) | ( android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE ) ) | ( android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY ) ) | ( android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void start () { try { cli.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void windowGainedFocus ( java.awt.event.WindowEvent e ) { try { studio_.getDisplayManager () .raisedToTop ( ourViewer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void buildImageUrl () { java.lang.String fileName = "testFileName"; java.lang.String expected = ( at.fhj.swd13.pse.test.service.DocumentServiceIT.imageFolderUrl ) + fileName; try { assertEquals ( expected, at.fhj.swd13.pse.test.service.DocumentServiceIT.documentService.buildImageUrl ( fileName ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void InitBill () { conn.Open () ; conn.Close () ; adapterBill = new com.example.huynhthanhnha.myapplication.fragments.BillFragment.BillAdapter ( getActivity () , listBill ) ; try { listView.setAdapter ( adapterBill ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void push ( E element ) { try { ensureCapacity ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } elements[ ( ( size ) ++ ) ] = element; } 
public static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE; try { for ( int i = n; i > 1; i-- ) { fact = fact.multiply ( new java.math.BigInteger ( java.lang.Integer.toString ( i ) ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return fact; } 
@ java.lang.Override public void run () { try { if ( ( ( isShutdown ) != null ) && ( ! ( isShutdown.get () ) ) ) { pushEvent ( new com.alibaba.jstorm.daemon.nimbus.TopologyMetricsRunnable.Refresh () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static betix.core.config.Stake get ( double stake ) { try { for ( betix.core.config.Stake s : betix.core.config.Stake.values () ) { if ( ( s.value ) >= stake ) { return s; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return betix.core.config.Stake.noStake; } 
void emptyImplicitTable ( java.lang.String table, int line ) { try { sb.append ( "Invalid table definition due to empty implicit table name: " ) .append ( table ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testAcnet () throws java.lang.Exception { try { serialise ( "/acnet2/MediumNet.net.nml", "./src/test/resources/acnet2AllTypes.xmi", "network_ACnet2", true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } serialise ( "/acnet2/MediumNet.net.nml", "./src/test/resources/acnet2AllTypes.xmi", null, true ) ; } 
public void start ( I iface, lk.filetributed.client.rpc.services.services.mergeFileTable_args args, org.apache.thrift.async.AsyncMethodCallback<lk.filetributed.client.rpc.services.messageProtocol> resultHandler ) throws org.apache.thrift.TException { try { iface.mergeFileTable ( args.ipAddress, args.port, args.fileTableEntries, resultHandler ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.maksym.galushka.criminalintent.Crime getCrime ( java.util.UUID uuid ) { try { for ( com.maksym.galushka.criminalintent.Crime crime : mCrimes ) { if ( crime.getId () .equals ( uuid ) ) { return crime; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onClick ( android.view.View view ) { dbHelper.deleteAllTagsFromDB () ; try { allTags = dbHelper.getAllTags () ; } catch ( Exception ex ) { ex.printStackTrace () ; } adapter.updateTags ( allTags ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { com.example.helloworld.ComplimentService.initialize ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_main ) ; } 
@ org.junit.After public void tearDown () throws java.io.IOException { realm.dispose () ; try { if ( ( stream ) != null ) { stream.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void doStop () throws java.lang.Exception { try { de.or.plugin.registry.VideoPluginRegistry.getInstance () .removePlugin ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void doInit () throws org.restlet.resource.ResourceException { super.doInit () ; listId = getAttribute ( TodoApplication.LIST_ID ) ; todoId = getAttribute ( TodoApplication.TODO_ID ) ; try { app = ( ( io.skysail.server.app.todos.TodoApplication ) ( getApplication () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean isPaymentRequestAuthorized ( org.bitcoinj.uri.BitcoinURI paymentRequest ) { boolean result = showAuthViewAndGetResult ( paymentRequest, true, true ) ; try { if ( !result ) { this.onPaymentError ( "payment was not authorized!" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void testIgnored ( final org.junit.runner.Description description ) throws java.lang.Exception { try { if ( testingThisTest ( description ) ) { stepEventBus () .testIgnored () ; endTest () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void processElements ( org.jsoup.select.Elements contents ) { try { for ( org.jsoup.nodes.Node node : contents ) { processTree ( node ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFileDownloaded ( java.lang.String path ) { try { if ( ( mFileDownloadedListener ) != null ) { mFileDownloadedListener.onFileDownloaded ( path ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void uploadTasks () { tasks.clear () ; try { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer.updateUploadTasks () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { try { if ( ( this.scene ) != null ) this.scene.setGame ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.scene = scene; if ( scene != null ) this.scene.setGame ( this ) ; } 
@ java.lang.Override public void onStop () { super.onStop () ; try { if ( ( player ) != null ) { player.stop () ; player.release () ; player = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { lbAllImagesFound.setText ( ( ( alFindImages.size () ) + " шт." ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void quit () { try { if ( removeViewable () ) { org.infinity.gui.ChildFrame.closeWindows () ; storePreferences () ; org.infinity.NearInfinity.clearCache ( false ) ; java.lang.System.exit ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void begin ( java.lang.String mediaName ) { try { controller.playMusic ( mediaName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void returnsSetOfDiminutives () { java.util.Set<java.lang.String> result = nlProcessor.getDiminutives ( "dom" ) ; java.util.Set<java.lang.String> expected_result = new java.util.HashSet<java.lang.String> ( java.util.Arrays.asList ( "domina", "domek" ) ) ; try { org.junit.Assert.assertEquals ( expected_result, result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( conflictBuilder ) != null ) { conflictBuilder.create () .dismiss () ; conflictBuilder = null; } } 
public boolean bizsunitInBuyList ( java.lang.String name, boolean partlySearch ) { try { if ( partlySearch ) { return contains ( topBuyList, name ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return topBuyList.contains ( new org.decaywood.entity.LongHuBangInfo.BizsunitInfo ( "xx", name, "xx", "xx", "xx" ) ) ; } 
@ java.lang.Override public boolean exists () { try { if ( ! ( file.exists () ) ) { return false; } else return true; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onComplete () { if ( done ) { return; } done = true; try { io.reactivex.internal.operators.OperatorScanSeed.ScanSeedSubscriber.drain ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
java.lang.String preprocess ( java.lang.String line ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; try { stripComment ( line, 0, builder ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return builder.toString () ; } 
public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; try { root = insert ( root, p, 0.0, 0.0, 1.0, 1.0, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onUpdate ( android.content.Context context, android.appwidget.AppWidgetManager appWidgetManager, int[] appWidgetIds ) { try { for ( int appWidgetId : appWidgetIds ) { android.vassilis.wifionoff.WifiWidget.updateAppWidget ( context, appWidgetManager, appWidgetId ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCaptureCompleted ( android.hardware.camera2.CameraCaptureSession session, android.hardware.camera2.CaptureRequest request, android.hardware.camera2.TotalCaptureResult result ) { try { super.onCaptureCompleted ( session, request, result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sampleCameraPreview () ; } 
@ java.lang.Override public int getIncludedHUsCount () { final de.metas.handlingunits.client.terminal.editor.model.impl.HUKey huKey = getHUKey () ; final de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter includedHUsCounter = new de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter ( huKey, false ) ; try { huKey.iterate ( includedHUsCounter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return includedHUsCounter.getHUsCount () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void d ( java.lang.String message, java.lang.Throwable t ) { try { for ( int i = 0; i < ( io.realm.internal.log.RealmLog.LOGGERS.size () ) ; i++ ) { io.realm.internal.log.RealmLog.LOGGERS.get ( i ) .d ( message, t ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onShowPreview () { showTitle.setMaxLines ( 1 ) ; try { showTitle.setEllipsize ( TextUtils.TruncateAt.END ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void paintFigure ( org.eclipse.draw2d.Graphics graphics ) { try { super.paintFigure ( graphics ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void done ( java.util.List<reli.reliapp.co.il.reli.dataStructures.Discussion> li, com.parse.ParseException e ) { ( ( android.widget.TextView ) ( bla.findViewById ( textId ) ) ) .setText ( java.lang.Integer.toString ( li.size () ) ) ; try { dia.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public translator.model.TileGrid clone () { translator.model.TileGrid tileGrid = new translator.model.TileGrid ( grid.length ) ; try { translator.model.TileGrid.copy ( this, tileGrid ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return tileGrid; } 
@ java.lang.Override protected void setInternalArguments ( android.os.Bundle args ) { super.setInternalArguments ( args ) ; try { args.putParcelable ( de.aw.reports.DBDEFINITION, de.aw.reports.ReportSimpleDetails.tbd ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } args.putIntArray ( de.aw.reports.FROMRESIDS, fromResIDs ) ; } 
@ java.lang.Override public void doControl () { try { generateAndSendPathToBall () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.x91tec.appshelf.v7.XDividerDecoration build () { try { checkParams () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } 
@ java.lang.Override protected void onDestroy () { storeIP () ; try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void newCameraOpen ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this, cs321.classcamapp.CameraActivity2.class ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateAnimation () { mAnimationValue = 1.0F; try { mUpdateTimeHandler.removeMessages ( com.althyk.watchface.AlthykAnalogWatchFaceService.Engine.MSG_UPDATE_ANIMATION ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( shouldTimerBeRunning () ) { mAnimationStart = java.lang.System.currentTimeMillis () ; mAnimationValue = 0.0F; mUpdateTimeHandler.sendEmptyMessage ( com.althyk.watchface.AlthykAnalogWatchFaceService.Engine.MSG_UPDATE_ANIMATION ) ; } } 
private void calculateAverageBPM () { if ( ( inconsistentLastBPM ) == 0 ) inconsistentLastBPM = currentBPM; inconsistentLastBPM = ( ( currentBPM ) + ( inconsistentLastBPM ) ) / 2; try { publishLastBPM () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void createProcedure () throws java.sql.SQLException { try { trains.Database.createTables () ; } catch ( Exception ex ) { ex.printStackTrace () ; } trains.Database.executeStatement ( trains.Database.proc, false ) ; } 
public void stop () { try { if ( ( this.container ) != null ) { this.container.stop () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCancel ( android.content.DialogInterface dialog ) { cleanBeacons () ; de.beacon.tom.viibenav_radiomapper.model.RadioMap.getRadioMap () .deleteLastAnchor () ; try { main.getApplicationUI () .updateLayer1 () ; } catch ( Exception ex ) { ex.printStackTrace () ; } cleanInfo () ; } 
public void playSong ( com.wojtechnology.sunami.FireMixtape song ) { try { mOuterLayout.playSong ( song ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mOuterLayout.setProgress ( mTheBrain.mMediaPlayer.getCurrentPosition () ) ; } 
@ java.lang.Override public void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { try { confirmAdd ( position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void init ( org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder auth ) throws java.lang.Exception { try { auth.userDetailsService ( userDetailsService ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void gotoPage () { try { browser.gotoPage ( location ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { logs.append ( ( ( "\n" + ( getString ( R.string.gameActivity_receivedDeposit_log ) ) ) + deposit ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void follow ( int followerId, int followeeId ) { try { setUpUser ( followerId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setUpUser ( followeeId ) ; userToFollowee.get ( followerId ) .add ( followeeId ) ; } 
@ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { try { if ( ( clients.get ( clientRef ) ) != null ) { clients.get ( clientRef ) .disconnect () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addActiveNode ( java.lang.String nodeName ) { try { if ( nodeName != null ) { activeNodes.add ( nodeName ) ; traversedNodes.remove ( nodeName ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void insertarImagen () { java.sql.Connection con = bd.getConnection () ; java.io.File img = new java.io.File ( "bin/img/coca.png" ) ; try { ci.insertarImagen ( con, img, 2, "bebida" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void zoomVertical () { chart.zoomToCenter ( 1, ( 1 + ( settings.getPoolSettings () .getZoomingMultiplier () ) ) ) ; try { chart.postInvalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDraw ( android.graphics.Canvas canvas ) { try { canvas.drawRoundRect ( edgeRect, rx, rx, edgePaint ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setChildren ( java.util.List<E> children ) { try { for ( E child : children ) { checkChild ( child ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.children = new java.util.ArrayList<> ( children ) ; } 
void visitFrom ( int side ) { walls[side] = 0; try { update () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean setBitIfUnset ( int index ) { try { if ( ! ( this.getBit ( index ) ) ) { return this.setBit ( index ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } configurePlayer () ; } 
@ java.lang.Override public void dispose () { super.dispose () ; try { bookFont.dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer getPlayer () { try { if ( ( com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer.singletone ) == null ) { android.util.Log.e ( com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer.TAG, "getPlayer: Creating a new AlertPlayer" ) ; com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer.singletone = new com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer () ; } else { android.util.Log.i ( com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer.TAG, "getPlayer: Using existing AlertPlayer" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer.singletone; } 
private void signOut () { try { auth.signOut () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.facebook.login.LoginManager.getInstance () .logOut () ; } 
private void detectTouchEventConsumed () { try { if ( ( headerLayoutParams.height ) > ( heightOfActionBar ) ) { clearFocus () ; isTouchEventConsumed = true; } else { isTouchEventConsumed = false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationEnd ( android.animation.Animator animation ) { getFloatingToolbar () .setVisibility ( View.INVISIBLE ) ; getFab () .setVisibility ( View.VISIBLE ) ; try { getAnimationListener () .onAnimationFinished () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String serverOutput () throws java.io.IOException { java.lang.String input = ""; input = bufferedReader.readLine () ; if ( input == null ) { } try { java.lang.System.out.println ( input ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return input; } 
public void testCreateLinkForWebUiNullText () { mockUnconnectableStoryboard () ; replayMocks () ; com.googlesource.gerrit.plugins.its.storyboard.StoryboardItsFacade itsFacade = createStoryboardItsFacade () ; java.lang.String actual = itsFacade.createLinkForWebui ( "Test-Url", null ) ; try { assertEquals ( "Test-Url", actual ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { target.init () ; try { target.setCode ( DatatypesFactory.eINSTANCE.createCD () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.GetMapping ( value = "/settingWebsite/banners" ) public java.lang.String managementBanner ( org.springframework.ui.Model model ) { model.addAttribute ( com.shop.svitnagorod.controller.AdminController.BANNERS, bannerService.findAll () ) ; try { model.addAttribute ( com.shop.svitnagorod.controller.AdminController.BANNER, new com.shop.svitnagorod.DTO.BannerDTO () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "managementBanners"; } 
@ java.lang.Override public boolean hasNext () { try { if ( ( ( metricType ) == null ) || ( ( java.lang.Double.compare ( ( ( current ) - ( increment ) ) , upLimit ) ) >= 0 ) ) { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override @org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { try { entity = save ( entity ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } repository.flush () ; return entity; } 
public void closeConnection () throws java.io.IOException { try { out.writeObject ( Client.END ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setHasOptionsMenu ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.String result ) { try { android.util.Log.i ( SmartClosetConstants.SMARTCLOSET_DEBUG_TAG, ( ( ( ssar.smartcloset.MainActivity.CLASSNAME ) + ": ID token: " ) + result ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( result != null ) { tokenId = result; } else { } } 
@ java.lang.Override public void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( shouldReloadOnResume () ) { setViewState ( ViewState.LOADING ) ; getListData ( this ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { textColor = android.graphics.Color.parseColor ( "#0000ff" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } isChanged = ! ( isChanged ) ; } 
@ java.lang.Override public void exception ( final java.lang.Throwable exception ) { try { invocationCallback.exeption ( exception ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { int index = dataset.indexOf ( movie ) ; try { db.deleteMovieFromWatchlist ( movie.getId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setPublishVelocity ( boolean publishVelocity ) { try { if ( publishVelocity ) { mStopPublishAnimator.cancel () ; mPublishVelocity = true; } else { if ( 0 >= ( mTouchCount ) ) { mStopPublishAnimator.start () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testSetIsDead () { p.setIsDead ( true ) ; try { assertTrue ( p.isDead () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } p.setIsDead ( false ) ; assertFalse ( p.isDead () ) ; } 
@ java.lang.Override public Item next () { try { if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } Item item = current.item; current = current.next; return item; } 
public void closeSurveyFragment () { surveyFragment.unregisterReceiver () ; initAssess () ; try { unsentFragment.reloadData () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setActionBarDashboard () ; } 
@ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v.x () , v.y () ) ; try { trans.deltaTransform ( jp, jp ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new app2dpcimpl.geometry.PVD2DImpl ( jp.x, jp.y ) ; } 
public boolean isKingInSet ( Game.Desk d, Game.Colour col, java.util.HashSet<Game.Position> set ) { try { for ( Game.Position pos : set ) { if ( ( d.getCell ( pos ) .getFigure () ) instanceof Game.Figure.King ) return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void onClickFinalize ( android.view.View view ) { android.content.Intent newIntent = new android.content.Intent ( getApplicationContext () , pinkteampdm.farmerhelper.PlantActivity.class ) ; newIntent.putExtra ( "cultures", insertedCulturesArray ) ; try { startActivity ( newIntent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void terminateOnBye ( boolean arg0 ) throws javax.sip.SipException { try { super.terminateOnBye ( arg0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void select ( com.vaadin.event.SelectionEvent event ) { ch.bfh.bti7081.s2016.purple.HealthVisitor.ui.listener.SelectMedicationListener.logger.debug ( "selection event triggered" ) ; controller.uncheck ( getItems ( event.getRemoved () ) ) ; try { controller.check ( getItems ( event.getAdded () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void saltoLinea () { java.lang.System.out.printf ( "\n" ) ; java.lang.System.out.printf ( "\n" ) ; java.lang.System.out.printf ( "\n" ) ; try { java.lang.System.out.printf ( "\n" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent nextActivity = new android.content.Intent ( this, zcamara.washington.edu.quizdroid.QuestionPage.class ) ; nextActivity.putExtra ( "mBundle", mBundle ) ; startActivity ( nextActivity ) ; try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void syncContents ( com.owncloud.android.lib.common.OwnCloudClient client ) throws com.owncloud.android.lib.common.operations.OperationCancelledException { startDirectDownloads () ; startContentSynchronizations ( mFilesToSyncContentsWithoutUpload, client ) ; try { startContentSynchronizations ( mFavouriteFilesToSyncContents, client ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( v.equals ( undoB ) ) { undoVaccinationDate () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void clearProcessor () { try { this.taskList.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.makespan = 0; } 
@ javafx.fxml.FXML private void txtVehicleNoOnKeyReleased ( javafx.scene.input.KeyEvent event ) { try { validateFax.registerValidator ( txtVehicleNo, new com.saiton.ccs.validations.CustomTextFieldValidationImpl ( txtVehicleNo, fav.isValidVehicleNo ( lstVehicleNo, txtVehicleNo.getText () .trim () ) , com.saiton.ccs.validations.ErrorMessages.InvalidVehicleNo ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { try { PhoneCode.setText ( ( "+" + ( myCountries.get ( position ) .getCode () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } CountryPos = position; } 
public boolean checkUsername ( java.lang.String username ) { try { for ( com.codecool.sherwoodbet.Model.User user : userRepository.findAll () ) { if ( user.getName () .equals ( username ) ) { return false; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void clearCache () { if ( ( image ) == null ) { return; } try { image.flush () ; } catch ( Exception ex ) { ex.printStackTrace () ; } image = null; } 
@ java.lang.Override protected void onCancelled ( java.util.ArrayList arrayList ) { super.onCancelled ( arrayList ) ; try { mViewPagerAdapter.setLoadingNewBill ( false, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.String result ) { populateListView ( result ) ; try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.widget.Toast.makeText ( this, "Items successfully parsed!", Toast.LENGTH_SHORT ) .show () ; } 
public void gotoPrevious ( java.lang.String previous ) throws java.io.IOException { try { this.payload = extract ( getURL ( previous ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void TestSetUp () { SelCommonElements = new PageObjects.CommonObj ( driver ) ; try { java.lang.System.out.println ( "Driver loaded before test" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void formatCellIfNotEmpty ( java.lang.String item, javafx.scene.control.TableCell<udo.storage.Task, java.lang.String> tableCell ) { try { if ( ! ( tableCell.isEmpty () ) ) { formatCellText ( item, tableCell ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setSelected ( int selected ) { if ( ( selected == ( mSelected ) ) && ( selected == ( this.selected ) ) ) { return; } mSelected = selected; try { setSelection ( mSelected ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void close () { try { mListener.closeThis ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void createRankAccount ( org.bukkit.entity.Player player ) { if ( ( project.rank.RankManager.hasRank ( player ) ) || ( ! ( project.rank.RankManager.hasRank ( player, Rank.DEFAULT ) ) ) ) return; try { project.rank.RankManager.addRank ( player, Rank.DEFAULT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addLoadMore ( android.support.v7.widget.RecyclerView.ViewHolder holder ) { try { if ( ( isLoadMore () ) && ( ! ( mLoadingMoreEnable ) ) ) { mLoadingMoreEnable = true; mRequestLoadMoreListener.onLoadMoreRequested () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void TopGoto () { while ( ( upperLimit.get () ) == false ) { lifter.set ( ( 1.0 * 1.0 ) ) ; } try { lifter.set ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void toArrayElement ( java.lang.String arrayName, int arrayIndex ) throws java.io.IOException { try { addEntity ( arrayName, arrayIndex ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateCar ( com.example.reabar.wimc.Model.Car car, com.example.reabar.wimc.Model.Model.SyncListener listener ) { try { modelSql.updateCar ( car ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } modelFirebase.updateCar ( car, listener ) ; updateCarDbTime () ; } 
@ java.lang.Override public synchronized void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { try { if ( ( _currDaemonNode ) != null ) { _currDaemonNode.close () ; _currDaemonNode = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML private void close () { try { this.stage.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void loadButtons () { loadBackground () ; loadTitle () ; try { loadInstructionsButton () ; } catch ( Exception ex ) { ex.printStackTrace () ; } loadOptionsButton () ; loadReturnToLobbyButton () ; loadReturnToMainMenuButton () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { folderInterface.openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v.getTag () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final void setMyLocationEnabled ( boolean enabled ) { mIsMyLocationEnabled = enabled; try { toggleGps ( enabled ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void refreshSlot () { try { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x, p.y, code.Game.currentTile ) ) { code.Game._legalSlot.add ( p ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void reflectOn1 () throws java.lang.Exception { de.beuth.cg1.dogeraytracer.vecmatlib.Vector3 resV = v7.reflectOn ( n2 ) ; try { assertEquals ( new de.beuth.cg1.dogeraytracer.vecmatlib.Vector3 ( 0.707, 0.707, 0.0 ) , resV ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSettingsChanged () { volume = ( ( com.retroMachines.RetroMachines ) ( Gdx.app.getApplicationListener () ) ) .getSettingController () .getVolume () ; try { if ( ( music ) != null ) { music.setVolume ( volume ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void doGenReport ( java.awt.event.ActionEvent ev ) { java.lang.String s = new net.sf.memoranda.Report ( net.sf.memoranda.CurrentProject.getTaskList () ) .toString ( null, s ) ; try { javax.swing.JOptionPane.showMessageDialog ( this, s, "Project Report", javax.swing.JOptionPane.PLAIN_MESSAGE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { userMessages.add ( index, dataSnapshot.getValue ( com.serhaturtis.getlocaty.models.MessageItem.class ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fragmentMyMessages.rcAdapter.notifyDataSetChanged () ; } 
@ org.junit.Test public void testCylinderSurfaceArea () { try { assertEquals ( 471.2388, org.cp.elements.lang.MathUtils.cylinderSurfaceArea ( 5.0, 10.0 ) , 9.9E-5 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args, eta.runtime.stg.Closure mainClosure ) { eta.runtime.RuntimeOptions.parse ( args ) ; eta.runtime.Runtime.evalLazyIO ( mainClosure ) ; try { eta.runtime.Runtime.exit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { try { callback.onSucces ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void recreate () { startActivity ( getIntent () ) ; try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ butterknife.OnClick ( value = R.id.break_time_ok ) public void onOkClicked () { hide () ; try { if ( ( callback ) != null ) callback.onOkClicked ( times ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initialize ( java.lang.String prefix ) { try { readConfig ( prefix ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } initNextPool () ; } 
public void start () throws java.io.IOException, org.apache.ignite.IgniteCheckedException { endpoint = org.apache.ignite.internal.util.ipc.IpcEndpointFactory.connectEndpoint ( endpointAddr, null ) ; out = new java.io.BufferedOutputStream ( endpoint.outputStream () ) ; try { in = new java.io.BufferedInputStream ( endpoint.inputStream () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } handshake () ; } 
public static int getMonthNo ( java.lang.String pattern, java.lang.String month ) throws java.text.ParseException { java.util.Calendar cal = com.adms.utils.DateUtil.getCurrentCalendar () ; try { cal.setTime ( new java.text.SimpleDateFormat ( pattern ) .parse ( month ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return cal.get ( java.util.Calendar.MONTH ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( itemClickListener ) != null ) { itemClickListener.onItemClick ( adapter.getItem ( position ) , view, position ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.After public void closeActionDao () throws java.lang.Exception { actionDao = null; try { closeDao () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { mRadius = radius; try { invalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { try { switch ( position ) { case 0: return com.labs.okey.oneride.myrides.GeneralMyRidesFragment.getInstance () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { if ( ( ! ( isSettlingProcess ) ) && ( isMediaPlayerStarted ) ) { ominext.com.readmestories.fragments.ReadingBookFragment fragment = mPagerAdapter.getFragment ( mViewPager.getCurrentItem () ) ; fragment.onPlayClick () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.ArrayList addLettersToRack ( java.util.List generatedRack ) { try { playersRack.addAll ( generatedRack ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private void iniciarTollBar () { myToolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar_menu ) ) ) ; try { setSupportActionBar ( myToolbar ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void shutdown () { com.misfit.ios.NuRemoteClient.close () ; try { com.misfit.ta.gui.Gui.logger.info ( "Closing down. BYE!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void internetProblems ( android.view.View view ) { android.content.Intent startInternet = new android.content.Intent ( this, nl.pcmeesters.pcmeestersnl.InternetProblemsActivity.class ) ; startInternet.putExtra ( "User", acct ) ; try { startActivity ( startInternet ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setRange ( final java.lang.Double min, final java.lang.Double max ) { try { setRange ( min, max, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int getItemCount ( int section ) { try { switch ( section ) { case 0: return mDataOwner.size () ; case 1: return mDataJoin.size () ; default: return 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override @org.springframework.transaction.annotation.Transactional public void update ( org.molgenis.data.Entity entity ) { try { elasticSearchService.index ( entity, getEntityMetaData () , IndexingMode.UPDATE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } elasticSearchService.refresh ( getEntityMetaData () ) ; } 
@ java.lang.Override public void onDestroy () { try { com.kaltura.playkit.plugins.KalturaStatsPlugin.log.d ( "onDestroy" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } intervalOn = false; if ( ( timer ) != null ) { timer.cancel () ; } } 
public static void initNavigationItem () { plugins.cms.navigation.NavigationCache.items.clear () ; java.util.List<models.cms.NavigationItem> roots = models.cms.NavigationItem.findByParent ( null ) ; try { for ( models.cms.NavigationItem item : roots ) { plugins.cms.navigation.NavigationCache.createItemsForNavigationItems ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions.requestPermissions ( this, R.mipmap.ic_launcher, "RequestLocationPermissions", getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE, PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void reset () { isTimeOver = false; try { setValue ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ butterknife.OnClick ( value = R.id.view_helper_overlay_button ) void dismissOverlay () { try { if ( ( getParent () ) != null ) { ( ( android.view.ViewGroup ) ( getParent () ) ) .removeView ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { try { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer.parseInt ( clientIdChosen ) ; clientController.deleteClient ( id, panel, scroll ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void reset ( org.ggp.base.util.propnet.polymorphic.forwardDeadReckon.ForwardDeadReckonInternalMachineState xiState ) { mState = xiState; try { mFirstIndex = xiState.contents.nextSetBit ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mIndex = mFirstIndex; mLastIndex = -1; } 
@ org.junit.Test public void startActivityWithDefaultIntentAndDefaultCategoryWithOptionalArgs () { io.appium.java_client.android.IntentTest.driver.startActivity ( "com.prgguru.android", ".GreetingActivity", null, null, "android.intent.action.MAIN", "android.intent.category.DEFAULT", "0x4000000", "--es \"USERNAME\" \"AppiumIntentTest\" -t \"text/plain\"" ) ; try { org.junit.Assert.assertEquals ( io.appium.java_client.android.IntentTest.driver.findElementById ( "com.prgguru.android:id/textView1" ) .getText () , "Welcome AppiumIntentTest" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getPartnerPersonInstitution ( int idProjectPartnerPerson ) { try { if ( idProjectPartnerPerson < ( this.listMapPartnerPersons.size () ) ) { return listMapPartnerPersons.get ( ( idProjectPartnerPerson - 1 ) ) .get ( "institution_name" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public com.svnavigatoru600.domain.users.UserBuilder enabled ( final boolean enabled ) { try { user.setEnabled ( enabled ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override public void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues.remove ( revenue ) ; try { notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.remove ( revenue ) ; } 
public void startNewSale ( java.lang.String custId ) { try { customer = db.findCustomer ( custId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } receipt = new PointOfSale.Receipt ( customer ) ; } 
private com.wolfram.cloud.NotebookViewPage clickNewNotebookButton () { wait.until ( org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable ( this.newNBBtn ) ) ; this.newNBBtn.click () ; try { this.switchToNewWindowOrTab () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new com.wolfram.cloud.NotebookViewPage ( this.driver, this.wait ) ; } 
private void btnLocalMultiplayerClicked () { startActivity ( new android.content.Intent ( this, com.vintagetechnologies.menschaergeredichnicht.Spieloberflaeche.class ) ) ; try { com.vintagetechnologies.menschaergeredichnicht.Impl.ActualGame.reset () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.vintagetechnologies.menschaergeredichnicht.Impl.ActualGame.getInstance () .setLocalGame ( true ) ; } 
@ java.lang.Override public void deactivate () { com.stdnull.runmap.common.CFLog.i ( "TAG", "deactivate" ) ; mStateListener.notifyServiceDeactivate () ; mLocationChangedListener = null; mStateListener = null; try { com.stdnull.runmap.GlobalApplication.getAppContext () .getContentResolver () .unregisterContentObserver ( mGpsMonitor ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void stopServer () throws java.lang.Exception { try { samples.util.SampleAxis2ServerManager.getInstance () .stop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String publicKeyToString () { java.lang.StringBuilder buffer = new java.lang.StringBuilder () ; try { for ( byte b : publicKey ) { buffer.append ( b ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return buffer.toString () ; } 
@ org.junit.Test public final void testGetTimerSubject () { try { assertEquals ( cTimeKeeper.getTimerSubject () , cTimeKeeper.cTimerSubject ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStop () { try { android.util.Log.i ( TAG, "onStopActivity" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } unReceiver () ; super.onStop () ; } 
private void setUpTest () { android.content.Intent intent = getIntent () ; try { if ( intent.hasExtra ( TestActivity.CURRENT_TEST ) ) mTest = intent.getParcelableExtra ( TestActivity.CURRENT_TEST ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { try { if ( ( listener ) != null ) { listener.sendImageToServer ( filteredDeviceList.get ( position ) .getId () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void sendFailForAll () { try { for ( int id = 0; id < ( Simulation.NumberOfAgents ) ; id++ ) { sendMessage ( new Messages.KillMessage () , id ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void tabIndent ( int indent ) { indent = indent * 4; try { for ( int i = 0; i < indent; ++i ) { out.print ( " " ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void resetAnimation ( int animationId ) { try { animations.get ( animationId ) .resetAnimation () ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentAnimation = animationId; } 
public void nextMainImage () { try { if ( ( this.neighborGenerator ) == null ) { this.initGenerator () ; return; } } catch ( Exception ex ) { ex.printStackTrace () ; } ( this.mainImageID ) ++; this.neighborGenerator.setMainImage ( this.mainImageID ) ; } 
public void add () { try { com.iba.kozlov.web.writer.WriterController.LOGGER.info ( "add!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } facade.add () ; } 
public void action ( org.primefaces.event.SelectEvent event ) { modelloMF = ""; numeroRapportoProva = ""; try { ditta = ( ( isti.cnr.sse.rest.data.Ditta ) ( event.getObject () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testParseSketchEntryGetsRightColour () throws java.lang.Exception { java.lang.String simpleText = "red 0 0"; org.hwyl.sexytopo.model.sketch.PathDetail pathDetail = org.hwyl.sexytopo.control.io.thirdparty.xvi.XviImporter.parseSketchEntry ( 1, simpleText ) ; try { junit.framework.Assert.assertEquals ( Colour.RED, pathDetail.getColour () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void restartAlbumButtonListener () { try { startAlbum ( 0, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } songNumber = 0; } 
public void setColValues ( java.util.List<java.lang.Object> values ) { try { this.colValues.addAll ( values ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void testSendMessageViaElasticEmail () throws java.io.UnsupportedEncodingException { provider = new com.seb.email.routing.EmailServiceProvider ( EmailServiceProvider.Providers.ELASTICEMAIL ) ; try { assertEquals ( HttpStatus.OK, provider.SendMessageViaElasticEmail ( email ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.bukkit.event.EventHandler public void onArmorStandDestroy ( org.bukkit.event.entity.EntityDeathEvent event ) { try { if ( ( event.getEntity () .getUniqueId () .equals ( armorStand.getUniqueId () ) ) && ( open ) ) { destroy () ; player.closeInventory () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void afterProcess () { try { if ( ( players ) != null ) { logger.logMessage ( "processstartdone", players.size () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.Boolean addUser ( com.melodies.bandup.helper_classes.User u ) { try { if ( u != null ) { userList.add ( u ) ; return true; } else { return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.sun.net.httpserver.HttpServer createHttpServer ( milestone1.Node n ) throws java.io.IOException { org.glassfish.jersey.server.ResourceConfig resourceConfig = new org.glassfish.jersey.server.ResourceConfig () ; try { resourceConfig.register ( n ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return org.glassfish.jersey.jdkhttp.JdkHttpServerFactory.createHttpServer ( getURI () , resourceConfig ) ; } 
public void writeTypeParameters ( final java.lang.Iterable<com.strobel.decompiler.languages.java.TypeParameterDeclaration> typeParameters ) { try { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String access ( com.logical.backlog.model.Backlog backlog ) { com.logical.backlog.managerbean.SessionBean.getSession () .setAttribute ( "backlog", backlog ) ; try { com.logical.backlog.managerbean.SessionBean.getSession () .setAttribute ( "entry", null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return "entry"; } 
@ java.lang.Override public java.lang.String execute () throws java.lang.Exception { try { state = service.getPaperState ( uid, pid ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( state ) >= 0 ) return SUCCESS; return ERROR; } 
@ java.lang.Override public void onPanelCollapsed ( android.view.View view ) { try { android.util.Log.d ( com.gcw.sapienza.places.fragments.PlacesMapListFragment.TAG, "Panel collapsed" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void firePTPropertyChangeListeners ( final org.mihalis.opal.propertyTable.PTProperty property ) { try { for ( final org.mihalis.opal.propertyTable.PTPropertyChangeListener listener : changeListeners ) { listener.propertyHasChanged ( property ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void done ( reli.reliapp.co.il.reli.dataStructures.Discussion currentDiscussion, com.parse.ParseException e ) { if ( ( e == null ) && ( currentDiscussion != null ) ) { fetchDiscussionInformation ( v, currentDiscussion ) ; } try { dia.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) throws java.lang.NumberFormatException { double result = new MySquare () .doMath ( java.lang.Double.parseDouble ( args[0] ) ) ; try { java.lang.System.out.println ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.android.debug.hv.ViewServer.get ( this ) .setFocusedWindow ( this ) ; buildAnim ( this ) ; } 
public void initGoal ( int x, int y ) { Goal newGoal = new Goal () ; goals.add ( newGoal ) ; try { board[x][y].placeGoal ( newGoal ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.taobao.rigel.rap.project.service.impl.Project getProjectSummary ( int id ) { com.taobao.rigel.rap.project.service.impl.Project p = projectDao.getProjectSummary ( id ) ; try { if ( p != null ) p.setUser ( accountMgr.getUser ( p.getUserId () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return p; } 
public static void main ( java.lang.String[] args ) { try { java.lang.System.out.println ( PrimeFactors.getLargestPrimeFactor () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testWithExplodeModifier () throws java.lang.Exception { com.damnhandy.uri.template.impl.VarSpec varSpec = new com.damnhandy.uri.template.impl.VarSpec ( "experiment", Modifier.EXPLODE, null ) ; try { org.junit.Assert.assertEquals ( "experiment", varSpec.getVariableName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void removeInvitation ( java.lang.String group ) { this.invitations.remove ( group ) ; try { new com.ethangraf.blast.ui.MainActivity.Save () .execute ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static <T> void matchProperty ( T component, T propertyValue ) { try { org.hamcrest.MatcherAssert.assertThat ( component, org.hamcrest.core.IsNull.notNullValue () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.hamcrest.MatcherAssert.assertThat ( component, org.hamcrest.core.IsEqual.equalTo ( propertyValue ) ) ; } 
public void drawMap ( javafx.scene.canvas.GraphicsContext gc ) { makeBackground ( gc ) ; try { drawGridLines ( gc ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addToCircle ( java.lang.Character c ) { try { if ( ! ( characters.contains ( c ) ) ) { c.getInCircle () ; characters.add ( c ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void result ( java.lang.String data ) { if ( ( cb ) == null ) return; try { cb.success ( data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cb = null; } 
public synchronized void disconnect () { try { if ( ( serviceMessenger ) != null ) { disconnectFromService () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( serviceConnection ) != null ) { context.unbindService ( serviceConnection ) ; } } 
protected void closeEditWidget () { remove ( editableValue ) ; try { remove ( buttons ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } add ( valueLabel ) ; editing = false; } 
public ListItem head () { try { if ( ! ( this.list.isEmpty () ) ) { return this.list.get ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public static void incomingUserData ( fforganizer.data.users.User user ) { fforganizer.ResourceLoader.user = user; try { fforganizer.TargetSelector.initSelf ( user ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } fforganizer.ResourceLoader.checkForFinish () ; } 
private void handleJobStartedEvent ( org.sleuthkit.autopsy.experimental.autoingest.AutoIngestJobStartedEvent event ) { try { synchronized ( jobsLock ) { jobsSnapshot.removePendingJob ( event.getJob () ) ; jobsSnapshot.addOrReplaceRunningJob ( event.getJob () ) ; setChanged () ; notifyObservers ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { try { if ( ( file ) != null ) { Controler.TelaController tela = new Controler.TelaController ( file ) ; tela.run () ; } else { Controler.TelaController tela = new Controler.TelaController () ; tela.run () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.example.team7.geocaching.MainActivity.bkgrdmsc.release () ; } 
@ java.lang.Override public void update ( java.util.Observable observable, java.lang.Object o ) { try { adapter.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private compiler.parser.ast.AST funcDel () { compiler.parser.ast.AST funDec = new compiler.parser.ast.AST ( compiler.parser.ast.AST.AstType.funcDecl ) ; try { getNextToken () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( compiler.parser.ast.AST.currToken.getT () ) != ( Token.FUNCTION ) ) return null; return funDec; } 
@ org.junit.Test public void findOrders () { io.oasp.module.jpa.common.api.to.PaginatedListTo<io.oasp.gastronomy.restaurant.salesmanagement.logic.api.to.OrderCto> orders = this.helper.getService () .findOrders ( null ) ; assertThat ( orders ) .isNotNull () ; try { assertThat ( orders ) .isNotNull () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.annotation.PostConstruct public void init () { try { username = javax.faces.context.FacesContext.getCurrentInstance () .getExternalContext () .getRemoteUser () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } sensorManager.registerListener ( this, accelerometer, SensorManager.SENSOR_DELAY_NORMAL ) ; } 
@ java.lang.Override public void run () { try { if ( ( node ) != null ) { node.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { try { if ( ! ( vertexList.contains ( v ) ) ) { adjacencyList.add ( new java.util.LinkedList<java.lang.String> () ) ; vertexList.add ( v.getLabel () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onInsertComplete ( int token, java.lang.Object cookie, android.net.Uri uri ) { try { mCallback.onInsertComplete () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mCallback = null; } 
@ java.lang.Override public void onStop ( com.grarak.kerneladiutor.views.recyclerview.SeekBarView seekBarView, int position, java.lang.String value ) { try { com.grarak.kerneladiutor.utils.kernel.cpuhotplug.AiOHotPlug.setAiOHotPlugOnlineCores ( position, getActivity () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public long getAdCurrentPosition () { try { if ( ( adsProvider ) != null ) { long currPos = ( com.kaltura.playkit.utils.Consts.MILLISECONDS_MULTIPLIER ) * ( adsProvider.getCurrentPosition () ) ; return currPos; } } catch ( Exception ex ) { ex.printStackTrace () ; } return com.kaltura.playkit.utils.Consts.POSITION_UNSET; } 
public static void clear () { if ( ( ru.casak.whiteboard.DrawView.canvasDraw ) != null ) ru.casak.whiteboard.DrawView.canvasDraw.drawRGB ( 255, 255, 255 ) ; try { if ( ( ru.casak.whiteboard.DrawView.instance ) != null ) ru.casak.whiteboard.DrawView.instance.invalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setSubmissionParameters ( com.microsoft.azure.hdinsight.spark.common.SparkSubmissionParameter submissionParameter ) { this.submissionParameter = submissionParameter; try { com.microsoft.azure.hdinsight.spark.common.SparkSubmitModel.submissionParameterMap.put ( project, submissionParameter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ com.facebook.react.bridge.ReactMethod public void isSimCardValid ( com.facebook.react.bridge.Callback callback ) { android.telephony.TelephonyManager tm = ( ( android.telephony.TelephonyManager ) ( this.reactContext.getSystemService ( Context.TELEPHONY_SERVICE ) ) ) ; java.lang.Boolean isSimCardValid = ( tm.getSimState () ) == ( android.telephony.TelephonyManager.SIM_STATE_READY ) ; try { callback.invoke ( isSimCardValid ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onReceiving () { try { if ( ! ( hasPermission () ) ) { java.lang.System.out.println ( "A bar client already exists!" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { try { if ( ! ( event.getNewAccount () .equals ( username ) ) ) { this.username = event.getNewAccount () ; refresh () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { try { new org.gradle.messaging.concurrent.DefaultExecutorFactory () .create ( "Daemon Async Stop Request" ) .execute ( new java.lang.Runnable () { public void run () { stop () ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void settings () { android.app.Dialog dialog = new android.app.Dialog ( this ) ; dialog.setContentView ( R.layout.dialogbox ) ; try { dialog.show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onEnable () { try { getLogger () .info ( "Plugin has been enabled correctly!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void close () throws java.io.IOException { try { if ( ( java.lang.System.in ) == null ) { return; } else { java.lang.System.in.close () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void removeGroceryItem ( int position ) { try { groceryList.remove ( position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test public void method3 ( java.lang.reflect.Method method ) { try { com.relevantcodes.extentreports.common.ExtentTestManager.createTest ( method.getName () ) .error ( "error" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.testng.Assert.assertEquals ( com.relevantcodes.extentreports.common.ExtentTestManager.getTest () .getRunStatus () , Status.ERROR ) ; } 
@ org.junit.Test public void isGpsInfoOld_when_moreThan1HourOld_then_true () { com.bobs.mount.Mount mount = new com.bobs.mount.Mount () ; mount.setGpsUpdateTime ( org.apache.commons.lang.time.DateUtils.addHours ( new java.util.Date () , ( -2 ) ) ) ; try { assertTrue ( mount.isGpsInfoOld () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void draw ( java.awt.Graphics g, int x, int y ) { try { g.drawImage ( image, x, y, this.width, this.height, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { try { session.getTabManager () .addTabToCurrentTab ( new cz.metacentrum.perun.webgui.tabs.groupstabs.AddGroupUnionTabItem ( group ) , true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final void setTileSizeByUV ( final float aU, final float aV ) { try { m_TileSize.setInPlace ( aU, aV ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onStop ( com.grarak.kerneladiutor.views.recyclerview.SeekBarView seekBarView, int position, java.lang.String value ) { try { com.grarak.kerneladiutor.utils.kernel.battery.Battery.setChargingCurrent ( ( ( position + 10 ) * 10 ) , getActivity () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void execute () { try { org.geogebra.common.main.App.debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } MidiPlayerW.INSTANCE.playFile ( url ) ; } 
public void left ( int ms, double speed ) { motorBR.setPower ( speed ) ; motorFR.setPower ( speed ) ; try { motorBL.setPower ( 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } motorFL.setPower ( 0 ) ; halt () ; } 
@ org.junit.Test public void clearByCategory_existingCategoryWithShortcut () { java.lang.String categoryDetails = "c/friends"; seedu.taskboss.testutil.TestTask[] expectedTaskList = new seedu.taskboss.testutil.TestTask[] { td.carl, td.elle, td.daniel, td.george, td.fiona }; boolean isShortedCommand = true; try { assertClearSuccess ( isShortedCommand, categoryDetails, expectedTaskList ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void quitTinyScreen ( android.view.ViewGroup itemContainer ) { try { if ( itemContainer != null ) { mXibaVideoPlayer.quitTinyScreen ( itemContainer ) ; } else { mXibaVideoPlayer.quitTinyScreen () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mXibaVideoPlayer.setTinyScreenEventCallback ( null ) ; savePlayerInfo () ; } 
private void stopPreviewAndFreeCamera () { try { if ( ( mCamera ) != null ) { mCamera.stopPreview () ; mCamera.release () ; mCamera = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void CreateLevels () { ru.videniya239.simpleballistics.Level level1 = new ru.videniya239.simpleballistics.Level () ; try { level1.Init ( MainActivity.level1Texture, MainActivity.level1Map, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } levels.add ( level1 ) ; } 
private boolean doChildrenHaveActions () { try { for ( com.gmail.enzocampanella98.candidatecrush.board.Block[] row : blocks ) { for ( com.gmail.enzocampanella98.candidatecrush.board.Block b : row ) { if ( b.isPerformingAction () ) return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void onMessage ( byte[] message ) { try { java.lang.System.out.println ( new java.lang.String ( message ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } count.addAndGet ( 1 ) ; } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super.onSaveInstanceState ( outState ) ; try { outState.putSerializable ( "currentVideo", video ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void removeServerObjectReceivedListeners () { try { network.removeServerObjectReceivedListener ( serverObjectReceivedListener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean SaveData () { try { ActivityMain.mainUser.SaveDiaryEntry ( diaryEntry ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.widget.Toast.makeText ( this, R.string.Tagebucheintraggespeichert, Toast.LENGTH_SHORT ) .show () ; return true; } 
@ java.lang.Override protected void onBeforePopulateMenu ( org.rstudio.core.client.widget.ToolbarPopupMenu rootMenu ) { try { super.onBeforePopulateMenu ( rootMenu ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String label = " ( all branches ) "; rootMenu.addItem ( new com.google.gwt.user.client.ui.MenuItem ( label, new org.rstudio.studio.client.workbench.views.vcs.SwitchBranchCommand ( label, "--all" ) ) ) ; } 
private void downloadDate () { try { if ( checkNetwork () ) { downloadImage () ; downloadAppInfo () ; } else { showNetErrorDialog ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void generateValue ( java.lang.String entryName, long value ) throws java.io.IOException { try { generateValue ( entryName, null, null, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { stg.getPannelloDado () .animazione ( java.lang.Integer.parseInt ( r[1] ) , false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet<java.io.File> () ; } try { name.kion.twipstr.backend.BackEnd.attachedMediaFiles.add ( mediaFile ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int getHeight ( T val ) { generic.BinTreeNode<T> node = getNode ( val, true ) ; try { if ( new NullNode () .isNull ( node ) ) throw new generic.AvlTree.NotInTreeException ( "value requested is not in tree and cannot be replaced" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return node.getHeight () ; } 
public org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties properties () { try { selectAction ( "Properties" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties () ; } 
@ java.lang.Override public void onSensorChanged ( android.hardware.SensorEvent event ) { data = event.values; try { if ( ( event.sensor.getType () ) == 1 ) { } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void moveUp ( int maxCoordinateY ) { try { if ( ( currentCoordinateY ) == 0 ) { java.lang.System.out.println ( "you bumped into a wall." ) ; } else if ( ( currentCoordinateY ) != maxCoordinateY ) { ( currentCoordinateY ) ++; } else { java.lang.System.out.println ( "you bumped into a wall." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String execute ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response ) throws java.io.IOException, javax.servlet.ServletException { javax.servlet.http.HttpSession session = request.getSession ( false ) ; try { if ( session != null ) { session.invalidate () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return "/login.jsp"; } 
@ java.lang.Override public boolean init ( final msi.gama.runtime.IScope scope ) { try { scope.getGui () .waitStatus ( " Building outputs " ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } boolean result = super.init ( scope ) ; return result; } 
public static void Dispatch ( net.minecraft.entity.player.EntityPlayerMP Player ) { net.minecraft.nbt.NBTTagCompound Packet = new net.minecraft.nbt.NBTTagCompound () ; Packet.setInteger ( "MotionDuration", RiMConfiguration.CarriageMotion.MotionDuration ) ; try { me.planetguy.remaininmotion.network.PacketManager.SendPacketToPlayer ( Player, PacketTypes.SpecterVelocity, Packet ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void writeToNBT ( net.minecraft.nbt.NBTTagCompound tagCompound ) { super.writeToNBT ( tagCompound ) ; try { tagCompound.setInteger ( "IonCount", force_lasers_ions ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String next () { java.lang.String result = this.save () ; try { if ( result.equals ( BaseAction.SUCCESS ) ) { return org.cgiar.ccafs.ap.action.BaseAction.NEXT; } else { return result; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onUnbind ( android.content.Intent intent ) { progressBarHandler.removeCallbacks ( mUpdateTimeTask ) ; try { java.lang.Thread.currentThread () .interrupt () ; } catch ( Exception ex ) { ex.printStackTrace () ; } unregisterReceiver ( mediaControlsBroadcastReceiver ) ; player.release () ; player = null; return super.onUnbind ( intent ) ; } 
@ org.apache.tapestry5.annotations.AfterRender public void afterRender () { try { javaScriptSupport.addScript ( "var options = document.getElementsByTagName ( 'option' ) ;\tfor ( var i = 0; i<options.length;i++ ) {options[i].setAttribute ( 'title', options[i].innerHTML ) ;}" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void marshal ( java.io.Writer writer, be.nabu.libs.types.api.ComplexContent content ) throws java.io.IOException { java.io.BufferedWriter bufferedWriter = new java.io.BufferedWriter ( writer ) ; try { marshal ( bufferedWriter, content, typeInstance, namespaces, true, null, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bufferedWriter.flush () ; } 
@ java.lang.Override public void onStart () { try { super.onStart () ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.util.Log.i ( com.example.annemarie.worldofbikesdublin.TAG, "The activity is visible and about to be started." ) ; } 
public long addEntities ( net.sf.jailer.datamodel.Table table, java.lang.String condition, int today ) throws java.sql.SQLException { try { checkPseudoColumns ( table, condition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return addEntities ( table, "T", condition, today ) ; } 
public void pause () { try { if ( ! ( paused ) ) { for ( Game.Control.Sound.Sound sound : sounds ) { sound.pauseSound () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } paused = true; } 
public void UnLoadMod () { try { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { ModPlug_JUnload () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.webkit.JavascriptInterface public void showLoadingScreen ( boolean isLoading ) { try { webModel.setIsLoading ( isLoading ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } webModel.notifyObservers () ; } 
private org.eclipse.emf.ecore.EObject getEObject () { try { if ( ( fDiff ) != null ) { return fDiff.getView () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ org.junit.Test public void testArithmetic () throws wyvern.tools.parsing.coreparser.ParseException { java.lang.String input = "val x = ( ( 5 + 3 ) / 2 ) * 2 - 1\n" + "x\n"; try { testPyFromInput ( input, "7", true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void clear ( com.elementaonline.Entity e ) { try { if ( aggro.contains ( e ) ) { aggro.remove ( e ) ; if ( ( aggro.size () ) == 0 ) { takingDamage = false; color = com.badlogic.gdx.graphics.Color.WHITE; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void addAudio ( long audioId, long userId ) throws java.sql.SQLException { try { jdbcTemplate.update ( addAudio, audioId, userId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stopThread () { java.lang.System.out.println ( ( "Stopping: " + ( getText () ) ) ) ; try { player.closeStream () ; } catch ( Exception ex ) { ex.printStackTrace () ; } player = null; loadFile () ; setBackground ( backgroundDefault ) ; } 
public synchronized void disconnectClient ( connection.Client client ) { try { this.allClients.remove ( client ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void writeJs ( java.lang.String filename, java.lang.String code ) throws java.io.IOException { if ( code == null ) return; try { java.nio.file.Files.write ( outputDir.resolve ( filename ) , code.getBytes () , java.nio.file.StandardOpenOption.CREATE, java.nio.file.StandardOpenOption.TRUNCATE_EXISTING, java.nio.file.StandardOpenOption.WRITE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void showContent () { try { switchState ( com.pinocc.progress.ProgressLayout.State.CONTENT, null, java.util.Collections.<java.lang.Integer>emptyList () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( onProgressLintener ) != null ) { onProgressLintener.onStopProgressing () ; } } 
@ java.lang.Override public void setReadOnly ( boolean readOnly ) throws java.sql.SQLException { try { ensureNotClosed () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void insertUnexploredNode ( Point pt ) { Node n = new Node ( false, pt ) ; try { map.put ( n.toString () , n ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void make ( java.lang.Iterable<? extends com.xor.tiles.Tile> buildBatch ) { try { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( isFree ( toBuild ) ) make ( toBuild ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override void startVideo () { try { synchronized ( this ) { initMediaRecorder () ; prepareMediaRecorder () ; mMediaRecorder.start () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addSong ( tdd.musicdb.Song song ) { try { this.songs.add ( song ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void newLine () throws java.io.IOException { try { tab ( out, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void playOneSequence () { Montecarlo.Node node = selectNode ( root ) ; node = expand ( node ) ; if ( node == null ) { return; } int winner = simulation ( node ) ; try { backPropagation ( node, winner ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStop () { try { if ( ( mChildEventListener ) != null ) { mMessagesDatabaseReference.removeEventListener ( mDeliveryChildEventListener ) ; mMessagesDatabaseReferenceSecondName.removeEventListener ( mChildEventListener ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } super.onStop () ; } 
private void startHeadsetStateListener () { try { if ( ( receiver ) == null ) { android.content.IntentFilter receiverFilter = new android.content.IntentFilter ( android.content.Intent.ACTION_HEADSET_PLUG ) ; receiver = new ca.uqac.florentinth.speakerauthentication.Audio.HeadsetStateReceiver ( true ) ; registerReceiver ( receiver, receiverFilter ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static final void myPrint ( java.lang.String s ) { try { java.lang.System.out.println ( s ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void convertDateTime () { java.util.Date actual = org.apache.poi.hssf.usermodel.HSSFDateUtil.getJavaDate ( 30000.7 ) ; java.util.Date expected = org.apache.poi.hssf.usermodel.TestHSSFDateUtil.createDate ( 1982, 1, 18, 16, 48, 0 ) ; try { assertEquals ( expected, actual ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setRelationType ( int type ) { try { if ( ( selectedRelation ) != null ) { selectedRelation.setRelationType ( type ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void populateList ( main.java.gui.TasksTableController tableControl, java.util.ArrayList<main.java.data.Task> result ) { int count = 1; try { tableControl.clearTask () ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( main.java.data.Task temp : result ) { tableControl.addTask ( temp, ( count++ ) ) ; } } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.advisorapp.api.model.Semester setStudyPlan ( com.advisorapp.api.model.StudyPlan studyPlan ) { this.studyPlan = studyPlan; try { this.setNumber ( ( ( studyPlan.getSemesters () .size () ) + 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override protected void onPostExecute ( java.lang.String s ) { try { super.onPostExecute ( s ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( getActivity () ) != null ) { android.widget.Toast.makeText ( getActivity () , s, Toast.LENGTH_SHORT ) .show () ; } } 
@ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String componentId, final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { try { mock.deleteWysiwygAttachmentsOnly ( componentId, objectId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets.get ( stock ) ; try { if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock, world ) ; markets.put ( stock, market ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return market; } 
private void startNewNote () { android.content.Intent intent = new android.content.Intent ( this, app.band.runawaynation.matth.plainnotes.EditorActivity.class ) ; try { startActivityForResult ( intent, app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.String result ) { try { apiTest.setText ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onPostExecute ( result ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_topic_content ) ; butterknife.ButterKnife.bind ( this ) ; setupToolbar () ; loadTopicName () ; try { setVocabularyListView () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void lastItem () { try { if ( ( searchResult ) != null ) { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1; displayResult ( searchResult[resultCounter] ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onRestart () { super.onRestart () ; try { textView.setText ( "" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void openFragmentNoHistory ( android.support.v4.app.Fragment fragment ) { android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () .beginTransaction () ; ft.replace ( R.id.container, fragment ) ; try { ft.commitAllowingStateLoss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int addAnfrage ( Terminkalender.Termin termin, java.lang.String text, java.lang.String absender ) { try { meldungen.add ( new Terminkalender.Anfrage ( text, termin, absender, meldungsCounter ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( meldungsCounter ) ++; return ( meldungsCounter ) - 1; } 
@ java.lang.Override public void onPageSelected ( int position ) { mCurrentOffset = 0; mCurrentPosition = position; try { invalidate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override @org.springframework.transaction.annotation.Transactional public void deleteTasksByIds ( java.util.List<java.lang.Long> tasksIds ) { try { em.createQuery ( "DELETE FROM Task t WHERE t.id IN ( :tasksIds ) " ) .setParameter ( "tasksIds", tasksIds ) .executeUpdate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void cancelNotification () { try { mNotificationManager.cancel ( notificationID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void write ( byte[] buffer ) throws java.io.IOException { try { out.write ( buffer, 0, buffer.length ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } size += buffer.length; } 
private void onRoundEnd () { java.util.ArrayList<values.TournamentParticipant> participants = new java.util.ArrayList<> () ; try { for ( values.TournamentParticipant participant : _matchedOpponents ) { participants.add ( participant ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } matchOpponents ( participants ) ; } 
private int hashFunction ( K Key ) { int hashedIndex = Key.hashCode () ; int sizeOfTable = size () ; try { hashedIndex = java.lang.Math.abs ( hashedIndex ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( hashedIndex > sizeOfTable ) { hashedIndex = hashedIndex % sizeOfTable; } return hashedIndex; } 
@ java.lang.Override protected void mountFlatGUI () { try { if ( promoteToView ( true ) ) { if ( ( getHostView () ) != null ) { getHostView () .mountFlatGUI ( widgets ) ; } } else { mWidgetGroup.replaceAll ( widgets ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void isBadWordTest () { java.lang.String inputString = "Fuck"; tests.PigLatin pigLatin = new tests.PigLatin () ; try { if ( ! ( pigLatin.isBadWord ( inputString ) ) ) { fail ( "we can not detect a bad word" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.ws.rs.DELETE @javax.ws.rs.Path ( value = "/deleteStudent/{student}" ) @javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response deleteStudent ( @javax.ws.rs.PathParam ( value = "student" ) java.lang.Integer student_id ) { com.transaction.student.StudentTransaction studentTransaction = new com.transaction.student.StudentTransaction () ; try { studentTransaction.deleteStudent ( student_id, getRegId () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return javax.ws.rs.core.Response.status ( Response.Status.OK ) .build () ; } 
private void setupWolf () { currentAnimation = com.esbjon.entities.Wolf.animationMoveRight; try { regionAttribute = new com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute ( com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute.Diffuse, com.esbjon.entities.Wolf.animationStandRight.getKeyFrame ( 0.0F ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.After public void tearDown () throws java.lang.Exception { try { m_fileAnticipator.tearDown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void keepState ( boolean state ) { try { if ( state ) { changeToActive () ; } else { changeToInactive () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { java.lang.String fileString = "countries.txt"; try { CountriesTextFile.createFile ( fileString ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } while ( CountriesApp.continueProgram () ) ; } 
@ java.lang.Override public boolean shouldExecute () { try { if ( ( runDelay ) > 0 ) { ( runDelay ) --; return false; } else { runDelay = 200 + ( theEntity.getRNG () .nextInt ( 200 ) ) ; return searchForDestination () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean confirmDelete ( java.util.List<org.eclipse.core.resources.IResource> resources ) { try { if ( containsOnlyProjects ( resources ) ) { return confirmDeleteProjects ( resources ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return confirmDeleteNonProjects ( resources ) ; } 
private void displayFilterDialogue () { android.app.FragmentManager fragmentManager = getFragmentManager () ; com.groupeighteen.unote.view.DisplayPreferencesDialogue preferencesAlert = new com.groupeighteen.unote.view.DisplayPreferencesDialogue () ; try { preferencesAlert.show ( fragmentManager, "DISPLAY_PREFERENCES_FRAGMENT" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private java.lang.String getQuestionHTML ( Question q, int question, int student ) { try { if ( q instanceof MultipleChoiceQuestion ) return getMultipleChoiceQuestionHTML ( ( ( MultipleChoiceQuestion ) ( q ) ) , question, ( student + 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return ""; } 
public void clearSearchFields () { flowName = ""; flowPointName = ""; applicationName = ""; transactionReferenceId = ""; this.freeTextSearch = new com.erbjuder.logger.server.common.helper.FreeTextSearchController () ; try { this.search () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { try { if ( ( mPairsSpinner ) != null ) { outState.putInt ( "position", mPairsSpinner.getSelectedItemPosition () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onAttachedToWindow () { try { super.onAttachedToWindow () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void update () { try { com.example.daniel.app0.MyLocationListener.mLocationManager.requestLocationUpdates ( com.example.daniel.app0.MyLocationListener.mProvider, com.example.daniel.app0.MyLocationListener.TIEMPO_MIN, com.example.daniel.app0.MyLocationListener.DISTANCIA_MIN, this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mLoc = getLastKnownLocation () ; } 
@ com.mpp.controller.RequestMapping ( method = RequestMethod.POST, value = "/labDelete", produces = "application/json; charset=utf-8" ) @com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @com.mpp.controller.RequestParam java.lang.Integer id ) { try { labService.deleteLab ( id ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return com.mpp.constants.JsonReturn.getSuccess ( "success" ) ; } 
public void add ( T value, int priority ) { priorities[ ( ( last ) % ( priorities.length ) ) ] = priority; try { addLast ( value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public pt.ulisboa.tecnico.cmov.appServer.User newUser ( java.lang.String username, java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( username, password ) ; try { userAccounts.put ( username, newUser ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return newUser; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { java.lang.String strName = arrayAdapterSort.getItem ( which ) ; meadSort ( which, com.inspiredpanama.inspiredmead.MeadActivity.SORT_TYPE_DEC ) ; try { mAdapter.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void draw ( float xPos, float yPos ) { try { sprites[getCurrentSprite () ].draw ( xPos, yPos, 1.0F, 1.0F, 0.0F, false, false, 20, 20, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void storeSettings ( org.openide.WizardDescriptor wiz ) { try { hub.setProcedures ( new java.util.ArrayList ( getComponent () .getProcedures () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void cyclic () { try { for ( com.unideb.bosch.automatedcar.framework.ISystemComponent comp : com.unideb.bosch.automatedcar.framework.VirtualFunctionBus.components ) { comp.cyclic () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addTodo ( com.mad.achatz.fa_todo.ToDo toDo ) { db.insertTodo ( toDo, false ) ; try { webAccess.createTodo ( toDo ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } refreshList () ; } 
public void resetPlayer () { curHand.clear () ; try { splitHand.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } stay = false; splitStay = false; playerSum = 0; splitSum = 0; } 
public java.util.ArrayList<twitter4j.Status> downloadNewTweets () { try { if ( com.leebrimelow.twitter.Service.Twitter_Loader_Poster_Service.isDownloadedTweets ) { com.leebrimelow.twitter.Service.Twitter_Loader_Poster_Service.isDownloadedTweets = false; com.leebrimelow.twitter.Service.Twitter_Loader_Poster_Service.mHandler.postDelayed ( mTweetsCheckup, com.leebrimelow.twitter.Service.Twitter_Loader_Poster_Service.TIME_DELAY_Tweets_CHECKUP ) ; com.leebrimelow.twitter.Service.Twitter_Loader_Poster_Service.isDownloadingTweets = true; com.leebrimelow.twitter.Service.Twitter_Loader_Poster_Service.newTweetsNotificationManager.cancel ( com.leebrimelow.twitter.Service.Twitter_Loader_Poster_Service.Tweets_NOTIFICATION_ID ) ; return com.leebrimelow.twitter.Service.Twitter_Loader_Poster_Service.newTweetsList; } else return null; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setSpriterScale ( float scale ) { dataVO.scale = scale; try { renew () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onConfigure () { super.onConfigure () ; try { setVisible ( ( ( org.jboss.qa.tool.saatr.web.comp.build.properties.PropertiesEditPanel.getModelObject () ) != null ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void execInitField () { try { setValue ( getTableField () .getTable () .isMultiSelect () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void refreshMarkers ( java.util.List<com.busao.gyn.stops.BusStop> stops ) { clearMarkers () ; try { for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void update ( java.util.List<ciir.jfoley.chai.collections.Pair<java.lang.Boolean, java.lang.Double>> toEval, double cutoff ) { try { for ( ciir.jfoley.chai.collections.Pair<java.lang.Boolean, java.lang.Double> pred : toEval ) { update ( ( ( pred.right ) > cutoff ) , pred.left ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBackPressed () { try { sendIntent ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void checkBeginTripButton () { try { beginTripButton.setEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean validateName ( java.lang.String input ) { try { if ( ( android.text.TextUtils.isEmpty ( input ) ) || ( android.text.TextUtils.isEmpty ( input.trim () ) ) ) { toast ( R.string.goal_add_err_user_firstname__empty ) ; return false; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { try { switch ( which ) { case android.content.DialogInterface.BUTTON_POSITIVE: deletePartOfTheMethod ( id, position ) ; break; case android.content.DialogInterface.BUTTON_NEGATIVE: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onException ( java.lang.Exception e, java.lang.Object model, com.bumptech.glide.request.target.Target target, boolean isFirstResource ) { try { listener.onError () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
private void startMainActivity () { android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.company.integer.vkmusic.MainActivity.class ) ; com.company.integer.vkmusic.supportclasses.AppState.setTab ( launchingIntent.getIntExtra ( "tab", 0 ) ) ; startActivity ( intent ) ; try { finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Boolean result ) { try { if ( null != ( com.tsungweiho.intelligentpowersaving.MainActivity.getContext () ) ) ( ( com.tsungweiho.intelligentpowersaving.MainActivity ) ( com.tsungweiho.intelligentpowersaving.MainActivity.getContext () ) ) .setIfShowErrorMessage ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testSetEnumeration () { java.lang.String formula = "x = {1,2, ( 3,4 ) }"; java.lang.String exceptionMessage = de.bmoth.typechecker.TypeErrorExceptionTest.getExceptionMessage ( formula ) ; try { org.junit.Assert.assertTrue ( exceptionMessage.contains ( "Expected INTEGER but found INTEGER*INTEGER" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ! ( mTeleField.isShown () ) ) { mTeleField.setVisibility ( View.VISIBLE ) ; } else { mTeleField.setVisibility ( View.GONE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { Settings.Secure.putString ( getContentResolver () , "screensaver_components", ( ( ( getApplicationInfo () .packageName ) + "/" ) + ( com.komok.dreamapprunner.DreamAppRunnerService.class.getName () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void disableMoveButtons () { btnFold.setEnabled ( false ) ; btnCall.setEnabled ( false ) ; btnCheck.setEnabled ( false ) ; btnBet.setEnabled ( false ) ; try { btnRaise.setEnabled ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } btnAllIn.setEnabled ( false ) ; } 
@ org.junit.Test public void should_throw_exception_if_url_not_valid () { try { lan.dk.podcastserver.entity.CoverAssert.assertThat ( imageService.getCoverFromURL ( "blabla" ) ) .isEqualTo ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void pulseProcessor () { checkApple ( false ) ; try { checkCollision () ; } catch ( Exception ex ) { ex.printStackTrace () ; } move () ; } 
@ java.lang.Override public void onRstStreamRead ( io.netty.channel.ChannelHandlerContext ctx, int streamId, long errorCode ) throws io.netty.handler.codec.http2.Http2Exception { try { handler.onRstStreamRead ( streamId, errorCode ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testInsertSystemInfo () throws org.smartdata.metastore.MetaStoreException { org.smartdata.model.SystemInfo systemInfo = new org.smartdata.model.SystemInfo ( "test", "test" ) ; metaStore.insertSystemInfo ( systemInfo ) ; try { org.junit.Assert.assertTrue ( metaStore.getSystemInfoByProperty ( "test" ) .equals ( systemInfo ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected final void registerFormulaListener ( de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { try { controller.registerFormulaListener ( listener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void writeFiletoLocal ( java.nio.ByteBuffer buf ) throws java.io.IOException { try { while ( buf.hasRemaining () ) { fileChannel.write ( buf ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handleProtocolNegotiationCompleted ( io.grpc.Attributes attrs ) { try { attributes = transportListener.transportReady ( attrs ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onNetworkConnected () { android.util.Log.e ( "Network", "Network CONNNNNECTED" ) ; try { android.util.Log.e ( "Network", "Connected" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sendLocation () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( mListener ) != null ) { mListener.onListFragmentInteraction ( holder.mItem ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { if ( savedInstanceState == null ) { handleIntent () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void launch ( uk.dangrew.gnocchi.game.Game game ) { this.game = game; try { this.stack.stack ( new uk.dangrew.gnocchi.framework.GameAction ( new uk.dangrew.gnocchi.framework.action.FillAction ( game ) , new uk.dangrew.gnocchi.framework.animation.GravityAnimation ( game ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { try { new views.StatisticsView () .setVisible ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { com.firebirdberlin.nightdream.services.AlarmService.startAlarm ( context ) ; try { com.firebirdberlin.nightdream.NightDreamActivity.start ( context ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showSuggestions () { try { mSuggestionsListView.setVisibility ( View.VISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { try { gpCon.addToCart ( this.prod, this.getSpinnerValue () , imf ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void beginAgentsHandler ( java.lang.String actID ) { try { openBlocks.push ( kariminf.faris.process.ston.StonGenerator.Block.AGENT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase<T> tValueBox ) { valueBoxBase = tValueBox; try { add ( valueBoxBase ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onLoadFinished ( java.lang.String result ) { try { lblRaceInfo.setText ( result ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { super.onResume () ; try { if ( ( mGVRLayout ) != null ) { mGVRLayout.onResume () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void cleanup () { displayHandler.setDisplayMode ( emptyMode ) ; try { tr.secondaryRenderer.get () .getCamera () .setRootGrid ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void sendState () { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent.putExtra ( PlayerActivity.PARAM_STATE, state ) ; try { android.support.v4.content.LocalBroadcastManager.getInstance ( this ) .sendBroadcast ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void endElement ( java.lang.String uri, java.lang.String localName, java.lang.String qName ) throws org.xml.sax.SAXException { try { if ( captureElements ) tmp.endElement ( uri, localName, qName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( depth ) --; } 
@ java.lang.Override public void startEngine () { pl.engine.Utils.debug ( "========================================" ) ; pl.engine.Utils.debug ( "======= \tSHAKE GAME START !!! ========" ) ; try { pl.engine.Utils.debug ( "========================================" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( pl.engine.Team team : teams ) { team.printPlayers () ; } } 
private static void parseContent ( fr.pasteque.client.fragments.CustomerInfoDialog self, int who, org.json.JSONObject result ) { try { switch ( who ) { case fr.pasteque.client.fragments.CustomerInfoDialog.DATAHANDLER_CUSTOMER: self.parseCustomer ( result ) ; break; case fr.pasteque.client.fragments.CustomerInfoDialog.DATAHANDLER_HISTORY: self.parseHistory ( result ) ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void changeNumerator ( int numerator ) { try { if ( numerator < 0 ) { java.lang.System.out.println ( "Fatal error: Negative numerator." ) ; java.lang.System.exit ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } this.numerator = numerator; } 
public void stopLocationUpdates () throws java.lang.SecurityException { try { if ( ( locationManager ) != null ) { locationManager.removeUpdates ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { callback.onSuccess ( status ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onStop () { android.util.Log.e ( com.example.user.edeasy.Welcome.TAG, "onStop" ) ; super.onStop () ; try { detachDatabaseListeners () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void initialize ( org.apache.cordova.CordovaInterface cordova, org.apache.cordova.CordovaWebView webView ) { try { super.initialize ( cordova, webView ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.plugin.gcm.PushPlugin.gForeground = true; } 
@ butterknife.OnClick ( value = R.id.consumables_countdown_image ) public void onCountdownClick () { try { if ( getTimer () .isRunning () ) { return; } } catch ( Exception ex ) { ex.printStackTrace () ; } resetAnimation.cancel () ; startAnimation.start () ; } 
@ java.lang.Override public void run ( java.lang.String[] args ) throws java.lang.Exception { try { readFile () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void startStory ( java.lang.String name ) { android.content.Intent intent = new android.content.Intent ( this, com.epicodus.storytime.StoryActivity.class ) ; intent.putExtra ( getString ( R.string.key_name ) , name ) ; try { startActivity ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { enterBarcode.requestFocus () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addTask ( main.data.Task task, main.logic.Logic.ListType type ) { try { switch ( type ) { case ALL: allTasks.add ( task ) ; break; case COMPLETED: completedTasks.add ( task ) ; break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setProgressText ( java.lang.String text ) { getProgressTextView () .setText ( text ) ; try { getProgressTextView () .setTextColor ( mNotCompletedReachColor ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { try { getBuilder () .setId ( event.getId () ) .setDueDate ( event.getNewDueDate () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess () { android.content.Intent intent = new android.content.Intent ( this, framgia.vn.framgiacrb.ui.activity.SplashActivity.class ) ; try { getPlaceFromServer ( Session.sAuthToken ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( intent ) ; finish () ; } 
private void deactivateView ( android.view.View parent ) { for ( android.view.View foo : parent.getTouchables () ) { foo.setClickable ( false ) ; foo.setEnabled ( false ) ; } try { parent.setEnabled ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } parent.setClickable ( false ) ; } 
@ java.lang.Override public void onDestroy () { this.processStopRequest ( null ) ; try { this.mMediaSession.release () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public <T extends com.moilioncircle.redis.replicator.Command> void addCommandParser ( com.moilioncircle.redis.replicator.CommandName command, com.moilioncircle.redis.replicator.CommandParser<T> parser ) { try { commands.put ( command, parser ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( ( actionState ) == ( com.playposse.ghostphoto.PhotoFragment.ActionState.running ) ) { stopTakingPhotos () ; } else { startTakingPhotos () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int[][][] getWeekRaw () { try { readData () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return spots; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { optionsOn = "true"; try { f.setEnabled ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } o.dispose () ; } 
@ java.lang.Override protected void start () { super.start () ; mIsPause = false; com.inz.action.PlayAction.getInstance () .setPlayBackProgressByUser ( false ) ; try { this.camConnect () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void print () { try { print ( head ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { uk.ac.imperial.lsds.seep.runtimeengine.OutOfOrderBufferedBarrier.logger.warn ( ( ( "Nonblocking join " + ts ) + " timed out." ) ) ; try { synchronized ( this ) { if ( ( timeoutTasks.remove ( ts ) ) != null ) { addReady ( ts ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.btn_getURL: get_address () ; break; case R.id.btn_analyze: getTextFromActivity () ; break; case R.id.btn_reset: resetText () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setContents ( java.lang.String contents, java.lang.String updatedBy ) { try { this.revisions.add ( 0, new edu.caltech.cs141b.collaborator.server.data.DocumentRevisionData ( contents, updatedBy ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void close () { stopBgTask () ; try { if ( ( xmlsocket ) != null ) { xmlsocket.close () ; xmlsocket = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void assertNoTerminalEvent () { try { if ( ( ( onCompleteEvents.size () ) > 0 ) || ( ( onErrorEvents.size () ) > 0 ) ) { throw new java.lang.AssertionError ( "Terminal events received." ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final java.security.cert.Certificate[] getCertificateChain () { try { if ( ( certChain ) == null ) { return null; } else { return java.util.Arrays.copyOf ( certChain, certChain.length ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void init () { try { if ( ! ( isInit ) ) { mLoaderCallback.onManagerConnected () ; isInit = true; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void nextActivity () { android.content.Intent templateIntent = new android.content.Intent ( currentActivity, com.example.kbb12.dms.Template.TemplateActivity.class ) ; try { currentActivity.startActivity ( templateIntent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mPresentType = getResources () .getStringArray ( R.array.present_types ) ; buildLoginDialog () ; try { mLoginDialog.show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void afterTestsStopped () throws java.lang.Exception { try { stopAllGrids () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy = null; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_login ) ; com.bloodshare.bloodshareandroid.ui.login.MobileInputFragment mobileInputFragment = com.bloodshare.bloodshareandroid.ui.login.MobileInputFragment.newInstance () ; addFragment ( mobileInputFragment, MobileInputFragment.TAG ) ; } 
public void onResume () { super.onResume () ; getView () .showLoading () ; mRemoteFileListInteracor.getRemoteFileList () ; try { mRemoteFileListInteracor.registerCallback ( mFtpUploadCallback ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { Executable.ScienceBowlClock.GUI = new JFrame.ClockFrame () ; try { Executable.ScienceBowlClock.GUI.setVisible ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Executable.ScienceBowlClock.ScoreGUI = new JFrame.ScoreFrame () ; } 
@ java.lang.Override public void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mUsername = com.niemisami.wedu.settings.WeduPreferenceHelper.getUsername ( getActivity () ) ; createSocketListeners () ; } 
@ java.lang.Override public void registerInputs ( com.jme3.input.InputManager inputManager ) { try { openrts.server.GameInputInterpreter.logger.info ( "multiplayer controller online" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.netcetera.codecamp.graphqldemo.type.Project addTaskToProject ( com.netcetera.codecamp.graphqldemo.type.Task task, java.lang.Long projectId ) { com.netcetera.codecamp.graphqldemo.type.Project project = projectService.getById ( projectId ) ; try { project.getTasks () .add ( task ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return projectService.save ( project ) ; } 
public void testAffinityBenchmarkAdd () { mode = org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunctionSimpleBenchmark.TopologyModificationMode.ADD; org.apache.ignite.cache.affinity.AffinityFunction aff0 = new org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction ( false, 1024 ) ; try { affinityBenchmark ( aff0, new org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction ( false, 1024 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void remove () { try { this.remove ( ( ( pos ) -- ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void preInit () { try { MinecraftForge.EVENT_BUS.register ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPageScrollStateChanged ( int state ) { if ( state == ( android.support.v4.view.ViewPager.SCROLL_STATE_IDLE ) ) mIsClick = false; try { if ( ( mListener ) != null ) mListener.onPageScrollStateChanged ( state ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected <T extends org.anarres.dhcp.v6.options.Dhcp6Option> void assertSingle ( org.anarres.dhcp.v6.options.Dhcp6Options options, @javax.annotation.Nonnull final java.lang.Class<T> type ) { try { org.junit.Assert.assertEquals ( 1, com.google.common.collect.Iterables.size ( options.getAll ( type ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; try { butterknife.ButterKnife.bind ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } buildGeoFence () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { friend.sendingStarted = true; try { sendImageListener.onImageUploadStarted ( friend ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onTextChanged ( java.lang.CharSequence s, int start, int before, int count ) { try { m_CurrentValue = s.toString () ; } catch ( Exception ex ) { ex.printStackTrace () ; } m_CurrentPosition = position; m_CurrentLineNetAmt = tv_LineNetAmt; m_CurrentRecordItem = recordItem; } 
private static void processFlowStatistics ( final java.lang.Iterable<org.opendaylight.yang.gen.v1.urn.opendaylight.flow.statistics.rev130819.FlowsStatisticsUpdate> data, final org.opendaylight.openflowplugin.api.openflow.device.DeviceContext deviceContext ) { org.opendaylight.openflowplugin.impl.statistics.StatisticsGatheringUtils.deleteAllKnownFlows ( deviceContext ) ; try { org.opendaylight.openflowplugin.impl.statistics.StatisticsGatheringUtils.writeFlowStatistics ( data, deviceContext ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } deviceContext.submitTransaction () ; } 
public void onKeyback () { main_activity.yy_playing_msg_dlg = null; main_activity.changeShengDao ( true ) ; try { stopPlayMsg ( false, true, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void update () { try { clist.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.util.Collection<com.example.rkdhatt_notes.Claim> claims = com.example.rkdhatt_notes.ClaimListController.getClaimList () .getClaims () ; clist.addAll ( claims ) ; adapter.notifyDataSetChanged () ; claimAdapter.notifyDataSetChanged () ; } 
private java.lang.String undoRedoCreateTask () { Task task = new Task ( this.commandDetails ) ; tasks.add ( this.commandDetails.getID () , task ) ; try { storage.save ( tasks ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return displayAllTasks () ; } 
@ java.lang.Override public void addQuestion ( java.lang.String questionText, java.lang.String questionType ) { try { java.lang.System.out.println ( entity.getEntries () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } entity.getEntries () .add ( new pt.uc.dei.aor.project.persistence.entity.ScriptEntryEntity ( questionText, questionType, entity.getNextPosition () ) ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { dialog.cancel () ; try { D_introWeekSystem () .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean jj_3R_106 () { try { if ( jj_3R_229 () ) return true; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { disposeSwingData () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.lost.blocks.ModelView.ModelWindow.newDriver = overviewDriver; } 
public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.layout_contact_designer ) ; getTitleFromIntent ( this.getIntent () ) ; initActionBar () ; initTabHost ( this.getIntent () ) ; initListView () ; } 
@ java.lang.Override public int getCampaignsCountInType ( int campaignType ) { com.edu.timebank.service.business.impl.CampaignEntityExample example = new com.edu.timebank.service.business.impl.CampaignEntityExample () ; try { if ( campaignType != 0 ) { example.createCriteria () .andCampaignTypeEqualTo ( campaignType ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return campaignEntityMapper.countByExample ( example ) ; } 
public void incrementKey ( int key ) { int temp = keys.get ( key ) ; temp++; try { keys.set ( key, temp ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void hitObstacle ( boolean top ) { vel[0] = 0; if ( ( vel[1] ) > 0 ) { vel[1] = 0; } try { if ( top ) { hitGround () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { model.UnrestrictedCvCGame experiment = new model.UnrestrictedCvCGame ( new model.UnrestrictedBoard () , model.AbstractGame.Difficulty.custom, model.AbstractGame.Difficulty.custom ) ; try { experiment.setCustomAIParams ( 3, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } experiment.runCvCGameForRecord ( 10000 ) ; } 
@ java.lang.Override public void apply ( final org.eclipse.emf.common.util.URI source, final org.eclipse.emf.common.util.URI target ) { com.google.common.collect.Multimap<org.eclipse.emf.common.util.URI, org.eclipse.emf.common.util.URI> _generatedFile2sourceURI = xtextBuildResultCollector.getGeneratedFile2sourceURI () ; try { _generatedFile2sourceURI.put ( target, source ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.rey.sqlfluent.SqlFluent add ( java.lang.String word ) { if ( ( mBuilder.length () ) != 0 ) mBuilder.append ( ' ' ) ; try { mBuilder.append ( word ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override public void setCurrentTypeView ( java.lang.String currentTypeView ) { this.currentTypeView = currentTypeView; enableAndHideTabs ( true ) ; enableOrHidePreviewBtn () ; try { enableOrHideShareTab () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { try { if ( activity == ( getContext () ) ) { ( ( android.app.Activity ) ( getContext () ) ) .getApplication () .unregisterActivityLifecycleCallbacks ( this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.ws.rs.POST @javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML, javax.ws.rs.core.MediaType.APPLICATION_JSON } ) @javax.ws.rs.Path ( value = "/{id}/discover" ) @com.emc.storageos.security.authorization.CheckPermission ( roles = { com.emc.storageos.security.authorization.Role.TENANT_ADMIN } ) public com.emc.storageos.model.TaskResourceRep discoverHost ( @javax.ws.rs.PathParam ( value = "id" ) java.net.URI id ) { try { com.emc.storageos.api.service.impl.resource.ArgValidator.checkFieldUriType ( id, com.emc.storageos.db.client.model.Host.class, "id" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.emc.storageos.db.client.model.Host host = queryObject ( com.emc.storageos.db.client.model.Host.class, id, true ) ; return doDiscoverHost ( host, null, true ) ; } 
public void callTargetEvent ( org.bukkit.event.entity.EntityTargetEvent event ) { try { for ( net.citizensnpcs.npctypes.CitizensNPC type : types.values () ) { type.onTarget ( event ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onClose () { try { list.search ( this, null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } listAdapter.notifyDataSetChanged () ; android.util.Log.d ( diy.uigeneric.sample.SampleListActivity.TAG, "search stop" ) ; return false; } 
public static synchronized void registerWakeupBroadcast ( android.content.Context context, android.content.Intent intent ) { try { com.magnet.mmx.client.api.MMX.getSharedPrefs ( context ) .edit () .putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI, intent.toUri ( Intent.URI_INTENT_SCHEME ) ) .apply () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testCertifcateLoad () { java.lang.String ipFile = resolveFilename ( "cert.pem.txt" ) ; org.apache.qpid.proton.engine.impl.ssl.SslEngineFacadeFactory factory = new org.apache.qpid.proton.engine.impl.ssl.SslEngineFacadeFactory () ; try { org.junit.Assert.assertNotNull ( "Certificate was NULL", factory.readCertificate ( ipFile ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
void printItemAttributes () { try { super.printItemAttributes () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( perishable ) { java.lang.System.out.print ( " perishable " ) ; } else { java.lang.System.out.print ( " non-perishable " ) ; } java.lang.System.out.print ( ( " Total price: $" + ( calculatePrice () ) ) ) ; } 
public void setName ( java.lang.String name ) { try { if ( ( ! ( name.isEmpty () ) ) && ( ( name.trim () .length () ) > 0 ) ) this.name = name.trim () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void render () { try { update () ; } catch ( Exception ex ) { ex.printStackTrace () ; } display () ; } 
@ java.lang.Override public void onCloseResult ( boolean closeOK ) { state = org.runnerup.hr.RetryingHRProviderProxy.State.CLOSED; requestedState = org.runnerup.hr.RetryingHRProviderProxy.State.CLOSED; try { if ( ( client ) != null ) client.onConnectResult ( closeOK ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateData ( android.util.SparseArray<com.quickblox.content.model.QBFile> qbFileSparseArray ) { this.qbFileSparseArray = qbFileSparseArray; try { notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void partOpened ( org.eclipse.ui.IWorkbenchPart part ) { try { if ( part instanceof net.refractions.udig.document.ui.DocumentView ) { handleWorkbenchSelection ( selectionService.getSelection () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Object get ( java.lang.Object key ) { com.wm.data.IDataCursor cursor = getCursor () ; java.lang.Object value = com.wm.data.IDataUtil.get ( cursor, ( ( java.lang.String ) ( key ) ) ) ; try { cursor.destroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return value; } 
@ org.junit.Test public void recordCustomObject () throws java.lang.Exception { hu.advancedweb.scott.RecordingTest.CustomClass myClass = new hu.advancedweb.scott.RecordingTest.CustomClass ( 5 ) ; try { assertThat ( hu.advancedweb.scott.helper.TestHelper.getLastRecordedStateFor ( "myClass" ) , org.hamcrest.CoreMatchers.equalTo ( myClass.toString () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.nio.FloatBuffer storeMatrix ( matrix.Matrix4f mat ) { try { mat.store ( buf ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } buf.flip () ; return buf; } 
@ org.junit.Test public void testGet () { try { org.junit.Assert.assertThat ( parameters.get ( key ) , org.hamcrest.CoreMatchers.is ( param ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.AfterClass public static void tearDownClass () throws java.io.IOException { try { de.hpi.mmds.wiki.HDFSTest.hdfsCluster.shutdown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String getName () { try { if ( ( ( names ) != null ) && ( ( names.size () ) > 0 ) ) { return names.get ( 0 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void error ( java.lang.String message, java.util.Map<java.lang.String, java.lang.String> details ) { try { log ( piomar123.psoir.sqsworker.SimpleLogger.LogLevel.error, message, details ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void PlayerCountScreen () { try { if ( setPS ) { game.setScreen ( mPS ) ; } else { game.setScreen ( new com.group9.crazygolf.Menu.PlayerCountScreen ( game, 0 ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void stopAll () { try { for ( java.util.Map.Entry<java.lang.String, org.md2k.notificationmanager.notification.Notification> entry : notificationHashMap.entrySet () ) { entry.getValue () .stop () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String spelersToString () { java.lang.String spelersToString = " "; try { for ( Game.ServerPeer s : spelers ) { spelersToString = ( spelersToString + "\n" ) + ( s.getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return spelersToString; } 
@ java.lang.Override public synchronized void onFailure ( final java.lang.Throwable t ) { be.appfoundry.promtius.ParallelPushAggregator.PusherAggregatorTaskCallback.LOGGER.error ( "Push failure received", t ) ; ( failureCount ) ++; try { markDelegateWhenFinished () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel, com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder, int position ) { try { viewHolder.textView.setText ( textModel.getText () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.Test public void testCompareCellsDESC () throws com.stratio.crossdata.common.exceptions.UnsupportedException { try { org.testng.Assert.assertEquals ( compareCell ( OrderDirection.DESC, true, false ) , 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void tabIn () throws java.io.IOException { try { tab ( out, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public models.Node readCachedNode ( java.lang.String pid ) { models.Node c = readNodeFromCache ( pid ) ; try { if ( c == null ) { return readNode ( pid ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return c; } 
private void signInGoogle () { signInIntent = Auth.GoogleSignInApi.getSignInIntent ( SIM.getmGoogleApiClient () ) ; try { startActivityForResult ( signInIntent, nl.rug.www.summerschool.controller.myprofile.SignInFragment.GOOGLE_SIGN_IN ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } signInIntent = null; } 
public void writeDB () { if ( ( commandHandler ) == null ) { return; } try { commandHandler.writeDB () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { try { progressDialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onDestroy () ; } 
@ org.junit.Test public void greetShouldIncludeTheOneBeingGreeted () { java.lang.String someone = "World"; try { org.junit.Assert.assertThat ( greeter.greet ( someone ) , org.junit.matchers.JUnitMatchers.containsString ( someone ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.rndapp.mtamap.SubwayApplication.mInstance = this; io.fabric.sdk.android.Fabric.with ( this, new com.crashlytics.android.Crashlytics () ) ; com.rndapp.mtamap.Analytics.init ( this ) ; } 
@ java.lang.Override public void seekTo ( int pos ) { try { if ( ( this.mdP ) != null ) { this.mdP.seekTo ( pos ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSurfaceChanged () { try { synchronized ( this ) { if ( ( mCamera ) != null ) { setupPreview () ; adjustCameraParameters () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void updatePager () { try { new de.tap.easy_xkcd.fragments.comics.OfflineFragment.updateImages ( false ) .execute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom, java.time.LocalDateTime dateTo ) { java.util.List<seedu.todo.models.Event> selectedEvents = getEventByRange ( dateFrom, dateTo ) ; try { events.removeAll ( selectedEvents ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Before public void before () { try { aapl = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "AAPL", com.google.common.collect.Lists.newArrayList ( "APPLE INC", "APPLE INCORP" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } adbe = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "ADBE", com.google.common.collect.Lists.newArrayList ( "ADOBE SYSTEMS INC", "ADOBE SYSTEM" ) ) ; } 
public static void displayMenu () { java.lang.System.out.println () ; try { java.lang.System.out.println ( "0 - Exit" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( "1 - View All Movies " ) ; java.lang.System.out.println ( "2 - View Animated Movies" ) ; java.lang.System.out.println ( "3 - View Drama Category" ) ; java.lang.System.out.println ( "4 - View Horror Category" ) ; java.lang.System.out.println ( "5 - View Sci-Fi Category" ) ; java.lang.System.out.println ( "Please enter a number: " ) ; } 
@ java.lang.Override public final void load ( com.google.gson.JsonObject json ) { try { value = json.get ( name ) .getAsDouble () ; } catch ( Exception ex ) { ex.printStackTrace () ; } update () ; } 
@ java.lang.Override public void setTimePlayed ( nuclei.media.MediaInterface mediaInterface, long played ) { try { if ( ( timePlayed ) != null ) timePlayed.setText ( stringForTime ( played ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void mutant3 () { try { assertEquals ( new java.lang.Double ( 1.2 ) , org.cinchapi.concourse.util.StringsMutated3.tryParseNumber ( "1" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean hasStatus () { try { synchronized ( taskStatuses ) { return ! ( taskStatuses.isEmpty () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public io.github.daveho.beatbox.Builder prepend ( net.beadsproject.beads.core.UGen ugen ) { try { this.ugen.addInput ( ugen ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new io.github.daveho.beatbox.Builder ( ac, ugen, this.map ) ; } 
public void putString ( java.lang.String key, java.lang.String value ) { if ( key == null ) return; if ( value == null ) return; try { checkForNullValue ( value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } preferences.edit () .putString ( key, value ) .apply () ; } 
private java.lang.ProcessBuilder setupProcessBuilder () { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder ( cmd.getCmdLine () ) ; pb.environment () .putAll ( environment ) ; try { pb = pb.directory ( dir ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return pb; } 
protected void initialize () { try { java.lang.System.out.println ( "Autonomous mode started." ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.openvehicles.OVMS.BaseApp.sInstance = this; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { com.justaudio.utils.CustomDialog.showMoreRemoveDialog ( parent, mData, position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void clientConnected ( ConnectionToClient client ) { try { serverUI.display ( ( "New client connected " + ( client.getName () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void handleClick () { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_POWERMENU ) ; try { mContext.sendBroadcast ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void ping ( java.lang.String[] message ) { try { notifier.send ( ( ( answerCommand ) + "ping received!" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { try { if ( unplacedBeacons.contains ( beacon ) ) { placedBeacons.add ( beacon ) ; unplacedBeacons.remove ( beacon ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void copy ( com.thoughtworks.go.config.update.Validatable from, com.thoughtworks.go.config.update.Validatable to ) { if ( ( from == null ) || ( to == null ) ) return; try { to.errors () .addAll ( from.errors () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { try { for ( int i = 0; i < 5000; i = i + 1 ) { java.lang.System.out.println ( ( "Hej " + i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void registerBlock ( net.minecraft.block.Block block, net.minecraft.item.ItemBlock item ) { ForgeRegistries.BLOCKS.register ( block ) ; try { item.setRegistryName ( block.getRegistryName () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ForgeRegistries.ITEMS.register ( item ) ; } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event.getPlayer () ; try { if ( ! ( p.hasPlayedBefore () ) ) { setSpawn ( p ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailure ( java.lang.Throwable t ) { try { android.widget.Toast.makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void refreshAlbumListView () { java.util.Collection<com.secretproject.photoprogress.data.PhotoAlbum> albums = com.secretproject.photoprogress.helpers.PhotoAlbumHelper.getAllPhotoAlbums () ; try { if ( albums != null ) { albumAdapter.clear () ; albumAdapter.addAll ( albums ) ; albumAdapter.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.AndroidCamera[] retrieveCameras () { try { org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.initCamerasCache ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.camerasCache; } 
public void enter ( @android.support.annotation.NonNull android.widget.ImageView from, boolean withAnimation ) { mImageFrom = from; mIsOpen = true; try { mAnimator.init ( from, this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mAnimator.enter ( withAnimation ) ; } 
public java.util.Date getDate ( java.sql.Timestamp timestamp ) { try { if ( timestamp != null ) { LOGGER.debug ( "getting date for {}", timestamp ) ; return new java.util.Date ( timestamp.getTime () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void removeItem ( com.avene.avene.livina.upnp.DeviceDisplay dd ) { try { com.avene.avene.livina.content.ServersContent.ITEMS.remove ( dd ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.avene.avene.livina.content.ServersContent.ITEM_MAP.remove ( dd.getDeviceMacId () ) ; } 
@ java.lang.Override public void applyContainerAttenuation ( se.raddo.raddose3D.Container sampleContainer ) { try { attenuatedPhotonsPerSec = ( photonsPerSec ) * ( 1 - ( sampleContainer.getContainerAttenuationFraction () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setColorFilter ( android.graphics.ColorFilter colorFilter ) { mPaint.setColorFilter ( colorFilter ) ; try { super.setColorFilter ( colorFilter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroyView () { super.onDestroyView () ; try { if ( ( ( curSnackbar ) != null ) && ( curSnackbar.isShown () ) ) curSnackbar.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void updatePilot ( @android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot, @android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback<com.airmap.airmapsdk.models.pilot.AirMapPilot> callback ) { try { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService.updatePilot ( pilot, callback ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deallocate () { cudaFree ( val ) ; cudaFree ( rowPtr ) ; try { cudaFree ( colInd ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { try { java.lang.System.out.println ( "Hello world!" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } int[][] a; int[][] b; } 
protected float scorePiece ( puzzlesolver.solver.State state, puzzlesolver.Piece foundPiece ) { int totalPotentialMatches = 0; try { for ( puzzlesolver.enums.PieceType pieceType : foundPiece.getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces.sublistByType ( pieceType ) .size () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return 1.0F / totalPotentialMatches; } 
@ java.lang.Override public void reloadListFragment () { final org.openbmap.activities.SessionListFragment sessionFrag = ( ( org.openbmap.activities.SessionListFragment ) ( getSupportFragmentManager () .findFragmentByTag ( "session" ) ) ) ; try { if ( sessionFrag != null ) { sessionFrag.refreshAdapter () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mBluetoothAdapter = android.bluetooth.BluetoothAdapter.getDefaultAdapter () ; if ( ( mBluetoothAdapter ) == null ) { java.lang.System.exit ( 0 ) ; } smokinoGUI = null; } 
@ java.lang.Override public void onContactDeleted ( java.lang.String username ) { if ( friend_list.contains ( username ) ) friend_list.remove ( username ) ; try { adapter.notifyDataSetChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void writeToParcel ( final android.os.Parcel out, final int flags ) { super.writeToParcel ( out, flags ) ; try { out.writeSerializable ( direction ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } out.writeInt ( ( caseSensitive ? 1 : 0 ) ) ; } 
@ java.lang.Override public void onTabChanged ( java.lang.String tabId ) { try { bhApp.actionBarHandler.onQueryTextChange ( "" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bhApp.actionBarHandler.getMenuItem ( R.id.menu_search ) .collapseActionView () ; if ( tabId.equals ( "global" ) ) { com.maksl5.bl_hunt.custom_ui.fragment.LeaderboardLayout.currentSelectedTab = 0; } else { com.maksl5.bl_hunt.custom_ui.fragment.LeaderboardLayout.currentSelectedTab = 1; } } 
public void setIdentifierName ( java.lang.String mcAppIDKey, java.lang.String identifierName ) { try { setParamValue ( mcAppIDKey, identifierName ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPause () { super.onPause () ; try { recordAudio ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } unregisterReceiver ( mGattUpdateReceiver ) ; } 
void doQuery ( java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection.createStatement () ; try { statement.executeUpdate ( query ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void init () { try { rproject.engine.GameProvider.getGame () .addGameListener ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void NewWordClicked ( android.view.View Sender ) { selectedWord = wordGenerator.nextWord ( selectedLength ) .toUpperCase () ; scrambledWord = edu.westga.rnrscramble.model.WordScrambler.Scramble ( selectedWord ) ; try { setScrambleTextView ( scrambledWord ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setAnswerTextView ( "" ) ; } 
public void add ( java.lang.String imagePath, int[] imageNumber ) { try { images.add ( new org.youscope.plugin.measurementviewer.ImageList.ImageEntry ( imageNumber, imagePath ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent arg0 ) { java.lang.String file = handleExportButton () ; try { if ( file != null ) { controller.exportCustomCommand ( file ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void publishMessage ( java.lang.String message ) { try { gcloudPublisher.publishMessage ( topicName, message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setNumericBanner ( int count ) { try { if ( ( items.size ) <= 1 ) super.setNumericBanner ( count ) ; else this.setMultipleBanner ( items.size ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void requestNewSender () { try { if ( ( queue.size () ) > 0 ) { ServerThread thread = queue.remove () ; thread.setToSender () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void emptyCheckedUserNames () { try { checkedUsernames.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static com.example.johnta.homeworkappv2.firebase.FirebaseWrapper getInstance ( android.content.Context context ) { if ( ( com.example.johnta.homeworkappv2.firebase.FirebaseWrapper.instance ) == null ) com.example.johnta.homeworkappv2.firebase.FirebaseWrapper.instance = new com.example.johnta.homeworkappv2.firebase.FirebaseWrapper ( context ) ; try { com.example.johnta.homeworkappv2.firebase.FirebaseWrapper.instance.setContext ( context ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return com.example.johnta.homeworkappv2.firebase.FirebaseWrapper.instance; } 
@ java.lang.Override public boolean getBoolean ( java.lang.String expression ) { java.lang.Object value = this.getValue ( expression ) ; try { if ( value instanceof java.lang.Boolean ) { return java.lang.Boolean.TRUE.equals ( value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { recyclerViewAdapter = new se.chalmers.projektgrupplp4.studentlivinggbg.AccommodationRecyclerViewAdapter ( se.chalmers.projektgrupplp4.studentlivinggbg.model.accommodation.Accommodation.getFavorites () , getApplicationContext () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } new se.chalmers.projektgrupplp4.studentlivinggbg.view.FavoritesView ( this, recyclerViewAdapter ) ; new se.chalmers.projektgrupplp4.studentlivinggbg.controller.FavoritesController ( this, recyclerViewAdapter ) ; } 
public static void main ( java.lang.String[] args ) { try { new Main () .main () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this, com.codepath.packagetwitter.FileUploadActivity.class ) ; try { startActivity ( i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this, threadFactory ) ; try { w.start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return w; } 
protected final void addTransition ( Automata.Automata.State from, Automata.Automata.Transition transition ) { try { from.addTransition ( transition ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void ensureInitialized () { try { synchronized ( initializationLock ) { if ( ! ( isInitialized ) ) { replayRequests ( persistedState.getAllRequests () ) ; isInitialized = true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void replaceSmileySelector () { try { smileysSelector.animate () .translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector.getY () ) ) ) .setDuration ( 150 ) .start () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ android.annotation.TargetApi ( value = 21 ) private void speakOut () { try { tts.speak ( txtFromDesc.getText () .toString () , TextToSpeech.QUEUE_FLUSH, null, UTTERANCE_ID ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void renameDeck ( final org.dasfoo.delern.models.Deck deck, final java.lang.String newName ) { deck.setName ( newName ) ; try { deck.save ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void logHeaderContent ( java.lang.String tag, @com.ysj.log.LogLevel.Level int logLevel, int methodCount ) { logThread ( tag, logLevel ) ; try { logMethod ( tag, logLevel, methodCount ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
static void compareInt () { try { Jude.emitLn ( "pop rbx" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Jude.emitLn ( "cmp rbx, rax" ) ; } 
@ java.lang.Override public void printAbilities () { java.lang.System.out.println ( "[1]Hyper Fang" ) ; java.lang.System.out.println ( "[2]Tackle" ) ; java.lang.System.out.println ( "[3]Razor leaf" ) ; try { java.lang.System.out.println ( "[4]Leech Life" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected org.openqa.selenium.support.ui.Select safeGetSelect () { try { if ( ( this.select ) == null ) { this.select = new com.olenick.avatar.web.elements.AvatarMultiselectWebElement.AvatarSelect ( this.safeGetUnderlyingWebElement () , this ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this.select; } 
private void popupSetup () { popupMenu = new javax.swing.JPopupMenu () ; subSetup () ; disableItems () ; popupMenu.add ( renameItem ) ; try { popupMenu.addSeparator () ; } catch ( Exception ex ) { ex.printStackTrace () ; } popupMenu.add ( shiftItem ) ; } 
public void execute () { try { context.getSession () .execute ( atomicBatch ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addDataList ( java.util.List<com.mredrock.cyxbs.model.lost.Lost> dataList ) { try { if ( dataList != null ) { mList.addAll ( dataList ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } notifyItemRangeInserted ( mList.size () , dataList.size () ) ; } 
@ java.lang.Override public void itemStateChanged ( java.awt.event.ItemEvent arg0 ) { try { if ( ( selected ) instanceof view.DText ) { ( ( view.DText ) ( selected ) ) .setFont ( comboBox.getSelectedItem () .toString () ) ; modelChanged ( selected.model ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void updateUI ( com.handup.handup.model.Content c ) { try { if ( ( mRecyclerViewAdapter ) != null ) { mRecyclerViewAdapter.addItem ( c ) ; mRecyclerViewAdapter.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.testng.annotations.AfterClass public void afterClass () throws java.lang.InterruptedException { this.driver.manage () .deleteAllCookies () ; try { this.driver.close () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.driver.quit () ; } 
public void goToTexting () { try { startActivity ( new android.content.Intent ( this, com.example.guy.smsclassproject.TextingActivity.class ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean remove ( java.lang.Object o ) { boolean result = underlyingList.remove ( o ) ; try { markAsStale () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet changeSet, com.ofs.model.Inventory inventory, com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { try { if ( changeSet.contains ( "name" ) ) { validate ( inventory, errors ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void userJoined ( connection.MessageTO mTo ) { try { service.ServerService.frontController.userJoined ( mTo.getFrom () , mTo.getRoom () , ( ( java.util.List<java.lang.String> ) ( mTo.getBody () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> findAll ( java.lang.Object condition ) { try { this.log.debug ( ( ( "find all to list { " + condition ) + " }" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this.paginate ( condition, 1, ( -1 ) ) ; } 
public static com.android.volley.RequestQueue getRequestQueue () { try { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley.newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue; } 
@ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { try { if ( receivers.contains ( receiver ) ) { super.unregisterReceiver ( receiver ) ; receivers.remove ( receiver ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0; try { subTotalPrice = ( cartProduct.getProduct () .getPrice () ) * ( cartProduct.getQuantity () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return subTotalPrice; } 
@ java.lang.Override public boolean onTouch ( android.view.View v, android.view.MotionEvent event ) { clear_buttons () ; try { set_selected_block ( 3, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Button_LandHere.setSelected ( true ) ; return false; } 
@ java.lang.Override public void onFocusChange ( android.view.View v, boolean hasFocus ) { try { if ( !hasFocus ) { mActions.setVisibility ( com.fiberlink.maas360.android.richtexteditor.GONE ) ; blockAndDisableAllButtons () ; } else { if ( ( mActions ) != null ) { mActions.setVisibility ( com.fiberlink.maas360.android.richtexteditor.VISIBLE ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void bindEvent ( edu.umd.cs.jobi.model.Event event ) { this.event = event; try { dateTextView.setText ( event.getDate () .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } typeTextView.setText ( event.getType () .name () ) ; } 
public void addAttributeName ( java.lang.String attributeName ) { try { if ( ! ( getAttributeNames () .contains ( attributeName ) ) ) { getAttributeNames () .add ( attributeName ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Long call () throws java.lang.Exception { long result = bookmarksDBAdapter.addBookmarkIfNotExists ( sura, ayah, page ) ; try { bookmarksPublishSubject.onNext ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public java.lang.String formatMessage ( java.util.logging.LogRecord record ) { java.lang.String output = ""; try { output += record.getLoggerName () ; } catch ( Exception ex ) { ex.printStackTrace () ; } output += ": "; output += record.getMessage () ; output += "\n"; return output; } 
public entities.User getLoggedUser () { java.lang.String remoteUser = javax.faces.context.FacesContext.getCurrentInstance () .getExternalContext () .getRemoteUser () ; try { if ( remoteUser != null ) { current = ejbFacade.findUserByEmail ( remoteUser ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return current; } 
public static void log ( java.lang.String origin, java.lang.String message ) { try { nz.mega.sdk.MegaApiAndroid.log ( MegaApiAndroid.LOG_LEVEL_INFO, message, origin ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testRelativeParser1 () { java.time.LocalDateTime date; date = katnote.parser.DateParser.parseDateTime ( "6am" ) ; try { assertNotNull ( date ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { setBpm ( ( ( currentBpm ) + 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setRangeTime ( org.joda.time.LocalDateTime start, org.joda.time.LocalDateTime end ) { _startTime = start; _endTime = end; try { _totalSeconds = org.joda.time.Period.fieldDifference ( start, end ) .toStandardDuration () .getStandardSeconds () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public int indexOf ( E item ) { try { if ( ( headLink ) == null ) return -1; else return headLink.indexOf ( item, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void interpolate ( org.geepawhill.contentment.core.Context context, double fraction ) { double newOpacity = ( oldOpacity ) + ( fraction * ( ( opacity ) - ( oldOpacity ) ) ) ; try { actor.group () .setOpacity ( newOpacity ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkColumn ( java.lang.String name ) { try { com.google.common.base.Preconditions.checkArgument ( schema.getFieldNames () .contains ( name.toLowerCase () ) , "Column %s does not exist", name ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { try { makeChorale ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void requestStoragePermissions () { try { com.ripplex.fileobservertester.RuntimePermissionsChecker.requestStoragePermissions ( this, com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private javax.swing.JLabel searchLabel ( int panelName ) { try { for ( javax.swing.JLabel label : labels ) { if ( label.getName () .equals ( java.lang.String.valueOf ( panelName ) ) ) { return label; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
public void updateScreen ( android.graphics.Canvas canvas ) { canvas.drawBitmap ( mBackground, 0, 0, new android.graphics.Paint () ) ; mNote.update ( canvas ) ; try { mScoreBar.update ( canvas ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static net.sf.memoranda.date.CalendarDate yesterday () { java.util.Calendar cal = java.util.Calendar.getInstance () ; try { cal.add ( java.util.Calendar.DATE, ( -1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new net.sf.memoranda.date.CalendarDate ( cal ) ; } 
private void addWhere ( org.hibernate.Criteria crit, com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = toCriterion ( crit, wherePred ) ; try { cr.criteria.add ( cr.criterion ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { com.abs104a.mperwithsideproject.viewctl.MainViewCtl.createAndShowMainView ( com.abs104a.mperwithsideproject.MainService.getService () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { display.setText ( "0" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tempField.setText ( "" ) ; temp = "0"; displayT = ""; znak = "0"; result = 0; } 
@ java.lang.SuppressWarnings ( value = "unused" ) @org.greenrobot.eventbus.Subscribe ( threadMode = org.greenrobot.eventbus.ThreadMode.MAIN ) public void onOfflineSubscriptionPosted ( no.dnt.sjekkut.event.OfflineSubscriptionPosted event ) { try { fetchUserStats () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { android.util.Log.d ( com.zhan.budget.Adapter.CategorySection.TAG, ( "on click : " + ( getLayoutPosition () ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( mListener ) != null ) { mListener.onClick ( getLayoutPosition () ) ; } } 
private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { try { outputDisplay.setEditable ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } outputDisplay.setFocusable ( false ) ; outputDisplay.setContentType ( "text/html" ) ; outputDisplay.putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES, true ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { myCallback.openDialog ( "Link Character", getGameId ( listAllGames.getSelectedIndex () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { cn.shyman.library.picture.picker.SPPicker.picker () .count ( 1 ) .compress ( 80 ) .build ( this, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int fillbuf () throws java.io.IOException { try { super.seek ( bufstartpos ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bufdirty = false; return super.read ( buf, 0, bufsize ) ; } 
public void onLoaded () { if ( this.worldObj.isRemote ) { return; } try { this.addedToEnergyNet = ! ( MinecraftForge.EVENT_BUS.post ( new ic2.api.energy.event.EnergyTileLoadEvent ( this ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.loaded = true; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; addPreferencesFromResource ( R.xml.pref_general ) ; try { bindPreferenceSummaryToValue ( findPreference ( getString ( R.string.pref_location_key ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bindPreferenceSummaryToValue ( findPreference ( getString ( R.string.pref_temperature ) ) ) ; } 
public static void main ( java.lang.String[] args ) { try { if ( args[0].equals ( "-" ) ) BurrowsWheeler.transform () ; else if ( args[0].equals ( "+" ) ) BurrowsWheeler.inverseTransform () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { adapter = new edu.ucsb.cs.cs185.afarcilla.senioritis.RecycleAdapter ( myDataset ) ; try { c.runOnUiThread ( new java.lang.Runnable () { @java.lang.Override public void run () { recyclerView.setAdapter ( adapter ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void createNewGame () { resetChessBoardToNewGame () ; try { resetJudgeToNewGame ( chessBoard ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } notifyGameEventListener () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { if ( superClassManager.saveSubject ( subjectDialog, rootView, false, true, false ) ) { superClassManager.startNewDetailPage () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.eclipse.jetty.websocket.api.annotations.OnWebSocketConnect public void onConnect ( org.eclipse.jetty.websocket.api.Session session ) { try { clientID = com.roboclub.robobuggy.jetty.gui.WSHandler.sgm.addSessionToGroup ( "unsorted", session ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected java.lang.String getType ( java.io.File file ) { if ( file.isDirectory () ) { return "Folder"; } java.lang.String extension = getExtension ( file ) ; try { if ( extension != null ) { return extension.toLowerCase () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return "File"; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.menu_book_edit_save: if ( saveBook () ) { finish () ; } break; default: break; } } catch ( Exception ex ) { ex.printStackTrace () ; } return super.onOptionsItemSelected ( item ) ; } 
private void selectNetPlanViewItem ( com.net2plan.internal.Constants.NetworkElementType type, java.lang.Object itemId ) { topologyPanel.updateLayerChooser () ; try { viewEditTopTables.selectViewItem ( type, itemId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.terasology.entitySystem.event.ReceiveEvent ( components = org.terasology.network.ClientComponent.class ) public void onToggleChat ( org.terasology.input.binds.general.ChatButton event, org.terasology.entitySystem.entity.EntityRef entity ) { try { if ( ( event.getState () ) == ( org.terasology.input.ButtonState.DOWN ) ) { nuiManager.pushScreen ( org.terasology.logic.chat.ChatSystem.CHAT_UI ) ; overlay.setVisible ( false ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setUpTestDuration () { android.widget.TextView mDuration = ( ( android.widget.TextView ) ( findViewById ( R.id.duration ) ) ) ; try { mDuration.setText ( getString ( R.string.test_duration, mTest.getDurationToDisplay () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private synchronized void stop () { com.princecoder.nanodegree.spotifytreamer.utils.L.m ( LOG_TAG, "stop" ) ; try { if ( isPrepared ) { isPrepared = false; StopProgressBar () ; mp.stop () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void ElbonianToArabicSampleTest () throws converter.exceptions.MalformedNumberException, converter.exceptions.ValueOutOfBoundsException { converter.ElbonianArabicConverter converter = new converter.ElbonianArabicConverter ( "1111" ) ; try { org.junit.Assert.assertEquals ( "MCXI", converter.toElbonian () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onTagDiscovered ( android.nfc.Tag tag ) { try { android.util.Log.i ( com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, ( "onTagDiscovered " + tag ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } savedTag = tag; handleTag () ; } 
public void moveInto ( spirite.image_data.GroupTree.Node nodeToMove, spirite.image_data.GroupTree.GroupNode nodeInto ) { groups.moveInto ( nodeToMove, nodeInto, false ) ; try { alertStructureChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setHeader ( java.lang.String key, java.lang.Object value ) { try { httpHeaders.put ( key, value.toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected org.eclipse.core.runtime.IStatus run ( org.eclipse.core.runtime.IProgressMonitor monitor ) { if ( resources.isEmpty () ) return org.eclipse.core.runtime.Status.CANCEL_STATUS; try { scheduleDeleteJob ( resources ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return org.eclipse.core.runtime.Status.OK_STATUS; } 
@ java.lang.Override public tr.edu.hacettepe.document.Document next () { try { document = nextDoc () ; } catch ( Exception ex ) { ex.printStackTrace () ; } tr.edu.hacettepe.document.Document tmp = document; return tmp; } 
@ java.lang.Override public void dispose () { this.shader.dispose () ; try { this.mesh.dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( this.frameBuffer ) != null ) { this.frameBuffer.dispose () ; } } 
public void delete ( int[] data ) { if ( data.equals ( null ) ) { } else { for ( int x : data ) { map[x] = 0 + ""; } } try { draw ( map ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void flush () { session.execute ( batch ) ; try { batch.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } count = 0; } 
public void display2ndLine ( java.lang.String line ) { final java.lang.String lineFixed = fixLineValue ( line ) ; try { if ( ! ( this.previousLine2.equals ( lineFixed ) ) ) { displayLine ( 1, lineFixed, false ) ; this.previousLine2 = lineFixed; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.yydcdut.note.utils.ActivityCollector.removeActivity ( this ) ; if ( ( mIPresenter ) != null ) { mIPresenter.detachView () ; } } 
public void removeCalendarEventProvider ( org.wilson.world.festival.CalendarEventProvider provider ) { try { if ( ( provider != null ) && ( ( provider.getName () ) != null ) ) { this.providers.remove ( provider.getName () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void refreshData () { try { if ( ( adapter ) != null ) { adapter.removeAll () ; progressBar.setVisibility ( View.VISIBLE ) ; startService () ; adapter.notifyDataSetChanged () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void decorateShape ( org.eclipse.graphiti.features.context.IAddContext context, org.eclipse.graphiti.mm.pictograms.ContainerShape containerShape, org.eclipse.bpmn2.Task businessObject ) { try { super.decorateShape ( context, containerShape, businessObject ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setFillColor ( containerShape ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { com.example.admin.a1_workout.ui.WorkoutActivity.startActivity ( this, holder.getAdapterPosition () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public final void GivenLeftNumberIsOne_ResultShouldBeRightNumber () throws com.sun.javaws.exceptions.InvalidArgumentException { Igor.GiveNumbers ( 1, 42 ) ; Igor.PerformCalculations () ; try { org.junit.Assert.assertEquals ( "42", Igor.Notebook.Result () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void stopCamera () { try { if ( ( mCamera ) != null ) { mCamera.stopPreview () ; mCamera.release () ; mCamera = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean addTestExecution ( de.fhbingen.wbs.dbaccess.data.TestExecution te ) { boolean result = de.fhbingen.wbs.dbaccess.DBModelManager.getTestExecutionModel () .addNewTestExecution ( te ) ; try { de.fhbingen.wbs.dbaccess.repositories.TestCaseExecutionRepository.reloadCache () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
public synchronized void onEachIteration ( org.group17.Map.GameMap gmMap, double dTimePerFrame ) { jump ( gmMap ) ; try { accelerateHorizontal ( gmMap, dTimePerFrame ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } bubble ( gmMap ) ; } 
@ org.junit.Before public void setUp () throws java.lang.Exception { game = new clueGame.ClueGame () ; try { game.loadConfigFiles () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { super.onDestroy () ; try { if ( ( timer ) != null ) timer.cancel () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.jchingdev.squares.singleplayer.Chartboost.onDestroy ( this ) ; } 
@ java.lang.Override public void doClose () { if ( ( sharedSftpClient ) != null ) { disconnectSftp ( sharedSftpClient ) ; sharedSftpClient = null; } try { super.doClose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item.getItemId () ) { case R.id.action_search: intentSearchActivity () ; return true; default: return super.onOptionsItemSelected ( item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.util.Map<java.lang.Integer, java.lang.Character> getSeqChars ( int id ) { try { if ( ! ( graph.setCurrent ( id ) ) ) return null; } catch ( Exception ex ) { ex.printStackTrace () ; } return new java.util.HashMap ( graph.getSequenceCharacterMapping () ) ; } 
private void launch () { sml.TranslatorTest t = new sml.TranslatorTest () ; try { t.getInstruction ( "div" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
org.cojen.tupl.TreeCursorFrame pop () { try { unbind ( null ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.cojen.tupl.TreeCursorFrame parent = mParentFrame; mNode = null; mParentFrame = null; mNotFoundKey = null; return parent; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this, net.biospherecorp.microdoro.MyPreferenceActivity.class ) ; try { startActivityForResult ( intent, 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static boolean shouldProcess ( java.lang.String uri ) { if ( ( eu.leads.ProcessingFilterSingleton.filter ) == null ) return true; try { for ( java.lang.String f : eu.leads.ProcessingFilterSingleton.filter ) { if ( uri.startsWith ( f ) ) { return true; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public alexeychurchill.github.io.bresenhamlines.graphics.primitives.Point transformPoint ( alexeychurchill.github.io.bresenhamlines.graphics.primitives.Point point ) { alexeychurchill.github.io.bresenhamlines.graphics.primitives.Point newPoint = point; try { for ( alexeychurchill.github.io.bresenhamlines.graphics.transforms.Transform transform : transforms ) { newPoint = transform.transform ( newPoint ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return newPoint; } 
private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { try { recoleccionDatosVentana () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void onCreate ( android.os.Bundle bundle ) { super.onCreate ( bundle ) ; try { setContentView ( R.layout.sorusayfasi ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } tanimlar () ; hangisorudasin = 1; soruyugetir ( hangisorudasin ) ; } 
@ BeforeMethod public void setup () { DynamicTagTests.message = ( core.Utilities.randomWord () ) + ( core.Utilities.randomWord () ) ; try { DynamicTagTests.word = core.Utilities.randomWord () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addHashTag ( java.lang.String hashtag ) { java.util.Set<java.lang.String> hashtags = new java.util.HashSet<java.lang.String> ( getHashTags () ) ; try { hashtags.add ( hashtag ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setHashTags ( hashtags ) ; } 
@ java.lang.Override protected void onDetachedFromWindow () { super.onDetachedFromWindow () ; try { requestVisualizer ( false, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void printAllPlayersResignedMessage () { try { java.lang.System.out.println ( "Game Over" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.System.out.println ( ( ( "The winner is " + ( ConsoleUI.gameEngine.getCurrentPlayerName () ) ) + " due to all other players resignment" ) ) ; ConsoleUI.printGameStatistics () ; } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { try { setScreen () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setPlayerControls () ; setSongProgressSeekbar () ; setAlbumCoverImage () ; } 
public void onLocationChanged () { try { updateWeather () ; } catch ( Exception ex ) { ex.printStackTrace () ; } restartLoader () ; } 
@ java.lang.Override public void showContacts ( int currentPage, java.util.List<com.belatrixsf.allstars.entities.Employee> contacts ) { try { contactsListAdapter.updatePaginationData ( contacts ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { try { this.elements.add ( element ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addCell ( application.fxobjects.graph.cell.Cell cell ) { try { if ( ! ( cellMap.containsKey ( cell.getCellId () ) ) ) { addedCells.add ( cell ) ; cellMap.put ( cell.getCellId () , cell ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { switch ( v.getId () ) { case R.id.btn_addcompany: addCompany () ; break; case R.id.btn_add_category: addCategory () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onTopic ( java.lang.String channel, java.lang.String topic, java.lang.String setBy, long date, boolean changed ) { try { super.onTopic ( channel, topic, setBy, date, changed ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void importKey ( java.io.InputStream key ) throws java.io.IOException { try { runGPG ( java.util.Arrays.asList ( "--import" ) , key ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void updateEventHandlers ( java.util.List<buildcraft.transport.PipeEventBus.EventHandler> eventHandlerList ) { try { java.util.Collections.sort ( eventHandlerList, buildcraft.transport.PipeEventBus.COMPARATOR ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void callback ( java.lang.String url, android.widget.ImageView iv, android.graphics.Bitmap bm, com.androidquery.callback.AjaxStatus status ) { try { aq.id ( iv ) .image ( com.florianmski.tracktoid.Utils.roundBitmap ( bm ) ) .animate ( android.R.anim.fade_in ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void sendNotification ( org.linagora.linshare.core.domain.objects.MailContainerWithRecipient mailContainer ) throws org.linagora.linshare.core.exception.BusinessException { try { this.sendNotification ( com.google.common.collect.Lists.newArrayList ( mailContainer ) , false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void delete ( com.tpjad.project.entity.Category category ) { com.tpjad.project.entity.Category categoryToDelete = entityManager.merge ( category ) ; try { entityManager.remove ( categoryToDelete ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void createButtons () { try { refreshButton = ( ( android.widget.Button ) ( findViewById ( R.id.refresh_button ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.view.View addButton = findViewById ( R.id.add_button ) ; } 
@ java.lang.Override public synchronized void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { try { newRoundResult = java.util.Arrays.asList ( event.getTurnSnapshot () .getRobots () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { try { onGUIOptionChanged () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main () { int a = 10; int b = 11; int c = org.tlsys.Main.get ( 1, 2 ) ; try { org.tlsys.Main.giveException () ; } catch ( Exception ex ) { ex.printStackTrace () ; } new org.tlsys.Main () ; return; } 
@ java.lang.Override public void autowire ( java.lang.Object sourceFromContainer ) { java.lang.String s = org.mentacontainer.util.InjectionUtils.getKeyName ( sourceFromContainer ) ; try { autowireBySetter ( s, s ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } autowireByConstructor ( s ) ; } 
public void stashDataEntry ( com.codebrig.jvmmechanic.agent.stash.DataEntry dataEntry ) throws java.io.IOException { fileChannel.position ( fileChannel.size () ) ; try { fileChannel.write ( dataEntry.toByteBuffer () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javafx.fxml.FXML void onSendToServerButtonClicked () { fleetSetupButton.setDisable ( true ) ; socketClient.sendStringToServer ( game.getShipPlacementForServer () ) ; try { game.buildOpponentsBoard ( new com.spanish_inquisition.battleship.client.board.boardcontroller.OpponentBoardController ( new com.spanish_inquisition.battleship.client.board.GameBoard ( opponentsGridPane ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void getToken () throws java.io.IOException { try { getToken ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void show () { try { Gdx.input.setCursorCatched ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } Gdx.input.setInputProcessor ( world.player.controller ) ; world.music ( true ) ; } 
@ java.lang.Override protected org.apache.ignite.configuration.IgniteConfiguration getConfiguration ( java.lang.String gridName ) throws java.lang.Exception { org.apache.ignite.configuration.IgniteConfiguration cfg = super.getConfiguration ( gridName ) ; try { cfg.setCacheConfiguration ( cacheConfiguration () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return cfg; } 
public void createGameObjects () { gamesToday = new java.util.ArrayList<Game> () ; try { for ( java.lang.String s : gameAddresses ) { gamesToday.add ( new Game ( s ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addContact ( java.lang.String name, java.lang.String phone, java.lang.String address ) { try { cl.addContact ( name, phone, address ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.sql.ResultSet getResultSet ( java.lang.String sqlstatement ) throws java.sql.SQLException { try { infs2605.assignment.DBController.openConnection () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.sql.Statement statement = infs2605.assignment.DBController.conn.createStatement () ; java.sql.ResultSet RS = statement.executeQuery ( sqlstatement ) ; return RS; } 
public static void assertEvalString ( java.lang.String script, java.lang.String expected ) { try { org.junit.Assert.assertEquals ( script, expected, org.libj.xquery.Compiler.eval ( script ) .toString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { com.roigreenberg.easyshop.MainActivity.ShareList ( v.getContext () , userId, listId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void profileClick ( android.view.View view ) { try { startActivity ( new android.content.Intent ( this, android.duke290.com.loco.ProfileActivity.class ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface, int which ) { try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } dialog = null; } 
public void onMuxOpen ( int channelId, org.eclipse.jetty.websocket.mux.MuxConnection connection ) { try { if ( ( _onControl ) != null ) { _onControl.onOpen ( connection ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void changed ( com.couchbase.lite.replicator.Replication.ChangeEvent event ) { try { if ( ( ( event.getTransition () ) != null ) && ( ( event.getTransition () .getDestination () ) == ( com.couchbase.lite.replicator.ReplicationState.IDLE ) ) ) { idleSignal.countDown () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private boolean setShareIntent ( android.content.Intent shareIntent ) { try { if ( ( mShareActionProvider ) != null ) { mShareActionProvider.setShareIntent ( shareIntent ) ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { try { super.onReceive ( context, intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.view.View v ) { java.lang.String loginString = loginTxt.getText () .toString () ; try { _mClickListener.onLogInClick ( loginString ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void write ( final char character, final int columnIndex, final int rowIndex ) { try { if ( isPositionValid ( columnIndex, rowIndex ) ) { strings[rowIndex].setCharacter ( columnIndex, character ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void init () { setLayout ( new java.awt.BorderLayout () ) ; add ( ca.vanzeben.game.GameLauncher.game, java.awt.BorderLayout.CENTER ) ; setMaximumSize ( Game.DIMENSIONS ) ; setMinimumSize ( Game.DIMENSIONS ) ; try { setPreferredSize ( Game.DIMENSIONS ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ca.vanzeben.game.GameLauncher.game.isApplet = true; } 
@ org.junit.Test public void testDeleteSessionByUserWhenSessionIsValidAndUserIsNotNull () throws gr.devian.talosquests.backend.Exceptions.TalosQuestsNullArgumentException { try { sessionService.delete ( testUserWithSession ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertNull ( sessionService.getByUser ( testUserWithSession ) ) ; } 
@ java.lang.Override public void setIndependentSeries ( org.eclipse.ice.viz.service.ISeries series ) { super.setIndependentSeries ( series ) ; try { getSource () .setIndependentSeries ( series ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } independentProxy = createProxySeries ( series ) ; loaded = false; getSource () .redraw () ; } 
private void assertBlockRule ( bamboo.task.Document doc, java.lang.String url, bamboo.trove.common.DocumentStatus status ) throws CdxRestrictionService.RulesOutOfDateException { try { setUrl ( doc, url ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } assertEquals ( status, bamboo.trove.services.CdxRestrictionServiceTest.service.filterDocument ( doc ) .getIndexerPolicy () ) ; } 
protected void prepare () throws java.io.IOException { try { if ( ( mState ) < ( com.tanosys.videolibrary.MediaDecoder.STATE_PREPARED ) ) { mState = com.tanosys.videolibrary.MediaDecoder.STATE_PREPARED; } else { configure () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void add ( java.util.List list, net.minecraft.block.Block block ) { try { if ( block != null ) { block.getSubBlocks ( net.minecraft.item.Item.getItemFromBlock ( block ) , this, list ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { try { super.onDestroy () ; } catch ( Exception ex ) { ex.printStackTrace () ; } unregisterReceiver ( mMyReceiver ) ; unregisterReceiver ( mSecondReceiver ) ; if ( ( mLocalBroadcastManager ) != null ) { mLocalBroadcastManager.unregisterReceiver ( mThirdReceiver ) ; } } 
@ java.lang.Override public boolean commitText ( java.lang.CharSequence text, int newCursorPosition ) { boolean result = super.commitText ( text, newCursorPosition ) ; try { updateEditingState () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return result; } 
@ java.lang.Override public void perform () { java.lang.Runnable runnable = new java.lang.Runnable () { @java.lang.Override public void run () { performClick () ; } }; try { if ( ! ( this.post ( runnable ) ) ) { performClick () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.String toMoveString () { try { switch ( getActing () ) { case 1: return null; case 2: return null; case 3: return null; default: return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void accessError () { try { android.widget.Toast.makeText ( getApplicationContext () , getResources () .getString ( R.string.accessErorr ) , Toast.LENGTH_LONG ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { com.westonbelk.groupme_reminder_bot.Bot[] bots = com.westonbelk.groupme_reminder_bot.Server.LoadBots () ; try { for ( com.westonbelk.groupme_reminder_bot.Bot bot : bots ) { bot.createReminders () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public V put ( V value ) { try { if ( value != null ) { if ( ! ( lastMetCache.add ( value ) ) ) { lastMetCache.remove ( value ) ; lastMetCache.add ( value ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
private void dismissProgressDialog () { webView.setVisibility ( View.VISIBLE ) ; try { progressBar.setVisibility ( View.INVISIBLE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private static void init () { xdb.TimeSeriesDB2.checkDir ( xdb.TimeSeriesDB2.db ) ; try { xdb.TimeSeriesDB2.conn = wiredtiger.open ( xdb.TimeSeriesDB2.db, "create" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void doQuery ( int queryNumber ) throws java.lang.InterruptedException { StopWatch sw = new StopWatch () ; sw.start () ; try { java.lang.Thread.sleep ( this.queryTime ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onLoadProductsFail () { try { if ( ( getContext () ) != null ) { android.widget.Toast.makeText ( getContext () , R.string.products_load_fail, Toast.LENGTH_SHORT ) .show () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.content.DialogInterface dialog, int id ) { try { dialog.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } 
@ java.lang.Override public void onChildAdded ( com.google.firebase.database.DataSnapshot dataSnapshot, java.lang.String s ) { com.namclu.android.bloquery.api.model.Question question = dataSnapshot.getValue ( com.namclu.android.bloquery.api.model.Question.class ) ; try { mQuestionAdapter.addQuestion ( question ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void setTitle ( java.lang.CharSequence title ) { try { super.setTitle ( title ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( title != null ) && ( ( getDefualtToolbar () ) != null ) ) { getDefualtToolbar () .setTitle ( title.toString () ) ; } } 
public void test_sum () { addActivity = ( ( com.example.andrew.lab3add.Add ) ( getActivity () ) ) ; int a = 1; int b = 2; try { assertEquals ( ( a - b ) , addActivity.sum ( a, b ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String[] arr = getResources () .getStringArray ( R.array.suggestions ) ; searchView.saveSuggestions ( arr ) ; } 
public void increaseBeerCount () { ( mBeerCount ) ++; mTotalBeersTextView.setText ( getString ( R.string.beers_had, mBeerCount ) ) ; try { updateBAC () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void visitComponent ( @android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { try { result.addAll ( component.getFeatures ( this ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private int deshacer () { try { if ( pilaMovimientos.empty () ) { deshacerPila = false; return 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } int aux = pilaMovimientos.pop () ; return aux; } 
@ java.lang.Override public void handle ( long now ) { try { core.accept ( drawer ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } h.accept ( drawer ) ; } 
public void addChat ( java.lang.String chatId ) { if ( ( chats ) == null ) { chats = new java.util.ArrayList<> () ; } try { chats.add ( chatId ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } project.sherpa.utilities.FirebaseProviderUtils.insertOrUpdateModel ( this ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState, android.os.PersistableBundle persistentState ) { try { super.onCreate ( savedInstanceState, persistentState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( getLayoutResource () ) ; } 
@ java.lang.Override public void visitWater ( com.wecanteven.Visitors.Water water ) { try { this.setCanMove ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } visitedCurrent = false; } 
@ java.lang.Override public void save () { try { super.save () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected com.tinkerpop.blueprints.impls.orient.OrientBaseGraph setCurrentGraphInThreadLocal () { final com.tinkerpop.blueprints.impls.orient.OrientBaseGraph graph = getGraph () ; try { if ( graph != null ) graph.setCurrentGraphInThreadLocal () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return graph; } 
public boolean bluetoothStateOn ( android.content.Intent intent ) { int newState = mBluetoothAdapter.getState () ; try { if ( newState == ( android.bluetooth.BluetoothAdapter.STATE_ON ) ) { progress.dismiss () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ org.junit.Before public void init () { this.client = javax.ws.rs.client.ClientBuilder.newBuilder () .build () ; try { this.rut = client.target ( com.philipp.serviceregistry.boundary.test.ServiceBoundaryTest.RUT_URI ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void tick () { try { for ( int i = 0; i < ( object.size () ) ; i++ ) { com.TwodTutorial.main.GameObject tempObject = object.get ( i ) ; tempObject.tick () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { mListener.onListItemSelectedListener ( index ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onMapBackgroundTouch () { try { raceVM.onMapBackgroundTouch () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife.bind ( this ) ; } 
private static double entropy ( java.util.ArrayList<java.lang.Double> p ) { double sum = 0; try { for ( double i : p ) { if ( i > 0 ) sum -= i * ( controllers.classification.ID3.log2 ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return sum; } 
private static void displayGreeting ( java.lang.String name ) { try { java.lang.System.out.println ( ( ( "Hello, " + name ) + "!" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void postOrderTraversal ( Node n ) { if ( n == null ) { return; } postOrderTraversal ( n.getLeftChild () ) ; postOrderTraversal ( n.getRightChild () ) ; try { java.lang.System.out.println ( n.getData () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree.checkNull ( p ) ; try { root = put ( null, root, p ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void moveTask ( com.druger.refresher.models.ModelTask task ) { try { alarmHelper.removeAlarm ( task.getTimeStamp () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( onTaskDoneListener ) != null ) { onTaskDoneListener.onTaskDone ( task ) ; } } 
private void setGrid () { layoutManager = new android.support.v7.widget.GridLayoutManager ( activity, 2 ) ; recyclerView.setLayoutManager ( layoutManager ) ; try { recyclerView.setAdapter ( photoAdapter ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
long stop () { try { if ( ( mStartTime ) != ( -1 ) ) { mElapsedTime += ( java.lang.System.currentTimeMillis () ) - ( mStartTime ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mStartTime = -1; return mElapsedTime; } 
private void openPDFView ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c, io.github.antishake.TextReader.class ) ; try { i.putExtra ( "Path", path ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } c.startActivity ( i ) ; } 
@ java.lang.Override public void removedEventStream ( int tenantId, java.lang.String streamName, java.lang.String streamVersion ) { try { if ( null != ( org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder.getEventProducerMap ( tenantId ) ) ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder.getEventProducerMap ( tenantId ) .remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils.generateStreamId ( streamName, streamVersion ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void nextSingle ( int token ) { this.token = token; try { source.nextChar () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.jetbrains.annotations.Nullable @java.lang.Override public nl.runnable.spring.fileupload.StoredMultipartFile find ( @org.jetbrains.annotations.NotNull java.lang.String id ) { org.springframework.util.Assert.hasText ( id, "ID cannot be empty." ) ; nl.runnable.spring.fileupload.StoredMultipartFile file = storage.find ( id ) ; try { if ( isBoundToSession ( file ) ) { return file; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void deleteStrings () { try { com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.ztitle.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void paintComponent ( java.awt.Graphics graph ) { java.awt.Graphics2D graph2D = ( ( java.awt.Graphics2D ) ( graph ) ) ; try { this.view.draw ( graph ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean placeOn ( iitema.gypsypokemon.elements.Direction dir, iitema.gypsypokemon.elements.blocks.ItemInterface item ) { try { if ( super.placeOn ( dir, item ) ) { this.door.open () ; return true; } } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
public void dropCollection ( java.lang.String collectionName ) { try { if ( db.getCollectionNames () .contains ( collectionName ) ) { db.getCollection ( collectionName ) .drop () ; mongoDBCollections.remove ( collectionName ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.content.DialogInterface dialog, int id ) { try { cancelAlarm ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ boa.functions.FunctionSpec ( name = "isenhancedfor", returnType = "bool", formalParameters = { "Statement" } ) public static boolean isEnhancedFor ( final boa.functions.Statement s ) throws java.lang.Exception { try { if ( ( s.getKind () ) != ( boa.types.Ast.Statement.StatementKind.FOR ) ) return false; } catch ( Exception ex ) { ex.printStackTrace () ; } return s.hasVariableDeclaration () ; } 
@ org.testng.annotations.BeforeMethod public void setUp () { try { root.getLoggerContext () .reset () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.testng.AssertJUnit.assertFalse ( loci.common.DebugTools.isEnabled () ) ; } 
private void enableChat ( boolean enable ) { this.enableChat = enable; try { writeConfig () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { try { this.preferences.setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { fam.close ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.me.squad.bankop.AddTransactionActivity.class ) ; startActivity ( i ) ; } 
ru.spbau.mit.StringSetImpl.StringSetEntry addEntry ( char letter, boolean isLastLetter ) { ru.spbau.mit.StringSetImpl.StringSetEntry e = new ru.spbau.mit.StringSetImpl.StringSetEntry ( this, isLastLetter ) ; try { next.set ( getIndex ( letter ) , e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( numberOfSuccessors ) ++; return e; } 
private void render ( com.jogamp.opengl.GLAutoDrawable drawable ) { try { for ( Object3D object : objects ) object.render ( drawable ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void showDocument ( @android.support.annotation.NonNull android.net.Uri documentUri, @android.support.annotation.Nullable final java.lang.String password, @android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration, @android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri, password, configuration ) ; try { callbackContext.success () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.PostMapping ( value = "/" ) public java.lang.String checkPersonInfo ( @javax.validation.Valid com.cts.day1.controllers.model.Product product, org.springframework.validation.BindingResult bindingResult ) { try { if ( bindingResult.hasErrors () ) { return "index"; } } catch ( Exception ex ) { ex.printStackTrace () ; } respository.save ( product ) ; return "success"; } 
private void getJoke () { try { currentJoke = jokes.get ( randIndex () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onAnimationEnd () { try { if ( ( mIconComplete ) != 0 ) { setText ( null ) ; setIcon ( mIconError ) ; } else { setText ( mErrorText ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } mMorphingInProgress = false; mState = com.dd.CircularProgressButton.State.ERROR; } 
public int getCurrent () { java.lang.String str = java.lang.String.valueOf ( ( ( android.widget.TextView ) ( mText ) ) .getText () ) ; try { validateCurrentView ( str, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return mCurrent; } 
public void setConstraintsBounds ( com.wwidesigner.optimization.Constraints constraints ) throws java.lang.Exception { lowerBounds = constraints.getLowerBounds () ; try { upperBounds = constraints.getUpperBounds () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setConstraints ( constraints ) ; validateBounds () ; } 
@ java.lang.Override public void run () { try { if ( null != callback ) { callback.onSuccess ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { try { changeType ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { mplayer.play ( originalFile ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void init ( com.alex.code.foundation.App app ) { try { com.alex.code.foundation.di.component.DaggerAppComponent.create () .inject ( app ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void oneclick () { android.content.Intent camera = new android.content.Intent ( android.provider.MediaStore.ACTION_IMAGE_CAPTURE ) ; try { startActivityForResult ( camera, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void add ( int taskIndex, seedu.task.model.task.Task toAdd ) throws seedu.task.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null; try { if ( contains ( toAdd ) ) { throw new seedu.task.model.task.UniqueTaskList.DuplicateTaskException () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } internalList.add ( taskIndex, toAdd ) ; } 
public java.util.List<hear.app.models.Article> getCacheArticles () { try { if ( ( mArticle ) == null ) { mArticle = new java.util.ArrayList ( hear.app.store.CollectedArticleStore.getInstance () .getArticles () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return mArticle; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/login", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String login ( com.hlz.webModel.UserModel user ) { try { if ( ( service.login ( user ) ) != null ) { return "redirect:/"; } else { return "login"; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { setContentView ( R.layout.activity_search_results ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } db = new com.example.raqib.instadate.DatabaseTableForSearch ( this ) ; android.util.Log.e ( "Hello", "Search Is Working1" ) ; handleIntent ( getIntent () ) ; } 
public autoParker.AutoParkImpl.PositionStatus moveForward () { street[ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1; try { positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return positionStatus; } 
@ java.lang.Override public void onError ( int error ) { try { android.util.Log.e ( nl.dobots.crownstone.gui.control.ControlMainFragment.TAG, ( "failed to connect/discover: " + error ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } dlg.dismiss () ; if ( ( getActivity () ) != null ) { getActivity () .finish () ; } } 
public void setTime ( int count ) { try { if ( count < 0 ) { lblTimer.setText ( "" ) ; } else { lblTimer.setText ( ( "" + count ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void draw ( android.graphics.Canvas canvas, com.nextgis.maplib.map.MapDrawable mapDrawable ) { try { if ( ( mMapPoint ) != null ) { mOverlayPoint.setCoordinates ( mMapPoint ) ; drawOverlayItem ( canvas, mOverlayPoint ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initXmlList () { try { for ( int i = 0; i < ( folder.size () ) ; i++ ) { xmlList.add ( null ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.deeplearning4j.nn.updater.aggregate.UpdaterAggregator call ( org.deeplearning4j.nn.updater.aggregate.UpdaterAggregator updaterAggregator, org.deeplearning4j.nn.updater.aggregate.UpdaterAggregator updaterAggregator2 ) throws java.lang.Exception { if ( updaterAggregator == null ) return updaterAggregator2; else if ( updaterAggregator2 == null ) return updaterAggregator; try { updaterAggregator.merge ( updaterAggregator2 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return updaterAggregator; } 
public void onView ( final com.qcadoo.mes.masterOrders.hooks.DataDefinition masterOrderProductDD, final com.qcadoo.mes.masterOrders.hooks.Entity masterOrderProduct ) { countCumulativeOrderQuantity ( masterOrderProduct ) ; try { fillRegisteredQuantity ( masterOrderProduct ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } calculateLeftToRelease ( masterOrderProduct ) ; } 
private void createContent ( org.eclipse.swt.widgets.Composite parent ) { this.setLayout ( new org.eclipse.swt.layout.FormLayout () ) ; this.createHeader () ; try { this.createRows () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { try { DRIVE.arcadeDrive ( ( - ( joy.getRawAxis ( 1 ) ) ) , ( - ( joy.getRawAxis ( 0 ) ) ) , true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ butterknife.OnClick ( value = R.id.sign_up_tv ) public void signUp () { try { startActivity ( new android.content.Intent ( this, com.geekhub.choosehelper.screens.activities.SignUpActivity.class ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testSetDeliveryAddress () { try { assertEquals ( com.netbuilder.entities.CustomerOrderTest.test.getDeliveryAddress () , "adddess1244" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent event ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13, event ) ; try { sernet.verinice.iso27k.rcp.JobScheduler.scheduleInitJob ( updateGroups ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void update ( java.util.concurrent.CopyOnWriteArrayList<main.Block> blocks ) { this.blocks = blocks; checkGoldTouch ( blocks ) ; movePlayer ( blocks ) ; try { if ( checkIfOutside ( blocks ) ) resetPosition ( blocks ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { try { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener.extensionRemoved ( extension ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setintakeLifter ( double angle ) { pidController.setSetpoint ( angle ) ; try { java.lang.System.out.println ( potentiometer.get () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSuccess () { if ( ! ( view.isActive () ) ) { return; } loadData ( true ) ; try { view.showSuccessfullyDeletedMessage () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void startRecording () { log.info ( "Start recording" ) ; try { scaledDistanceFilter = config.getDistanceFilter () ; } catch ( Exception ex ) { ex.printStackTrace () ; } setPace ( true ) ; } 
@ java.lang.Override public io.subutai.common.peer.Peer call () throws java.lang.Exception { try { peer.createPeerEnvironmentKeyPair ( environment.getEnvironmentId () ) .getKey () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return peer; } 
@ java.lang.Override public void initializeGoApplicationAccessor ( com.thoughtworks.go.plugin.api.GoApplicationAccessor goApplicationAccessor ) { this.goApplicationAccessor = goApplicationAccessor; try { this.handlers = componentFactory.handlers () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public int getCount () { try { if ( ( getmNumColums () ) == 0 ) { return 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } return ( mPhooItem.size () ) + ( getmNumColums () ) ; } 
public void clear () { players.clear () ; deadPlayers.clear () ; leftPlayers.clear () ; nameManuallySet = false; nameChanged = true; name = "Empty"; try { kills.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } deadPlayers.clear () ; } 
private void menuLoadContacts ( java.lang.String toastText ) { kobeissidev.autobirthday.Settings.loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast.makeText ( this, toastText, Toast.LENGTH_SHORT ) .show () ; finish () ; try { startActivity ( getIntent () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void setLogLevel ( com.ikalagaming.logging.LogLevel newLevel ) { try { if ( ! ( com.ikalagaming.logging.Logging.initialized ) ) { com.ikalagaming.logging.Logging.create () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } if ( newLevel == null ) { com.ikalagaming.logging.Logging.threshold = com.ikalagaming.logging.Logging.DEFAULT_THRESHOLD; } synchronized ( com.ikalagaming.logging.Logging.threshold ) { com.ikalagaming.logging.Logging.threshold = newLevel; } } 
private void changeFragment ( android.support.v4.app.Fragment targetFragment ) { resideMenu.clearIgnoredViewList () ; try { getSupportFragmentManager () .beginTransaction () .replace ( R.id.main_fragment, targetFragment, "fragment" ) .setTransitionStyle ( FragmentTransaction.TRANSIT_FRAGMENT_FADE ) .commit () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void display ( java.awt.Graphics g ) { size = 0; try { stackDisplay ( g, top () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testDeleteItemSuccessFail () { try { assertNotEquals ( "success", server.logic.tables.ItemTable.getInstance () .delete ( "7894563214563", "0" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public java.lang.String compute () { try { if ( ! ( aClass.isValid () ) ) { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } return aClass.getQualifiedName () ; } 
public void insert ( T node ) { nodes.add ( heapSize, node ) ; try { heapifyUp ( ( ( heapSize ) - 1 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( heapSize ) ++; } 
giant_galaxy.IFixedPriorityQueue kNearestNeighbours ( double[] pos, int k, dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; try { kNearestNeighbours ( pos, k, root, queue, metric ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return queue; } 
protected void assertBugsCount ( int expected, org.eclipse.core.resources.IProject project ) throws org.eclipse.core.runtime.CoreException { edu.umd.cs.findbugs.SortedBugCollection bugs = de.tobject.findbugs.FindbugsPlugin.getBugCollection ( project, null ) ; try { org.junit.Assert.assertEquals ( expected, bugs.getCollection () .size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addPoints ( java.lang.Long[] deltas ) { try { if ( deltas != null ) { for ( long delta : deltas ) { addPoint ( delta ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { emitter.onSuccess ( dataSnapshot ) ; try { emitter.onComplete () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public com.group5.bookmanager2.Models.Book createBook () { com.group5.bookmanager2.Models.Book book = new com.group5.bookmanager2.Models.Book () ; try { books.add ( book ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } saveChanges () ; return book; } 
@ java.lang.Override public void restart () throws java.io.IOException { try { this.getService () .stop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.getService () .start () ; } 
@ org.junit.Test public final void loopTest () { try { snd.loop ( 5 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.junit.Assert.assertTrue ( snd.isPlaying () ) ; } 
@ java.lang.Override public void onPause () { try { super.onPause () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void run () { isRunning = true; try { startLiveData () ; } catch ( Exception ex ) { ex.printStackTrace () ; } buttonStartStop.setBackgroundResource ( R.drawable.stop_68 ) ; } 
@ net.minecraftforge.fml.common.Mod.EventHandler public void load ( net.minecraftforge.fml.common.event.FMLInitializationEvent evt ) { try { MinecraftForge.EVENT_BUS.register ( com.irtimaled.bbor.forge.ForgeMod.proxy ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.irtimaled.bbor.forge.ForgeMod.proxy.init ( configManager ) ; } 
public void reset () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; try { repaint () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void buildFrame () { frame = new javax.swing.JFrame ( "Asteroid Dodger" ) ; try { frame.setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } frame.setLocationRelativeTo ( null ) ; frame.setExtendedState ( javax.swing.JFrame.MAXIMIZED_BOTH ) ; } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( mAskPermissionForLocation ) { askPermissionForLocation () ; } } 
public void next ( android.view.View view ) { try { if ( ( currenSongNumber ) < ( ( currentDirAllFiles.length ) - 1 ) ) { ( currenSongNumber ) ++; startPlaying ( currenSongNumber ) ; } else { currenSongNumber = 0; startPlaying ( currenSongNumber ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void show () { super.show () ; try { this.setupFocusCycle () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Void apply ( @org.jetbrains.annotations.Nullable java.lang.Void aVoid ) { try { notifyFinish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( loop ) pomodoro () ; return null; } 
@ java.lang.Override public void onNotificationClicked ( java.util.List<com.gimbal.android.Communication> communications ) { try { for ( com.gimbal.android.Communication communication : communications ) { if ( communication != null ) { addEvent ( "Communication Clicked" ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.context.annotation.Bean public org.springframework.core.task.AsyncTaskExecutor metadataRecorderTaskRunner () { org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor threadPoolTaskExecutor = new org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor () ; threadPoolTaskExecutor.setMaxPoolSize ( 1 ) ; try { threadPoolTaskExecutor.setCorePoolSize ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return threadPoolTaskExecutor; } 
public static void buildHats () { try { for ( cpw.mods.compactsolars.CompactSolarType typ : cpw.mods.compactsolars.CompactSolarType.values () ) { typ.buildHat () ; if ( net.minecraft.server.MinecraftServer.getServer () .isDedicatedServer () ) continue; typ.buildItemRenders () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onSurfaceTextureSizeChanged ( android.graphics.SurfaceTexture surface, int width, int height ) { try { com.aiyaapp.camera.sdk.base.Log.d ( "AnimE", "onSurfaceTextureSizeChanged" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getWindow () .setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setContentView ( R.layout.activity_user_login ) ; butterknife.ButterKnife.bind ( this ) ; } 
public void render ( uk.co.nickthecoder.jame.Surface display ) { uk.co.nickthecoder.jame.Rect screenRect = new uk.co.nickthecoder.jame.Rect ( 0, 0, display.getWidth () , display.getHeight () ) ; try { this.allViews.render ( display, screenRect, 0, 0 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void visualizeSubGraphList () { try { visualizeListOfGraphs ( getSubGraphList () , "p" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
de.uni_hamburg.informatik.swt.se2.kino.werkzeuge.barzahlung.Geldbetrag addiere ( de.uni_hamburg.informatik.swt.se2.kino.werkzeuge.barzahlung.Geldbetrag additionsBetrag ) { assert additionsBetrag != null : "Vorbedingung verletzt: additionsBetrag != null"; _euroBetrag += additionsBetrag.getEuroBetrag () ; _centBetrag += additionsBetrag.getCentBetrag () ; try { haendleCentUeberschuss ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ org.junit.Test public void aDeadCellShouldBeRepresentedByADot () { com.wakaleo.gameoflife.domain.Cell cell = com.wakaleo.gameoflife.domain.Cell.fromSymbol ( "." ) ; try { org.hamcrest.MatcherAssert.assertThat ( cell, org.hamcrest.Matchers.is ( com.wakaleo.gameoflife.domain.Cell.DEAD_CELL ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void doBackendAuthorization ( java.lang.String code, com.predic8.membrane.core.interceptor.authentication.session.SessionManager.Session s ) { try { authCodesToSession.put ( code, s ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void move ( int amount, Adventure.Items.Item item, Adventure.Items.Inventory to ) { try { if ( to.add ( amount, item ) ) { remove ( amount, item ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void log ( org.gradle.api.logging.LogLevel logLevel, java.lang.Throwable throwable, java.lang.String format, java.lang.Object arg1, java.lang.Object arg2 ) { try { log ( logLevel, throwable, format, new java.lang.Object[] { arg1, arg2 } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void PrintAllStats () { try { java.lang.System.out.println () ; } catch ( Exception ex ) { ex.printStackTrace () ; } for ( int i = 0; i < ( playerList.size () ) ; i++ ) { playerList.get ( i ) .ViewCurrentStats () ; } java.lang.System.out.println () ; } 
@ java.lang.Override public void onFailure ( int statusCode, org.apache.http.Header[] headers, java.lang.Throwable throwable, org.json.JSONObject errorResponse ) { try { android.widget.Toast.makeText ( getActivity () , R.string.get_timeline_fail, Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ net.smartcosmos.dao.things.repository.Test public void findByIdAndTenantId () throws java.lang.Exception { try { assertTrue ( this.repository.findByIdAndTenantIdAndTypeIgnoreCase ( id, tenantId, type ) .isPresent () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void initiateParVector ( int numOfFeatures ) { try { for ( int i = 0; i < numOfFeatures; i++ ) { parVector.add ( 0.5 ) ; rewardFunction.featureValues.add ( new java.util.ArrayList<java.lang.Double> () ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void registrarConfusao ( knn.Classe expected, knn.Classe actual ) { try { ( this.matriz[ ( ( knn.Classe.toInt ( expected ) ) - 1 ) ][ ( ( knn.Classe.toInt ( actual ) ) - 1 ) ] ) ++; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static final opennlp.tools.namefind.NameFinderME peopleFinder ( java.io.File path ) throws java.io.FileNotFoundException, java.io.IOException, opennlp.tools.util.InvalidFormatException { try { if ( ( org.apache.manifoldcf.agents.transformation.opennlp.OpenNlpExtractorConfig.pModel ) == null ) org.apache.manifoldcf.agents.transformation.opennlp.OpenNlpExtractorConfig.initializeModel ( org.apache.manifoldcf.agents.transformation.opennlp.OpenNlpExtractorConfig.MODEL.PEOPLE, path ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return new opennlp.tools.namefind.NameFinderME ( org.apache.manifoldcf.agents.transformation.opennlp.OpenNlpExtractorConfig.pModel ) ; } 
public void dealFour () { models.Card tempCard = NULL; try { for ( i = 0; ( i ) ++; i = 4 ) { tempCard = getTopCard ( i ) ; addCardToCol ( i, tempCard ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkLocationServices ( final org.apache.cordova.CallbackContext callbackContext ) { try { if ( com.hypertrack.lib.HyperTrack.checkLocationServices ( this.cordova.getActivity () .getApplicationContext () ) ) { callbackContext.success ( "true" ) ; } else { callbackContext.success ( "false" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void init () throws java.lang.Exception { address.MainApp.logger.info ( "Initializing app ..." ) ; super.init () ; initConfig () ; initPrefs () ; try { initComponents () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void visitFalse ( nez.ast.jcode.JCodeTree p ) { try { this.mBuilder.push ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { try { android.util.Log.d ( com.cn6000.callrec.CallRecorderService.TAG, "service destory" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.stopRecording () ; this.cntx = null; super.onDestroy () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { setContentView ( R.layout.activity_main ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } initFeedButton () ; initFeedPanel () ; } 
@ java.lang.Override public void onDismiss ( android.content.DialogInterface dialog ) { mActiveStreamType = -1; mAudioManager.forceVolumeControlStream ( mActiveStreamType ) ; try { setZenPanelVisible ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mDemoIcon = 0; } 
@ java.lang.Override public void execute () { try { while ( true ) { t.read () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void initialize ( java.net.URL url, java.util.ResourceBundle rb ) { try { ner_first_arg.setItems ( first_arg ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } FIRST_initilize_drag () ; initilize_drag ( ner_relation ) ; initilize_drag ( ner_second_arg ) ; } 
public void addMessage ( com.taylorstubbs.whodischat.models.Message message ) { android.util.Log.d ( com.taylorstubbs.whodischat.adapters.MessageAdapter.TAG, "adding message" ) ; try { mMessages.add ( 0, message ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } notifyDataSetChanged () ; } 
@ org.junit.After public void tearDown () throws java.sql.SQLException { if ( ( xaconn ) != null ) { xaconn.close () ; } try { clearAllPrepared () ; } catch ( Exception ex ) { ex.printStackTrace () ; } org.postgresql.test.TestUtil.dropTable ( _conn, "testxa1" ) ; org.postgresql.test.TestUtil.closeDB ( _conn ) ; } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } timeRec = new de.mhid.android.timerecordingforpebble.TimeRecConnector ( this ) ; initEvents () ; messenger.initReceiver ( this ) ; android.util.Log.d ( this.getClass () .getName () , "onCreate () " ) ; } 
@ java.lang.Override public void visit ( com.tngtech.jgiven.report.model.ScenarioCaseModel scenarioCase ) { currentCase = scenarioCase; argumentsOfCurrentCase = com.google.common.collect.Lists.newArrayList () ; argumentMatrix.add ( new com.tngtech.jgiven.report.analysis.CaseArgumentAnalyser.CaseArguments ( argumentsOfCurrentCase ) ) ; allWordsOfCurrentCase = com.google.common.collect.Lists.newArrayList () ; try { allWords.add ( allWordsOfCurrentCase ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void write ( java.lang.String data ) { com.example.PlanIT.BluetoothService.ConnectedThread r; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread; } try { r.write ( data ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPause () { super.onPause () ; com.example.emile1.findaparty.Activity.MapStateManager mgr = new com.example.emile1.findaparty.Activity.MapStateManager ( getContext () ) ; try { if ( ( googleMap ) != null ) { mgr.saveMapState ( googleMap ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void debugPrint ( java.lang.String str, int p0, int p1, int p2, int p3, int p4 ) { try { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger.debug ( java.lang.String.format ( str, p0, p1, p2, p3, p4 ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onDestroy () { try { mViewModelHelper.onDestroy ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onDestroy () ; } 
@ java.lang.Override public void containerItemSetChange ( com.constellio.app.ui.framework.components.table.ItemSetChangeEvent event ) { try { cellProperties.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.containerItemSetChange ( event ) ; } 
private void setRedBorder () { try { java.lang.System.out.println ( "Border Color: Red" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void installHybrisArtifactsTest () { final java.io.File hybrisInstallationDirectory = com.divae.ageto.hybris.utils.EnvironmentUtils.getHybrisInstallationDirectory () ; final com.divae.ageto.hybris.install.InstallHybrisArtifacts installHybrisArtifacts = new com.divae.ageto.hybris.install.InstallHybrisArtifacts ( hybrisInstallationDirectory, getTempDirectory () , true ) ; try { installHybrisArtifacts.execute () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void showCellValue ( java.lang.String text ) { try { textArea.setText ( text ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public final void setChosen ( boolean chosen ) { this.chosen = chosen; try { if ( chosen ) { setScore ( scoreIfChosen ) ; } else { setScore ( scoreIfUnchosen ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void export ( java.lang.String path ) { java.util.Calendar c = java.util.Calendar.getInstance () ; c.set ( 0, 0, 0 ) ; try { export ( path, c.getTime () , new java.util.Date () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder, int format, int width, int height ) { try { android.util.Log.v ( com.android.camera.VideoUI.TAG, ( ( ( "surfaceChanged: width = " + width ) + ", height = " ) + height ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { try { processImageComplete () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void addItems ( java.util.ArrayList<Model.GameObject.Item.Item> items ) { for ( Model.GameObject.Item.Item i : items ) { if ( i != null ) { this.items.add ( i ) ; } } try { alert () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean remove ( java.lang.String element ) { if ( ! ( contains ( element ) ) ) return false; try { removePrefix ( element ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( size ) --; return true; } 
@ java.lang.Override public void act ( float delta ) { super.act ( delta ) ; moveInTheAir () ; com.badlogic.gdx.math.Vector2 velocity = myrddin.getLinearVelocity () ; try { if ( ( velocity.y ) == 0 ) myrddin.setMyrddinState ( new fr.imac.myrddin.game.myrddin.MyrddinIddle ( myrddin ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void minimize () { this.closeInfoWindow () ; try { this.setInfoWindow ( minimizedInfoWindow ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.showInfoWindow () ; } 
public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { try { this.bets.add ( bet ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.apache.felix.scr.annotations.Activate public void activate () { deviceListener = new org.onosproject.net.newresource.impl.ResourceDeviceListener ( adminService, deviceService, driverService, executor ) ; try { deviceService.addListener ( deviceListener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference, java.lang.Object newValue ) { try { if ( ( ( java.lang.Boolean ) ( newValue ) ) ) android.widget.Toast.makeText ( this.getActivity () , R.string.home_widget_change, Toast.LENGTH_SHORT ) .show () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override protected void dropFewItems ( boolean hitByPlayer, int lootingLvl ) { try { if ( SpiderCore.rand.nextBoolean () ) { dropItem ( net.minecraft.item.Item.getItemFromBlock ( ModBlocks.stinger ) , 1 ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setRecordCheck ( boolean in_recordcheck ) { recordcheck = in_recordcheck; try { mainfrag.pass_recordcheck ( in_recordcheck ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void focusGained ( java.awt.event.FocusEvent e ) { try { java.lang.System.out.println ( e ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } sketch.focused = true; sketch.focusGained () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/tbox/update", method = { org.springframework.web.bind.annotation.RequestMethod.POST } ) @org.springframework.web.bind.annotation.ResponseBody public void tboxUpdate ( java.lang.Integer id, java.lang.String name, java.lang.String data, java.lang.Integer delay ) { try { tboxService.updateTboxById ( id, name, data, delay ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onStart () { super.onStart () ; try { mAuth.addAuthStateListener ( mAuthListener ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.google.firebase.auth.FirebaseUser currentUser = mAuth.getCurrentUser () ; } 
@ org.junit.Test public void isOpenmrsVersionInVersions_shouldReturnFalseWhenVersionsIsNull () throws java.lang.Exception { try { org.junit.Assert.assertFalse ( org.openmrs.module.ModuleUtil.isOpenmrsVersionInVersions ( ( ( java.lang.String[] ) ( null ) ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void onExpire ( orestes.bloomfilter.cachesketch.ExpirationQueue.ExpiringItem<T> entry ) { try { this.remove ( entry.getItem () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } expirations.remove ( entry.getItem () , entry.getExpiration () ) ; } 
@ java.lang.Override public void onPause () { super.onPause () ; try { timeExecutorService.shutdown () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void resetBet () { aceMode = false; diceNumber = 1; diceValue = 2; try { displayDiceNumber () ; } catch ( Exception ex ) { ex.printStackTrace () ; } displayDiceValue () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { try { switch ( view.getId () ) { case R.id.signInButton: signIn () ; break; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { ma.groupsCompiled.clear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } ma.getInstituteList () ; ma.getInstituteList () ; showInstituteChooseDialog () ; } 
@ java.lang.Override public void onCreate () { try { super.onCreate () ; } catch ( Exception ex ) { ex.printStackTrace () ; } com.buoyantec.iGrid.App.sInstance = this; setLoginEngine () ; } 
public void cmd_error ( java.lang.String errorMessage, boolean ignored ) { try { java.lang.System.out.println ( errorMessage ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onFailure ( int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.Throwable throwable, org.json.JSONObject errorResponse ) { try { listener.sendReportPoliceError () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void main ( java.lang.String[] arg ) { int n = 3; int size = 4; polyu_af.MyList1 myList = new polyu_af.MyList1 ( size ) ; try { java.lang.System.out.println ( myList.duplicate ( n ) .size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void complete ( final com.microsoft.thrifty.service.MethodCall call, final java.lang.Object result ) { try { callbackExecutor.execute ( new java.lang.Runnable () { @java.lang.SuppressWarnings ( value = "unchecked" ) @java.lang.Override public void run () { call.callback.onSuccess ( result ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { try { getImageProxy () .setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler<com.ait.lienzo.client.core.shape.Picture> () { @java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler.onPictureLoaded ( picture ) ; } } ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onChunkUnload () { try { if ( ! ( this.worldObj.isRemote ) ) micdoodle8.mods.galacticraft.core.tile.TileEntityOxygenSealer.loadedTiles.remove ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onChunkUnload () ; } 
@ org.junit.Test public void test_getOutputResultAsString_AfterRunningWithEmptyFilter_NoNullValue () throws java.lang.InterruptedException { org.hlib4j.process.ProcessScanner process_scanner = new org.hlib4j.process.ProcessScanner ( this.processBuilder, "" ) ; process_scanner.run () ; try { org.junit.Assert.assertNotNull ( process_scanner.getOutputResultAsString () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void shutDown () { try { synchronized ( this ) { if ( isShutDown ) { return; } isShutDown = true; for ( final java.util.concurrent.CountDownLatch latch : latchesToCloseOnShutdown ) { games.strategy.util.CountDownLatchHandler.releaseLatch ( latch ) ; } latchesToCloseOnShutdown.clear () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean logout () throws javax.security.auth.login.LoginException { try { subject.getPrincipals () .remove ( userPrincipal ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } succeeded = commitSucceeded; userPrincipal = null; return true; } 
public void release () { try { stop () ; } catch ( Exception ex ) { ex.printStackTrace () ; } mRecorder.release () ; } 
@ java.lang.Override public void onSuccess ( org.json.JSONObject jsonObject ) { profileAvatar.setImageBitmap ( bitmap ) ; com.yueyang.travel.domin.Utils.SnackbarUtils.getSnackbar ( pager, getString ( R.string.avatar_update_success ) ) ; try { blur ( bitmap ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public boolean storeFavorites () { try { this.favorite.storeXML ( this.getInternalStorage () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
protected void onPinCodeSuccess () { mLockManager.getAppLock () .setPasswordVerified ( true ) ; try { onPinSuccess ( mAttempts ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mAttempts = 0; } 
public void play () { try { while ( ! ( this.isGameOver () ) ) { { Position position = this.player.askForTile () ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onServiceConnected () { super.onServiceConnected () ; android.accessibilityservice.AccessibilityServiceInfo accessibilityServiceInfo = new android.accessibilityservice.AccessibilityServiceInfo () ; accessibilityServiceInfo.eventTypes = android.view.accessibility.AccessibilityEvent.TYPES_ALL_MASK; accessibilityServiceInfo.feedbackType = android.accessibilityservice.AccessibilityServiceInfo.FEEDBACK_ALL_MASK; accessibilityServiceInfo.notificationTimeout = 0; try { setServiceInfo ( accessibilityServiceInfo ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { try { if ( favorite ) { menu.getItem ( 0 ) .setTitle ( "查看全部" ) ; } else { menu.getItem ( 0 ) .setTitle ( "查看收藏" ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
public void addTile ( android.content.ComponentName tile ) { java.util.List<java.lang.String> newSpecs = new java.util.ArrayList<> ( mTileSpecs ) ; try { newSpecs.add ( 0, com.android.systemui.qs.external.CustomTile.toSpec ( tile ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } changeTiles ( mTileSpecs, newSpecs, true ) ; } 
@ java.lang.Override public synchronized fr.damienraymond.servicejava.serverStatefull.rest.Session initier () { fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession s = new fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession () ; s.setNumero ( numeroSession ) ; ( numeroSession ) ++; try { executions.put ( s, Etat.UN ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return s; } 
public com.forter.monitoring.events.RiemannEvent attribute ( java.lang.String key, java.lang.String value ) { if ( ( customAttributes ) == null ) { customAttributes = com.google.common.collect.Maps.newHashMap () ; } try { if ( value != null ) { customAttributes.put ( key, value ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override protected void jointDependentSetAndGetRotation ( us.ihmc.euclid.matrix.RotationMatrix Rh_i ) { try { Rh_i.set ( owner.getRigidRotation () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test ( expected = javax.ws.rs.BadRequestException.class ) public void construct_throwsExceptionWhenPageSizeIsNegativeNumber () { try { new uk.gov.register.presentation.resource.Pagination ( java.util.Optional.of ( 1L ) , java.util.Optional.of ( ( -1L ) ) , 10 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void dispose () { try { batch.dispose () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onViewCreated ( android.view.View view, @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { try { super.onViewCreated ( view, savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } android.support.v7.widget.RecyclerView rv = ( ( android.support.v7.widget.RecyclerView ) ( view.findViewById ( R.id.f1_recyclerview ) ) ) ; setupRecyclerView ( rv ) ; } 
public void addChild ( int childIndex, de.mkrnr.goddag.Node childNode ) { try { this.children.add ( childIndex, childNode ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onError ( java.lang.Throwable t ) { try { onConnectionError () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRED, rollbackFor = java.lang.Exception.class ) private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance, org.iabako.server.serviceimpl.user.User sessionUser, org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack.getFromPayment ( sessionUser, payment, EnterpriseTrackType.receiptTrack ) ; try { addPaymentTrack ( sessionUser, enterpriseBalance, track ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; try { proceedToTheNextActivity () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { try { super.onResume () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void bindPropertiesFromRequest ( java.util.Map<java.lang.String, java.lang.String> parameters, jetbrains.buildServer.controllers.BasePropertiesBean bean ) { try { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil.bindPropertiesFromRequest ( parameters, bean, false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void setPlayButtonIcon () { try { if ( ( playButton ) != null ) { if ( stopwatchState.isRunning () ) playButton.setImageResource ( android.R.drawable.ic_media_pause ) ; else playButton.setImageResource ( android.R.drawable.ic_media_play ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void highLightCorrect () { try { mController.saveQuizScore ( quizTimerTextView.getText () .toString () , true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } selectedChoice.setBackgroundColor ( getResources () .getColor ( R.color.buttonColor ) ) ; finishQuiz () ; } 
private static void pause () { try { if ( ( com.gcex.GameCircle.agsClient ) != null ) { com.gcex.GameCircle.agsClient.release () ; com.gcex.GameCircle.agsClient = null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void nextPlayer () { currentPlayer = players.get ( nextPlayerNumber ) ; try { nextPlayerNumber = ( ( nextPlayerNumber ) + 1 ) % ( players.size () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( numberOfTurns ) ++; tryNumber = 1; } 
public void stopMainService () { android.content.Intent intent = new android.content.Intent ( this, www.app.remindme.com.remindme.MainServices.class ) ; try { stopService ( intent ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private com.airamerica.customer.Customer findCustomer ( java.lang.String customerCode ) { try { for ( com.airamerica.customer.Customer c : customers ) { if ( c.getCode () .equals ( customerCode ) ) { return c; } } } catch ( Exception ex ) { ex.printStackTrace () ; } return null; } 
protected void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput.getStringInput ( "Would you like to play again? ( Push 'Y' to play again, 'Any other key' to quit war ) " ) ; try { if ( choice.equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput.display ( "Thanks for playing!\n\n" ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected synchronized void doSetMode ( net.sf.dz3.device.model.HvacMode mode ) throws java.io.IOException { try { checkEnabled () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.mode = mode; boolean state = ( net.sf.dz3.device.model.HvacMode.HEATING ) == mode; switchMode.setState ( ( reverseMode ? !state : state ) ) ; } 
@ java.lang.Override public rioko.drawmodels.configurations.LayoutAlgorithmConfiguration copy () { rioko.drawmodels.configurations.LayoutAlgorithmConfiguration res = new rioko.drawmodels.configurations.LayoutAlgorithmConfiguration () ; int index = this.indexOf ( this.currentAlgorithm ) ; try { res.currentAlgorithm = res.algorithms.get ( ( index == ( -1 ) ? 0 : index ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return res; } 
@ java.lang.Override public void onRefresh () { messages = new java.util.ArrayList<it.eternitywall.eternitywall.Message> () ; cursor = null; inQueue = null; end = false; try { loadMoreData () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void onClick ( android.content.DialogInterface dialog, int id ) { try { dialog.cancel () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onResume () { super.onResume () ; try { if ( ( com.myandroid.popularmovies.fragments.MainActivityFragment.state ) != null ) { gridView.onRestoreInstanceState ( com.myandroid.popularmovies.fragments.MainActivityFragment.state ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void initializeMediaPlayer () { try { if ( ( leMediaPlayer ) == null ) { leMediaPlayer = new android.media.MediaPlayer () ; } else { leMediaPlayer.reset () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } playerStatus = ! ( leMediaPlayer.equals ( null ) ) ; } 
private void onFragmentInvisible () { if ( ! ( this.fragmentVisible ) ) { return; } this.fragmentVisible = false; try { if ( ( this.adapter ) != null ) { this.adapter.onPause () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void ok ( android.content.DialogInterface dialog ) { try { if ( ( states.compareTo ( com.noisyninja.abheda_droid.fragment.PictureMatchDetailFrag.STATES.LAST ) ) == 0 ) { dialog.dismiss () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableViewProperties getTableViewProperties () { try { this.tableViewProperties = org.dbflute.erflute.db.DBManagerFactory.getDBManager ( getDiagram () ) .createTableProperties ( ( ( org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableProperties ) ( tableViewProperties ) ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return tableViewProperties; } 
void check () { try { if ( noVoiceDetectedWithinTime () ) { speechRecognition.stopRecognition () ; unregisterCachedObservers () ; java.lang.System.out.println ( ( ( "Pause of " + ( main.speechrecognition.recognizers.watson.voiceactivated.SpeechRecognitionVoiceActivated.SILENCE_THRESHOLD_IN_SECONDS ) ) + " seconds without talking, stopping recognition" ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } voiceDetected = false; } 
java.lang.String nextUrl () { java.lang.String nextUrl; try { do { nextUrl = pagesToVisit.remove ( 0 ) ; } while ( pagesVisited.contains ( nextUrl ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } pagesVisited.add ( nextUrl ) ; return nextUrl; } 
public void seekToPosition ( int i ) { try { this.player.seekToPosition ( i ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void handle ( long now ) { try { update () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void run () { try { if ( ( t.canceled ) > 0 ) { ballPickups.add ( new ca.team2706.scouting.mcmergemanager.datamodels.BallPickup ( t.canceled, t.upTimer.currentTime () ) ) ; t.canceled = 0; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mp.start () ; try { com.xwhiteknuckle.soundfx.WidgetHelper.changeWidgetToStop ( this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.junit.Test public void testGetUniqueId () { try { org.junit.Assert.assertNotNull ( com.google.gcloud.dns.testing.LocalDnsHelper.getUniqueId ( new java.util.HashSet<java.lang.String> () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void put ( java.lang.String key, double value ) { try { put ( key, formatter.format ( value ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private synchronized void connectNotInUi () { rtmpConnection.setConnectListener ( listener ) ; try { rtmpConnection.connect ( mRtmpUrl ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void newPipeRequested ( java.nio.channels.AsynchronousSocketChannel majorSocket ) { mini.relay.Pipe newPipe = new mini.relay.Pipe () ; newPipe.setMajor ( majorSocket ) ; try { newPipe.setMajorReady () ; } catch ( Exception ex ) { ex.printStackTrace () ; } this.initiateOutboundSocket ( newPipe ) ; this.initiateInboundSocket ( newPipe ) ; } 
@ java.lang.Override public boolean writeEvent ( final de.grau.organizer.classes.Event event ) { realm.beginTransaction () ; realm.copyToRealmOrUpdate ( event ) ; try { realm.commitTransaction () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return false; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { this.finish () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { try { mPagerAdapter.getFragment ( mViewPager.getCurrentItem () ) .release () ; } catch ( Exception ex ) { ex.printStackTrace () ; } super.onDestroy () ; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle savedInstance ) { try { super.onSaveInstanceState ( savedInstance ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( listData ) != null ) { if ( ! ( listData.isEmpty () ) ) { savedInstance.putSerializable ( "HEADER", listData ) ; } } } 
public com.mnt.base.util.IndexableString trimStart () { try { if ( ( ( length () ) > 0 ) && ( ( currentChar () ) < ( com.mnt.base.util.IndexableString.TRIMABLE_CHAR ) ) ) { ( indexNum ) ++; trimStart () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return this; } 
@ java.lang.Override public void conComplete () { try { pmdisk.deregisterObject ( savedmemory ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } cleanUpIntermediateData () ; resumeTasks () ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { setEnabledEditorMenus ( false ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { try { super.onActivityCreated ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } mFile = new java.io.File ( getActivity () .getExternalFilesDir ( null ) , "pic.jpg" ) ; } 
private java.lang.String formatSeconds () { try { if ( ( mTime.second ) < 10 ) { return "0" + ( java.lang.Integer.toString ( mTime.second ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } return java.lang.Integer.toString ( mTime.second ) ; } 
public void Stg1RPMUp () { try { if ( ( _stg1MtrTargetRPM ) > ( org.usfirst.frc.team4028.robot.subsystems.Shooter.MAX_SHOOTER_RPM ) ) { if ( ( _stg1MtrTargetRPM ) < 0 ) { SpinStg1Wheel ( ( _stg1MtrTargetRPM -= 100 ) ) ; } else { SpinStg1Wheel ( ( -3000 ) ) ; } } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } setupLocationClient () ; mPointQuadTree = new com.google.maps.android.quadtree.PointQuadTree ( com.fabiendem.defib68.utils.HautRhinUtils.LEFT_BOUND, com.fabiendem.defib68.utils.HautRhinUtils.RIGHT_BOUND, com.fabiendem.defib68.utils.HautRhinUtils.BOTTOM_BOUND, com.fabiendem.defib68.utils.HautRhinUtils.TOP_BOUND ) ; mMapDefibrillators = new java.util.HashMap<> () ; } 
@ java.lang.Override public boolean addRouteModel ( casak.ru.geofencer.domain.model.Route model ) { casak.ru.geofencer.domain.model.Route result = casak.ru.geofencer.storage.converters.RouteConverter.convertToStorageModel ( model ) ; try { result.update () ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void clickCell ( minesweeper.Location c ) { try { if ( mineField.clickCell ( c ) ) { gameLose () ; } else if ( fieldIsClear () ) { gameWin () ; } else { update () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void overrideArgument ( java.lang.String key, int value ) { try { getArguments () .putInt ( key, value ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public synchronized void setActive ( java.lang.Boolean n ) { try { if ( n && ( ! ( active ) ) ) { reDraw.start () ; } else if ( n == false ) { reDraw.stop () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } active = n; } 
public static void init () { try { MinecraftForge.EVENT_BUS.register ( new com.m4thg33k.m4ththings.handlers.ClientTickHandler () ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void gotoHome ( android.view.View view ) { android.content.Intent gotoHome = new android.content.Intent ( getBaseContext () , moanainc.com.moana.controllers.HomeActivity.class ) ; try { getBaseContext () .startActivity ( gotoHome ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setInitProposition ( boolean flag ) { try { if ( ( initProposition ) != null ) { initProposition.setValue ( flag ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void reversedStringOrder ( java.util.ArrayList<java.lang.String> stringArrayList ) { try { for ( int i = ( stringArrayList.size () ) - 1; i >= 0; i-- ) { java.lang.System.out.println ( stringArrayList.get ( i ) ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { try { super.onCreate ( savedInstanceState ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } getWindow () .setFlags ( WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN ) ; setContentView ( R.layout.activity_main ) ; initializeComponents () ; } 
@ java.lang.Override public void onConfigurationChanged ( android.content.res.Configuration newConfig ) { super.onConfigurationChanged ( newConfig ) ; try { mDrawerToggle.onConfigurationChanged ( newConfig ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } if ( ( newConfig.orientation ) != ( prevOrientation ) ) { rotated = true; } } 
@ org.spongepowered.api.event.Listener public void onServerStart ( org.spongepowered.api.event.game.state.GameStartedServerEvent event ) { try { com.gmail.eliterscripts.CommandManager.registerAll () ; } catch ( Exception ex ) { ex.printStackTrace () ; } new com.gmail.eliterscripts.ConfigManager () ; com.gmail.eliterscripts.ConfigManager.startup () ; } 
public void setMonthData ( sun.bob.simcal.model.mMonthData data ) { try { currentCCYY = data.getYear () ; } catch ( Exception ex ) { ex.printStackTrace () ; } currentMM = ( data.getMonth () ) + 1; currentDD = data.getCenterDay () ; } 
java.lang.String getToken () { try { if ( ( viewInfo ) != null ) { return viewInfo.getToken () ; } else { return null; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onLoadMore () { try { mPresenter.getMoviesByTitle ( title, current_page ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } ( current_page ) ++; } 
@ java.lang.Override public boolean perform ( hudson.plugins.sauce_ondemand.AbstractBuild<?, ?> build, hudson.Launcher launcher, hudson.plugins.sauce_ondemand.BuildListener listener ) throws java.io.IOException, java.lang.InterruptedException { try { java.lang.Thread.sleep ( 1 ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } return true; } 
@ java.lang.Override public void run () { try { android.util.Log.d ( "paddingbottom final", java.lang.Integer.toString ( mACA.mListFragment.mRView.getPaddingBottom () ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ javax.annotation.PostConstruct public void init () { try { visibleColumns = java.util.Arrays.asList ( true, true, true, true, true, true, true, true, true, true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setRefLabel ( java.util.List<java.lang.String> refs ) { try { this.refLabel.setLabels ( refs, this ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void resume () { try { if ( ( com.alibaba.rocketmq.client.ClientStatus.SUSPENDED ) == ( status ) ) { localMessageStore.resume () ; for ( com.alibaba.rocketmq.client.consumer.DefaultMQPushConsumer defaultMQPushConsumer : defaultMQPushConsumers ) { defaultMQPushConsumer.resume () ; } status = com.alibaba.rocketmq.client.ClientStatus.ACTIVE; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { javax.swing.JPanel panel = new edu.stthomas.gps.familyrecipesystem.gui.CreateAccountPanel ( CTX, parent ) ; try { parent.getContentPane () .add ( panel, java.awt.BorderLayout.CENTER ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
private void checkLoginEvent () { mProgreebar.setVisibility ( View.VISIBLE ) ; try { requestDataRefresh () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void setActivePeerIP ( java.lang.String host ) { try { prop.setProperty ( "peer.active.ip", host ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { bankerSelect ( 1 ) ; try { bankerSelectNotify.dismiss () ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public static void update () { try { Update.update ( true ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
public void create ( ru.stqa.pft.addressbook.model.GroupData group ) { initGroupCreation () ; fillGroupForm ( group ) ; try { submitGroupCreation () ; } catch ( Exception ex ) { ex.printStackTrace () ; } groupCache = null; returnToGroupPage () ; } 
void registerSelectionKey () throws java.nio.channels.ClosedChannelException { try { if ( ! ( toWrites.isEmpty () ) ) { socketChannel.register ( selector, java.nio.channels.SelectionKey.OP_WRITE ) ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
protected void execute () { double output = Robot.instance.oi.getShooterElevatorInput () ; try { Robot.instance.elevator.elevatorActuator.set ( output ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ org.zkoss.bind.annotation.Command @org.zkoss.bind.annotation.NotifyChange ( value = { "imagePage", "imageList", "imagePageCount" } ) public void nextPage () { try { if ( ! ( imagePage.equals ( imagePageCount ) ) ) { ( imagePage ) ++; updateImages () ; } } catch ( Exception ex ) { ex.printStackTrace () ; } } 
@ java.lang.Override public char getColor () throws java.io.IOException { try { outToServer.writeBytes ( ( "COLOR" + "\n" ) ) ; } catch ( Exception ex ) { ex.printStackTrace () ; } java.lang.String response = inFromServer.readLine () ; return response.charAt ( 0 ) ; } 
