@ java.lang.SuppressWarnings ( value = "PMD.PMD" ) public void extractWarFileDirectory ( java.lang.String message ) { try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( ( java.io.File.separator ) + war ) + ( java.util.Enumeration.separator ) ) ) ) ; java.io.File entries = jar . extract () ; while ( entries . hasMoreElements () ) { extractArchive ( entries , jar ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils.LOG . warn ( ( "Cannot read jar file: " + e ) ) ; } }
private boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( ! ( wholeMatcher . isEmpty () ) ) { return false ; } createMatcher ( matcher , findWhat ) ; boolean found = wholeMatcher . matcher ( matcher , textPane ) . start () ; if ( found ) { matcher . setSelectionStart () ; } textPane . setSelectionEnd () ; return textPane . end () ; }
private void readJsonStream ( java.io.InputStream in , com.josephontery.gcmbookscanner.BookInformation bookReader ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( in , "UTF-8" ) ; try { com.josephontery.gcmbookscanner.BookReader . processSearchResult ( reader , bookReader ) ; } finally { reader . close () ; } }
private static java.io.File getComponentFile ( java.io.File path , java.lang.String componentName ) throws de.codeinvation.tovalwdinvation.misc.ProjectComponentException { try ( java.lang.String . format ( new java.io.File ( de.codeinvation.tovalwdinvation.misc.AbstractProjectComponent.componentPath , path , path ) ) ) { return getComponentFile () . getCanonicalFile () ; } catch ( java.io.IOException e ) { throw new de.codeinvation.tovalwdinvation.misc.ProjectComponentException ( "Cannot compose to store." , e ) ; } }
private java.util.List < ca.cubce223.cmppen.Vertex > getighbUpNeighbors ( ca.cubce223.cmppen.Vertex v ) { java.util.LinkedList < ca.cubce223.cmppen.Vertex > upstreamList = new java.util.LinkedList < ca.cubce223.cmppen.Vertex > () ; for ( java.lang.String vertex : v . vertices () ) { if ( ( vertex . getLabel () ) == ( new java.util.LinkedList < ca.cubce223.cmppen.Vertex > () ) ) { for ( ca.cubce223.cmppen.Vertex v : vertexList ) { if ( ( v . get ( vertex ) ) == ( new java.util.LinkedList < ca.cubce223.cmppen.Vertex > () ) ) { upstreamList . add ( v ) ; } } } } return upstreamList ; }
public static void releaseColor ( int color , int which ) { switch ( which ) { case com.apps.class.kmb.scheduler.ClassLoader.DESIRED : if ( ! ( com.apps.class.kmb.scheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.apps.class.kmb.scheduler.ClassLoader.availableColors . push ( color ) ; break; } case com.apps.class.kmb.scheduler.ClassLoader.CURRULE : if ( ! ( com.apps.class.kmb.scheduler.ClassLoader.currAvailable . contains ( color ) ) ) { com.apps.class.kmb.scheduler.ClassLoader.currAvailable . push ( color ) ; break; } break; } }
private java.lang.String getName ( com.google.gwt.core.ext.type.JinfoClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return source . getEnclosingType () ; } return source . getSimpleName ( ( ( ( source . getEnclosingSourceSourceName () ) + "_" ) + ( source . getEnclosingSourceName () ) ) ) ; }
@ java.lang.Override public void checkIfUpdateIsDownloaded ( com.janv.karynlecainfo.notenyan.COTAoganUpdateModel cyoganUpdateModel ) { java.io.File file = new java.io.File ( ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOAD_DIRECTORY ) ) + ( java.io.File.separator ) ) + ( file . getPath () ) ) + ( com.janv.karynlecainfo.notenloadedyan.views.DownloadedPreference.DOWNLOAD_PROPERTY_ID ) ) , false ) ; if ( ( ! ( file . exists () ) ) && ( cyoganUpdateloadedPreference . contains ( ( ( com.janv.karynlecainfo.notenloadedyan.views.DownloadedPreference.ID_DOWNLOAD_PROPERTY_ID ) + ( file . getFileName () ) ) ) ) ) release () ; }
public java.lang.Long requestBook ( java.lang.Long bookId ) throws library_project.models.BookException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( bookId . isReservationOut () ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; } } return newReservation ; }
@ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcastAsUser ( intent , user , initialCode , scheduler , initialData , initialExtras ) ; }
private org.gradle.api.internal.artifacts.usedresolveengine.ex.AbstractModuleIntoMergeExclusion.MergeExclusion ( org.gradle.api.internal.artifacts.ex.ExclusionModule one , org.gradle.api.internal.artifacts.ex.ExclusionModule two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ex.ExclusionModule ) && ( two instanceof org.gradle.api.internal.artifacts.ex.ExclusionModule ) ) { return ( ( org.gradle.api.internal.artifacts.ex.ExclusionModule ) ( one ) ) . intersection ( two ) ; } return null ; }
private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( orders != null ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; } }
public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgttypeException { try { org.wso2.carbon.device.mgt.extensions.core.util.RegistryUtils . getConfiguration () . beginTransaction () ; if ( ( registry ) == null ) { registry = new org.wso2.carbon.device.mgt.extensions.api.template.DeviceMgttypeException ( ( "Error occurred while persist registry " + path ) , resource ) ; registry . put ( resource , registry ) ; return true ; } else { registry . commitTransaction () ; return false ; } } catch ( org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgttypeException e ) { throw new org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgttypeException ( e . getMessage () , e ) ; } }
private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRect ( row , col ) ; if ( game.angle . isAlive ( row , col ) ) { r . setFillOfLife ( com.js.app.GameLife.CELL_COLOR_FICELL ) ; r . setStroke ( com.js.app.GameLife.CELL_COLOR_FICELL ) ; } else { r . setFillOfLife ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
public static void printResult ( double [] [] reltus ) { int histWidth = reltus.length ; int histHeight = reltus [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( int ) ( reltus [ i ] [ j ] ) ) ) ; } } java.lang.System.out . println ( " " ) ; }
private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequestOnPush ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler . retrieveHandlers ( triggerOpenMergeRequestOnPush , skipWorkInProgressMergeRequestOnPush ) ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } return result ; }
public static com.izik.recipebook.Model instance ( android.content.res.Resources res , android.content.Context context ) { if ( res instanceof com.izik.recipebook.Model.OnOperationListener ) { com.izik.recipebook.Model.OnOperationListener = ( ( com.izik.recipebook.Model.OnOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteraction" ) ) ; } com.izik.recipebook.Model.instance = context ; return new com.izik.recipebook.Model.Model ( context , context ) ; }
public void printGrid ( java.lang.String [] [] gridDis ) { for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "Dis" ) ; }
public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > resultConst = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { resultConst . put ( auxVar , auxVar ) ; } return resultConst ; }
@ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "id/{editid}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( @ org.cba.rest.resources.PathParam ( value = "id" ) int id ) { try { org.cba.rest.entities.Company company = new org.cba.rest.entities.Company () ; company . fromJson ( content , com.google.gson.Gson . class ) ; if ( company != null ) { company . edit () ; } } catch ( org.cba.rest.exception.NotFoundException e ) { e . printStackTrace () ; throw new org.cba.exception.WebApplicationException ( Response.Status.NOT_FOUND ) ; } return company . fromJson ( new org.cba.rest.entities.CompanyNotFoundException () , org.cba.rest.entities.Company . class ) ; }
private static java.lang.String decrypt ( java.lang.String value ) { try { return com.microsoft.aadal.CacheHelper.s . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aadal.Logger . e ( com.microsoft.aadal.CacheStore.TAG_ALCRY 512 , "" , e ) ; } if ( ! ( com.microsoft.aadal.CacheStore.s . isEmpty ( com.microsoft.aadal.CacheStore.TAG_FAILED ) ) ) { com.microsoft.aadal.Logger . error ( java.lang.String . format ( "Error: '%s'" , key , e ) ) ; } com.microsoft.aadal.CacheStore.s . removeBlank ( value ) ; return null ; }
@ WebTests.BeforeTest public void setUpInternetDriver ( ) throws java.lang.InterruptedException { java.lang.String baseUrl = ( ( java.lang.String ) ( logger . baseUrl ) ) ; logger . info ( ( "[TEST]" + ( java.lang.System . valueOf ( operation.webdriver ) ) ) ) ; driver . setProperty ( "driver" , java.lang.String . valueOf ( driver . getProperty ( "base.in" ) ) ) ; driver . navigate () ; }
public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getTemp () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
public static void main ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadFiles () ; main.FAMFiles . files2DFFiles () . read ( files ) ; try { util.RDFFiles . files2DFFiles () . getFilePath () ; util.RDFConfigManager . generateDiveuctalDB ( files ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } main.DiveuctedDB = new main.DiveuctedDB () ; }
private void addRecord ( java.lang.String newkey , java.lang.String key ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , oldList ) ) ; else if ( ! ( oldList . contains ( newkey ) ) ) { org.kisst.item4j.ImmutableSequence < T > oldList = map . growTail ( oldList ) ; map . put ( newkey , newList ) ; } }
public void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { synchronized ( this ) { ( request ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , time , 1 ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( ( ( requests . indexOf ( r ) ) + 1 ) ) ; r . setDateCount ( ( ( requests . indexOf ( r ) ) + 1 ) ) ; requests . remove ( r ) ; } } }
public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; }
public java.util.List < com.Jic.invo.controller.vo.InvoiceVO > getAllInvoiceListById ( java.util.List < java.lang.Integer > idExampleDbList ) { java.util.List < com.Jic.model.InvoiceObject > invoiceExampleDbList = new java.util.ArrayList < com.Jic.model.InvoiceObject > () ; invoiceExampleDbList . andDelete ( GeneralDbUtils . convertToIndEqualTo ( idExampleDbList . and () ) ) ; invoiceExampleDbList . setOrderBy ( GeneralDbUtils . convertToIndEqualToByClause ( "dateExample" ) ) ; return invoiceExampleDbList ; }
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlModWheel = ( ( java.awt.event.MouseWheelEvent.CTRL_MASK_DOWN ) | ( java.awt.event.MouseWheelEvent.CTRL_MASK_DOWN ) ) | ( modifier ) ; int e = ctrlModWheel & ( modifier ) ; if ( e != 0 ) { this . signDown () ; return; } this . signDown () ; }
public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.imp.leafme.data.picleaf.Album > list = new java.util.ArrayList < org.fossasia.imp.leafme.data.picleaf.Album > () ; if ( context . getBoolean ( context . getString ( R.string.preference_recuse_alternative_provider ) , false ) ) { list . addAll ( list ) ; } else { org.fossasia.imp.leafme.data.picleaf.AlbumsProvider pProvider = new org.fossasia.imp.leafme.data.picleaf.AlbumsProvider ( context , context ) ; pProvider.providers = context . getAlbums ( hidden , context ) ; list . addAll ( pProvider ) ; } }
public static java.lang.String fetchWebpageData ( java.lang.String requestUrl , java.lang.String requestUrl ) { java.net.URL url = com.example.android.hash.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hash.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { response = "Problem making the HTTP." ; } return response ; }
@ java.lang.Override protected void listItemClicked ( int position ) { if ( ( adapter . getItem ( ( position - 1 ) ) ) != null ) { android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitshutles2.tutles.activities.StopShutlesActivity . class ) ; intent . putExtra ( Constants.KEY_ID_ROUTE_ID , Constants.KEY_STOPID ) ; intent . putExtra ( Constants.KEY_ID_KEY , Constants.KEY_STOPID ) ; startActivity ( intent ) ; } }
private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "A" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , 20 ) ; }
@ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ modulePath ( value = javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON_MODULE ) @ module.PathParam ( value = dto.UserConnector.USER_MODULE ) public java.lang.Integer getFullUser ( @ javax.ws.rs.PathParam ( value = "error" ) int id ) { try { dao.UserDAO db = new dao.UserDAO ( config.UserDAO . getFullUser () ) ; java.lang.System.out . println ( ( "User: " + ( e . getMessage () ) ) ) ; user = dao.UserDAO . create ( null ) ; jdbcUser = new dao.User ( id ) ; } catch ( java.net.URIException e ) { java.lang.System.out . println ( "Error: routes/error" ) ; } return jdbcUser ; }
protected static java.lang.String escapeAndConvertToSQLs ( final java.lang.String value , java.lang.String always ) { java.lang.String ret = value . replace ( "\\\\\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "_" ) . replaceAll ( "\\\\\\\\_" , "%" ) . replaceAll ( "%" , "%" ) . replaceAll ( "%" , "%" ) . replaceAll ( "%" , "%" ) ; return ret ; }
public void setConsumptionValue ( int value , com.freedomotic.model.ds.ConfigCommand.Command fireCommand , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( ( "Power of behavior is " + ( thing . read () ) ) + "'" ) ) ; } else { this . setValue ( value , true ) ; } }
private void writeImports ( java.io.Writer writer , java.lang.String className , java.lang.Class baseClazz ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mitor.SimpleImplementor . getPackageName ( className ) ; if ( ! ( isEmpty () ) ) { writer . append ( " " ) . append ( currentPackageName ) . append ( ru.spbau.mitor.SimpleImplementor.NEW_LINE ) . append ( ";" ) . append ( currentPackageName ) . append ( ";" ) ; } }
public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { return; } updateStorageLocation ( ctx ) ; java.lang.String currentLocation = this . getStorageLocation ( mount ) ; if ( currentLocation . startsWith ( ( ( org.digitalia.storage.utils.BaseStorageStrategy . getInternalPath ( mount ) ) + location ) ) ) { return; } java.lang.String location = updateExternalPath ( ( ( org.digitalia.storage.utils.BaseStorageStrategy . getInternalPath ( mount ) ) + " " ) ) ; ctx . updatePreference ( location , currentLocation ) ; }
private boolean canDelete ( org.eclipse.core.resources.IResource [] resources ) { if ( ( ! ( containsOnly ) ) || ( resourcesNonProjects ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( org.eclipse.core.resources.IResource resource : resources [ resources.length ] ) { if ( resource . isPhantom () ) { return false ; } } return true ; }
@ java.lang.Override public boolean onBalTap ( int index , com.google.android.maps.ItemOverlayOverlayItem item ) { if ( ( nu.whats.placeup.activity.AnnotationActivity . class ) != null ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.whats.placeup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "id" , id ) ; bundle . putExtras ( bundle ) ; startActivity ( startAnnotation ) ; } return true ; }
private boolean better ( java.util.Set < de.htw4.fb.imi.master.ws156.foellmer.feldmann.ip_master.Vector2D > newPolygon , java.util.Set < de.htw4.fb.imi.master.ws156.foellmer.feldmann.ip_master.Vector2D > bestPolygon ) { if ( ( ( bestPolygon . size () ) > 0 ) || ( ( bestPolygon . size () ) < 0 ) ) return true ; return ( ( bestPolygon . size () ) != 0 ) && ( ( bestPolygon . size () ) < 0 ) ; }
private void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.compogc.corpus.readers.ReaderView nerinoView ) throws edu.illinois.cs.compogc.corpus.readers.XMLReaderException { org.w3c.dom.Element element = edu.illinois.cs.compogc.corpus.readers.Element . getDocument () ; org.w3c.dom.Element n = element . getElementsByTagName ( org.w3c.dom.Element.FILLFINFILL ) ; fillParser ( element ) ; nerinoView . fill ( nerinoView , 0 ) ; i ++ ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( intent , timber.log.Timber . d ( "Job Received" ) ) ; if ( intent . getAction () . equals ( "UPDATED_DATA" ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.Component [] stockWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( appWidgetManager . getAppWidgetIds () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( stockWidgetIds , appWidgetIds ) ; } }
public void initProgram ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgramCode = cn.android.opengl.utils.ProgramUtil . createProgram ( vertexCode , fragCode ) ; mProgramCode = android.opengl.GLES20 . glGetAttribPosition ( mProgramLocationHandle , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgramLocationHandle , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; }
public static < T > java.util.List < T > toList ( java.util.List < T > values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; }
private java.lang.String createDNPath ( org.apache.directory.api.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.ldap.api.model.name.Rname rnd : dn . getRdn () ) { if ( ( rnd . length () ) > 0 ) { path . append ( '/' ) . append ( rnd . toString () ) ; } path . append ( OcrTextChars.JAK ) ; } return path . toString () ; }
public static void put ( java.lang.String url , java.lang.String requestBody , java.lang.String requestBody , com.chinamobile.iot.OneNetApi.Callback callback ) { com.chinamobile.iot.OneNetApi . assertInitialized () ; com.chinamobile.iot.OneNetApi . assertThread () ; com.chinamobile.iot.OneNetApi.sHttpUrl = com.chinamobile.iot.OneNetApi.sHttpUrl . create () ; com.chinamobile.iot.OneNetApi.sHttpAdapter . put ( url , new com.chinamobile.iot.OneNetApi.RequestBody ( requestBody , "application/utf-8" ) ) ; com.chinamobile.iot.OneNetApi.sHttpAdapter . put ( url , new com.chinamobile.iot.OneNetApi.RequestBody ( requestBody , callback ) ) ; }
private boolean isMyIDP ( org.apache.jackrabbitako.security.spi.external.SyncedIdentity id ) { if ( ( ( idRef ) == null ) || ( ( idRef . getProviderId () ) == null ) ) { return false ; } return ( ( id . getProviderName () . length () ) == 0 ) || ( ( idRef . getProviderName () . length () ) == 0 ) ? ( ( org.apache.jackrabbitako.security.authentication.external.SyncedIdentity ) ( id ) ) : idRef . getProviderName () ; }
void showResult ( java.lang.String result ) { if ( withResultFragment ) { resultFragment = ( ( com.example.doha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( resultFragment == null ) { resultFragment = new com.example.doha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.content , resultFragment ) . putExtra ( "result" , this ) . commit () ; } else { resultFragment . setArguments ( resultFragment ) ; } } }
@ java.lang.Override protected void run ( final io.dropwizard.setup.Scripts < io.paroxicaladass.cie.Configuration > bootstrapService , final net.sourceforge.paroxicaladass.infie.Namespace namespace , final io.paroxicaladass.cie.ConfigurationService configuration ) throws java.lang.Exception { io.paroxicaladass.cassandra.loader.DbConfigRunner dbConfigRunner = new io.paroxicaladass.cassandra.loader.DbConfigRunner ( dbConfigRunner . getDb () ) ; if ( dbConfigRunner.args . get ( namespace ) ) { io.paroxicaladass.cassandra.commands.Scripts.DbScripts > par = dbConfigRunner . runSetup ( new io.paroxicaladass.cassandra.commands.DbScripts ( dbConfigRunner.args . get ( namespace ) ) ) ; dbConfigRunner . recreate () ; } }
public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () , user ) ; final java.util.HashMap < java.lang.String , java.lang.String > user = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( session . getUserDetails () ) ) ; final java.lang.String id_ID = user . get ( Config.KEY_USERID ) . getId () ; user . add ( id_ID ) ; }
private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( com.gmail.wazapp.ships.common.Constants.DEFAULT_BOARD_SIZE ) ; i ++ ) { int it = offset + ( i * ( com.gmail.wazapp.ships.common.Constants.DEFAULT_BOARD ) ) ; canvas . drawLine ( i , 0 , it ) ; } }
public char charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 27 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == '^ 29 ) return 30 ; if ( c == 'error' ) return 30 ; return 30 ; }
private static void initializeRoom ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { if ( ( swarm.SwarmSimarms.roomType ) == ( swarm.SwarmSimarms.GATE ) ) { swarm.SwarmSimarms.roomType . buildRoom ( swarm.SwarmSimarms.BASIC ) ; } else if ( hasObstacle ) { swarm.SwarmSimarms.roomType . buildRoom ( swarm.SwarmSimarms.BASIC ) ; } }
protected javafx.scene.shape.Shape calcBoundingBox ( int sizeCircle ) { javafx.scene.shape.CircleBox circleB = new javafx.scene.shape.CircleBox ( ( ( this . getTranslateX () ) + ( ( ( this . getTranslateY () ) / 2 ) + ( ( this . getTranslateY () ) / 2 ) ) , ( ( ( this . getTranslateX () ) + ( ( this . sizeTranslateY ) / 2 ) ) + 100 ) ) ; circleB . setOpacity ( circleB ) ; return circleB ; }
public int getByIndex ( build.games.wraaven.gui.MenuComponent.HeiryMenuComponent root , int index , build.games.wraaven.gui.HeiryMenuComponent [] out ) { if ( pos == 0 ) { return root ; } for ( build.games.wraaven.gui.HeiryMenuComponent.HeiryMenuComponent c : root . getChildren () ) { if ( ( c . getByIndex ( pos , c ) ) == ( - 1 ) ) { return pos ; } } return - 1 ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listUsers ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModel () ; com.fh.util.Page pdpt = this . getPage_Data () ; java.util.List < com.fh.stock.Depile > productsList = this . productsList . list () ; mv . addObject ( "productsID" , pdpt ) ; mv . addObject ( "pdId" , productsList ) ; mv . addObject ( "productsID==" , productsList ) ; mv . setViewName ( "testStock" ) ; return mv ; }
public void presentNotificationsList ( java.lang.String url , final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.arsdk.NotificationsController . getInstance () . getPendingSDK () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; } }
public void sendEmail ( java.util.List < java.lang.String >itoCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String45 , java.lang.String requestingType , java.lang.String dateTimeFolderForEmail , java.lang.String toEmail ) { org.camel.LoadPay.LoadPayLoadPay emailLoadPay = new org.camel.LoadPay.LoadPay () ; emailLoadPay . setCount ( totalRecordCount ) ; emailLoadPay . setFailed ( email ) ; emailLoadPay . setLocation ( failedRecordCount ) ; emailLoadPay . setTo ( totalRecordCount ) ; emailLoadPay . setLoadEmail ( failedRecordCount ) ; emailLoadPay . setLoadEmail ( totalRecordCount ) ; return emailLoadPay ; }
public void putAll ( java.util.Map < java.lang.String , java.util.Iterator < java.util.Map.Entry < java.lang.String , java.lang.String > > entryIt = addIt . entrySet () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , java.util.Map.Entry < java.lang.String , java.lang.String > > entry = entryIt . next () ; while ( entry . getValue () ) { put ( entry . getKey () , entry . getValue () ) ; } }
@ java.lang.Override public void positionModifierChange ( int [] oldP , int [] oldP , boolean newPivit , int posDown , boolean gameWon ) { this . positionChanged = true ; this . playerOldPivit = oldPivit ; this . playerOldPivit = playerOldPivit ; this . topDown = newPivit ( posDown , oldPivit ) ; this . topDown = playerOldPivit ; this . topDown = playerOldPivit ; }
public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + property ) + " where " ) , new java.lang.Object [] { property } , new org.smartdata.dao.metastore.RowMapper () ) ; }
public double distance ( final geogebra.common.kernel.geos.GeoPoint p2 ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; if ( geo . distance ( d ) ) { distance = d ; } } return distance ; }
public void add ( int index , long element ) { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( ( index ) + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; end = end ; }
public static java.util.Date getLatestDate ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . uniqueResult () ) ) ; session . setProjection ( new java.util.Date ( latestDate . getTime () ) ) ; session . close () ; return "createdProjections" ; }
@ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . params ) { try { mobop.booklistapp.api.Api book = mapper . readValue ( params [ 0 ] , mobop.booklistapp.api.Api . class ) ; book . addBook ( "Book" , mList ) ; } catch ( java.io.IOException e ) { return false ; } return true ; }
@ java.lang.Override public void onSuccess ( java.lang.Void result ) { formDesignPanel . getSaveButton () . setText ( I18.CONSTANTS ) ; formDesignPanel . getSaveButton () . setEnabled ( true ) ; formDesignPanel . getSaveMessage () . setHTML ( I18.CONSTANTS ) ; formDesignPanel . getSaved () . setSavedGuard () . show ( true ) ; }
public void assertEquals ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( java.lang.Integer . format ( expected , actual ) ) ; }
@ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , double motionX , double motionY , double rotation , float motionZ ) { world . loadChunkServer ( ( ( int ) ( x ) ) , ( ( int ) ( y ) ) , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; z = motionZ ; }
public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.RocketDate dateCTR = new br.com.inmypocket.controllers.RocketDate () ; switch ( typeRepeat ) { case 'D' : return dateCTR . add ( date ) ; case 'M' : return dateCTR . add ( date ) ; case 'A' : return dateCTR . add ( date ) ; default: return dateCTR . add ( date ) ; } }
private static java.lang.String toPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = toPath . toReal () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } else { path = toAbsolutePath () ; } return path . toString () ; }
private java.lang.String getTrailerID ( org.verapdf.model.impl.cos.COSArray.COS ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.cos.COSBase id : ids ) { builder . append ( id ) . append ( ( ( org.verapdf.model.impl.cos.COSString ) ( ph . get () ) ) ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; }
private void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cardsJson . add ( new org.leanpoker.player.JsonObject ( cardsJson . get ( i ) . getAsJsonObject () , cardsJson . get ( "suit" ) . getAsString () ) ) ; cardsJson . get ( "rank" ) . getAsString () ; } }
public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) ) . putExtra ( "id" , target ) ; } else { android.os.Looper . loop () ; } } } ) . putExtra ( "target" , target ) . prepare () ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speakToSpeech ( words [ words [ words [ words ] , TextToSpeech.QUEUE_FLUSH_QUEUE , null , null ) ; } else { txt_speech . speakToSpeech ( words [ words ] , TextToSpeech.QUEUE_FLUSH_QUEUE , null , null ) ; } } }
private org.bitcoinj.core.Transaction loadDiskTransactionFromHash ( java.lang.String txHash ) throws com.bitdubai.fermat_chb_layer.crypto_plugin.crypto_developercoin_1.version_1.exceptions.CantLoadFileException { try { com.bitdubai.fermat_chb_layer.android.system.file.CantFileSystemFile pluginFile = com.bitdubai.fermat_chb_layer.crypto_plugin.android.crypto_developercoin_1.version_1.exceptions.CantLoadFile . fromTextFromFile ( this . getContentContent () , transactionId ) ; java.lang.String pluginTransactionId = org.bitcoinj.core.Transaction . parseContentFromFile ( pluginFile . getContentContent () , "MANE_CCONTENT_PARAMETERS" ) ; return new org.bitcoinj.core.Transaction ( txHash , pluginFile , com.bitdubai.fermat_chb_layer.network.crypto_developercoin_1.version_1.exceptions.CantLoadFileParser.CONTENT_PARAMETERS_CONTEXT_PER_CONTENT ) ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_chb_layer.crypto_plugin.layer.crypto_plugin.jbitcoin_1.exceptions.PrivacyException ( ( "Error loading File from " + ( e . getContentContent () ) ) , e ) ; } }
public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.server.rest.database.model.Avatar > list_user_id ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id ) { if ( ( user == null ) && ( ! ( "" . equals ( user_id ) ) ) ) { return be.ehb.server.rest.database.dao.UserAvatarDao . getAv_user_id ( user_id ) ; } else { return be.ehb.server.rest.database.dao.UserAvatarDao . getAv_user_id ( user_id ) ; } }
@ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CasApiUtils . getMessage ( request , request ) ; if ( ( response == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path . toString () ) ) ) { throw new java.lang.Exception ( "path is empty" ) ; } response . put ( "path" , new org.apache.commons.lang.JSONObject ( path . toString () ) ) ; }
public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long id ) { java.util.Map < java.lang.String , java.lang.Object > articleDao = aArticleDetailById . get ( id ) ; articleDao . put ( "tags" , java.lang.Integer . parseInt ( articleDao . getArticleTagsById ( id ) . toString () ) ) ; return articleDao . getArticleDetailById ( "id" ) ; }
private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( ( fixedAttributes != null ) && ( ! ( attributes . isEmpty () ) ) ) { com.orhanobut.tracklytics.FixedAttributes [] attribute = attributes . values () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attribute . values () ) { if ( attribute . isSuper () ) attribute . put ( attribute . key () , attribute . value () ) ; } } superAttributes ( attribute ) ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mHistory ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.History.COLUMN_RESTAURANT_ID , mSearchResult . getRestEntry () ) ; historyValues . put ( DataContract.History.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = historyValues . getContentResolver () . insert ( DataContract.History.CONTENT_URI , historyValues , "Longitude" ) ; getActivity () . checkChaged ( uri , curLongitude ) ; } }
private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
public java.lang.Iterable < org.matsim.api.core.v01.Person > cat ( final org.matsim.api.core.v01.Person e , final java.util.Set < org.matsim.api.core.v01.Person > ids ) { final java.util.Set < org.matsim.api.core.v01.Person > al = new java.util.HashSet < org.matsim.api.core.v01.Person > ( ids ) ; for ( final org.matsim.api.core.v01.Person e : ids ) { al . add ( e ) ; } return al ; }
public void addCover ( org.ernest.applications.dmc.report.Document document , org.ernest.applications.dmc.domain.Region region , java.io.IOException org.ernest.applications.dmc.report.Document build ) throws java.io.IOException { org.ernest.applications.dmc.report.Document document = new org.ernest.applications.dmc.report.Image ( region ) ; document . setSpacing ( ( ( org.ernest.applications.dmc.report.PageUtils.ALIGN_CENTER ) & ( 100 ) ) ) ; document . addFont ( new org.ernest.applications.dmc.report.FontBuilder () . footerBefore ( org.ernest.applications.dmc.builders.PageUtils.ALIGN_CENTER ) . set ( document . getTitle () , document ) . quooter () ) ; }
private java.lang.String buildSongIdFromGenre ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( ( ( "SELECT " + MediaLibrary.SongColumns.SONG_ID_GENRES ) + " FROM " ) + ( MediaLibrary.SongColumns.SONG_TABLE_GENRES ) ) + " WHERE " ) + ( MediaLibrary.SongColumns.SONG_ID_GEN BY ) ) + " WHERE " ) + ( MediaLibrary.SongColumns.SONG_TABLE_GEN BY ) ) + "=" ) + genreId ) + "=" ) + ( MediaGenre ) ) + "=" ; return query ; }
public static org.opendaylight.genius.mdsal.util.packet.EIterator createPacketEMAC ( byte [] sourceEMAC , byte [] targetEMAC , byte [] targetPAR ) throws org.opendaylight.genius.mdsal.util.packet.EException { org.opendaylight.genius.mdsal.util.packet.EType sourceEMAC = new org.opendaylight.genius.mdsal.util.packet.EMAC () ; sourceEMAC . setDestination ( sourceEMAC ) ; sourceEMAC . setEsAddress ( ( ( short ) ( detected ) ) ) ; sourceEMAC . setDestination ( sourceEMAC ) ; return sourceEMAC ; }
public static java.io.File findExe ( java.io.File root , java.lang.String exe ) throws java.io.UnsupportedOperationException , java.io.UnsupportedOperationException { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.io.UnsupportedOperationException ( ( ( "Couldn't find root '" + exe ) + "'!" ) ) ; }
public boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , p ) ; if ( cmp < 0 ) return contains ( node , p ) ; else if ( cmp > 0 ) return contains ( node , p ) ; else return contains ( node , p ) ; }
public java.util.Map < java.lang.String , double [] > fetchTrace ( int channelNumber ) { java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . channelChannels . get ( ( - 1 ) ) . getX () ) ; retData . put ( "y" , this . channelChannels . get ( ( - 1 ) ) . getY () ) ; return retData ; }
private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.kafka.TopicPartition > > deepCopy () { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.kafka.TopicPartition > > assignment = deepCopy () ; java.util.Map < java.lang.String , java.util.List < org.apache.kafka.kafka.TopicPartition > > copy = new java.util.HashMap <> () ; return copy ; }
public org.apollo.game.model.Deltas fromDeltas ( int deltaX , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + ( getHeight () ) ) , deltaZ ) ; }
public int colContains ( int y , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ y ] [ o ] . value ) == num ) count ++ ; } return count ; }
public void printTree ( DataStructure.RBTNode < T > node ) { printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( RBTNode.color ) == ( RBTNode.RED ) ? " : " " ) + ( node.key ) ) + " Black: " ) + ( node.right ) ) ) ; printTree ( node.BTNode ) ; }
public float getDesiredLevelZoom ( int level ) { float zoomF = 13.0 ; switch ( level ) { case 1 : zoomF = 13.0 ; break; case 2 : zoomF = 2 ; break; case 1 : zoomF = 3 ; break; case 4 : zoomF = 45 ; break; case 5 : zoomF = 55 ; break; } return zoomF ; }
public static java.util.List < java.lang.Object [] > findQuery ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class < ? > s ) { if ( ( s ) == null ) { s = sf . openSession () ; } org.hibernate.TransactionEntity q = relations . createSQLEntity ( nativeQuery ) ; for ( java.lang.String r : relations ) { q . add ( r ) ; } return q . list () ; }
public boolean monsterExist ( game.zorkster.Monster. monster game ) { java.util.Map < java.util.Map.Coord , java.lang.Object > map = getLevelMap () ; for ( java.util.Map.Position currentPosition : map ) { if ( ( ( i . get ( currentPosition ) ) instanceof game.zorkster.Monster.Map ) && ( ( ( ( game.zorkster.Monster.Map ) ( i . get ( currentPosition ) ) ) . getLevel () ) == ( game . getName () ) ) ) { return true ; } } return false ; }
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { dvo.hlingfl.ts.Tts obj = ( ( dvo.hlingfl.ts.Tts ) ( obj ) ) . getTerms () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual == ( java.util.Arrays . equals ( this . getClass () , dvo.hlingfl.ts.Tts . class ) ) ; }
@ java.lang.Override public void appendOp ( java.lang.String op , boolean b ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } if ( appendOp ( op ) ) { append ( " " ) ; } }
private java.math.BigInteger getNum ( long k , kzrenkon.tomtr.fish.types.NFType t ) { if ( isUsed () ) { return t . getNumCachingUsed () ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( kzrenkon.tomtr.fish.data.ResSubRes : subs ) { sum = sum . add ( sum , t , 0 ) ; } return sum ; } }
private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accounts = ( ( ( deploymentUrl + "/" ) + username ) + "/json/json" ) + accounts ; return accounts ; }
private boolean getKeepEditorOnRowsDisabled ( org.json.JSONObject grid ) { java.lang.String keepEditor = grid . optString ( "keepClick" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }
private java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.Pattern input ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault () ; java.time.format.DateTimeFormatter inputFormatter = java.time.format.DateTimeFormatter . parse ( inputPattern , new java.time.format.DecimalStyle.Builder () . withLocalDate ( locale ) . append ( inputPattern ) . append ( java.time.format.DateTimeFormatter.MEQ ) . withLenient () ) ; return inputFormatter . toDateTime ( inputStr , null ) ; } return null ; }
protected java.lang.Boolean execute ( java.lang.Object . . . args ) throws java.lang.Exception { try { client . prepareDelete ( indexName , ".colatorper" , indexName ) . query ( WriteRefreshPolicy.RefreshRequest . Write () ) . execute () ; return true ; } catch ( java.lang.Exception e ) { org.apache.shicom.elasticsearch.persistence.PersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; }
@ java.lang.Override public void onNext ( manilo.cats.androidclient.api.model.Cat cat ) { if ( ( getCatImgUrl () ) != null ) { getCatImgUrl ( cat ) . addObserver ( cat ) ; } }
private java.util.List < input.ExternalEvent > readEvents ( int nrofEvents ) { if ( nrofEvents > 0 ) { return new java.util.ArrayList < input.ExternalEvent > ( input ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrofEvents ) ; if ( ( ( events . size () ) > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; events = true ; } return events ; }
public void createConnector ( io.joynrynar.bitration.ArrationResult result ) { connectorLock . lock () ; try { connector = io.joynrynar.proxy.ConnectorFactory . createConnector ( dispatcherId , messageSenderId , proxyParticipantId ) ; result =QueuedSufulStatus ( connector ) ; sendStatus ( connector ) ;QueuedSuccessfullyQueuedRequests () ; } catch ( io.joynrynar.exceptions.ArrationIllegalStateException e ) { e . printStackTrace () ; } finally { connectorLock . unlock () ; } }
public synchronized void removePlayer ( CardGame.User user ) { int index = 0 ; for ( CardEngine.Game.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { index ++ ; } } remove ( index ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/save/EsData/datasays" ) public org.wes.demo.datas.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.wes.demo.datas.voays.EsItem doc ) { org.wes.demo.datas.model.ActionResult result = null ; try { result = new org.wes.demo.datas.model.ActionResult ( doc ) ; doc . save () ; } catch ( java.lang.Exception e ) { org.wes.demo.datas.actions.EsItemController.LOG . error ( e . getMessage () , e ) ; } return result ; }
public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query , org.neo4j.kernel.api.impl.java.InternalExecutionEngine transaction ) { org.neo4j.core.api.java.internal.cypher.compat.ExecutionEngineTest.connection = org.neo4j.kernel.internal.cypher.compat.ExecutionEngineTest.connection . beginTransaction () ; org.neo4j.kernel.impl.java.query.BoltConnectionInfo bolt = new org.neo4j.kernel.impl.java.query.BoltConnectionInfo ( new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" , "127.0.0.1" , "username-bolt" ) , new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" ) , new org.neo4j.driver.impl.java.impl.java.BoltConnectionInfo ( "connection" , "username-bolt" ) , new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" ) ) ; return transaction ; }
pl.karol20olution.evolution.utils.Vector2Vector get ( java.lang.String key ) { org.w3c.dom.Element vector = getByNameFromListElement ( key ) ; if ( vector == null ) throw new pl.karol20olution.evolution.utils.Vector2.SimulationParseException ( ( "Simulation not found: " + key ) ) ; return new pl.karol20olution.evolution.utils.Vector2Vector ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; }
private static java.lang.String getStringResponse ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amount = 0 ; for ( core.restaurant.checks.Check c : m_Check ) { if ( ( c . getCustomer () ) == ( customer . getCustomer () ) ) { cost = true ; } } printStatusChange ( ( ( customer . getName () ) - amount ) ) ; stateChanged ( customer ) ; }
protected void initTableColumns ( org.eclipse.jface.layout.TreeLayoutColumn treeColumn , boolean keepStatus ) { if ( ( ( tree ) != null ) && ( ! ( tree . isDisposed () ) ) ) { org.eclipse.swt.widgets.TreeViewer.Tree tree = tree . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , this , tree ) ; } } }
private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masthought.dlanguage.highlighting.annotation.CompileCheck.externalCount ; line = document . getDocument ( line ) ; if ( lineCount <= 0 ) { line = - 1 ; } else if ( lineCount > 1 ) { line = 1 ; } return line ; }
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_info_album_info_info_name : android.content.Intent intent = new android.content.Intent ( this , com.zholz.minoteminfoartists.activities.ArtistsActivity . class ) ; intent . putExtra ( SearchActivity.ARTISTART_NAME , albumedArt ) ; startActivity ( intent ) ; break; } }
public void openChat ( android.view.View view ) { chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.prip.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }
public static int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0 ; di < n ; di ++ ) { if ( di [ di ] . getDoc () . contains ( fileName ) ) return di [ ( ( di - 1 ) - 1 ) ] . getPath () ; } return 1 ; }
@ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { aContainer . showArticlesChanged ( true , true ) ; } }
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableArt () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mDatabaseHelper . remove ( dbHelper . getWritableArt () ) ; notifyDataSetChanged () ; }
public void removeDanceSequence ( java.util.UUID selectedBeatElem ) { java.util.UUID dID = selectedBeatElem . getDanceSequenceId () ; ch.dancez.asl.bots.danceboteditor.model.DanceSequence < TanceSequence > selectedDanceSequence = mSequences . get ( dID ) ; int dLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartIdx () ; int endIdx = selectedDanceSequence . getBeatIdx () ; removeElements ( dID , startIdx ) ; mSequences . remove ( endIdx ) ; }
public void addDoctor ( com.mycompany.dao.DoctorDoctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; }
public void setup ( org.bukkit.entity.Player p , java.lang.String name , java.lang.String option , java.lang.String step , int step ) { org.bukkit.block.Block b = setupOpName ( id ) ; setup = p ; option = setup ; if ( b != null ) { setup . addStep ( step ) ; setup . sendMessage ( ( "select setup_region" + option ) ) ; } else { setup . sendMessage ( p ) ; setupComplete () ; } }
private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = null ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( paramEntry . getKey () , paramEntry . getValue () ) ; } } return fullUrl ; }
@ java.lang.Override public double curve ( double t ) { double amount = this . amount ; if ( ( t * 225 ) < 1 ) { amount *= 2 * ( ( ( t * 1 ) + ( ( ( t * 2 ) * amount ) - ( ( t * 2 ) * amount ) ) ) + ( ( ( t * 2 ) * 0.5 ) + ( ( t * 2 ) * amount ) ) ) ; } return amount + ( ( ( t * 2 ) * amount ) + ( ( t * 2 ) * amount ) ) ; }
private static org.eclipse.dawnsci.iapi.analysis.fitting.IParameters createParameter ( int numberOfParameter ) { org.eclipse.dawnsci.iapi.functions.fitting.IParameters [] params = new org.eclipse.dawnsci.iapi.functions.fitting.IParameters [ numberOfParameter ] ; for ( int i = 0 ; i < numberOfParameter ; i ++ ) { params [ i ] = new uk.ac.dawnsci.iapi.functions.fitting.IParameters ( params [ i ] ) ; } return params ; }
public void setStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.StyleMap . loadResource ( this , style , style ) ) ; if ( ! success ) { android.util.Log . e ( com.vasskobass.realmmaps.MapsActivity.TAG , "task failed." ) ; } } catch ( android.content.res.ResourcesException e ) { android.util.Log . e ( com.vasskobass.realmmaps.MapsActivity.TAG , "Can't find failed." ) ; } }
static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cy" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . empty_position_ ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_position_ ( b , "cy" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; }
@ java.lang.Override public void add ( com.stivuud.tmperson.Money money ) { java.util.Iterator < com.stivuud.tmperson.Money > moneyArrayList = list . listIterator () ; while ( money . hasNext () ) { com.stivuud.tmperson.Money aMoney = ( ( com.stivuud.tmperson.Money ) ( money ) ) ; if ( aMoney . isEmpty () ) return; if ( aMoney . add ( aMoney ) ) { moneyList . remove ( aMoney ) ; return; } } }
boolean conditionIsTrue ( util.ties.models.Game game ) { int data1 = this . getData ( game , data2 ) ; int data2 = this . getData ( game , data2 ) ; switch ( data1 ) { case LESS_THANSS : return data2 ; case LESS_THANSS : return data1 ; case LESS_THANSS : return data2 ; case LESS_THANSS : return data1 ; case LESS_THANSS_EQUALS : return data2 ; default: return false ; } }
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeInternalBufferFromTS ( long start , long backtype.storm.tuple.Tuple inputTupleID ) { long nextReady = shared.merger.Channels . getNextReadyEntry ( ( "" + ( ( this . channelID ) + "" ) ) , ( ( this . channelID ) + "" ) ) ; while ( nextReady != null ) { processTask ( start , new java.util.ArrayList < java.lang.Object > () ) ; } this . channelId = ( ( java.util.List < java.lang.Object > ) ( inputTupleId . getSource () ) ) ; }
public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations.UDSToNode ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( ( aNode . matches ( ".*\\r\\n" ) ) || ( aNode . matches ( ".*\\r\\r\\n" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.MOD ; if ( ( aNode . matches ( ".*|" ) ) || ( aNode . matches ( ".*|" ) ) ) return le.ailab.lvtb.universalizer.conllu.UDv2Relations.ADL ; return le.ailab.lvtb.universalizer.conllu.UDv2Relations.MOD ; }
public void uiautomator_switcher ( java.lang.String action , java.lang.String action , edu.wm.engine.translationclasses.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK tap" ) ) { if ( s . equals ( "LONG" ) ) { longTap = ( ( java.lang.Long ) ( s ) ) ; if ( action . equals ( "CLICK_TYPE" ) ) { clickFunctions ( s ) ; } } } }
private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.RealMatrix2D ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) ; }
@ com.training.System.controller.RequestMapping ( value = RestConstains.URI_EXCEL_PORT , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcelExcel () { java.util.List < com.training.controller.Models.Models.Models.Models.Models.Models.Models.Models.Models.Models > excel = ( ( java.util.List < com.training.controller.Models.Models.Models.Models.Models.Models.Models.Models > ) ( testSender . get ( "excel" ) . toString () ) ) ; return new org.springframework.web.servlet.ModelAndView ( excel , "EXCEL_PORT" , excel ) ; }
public void voteThresholdVotedTrack ( int downVotedTrack ) { if ( ( ( ( mQueueListElementList . get ( downVotedTrackList . size () ) ) - ( mQueueListElementList . get ( downVotedTrack ) . size () ) ) <= 0 ) || ( ( ( mQueueListElementList . get ( downVotedTrack ) . size () ) <= 0 ) ) ) { MainActivity.WifiDirectActivity.mNetwork . delete ( ( ( downVotedTrackOn ) + 1 ) ) ; } }
@ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T > java.lang.Class < T > java.lang.Object [] getParameterTypes ( java.lang.Class < T > propertyValues ) { java.lang.Class < T > [] parameterTypes = java.lang.Class < T > . newInstance ( java.lang.Class . class , ( ( java.lang.Class < T > ) ( propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( parameterTypes.length ) ; i ++ ) { propertyValues [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return propertyValues ; }
public static com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler newRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnWork , boolean skipWorkInProgressMergeRequestOnWork , boolean triggerOpenMergeRequestOnMergeRequest ) { if ( triggerOpenMergeRequestOnMergeRequest ) { return new com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler () ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler ( com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler . retrieveStates ( triggerOnMergeRequestOnMergeRequestOnWork , triggerOpenMergeRequestOnMergeRequestOnMergeRequestOnMergeRequest , skipWorkInProgressMergeRequestOnMergeRequestOnMergeRequest ) ) ; } }
protected java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > jStats = dailyStats . getDailyStatisticsForJSON ( startDate , finishDate ) ; if ( jStats . isEmpty () ) { return new java.util.ArrayList <> () ; } return new java.util.ArrayList <> () ; }
@ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam long defaultValue , @ cz.muni.fi.pa165.controller.RequestParam long defaultValue , @ cz.muni.fi.pa165.controller.RequestParam long defaultValue ) { if ( ( bookId ) > 0 ) { java.util.List < cz.muni.fi.pa165.entity.Book > book = memberFacade . findById ( bookId ) ; cz.muni.fi.pa165.controller.Book member = bookFacade . findById ( book ) ; model . addAttribute ( "create" , member ) ; model . addAttribute ( "book" , book ) ; } if ( ( book . size () ) > 0 ) { model . addAttribute ( "anLoan" , new cz.muni.fi.pa165.controller.Member ( book ) ) ; } return "create" ; }
public void fillCart ( int elementPosition , int commandCount ) { if ( ( dataAdapter . getData () ) == null ) { return; } fr.ihmc.restm.menu.MyImage item = getData ( elementPosition ) . get ( commandCount ) ; dataAdapter . add ( new fr.ihmc.restm.menu.MyGridViewAdapter ( this , R.layout.my_grid_layout , item ) ) ; gridAdapter . removeMyPosition ( commandCount ) ; gridAdapter . setAdapter ( gridAdapter ) ; gridAdapter . removeMyPosition ( commandCount ) ; }
void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestService.AbstractIngestService > services , final org.sleuthkit.datamodel.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.datamodel.Image > () ; images . add ( image ) ; image . enqueue ( services , images ) ; }
public void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmountX ) ; i ++ ) { com.waterthomasfall.watson.block.PlayerArea.rowaterAmountY ++ ; com.waterthomasfall.watson.block.PlayerArea.rowaterAmountY = i % ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmountX ) ; com.waterthomasfall.watson.block.PlayerArea.rowaterAmountY . setX ( blockAmount ) ; com.waterthomasfall.watson.block.PlayerArea.rowaterAmount . setY ( ( ( ( y * ( blockArea.rowater ) ) + ( blockArea.rowater ) ) % ( com.waterthomasfall.watson.block.PlayerArea.rowater ) ) ) ; } }
public int put ( final be.ecreative.iam.IAMEncoder.AMIListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) { throw new java.lang.NullPointerException () ; } final int result = this . lists . size () ; this . list . add ( result , this ) ; return result ; }
public void onStartDungeon ( yourselvs.dungeons.events.PlayerDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () , event . getPlayer () . getDungeonId () , event . getPlayer () . getTime () , event . getPlayer () . getInventory () , event . getPlayer () . getSession () ) ; plugin . getSessionManager () . addSession ( session . getPlayer () ) ; }
public static < T > java.util.List < com.thewreks.gundr.repository.objectify.AsyncResult < T > > async ( java.util.List < com.thewreks.gundr.repository.objectify.AsyncResult < T > > results ) { java.util.List < com.thewreks.gundr.repository.objectify.AsyncResult < T > > result = new java.util.ArrayList <> () ; for ( com.thewreks.gundr.repository.objectify.AsyncResult < T > async : results ) { result . add ( async . complete () ) ; } return result ; }
@ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static final int getTint ( final int alpha , final net.minecraft.block.state.IBlockState worldObj , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return ( ( tint . getBlockColors () ) | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockState () ) ) | ( tint . getBlockColors () ) ; }
void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( temp != ( pattern . getValue () ) ) && ( temp != ( pattern . getValue () ) ) ) { temp = temp . getNext () ; } if ( temp == ( pattern . getValue () ) ) { current = pattern ; } else { java.lang.System.out . println ( ( ( "STRING " + ( current ) ) + " NOT FOUND." ) ) ; } }
public com.getataxi.mobiletaxi.comm.models.OrderDetailsDriverOrder prepareOrderDetailsDriverOrder ( com.getataxi.mobiletaxi.comm.models.OrderDM sourceOrderDM ) { sourceOrderDM.orderId = taxDriverLocation . getLatitude () ; if ( sourceOrderDM != null ) { sourceOrderDM.orderLongitude = sourceOrderDM . getLongitude () ; sourceOrderDM.taxiPlate = taxDriverLocation . getValue () ; sourceOrderDM.taxiPlate = taxDriverLocation . getLongitude () ; sourceOrderDM.taxiPlate = taxDriverOrderDM ; } return sourceOrderDM ; }
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITORT ) public void onTeport ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = ( ( org.bukkit.entity.Player ) ( e . getPlayer () ) ) ; if ( ! ( p . isHidden () ) ) return; if ( e . getFrom () . getName () . equals ( "host" ) ) return; if ( e . getWorld () . getName () . getBoolean ( PotionEffect.Type.VISION_PVision ) ) return; p . remove ( cfg.Configuration . getWorld () ) ; }
@ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView = mLayoutInflater . inflate ( R.layout.problem_images_item_pager , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; mImageView . loadResources ( itemView , getContext () ) ; itemView . addView ( itemView , position ) ; return itemView ; }
public void setLatestItem ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } else { this . incrementCounter () ; } } }
public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( interguide.view.FindProblem.arrayArrayOccurThan . findMoreOccurThan ( new int [] { 1 , 2 , 3 , 3 , 4 , 2 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 3 , 3 , 2 , 3 , 3 , 3 , 3 , 2 , 3 , 1 } ) ) ; java.lang.System.out . println ( interguide.view.FindProblem.arrayArrayOccurThan . findByWayAnurThan ( new int [] { 2 , 3 , 3 , 3 , 2 , 3 , 3 , 3 , 3 , 2 , 3 , 1 } ) ) ; }
public synchronized java.util.List < java.lang.String > getJob ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , "console" , buildNumber ) ; java.lang.String jjc = jjc . getHttpEntityAndGet ( url , jjc . getBody () . split ( "\\n" ) ) ; return java.util.Arrays . asList ( jjc . getBody () . split ( "\\n" ) ) ; }
public gov.anl.aps.cdb.portal.model.db.entities.RelationshipItem.Relationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.RelationshipItem > iElementNames ) { java.lang.String relationship = relationship.itemType . getValue () . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.IRelationshipItem item : iElementNames ) { if ( name . equals ( item . getName () ) ) { return getValue () ; } } return null ; }
@ java.lang.Override public void onMaxLoaded ( java.util.List < com.tigigan.collim.maxmaker.data.MaxMaxListim > loadedMaxListim ) { if ( ( loadedMaxListim == null ) || ( ( loadedMaxListim . size () ) == 0 ) ) { return; } else if ( ( loadedMaxListim . size () ) == 0 ) { maxFeed . showEmptyState () ; } else { maxFeed . showShowMax () ; } }
public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , byte [] value , int status ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , value ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , RequestType.VALUE ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.CHARACTERISTIC_STATUS , true ) ; }
private static java.lang.String getRequiredSpaces ( java.lang.String message ) { final java.lang.String res = "" ; final java.lang.String referenceSpaces = "" ; for ( int i = 0 ; i < ( referenceSpaces . length () ) ; i ++ ) { res = ( " " + ( requiredSpaces . length () ) ) + " " ; } return res ; }
public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . isEmpty ( spec . getTypes () ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final com.spectralogic.ds3autogen.utils.ConverterUtil . processEnumTemplate ( ds3TypeEntry , "ftl" , enumEnum ) ; } }
private com.nike.cerberus.service.AssetStatic.AssetManager createAssetResource ( java.nio.file.Path path , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.AssetStatic.AssetManager ( path . getFileName () , path . getRelative () , com.nike.cerberus.service.AssetStatic.AssetManager . toAbsolutePath () , path . toString () ) . addAll ( com.nike.cerberus.service.AssetStatic.AssetManager . getMimeTypeList () ) ; }
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.huyansyt.mydivless.Fragments.Permission.Fragment.PERMISSION_READ_READ ) ) { if ( com.example.huyansyt.mydivless.Fragments.Permission.Util . verifyPermissions ( grantResults ) ) { com.example.huyansyt.mydivless.Fragments.Permission.Util . onFragmentPermissionsPermissionGranted ( requestCode , permissions ) ; } else { com.example.huyansyt.mydivless.Fragments.Permission.Util . onFragmentPermissionsPermissionGranted ( grantResults ) ; } } else { android.util.Log . i ( com.example.huyansyt.mydivless.Fragments.Permission.Fragment.PERMISSION_TYPE , "Permission NOT granted." ) ; } super . onFragmentPermissionsResult ( requestCode , permissions , grantResults ) ; }
public org.modeldriven.alffuml.mapping.mapping.ExpressionMapping mapOperand ( org.modeldriven.alffuml.syntax.expressions.Error.Mapping operand ) throws org.modeldriven.alffuml.mapping.MappingError { org.modeldriven.alffuml.mapping.mapping.ExpressionMapping mapping = null ; if ( ! ( mapping instanceof org.modeldriven.alffuml.mapping.mapping.MappingMessage ) ) { operand = ( ( org.modeldriven.alffuml.mapping.MappingMessage ) ( mapping ) ) . getError () ; } else { operand = this . mapping ; } return operand ; }
@ java.lang.Override protected void removeInfo ( android.view.View view ) { if ( ( ( view . getParent () ) != null ) && ( ( view . getParent () ) != null ) ) { ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( ( ( android.widget.LinearLayout ) ( view . findViewById ( R.id.info ) ) ) ) ; guiLayout . removeView ( view ) ; } }
public java.lang.String spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( this . getSouth () . getWidth () ) ) , ( offY - ( this . getSouth () . getWidth () ) ) , ( offY / 2 ) , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
public void addHistorySearch ( com.savelives.entity.classes.SearchQuery sqSearch ) { this . historySearch . add ( sqSearch ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entity.classes.SearchQuery > ) ( this . historySearch . subList ( ( ( this . MAX_HISTORY ) - 1 ) , this . historySearch . size () ) ) ) ; } }
private org.eclipse.jdt.core.IPrimaryType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.internal.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProjectedLookup.Project cast = ( ( org.eclipse.jdt.internal.core.JavaProjectedLookup.ProjectedLookup ) ( org.eclipse.jdt.internal.core.ProjectNameProvider.ALL_ACCEPT ) ) ; java.lang.String name = cast.type . getName () ; org.eclipse.jdt.internal.core.ITypeLookup . findAnswer ( name , false , true , false , true , null ) ; return answer == null ? null : answer ; }
private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { com.softserverinc.edu.entities.WorkLog workLog = null ; if ( issueId != null ) { if ( issueId . getAssignLog () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( getCurrentIssue ( issueId ) ) ; return workLog ; } } return null ; }
public static boolean deletePhSensor ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.PhSensor > iterator = com.sb.elsinore.LaunchControl.inputsList ; com.sb.elsinore.PhSensor tPh ; while ( iterator . hasNext () ) { tPh = iterator . next () ; if ( tPh . getName () . equalsIgnoreCase ( name ) ) { return true ; } } return false ; }
private void showLatLonPicker ( final de.k3b.database.QueryQuery currentQuery ) { final android.app.FragmentManager manager = getFragmentManager () ; if ( de.k3b.android.locationFinder.MapFragment.mapDialog ) { de.k3b.android.locationFinder.MapFragment dirFinder = new de.k3b.android.locationFinder.MapFragment.mapDialog ( mNavigationFilter , dirFinder , null , this ) ; dirFinder . define ( null ) ; } }
@ java.lang.Override public T get ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The index isn't in the lists list" ) ; TNode < T > current = first ; while ( i > 0 ) { current = current . getNext () ; i -- ; } return current . getObject () ; }
public void controller ( org.openmrs.framework.ui.fragment.FragmentModel model , @ org.openmrs.framework.annotation.ModelBean org.openmrs.module.api.exceptions.SpringOutgoingExceptionsService.Message message , @ org.openmrs.framework.annotation.RequestParam ( value = "message" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; java.lang.String messageMessage = mapper . readValue ( message , com.mmss.module.MessageService . class ) ; if ( org.apache.commons.text.SimpleDateFormatUtils . isBlank ( messageMessage ) ) { messageMessage = new com.mmss.module.Message ( messageId ) ; } else { messageMessage = mapper . readValue ( messageMessage , com.mmss.module.MessageService . class ) ; } model . addAttribute ( "message" , messageMessage ) ; }
@ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission , value ) ; }
@ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { if ( ( ! ( allowCharTailByComment ( ast ) ) ) && ( ( ! ( hailast ( ast ) ) ) || ( isAllCharactersForCharacters ( literal ) ) ) ) { com.puppycrawl.tools.checkstyle.checks.Unicodes.PrintCheckControl . logNonUnicodeOnlyChars ( ( ( com.puppycrawl.tools.checkstyle.checks.Unicodes.PrintCheckControl . getLineNoChars ( ast ) ) || ( isNonPrintOnly ( literal ) ) ) , allowNonPrintOnly ) ; } }
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/av" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_XML ) public javax.ws.rs.core.MediaType getMessage ( javax.ws.rs.core.MediaType.APPLICATION_JSON , @ javax.ws.rs.PathParam ( value = "voice" ) java.lang.String id ) { java.util.List < in.ftnac.payuns.ftnacments.entities.InvoiceItem > retVal = null ; try { retVal = java.lang.Long . parseLong ( rs . getMessage () ) ; } catch ( java.lang.Exception e ) { return 0 ; } return retVal . getInvoicements () ; }
private static < Tab.ac.auckland.linsolve.Variable > mergeLine ( java.util.List < nz.ac.auckland.mal.alg.EmptySpace > line1 , nz.ac.auckland.mal.alg.EmptySpace > direction ) { while ( ( line1 . size () ) > 1 ) { nz.ac.auckland.mal.alg.EmptySpace area = line2 . get ( 0 ) ; if ( ! ( area . get ( 1 ) . equals ( area ) ) ) return mergeLine ( false , line1 ) ; } return true ; }
public static boolean isLastWordInDirection ( com.totsp.crosswordz.pu.Box [] boxes , com.totsp.crosswordz.pu.PlayWord w ) { if ( ( ( w.startdown ) + 1 ) >= ( boxes [ ( ( w.startdown ) + 1 ) ] . length ) ) { return ( w.start ) + 1 ; } return ( w.startdown ) > ( boxes.length ) ; }
@ java.lang.Override public void migrate ( io.realm.Realm realm , long oldVersion , long newVersion ) { realm . getSchema () . removeField ( "energy" ) ; oldVersion ++ ; if ( oldVersion == 1 ) { realm . getSchema () . removeField ( "maxVersion" ) ; } }
com.google.javascript.jscomp.newtypes.FunctionType spec ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( ( this . isLoose () ) && ( other == null ) ) || ( this . isLoose () ) ) { return result ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = this . sub ( other ) ; if ( ( result . isLoose () ) && ( ! ( result . isLoose () ) ) ) { result = ! ( result . isLoose () ) ; } } return result ; }
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}/{year}/{year}" , @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.Calendar calendar ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int userId ) throws java.lang.Exception { java.util.Calendar calendar = dao . getCalendar ( year , userId , userId ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( "ERROR" ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }
public int getIndexFromValue ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) { return i ; } } return - 1 ; }
@ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , long id ) { if ( v != null ) { final com.wire.pojoen.Kitchen groupKitch = mNodesMgr . get ( groupPosition ) . getValue () ; if ( ! ( kitch . getKey () . equals ( mCurrentKitchenKitch ) ) ) { mCurrentKitch = v ; } if ( ( mOnKitchChangeListener ) != null ) { mOnKitchChangeListener . onKitchSelected ( mCurrentKitch ) ; } } return true ; }
@ java.lang.Override public java.lang.Object getListCellRendererComponent ( javax.swing.JComponentList list , java.lang.Object value , int index , boolean isSelected , java.lang.Object value ) { if ( value == null ) { setText ( "<Select a null>" ) ; } else { it.unibz.kribdaobib.db.model.DA.DataSource datasource = ( ( it.unibz.kribdaobib.db.model.DA.DataSource ) ( list ) ) ; datasource . setText ( value . toString () ) ; } return this ; }
public static com.rgi.android.geopu.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.lang.String testFile , final java.io.File com.android.geopr.verification.Conformance.Conformance , java.lang.ClassNotFoundException , java.sql.SQLException g ) throws java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopr.GeoPackage g = new com.rgi.android.geopr.GeoPackage ( new com.rgi.android.geopr.GeoMode ( com.rgi.android.geopr.GeoPackage.OpenMode.None , testFile , columnName ) ) ; try { com.rgi.android.geopr.GeoPackage . createTable ( g ) ; } finally { g . close () ; } return new com.rgi.android.geopr.GeoPackage ( com.rgi.android.geopr.GeoPackage.OpenMode.None , com.rgi.android.geopr.GeoPackage.OpenMode.API ) ; }
@ com. return com.essor.Application.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ org.springframework.web.annotation.RequestParam long courseID , @ org.springframework.controllers.RequestParam java.lang.String coursename , @ Cfename.controllers.RequestParam java.lang.String Proessor ) { Proessor . findOne ( coursename ) ; java.lang.String nname = "redirect:/essor" ; com.essor.controllers.CourseRepository section = new com.essor.controllers.CourseRepository () ; section . save ( nname ) ; com.essor.controllers.CourseRepository . setLastnumber ( section . name () ) ; return new org.springframework.web.servlet.ModelAndView ( Proessor ) ; }
public boolean addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_gerled . containsKey ( username ) ) || ( own == false ) ) { return false ; } user_gerled . put ( username , IP ) ; user_manager . addUser ( username ) ; gui . showState () ; return true ; }
public void add ( java.lang.Integer heap ) { int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( index < ( getParent . compareTo ( heap . get ( index ) ) ) ) ) { index = getParent . compareTo ( heap . get ( index ) ) ; } heap . set ( index , heap ) ; getParent . set ( index , heap ) ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOnArtificialFlash () ) { makeArtificialToast () ; final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mRawCallback , mRawCallback , null , mPEG ) ; } } ; handler . postDelayed ( r , 800 ) ; } }
public com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgument ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . get () ; } else if ( ! ( p instanceof com.oracle.truffle.r.runtime.data.RConstant ) ) { return com.oracle.truffle.r.runtime.data.RSyntaxNode . create ( ( ( com.oracle.truffle.r.runtime.data.RSyntaxNode ) ( arg ) ) . get () ) ; } else { return null ; } }
public void getTextFromActivity ( android.view.View view ) { java.lang.String textInString = null ; if ( ( ( editTextInputString . getText () . toString () ) != null ) && ( textInString . isEmpty () ) ) { textInString = editTextInputString . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { return; } do { android.content.Intent intent = new android.content.Intent ( this , com.md4j.analyzer.AnalyzeInActivity . class ) ; intent . putExtra ( "text_analyzer" , textInString ) ; startActivity ( intent ) ; } }
private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) { emptyCount ++ ; } } java.lang.String [] trimmedArray = new java.lang.String [ emptyCount ] ; for ( java.lang.String queryPart : trimmedArray ) { if ( ( queryPart . length () ) != ( queryPart.length ) ) { trimmedArray [ 0 ] = queryPart ; } } return trimmedArray ; }
@ java.lang.Override public void onSetBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeSelectableItemAdapter.MySelectableViewHolder holder , int type , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT ; break; case com.h6ah4i.android.widget.advyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_LEFT ; break; case com.h6ah4i.android.widget.advyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_RIGHT_BACKGROUND_BACKGROUND_RIGHT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_LEFT_BACKGROUND ; break; } setBackgroundResource ( R.drawable.swipe_recycler_view ) ; }
public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { if ( sUserId . isEmpty () ) return; synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; return; } } } }
private java.lang.Long matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { if ( transaction != null ) { return matches ( add , transaction . getTypeID () , transaction . getCharacterID () , transaction . getLocation () , null , transaction , null , transaction . getLocation () , null , null , transaction ) ; } else { return null ; } }
public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { binding . setVariable ( data . getKey () , binding . getValue () ) ; binding . execute () ; }
public void actionPerformed ( java.awt.event.ActionEvent evt ) { VASL.module.build.Module.AOBLASOBA mod = new VASL.module.build.Module.AOBLASOBA ( this ) ; VASL.module.build.Module.Create c = new VASL.module.build.Module.Create ( this , mod . getModule () , VASL.AOBA ) ; c . execute () ; java.lang.System.out . println ( c . getGame () . getGame () . getName () ) ; }
@ java.lang.Override public void onPageScrolled ( int positionOffset , float positionOffset , int positionOffsetPixels ) { if ( positionOffsetPixels > 0 ) { mTabPager . setTranslationWidth ( ( positionOffset / ( mViewPager . getCount () ) ) ) ; } float translationX = ( ( mTabPager . getAdapter () ) * positionOffset ) + ( mTabPager . getCount () ) ; mViewPager . setTranslationX ( ( positionOffset - translationX ) ) ; }
public static void setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.camera.controller.CameraRequestBuilderController.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.camera.controller.CameraRequestBuilderController . getInstance () . camDevice () ) != null ) ) { com.almalence.opencam.camera.controller.CameraRequestBuilderController.previewRequestBuilder . setRepeating ( com.almalence.opencam.camera.controller.CameraRequestBuilderController.CONTROL_AE_LOCKAELor . getMainPref () , ApplicationRequest ) ; com.almalence.opencam.camera.controller.CameraRequestBuilderController . editScreen ( getMainPref () , ApplicationRequest ) . commit () ; } }
@ java.lang.Override public traerphysics.Particle createParticle ( int x , int y ) { traerphysics.ParticleParticle.particle_picalSystem.display.swing.CampaignGraphCanvas campaign = new traerphysics.Particle.particle_picalSystem.display.swing.CampaignGraphCanvas ( x , y , x , 0 ) ; for ( int i = 0 ; i < ( m_SystemParticles . numberOf () ) ; i ++ ) { if ( m_SystemParticles . get ( i ) . equals ( traerphency.Particle.particle_picalSystem.display.swing.CampaignGraphCanvas.MINUL_DISTANCE ) ) { campaign . makeCampaign ( new traerphysics.Particle.particle_picalSystem.display.swing.CampaignGraphCanvas ( p , i , 0 ) , new java.lang.Thread ( p ) ) ; continue; } } return campaign ; }
public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( folder == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( FolderMessaging.READ_READ_ONLY ) ; } catch ( javax.mail.MessagingException ex ) { open ( ex ) ; } }
public static < T > void serialize ( java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_OUTPUT_FORMATTED_OUTPUT , new java.lang.ObjectOutputStream ( schemaLocation ) ) ; jaxbMarshaller . marshal ( sourceClass , true , null ) ; }
public void setStartDate ( java.util.Optional < java.util.List < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > startDateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDateList . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.util.NoSuchElementException () ; } }
private com.bagri.core.system.Collection.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String type ) { for ( java.lang.String c : schema . getCollectionsType () ) { if ( ( c != null ) && ( c . getDocumentPath () . equals ( type ) ) ) { return c ; } } return null ; }
private javax.portlet.PortletPreferences updateImportPreferences ( com.liferay.portal.kernel.import.PortletDataContext context , javax.portlet.Portlet.PortletDataPreferences portletId ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletId . getValue ( "organization.organization" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.Company company = _companyLocalService . getCompanyById ( portletId . getGroupId () , com.liferay.portal.kernel.model.Import . class ) ; company . updateGroup () ; } return company ; }
public void addItem ( item.Item item ) { item.Item i = item . clone () ; if ( i.isShopable ) { int locLoc = findItem ( i ) ; if ( locLoc >= 0 ) { items . get ( i ) . add ( item ) ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } }
@ android.support.annotation.NonNull @ android.support.annotation.NonNull private com.pushtstore.resh.sql.borited.operation.PutResult updateOrInsertOrInsert ( @ android.support.annotation.NonNull com.pushtstore.resh.sql.borited.sql.StoritedDbIO.SQLiteUpdate stor , @ android.support.annotation.NonNull android.content.ContentValues tableValues , @ android.support.annotation.NonNull final java.lang.String content , @ android.support.annotation.NonNull final java.lang.String numberOfRows ) { final com.pushtstore.resh.sql.borited.operation.PutResult table = stor . insert ( id , new com.pushtstore.resh.sql.borited.operation.PutResultBuilder () . where ( tableRows ) . where ( "id=?" ) . where ( id ) . update ( java.lang.String . valueOf ( numberOfRows ) ) . build () , new com.pushtstore.resh.sql.borited.operation.PutResult () ) ; return table . update ( table ) ; }
public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , lastUpdated , structures ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructureUpdated ( structures ) ; spotsListAdapter . setLastRefreshing ( false ) ; } mSwipeRefreshLayout . setRefresh () ; notifyDataSetChanged () ; }
public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket antgsserver = null ; java.lang.Thread thread = null ; int 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( 3356 ) ; } catch ( java.lang.Exception e ) {} } sconn = new java.lang.Thread ( antgsserver ) ; sconn . start () ; }
public java.util.Collection getAllTasksSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllTasksRoot () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector ( task . getSubTasks () ) ; } return task . getSubTasks () ; } }
public synchronized java.lang.String getSpeed ( long size2 ) { long t2 = java.lang.System . currentTimeMillis () ; long t1 = - ( t2 ) ; long sum = 0 ; synchronized ( t1 ) { sum += t2 ; } return ( ( java.lang.String ) ( java.lang.String . format ( "%d, avg= %d, avg= %d, avg= %s" , size1 , t2 , t2 ) ) ) / ( ( t1 . size () ) - ( t2 ) ) ; }
public static int calculateScore ( java.util.ArrayList < PairTime > pair ) { int score = 0 ; for ( int i = 0 ; i < ( pair . size () ) ; i ++ ) { score += pair . get ( i ) . getScore () ; } return score ; }
static int minimaxDecision ( State.Decision state ) { int action = 0 ; int Minax = ( Minax - ( intim.MAX_NUMBER ) ) + 1 ; for ( int a : actions ) { int temp = actions . minValue ( a , temp ) ; if ( temp > 0 ) { break; } } if ( temp < action ) { return action ; } return v . action ( a , temp ) ; }
public static java.lang.String getRedirectionPath ( final org.fenixeduen.nu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( request ) { for ( final org.fenixeduen.isboaulboais.authentication.spec.IRedirectHandler ibo : org.fenixeduen.isboaisboaisboais.authentication.spec.RedULifications . get ( user ) ) { if ( ibo . isRedirection () ) { return ibo ; } } } return null ; }
public java.lang.Integer getPortForBridge ( java.lang.Integer startTime , java.lang.Integer b ) { if ( ( m_macsOn ) == null ) return null ; if ( isEmpty () ) { for ( org.openmgt.net.topology.mms.model.PortBridge.OnPortSegment link : m_ports ) { if ( ( link . getNode () . intValue () ) == ( link . getNode () . intValue () ) ) return link . getBridge () ; } } return null ; }
public static double noteToFreq ( int key ) { int note = ( ( int ) ( key % ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_TESINA ) ) ) ; int oct = ( ( int ) ( key / ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_TESINA ) ) ) ; return ( - oct ) * ( ( 1.0 - note ) / ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_A ) ) ; }
void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriber , com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.Deliverer eventDeliverer = mDeliverers . get ( deliveryObject ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.Deliverer ( busMethods ) ; mDeliverers . put ( deliveryObject , eventDeliverer ) ; } } subscriber . put ( deliveryContext , eventDeliverer ) ; }
public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nocraft = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get () . getRandomNemesis ( world ) ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle ( net.torocraft.nemesissystem.registry.NemesisBuilder . getRandomTitle ( title ) ) ; while ( ! ( nocraft . isUnique () ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle ( title , nocraft ) ; } return title ; }
@ java.lang.Override public void changeState ( com.example.alexander.topio_skilii.internadio.models.Station currentState ) { if ( ( mediaPlayer . getSource () ) == ( State.WAIT_IS ) ) { mediaPlayer . setPlayerStates ( ( - 1 ) , State.WAIT_IS ) ; } else if ( ( mediaPlayer . getSource () ) == stationPlaying ) { mediaPlayer . pause () ; } else { pause () ; } }
protected boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( ( mouseX >= xPosition ) && ( mouseX < ( width ) ) ) && ( mouseX >= ( height ) ) ) && ( mouseY >= ( height ) ) ) && ( mouseY < ( height ) ) ; }
public int xToPixel ( double x , meslib.lib.MesChart chart ) { chart . setValue ( x ) ; int marginWidth = chart . getFieldWidth () ; int marginWidth = chart . getMarginBounds () ; temp . setWithinBounds ( marginNum , ( marginWidth + ( ( ( chart . getX () ) - ( markerWidth ) ) * 2 ) ) ) ; return ( ( int ) ( ( chart . getX () ) - marginWidth ) ) ; }
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.SuccessUtil . post ( null , listener ) ; } else { float newVolume = 0.01 ; if ( volume < 0.0 ) newVolume = 0.0 ; } else { newVolume = ( ( float ) ( 0.0 ) ) ; } listener . set ( newVolume ) ; }
@ java.lang.Override public boolean checkImpl ( wjothtlic.cyclic.matchingSystem preference ) { for ( wjothtlic.cyclic.matchingSystem.Matchingings w : matchMatchingings ) { wjothtlic.cyclic.matchingcing.PSPSPS math = new wjothtlic.cyclic.matchingcing.PSPS ( preference , mathMatchingSystem.PS ) ; if ( ( preference . size () ) == 0 ) { return false ; } math . checkBlockedBlocks ( math ) ; if ( ( preference . size () ) > ( mathnallyBlocks ) ) { return false ; } } return true ; }
public static org.eclipse.core.interfaces.IExpr sortResultsExpr ( org.eclipse.core.interfaces.IAST resultList ) { if ( resultList != null ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { ( ( org.eclipse.core.math.eval.Eval ) ( resultList . get ( i ) ) ) . sort ( resultList ) ; } } } return resultList ; }
public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Meta dbg = new org.paces.Stata.Meta ( args ) ; org.paces.Stata.DataSet stataData = new org.paces.Stata.DataSet ( dbg ) ; stataData . toJSON ( stataData ) ; stataData = null ; return 0 ; }
public static weka.core.Instances loadFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( fileName ) ; data = loader . getDataSet () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }
public void init ( com.shinavapp.mathdb.pojo.scene.CutLine cut ) { this . cutLine = cut ; com.shinavapp.mathscene.component.ComponentInjector . inject ( this . getContext () ) ; int layout = cut . getLayoutLine ( cut ) ; android.view.View view = inflate ( layout , false ) ; com.shinavapp.mathscene.value.ImageViewHolder view = new com.shinavapp.mathscene.value.Image ( this ) ; view . setVisibility ( com.shinavapp.mathscene.INVISIBLE ) ; addView ( view ) ; }
protected void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , javax.servlet.ServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , " Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
protected org.eclipse.xtext.common.types.FindType doFindTypeByName ( java.lang.String name , boolean traverseTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URIURI resource = createResourceHelper . typeURI ( type ) ; if ( resource == null ) { signature = org.eclipse.xtext.common.access.SdtProviderObjectType . findPrimitiveObjectType ( segment ) ; } else { return findPrimitiveObjectType ( resource , signature , traverseTypes ) ; } return signature ; }
static void writeMap ( net.openhft.chronicle.queue.ExptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writing () ) { net.openhft.chronicle.wire.WireMap < java.lang.String , java.lang.Object > wire = context . map ( appender ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : wire . entrySet () ) { context . write ( entry . getKey () ) ; } } }
public void isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-d\\d]+" ; validateSteps ( value , regex ) ; if ( ! ( regex . matches ( value ) ) ) { error . setVisible ( true ) ; } } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { error . setVisible ( false ) ; } }
public static games.strategy.aai.pro.data.AI.ProBattleResult callBattleCalculator ( final games.strategy.data.engine.Player playerID , final games.strategy.data.engine.TerritoryPlayer t , final java.util.List < games.strategy.data.engine.Unit > attackUnits , final java.util.List < games.strategy.data.engine.Unit > games , final java.util.List < games.strategy.data.engine.Unit > defardingUnits , final boolean isAttacking ) { return false ; }
public static void toh ( int n , char src , char dest , char offset , char aux ) { if ( n > 0 ) { com.howano.problems.data.Howiers . toHowi ( ( n - 1 ) , dest , ( ( n - 1 ) , aux ) ) ; java.lang.System.out . println ( ( ( ( ( ( n - 1 ) + "-" ) + dest ) + " " ) + aux ) ) ; } }
public void setNode ( model.ClassNode person ) { this . node = node ; this . titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . getValue () ) ; attributesArea . setText ( node . operations () . getValue () ) ; operations . setText ( node . operations () . getValue () ) ; }
public void addCampaign ( java.lang.String dataId ) throws java.lang.Exception { deleteCampaign ( deleteCampaignId ) ; if ( ( db ) == null ) { throw new java.lang.Exception ( ( ( "Campaign does not exist in database" + "Id " ) + " does not exist" ) ) ; } if ( ( db . getCampaign () ) == null ) { throw new java.lang.Exception ( ( "Campaign does not exist in database" + "Id ) ) ; } }
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { super . onDataChange ( dataSnapshot ) ; if ( ! ( dataSnapshot . exists () ) ) { com.almakure.aster.friends.model.User currentUser = new com.almakure.aster.friends.model.User ( currentUser . getUid () , currentUser . getEmail () , currentUser . getUid () ) ; mCurrentUserHolder . signs ( currentUser . getUid () ) . setValue ( currentUser ) ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + (raf_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE , produces = { org.springframework.http.MediaType.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TYPE_CSV_CSV } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edal.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = FILE_TYPE ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.data.controllers.DataSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType ) throws com.dataloom.data.controllers.DataDownloadException { com.dataloom.data.controllers.EntitySetController . setContentContentType ( entitySetId . toString () , fileType ) ; com.dataloom.data.controllers.EntitySetController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , req , fileType ) ; }
private void seekTo ( int seekto ) { android.util.Log . d ( com.example.sunai.myplayers.PlayerActivity.TAG , "seekTo" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunai.myplayers.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_TOSEEK_SERVICE ) ; intent . putExtra ( "MUSIC" , seekto ) ; intent . putExtra ( "TOSEEK" , seekto ) ; startService ( intent ) ; }
public void onSetAlarmTime () { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_alarm" , minute ) ; concentric.medcentric.alarm.AlarmPickerDialogFragment timePickerDialogFragment = new concentric.medcentric.alarm.AlarmPickerDialogFragment () ; timePickerDialogFragment . setArguments ( bundle ) ; timePickerDialogFragment . beginTransaction () . add ( R.activity_activity_timepicker ) . commit () ; }
public voidfaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ( "auxette et " + ( ( indent ) + 1 ) ) ) , compiler.Ecriture . ecrireStringln ( flux , "popcrireStringln" ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( ( ( ( indent ) + 1 ) + " " ) + ( compiler.Ecriture . ecrireStringln ( flux ) ) ) ) ; condition . delete ( flux , ( ( indent ) + 1 ) , compiler.Ecriture.FALSE ) ; }
public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( ( ! ( edu.astiatei.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.astiatei.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.astiatei.symex.util.FileIO.fileMap . put ( inputFile , edu.astiatei.symex.util.FileIO.fileMap . get ( inputFile ) ) ; return edu.astiatei.symex.util.FileIO.fileMap . get ( inputFile ) ; }
public boolean isPrime ( int number ) { if ( ( ( number < 2 ) || ( number % 2 ) == 0 ) || ( ( number % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; }
@ java.lang.Override protected void onPostExecute ( com.wozainaliman.myapplication.mark.PlacePlacePlace place ) { com.squareup.NotupBus bus = com.wozainaliman.myapplication.bus.Nusus . getBus () ; bus . post ( new com.wozainaliman.myapplication.mark.ZoomToEvent ( place ) ) ; bus . post ( new com.wozainaliman.myapplication.mark.PolygonEvent ( place ) ) ; bus . getPols () . post ( new com.wozainaliman.myapplication.mark.AddDrawEvent ( place ) ) ; }
public static java.lang.Boolean attachAssetToAccount ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.AssetUuid , accountUuid ) ; params . put ( KeyConstants.AssetUuid , assetUuid ) ; params . put ( "rating" , accountUuid ) ; return params ; }
private boolean validateHeader ( final org.milynyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNextHeader () ; if ( headers == null ) { throw new org.milyn.csv.CSVValidationException ( getFieldNames ( fields , fields ) ) ; } if ( validateHeaderNames ( fields , getFieldNames ( fields ) ) ) { return true ; } return false ; }
public void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoardLength () ) ; i ++ ) { if ( ( game . getBoardLength () ) == null ) { java.lang.System.out . print ( row , i ) ; } else { java.lang.System.out . print ( game . getBoardLength () ) ; } } java.lang.System.out . println ( row . toString () ) ; }
public void makeBestMove () { chess.domain.Game game = chess.domain.GameSituation . findBestMoves ( ( ( chess.domain.Move ) ( game . getToves () [ ( ( chess.domain.Move ) ( move . getTurnis () ) ) % 2 ) ] ) ) ; game . setChosenMove ( move . getPiece () [ ( ( game . getPurnis () ) % 2 ) ] ) ; move . moveToTarget ( move . getTargetLocation () , move . getTargetLocation () , game . getTargetLocation () , true ) ; }
protected static javafx.animation.ParallelTransition createDynamicTransitionAtTime ( tumsim.cms.utility.DataReader simulation.SimulationOutput simulation , java.lang.Double timeStep , tumsim.cms.controller.ControllerCoreController.CurrentStep data ) throws java.lang.Exception { while ( ( data . getCculations () ) == null ) { data . update ( simulation.CurrentStep.Step , timeStep ) ; } return null ; }
public void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( array [ i ] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } }
private void populateCapturePoints ( java.util.ArrayList < com.ctar.farfd.demo.CapturePoint > capturePointList ) { for ( com.ctar.farfd.demo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.MarkerOptions captureMarker = new com.google.android.gms.maps.model.MarkerOptions () . position ( point . capture () ) . position ( point . getLocation () ) . title ( point . getName () ) . title ( point . capture () ) . put ( BitmapDescriptorFactory.HUE_AZURE ) . put ( point . capture () , capturePointList ) ; } }
public boolean compileCode ( java.lang.String code , java.lang.String className , java.lang.String vk ) { vk.api.core.CompilationUnit cu = new vk.api.core.CompilationUnit ( code , className , false ) ; jsc.api.core.CompilerCompiler v = jsc.api.core.CompilerFactory . getCompilerAndRun ( cu ) . compileCompiler () ; if ( v . hasErrors () ) { return false ; } jsc.api.core.CompilerResult cr = vk . getCompilerResult ( cu ) ; if ( cr . hasErrors () ) { return false ; } return true ; }
private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.StatsRuntimeStats runtime , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = org.geowebcache.io.GeoResourceUtils . writeWebFixedResource ( message . getBytes () , runtime , contentType ) ; } writeResult ( response , httpCode , CacheCache.OTHER , contentType ) ; }
@ org.w2fc.geoportal.ws.aspect.AfterReturning ( point(* = org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.aspect(org.w2fc.geoportal.ws.GeoObjectResponse.CreateObject)))" , returning = "result" ) public void aroundJoinRequestSuccess ( org.aspectj.lang.JoinPoint joinPoint , java.lang.Object result ) { org.w2fc.geoportal.ws.GeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.GeoObject ) ( org.aspectj.util.Date . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.ws.GeoObject actionGeoObject = new org.w2fc.geoportal.ws.GeoObject ( requestGeoObject . getGuid () , getPid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionGeoObject ) ; }
public static void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( ( org.bukkit.ChatColor.GREEN ) + " me: " ) + ( me.bristell.owells.signonomy.ATM.signs.MATeconomy . format ( player . getBalance () ) ) ) ) ) ; me.bristell.owells.signonomy.ATM.signs.MATeconomy . replace ( player . getName () , "" ) ; }
private static java.lang.String getCharBeforeOffset ( java.lang.CharSequence text , int offset ) { if ( ( ( text . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( ( str . length () ) > 0 ) { return str . subSequence ( offset , ( offset - 1 ) ) ; } return "" ; }
public int hash ( V value ) { int hash = 0 ; switch ( hashFunction.addHash ) { case "itive" : hash = addHash ( value ) ; break; case "rotational" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when given function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
public void doNext ( int requestCode , int [] grantResults ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; android.util.Log . d ( com.eilese.mobima.utils.HomeActivity.TAG , "Canted Gried" ) ; } else { com.eilese.mobima.utils.HomeActivity.safeLog . d ( com.eilese.mobima.utils.HomeActivity.TAG , "Canted Gried" ) ; } }
private java.util.Map < K , V > findMinNode ( Node.BSTNode < K , V > node ) { Node < K , V > algo = node.BSTMap ; if ( algo == null ) { return null ; } else { Node < K , V > child = node.BSTMap ; if ( child == null ) { return null ; } else { return algo . findMinNode ( parent , child ) ; } } }
@ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( frag . getNavigationStackCount () ) ; i ++ ) { com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment frag = ( ( com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment ) ( this . getNavigationStackCount () . newInstance () ) ) ; ( ( com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment ) ( frag . newInstance ( ( "udlingCount" + ( frag . DetailStackCount () ) ) , frag . getFavigationStackCount () ) ) ) ; } }
protected boolean isIE7 ( java.lang.String userAgent ) { if ( ( userAgent != null ) && ( null != ( MSIE . contains ( ";E" ) ) || ( userAgent . contains ( ";E" ) ) ) ) { return false ; } return ( ( MSIE . contains ( ";E" ) ) && ( userAgent . contains ( ";E" ) ) ) && ( ! ( MSIE . contains ( ";E/" ) ) ) ; }
void setEndDate ( int newYear , int newMonth ) { calendar . set ( java.util.Calendar.DATE , ( - 1 ) , newMonth ) ; calendar . set ( java.util.Calendar.DATE , 1 ) ; calendar . set ( java.util.Calendar.DATE_FORMAT , newYear ) ; java.text.SimpleDateFormat calendar = java.text.SimpleDateFormat . format ( "dd-MM-yyyy" ) ; calendar = calendar . getTime () ; }
public boolean initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( "InitVariables: " + ( inGame ) ) + ", setting now it" ) + "\n" ) ) ; gameStarted = false ; map = new Map.Game ( ballNumber ) ; paused = false ; map = new Map.Watch () ; timer = new javax.swing.Timer ( this , map ) ; if ( gameStarted ) { watch = false ; } return true ; }
private void initializePurchases () { mSetupHelper . start ( new org.pfappoms.google.store.IabSetupHelper.OnFinishedIabSetupFinishedListener () { public void onSetupFinished ( org.pfappoms.google.store.IabUtils.Result result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( ( "Problem setting: " + ( result . setting () ) ) + " m-appHelper-" ) ) ; return; } if ( ( mInventoryHelper ) == null ) { mInventoryHelper . showToast ( null ) ; return; } } } ) ; }
public static int getValidThreshold ( int threshold , java.lang.String text , java.lang.String text ) { if ( ( ! ( text . isEmpty () ) ) && ( ! ( java.util.regex.Pattern . matches ( "[0-9]+" , threshold ) ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { threshold = java.lang.Integer . parseInt ( threshold ) ; } return threshold ; }
private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( com.kvest.mvp.PresenterActivity.Presenter ) ( presenter ) ) . getPresenter ( presenterUUID ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } }
private static int getDialogIDfromOneToUser ( java.lang.String fromWhomo , java.lang.String toWhomo ) throws java.sql.SQLException { final int result = 0 ; try ( final java.sql.Connection connection = database.Tools.DBTools . getConnectionBasedConnectionPool () ) { final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( fromWhomo ) ; if ( resultSet . next () ) { result = statement . getInt ( 1 ) ; } } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }
public void print ( java.lang.String map ) { for ( int i = 0 ; i < ( h . length () ) ; i ++ ) { java.lang.System.out . println ( map . substring ( ( ( w . substring ( i , ( i * ( w ) ) ) + ( w * ( w ) ) ) ) ) ) ; } }
private void setTemperature ( java.lang.String h ) { str = h ; int i = str . indexOf ( '.' ) ; java.lang.Integer maxTemperature = str . substring ( 0 , i ) ; if ( i > ( maxTemp . length () ) ) maxTemp = i ; }
public void addWord ( java.lang.String word ) { if ( ( buckets.length ) != 0 ) { for ( java.lang.Integer word : buckets ) { java.lang.Math . abs ( ( ( org.apache.mahout.math.M3hash.hash ) %86868686 ) ) ; } m ( word . getBytes () , 0 , buckets.length ) ; } }
public float sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dos . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( ( - 1 ) ) ; } return 1.0F ; }
@ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseUser . logOut () ; takeToLogin = new android.content.Intent ( this , com.example.android.Login.FriendsToLoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( takeToLogin ) ; finish () ; }
private synchronized void drawMon ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.Mon.Cached mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 13532 , 2 ) ) ; g . drawOval ( mon.x , ( ( int ) ( ( 24 - ( mon.y ) ) * 24 ) ) , ( ( int ) ( ( 24 * 24 ) ) ) , 12 ) ; } } }
public void causeDamage ( double amount , org.bukkit.entity.EntityLivingEntity damager , life ) { double damageDamageType = 0.0 ; if ( type . equals ( Damage.BASIC_DAMAGE ) ) { damageDamageType = ArmorUtil.ExtraDataArssAGE . get ( amount ) ; } else if ( type . equals ( ArmorUtil.DataTypeDataArssAGE . get ( amount ) ) ) { damageDamageType = ArmorUtil.DataTypeDataArssAGE . get ( amount ) ; } else { damageDamageType = 0.0 ; } if ( type . equals ( ArmorUtil.DataTypeDataArssAGE . get ( amount ) ) ) { damageDamageType = ArmorUtil.DataTypeDataArssAGE . get ( damageDamageType , ArmorUtil.DataTypeDataArssAGE . get ( amount ) ) ; } else { damageDamage ( damageDamageType , 0.0 ) ; } }
public java.lang.String getExtension ( final java.io.File f ) { final java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) ; } return null ; }
public void insertLoadRecord ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedes.pipet.api.executor.v1.LreparedStatementException { java.sql.Connection connection = try { java.sql.PreparedStatement statement = com.linkedes.pipet.plugin.duoso.LuosSqlExecutor . createStatement ( directory , fileName , graph ) ; statement . executeQuery () ; } catch ( java.sql.SQLException ex ) { com.linkedes.pipet.plugin.duoso.LuosExceptionFactory . exception ( "Can't execute exception." , ex ) ; } }
@ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.Track > response ) { if ( ( response . getData () ) != null ) { if ( dom.bom.com.tabatasdk.rest.ListTakerParcel . sendRequest ( response , context , view ) ) { view . getReceiver () . setListOfParcel ( response . body () ) ; } else { view . getReceiver () . onError ( R.string.problem_server ) ; } } }
public void onPostExecute ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelFound ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cartNotification . clear () ; } }
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenLanguageMap ) { for ( java.lang.String languageMinName : tenLanguageMap . keySet () ) { if ( languageMinName . containsKey ( languageName ) ) { int languageInHour = languageMap . get ( languageName ) ; int languageTen = languageMap . get ( languageName ) ; tenLanguageMap . put ( languageName , ( languageTen + languageTen ) ) ; } } }
private boolean containsLinkedResource ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinkedResource () ) { return true ; } } return false ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( permissions . getPermission () ) { kiss.autobobeday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; finish () ; } }
private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod reportMethod , boolean invoked ) { if ( ( checkCallerAnnotatedVisibility ( invokedMethod ) ) && invoked ) { edu.umd.cs.findbugs.findbugs.BugInstance bugInstance = new edu.umd.cs.findbugs.findbugs.BugInstance ( this , "GU_ACCESSING_TO_NEGPECTED_PRIORITY" , invoked ) ; if ( bugSource . addClass ( bugSource ) ) { this . addCallerReporter ( bugInstance ) ; } } if ( BuildReporter.VISIBLE ) { this . addClassReporter ( bugSource ) ; } }
public void toggle ( boolean color ) { int toggleActive = color ; if ( ( mActiveColor ) != null ) { mActiveColor = color ; } else { android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.default , null ) ; mActiveCircle . setStrokeHeight ( ( ( mActiveDrawable . getMeasuredHeight () ) / 30 ) ) ; } }
public void updateStatus ( int trackToPlay , int status , int position ) { com.fritz.bangtheplayer.Beans.TrackBean tmp = trackToPlayBeans . get ( trackToPlay.status ) ; if ( tmp != null ) { trackToPlayBeans.position = position ; trackToPlayBeans . set ( trackToPlayBeans , tmp ) ; android.util.Log . d ( com.fritz.bangtheplayer.Beans.PlaylistAdapter.TAG , ( ( ( "DEBUG: " + ( trackToPlayBeans ) ) + " from " ) + status ) ) ; this . notifyDataSetChanged () ; } }
private final android.support.v4.app.Fragment fragment ( android.os.Bundle args , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON_ENTITY , json ) ; args . putString ( EntityFragment.ARG_JSON_ENTITY , ( idx + "" ) ) ; fragment . setArguments ( args ) ; return fragment ; }
public void createLand ( int id , java.lang.String owner , int start , int [] [] [] size , int end , int size , java.lang.String sql ) { world . createLand ( id , start , end [ 0 ] , size [ 1 ] , size [ 0 ] , world , start , end [ 1 ] , world ) ; }
public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus ) { if ( ( sendSystem ) != null ) { sendSystem . shutdown () ; } if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; if ( ( webSocket ) != null ) webSocket . close () ; }
public static org.jfree.data.xy.XYSeries createSeriesCollection ( org.jfree.data.xy.XYSeriesCollection series , org.jnd.linalg.api.Collection data , int offset , int length ) { java.lang.String name = data . getRows () [ 2 ] ; for ( int i = 0 ; i < n ; i ++ ) { series . add ( new org.jfree.data.xy.XYSeriesCollection ( series . getDouble ( i ) , data . get ( i ) ) ) ; } return series ; }
public synchronized void markDirty ( mcp.bettermobius.rels.common.blocks.TileEntityBar brel , boolean dirty ) { this . dirty . put ( brel , true ) ; if ( ( brel.space.core.EbStorage . getWorldObj () . isRemote ) && ( ! ( mcp.bettermobius.rels.BnderSpaceHandler . instance () . markAllStorageDirty () ) ) ) { mcp.bettermobius.rels.BnderSpaceHandler . instance () . markDirty () ; } }
private java.util.List < edu.cmu.tetradsearch.ext.adext.SetradInt > sList ( edu.cmu.tetradsearch.ext.SetradInt t1 , edu.cmu.tetradsearch.ext.SetradInt t2 , edu.cmu.tetradsearch.ext.SetradInt t3 , edu.cmu.tetradsearch.ext.SetradInt t5 ) { java.util.List < edu.cmu.tetradsearch.ext.adext.SetradInt > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t3 ) ; return list ; }
private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDark = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( getDarkBarColor ( palette ) ) ; } }
public void write ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error!" , "Write while writing!" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } }
public com.smartstudy.zhike.mylibrary.widget.BannerView.ages setPages ( com.smartstudy.zhike.mylibrary.widget.CreatorCreatorCreator.ViewHolder holder , java.util.List < T > datas ) { this . mDatas = holder ; this . pageCreator = pageCreator ; holder = new com.smartstudy.zhike.mylibrary.widget.BasePageCreator ( this , mDatas ) ; pagePager . setAdapter ( holder ) ; if ( ( pagePager ) != null ) pagePager . setPageId ( pageId ) ; }
public static org.glassfish.jersey.internal.util.ReflectionHelper.Pair < java.lang.Class < ? > , java.lang.Class < ? > > concrete ( java.lang.Class < ? > cClass , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.Pair < org.glassfish.jersey.internal.util.ReflectionHelper.SEY , java.lang.Class < ? > p = org.glassfish.jersey.internal.util.ReflectionHelper . fromString ( cClass , concrete ) ; if ( p != null ) { return p ; } } return null ; }
@ java.lang.Override public void loadProducts ( java.util.List < com.danarion.vendor.model.ProductModel.Cart > productModels ) { this . productCart . clear () ; this . productModels . clear () ; populate ( productModels ) ; for ( com.danarion.vendor.model.ProductModel.Product product : productProducts ) { if ( ( product . getAdapter () ) != null ) { grid . add ( product ) ; } } productProducts . notifyDataSetChanged () ; }
@ java.lang.Override public boolean onProcessCanClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.app2.fragment.DataPeriodFragment dlg = new com.example.admin.app2.fragment.DataPeriodFragment () ; dlg . setFragment ( new com.example.admin.app2.CalendarFragment () ) ; return false ; case R.id.btnHasPeriods : { showPeriodFragment ( periods ) ; return true ; } default: return false ; } } return false ; }
private void submitToPortError ( java.lang.Exception e ) { if ( validPortError ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.TupleOutput.Output > osup = getOutputOutput () ; com.ibm.streams.operator.TupleOutput ot = new com.ibm.streams.operator.TupleOutput ( e . getMessage () , 0 ) ; ot . setString ( 0 , submit . get ( e . getMessage () ) ) ; } try { ot . submit ( this ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } }
void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = getListeners ( bundleState ) ; if ( ( listeners . size () ) > 1 ) { listeners . remove ( bundleState ) ; } else { listeners . remove ( bundleState ) ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.springframework.web.bind.annotation.ModelAttribute org.springframework.launch.models.User user , java.lang.String verifycode ) { if ( user . equals ( "title" ) ) { model . addAttribute ( "users" , user . getPassword () ) ; model . addAttribute ( "title" , "index" ) ; model . addAttribute ( "users" , user . getUsername () ) ; } else { model . addAttribute ( "users" , UserAddUser . doPassword () ) ; } model . addAttribute ( "title" , "new" ) ; model . addAttribute ( "users" , user . getPassword () ) ; return "users" ; }
public static boolean collides ( int x , int y , int width , int height , com.polhulds.arbraharb.world.model.Section bounds , java.lang.Iterable < com.polhulds.arbraharb.world.model.Section > boundsList ) { for ( com.polhulds.arbraharb.world.model.Section bounds : boundsList ) { if ( collidesFromBounds ( bounds , x , y , width , height ) ) { return true ; } } return false ; }
private void insertOrder ( Simulator.Order order ) { long price = order . getPriceTree () ; java.util.LinkedList < java.lang.Long > sideOrder = order . getSide () ; if ( sideOrder . containsKey ( sideBook ) ) { java.util.LinkedList < Simulator.Book > entries = get ( sideBook ) ; entries . add ( order ) ; } else { entries . add ( order ) ; } }
public void swap ( int x1 , int y1 , int x2 , int y2 , int x2 ) { board.Cell temp = board1 [ y1 ] [ x2 ] ; board1 [ y1 ] [ x2 ] = temp ; board2 [ y2 ] [ x2 ] = temp ; }
public List < java.lang.String > getAllObjects ( java.lang.String path ) { java.util.ArrayList < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s23.model.V2ListResult listing = client . listV2List ( new com.amazonaws.services.s23.model.BucketSummaryRequest () . withSummaryName ( path ) ) . withSummary ( bucketName ) ; for ( com.amazonaws.services.s23.model.Summary object : listing ) { if ( ! ( object . getObjectPresent () . getKey () . equals ( path ) ) ) { object . ensureSumSlashPresent () ; } } return object ; }
@ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout.Target child , android.view.View directChild , android.view.View target , int directScroll ) { if ( onStartNestedScroll ( parent , target , directChild , nested ) ) { mAppBarLayout . bindOrigin () ; return true ; } else { mAppBarLayout . stopAnimation ( child ) ; return false ; } }
public void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( minDateInMs > 0 ) { this . googleMap . add ( this . getProjectionMap () . getVisibleRegion () ) ; } else { this . googleMap . add ( this . getProjectionMap () . getVisibleRegion () ) ; } }
void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callbackMessage ) { boolean isOpen = dataMessage . getJSONObject ( 0 ) . isOpen () ; try { org.json.JSONObject params = dataMessage . getJSONObject ( "isOpen" ) . getBoolean () ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } cn.jaming.igvang.cordova.MessageUtils . handleActivityResult ( cn.jaming.iguim.android.api.JimPluginMessage.JJC_PARAMETER_MSG , this , params ) ; cn.jaming.iguim.cordova.MessageUtils . registerReceiver ( mJimReceiver , cn.jaming.iguim.android.api.JimPluginMessage.JC_PARAMETER_CODE ) ; }
public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP " ; }
public static java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , 8-8859-1" ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) { sb . append ( line ) . append ( "\n" ) ; } reader . close () ; return sb . toString () ; }
public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + answer ) ) ; if ( ( currAnswer ) == ( hint ) ) { java.lang.System.out . println ( ( "answer: " + ( answer . getRemainingArea () ) ) ) ; return true ; } if ( ( currAnswer . finishGame () ) == 0 ) return false ; game . playHints () ; return true ; }
private static boolean isHex ( char c ) { return ( ( ( ( ( ( c >= '0' ) && ( c <= '0' ) ) && ( c >= 'A' ) ) && ( c >= 'F' ) ) && ( c >= 'a' ) ) && ( c >= 'f' ) ) && ( c <= 'f' ) ; }
public void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { try { this . onEvent ( receiver , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( e ) ; } if ( ( mBus ) != null ) { mBus . broadcast ( e ) ; } }
public void borrowBook ( Library lib , java.lang.String title ) { if ( libList . containsKey ( title ) ) { borrowedBooksList . add ( libList . get ( title ) ) ; libList . get ( 0 ) . remove ( title ) ; } else { java.lang.System.out . println ( "rows not Found" ) ; } }
@ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { if ( ( page ) != null ) { org.springframework.data.domain.Page < com.appspotorall.gardemorie.domain.Location > page = pageService . findAll ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; } return "list" ; }
public void scannerQrCode ( android.app.Activity activityActivity ) { com.google.android.zxing.integration.IntentIntegratorsupport = new com.google.android.zxing.integration.IntentIntegrator ( context ) ; activity . setDesiredBarcodeFormats ( Intent.DesiredBarcodeIntegrator.QR_CODE ) ;message . setPromptScanId ( "scription" ) ;message . setBeepEnabled ( false ) ; ft . setScanEnabled ( false ) ; }
private void displayTestCollection ( final com.google.gwt.user.client.ui.PanelPanel currentActorOptionPanel ) { tests. () . loadActor ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.results.Instance > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { gov.nist.toolkit.client.widgets.TestRun.log . onFailure ( ( "Loading test: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < com.nist.toolkit.results.Message > testInstances ) { tests.nist.toolkit.client.widgets.TestRun.log . onFailure ( ( "Loading is Parts..." + ( throwable . getMessage () ) ) ) ; } } ) ; }
@ java.lang.Override public boolean onAreaTouched ( org.engine.input.touch.TouchEventScene pScene , float pTouchAreaX , float pTouchAreaY ) { if ( isTileDown () ) { if ( isVisible () ) { setCurrentScene ( 1 ) ; } if ( pScene . isVisible () ) { setPause ( true ) ; } } return true ; }
@ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.util.List < biospectra.classify.beans.SearchResult > result , biospectra.classify.beans.ClassificationResult type , java.lang.String taxon ) { synchronized ( this ) { if ( result != null ) { responseHandler . onSuccess ( sequence , header , result ) ; } else { responseHandler . setRank ( taxon ) ; } } }
public static boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewId () . endsWith ( "profile" ) ) && ( ! ( role . getViewId () . equals ( "ADMINISTRATOR_SYSTEM" ) ) ) ) { ownProfile = false ; } return ownProfile ; }
@ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = ? "application/json" : "json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String id ) { logger . debug ( "Received User {}: {}" , id ) ; juja.microservices.teams.entity.Team team = teamService . requestTeam ( uuid ) ; logger . debug ( "Team Team: {}" , team . toString () ) ; teamService . dismissTeam ( team ) ; return ok ( team ) ; }
@ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( ( ( ETemplateInternal.HEADER_HEADER . toString () ) + ( pathname . getName () ) ) ) ) if ( language . getExtension () . contains ( ( ( org.talend.designer.talend.designcode.config.TemplateUtil.Template_TEMPLATE_TEMPLATE ) + ( pathname . getExtension () ) ) ) ) return true ; return false ; }
@ java.lang.Override public boolean leaveGroup ( long userId , long courseId , long courseSkuId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; doLeaveGroupMembers ( userId , group . getGroupId () ) ; return true ; }
protected static java.lang.String sendRequest ( java.lang.String resourceFile ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.euroin.eeccard.webapp.unbound.ContentCheckTest.Unbound_Resources . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . fromString ( resourceFile . toString () , com.google.common.http.client.HttpStreams . fromString ( content ) , "application/json" ) ; com.google.api.client.HttpResponse response = new com.google.api.client.HttpRequest () . execute ( request ) ; com.google.api.http.client.ContentReader request = new com.google.api.http.client.ContentReader ( content , com.google.common.http.HttpStreams . fromString ( response . getContent () ) , com.google.common.http.client.HttpStreams . fromString ( json ) ) ; return response . build () ; }
public void changeState ( java.lang.String recordingId , java.lang.String state , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( recordingId , state , recordingDir ) ; } else if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( recordingId , state , recordingDir ) ; } if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( recordingId , state , recordingDir ) ; deletedState ( recordingId , state , recordingDir ) ; } }
public void onPostExecute ( java.lang.Void result ) { loadingDialog . cancel () ; if ( ( targetUri ) != null ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } }
@ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node < ? > connector , final int magnet ) { if ( ( null != ( canvasHandler ) ) && ( magnet != ( org.wirez.core.client.command.CommandResultFactory.TARGET_NODE ) ) ) { return true ; } return false ; }
@ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( "login with id {}" , id ) ; logger . info ( ( "User :" + password ) ) ; if ( ( user . getRole () ) == ( com.chronicle.controller.User . getPassword () ) ) { return "login" ; } else { return "User" ; } }
public void setItemSelected ( int pos , boolean selected ) { if ( ( pos > 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { view . putItems ( pos , true ) ; } else { view . setSelected ( pos ) ; } } }
@ java.lang.Override public synchronized void analyzeScrimageMatch ( model.BSSmageSet set ) { javax.persistence.EntityManager scrimage = emim.HibernateUtil . getEntitySet () ; scrimage . persist ( emim . getTransaction () ) ; scrimage . flush () ; emim . getTransaction () . commit () ; emim . close () ; }
void mergeSort ( int [] a , int p , int [] c , int p , int r ) { int l = - range ; if ( r > 0 ) { int l = mergeSort ( ( p + range ) , p , c , p ) ; mergeSort ( c , p , ( l + 1 ) , r ) ; merge ( c , p , ( l + 1 ) , r ) ; } }
@ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/userConfirmationMessage" ) public apiConfirmationMessage ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userId" , int caleeityId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityId" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String token , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "User user ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "User user ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password ,
public static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppGenerationVisitor.BlockCodeVisitor ast , boolean main ) { if ( ( java.lang.Void . getCategory () . getKind () ) > phrase ) { if ( ! ( nl.fhg.iais.roberta.syntax.components.IndentIndent . hasCategoryIndent () ) ) { return true ; } else { return false ; } } else { return false ; } }
private au.com.mutopia.acs.models.cml.C3mlEntity buildEntity ( de.openmata.ml.gis.v0.kml.exceptions.Document_2_ ) throws au.com.mutopia.acs.exceptions.C3mlConversionException { au.com.mutopia.acs.models.cml.C3mlEntity document = createC3mlEntity (_2_ ) ; java.util.List < au.com.mutopia.ml.gis.v0.kml.models.Feature > features = null ; for ( au.com.mutopia.ml.gis.v0.kml.models.C3mlEntity feature_2 : features ) { if ( ( child . getFeature () ) != null ) { document = child . getFeature () ; } } return document ; }
private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60 ) % 60 ; final long hour = ( milliseconds / 36 ) % 24 ; final long day = ( milliseconds / 24 ) % 24 ; final java.lang.String text = java.lang.String . format ( text , hour , day , mFormat ) ; mFormat . setText ( text ) ; }
private booleanPerformZoom ( boolean byGesture , float center , int centerX , int centerY , boolean shouldReal ) { float realScale = scaleScale ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { mTranslate . fit () . onGestureEnd ( center , centerX , centerY , shouldTranslate ) ; return false ; } } byGesture ( centerX , centerY , realScale ) ; return true ; }
public void execute ( java.lang.String goal , java.lang.String pathToPom , java.lang.String pathToProjectDirectory ) { org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; do { cli . doMain ( new java.lang.String [] { "clean" , pathToPom , goal } , new java.lang.System.err ) ; } , cli ) ; }
@ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { org.gephi.ide.filesystems.filesystems.FileObjectUtil.Object file = org.gephi.io.filesystems.api.ImportUtils . toArchived ( file ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = null ; if ( ( file != null ) && ( ( file . getMatchingImport () ) != null ) ) { builder = org.gephi.io.importer.spi.FileImporterBuilder . buildObject ( file ) ; } return builder ; }
private com.xebialabs.it.deploy.plugin.api.mudeded.Deploy < ? , ? > getDeployedDeployed ( java.lang.String version ) { com.xebialabs.it.deploy.plugin.api.muded.Deploy < ? , ? > deployed = ( ( com.xebialabs.it.deploy.plugin.api.muded.Deploy < ? , ? > ) ( com.xebialabs.it.deploy.plugin.api.muded.Deployable . newInstance ( "pupps" , true ) ) ) ; container . setProperty ( "ignoreModule" , "forceModule" ) ; container . setProperty ( "version" , version ) ; return container ; }
public static bolts.Task < com.netdouv.chat.api.ApiResponse > callDownloadInBackground ( final com.netdouv.chat.api.ApiRequest request , final java.lang.String url , final java.lang.String file ) { return bts.Task . callInBackground ( new com.netdouv.chat.api.ApiResponse < com.netdouv.chat.api.ApiResponse > () { @ java.lang.Override public java.lang.Object call ( com.netdouv.chat.api.ApiResponse < com.netdouv.chat.api.ApiResponse > call , final java.net.Callable < com.netdouv.chat.api.ApiResponse > call ) throws java.lang.Exception { return com.netdouv.chat.api.ApiResponse . requestDownloadInBackground ( call , file , url , file ) ; } } ) ; }
public void decr ( java.lang.String address , int port ) { for ( org.openstack.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( - 1 ) ) ; break; } } }
private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = sumOfSq ( array ) ; double sumToDiff = 0 ; for ( int i = 0 ; i < ( array . size () ) ; i ++ ) { double mean = array . get ( i ) ; double diffToSq = ( java.lang.Math . pow ( ( mean - ( array . length () ) ) , 2 ) ) / 2 ; sumToDiff += java.lang.Math . sqrt ( ( sumToDiff / mean ) ) ; } return sumToDiff ; }
private javax.mail.Message [] searchMailbox ( javax.mail.search.Folder selectedTerm ) { javax.mail.SearchFolder searchTerm = new javax.mail.search.Subject ( "In Portal" ) ; javax.mail.search.TermDate minTerm = new javax.mail.search.TermDateReceived ( activity . getMostRecentDate () , searchTerm ) ; searchTerm = new javax.mail.search.GTAndEmail ( searchTerm . toString () , searchTerm ) ; return searchTerm ; }
public static byte [] read ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simonoader.lib.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; }
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet.joulet.model.Cell4pCell ) ) { return false ; } fr.poulet.joulet.model.Cell4pCell other = ( ( fr.poulet.joulet.model.Cell4pCell ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{exportId}/filter" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.web.bind.annotation.DesignRequest exportExport ( @ org.springframework.web.bind.annotation.PathVariable ( value = "transone-exportId" ) long userId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String teopsId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) long userId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Boolean teops ) { com.sistorone.cms.rest.exceptions.CmsDesignBaseManager.logger . error ( "transone-system-description" , description ) ; if ( teopsId == null ) { try { teopsId = true ; } catch ( java.lang.Exception error ) { teopsId = false ; throw com.sistorone.cms.rest.exceptions.CmsDesignBaseManager.logger . error ( "Transone-system-description" , userId , description , teopsId ) ; } } return teopsId ; }
@ java.lang.Override public void onResponse ( retrofit2.Call < com.namu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namu.android.deputyscheduler.models.Shift >ologies = response . body () ; recyclerView . setAdapter ( new com.namu.android.deputyscheduler.adapters.ShiftAdapter ( response . getShift () ) ) ; }
@ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbe.jenkins.beHubjenkins.GitHubJob > result ) { jenkins.model.MixJob p = ( ( jenkins.model.MixJob ) ( job ) ) ; for ( com.cloudbe.jenkins.beHubjenkins.GitHubJob g : g . getTriggers () . values () ) { filter . addAll ( com.cloudbe.jenkins.beHubjenkins.GitHubJobUtil . class , g . getGitTriggers () ) ; } }
@ java.lang.Override public long _daysLate ( com.borngo2lazz.beey.db.Card card ) { long now = com.borngo2lazz.beey.Utils . intNow () ; int card = com.borngo2lazz.beey.Utils . getQueue () . getDue () ; if ( card == ( com.borngo2lazz.beey.db.Card.REV_QUEUE ) ) diff = now - ( ( java.lang.Math . abs ( dueday ) ) / ( com.borngo2lazz.beey.db.Card.REDAY_PER_SECONDS ) ) ; else diff = now ; return diff ; }
private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeader ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { navView . closeLayout () ; } } ) ; navView . start () ; }
@ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String > deleteNode ( @ gov.gwssi.csc.scms.controller.user.PathVariable ( value = gov.gwssi.csc.scms.controller.user.NodeController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable ( value = gov.gwssi.csc.scms.controller.user.NodeController.HEADER_AUTHORIZATION ) java.lang.Exception e ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUserByNodeId ( header ) ; java.lang.String node = user . getRootPath () ; node . setParentChildren ( null ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } return node ; }
@ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = child . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attribute . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; return false ; } return true ; }
public char [] cross ( creatures.CharCreature creat , creatures.CharCreature creat ) { char [] output = new char [ creat.length ] ; for ( int i = 0 ; i < ( creat.length ) ; i ++ ) { if ( ( creat [ i ] ) < ( creat [ i ] ) ) { output [ i ] = creat [ i ] ; } else { output [ i ] = creat ; } } return output ; }
public static boolean pathIsValid ( java.lang.String strPath ) { boolean exist = false ; for ( java.lang.String strFile : com.packiz.sjdk.panelpath.FilesHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , getName () ) ; if ( ! ( path . exists () ) ) { exist = true ; } } return exist ; }
public void ShareData ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App" ) ) ; }
public void setNewMetric ( java.lang.String java.lang.String newPath , java.lang.String path ) { this . head = newPath ; this . topJsonObject = new org.json.JSONObject () ; org.json.JSONArray topArray = new org.json.JSONArray () ; try { topArray . put ( "target" , data ) ; topJSONArray = new org.json.JSONArray () ; topArray . put ( "data" , topJsonObject ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } }
@ se.sjtu.form.controller.GetMapping ( path = "/add" ) @ se.sjtu.form.controller.ResponseBody @ se.sjfo.form.controller.ResponseBody public java.lang.String updateEmail ( @ se.sjfo.form.controller.RequestParam java.lang.String userName , @ se.sjfo.form.controller.RequestParam java.lang.String userPassword , @ se.sjfo.form.controller.RequestParam java.lang.String newUser ) { se.sjfo.form.model.User newUser = new se.sjfo.form.model.User ( userName , userPassword ) ; newUser . setUserUserName ( currentEmail ) ; newUser . setCreateTime ( false ) ; java.lang.System.out . println ( newUser ) ; if ( user != null ) { userRepository . save ( user ) ; } java.lang.System.out . println ( userName ) ; return userRepository . newUser ( user ) ; }
public entities.Tile removeTile ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; if ( ( this . jIndex ) == 0 ) { this . tileIndex = 5 ; } else { tileTile = this . parent . getSquare ( this . jIndex , new entities.Tile ( ( - 1 ) , oldTile ) ) ; this . parentBoard . remove ( jIndex ) ; } return tileTile ; }
public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grid . allPointsOfPoints ( this . piece ) ) { if ( ( loc . asAbs ( cell ) ) != ( loc ) ) { if ( ( boardRows ) >= ( row ) ) { return true ; } } } return false ; }
public double average ( java.util.Date [] dates , double [] skip , int returns , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; double ii = 0 ; for ( int ii = 0 ; ii < ( filter.length ) ; ii ++ ) { if ( ! ( test [ ii ] . equals ( filter [ ii ] ) ) ) break; count ++ ; } return sum / ( dates.length ) ; }
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettingsFor_feed ( com.blastftthege.modularplayer.api.events.PlayerConfigEvent event ) { com.pipespipularmod.data.ModularPipes.ModularPlayerData ModularPlayer = ( ( com.pipespipularmod.data.ModularPipes.ModularPlayerData ) ( event . getPlayer () ) ) . getConfig () ; if ( ModularPlayer != null ) { ModularPipes.Text . setName ( Mod.MOD_ID ) . setGroupName ( Mod.MOD_ID ) . setName ( Mod.MOD_ID ) ; event . getConfig () . setName ( "mode" ) ; } }
@ com.google.common.annotations.VisibleForTesting void checkForSplit ( final org.broadute.hellinstitenderbender.utils.read.GATRead > readList , final java.util.List < org.broadute.hellinstitenderbender.tools.spark.Evsv > cigidence , final java.util.List < org.broadute.hellinstitenderbender.tools.spark.Evsv > readElements ) { if ( checkList . isEmpty () ) { return; } readList . add ( new org.broadute.hellinstitenderbender.tools.spark.ClipMetadata ( cigidence , cigidence , readElements , false ) ) ; cigidence . add ( new org.broadute.hellinstitenderbender.tools.spark.ClipMetadata ( cigidence , readElements , true ) ) ; }
{ for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( com.nucleure.text2DiledTexture.TextureType.TEXTURE ) == type ) { com.nucleure.text2DiledTexture.geometry.DataBuilder . prepareTexture ( mapper , i , type ) ; } else if ( ( com.nucleure.text2DiledTexture.TextureType.TEXTURE ) == attribute ) { throw new java.lang.IllegalArgumentException ( mapper . getText ( i ) ) ; } } }
@ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( this . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkAfterDateInDate ( other . getCheckInDate () ) ) && ( checkBeforeDateInDate ( other . getCheckInDate () ) ) ) return false ; } return true ; }
private static java.sql.ResultSetConnection getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamior.core.connection.SuperConnect.connection . connect ( com.teamior.core.connection.SuperConnect.url , com.teamior.core.connection.SuperConnect.username , com.teamior.core.connection.SuperConnect.password ) ; try { java.sql.ResultSet rs = con . createStatement () ; rs . executeQuery ( query ) ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; } com.teamior.core.GUI . displayAlert ( "GUI Error" , ex . getMessage () ) ; return null ; }
public int readCharacter ( final char [] c ) throws java.io.IOException { char allowed = java.util.Arrays . sort ( c ) ; while ( allowed . allowed ( ( ( java.util.Arrays . binarySearch ( c ) ) + "\n" ) , ( ( char ) ( allowed . readChar () ) ) ) ) {} return c ; }
private int depth ( org.pg4200.datastructure.maptree.BinaryTree.Map < K , V > node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( node != null ) { leftDepth = node.left ; } if ( depth != ( node.rightDepth ) ) { rightDepth = ( node.rightDepth ) + 1 ; } return ( java.lang.Math . max ( ( depth + 1 ) , rightDepth ) ) + 1 ; }
public static org.olap4j.mdx.NodeIdentifier getIdentifier ( org.olap4j.sau.query.AbstractNodeIdentifier . . . . name ) { for ( int i = 0 ; i < (oss.length ) ; i ++ ) { if ( ( identifier . getName () [ i ] ) == "~" ) { identifier . append ( ( ( org.olap4j.mdx.NodeIdentifier . getName () [ i ] . name . length ) + "_" ) ) ; } else { identifier . append ( "_" ) ; } } return identifier . toString () ; }
public void setMatrixMode ( final org.anddevandengine.opengl.util.GLMatrix.MatrixMode pMatrix ) { this . mMatrixMode = pMatrix ; switch ( mMatrixStack ) { case PRO : this . mMatrixStack = mGLMatrixStack ; break; caseorder : this . mMatrixStack = mGLMatrixStack ; break; default: return; } }
public int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connection.Orientation orientation ) { switch ( position ) { case Top : return ( getColumn ( ( position - 1 ) ) ) * ( ( cellSize ) * 0.5 ) ; case Left : return ( ( int ) ( ( ( cellSize ) - ( position * ( getColumn ( cellSize ) ) ) * ( getColumn ( cellSize ) ) ) ) ) ; default: return ( getColumn ( ( position - 1 ) ) ) * ( getColumn ( cellSize ) ) ; } }
private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnit result ) { final java.lang.Float duration = null ; if ( ( ( durationInNs ) != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { duration = ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS ) ) / ( 1 , java.util.concurrent.TimeUnit.NANOSECONDS ) ; } return result ; }
public static double S ( double t ) { double countR = SIModel . getRecord ( SIModel.HISTS_HIST , t ) ; if ( countR != ( - 1 ) ) return ( ( double ) ( t ) ) ; else { double lt = t ; int newR = ( ( SIModel.DT_HISTS ) + lt ; return newR ; } }
private void close () { try { java.sql.Connection statement = java.sql.Connection . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhewower.tower.server.DataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close connection after use." , e ) ; } }
public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.rolot.date.utils.Formatter._exFormats . parse ( dateStr ) ; } catch ( java.text.ParseExceptionException {} ) { if ( date == null ) { date = delta.games.rolot.date.utils.Formatter._Exception . parseTime ( dateStr ) ; } } return date ; }
public static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; } if ( ( edu.psu.ist.acs.micro.mid.scratch.MIDDocumentSet . isConstructShort ( lines [ i ] ) ) == false ) return true ; return false ; }
private java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.Exception { final java.lang.reflect.Method result = null ; if ( enumType != null ) { final java.lang.reflect.Method enumType = method . getDeclaredMethod ( "id" , java.lang.String . class ) ; result = enumType . invoke ( enumType , name ) ; } else { result = null ; } return result ; }
public static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.PyBase . getViewBytes ( b ) ; if ( buffer != null ) { return java.lang.String . format ( "s't support the API %s doesn't fast" , buffer . getType () ) ; } else { throw org.python.core.Py . format ( b . getType () ) ; } }
private static java.util.ArrayList < java.lang.Integer > list_equal_values_col2 ( org.json.JSONArray ja_numbers_v_values , java.lang.String v_values ) { java.util.ArrayList < java.lang.Integer > list_equal_values_v_ = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_numbers_v_values . length () ) ; i ++ ) { if ( ja_numbers_v_values . get ( i ) . toString () . toLowerCase () . equals ( ' '*' ) ) { list_equal_values_v_ . add ( i ) ; } } return list_equal_values_v_ ; }
@ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidParameter ( response , "Not found" ) ; return false ; } else { org.deviceconnect.android.message.MessageUtils . setErrorEvent ( request , response ) ; } if ( ( mPhoto ) == null ) { org.deviceconnect.android.event.EventManager . addEvent ( this ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownErrorOnConnect ( response , this . getClass () . getName () ) ; } return true ; }
public void register ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; seurstfensf.donation.plugin.AddPlayerInfo playerInfo = player . getOrPromoteOrPromote ( toLevel ) ; playerInfo . put ( playerInfo , playerInfo ) ; playerInfo . sendMessage ( java.lang.String . format ( ( "You are currently at %d." + ( perLevel + 1 ) ) ) ) ; }
private java.util.List < java.util.Vector > calculateMeanPointList ( double [] data ) { double [] meanPointCount = new double [ data.Data. dataSet ] ; for ( int i = 0 ; i < ( dataSetCount ) ; i ++ ) { for ( int i = 0 ; i < ( data.Data.Point > i ) ; i ++ ) { meanPointCount [ i ] = new double [ arguments ] ; } } return meanPointCount ; }
@ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.pushinbox.sample.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.IllegalStateException e ) { throw new java.lang.IllegalStateException ( ( ( "Fragment must implement AbstractFragment interface." + ( activity ) ) + "] must implement AbstractFragment interface." ) ) ; } }
public org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cacheConfiguration = ( ( org.apache.ignite.cache.CacheConfiguration ) ( clsV ) ) ; cacheConfiguration . setName ( name ) ; cacheConfiguration . setCacheMode ( org.apache.ignite.cache.CacheMode.TRANSACTIONORITENED ) ; cacheAtomicSynchronizations . set ( 1 ) ; cacheAtomicSynchronizations . set ( clsV ) ; return cacheAtomicSynchronization ; }
private static java.util.Optional < edu.cwru.eecs.cli.UserAccountModels.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.cli.UserAccountModels.UserAccount > user = java.util.Optional . empty () ; if ( ( user != null ) && ( ! ( result . getBoolean ( "isDeletedUserAccount" ) ) ) ) { user = edu.cwru.eecs.cli.UserAccountModels.UserAccountManager . convertToAccountForManagers ( result ) ; } return user ; }
private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString == 1 ) { if ( com.rijul.game.app.impl.player.Board.INITIAL_MOVE . equals ( boardAsString ) ) { int ind = com.rijul.game.app.impl.player.Board.INITIAL_MOVE . nextInt ( com.rijul.game.app.impl.player.Board.INITIAL_MOVE . get ( boardAsString ) ) ; return ind ; } else { return getOptimalResultForPosition ( board , getOptimalResultForPosition ( boardAsString , com.rijul.game.app.impl.player.Board.INITIAL_MOVES ) [ 2 ] , boardAsString ) ; } } else { return 1 ; } }
public static java.lang.String loadEFileCore ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbs ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EmpleImportHandler handler = new cruise.umple.compiler.EmpleImportHandler () ; cruise.umple.core.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; }
private boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.minatx.fposed.minarduming.Main.pref_MODE . getString ( Common.VALUE_MODE_BLACKLIST , Common.VALUE_MODE_AUTO_MODE ) ; if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return true ; } else if ( ( ! ( mode . equals ( Common.minarduming.minarduming.Main.pref_MODE ) ) ) && ( ! ( mode . getBoolean ( "prefName" , Common.minarduming.minarduming.Main.pref_VALUE ) ) ) ) { return false ; } return true ; }
private void setSPenToolWithCanvases ( int toolActionCanvases ) { for ( int i = 0 ; i < numCharBoxCols ; i ++ ) { for ( int j = 0 ; j < numCharInBoxes ; j ++ ) { if ( mBoxes [ i ] [ j ] . isActivated () ) { mBoxes [ i ] . set ( mCharToolType . makeSaser ( toolActionCanvases , j ) ) ; return; } } } }
@ java.lang.Override public org.pbx12.IED12. ( java.io.InputStream source , java.io.InputStream source ) throws java.io.IOException { java.lang.StringBuilder str = new java.lang.StringBuilder () ; char [] c = new char [ 1024 ] ; int length = 1024 ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source , c ) ) ; while ( ( str . length () ) != ( - 1 ) ) { str . append ( c ) ; } return str . toString () ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) && ( ( android.support.v4.app.ActivityCompat . requestLocationUpdates ( this , location , 5000 , "gpsLocation" ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( location , 0 , 5000 ) ; }
public void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newNetworkView ) { synchronized ( lockView ) { if ( ( ( ( currentNetworkView ) == null ) && ( newNetworkView == null ) ) || ( ( currentNetworkView ) != null ) ) return; final org.cytoscape.view.internal.CyNetworkPanel tp = currentNetworkView . values () ; newNetworkView = false ; firePropertyChange ( "currentNetworkView" , tp , newNetworkView ) ; } }
public static com.emgenter.organization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 item ) { if ( content . getNodeName () .Equals ( "image" ) ) { return com.emgenter.organization.cellrpg.tools.map.MapImageLoader . parse ( item , "#" ) ; } else if ( content . getNodeName () .Equals ( "text" , item . getNodeName () ) ) { return com.emgenter.organization.cellrpg.tools.map.MapImageLoader . printItem ( item ) ; } else { return null ; } }
public java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] arg1 = java.lang.String . valueOf ( args [ 0 ] ) ; int arg2data = java.lang.Integer . valueOf ( arg2 [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( arg2 [ 2 ] ) ; int arg3 = java.lang.Integer . valueOf ( arg1 [ 1 ] ) ; return calculateCalculate ( source , arg3 , arg3 ) ; }
public static android.graphics.Bitmap setBitmapSize ( int iconId , int w , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , w ) ; if ( bitmap != null ) { float s = ( ( float ) ( 1.0F * ( bitmap . getWidth () ) ) ) / ( ( android.graphics.Bitmap . createScaledBitmap ( bitmap , s , bitmap . getWidth () , bitmap . getHeight () ) ) ) ; int s = ( ( int ) ( bitmap . getHeight () ) ) * ( bitmap . getHeight () ) ; return s ; } else return null ; }
public void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.julberparians.vpn.AlertDialog.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_ORDER_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_PAYLOAD_DOCUMENT ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) ) ; intent . putExtra ( User.UserAlertDialog.TASK , msg ) ; startActivity ( intent ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Person loadedFamily = personRepository . findByName ( familyName ) ; if ( ( loadedFamily != null ) || ( ! ( loadedFamily . getAuthorized () . getId () . equals ( person . getId () ) ) ) ) { personRepository . save ( loadedFamily ) ; } if ( ( person != null ) || ( ! ( loadedFamily . getAuthorized () . getId () . equals ( person . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.NotAuthorizedException ( "You don't have to return permission to return that that that that." ) ; } return personRepository . save ( person ) ; }
public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.mustado.gaming.reminder.db.DatabaseHelper.TABLE_WEBS , com.mustado.gaming.reminder.db.DatabaseHelper.VORITE_COLID , favoriteID ) ; db . delete ( com.mustado.gaming.reminder.db.DatabaseHelper.TABLE_ID , null , ( ( ( ( ( ( ( com.mustado.gaming.reminder.db.DatabaseHelper.VORITE_COLID ) + " = " ) + favoriteID ) + " " ) + ( com.mustado.gaming.reminder.db.DatabaseHelper.VORITE_ID ) ) + " = " ) , null ) , null ) ; return db . delete ( com.mustado.gaming.reminder.db.DatabaseHelper.TABLE_ID , favoriteID , null ) ; }
private static java.lang.StringBuffer generateData ( java.util.List < java.lang.String > sensorName , java.lang.String color , java.lang.String json ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"value\":\"" ) . append ( json ) . append ( "\""," ) . append ( "\"value\":[" ) . append ( str ) . append ( "]" ) ; return generateGraphzone ( sensorName , json ) ; }
void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ( requestTime ) ) > 0 ) { final long secTime = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long msTime = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ch.qos.d01logback.contrib.jsonlog.JsonLayout.ATTR_NAME_REQUEST_TIME ) ) ; if ( secTime != ( - ( time ) ) ) { map . put ( java.lang.String . format ( "%d" , secTime , time ) ) ; } } }
private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { break; } else { depth ++ ; } } return depth ; }
private void saveIntegrityKey ( javax.crypto.SecretKey keyKey , java.lang.String intentFilename ) { try ( java.io.ObjectOutputStream filterOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( keyKey ) ) ) { consoleOutputController . writeObject ( java.lang.String . format ( logOutputController . format ( keyKey , "error.offlineadmin" ) ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( e ) ; } }
private void loaddataChildKeys ( org.grails.datastore.core.mapping.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( proxy != null ) { for ( java.lang.Object key : proxyEntities ) { add ( ( ( java.io.Serializable ) ( key ) ) , keys ) ; } } childType . addAll ( retrieveAll ( session , childType ) ) ; }
public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { java.util.Map < java.lang.String , java.lang.Object > nextBuffer ; try ( java.util.Map < java.lang.String , java.lang.Object > ring = sequence . getRorstacking () ; long nextBuffer = ring . next () ; if ( ( map != null ) && ( ( map . size () ) > 0 ) ) { event . setEvent ( sequence ) ; } finally { event . publish ( event ) ; } }
@ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) && ( ( ( currentOwner ) == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } }
@ java.lang.Override public org.j org.codec.common.Muxer.VideoCodec addVideoTrack ( org.jcommon.codec.containers.MetaCodec codec , org.codec.common.containers.MetaCodec metaCodec ) { org.codec.muxer.Muxer.Track track = MP ; if ( ( codec ) == null ) { metaCodec . addTrackFrames ( codec , track ) ; } else if ( ( codec . size () ) > 0 ) { for ( org.codec.front4.2H264Entry track : codec ) { if ( ( track ) != null ) { metaCodec . addTrackSampleEntry ( track ) ; } } } return new org.jcommon.common.Muxer.VideoCodec () ; }
public static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { method . setAccessible ( ( ! ( method . isAccessible () ) ) ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; }
public static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == null ) return 0 ; if ( ( endpoint.length ) == 2 ) return 1 ; if ( ( endpoint.y ) == 3 ) return 2 ; if ( ( endpoint.length ) == 3 ) return 3 ; throw new java.lang.IllegalArgumentException () ; }
public void setTeam ( java.lang.Integer team ) { if ( ( de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player1 ) != null ) { de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player1 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener = new de.jicky.mpevent.plugins.pv.player.NPC () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener = new de.jicky.mpevent.plugins.pv.player.NPC ( de.joupevent.plugins.pv.player.NPC.currentInteractListener.player1 . getUniqueId () , de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . getUniqueId () ) ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener . destroy () ; } }
private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , MoppingCartHolder.ShoppingCartID ) ; response . getRandomCookie ( MoppingCartHolder.ShoppingCartID ) ; cart = new MoppingCart ( cookie ) ; MoppingCartHolder . getInstance () . AddShoppingCart ( cart . getValue () , cookie ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/Movie" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer sortByProductDetail ( @ org.springframework.web.bind.annotation.PathVariable ( value = "salesInvoice" ) java.lang.Integer productId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer sortByPerPageId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Boolean defaultValue ) { com.sales.spinique.cik.domain.ProductDetail result = this . productService . findByInvoiceAndLabelAndSortAndSortAndSort ( this . product , productId , sortByPerPageId , new com.sales.spinique.cik.domain.Invoice () ) ; return result ; }
public static java.util.List < Tile > createGame ( Board.BoardBuilder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( Board.NUM_TILES ) ; i ++ ) { tiles . add ( Tile.TileUtils . createTile ( builder . get ( i ) , tiles ) ) ; } return tiles ; }
private double semestrialCorrection ( final double param ) { final double deb_preq = 59 ; final double result = 244_44 ; final double xDay = 100 ; if ( ( cachedDay ) >= 100 ) { result = deb_preq / ( ( - 40.0 ) * param ) ; } else { result = ( ( 1.0 * result ) * param ) / ( ( - 40.0 ) * param ) ; } final double result = ( ( 1.0 ) * param ) * param ; return result ; }
public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "search" , "IntegerStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; }
public void updateDefStats ( boolean pic , boolean loss , boolean f , boolean loss , boolean forcedfumecack , boolean s , boolean s ) { if ( pic ) ( pics ) ++ ; if ( ( pics ) ++ ; if ( loss && loss ) ( tfls ) ++ ; if ( ( fecacks ) ++ ) ( s ) ++ ; if ( s ) ( deftds ) ++ ; if ( forcedfumecacks ) ( forcedfumecacks ) ++ ; if ( forcedfumecacks ) ( forcedfumecacks ) ++ ; }
@ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String message = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( message . length () ) > 0 ) { message = conversation . add ( message ) ; } else { java.lang.System.out . println ( Messages.ERROR ) ; } }
private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( ( registers [ Z80.REGISTER_FLAG ] ) &STER ) &STER ; switch ( flagVal ) { case Z80.FLAG_FLAG_SUBCT : flagReg = flag ; break; case 7 : flagReg > > 7 ; break; case 6 : flagReg = flag ; break; case 7 : flagReg > > 7 ; break; case 7 : flagReg = flag ; break; } return flagReg ; }
@ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.XtConfigSuppressResource > getInstance () { @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = javax.servlet.rs.core.MediaType.APPLICATION_JSON ) public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.XtConfigSuppressResource > getPushes () { com.magnet.mmx.server.plugin.mmxmgmt.XtConfigSuppressResource = null ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.PushResource . convert ( appId , com.magnet.server.plugin.mmxmgmt.mmxmgmt.config.PushId ) ; } @ java.lang.Override public java.util.Collection < com.magnet.server.plugin.mmxmgmt.XtConfigSuppressResource > execute () { return new com.magnet.server.plugin.mmxmgmt.servlet.integration.PushResource ( com.magnet.server.plugin.mmxmgmt.config.PushId ) ; } }
private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 2 ; else if ( n == 1 ) return 1 ; for ( int k = 1 ; k <= ( sequenceA47 . getNumber ( k ) ) ; k ++ ) { sum += ( sequenceA47 . getNumber ( k ) ) * ( n - ( n / n ) ) ; } return sum / n ; }
public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r . select ( "product-oddEven" ) ; java.util.List < jeven.Listing > results = tr . select ( "product-Even" ) ; for ( int j = 0 ; j < ( results . size () ) ; j ++ ) { results . add ( results . get ( j ) ) ; } return results ; }
public synchronized ch.entwine.webloun.ge.common.site.SiteBundle findSiteByBundle ( org.osgi.framework.BundleLock bundle ) { synchronized ( sites ) { for ( java.util.Map.Entry < ch.entwine.webloun.ge.common.site.SiteBundle , org.osgi.framework.Bundle > entry : sites . entrySet () ) { if ( site . getValue () . equals ( bundle ) ) { return entry . getKey () ; } } } return null ; }
private int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; i ++ ) { com.github.baidhen.steppicker.place.PlaceInfo placeInfo = getHistoryRecordInfo ( ( i + 1 ) ) ; if ( placeInfo == null ) { return i ; } if ( ( placeInfo.placeId ) == 0 ) return i + 1 ; } return 0 ; }
public void enqueue ( java.lang.Object element ) { int size = () ; if ( size == ( n - 1 ) ) { resize () ; } queue [ ( ++ ( n ) ) ] = element ; if ( ( ++ ( rear ) ) == ( n ) ) { rear = 0 ; } }
private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.Location > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > v = getVariableable ( loc ) . getOperand ( 0 ) ; if ( v . isCopy () ) { out . print ( loc ) ; } else { out . print ( ( ( "(" + ( v . getBytecode () . getName () ) ) + ")" ) ) ; } }
public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; final int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfWidth = height / 2 ; final int halfHeight = width / 2 ; while ( ( ( halfWidth > reqWidth ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/{year}/{month}/{day}/{day}/{day}" , @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month ) throws java.io.IOException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Period time = week . getCalendar ( year , month , day ) ; return new javax.ws.rs.core.Response ( org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ) ; }
public boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; }
public int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( reply instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; }
@ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( java.lang.Double ) ( rec1 . get ( ( ( Constants.CLOSE ) + ( java.lang.Double.CLOSE ) ) ) ) ) ; java.lang.System.out . println ( avg ) ; avg . put ( ( ( Constants.CLOSE ) / 2 ) , rec2 . get ( ( ( Constants.CLOSE ) / 2 ) ) ) ; return avg ; }
public void toHTMLTable ( java.io.PrintWriter ostr ) { while ( ostr . hasNext () ) { this . print ( "<table>" ) ; this . results = ostr . next () ; this . print ( tmp ) ; ostr . print ( "</tableTableRow>" ) ; ostr . flush () ; } ostr . print ( "</table>" ) ; ostr . flush () ; }
private java.io.File interpolateDockerfile ( java.io.File dockerFile , java.lang.String params , java.util.Properties properties , java.lang.String filterDirs , java.util.Properties properties ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( "/Docker.dockerDirectory" + params ) + "/Docker.file" ) ) ; java.io.StringWriter writer = new java.io.File ( dockerFile , targetDockerfile ) ; try ( java.io.Writer writer = new java.io.FileWriter ( dockerFile , params ) ) { writer . write ( writer ) ; } return new org.apache.commons.io.IOUtils ( writer ) ; }
public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual , java.lang.Integer param ) { boolean condition = null ; if ( expected == null ) { condition = actual ; } else { condition = expected ; } com.triangeleft.asserteft.dialog.DialogAssert . assertTrue ( message , actual ) ; }
public static com.github.rinde.rinsim.ui.SimulationViewer createSimulation ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator p , int pAutoUpSpeed , java.util.List < com.github.rinde.rinsim.ui.render.RenderRenderer > accers , java.util.Map < com.github.rinde.rinsim.ui.render.RenderRenderer , java.lang.Integer > pList ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , p , simers , pMap ) ; }
public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > cElem ) { for ( int counter = 0 ; counter < ( counters . size () ) ; counter ++ ) { if ( ( ! ( counters . get ( counter ) . equals ( cElem ) ) ) && ( ! ( counters . get ( counter ) . equals ( cElem ) ) ) ) return false ; } return true ; }
public codeu.chat.common. newUser.User newUser ( codeu.chat.util.Uuid code , java.lang.String name , java.lang.String creationTime , java.lang.String password ) { codeu.chat.common.User user = null ; if ( isFree ( codeu.chat.server.UserController.name , name , creationTime ) ) { user = new codeu.chat.server.User ( id , name , creationTime , password , useTime ) ; } else { user = new codeu.chat.server.User ( id , name , creationTime , password , useTime ) ; } model.name . fail ( "new (user=%s)" ) ; return user ; }
@ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectra.cluster.util.MatchComparison > comparisonMatches ) { if ( ! ( bestComparisonMatches . isEmpty () ) ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; } java.util.Collections . sort ( bestComparisonMatches ) ; this . bestComparisonMatches = bestComparisonMatches . get ( 0 ) ; this . bestMatchIds = null ; }
@ java.lang.Override public void in ( java.lang.String token ) { java.lang.String message = ( l ) + " is in" ; session . getWits () . size ( session . getWits () ) ; if ( ( getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject ( token , true , session . getWits () ) ; session . sendToStream ( attr ) ; } }
public void checkSheetName ( jxl.Sheet.Workbook j ) throws java.io.IOException , java.io.IOException { assertTrue ( ( ( jxl.biff.BiffetsException . getSheets () . length ) > 0 ) ) ; if ( ( activity . getSheetNames () . length ) != 0 ) { for ( java.lang.String name : activity . getSheetNames () ) { if ( name . equals ( getString ( R.string.default_sheet_name ) ) ) { return getString ( R.string.default_name ) ; } } } }
public static java.lang.String [] normalizeSummonerNames ( net.rms.otms.constant.Platform platform , java.lang.String summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rms.moner.util.RmsUtil . normalizeSummoner ( platform , summonerNames [ i ] . dotName ) ; } return summonerNames ; }
private void setValues ( java.lang.String nNumber ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.headers.NodeCounter ce : _defaultICs ) { m . put ( ce . name () . toLowerCase () , new java.lang.Number ( nNumber ) ) ; } return m ; }
public static void setPollutionPoll ( net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos , net.minecraft.math.BlockPos newPollData ) { synchronized ( this ) { if ( ( ( newPollData.minValue (utionLevel.maxPoll ) ) || ( newPollData.maxPoll ) ) || ( newPollData.minValue (utionLevel.maxPoll ) ) ) { return; } else { value.pollpolljauk.namutiondata.namution.PollWorld instance = new value.pollutionuk.namutiondata.namution.PollWorld ( world , newPollData ) ; value.data . put ( key , instance . getKey () ) ; } } }
protected static org.pentaho.agilebi.modeler.LogicalColumnCorRecingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn < org.pentaho.agilebi.modeler.LogicalModel > olapTable , org.pentaho.agilebi.modeler.LogicalModelTable olapTable ) { org.pentaho.agilebi.modeler.LogicalColumn col = null ; for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( ( col . getPhysicalColumn () ) != null ) { if ( col . getPhysicalColumn () . getId () . equals (Collection . getId () ) ) { return col ; } } } return null ; }
public void onLoaded ( com. results.Adad ad ) { com.news.util.L.get . i ( "first" ) ; ad.news.logic.NewsCache.first = false ; this . isLoading = false ; com.news.sdk.NewsSdk . getInstance () . getReport_listEvent ( "show_news_list_show_list" , ( - 1L ) , java.lang.Long . valueOf ( 2L ) ) ; cached_native . send ( "native_news_status" , java.lang.Long . valueOf ( 2L ) ) ; }
public void add ( int index , double element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - 1 ) ) ; set ( ( index + 1 ) , element ) ; } }
public void sendPartCommand ( org.uki.uni4j.irc.server.ClientConnection part ) throws java.io.IOException { java.util.List < org.uki.uni4j.irc.server.ClientConnection > sendClients = new java.util.ArrayList < org.uki.uni4j.irc.server.ClientConnection > ( joinedList ) ; for ( org.uki.uni4j.irc.server.ClientConnection clientConnection : sendClients ) { this . clientConnection . remove ( clientConnection . getNickName () ) ; } try { org.uki.uni4j.irc.server.ServerLog . log ( part , this ) ; } catch ( java.lang.Exception e ) { org.uki.uni4j.irc.server.ServerLog . log ( e ) ; } }
public void setEventLatestState ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( key , jedi . revision () ) ; }
private static java.lang.String parseFile ( java.lang.String data , java.lang.String fileName , java.lang.String configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = Config.Util . parseYML ( data , fileName ) ; break; case PRO : convertedConfig = Config.Util . parseYML ( data , fileName ) ; break; default: break; } return convertedConfig ; }
public void removeContact ( int position ) { com.addressbook.thorism.book.Contact contact = mContacts . get ( position ) ; mBookEntryHeaders . remove ( position ) ; mBookEventually . saveInBackground () ; com.parse.DeleteCallback . create () ; if ( ( contacts . size () ) == 0 ) { createToast ( "Deleted Contact." ) ; } else { e . printStackTrace () ; } }
public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert ( toAdd . getCategories () ) != null ; if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . add ( toAdd ) ; }
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( ( v . getContext () ) == ( this . lblBitcoinAddress ) ) address = this . getActivity () . getString ( R.string.bit_address ) ; else if ( ( v . getContext () ) == ( this . lblLoinAddress ) ) address = this . getContext () . getString ( R.string.ec_lititoinen ) ; net.litegen.android.util.Clipboard . getInstance ( this . getActivity () ) . setClipText ( address ) ; }
@ java.lang.Override public void save ( org.openstack.atlas.service.domain.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.impl.AccountLimit accountLimit = dbRepository . getByIdAndType ( accountLimit . getAccountId () , accountLimit . getLimit () ) ; if ( accountLimit != null ) { dbRepository . save ( accountLimit ) ; } }
@ java.lang.Override public dyvil.tools.compiler.astfield.IDataMember resolveField ( dyvil.tools.parsing.Field name ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.astfield.IVariable variable = this . variables . get ( i ) ; if ( variable == null ) { return this . variable . getName () ; } } } return null ; }
public static void restoreDensity ( android.content.Context context ) { if ( context != null ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.rudeness.bud.ui.RudScreenHelper . getResources () ; metrics . getMetrics ( context ) ; if ( metrics != null ) metrics . setToDefaults () ; } }
public void traiterEmail ( java.lang.String email , com.tutut.beans.Utilateur utilisur ) { try { validationEmail ( email ) ; } catch ( java.lang.Erreur ) { com.tut.forms.ConnexionForm utilur = e . getMessage () ; if ( utilur == null ) { utilur = new com.tut.forms.ConnexionForm ( utilur ) ; } else { setErreur ( utilur , utilur ) ; } } }
public models.Trainer searchTrainersByEmail ( java.lang.String email ) { java.lang.String train = new java.lang.String ( "" ) ; if ( ( train . size () ) > 0 ) { for ( models.Trainerer trainer : trainers ) { if ( trainer . getEmail () . equals ( email ) ) { return trainer ; } else { return null ; } } } else { return null ; } }
public void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; toast . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { cancel () ; } } , 500 ) ; }
public static com.alphatica.genotickgen.RobotData createUpDataToPoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { list . add ( original ) ; } try { java.lang.Double time = calculateReverse ( list ) ; com.alphatica.genotickgen.RobotDataChange future = com.alphatica.genotickgen.RobotDataChangePoints . create ( name , time , copy ) ; return time ; } catch ( java.lang.Exception ex ) { return name ; } }
public static void post ( java.lang.String url , java.lang.String requestBody , com.chinamobile.iot.OneNetApi.Callback callback ) { com.chinamobile.iot.OneNetApi . assertInitialized () ; com.chinamobile.iot.OneNetApi . assertUIThread () ; com.chinamobile.iot.OneNetApi.sHttpUrl = ( com.chinamobile.iot.OneNetApi.sHttpUrl ) + "utf-8" ; com.chinamobile.iot.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.OneNetApi.RequestBody () ) ; com.chinamobile.iot.OneNetApi.sHttpAdapter . post ( url , new com.chinamobile.iot.OneNetApi.RequestBody () ) ; }
public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxb = jaxbContext . createMarshaller () ; jaxb . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , true ) ; }
private static void sendResultWithDns ( boolean result_code , int result_code1 , java.lang.String player2 ) { android.content.Intent result_intent = new android.content.Intent ( android.content.IntentConstants.ACTION_DNS_intent ) ; result_intent . putExtra ( "result" , Value ) ; result_intent . putExtra ( "result" , result_code1 ) ; result_intent . putExtra ( "code2" , ( ( boolean ) ( result_code2 ) ) ) ; }
public void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en = ( ( java.util.Iterator ) ( pIterator . getNearbyEntities () , 458 ) ) ; for ( org.bukkit.entity.Player local : en . iterator () ) { if ( ( ! ( en . hasNext () ) ) || ( ( org.bukkit.entity.Player ) ( en ) ) ) en . sendMessage ( msg ) ; } }
private void updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node node = map . get ( n . getStateFromMap () . toString () ) ; if ( ( node . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( n . getStateFromMap () . toString () ) ; } n . put ( n . getStateFromMap () . toString () , map ) ; }
public org.json.JSONObject toJsonToJsonObject ( org.json.JSONObject attrFilter ) { org.json.JSONObject BoraApplicationConstants = new org.json.JSONObject () ; BoraApplicationConstants . toJsonID ( id ) ; BoraApplicationConstants.EVENT_NAME_JSON_KEY . put ( BoraApplicationConstants.EVENT_NAME_JSON_KEY , name ) ; BoraApplicationConstants.EVENT_DATE_JSON_KEY . put ( BoraApplicationConstants.EVENT_DATE_JSON_KEY , toJson ( photoNames_JSON_KEY ) ) ; return BoraApplicationConstants.EVENT_ALOSTENOTES_KEY . put ( BoraApplicationConstants.EVENT_ID_JSON_KEY , toJson ( name ) ) ; }
public static java.util.Set < me.newyith.util.Point > getPointConnectedPoint ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material.Blocks > wallBlocks , java.util.Set < org.bukkit.Material.Blocks > ignoreSet , int rangeLimit , me.newyith.util.Point origin ) { java.util.Set < me.newyith.util.Point > layers = new java.util.HashSet < me.newyith.util.Point > () ; return layers ; }
private static void rauswerweren ( int neuesFeld , int spielerNum ) { for ( int rspmerNum : siielerNum.tspieledproj.Spiieler.spieler . keySet () ) { if ( ( spielerNum.tspieledproj.Spiieler.maSpiieler . getSpiieler () ) == siielerNum ) { rspmerNum.tigieledproj.Spiieler.spieler . spielFurigneld () ; } } for ( int rspmerNum : spielerNum.tigieledproj.Spiieler.spieler . getSpiieler () . holeSpiieler () ) { rspmerNum.tigieledproj.Spiieler.igieler . spielFurignues ( rspmerNum ) ; } }
private eu.europeana.corelib.lib.definitions.edm.beans.FullRecordBean retrieveFullRecordTimeout ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.exceptions.MongoDBException , eu.europeana.corelib.exceptions.MongoMongoException , eu.europeana.corelib.exceptions.N4jException { long startTime = java.lang.System . currentTimeMillis () ; if ( eu.europeana.corelib.definitions.neo2.v2.api.BeanSearchController.LOG . isDebugEnabled () ) { eu.europeana.corelib.definitions.neo2.v2.api.BeanSearchController.LOG . debug ( ( ( "Full search parameter is no ms" + ( java.lang.System . currentTimeMillis () ) ) + " ms" ) ) ; } return result ; }
static boolean anyPlayers ( org.bukkit.Location loc , int range ) { java.util.List < org.bukkit.entity.Entity > out = me.badones69.particles.Api.byEntities . getNearbyEntities ( loc , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingPlayer ) { org.bukkit.entity.LivingPlayer en = ( ( org.bukkit.entity.LivingPlayer ) ( e ) ) ; if ( en . isEntity () ) { return true ; } } } } return false ; }
public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 4 , 5 , 3 , 4 , 5 , 4 , 0 , 6 , 4 , 0 , 0 , 0 } ; java.lang.System.out . println ( play.Gameing.Gameing . solveRecursively ( RightWing.Gameing.DEFAULT_VALUE , play ) ) ; }
private void setupAuthenticatedModel ( java.lang.String results , org.balutaga.web.convConversion.currConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balutaga.data.entity.currConversion.currConversion > history = conversionService . getHistory () ; if ( ( history == null ) || ( results . isEmpty () ) ) { model . put ( org.balutaga.web.convConversion.currConvertController.CONATTR_VERSION , history . subList ( 1 , history . size () ) ) ; history . put ( org.balutaga.web.convConversion.currConvertController.CONATTR_VERSION , history . get ( 0 ) ) ; } else { history . put ( org.balutaga.web.convConversion.currConvertController.CONATTR_VERSION , history . subList ( 1 , history . size () ) ) ; } }
protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
public boolean setColor ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; }
@ org.testng.annotations.Test public void testGetZoneNameDataProvider ( final java.lang.String request , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseHeaders , final java.util.Map < java.lang.String , java.lang.String > serviceBaseConfig ) { final java.util.List < java.lang.String , org.springframework.web.MockHttpServletRequest > req = new org.springframework.web.MockHttpServletRequest () ; serviceMock . setServerValue ( requestValue ) ; org.testng.Assert . assertEquals ( serviceBaseHeaders , req ) ; }
private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.NewData.ColumnName > mappingToOldColumns ) { if ( ( mappingToOldColumns . size () ) > 0 ) { for ( java.util.Map.Entry < java.lang.String , model.data.NewData.ColumnName > entry : mappingToOldColumns . entrySet () ) { model.data.Data.ColumnName newColumn = new model.data.Column ( entry . getKey () , entry . getValue () ) ; this . addColumn ( newColumn ) ; mappingToOldColumns . put ( entry . getValue () , newColumn ) ; } } }
public static java.lang.String getCurrentTitle () { return ( br.com.carlosrafaelgn.play.fplay.Player.back ) == null ? "" : ( ( br.com.carlosrafaelgn.play.fplay.Player.backSong ) == null ? null : br.com.carlosrafaelgn.play.fplay.Player.backSong . getText () . toString () ) + ( br.com.carlosrafaelgn.play.fplay.Player.backSong . getText ( R.string.title_playing ) ) ; }
protected static java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String data ) { if ( ( ( org.opendaylight.salnet.conf.impl.newconf.SwaggerSwaggerBaseGenerator.DY ) || ( dataStore . contains ( "config" ) ) ) || ( dataStore . contains ( ( ( ( org.opendaylight.salnet.conf.impl.newconf.SwaggerSwaggerBaseGenerator.DCONFRAFT_REST ) + "/" ) + context ) ) ) ) { return "data" ; } else { return context . open ( ( ( ( org.opendaylight.salnet.impl.newconf.SwaggerBaseGenerator.DCONFRAFT_REST ) + "/" ) + data ) ) ; } }
public static org.alien4cloud.ca.model.tosca.model.PropertyDefinition buildPropDefinition ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.ca.definitions.model.tosca.PropertyDefinitionDefinition propertyDefinition = new org.alien4cloud.ca.definitions.model.tosca.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequiredEntryDefinition ( required ) ; propertyDefinition . setPassword ( ( required + false ) ) ; return propertyDefinition ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.Attribute ( value = "loggedLoggedIn" ) java.lang.String user , @ org.springframework.web.bind.annotation.RequestParam ( value = "logged" , required = false ) java.lang.String defaultValue ) { if ( ! ( "false" . equals ( user ) ) ) { if ( loggedIn . equals ( "user" ) ) { return new org.springframework.web.servlet.ModelAndView ( "loggedLoggedIn" , "false" ) ; } else { java.lang.System.out . println ( "false" ) ; return new org.springframework.web.servlet.ModelAndView ( "loggedLoggedIn" , loggedIn ) ; } } return null ; }
public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { proxy . enterMipData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { proxy . enterMipData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
public main.Task1Project.pages.tab_pages.AbstractPageOptions clickOnMoreProject ( main.TaskOptions item ) { org.openqa.selenium.WebElement buttonText = extractText ( item . getText () ) ; if ( buttonText . trim () . equals ( options ) ) { java.util.logging.Logger . log ( java.util.logging.Level.INFO , "clicking on name" ) ; return null ; } clickOnMoreProject.pages.tab_pages.AbstractPageOptions item = extractText ( item ) ; return buttonText ; }
@ java.lang.SafeVarargs public static java.util.Comparator < V > propertyComparator ( java.lang.String propertyName , java.lang.String . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.BeanUtil . toListComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toListComparator ( propertyValues ) ) ; }
public java.lang.String toString () { java.lang.String value = null ; if ( column instanceof com.googlecode.glossary.common.column.BlobColumn ) { value = ( ( com.googlecode.glossary.common.column.BlobColumn ) ( column ) ) . getValue () ; } else if ( value != null ) { value = new java.lang.String ( column . toString () ) ; } return value ; }
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variant : com.vikos.annojitech.EmojiManager . install ( new com.vikos.annojitech.EmojiProvider () ) ; recreate () ; return true ; case R.id.variantOne : com.vikos.annojitech.EmojiManager . install ( new com.vikos.annojitech.EmojiProvider () ) ; recreate () ; return true ; } return super . onOptionsItemSelected ( item ) ; }
public boolean equals ( java.lang.Object o ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) . value ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) . getValue () ) ) ; }
@ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExisting ( xPos , yPos , orientation ) ) ) { if ( playerHasWalls () ) { return false ; } else { if ( ( playerList . size () ) > 1 ) { return false ; } else { return isWall ( xPos , yPos , orientation ) ; } } } return true ; }
public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; setLeft ( tempRoot , v ) ; root . remove ( tempRoot ) ; } else { root.Node temp = root . getLeft () ; remove ( tempRoot , v ) ; } } }
private void selectedButtonLowerStyle ( javafx.scene.control.Button buttonButton ) { carInsuranceToolbar . setId ( "sideInsurance" ) ; bouranceToolbar . setId ( "sideInsurance" ) ; homeButton . setId ( "sideInsurance" ) ; holidayButton . setId ( "sideInsurance" ) ; buttonButton . setId ( "sideInsurance" ) ; buttonButton . setId ( "sideInsurance" ) ; }
public static void showDialog ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.seraut.gureyclient.ui.DialogFactory . showDialog ( context , message , negativeMsg , negativeMsg , messageListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; }
public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label ) { javax.swing.JPaneltimeTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel () ; labelTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; text . add ( text ) ; return text ; }
protected final java.net.Socket getRootSocket ( java.lang.Object target ) { final org.apache.thrift.transport.TverpTransJSONTransport in = ( ( com.navercorp.pinpoint.plugin.thrift.TverpNonGetterTransport.Field.POINT_PIN_POINT ) ) ; if ( in != null ) { if ( ( com.navercorp.pinpoint.plugin.thrift.TransfieldAccessor.accessor . class . getName () ) instanceof com.navercorp.pinpoint.plugin.thrift.TransfieldAccessor.PIN_POINT ) { return ( ( com.navercorp.pinpoint.plugin.thrift.TransfieldAccessor.PIN_POINT ) ( in ) ) . isDebug () ; } else { return target ; } } return null ; }
public static void main ( java.lang.String [] arguments ) throws java.io.IOException { Avans.LinkedListUtil.TokenTokenizer < Avans.Tokenizer > tokenList = new Avans.LinkedListUtil.TokenTokenizer < Avans.CompilerUtil.Node > () ; if ( ( tokenList . getFirst () ) != null ) { tokenList . run ( new Avans.CompilerUtil.TokenPatterns () ) ; } try { tokenList . getFirst () . test ( "src\\2.txt" , tokenList . getMessage () ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } }
public void exitApplication ( android.content.Context context ) { try { android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killProcessesBackground ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }
@ java.lang.Override public void save ( de.jirdords.censusbird.core.BirdCount instance ) { if ( ( converter != null ) && ( ( db . insert ( BirdCountTable.TABLE_NAME , null , values ) ) != null ) ) { instance . insert ( BirdCountTable.TABLE_NAME , null , values ) ; for ( de.jirdords.censusbird.core.BirdCountTable.BirdCountTable instance : converter . extractData ( BirdCountTable.TABLE_NAME , values ) ) { instance . insert ( BirdCountTable.TABLE_NAME , null , null ) ; } } }
private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , long nSeqID , long nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendUser ( eGroupType , nGroupID , nResult , nResult ) ; } } } }
public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { if ( ( configurationElement != null ) && ( ( configurationElement . getAttribute ( parameter ) ) != null ) ) { for ( org.eclipse.core.runtime.IConfigurationElement parameter : configurationElement . getChildren ( parameter ) ) { if ( ( parameter . getAttribute ( parameter ) ) != null ) { return parameter . getAttribute ( parameter ) ; } } } return null ; }
public void storeScores ( java.util.List < java.lang.String > scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String score = gson . toJson ( scores ) ; editor . putString ( com.evok.roader.JsonStore.RESCOS_STRING , score ) ; editor . apply () ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String saveUser ( org.springframework.ui.Model model , @ javax.validation.Valid @ org.springframework.web.bind.annotation.Valid com.va.mvc.sorestub.User user , org.springframework.validation.ErrorsStub errors ) { java.lang.String currentPage = "users/editUser" ; if ( userService . hasErrors ( user ) ) { return "redirect:/user/messages" ; } userService . save ( user ) ; model . addAttribute ( currentPage , user ) ; return "user/messages" ; }
protected boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.umc.cs.um msgStack.runtime.BlockFrame blockStackFrame = new mt.edu.umc.cs.umc.runtime.BlockFrame ( stack ) ; stack . peek () . pushFrames ( blockStackFrame . getChildNodes () ) ; boolean ok = checkBlockFrames ( node ) ; return ok ; }
public void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = ( viewWidth / 2 ) ; float deltaX = ( viewHeight / 2 ) / ( de.peterloos.bezi.plinesers.utils.ControlPointsHolder.EdgesNum ) ; float deltaX = ( ( float ) ( viewHeight / ( de.peterloos.bezi.plinesers.utils.ControlPointsHolder.EdgesNum ) ) ) ; de.peterloos.bezi.plinesers.utils.ControlPointsHolder . getDinesData ( viewNum , centerX ,Preferences , ar ) ; }
@ java.lang.Override public synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBarActivity ) != null ) { SoundActivity.seekBarActivity . setMax ( org.lpyas.soundgty.SoundPlayer.ActivityInstance . getDuration () ) ; SoundActivity.seekBarActivity . setProgress ( org.lpyas.soundgty.SoundPlayer.ActivityInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.timeText . getFormattedText () ) ; } }
private void postConvert ( short [] inPixels , byte [] outPixels , int begin , int end ) { int q = begin ; int p = ( ( short ) ( inPixels [ ( p ++ ) ] ) ) ; outPixels [ ( p ++ ) ] = ( ( outPixels [ ( f + 16 ) ] ) > 0 ) ? ( f + 16 ) : - 16 ; }
public int getStartIndex ( tspUtil.Node [] start ) { double [] MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( numOfCity [ j ] ) > ( MAX [ i ] ) ) { MAX [ j ] = start ; } } } return MAX ; }
private java.lang.Integer matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { if ( ( ( contractItem != null ) && ( matchesContract ( contractItem . getTypeID () , contractItem . getCorpID () , contractItem . getCorpID () , contractItem . getICorssuer () , ( getCorssuer () ? null : contractItem . getCorssuer () . getLocations () ) ) , null , contractItem . getIID () , null , contractItem . getLocations () , null , null , null , null , null ) ) ; else { return getLocations () ; } }
public boolean isManaTurn ( int turnNum ) { int current = 0 ; int past = 1 ; while ( current < turnNum ) { int temp = current + ( past ) ; temp += turnNum ; if ( temp == ( - 1 ) ) { return true ; } } return false ; }
public java.lang.String actionSignup ( java.lang.String role ) { bohee.ejb.model.Guest userGuest = null ; bohee.ejb.model.User user = new bohee.ejb.model.User () ; userGuest . setPhoneName ( userName ) ; userGuest . setPhone ( userEmail ) ; if ( userGuest.rvEmailAccess ) { userGuest . setEmail ( "room" ) ; return "list" ; } else { userGuest . setSignup ( true ) ; return "signup" ; } }
public static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . clearText () ; return com.sun.dv.internal.org.apache.dv.internal.util.BinAlgorithm . encodeHex ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such password: " + ( algorithm.class ) ) ) ; } }
public static < T extends java.io.Serializable > void print ( java.lang.String [] o ) { java.lang.Object delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; }
@ java.lang.Override public void onNext ( T i ) { boolean isUn = stop () ; if ( ( ++ i ) >= ( limit ) ) { stop . onNext ( i ) ; if ( ( ! isUn ) && ( ! completed ) ) { try { child . onCompleted () ; unsubscribe () ; } finally { child . onCompleted () ; } } } }
@ java.lang.Override public void ReInit ( java.io.Reader stream ) { Re_stream.Init . stream ( token , 1 , Re_source ) ; Re_stream.Init . token ( new org.bml.jsbml.parser.Token () ) ; jj_text = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_rt [ i ] = new org.bml.jsbml.parser.Formula () ; } }
@ java.lang.Override public void changeState ( com.example.alexander.top_skilii.internadio.models.Station station ) { if ( ( currentState ) != null ) { currentState = State.WAIT_IS ; } if ( ( mediaPlayer . getSource () ) == ( - 1 ) ) { mediaPlayer . pause () ; } else if ( ( mediaPlayer . getSource () ) == ( station_wait ) ) { mediaPlayer . pause () ; } else { play () ; } }
private rifServices.business.ConceptLayer.HealthCode transformHealthonomyIntoHealthonomy ( rifServices.business.TermTaxonomyServices termTaxonomyServices ) { rifServices.business.HealthCode healthCode = rifServices.business.HealthCodeLayer.HealthCode . newInstance () ; healthCode . setCode ( termHealthCode . getLabel () ) ; healthCode . setTerm ( termTerm . getParent () ) ; healthCode . setName ( termSpaceCode . getDescription () ) ; healthCode . setDescription ( null ) ; return healthCode ; }
public org.json.JSONObject startVM ( org.json.JSONObject vm ) { try { java.lang.String tid = vm . getString ( "data" ) ; if ( tid . isEmpty () ) { return _tv_create_dtv ; } else { return _tv_start_dtv ; } } catch ( java.lang.Exception e ) {} return null ; }
@ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager.NetworkEntity.SplayPacket packet , net.minecraft.network.TileEntityUpdateTilePacket packet ) { super . onDataPacket ( packet , getNbtCompound () ) ; net.minecraft.block.state.IBlockState pos = world . getBlockState ( world , 3 ) ; world . notifyBlock ( pos , state ) ; }
public static void loadConfig ( java.lang.String name ) { org.vitrivr.astine.config.core.Config config = new org.vitrivr.astine.config.core.JsonFile ( name , new java.io.File ( org.vitrivr.astine.config.core.Config . class ) ) ; if ( config == null ) { org.vitrivr.astine.config.coreConfig.LOGGER . info ( "Could not read file loaded!" ) ; } else { org.vitrivr.astine.config.coreConfig.LOGGER . warn ( "Could not read file loaded!" ) ; } }
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theView = new gomokuCreateAccount () ; theView . setVisible ( true ) ; gomokuCreateAccount = new ca.CreateAccount ( theController , theController , theController ) ; theView . setConnection ( ca ) ; } }
@ java.lang.Deprecated public void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTime" ) ; jsonNotification . put ( "alarmId" , id ) ; notifyAll ( jsonNotification ) ; }
@ org.osgi.service.annotations.Activate public void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataBundleContextHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonRuntimeProvider configProvider = new org.wso2.carbon.kernel.config.CarbonRuntimeProvider () ; org.wso2.carbon.kernel.internal.CarbonRuntimeProvider bundleContext = org.wso2.carbon.kernel.internal.CarbonRuntimeProvider . createCarbonRuntimeProvider ( org.wso2.carbon.kernel.config.CarbonRuntimeProvider . class . getName () , carbonProvider , null ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntimeProvider . class . getName () , carbonRuntimeProvider ) ; }
public < T > java.lang.Object getTable ( java.lang.Object classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClass ( fieldName , fieldName ) ; try { return classField . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.util.Locale.ENGLISH , java.lang.String . format ( "Error in class for class %s" , fieldName , e ) ) ; } }
public void enqueue ( com.onworks.stream.line.streams.notification.Notifier notifier , com.onworks.stream.line.streams.notification.Notification notification ) { com.onworks.stream.line.streams.notification.NotificationQueueNotificationHandler task = new com.onworks.stream.line.streams.notification.NotificationQueueNotificationHandler ( notification ) ; java.util.concurrent.Pair < ? extends org.apache.commons.lang3.tuple.Pair < ? , ? > > future = executorService . submit ( task ) ; notifier . put ( task . getId () , task ) ; }
public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { className = e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; } return className ; }
private static edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initWithInitBuilder ( edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilders , edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilder builder , edu.byu.nlp.rowc.dsourcing.data.types.DatasetData data , edu.byu.nlp.rowc.dsourcing.RandomAssignmentors ) { edu.byu.nlp.rowc.dsourcing.MultiAnnModel rnd = new edu.byu.nlp.rowc.dsourcing.MultiAnnModel (Initializer , data , data ) ; edu.byu.nlp.rowc.dsourcing.MultiAnnModel rnd = new edu.byu.nlp.rowc.dsourcing.RandomAssignmentors ( rnd , mInitialization , true ) ; return builder . cross ( rnd , mInitialization ) ; }
java.lang.Object _call ( railo.runtime.PageContext pc , int access , railo.runtime.type.CollectionKey key , railo.runtime.type.StructArgs named , super , java.lang.Object [] args , railo.runtime.exp.PageAccess member ) throws railo.runtime.component.MemberException { if ( key instanceof railo.runtime.type.AccessMember ) { return getMember ( ( ( railo.runtime.type.AccessMember ) ( key ) ) , key , access , super , member , key , named , false ) ; } return _DFUDFUDFU ( key , key , member ) ; }
public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { builder . append ( se.upy58r.http.Event.BASE_BASE ) ; builder . append ( java.lang.Math . abs ( se.upy58r.http.Event.BASE__5 ) ) ; } while ( ( builder . length () ) < ( se.upy58r.http.Event.BASE_BASE.length ) ) ; return builder . toString () ; }
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMore/{id}/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMore_ ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String id ) throws java.lang.Exception { io.horks.hop.project.common.hops.CacheHopsDTO info = projFacade . findMore ( id ) ; if ( info == null ) { return javax.ws.rs.core.Response . cssInfo ( Response.Status.OK ) ; } else if ( info . equals ( "type" ) ) { io.horks.hop.project.common.hops.CachehopsDTO proj = info . get ( id ) ; return new io.horks.hop.project.common.hops.CachehopsDTO ( proj , proj ) ; } else { return javax.ws.rs.core.Response . correctMoreInfo ( ( - 1 ) ) ; } }
public static java.lang.String hmacSHA256 ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256 = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; secret . init ( Base64.HMAC_SHA256 ) ; } catch ( java.lang.SecurityException e ) { android.util.Log . e ( keel.co.interobizz.encryption.api.BaseApiBase64.TAG , "Error" , e ) ; } return new java.lang.String ( secret . doFinal () ) ; }
public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; return aStringBuilder . toString () ; }
public static void showMessage ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , okListener ) . show () ; builder . show () ; }
public static void spannableEmoticonFromFile ( android.content.Context context , java.lang.String content_text , java.lang.StringBuilder spannable ) { android.text.SpannableStringBuilder contentSpannableStringBuilder = new android.text.SpannableStringBuilder ( content_text ) ; android.text.Spannable spannable = com.android.jijle.EmojiDisplay . getContextFromFilter ( spannable , spannable , spannable ) ; tv_content . setText ( spannable . getFontHeight () ) ; tv_content . setText ( spannable . getTextHeight () ) ; }
public static void response ( java.lang.String name , java.lang.String s ) { if ( com.marketminecraft.util.Log.market . log ( com.marketminecraft.util.Log.market . log ( " " ) ) ) com.marketminecraft.util.Log . log ( ( ( "Market - " + name ) + " " ) ) ; Minecraft----------------------------s . Debug ( com.marketminecraft.util.Log.market . log ( ( "----------------------------------- " + s ) ) ) ; }
public static java.lang.CharSequence applyTextToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typnable , int start , int end ) { android.text.Spannable spannable ; if ( spanSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( spanSpan ) ) ; } else { spannable = android.text.Spannable . valueOf ( ( ( android.text.Spannable ) ( spanSpan ) ) ) ; } return spannable ; }
public static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.sql.ManagersManager . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.sql.ManagersManager sqlManager = new com.gmail.trentech.pjc.core.sql.ManagersManager () ; sqlManager . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.sql.ManagersManager . get ( plugin . getId () ) ; } }
@ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.exceptions.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( ( "sender[message: " + ( data . getSender () ) ) + "; " ) + ( data . getReceivers () ) ) + "; " ) + "; " ) + ( data . getPerexativeName () ) ) + ";]" ) + "]" ; }
public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; spec2 = checkSpec ( spec1 ) ; checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.MyKnowledge > f1 = getOrdered ( spec1 ) ; java.util.Pair < edu.cmu.tetrad.data.MyKnowledge > f2 = new java.util.Pair < edu.cmu.tetrad.data.MyKnowledge > ( spec2 ) ; edu.cmu.tetrad.data.MyKnowledge f2 = getOrdered ( spec1 , f2 ) ; f1 . add ( f2 ) ; }
public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account auth = projectDao . createProject ( ( ( io.cattle.platform.core.constants.Constants.DEFAULT_PROJECT_NAME ) + ( account . getName () ) ) , null , io.cattle.platform.core.constants.Constants.DEFAULT_PROJECT_NAME ) ; io.cattle.platform.core.api.auth.Identity identity = new io.cattle.platform.core.api.auth.Identity ( projectDao . getExternalId () , account . getExternalId () , account . getExternalId () ) ; return identity ; }
private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start , java.time.LocalDateTime end ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) && ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) ) { timeline . createDayView ( start , end ) ; } else { timeline . setOnMouseClicked ( javafx.scene.input.MouseButton.SECONDARY ) ; } } } ) ; }
private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ( ! ( ctx . channel () . isAuto () ) ) && ( ! ( ctx . configReadChannel () ) ) ) || ( ! ( handshake ) ) ) { ctx . read () ; return false ; } return true ; }
public static void formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.PsiKotlinFormatterFactory psi , java.lang.String fileName , java.lang.String path ) { org.jetbrains.kotlin.psi.KotlinFormatterUtils ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createSpacingIndent ( source , org.jetbrains.kotlin.formatting.FileUtils . getNode ( source , org.jetbrains.kotlin.settings.formatter.IndentStrategy . getNode () , source ) , source ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createSpacingRange ( range , org.jetbrains.kotlin.formatting.settings.formatter.KotlinFormatterUtils . getNull () , source , org.jetbrains.kotlin.settings.formatter.KotlinFormatterUtils . getNode ( source ) , root ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createSpacingRange ( root , org.jetbrains.kotlin.formatting.settings.formatter.KotlinFormatterUtils . getNode ( source , org.jetbrains.kotlin.formatting.kotlin.settings.formatter.KotlinFormatterUtils . getNode () , source ) , root ) ; }
@ android.support.annotation.MainThread private void clearDataSourceTargetState ( final boolean clearLock ) { mDataSource . clearDataSourceTargetState ( clearTargetState () ) ; cancelReset () ; mDataSource . execute ( "clearImageExecutor()" ) ; mExecutor . execute ( "clearImageToExecutor()" ) ; mOpenPageToAsset = null ; }
@ java.lang.Override public java.util.List < java.lang.Integer > getSolutionProjects ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.util.Map < java.lang.String , java.lang.Object > projects = null ; java.util.Map < java.lang.String , java.lang.Object > projects = teamDao . queryResult ( ( "select id=" + id ) ) ; for ( java.util.Map < java.lang.String , java.lang.Object > projects : projects ) { projects . add ( jdbcTemplate . toString () ) ; } return projects ; }
private java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.integration.collection.models.ReceiptBillInfo > bill ) { final org.egov.integration.collection.services.BillingIntegrationService billingService = getBillingIntegrationService ( serviceCode ) ; if ( billingService == null ) { return false ; } try { billingService . updateReceiptDetails ( bill ) ; return true ; } catch ( final java.lang.Exception e ) { org.egov.infra.service.ApplicationApplication.LOGGER . error ( ( ( "Exception while updating with service [" + serviceCode ) + "]!" ) , e ) ; throw new java.lang.RuntimeException ( e ) ; } }
public source.Node < T > find ( T value , java.util.List < T > node ) { if ( node == null ) { return null ; } int value = node.value . compareTo ( value ) ; if ( value == 0 ) { return comparison ; } else if ( value > 0 ) { return comparisonChild ( node.right , value ) ; } else { return new node.Node < T > ( source.value , value ) ; } }
public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemove , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemove.length ) - 1 ] ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == 0 ) { result [ i ] = arrayToRemove [ i ] ; } else { result [ i ] = tmpNumber + 1 ; } } return result ; }
private void process ( long startTS , backtype.storm.tuple.Tuple t ) { counter ++ ; java.util.List < backtype.storm.tuple.Values > result = process . process ( f ) ; if ( result != null ) { for ( backtype.storm.tuple.Values t : result ) { out . emit ( t , ( - 1 ) ) ; } } if ( keepStats ) { ( ( backtype.storm.tuple.Values ) ( t ) ) . increaseStat ( 1 ) ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String export ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( export ) ) ) { return datatype ; } return null ; }
private static int getNumberOfWeeksOfYear ( int year ) { java.util.Calendar . set ( java.util.Calendar.YEAR , year ) ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DAY_OF_MONTH ) ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_DAY , ( - 1 ) ) ; int weekDay = ( ( java.util.Calendar.WEEK_OF_DAY ) / 31 ) + 1 ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.WEEK_OF_DAY , weekDay ) ; return weekDay / 10 ; }
protected static void addUseMethod ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type toType , java.lang.reflect.Method mParameter ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( mParameter ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , fromType , toType , mParameter ) ; }
private void doVibrate ( int minutes , final int _vibrationRunnable ) { java.lang.Runnable v = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationRunnable , alarmHandler , 1000 ) ; } } ; v . postDelayed ( java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) , v ) ; }
public static java.lang.String getJobCoordination ( org.apache.samza.config.Config configConfig ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( configConfig ) ; java.lang.String jobName = jobConfig . getJobAppId () . get ( org.apache.samza.config.ApplicationConfig.DEFAULT_JOB_NAME ) . getName () ; return jobConfig . getJobk () . isDefinedJob () ? org.apache.samza.zk.ZKJobIdFactory . getJobk () . getCoordinatorJobId () : org.apache.samza.zk.ZKJobIdFactory . getJobk () . getCoordinatorJobId () ; }
public lampkicking.model.Output playData ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover newHoover = new lampkick.service.Hoover () ; lampkick.model.DataOutput outputData = lampkickOutput . startGame ( inputData ) ; lampkicking.model.Game game = new lampkick.model.Game ( lampkick ) ; game . setOutput ( outputData . toJson ( inputData ) ) ; game . setInput ( outputData . toJson ( game ) ) ; return gameRepository . save ( game ) ; }
public void onClick ( android.view.View v ) { if ( ( itemLost.isDatabase ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( itemLost.isDatabase . getReferenceAddress ( "/" ) ) ) + "lost_items/" ) ) . setValue ( false ) ; mDatabase . getReference ( "st_items/" ) . removeValue () ; itemLost.isDatabase = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , " i num니다!!" , Toast.LENGTH_LONG ) . show () ; } }
public void adaptPortBindingToParallelRun ( org.arquillian.cube.client.impl.config.CubeContainerBinding.Container cube ) { final java.util.Collection < org.arquillian.docker.client.impl.config.CubeContainerBinding.PortBindings > portBindings = cube . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.docker.client.impl.config.PortBinding.PortBinding randomPort : portBindings ) { final org.arquillian.docker.client.impl.config.PrivateContainerBinding.PortBinding randomPort = randomPort . generateRandom () ; if ( randomPort != null ) { setBoundable ( randomPort ) ; } } } }
private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , byte [] dataMap , java.util.Map < java.lang.String , java.lang.String > header , java.util.Map < java.lang.String , java.lang.String > queryParamMap , java.util.Map < io.minio.Param , java.lang.String > dataMap ) throws io.minio.InvalidPullParserException , io.minio.InvalidBucketException { return execute ( bucketName , objectName , queryParamMap , bucketName ) ; }
public int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connection.Orientation orientation ) { switch ( position ) { case Left : return getRow ( ( position - 1 ) ) ; case Right : return ( ( int ) ( ( ( cellSize ) * ( ( cellSize ) - 0.5 ) ) * ( ( cellSize ) - 1 ) ) ) ; case Top : return ( getRow ( ( position - 1 ) ) ) * ( ( cellSize ) * ( ( cellSize ) - 1 ) ) ; default: return 0 ; } }
@ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tspomein.spush.data.model.BaseResponse response , java.lang.String message , @ android.support.annotation.Nullable com.tspomein.spush.biz.auth.RegisterFragment.ACTION_CHECKED_UID ) { if ( ( response == null ) || ( ( response . getResult () ) == ( com.tspomein.spush.biz.auth.RegisterFragment.ACTION_UID ) ) ) { mTemporaryAdapter . showNotificationBar () ; } else if ( ( action == ( com.tspomein.spush.biz.auth.RegisterFragment.ACTION_REGISTER_EXIST ) ) && ( ( response . getResult () ) == ( com.tspomein.spush.biz.auth.RegisterFragment.ACTION_UID ) ) ) { mTemporaryAdapter . pushNotificationBar () ; } }
public void myTick ( long mils ) { if ( ( mRemainingRemaining ) != 0 ) { milsRemaining = ( ( int ) ( ( milsRemaining ) / 60000 ) ) ; } int secs = ( ( int ) ( ( milsRemaining ) / 60 ) ) ; java.lang.String time = java.lang.Integer . toString ( ( ( ( java.lang.Integer . format ( ( "%02d" + secs ) ) ) + ":" ) + ( java.lang.Integer . format ( time ) ) ) ) ; timeRemaining . setText ( time ) ; timeRemaining . setText ( time ) ; }
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunningTimer () ; gui = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( e . isRunning () ) { gui . setRepeats ( simController . tickRun () ) ; } } } ) ; gui . startTimer () ; }
private org.eclipse.dawnsci.analysis.api.metadata.MetadataMetadata getMetaiff ( uk.ac.amdi.scisoft.analysis.api.processing.ImportMetadata mod , org.eclipse.dawnsci.analysis.api.dataset.DatasetMetadata parent ) { org.eclipse.dawnsci.analysis.api.meta.MetadataMetadata l = modReader . getFileMetadata ( parent , metadata ) ; if ( l == null ) { if ( ( this . mdNexus ) == null ) { throw new org.eclipse.dawnsci.analysis.api.meta.NexusException ( "Operation does not contain metadata" ) ; } else { l = modReader . getDexus ( l ) ; } } if ( l == null ) { l = new org.eclipse.dawnsci.analysis.api.meta.MetadataMetadata ( org.eclipse.dawnsci.analysis.api.meta.Metadata.ID , org.eclipse.dawnsci.analysis.api.meta.Metadata.Nexus ) ; } return l ; }
private java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > addClassPathToModule ( org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToLocations . get ( module ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToLocations . add ( l ) ; } return l ; }
public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.Status.SUCCESS ) ) { if ( ( tts ) == ( java.util.Locale.US ) ) { tts . setLanguage ( java.util.Locale.AVAILABLE ) ; } else if ( initStatus == ( android.speech.tts.TextToSpeech.Status.US ) ) { tts . setLanguage ( java.util.Locale.ERROR ) ; } } }
@ org.testng.annotations.Test ( dataProvider = "noHeadersDomainor" , expectedDataProvider.Exceptions = java.lang.IllegalStateException . class ) public void testGetZone ( final java.lang.String requestBaseHeader , final java.lang.String requestBaseHeader , final java.util.List < java.lang.String > serviceBaseHeaders , final java.util.List < java.lang.String > header , final java.lang.String serviceBaseValue ) { final java.util.List < java.lang.String > reqValue = new java.util.ArrayList < java.lang.String > () ; reqValue . addHeader ( "predixName" , org.springframework.web.MockHttpServletRequest . header ( header , serviceBaseHeaders ) ) ; final java.lang.String serviceRequest = org.mockspringframework.web.MockHttpServletRequest . getHttpServletRequest () . header ( serviceBaseHeader , requestBaseHeader , header ) ; serviceMock . setServerHeaders ( reqName ) ; }
public javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageImage ) { java.awt.ImageIcon myImageIcon = null ; try { myImageIcon = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings.EMONS_IMAGE_FOLDER_SCALE ) + ( PEMON_ICON_FOLDER ) ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImageIcon . getScaledSide () , viewSide ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }
public void setOutcomingCandidate ( org.vaadin.portal.layout.client.layout.ChromeWidget pc ) { if ( ( actionWidget ) != null ) { com.vaadin.client.WidgetConnector portlet = com.vaadin.client.WidgetConnectorUtil . findWidgetForComponent ( this .Portlet . getContent () ) ; if ( portlet == null ) { if ( this . incomingCandidateComponents . contains ( pc ) ) { this . outCandidateComponents = pc ; } else { this . outCandidateComponents = null ; } } } }
public com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getChapalth () ; } if ( ( mode ) == 2 ) { return healthLogic . getHeapalth () ; } return null ; }
public void selectItem ( int position ) { mDrawerLayout . closeDrawer ( ( position - 1 ) ) ; com.jvanier.android.commands.send.CommandList handler = items . get ( position ) ; if ( handler != null ) { handler . getActivity () . perList ( handler ) ; } }
@ java.lang.Override public void onValueChange ( final com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { this . setDirty ( true ) ; final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( group , box , true ) ; }
@ com.fasterxml.jackson.annotation.Order ( value = { "_name" , "values" } ) public static java.lang.String printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Meta dbgData = new org.paces.Stata.Meta ( args ) ; java.lang.Long obid = org.paces.Stata . getLocalSafe ( "sfi" ) ; org.paces.Stata . toJSON ( dbgData ) ; org.paces.Stata . toJSON ( obid ) ; return null ; }
public void signUp ( java.lang.String key , java.lang.String pass , java.lang.String email ) { try ( java.sql.PreparedStatement connection = connection . prepareStatement ( "INSERT INTO users (INSERT INTO email, pass) VALUES (?, ?, ?, ?, ?, ?, ?, ?)" ) ) { java.lang.System.out . setString ( 1 , pass ) ; pass . setString ( 2 , email ) ; pass . setString ( 3 , pass ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( i < ( ( buffer.length ) - 1 ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; }
private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; i ++ ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; } return java.lang.Long . parseLong ( rtn ) ; }
public static java.lang.String readUntilEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMIDDocumentSet . readUntilEmptyLine ( r ) ) ) + "\n" ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMashMdf = false ; if ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "gdf" ) ) ) || ( currentInput . equals ( "cv" ) ) ) { hasMashMdf = true ; } return hasMashMdf ; }
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( posterPath ) ; dest . writeString ( plotPath ) ; dest . writeString ( plotDate ) ; dest . writeString ( id ) ; dest . writeLong ( id ) ; dest . writeString ( userRating ) ; dest . writeString ( plotDouble ) ; }
public static com.sk89q.worldedit.Cuboid getSchematicClipboard ( java.lang.String dirName ) { java.io.File dir = new java.io.File ( dirName ) ; com.sk89q.worldedit.schematic.SchematicFormat.world = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dirName ) ; com.sk89q.worldedit.Cubatic.data = null ; try { dir = com.sk89q.worldedit.schematic.CubaticFormat . load ( dir ) ; } catch ( java.io.IOException | com.sk89q.worldedit.datachematicDataException e1 ) { e1 . printStackTrace () ; } com.sk89q.worldedit.Clipboard.data = null ; }
public synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceId ) ; while ( ( ( currentWriteBufferSize ) >= ( pendingHeapSize ) ) || ( ( maxOperationsWithRcs . size () ) >= ( pendingFlightSize ) ) ) { com.google.cloud.bigtable.hcsator.BigtableBufferedMutator . wait ( java.lang.System . currentTimeMillis () ) ; operationId += heapId ; } lastWriteMutSize += heapId ; return operationId ; }
boolean insertUserChild ( java.lang.String userId , long childId , int childEditOwner , java.lang.String canEditTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childContent = new android.content.ContentValues () ; childContent . put ( baps.UserTable.UC_Table_ID , userId ) ; childContent . put ( baps.UserTable.UC_Table_ID , baps.UserTable2 ) ; childContent . put ( baps.UserTable.UC_TABLE_CHILDS , baps.UserTable2 ) ; return db . insert ( baps.UserTable.UC_TABLE_IS_TABLE , null , childContent ) ; }
@ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKIMEN.core.KIMEMessage response = mmKIMEN.util.Scanner . getFile () ; java.util.Scanner scanner = new java.util.Scanner ( request , "A" ) ; java.lang.String responseDelimiter = ( response . hasNext () ) ? scanner . next () : "" ; exchange . write ( responseDelimiter ) ; java.io.OutputStream os = exchange . getResponseBody () ; os . flush () ; os . close () ; }
@ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrRandomAccessations globalOrdinal , org.elasticsearch.aggregations.support.SourceBytesValues valueValues ) throws java.io.IOException { org.apache.lucene.util.BitSet ord = new org.apache.lucene.util.BitSet ( globalOrdinal . getValue () ) ; org.apache.lucene.util.EnumTerms globalTerms = globalOrdinal . get () ; org.apache.lucene.index.GlobalTerms termEnum = globalTerms . next () ; org.apache.lucene.index.GlobalTerms globalTerms = new org.apache.lucene.index.GlobalTerms () ; globalTerms . accepted () ; return globalTerms ; }
@ java.lang.Override public org.apache.citolytics.clickstream.types.ClickStreamResult ( org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out ) throws java.lang.Exception { if ( ( out . getRecommendations () . size () ) > 0 ) { out . getRecommendations () . get ( 0 ) . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 1 ) , 1 ) ) ; } return out . getRecommendations () . get ( 0 ) ; }
public static java.lang.String emailsMinusYou ( java.lang.String [] people ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList < java.lang.String > () ; for ( int i = 0 ; i < ( people.length ) ; i ++ ) { if ( ( person . getEmailid () ) != ( person.id ) ) { names . add ( new android.text.TextUtils.Person ( person.text , ", " ) ) ; } } return names ; }
@ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > configClass ) { final org.ehcache.Ehcache < K , V >accache = org.ehcache.Ehcache . createNewEhcache ( alias , configClass ) ; return relecache ; }
public void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be been characters between 5 and 50." ) ; return; } config.playerConfig . save ( p ) ; if ( p . getName () . has ( "player.password" ) ) p . sendMessage ( "An set to save your password." ) ; else p . sendMessage ( "An set occurred while trying to save your password." ) ; }
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( ( requestCode != ( android.app.Activity.RESULT_OK ) ) || ( requestCode == ( com.creshapps.keep48sciitresh.ListItemFragment.REQUEST_OPTION ) ) ) { return; } if ( requestCode == ( com.freshapps.keep48sciitresh.OptionsItemFragment.REQUEST_OPTION ) ) { com.freshapps.keep48sciitresh.Sort.UIOptionsDialog option = ( ( com.freshapps.keep48sciitresh.Sort.UIOptionsDialog ) ( data . getSerializableExtra ( Sort.EXTRA_OPTION_SORT_OPTION ) ) ) ; option . update ( Sort.OPTION ) ; } }
public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( openSessionsCount ) > 0 ) && ( ( openSessions . isEmpty () ) && ( ( doneTask ) != null ) ) ) { doneTask . notifyAll () ; } if ( ( doneTask ) != null ) { doneTask = null ; } } }
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertTypItems ( org.json.simple.JSONObject itemsObject , java.lang.String schemaItemsID , java.lang.String schemaType ) { if ( ( schemaItemsID ) != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram_tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaItemsID ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram_tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , "" ) ; } }
@ gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope.name" ) . is ( Constant7L.SCOPEHSTANDARDL ) . and ( "hl7L" ) . is ( "name" ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = ( ( org.springframework.data.mongodb.core.query.Query ) ( query . query ( "query.name" , name ) ) ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype qry = dt . mongo ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return qry ; }
public void updateVersion ( java.lang.Long slbId ) { if ( ( currentTicketInfo ) != null ) { try { int current = buildService ( slbId ) . getCurrentTicketInfo ( slbId ) ; updateTicket ( currentTicketInfo , ( ( current + 1 ) + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Fail error!" , e ) ; } } }
public org.rapla.entities.domain.AppointmentBinding addAppointmentBinding ( org.rapla.entities.domain.AppointmentRef appRef , org.rapla.entities.domain.Allocatable alloc ) { org.rapla.entities.domain.AppointmentInfo < org.rapla.entities.domain.Allocatable > allocation = ( ( alloc != null ) && ( ( alloc . getReferenceId () ) > 0 ) ) ? alloc . getReferenceId () : null ; java.util.Set < org.rapla.entities.domain.Appointment > set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > () ; set . add ( appointment ) ; appRef . put ( appointment , set ) ; return set ; }
public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.Priority p : model.Priority . values () ) { if ( p . toString () . equals ( priority ) ) { return true ; } } return false ; }
private void setStatus ( com.onaio.steps.model.House household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( household == null ) || ( household . getSelectedId () . equals ( "" ) ) ) return; if ( ( household . getSelectedId () . equals ( member . getSelectedId () ) ) || ( household . getSelectedId () . equals ( member . getId () ) ) ) row . add ( java.lang.String . valueOf ( row . toString () ) ) ; else row . add ( com.onaio.steps.helper.Constants.NOT_URVEYS ) ; }
private void checkLex ( java.lang.String input ) throws edu.umn.cs.meltpper.runtime.CopperParserException , java.io.IOException { java.util.List < wyn.vertools.parsing.Token > tokens = new java.util.ArrayList < wyn.vertools.parsing.Token > () ; parseLexer ( input , tokens ) ; org.junit.Assert . assertEquals ( "testKind" , tokens ) ; }
private java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String topicWithID = null ; final java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { if ( ( topicWithelement . lastIndexOf ( org.dostita.writer.element.writer.SLASHd ) ) != ( - 1 ) ) { topicWithelement = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( Filewriter.SLASHd ) ) + 1 ) ) ; } else { topicWithelement = element ; } } return topicWithelement ; }
public static int getBlockOrMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side , net.minecraft.block.Block x , int z ) { if ( world instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( world ) ) . getBlockMetadata ( world , x , y , z , side , z ) ; } return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( world ) ) . getFacadeMetadata ( world , x , y , z , side , z ) ; }
public void setHandLinearOnlyControl ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean []64Position = new boolean [] { true , true , true } ; boolean [] getUserOrientation = new boolean [] { true , false , false , true } ; setHandled ( robotSide , new boolean [] { true , false } ) ; }
public static void deleteTimer ( final java.lang.String name ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }
public static pedca.context.Context createAndSaveBott ( java.lang.String pathContext , java.lang.String sizeX , double sizeY , double sizeWidth , double sizeWidth , double sizeHeight , double locationPosY ) { pedca.context.ContextGenerator . getBott ( sizeX , sizeY , pathPosX , sizeHeight , context.ContextGenerator . saveConfiguration () ) ; try { return pedca.context.ContextAnalyzer . calculateConfiguration ( pathContext , sizeY , context.ContextAnalyzer . calculateConfiguration () ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( ( item . getPlayback () ) != ( getPlaylist () ) ) { org.awkah.tom.lib.collection.PlaylistStation station = ( ( org.awkah.tom.lib.collection.PlaylistStation ) ( getPlayback () . getControls () ) ) ; org.awkah.tom.lib.collection.PlaylistController . setPlaylist ( getPlayback () ) ; playlist . play () ; } } }
@ java.lang.Override public double curve ( double a ) { if ( a <= 0.5 ) { return 1 ; } if ( a > 0.5 ) { return - 1 ; } return ( out * ( ( 1 - ( a * 0.5 ) ) * ( ( 1 - ( a * 0.5 ) ) + ( ( 1 - ( a * 0.5 ) ) ) ) ) ) + ( ( 2 * ( ( 1 - ( a ) ) + 0.5 ) ) * ( ( 1 - ( a * 0.5 ) ) ) ) ; }
private com.amazonaws.services.kinesis.scaling.ScalingStream scaleReport ( java.lang.String streamName , int target.ShardCount , int originalShards , double target.ShardPct , int operationsCompleted , java.lang.Integer startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { if ( ( operations . size () ) > 0 ) { com.amazonaws.services.kinesis.scaling.ScalingStream.LOG . info ( java.lang.String . format ( "Completed from %s {} %s Shards %s" , streamName , target.ShardCount , originalShards , maxShards , scale ) ) ; return getOpenStack ( streamName , target.ShardCount , target.ShardPct , maxShards , maxShards ) ; } else return null ; }
public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmi ) { if ( ( hmi . equals ( HMILevel.HMI_FULL ) ) || ( hmi . equals ( HMILevel.HMI_LIMITED ) ) ) { hmi . setUserSelected ( true ) ; } else if ( ( hmi . equals ( HMILevel.HMI_NONE ) ) || ( hmi . equals ( HMILevel.HMI_NONE ) ) ) { hmi . setUserSelected ( false ) ; } }
protected java.lang.reflect.Method getMethodOfParams ( int amountOfParams ) throws java.lang.ClassNotFoundException { java.lang.String fullName = be.nabu.libsuator.evaluator.impl.Operation . getPartOfMethod ( get ( 0 ) . getContent () ) . getParts () ; methods . put ( amountOfParams , findMethod ( methods , amountOfParams ) ) ; return ( ( java.lang.reflect.Method ) ( fullName ) ) . get ( amountOfParams ) . put ( amountOfParams , amountOfParams ) ; }
private void removeType ( java.lang.String name ) { org.yakindu.base.types.TypeRegistry typeRegistry = name . get ( name ) ; if ( typeRegistry != null ) { if ( ( typeRegistry . getContents () ) != null ) { resourceRegistry . getContents () . remove ( type ) ; } typeRegistry . remove ( name ) ; } }
public voidFromStand ( Player x ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1:" ) ; java.lang.System.out . println ( "2:" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _player.TotalCard += 1 ; } else { _player.TotalCard += 21 ; if ( ( _player.TotalStand ) > 21 ) { return; } else { return; } } }
@ java.lang.Override public void insert ( E obj , int location ) { if ( ( ( currentSize ) - 1 ) < ( currentResizeSize ) ) { ( currentSize ) ++ ; dynamicResize ( true , location , ( ( currentElements ) - 1 ) ) ; } else { throw new java.lang.RuntimeException ( "Index is not within list" ) ; } }
public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ) + ( Packet.NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
@ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.thing.Thing thing ) { org.eclipse.smarthome.core.thing.ThingHandler < org.eclipse.smarthome.binding.core.thing.Thing > serviceRegistration = thingHandlers . getUID () . toString () ; if ( serviceRegistration != null ) { serviceRegistration . remove ( thing ) ; } org.eclipse.smarthome.binding.core.thing.ThingHandler thingHandler = ( ( org.eclipse.smarthome.binding.core.thing.ThingHandler ) ( bundleContext . getService ( thing ) ) ) ; if ( thingHandler instanceof org.eclipse.smarthome.binding.core.thing.ThingBaseHandler ) { ( ( org.eclipse.smarthome.binding.core.thing.ThingHandler ) ( thingHandler ) ) . unregister () ; } bundleContext . dispose () ; }
private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JLabel jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status ) { javax.swing.JTextField.ParallelGroup v = layout . createParallelGroup ( javax.swing.GroupLayout.LEADING ) ; javax.swing.GroupInterface . vGroup ( jGroup1 , jLabel2 , status ) ; javax.swing.GroupInterface . vGroup ( vGroup1 , jLabel2 , layout ) ; }
public void setupEventListeners () { setOnClickedListenerSearchListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement in your own-app-Implement in your search" , Toast.LENGTH_LONG ) . show () ; show () ; } } ) ; com.karmacons.movie.MainItem.ItemListener . setOnClickedListener ( new com.karmacons.movie.MainItem.SelectedListener () { @ java.lang.Override public void onClick ( android.view.View view ) { loadListeners () ; } } ) ; }
public java.lang.String percentEncodeRfc3939 ( java.lang.String s ) { java.lang.String out = null ; try { out = utils.SignedRequestsHelper.UTF8_CHARSET . replace ( s , utils.SignedRequestsHelper.UTF8_CHARSET , "*" ) . replace ( " " , "*" ) . replace ( "%7" , "%E" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out . length () ; }
public void resize ( int capacity ) { assert ( capacity ) >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , i , temp ) ; } } }
public static int getReceiverID ( byte [] datagramContents ) { int startIVER = Packet.RECEIVER_LENGTH ; int endIVER = Packet.RECEIVER_LENGTH ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; java.util.Arrays . copyOfRange ( datagramContents , startIVER , endIVER ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
public void setIncomingCandidate ( org.vaadin.portal.layout.client.layout.ChromeWidgetlet ) { assert ( portletWidget ) != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.WidgetUtil . findComponentForCandidate ( portletWidget . getContent () ) ; if ( pc ==Portlet ) { if ( ! ( this . outCandidateComponents . contains ( pc ) ) ) { this . outCandidateComponents = pc ; } else { this . outCandidateComponents = null ; } } }
public static void processCourseClasses ( org.jdom2.Element courseClass ) throws java.lang.Exception { java.util.List < org.jdom2.Element > classes = courseClass . createNewCourse ( courseClass ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.dom2.TransnewCourse = edu.stanford.dom2.TransnewCourse . createNewCourse ( _class ) ; _section . getChildren ( sections ) . process ( section ) ; } }
public java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxistrationException { java.lang.String seqNumber = sequenceService . getSequence ( Iistration.SALES_ORDER , Iistration.SALES ) ; if ( seqNumber == null ) { throw new com.axelor.exception.AxistrationException ( java.lang.String . format ( com.axelor.i18n.I18n . getI18n () , com.axelor.i18n . getI18n () ) ) ; } return seqNumber ; }
public boolean setPlayerToHaveLargest ( int playerArmy ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentPlayerArmyPoints ) != ( - 1 ) ) { adjustLargestPlayers ( ( - 1 ) , ( - 1 ) ) ; } LargestArmyValue ( playerArmy ) ; return true ; }
java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String msg , newGroup ) { if ( change ( world , oldGroup , newGroup ) ) { msg = ( ( ( ( ( "Successfully " + player ) + " " ) + newGroup ) + " " ) + world ) + " " ; } else { msg = " + newGroup ; } return world ; }
@ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( name . length () ) == 0 ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
public entity.Usuario getUsrByName ( java.lang.String id ) { entity.Usuario objeto = ( ( org.hibernate.Query ) (Log . begin () ) ) ; org.hibernate.BDQuery query = UionUsuario.from . createQuery ( ( " = " + cod ) ) ; objeto . uniqueResult () ; query . commit () ; return ( ( entity.Usuario ) ( objeto . getTransaction () ) ) . commit () ; }
public java.util.ArrayList < java.lang.Object > checkObjectForLayer ( com.badlogic.gdx.maps.MapLayer < java.lang.String , java.lang.Object > layer ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getObjects () ) { o . getProperties () . add ( object ) ; } } return o ; }
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/action/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String args , @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCineManager () . submitCmdlet ( args ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.RestApiUtils.logger . error ( "Exception while adding cmdlet " , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getStackTrace () , e ) . build () ; } }
public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; }
public void collapseViews ( android.view.View fab , final android.view.View cardView , final boolean collapsingAnimator ) { final android.animation.Animator collapsingAnimator = ( ( android.animation.Animator ) ( com.app.material.bookmark.materialmanager.SearchManager . getInstance ( com.app.material.bookmark.materialmanager.SearchManager.context ) ) ) ; fablapsingAnimator . build ( com.app.material.bookmark.materialmanager.SearchManager . getInstance ( cardView ) , false ) ; fabAnimator . setVisibility ( ( true ? android.view.GONE : android.view.View.VISIBLE ) ) ; }
@ java.lang.Override public void onActivityStarted ( android.content.Context context ) { ( appCount ) ++ ; com.ufo.socketdemo.android.loginio.UserInfoRepository userInfoRepository = com.ufo.socketdemo.android.loginio.UserInfoRepository . getInstance () . getApplicationContext () ; com.ufo.socketdemo.android.loginio.UserInfoService bean = userInfoRepository . get ( getApplicationContext () ) ; if ( bean != null ) { bean . startRecentSocket () ; } }
@ org.springframework.web.bind.annotation.PostMapping ( value = "/userId/{byName}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public org.springframework.http.HttpStatus getStoreAndStore ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer oldStore ) { com.softserve.if072.common.model.UserStore storeStore ; if ( storeStore != null ) { storeStore . getStoreByName ( name ) ; } else { com.softserve.if072.common.model.UserStore oldStore = storeStore . getStoreByName ( userId ) ; if ( oldStore != null ) { return java.lang.String . format ( oldStore . getName () , storeStore . getStore () . getAddress () , oldStore . getName () ) ; } else return com.softserve.if072.common.service.common.StoreController.LOGGER . format ( "service name was retrieved with name %s" , oldStore . getName () ) ; } }
@ java.lang.Override public app2dapi.geometry.G2D.Point2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double trans = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . v ( jp ) ; return new app2dpcimpl.geometry.P2DImpl ( trans , jp ) ; }
private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start , int length ) { java.lang.String s = set [ 0 ] ; for ( java.lang.String part : set ) { if ( part > start ) s = i + " " ; } return s + medium ; }
public void handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.rpc.json4j.ReadContext ctx = ( ( com.googlecode.rpc.json4j.ReadContext ) ( ips . getRead ( jsonContext , mapper ) ) ) ; try { com.fasterxmlcode.rpc.json4j.JsonNode jsonNode = null ; try { jsonNode = mapper . next () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { error ( "Error" , "null error" , e ) ; return; } } writeAndFlush ( ops ) ; }
public void link ( internetzart.Artifact newArtifact ) { java.util.ArrayList if ( ( ( most ) == null ) || ( ( most ) == null ) ) { most = new java.util.ArrayList <> () ; } while ( newSimilar . hasNext () ) { while ( most . iterator () ) { new internetzart.Artifact ( most . buildLink ( newArtifact ) ) ; most . iterator () . next () ; } } }
@ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving.Living entity , org.bukkit.event.entity.EntityTarget reason , boolean fireEvent ) { if ( ( ( this . targetReason ) instanceof net.minecraft.server.v1_9_R1.EntityLiving.GoalTarget ) && ( this . targetReason . isAlive () ) ) { super . setGoalTarget ( fromGoal , reason , false ) ; } else { super . setGoalTarget ( fromGoal , targetReason ) ; } }
private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { rs = stmt . createStatement () ; jdbcFixture = rs . executeQuery ( ( ( "select r_user_name from r_group_name '" + ( dm.name ) ) + "'" ) ) ; rs . close () ; return rs . getBoolean ( 1 ) ; } finally { stmt . close () ; } }
public static long getSerial results ( org.babyfish.persistence.tool.path.TypedQueryQueryProcessor.MetaClass metaClass , java.lang.String nestedClassName ) throws java.io.IOException { for ( org.babyfish.persistence.tool.path.TypedQueryProcessor.MetaClassName nested : metaClass . hashCode () ) { for ( org.babyfish.persistence.tool.path.TypedQueryProcessor.MetaPath property : nestedClassName . values () ) { serial . append ( ( ( serial . getProperties () . hashCode () ) + 1.0 ) ) ; } return serial . getName () ; } }
public static boolean storeCredentials ( java.lang.String appName , java.lang.String appName , java.lang.String hashedPassword ) { try { com.zjes.domain.AppCredentials appCredentials = new com.zjes.domain.AppCredentialsBuilder () . username ( appName ) . hashedPassword ( password ) . enabled () . build () ; final int result = appCredentialsDao . save ( appCredentials ) ; java.lang.System.out . println ( ( "Duplicate successful: " + ( result . getMessage () ) ) ) ; return true ; } catch ( org.springframework.dao.StoringException e ) { java.lang.System.out . println ( ( "Storing credentials not store successful: " + ( e . getMessage () ) ) ) ; return false ; } }
public void cancelNotification ( int notificationId ) { if ( ( android.content.Context context ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } }
public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message message = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.Message , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; }
@ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.RubyString jrubyString = getContext () . toTruffle ( string ) ; final org.jruby.truffle.nodes.core.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.RubyString ) ( jrubyString . encode ( getContext () . getRuntimeion () . getCurrentContext () , encoding ) ) ) ; final org.jruby.truffle.nodes.core.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.RubyString ) ( jrubyTranscoded . encode ( getContext () . getRuntimeion () . toTruffle ( jrubyString ) ) ) ) ; return jrubyTranscoded ; }
public com.xrtb.common.Campaign getCampaign ( java.lang.String id ) { java.util.concurrent.ConcurrentMap map = java.util.concurrent.ConcurrentMap . getInstance () . getMap ( "users-" ) ; java.util.Set < java.lang.String > set = map . keySet () ; for ( java.lang.String c : set ) { if ( c . get ( id ) . equals ( c ) ) return it ; } return null ; }
@ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qi name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.seedes.math.dialogs.SimpleDLesDialog ( game , com.seedes.math.dialogs.Eacces . getMode () ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( new com.seedes.math.dialogs.EaccesDialog ( game ) ) ; } else { buttonScene . setScreen ( new com.seedes.math.dialogs.EaccesDialog ( game , com.seedes.math.dialogs.Eacces . getMode () ) ) ; } }
public static IUser.User authorizeType ( java.lang.String username ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = null ; try { password = us.libato.UIControl.scanner . login () ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nNullPointerException Please try again.\n" ) ; return null ; } catch ( java.lang.NullPointerException err ) { return null ; } }
public boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( ( java.lang.System . parseBoolean ( java.lang.System . getProperty ( "skipCheckVersion" ) ) ) || ( ( org.spresso.framework.jspresso.util.BuildVersion.UNKNOWN ) == null ) ) || ( BuildVersion.UNKNOWN . equals ( org.spresso.framework.jspresso.util.BuildVersion.UNKNOWN ) ) ) || ( BuildVersion.256 . equals ( org.spresso.framework.jspresso.util.BuildVersion.256 . getJce () ) ) ) || ( clientVersion . getJoress () . equals ( org.spresso.framework.jspresso.util.BuildVersion.256 . getJce () ) ) ; }
public static synchronized void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } }
@ java.lang.Override protected void populateViewHolder ( id.sch.smkt.komelomg_project.irplipo2.bedBjoerFragment.ViewHolder ber , int position ) { if ( ( data . getDesc () . length ) > 0 ) { ber . setName ( data . getDesc () . substring ( 0 ) ) ; ber . setName ( data . getDesc () . substring ( 1 ) ) ; ber . setViewHolder ( ber ) ; data . setText ( ber . getTitle () ) ; } }
@ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; }
public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( ( dateTime == null ) || ( ( dateTime . getZoneTime () ) != null ) ) { return "" ; } org.joda.time.DateTime timeZone = dateTime . getZoneTime () ; long timeZone = dateTime . getMillisToLocal ( false , ( timeZone + ( org.joda.time.DateTime.UTC ) ) ) ; return new org.joda.time.DateTime ( ( ( dateTime . offset () ) + locale ) ) . convert ( dateTime ) ; }
@ java.lang.Override public boolean createStudent ( java.lang.String userID , java.lang.String pass , java.lang.String name ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.java.teacher.card.model.Student.Student ) ) { flash.java.teacher.card.model.Student s = new flash.java.teacher.card.model.Student ( userID , pass , name ) ; this . db . put ( s ) ; return true ; } } return false ; }
public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val = card . indexOf ( spades ) ; switch ( s ) { case 0 : val = indexOf ( card , this ) ; break; case 1 : val = heart ( card , this ) ; break; case 2 : val = indexOf ( card , this ) ; break; case 3 : val = indexOf ( card , this ) ; break; default: break; } return val ; }
public void updateReel ( double x , double y , double orientationReelle , boolean enbarcheAvant , double enbarcheReelle , double orientationGeometrique ) { if ( enbarcheAvant ) { orientationReelle = orientationGeometrique ; enbarcheReelle = enbarcheGeometrique ; } else { orientationReelle = orientationGeometrique + ( java.lang.Math.PI ) ; enbarcheReelle = - orientationGeometrique ; enbarcheReelle = enbarcheGeometrique ; } enbarcheReelle = - orientationGeometrique ; this . setX ( enbarcheReelle ) ; this . setY ( x ) ; this . orientationReelle = enbarcheReelle ; this . enbarcheReelle = enbarcheGeomelle ; this . setY ( orientationReelle ) ; }
private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 2 ; break; case 2 : cash = 3 ; break; case 3 : cash = 4 ; break; case 4 : cash = 50 ; break; case 5 : cash = 50 ; break; } return cash ; }
public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong () ) == 0 ) { return id ; } } return - 1 ; }
@ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) @ ninja.PathParam ( value = ninja.params ) @ ninja.PathParam ( value = "params" ) @ ninja.PathParam ( value = { "work" } ) public java.lang.String workUser ( com.puricple.mixxy.models.User user , com.puricple.mixxy.models.User user ) { com.puricple.mixxy.utils.ComicResults result = usersDao . get ( user ) . render ( com.puricple.mixxy.utils.ResultsConstant.FTVIEW_NOT_FOUND , ( "user/user/" + username ) ) ; if ( ( null == ( com.puricple.mixxy.utils.ResultsConstant.FTVIEW_NOT_FOUND ) ) || ( user . not () . render ( "user" , com.puricple.mixxy.utils.ResultsConstant.FTVIEW_NOT_FOUND ) ) ) return ninja . render () ; return ninja . render () ; }
public static < T extends android.os.Parcelable < java.util.Map < java.lang.String , T > > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz ) ; java.util.Map < java.lang.String , T > output = new java.util.HashMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , input . get ( key ) ) ; } return output ; }
public int getPlayerForLine ( final int rowFigure , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( rowFigure ) ) ; i ++ ) { if ( ( ( board . getFigure ( rowFigure , i ) ) != null ) && ( ( board . getFigure ( rowFigure , i ) . toString () ) == playerRowCount ) ) { rowFigure ++ ; } } return playerRowCount ; }
public void printMonsters () { for ( user.Room room : user . getRoomRooms () ) { if ( room . getRoom () . equals ( user ) ) { for ( room.activeCharacter : enemy . getMonand () ) { if ( ! ( util.Util . isDeadPositions ( enemy ) ) ) { util.Rjc . printTuple ( enemy . getVisible () , user . getPosition () ) ; } } } } }
protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , java.lang.String action ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "tim" ) ) ) { com.avaschool.stsystems.web.TruckService rd = new com.avaschool.stsystems.web.TruckService () ; rd . setAttribute ( "log" , new com.avaschool.stsystems.web.TruckService () ) ; rd . forward ( request , response ) ; } else return; }
void addInterval ( java.lang.String interval ) { if ( ( interval % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item_color ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item_color ) ) ; } }
public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { if ( other == null ) { return null ; } int zlerTemp = ( ( zler ) * ( other.nehler ) ) + ( ( other.zaen ) * ( nehler ) ) ; int nennerTemp = ( ( nehler ) * ( other.nehler ) ) * ( nehler ) ; return new de.marsetex.lab2.task3.RationalNumber ( zlerTemp , nennerTemp ) ; }
public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; }
protected static double distanceTofinding ( path.NodeMap.Node x ) { double yDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
public org.litepal.crud.DataSupport analyze ( org.litepal.crud.DataSupport.Obj baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationInfo >Detail = getAssociationInfos () ; analyzeInfo ( baseObj . getClassName () , baseInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.crud.exceptions.DataSupportException ( e . getMessage () ) ; } }
public static doubletimeToSize ( double value , int sigF.length ) { java.math.BigDecimal value = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { value = new java.math.BigDecimal ( value ) ; } int newScale = ( value . sigF () ) - ( valueDto . scale ( scale ) ) ; value = value . setScale ( newScale , newScale ) ; return value . doubleValue () ; }
public static boolean sendMessageByOne ( java.lang.String word , java.lang.String ladder ) { if ( ( word . length () ) != ( ladder . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) == ( word . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
