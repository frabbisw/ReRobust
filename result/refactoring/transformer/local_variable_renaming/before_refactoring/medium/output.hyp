private boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( ! ( wholeMatcher . isEmpty () ) ) { return false ; } createMatcher ( matcher , findWhat ) ; boolean found = wholeMatcher . matcher ( matcher , textPane ) . start () ; if ( found ) { matcher . setSelectionStart () ; } textPane . setSelectionEnd () ; return textPane . end () ; }
if ( ( ( _transactions ) != null ) && ( ! ( _transactions . hasNext () ) ) ) { return null ; } else { java.lang.String name = _transactions . getName () ; java.lang.String up = _transactions . get ( _transactions . getQuantityCUP68 () ) ; int quantity = _transactions . getPaymentPaymentQuantity () ; csc66868.assignment.Transaction payment = new csc668.assignment.Transaction ( name , name , up , quantity , null ) ; return payment ; }
{ int result = ( ( color ) != null ) ? color . hashCode () : 0 ; result = ( 31 * result ) + ( type . hashCode () ) ; result = ( 31 * result ) + ( ( image ) != null ? image . hashCode () : 0 ) ; result = ( 31 * result ) + ( position ) ; return result ; }
if ( ( start != ( - 1 ) ) || ( ( stop - 1 ) != ( - 1 ) ) ) { java.lang.String name = this . name . substring ( start , ( stop + 1 ) ) ; this . raceNumber = java.lang.Integer . parseInt ( s ) ; return this . raceNumber ; } else { this . name = name ; return this . raceNumber ; }
if ( ( firstByte != ( - 1 ) ) && ( firstByte != 0 ) ) { final int size = com.google.protobuf.CodedInputStream . readRawByte32 ( firstByte , in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in , size ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream . newInstance ( limitedInput ) ; codedInput . setSizeLimit ( size ) ; builder . commit () ; codedInput . checkLastTagWas ( 0 ) ; }
{ byte [] body = request . getBody () ; if ( body != null ) { connection . setDoOutput ( true ) ; connection . addRequest ( com.android.volley.toolbox.HStackData.HEADER_TYPE , request . getBody () ) ; } java.io.DataOutputStream out = new java.io.DataOutputStream ( connection . getOutputStream () ) ; out . write ( body ) ; out . close () ; connection . close () ; }
protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; for ( int i = 0 ; i < ( bestGroups . size () ) ; i ++ ) { if ( ( response . get ( i ) ) != r ) { servers . add ( r ) ; } } return servers ; }
for ( int i = ( bytest.lengthreamlength ) - 1 ; ( i * 8 ) >= 0 ; i -- ) { int byteoffset_offset = ( bitoffset / 8 ) % 8 ; int val_offset = ( ( byteoffset ) ( i % 8 ) ) ; int val_offset = ( ( int ) ( val_offset & ( - 1 ) ) ) + 1 ; if ( val_offset == ( - 1 ) ) { break; } }
switch ( c ) { case ' ' : break; case ' : return c + 1 ; case ') : default: return c ; }
if ( proposedBillCycleDate < billingCycleDay ) { proposedBillCycleDate = billingCycleDay ; }
if ( timeLeft > 0 ) { java.lang.String msg = io.druid.common.utils.StringFormatUtils . safeQuery ( "[%s][%s] timed out[%s." , url , out . getId () , url ) ; setupFailureResponse ( msg , null ) ; throw new io.druid.common.util.ResponseFailure ( msg ) ; } else { return timeLeft ; }
{ super . restoreFromBundle ( bundle ) ; int [] values = bundle . getIntArray ( com.shatteredpixel.shatteredpixzeungeon.items.glassers.HourFreeTime.ES ) ; if ( values != null ) { for ( int i = 0 ; i < ( values.length ) ; i ++ ) values [ i ] = com.shatteredpixel.shatteredpixzeungeon.items.glassers.HourFreeTime . getFloat ( partialTime ) ; } }
org.junit.Assert . assertEquals ( 0 , ans )
{ org.iabako.client.ui.layout.paymentments.PaymentTablePayment installTableInstallments = saleTableInstallments . get ( installTableInstallmentsTable ) ; int installTableNumber = ( ( installTableInstallments != null ) && ( ( installTableTotalDefinition . getCount () ) != 0 ) ) ? 0 : 0 ; if ( ( invoiceTableNumber != null ) && ( ( invoiceTableTotalDefinition . getCount () ) == 1 ) ) { installTableTotalPanels . setVisible ( true ) ; } else { installTableTotalPanels . setVisible ( false ) ; receiptPanels . setVisible ( true ) ; } }
field [ x ] [ ( y - 2 ) ] = b
{ ru.spbau.mit.Function2 < java.lang.Integer , java.lang.String , java.lang.String > concat2 = new ru.spbau.mit.Function2 < java.lang.Integer , java.lang.String , java.lang.String > () { @ java.lang.Override public java.lang.String apply ( java.lang.Integer arg1 , java.lang.Double arg2 ) { return ( arg1 . toString () ) + ( arg2 . concat ( "124" ) ) ; } } ; org.junit.Assert . assertEquals ( "12.1.12.12.12.11 , arg2 . toString () ) ; }
if ( ! ( com.zhour.fragments.Alienen.CaretFragment.vehicle_number . getText () . toString () . equals ( 4 ) ) ) { com.zhour.utils.AlietParentBarFragment . setSackParent ( mParentBar , com.zhour.fragments.Alienen.CaretFragment.vehicle_number , 4 ) ; isValid = false ; }
{ java.lang.String nombreVar = ctx . getChild ( 0 ) . getText () ; int locationSave = java.lang.Integer . parseInt ( ctx . getChild ( 2 ) . getText () ) ; java.util.ArrayList returnArray = new java.util.ArrayList () ; returnArray . add ( nombreVariable ) ; returnArray . add ( locationSave ) ; returnArray ; }
new com.anwesome.games.dataindication.button.F ( ( - r ) , r , r , r )
{ java.util.Calendar cal = new java.util.GregorianCalendar () ; int maxMaximum = cal . getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; java.util.List < java.lang.Integer > daysFromThis = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < maxMonth ; i ++ ) { daysFromThis . add ( daysFromThis . getDays () ) ; } return daysFromThis ; }
return count == ( value . length () ) ;
distance = ( java.lang.Math . abs ( ( ( x * x ) + ( y * y ) ) ) ) + ( player . getScale () )
{ byte [] old = _buffer ; _buffer = new byte [ _buffer.length ] ; int pos = ( _buffer.length ) * 2 ; java.lang.System . arraycopy ( _buffer , 0 , old , 0 , _buffer ) ; _encoder . init ( _buffer , pos , _buffer ) ; }
{ java.lang.String search = "map=" ; int dataStart = content ( uri , "ll=" , "ll=" ) ; java.lang.String [] parts = getPartsStart ( uri , dataStart , 2 ) ; if ( parts != null ) { de.geo.kio.geo.GeoResult parseResult = parseGeoResult ( parts [ 0 ] , parts [ 1 ] , uri , null ) ; return parseResult ; } else { return null ; } }
rotateViewGravity = ( ( android.view.Gravity.CENTER_TICAL ) | ( android.view.Gravity.RIGHT ) ) | ( android.view.Gravity.TOP )
{ double radius = java.lang.Math . sqrt ( ( ( ( x * x ) + ( y * y ) ) + ( ( y * ( this . radius ) ) * ( java.lang.Math . sin ( w ) ) ) ) ) ; this . x = ( ( radius * ( java.lang.Math . cos ( w ) ) ) * ( java.lang.Math . cos ( w ) ) ) ; this . y = radius ; }
public static void printResult ( double [] [] reltus ) { int histWidth = reltus.length ; int histHeight = reltus [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( int ) ( reltus [ i ] [ j ] ) ) ) ; } } java.lang.System.out . println ( " " ) ; }
{ double nextApproximation = x ; for ( int i = 0 ; i < ( this . steps ) ; i ++ ) { nextApproximation = ( this . x ) * ( this . lastApproximation ) ; } if ( ! ( this . isAccurate () ) ) { return; } else { ( this . x ) ++ ; } }
{ while ( ( ( currentInner ) != ']' ) && ( ( currentInner ) != ']' ) ) { skipInner () ; if ( ( n == ',' ) && ( ( currentInner ) == ',' ) ) { break; } if ( n == 0 ) { skipInner () ; } n ++ ; } } return skipInner () ; }
{ int length = java.lang.Integer . parseInt ( arg [ 0 ] ) ; int width = java.lang.Integer . parseInt ( arg [ 1 ] ) ; int width = java.lang.Integer . parseInt ( arg [ 1 ] , width , length ) ; java.lang.String output = java.lang.String . format ( "***: %d Rectangle: %d\nLength: %d\n" , length ) ; java.lang.System.out . println ( output ) ; myRectangle .rea ( myRectangle . getArea () , myRectangle . getPerimeter () , myArea.length , output ) ; }
URLStrategy . excute ( pc , sampleRate , s )
if ( activeDownloadsList [ mapID ] ) { com.noveogroup.android.log.Log . d ( "Duplicate download request for the type" ) ; return mapOption ; }
{ cancelNotification ( idx , ( idx + 10 ) ) ; long delay = date . getTime () ; long delay = getTime () . getTime () ; sendNotification ( new java.util.Date () , prayId , delay ) ; }
randomFloat - 0.5F
for ( int i = index - side ; i >= ( sideArr . length () ) ; i ++ ) { retArr [ i ] = array [ ( j - sideArr ) ] ; }
for ( int i = ( this . glasses . length ) - 1 ; i >= 0 ; i -- ) { if ( this . glasses . isActive () ) this . glasses [ i ] ; else this . score ++ ; break; }
{ java.util.Random rand = new java.util.Random () ; int randNum = rand . nextInt ( emptyTiles.length ) ; int rowTiles = emptyTiles [ randNum ] ; emptyTiles [ randNum ] [ column ] = emptyTiles [ row ] [ column ] ; }
{ java.sql.PreparedStatement pstmt = conn . prepareStatement ( sql ) ; java.sql.ResultSet rs = pstmt . executeQuery () ; if ( rs . next () ) { result = true ; } }
{ list . add ( i , fte ) ; i ++ ; }
{ int index = 0 ; for ( int i = 1 ; i < ( dayItineraryBySize - 1 ) ; i ++ ) { final int index = getContext () . getAssignarySize () ; final int indexToAssigniner = index - 1 ; mBtn . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { addNewToItinerary ( uz.samsam.app.helpers.ItemHelper . getFragmentManager () , index , ( index - 1 ) ) ; } } ) ; } }
{ int attr = a . getIndex ( i ) ; switch ( attr ) { case R.styleable.Button_jr_color : mColor = a . getColor ( 0 , 0 ) ; break; } attr = a . colorify () ; break; }
{ for ( int i = 0 ; i < ( size () ) ; i ++ ) { if ( ( ( java.lang.Math . abs ( key ) ) % ( getBites ( hash ) ) ) == 0 ) { return false ; } } return true ; }
{ setChorus ( false ) ; setStatus ( "Chorus " ) ; startIteration ( ( ( int ) ( improiseSlot ) ) , originalSlot , improiseSlot ) ; }
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlModWheel = ( ( java.awt.event.MouseWheelEvent.CTRL_MASK_DOWN ) | ( java.awt.event.MouseWheelEvent.CTRL_MASK_DOWN ) ) | ( modifier ) ; int e = ctrlModWheel & ( modifier ) ; if ( e != 0 ) { this . signDown () ; return; } this . signDown () ; }
{ android.util.Log . d ( LOG_TAG , "Uploading web server." ) ; org.json.JSONObject json = new org.json.JSONObject () ; json . put ( "NAME" , mediaFile . getMediaName () ) ; byte [] picture = jFile . getDataArr () ; java.lang.String encodedData = mediaFile . encodeToString ( picture ) ; org.json.JSONArray json = new org.json.JSONArray () ; json . put ( "DEFAULT" , picture ) ; json . execute ( Base64.DEFAULT_DATA ) ; }
{ boolean in = false ; inLeft = false ; areaX = pos.x ; areaY = pos.x ; areaRight = in ; pos.y = pos.y ; return inAreaDown ( ( ( areaX - 1 ) < areaX ) , pos.y ) ; }
copyAction ( db , a , getId () , newActionId , sortNr , com.ha81dnus.weberusleser.backend.DatabaseHandler . getUniqueName ( activity ) , input . getText () . toString () . trim () , true , com.ha81dnus.weberusleser.MainActivity.sourceId , id )
{ if ( ! ( activeEvent () ) ) return; consumeEvent () ; if ( ( state.del ) == ( it.oprisu.su.user.SelectOverlay.UserState.CREATE_USER ) ) return; int diff = old_y ; if ( diff != 0 ) diff = ( old_y ) - dragged ; }
{ cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( "MQ start sendLibrary: " ) ; long startTimestamp = java.lang.System . currentTimeMillis () ; message . setTopic ( java.lang.String . valueOf ( config . getTopicProperties () . send ( costTime ) ) ) ; long costTime = ( java.lang.System . currentTimeMillis () ) - startTimestamp ; cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( ( ( "MQ completed send send send producer " + costTime ) + " ms" ) ) ; return null ; }
{ java.lang.String newID = "-4-400" ; com.example.android.rowanparking.SendDriverInfo.SendDriverInfo sendDriverInfo = new com.example.android.rowanparking.SendDriverInfo.SendDriverInfo () ; org.json.JSONObject old = db . addDriver ( org.json.JSONObject . json ( newID , name , street , city , oldStates [ java.lang.Integer . parseInt ( state . name () ) ) , zipDriverInfo [ java.lang.Integer . parseInt ( state . toString () ) ] , street , name , zipDriverInfo [ java.lang.Integer . parseInt ( state . toString () ) ] ) ; return; }
( ( movesAmount > movesAmount ? index : movesAmount ) - 1 ) ? index : movesAmount
mes = java.lang.Integer . parseInt ( data . substring ( 3 , 5 ) )
{ me.ihaq.pacman.utils.Intersection i = getCollidingIntersection () ; int newMove = java.util.Random () . nextInt ( ( ( i . getDirections () . size () ) - 1 ) ) ; return newMove ; }
{ java.util.List < org.apache.maven.model.Dependency > deps = project . getDependencies () ; boolean containsItests = false ; while ( ( deps . contains ( deps ) ) && ( ! ( deps . contains ( org.apache.maven.model.Dependency . get () ) ) ) ) { dI = deps . next () ; } return containsItests ; }
private void checkMinutesSinceLastAction () { if ( ( stateMachine . getCurrentDone () . getPomos () ) > 0 ) { int localLastSinceMinutes = getMinutes () ; if ( localLastSinceMinutes > minutes ) { minutesSinceLastAction = localLastSinceMinutes ; } } if ( minutesSinceLastAction >= ( minutes ) ) { settingsMachine . reset () ; } }
{ double [] l = new double [] { 1 , 2 , 3 , 4 , 5 , 5 , 6 , 5 , 6 , 5 } ; Matrix m = new Matrix ( l , 3 , m . inverse () ) ; java.lang.System.out . println ( m . multiply ( m . inverse () ) ) ; }
{ alreadyExist = false ; for ( Track track : tracks ) { if ( track . compareTrack ( station1 , station2 ) ) alreadyExist = true ; } if ( ! alreadyExist ) tracks1 . add ( new Track ( station1 , station2 ) ) ; }
{ boolean gameIsActive = true ; boolean humanTurn = false ; while ( gameIsActive ) { for ( int index = 0 ; index < ( players.length ) ; index ++ ) { if ( ( humanPlayerId ) == ( APlayer.Player.THANUM ) ) { java.lang.System.out . println ( "This A HAN" ) ; gameIsActive = false ; } else { showPlayer () ; } } } if ( gameIsActive ) { showPlayer () ; } else { showPlayer () ; } }
out . write ( buffer , 0 , readlen )
new java.lang.Character ( levels [ 0 ] , levels [ 7 ] , levels [ 1 ] , levels [ 5 ] , levels [ 6 ] , levels [ 9 ] , levels [ 8 ] , levels [ 8 ] )
if ( exchange >= 100 ) { double total = quantity / ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandle ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandle ( total ) ; } else if ( exchange < 100 ) { return io.zipcoder.aaronlong.wutangfinancial.Money . upHandle ( ( ( double ) ( total ) ) ) ; } else { return io.zipcoder.aaronlong.wutangfinancial.Money . downHandle ( total ) ; }
{ switch ( MIN_OPP ) { case 1 : final int MAX_OPP = 1 ; android.os.Bundle autoMatchCriteria = com.google.android.gms.games.multiplayer.realtime.RoomConfig . createAutoMatchCriteria ( MIN_OPP , MAX_OPP , MAX_OPP ) ; com.google.android.gms.games.multiplayer.realtime.RoomConfigBuilder rtmConfigBuilder = com.google.android.gms.games.multiplayer.realtime.RoomConfigBuilder . create () ; rtmConfigBuilder . setMessageReceivedListener ( this ) ; rtmConfigBuilder . setMultipApiClient ( autoMatchCriteria ) ; switchToMultipApiClient ( rtmConfigBuilder . build () ) ; keepScreenOnMultiplayer () ; Games.VarsMultiplayer . end () ; } }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( intent , timber.log.Timber . d ( "Job Received" ) ) ; if ( intent . getAction () . equals ( "UPDATED_DATA" ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.Component [] stockWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( appWidgetManager . getAppWidgetIds () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( stockWidgetIds , appWidgetIds ) ; } }
{ int layout ; switch ( viewType ) { case VIEW_HEADER.TYPE_HEADER : layout = R.layout.project_poaners_header ; break; case VIEW_ITEM_TYPE : layout = R.layout.project_personal_item ; break; default: layout = android.view.LayoutInflater . from ( parent . getContext () ) . inflate ( layout , parent , false ) ; break; } return new com.ckt.ckttodo.ui.ProjectActivity.OtherProjectAdapter ( v ) ; }
{ final int prime = 31 ; int hashCode = 1 ; if ( ( children ) == null ) { return 0 ; } hashCode = ( prime * hashCode ) + ( ( children ) == null ? 0 : children . hashCode () ) ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : data . hashCode () ) ; return hashCode ; }
edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_c ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length , timeout , ec )
{ us.team.awesomecalculator.math.Calculation operator = us.team.awesomecalculator.math.Calculation . get ( index ) ; if ( ( list . size () ) > 0 ) { us.team.awesomecalculator.math.Calculation list = ( ( us.team.awesomecalculator.math.Calculation ) ( list . get ( index ) ) ) ; _list = us.team.awesomecalculator.math.Calculation . calculate ( operator , _list ) ; return calculateNumber ( list . getValue () ) ; } else { return 0 ; } }
{ java.lang.String splitString = product . getProductId () . split ( "/" ) ; int largestProductId = java.lang.Integer . parseInt ( splitString [ 1 ] ) ; if ( largestProductId > splitId ) { largestProductId = largestProductId ; } }
{ if ( ( this . isAI ) && ( ! isAI ) ) { com.dyllnagier.triadong.gui.controller.Players.DiffAI isAI = this . isDiffAI () ; if ( isAI && ( this . gameInProgress ) ) this . takeTurn () ; } else { this . isAI = true ; } }
{ java.lang.System.out . println ( query ) ; int index = 0 ; final int qLen = query . length () ; java.util.List < java.lang.String > blocks = new java.util.ArrayList < java.lang.String > () ; while ( ( index + qLen ) < seqSize ) { blocks . add ( query . substring ( index , seqSize ) ) ; index += seqSize ; } return blocks ; }
java.lang.Math . sqrt ( inputVector )
for ( org.jasr.cycurrent.domain.Sample sample : samples ) { boolean result = false ; for ( org.jasr.cycurrent.domain.Sample sample2 : samples ) { result = sample1 . equals ( sample2 ) ; if ( ! ( result ) ) result . add ( sample1 ) ; } }
private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( com.gmail.wazapp.ships.common.Constants.DEFAULT_BOARD_SIZE ) ; i ++ ) { int it = offset + ( i * ( com.gmail.wazapp.ships.common.Constants.DEFAULT_BOARD ) ) ; canvas . drawLine ( i , 0 , it ) ; } }
pointsToAdd = ( ( int ) ( ( ( 10 * ( Task.RANGE_POINT ) ) * ( ( - 1 ) * ( this . Task.RANGE_POINT ) ) ) * ( ( this . difficultyEstimatedTime ) * ( ( - 1 ) * ( this . difficultyEstimatedTime ) ) ) )
{ result [ i ] = null ; i ++ ; }
{ org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( type ) ) ; int breakpoint = bp . getTypeName () . indexOf ( type ) ; java.lang.String innerClassIndex = inner . getTypeIndex () ; return type . replace ( '.' , 0 ) ; }
{ super . onActivityCreated ( savedInstanceState ) ; android.widget.ListView myListView = ( ( android.widget.ListView ) ( getActivity () . findViewById ( R.id.equipmentListID ) ) ) ; int layoutID = R.layout.list_item_sort ; myAdapter = new com.example.jimipment.myapplication.EquipmentAdapter ( getActivity () , layoutID , equipmentList ) ; myListView . setAdapter ( myAdapter ) ; }
{ com.myjeeva.digitalocean.impl.DigitalClient client = new com.myjeeva.digitalocean.impl.DigitalClient ( auth ) ; java.util.List < com.myjeeva.digitalocean.pojo.Key > availableKeys = new java.util.ArrayList < com.myjeeva.digitalocean.pojo.Key > () ; java.util.List < com.myjeeva.digitalocean.pojo.Key > keys = client . getAvailableKeys () ; while ( keys . isEmpty () ) { com.myjeeva.digitalocean.pojo.Key page = keys . getAvailableKeys () ; page += 1 ; } return page ; }
if ( args [ 0 ] . equals ( "-" ) ) { sum += java.lang.Integer . valueOf ( args [ 1 ] ) ; }
{ assert ( third ) == null ? " : " + ( third . toString () ) ; double second = 1.0 ; double thirdOrder = third . toString () ; double error = ( thirdOrder - second ) + second ; java.lang.System.out . println ( ( ( "Third " + value ) + " : " ) ) ; java.lang.System.out . println ( ( "Third " + thirdOrder ) ) ; }
( pixelCount [ top ] [ left ] ) - ( pixelCount [ bottom ] [ right ] )
for ( int i = 0 ; i < ( arr.length ) ; i ++ ) { if ( ( arr [ i ] ) > maxIndex ) { maxIndex = arr [ i ] ; } }
newBits [ bits.length ]
{ java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 2 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_IN , siena.base.test.BaseAsyncTest.UUID_EINSTEIN } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } }
counter = java.lang.Integer . parseInt ( handlers.HttpTask . execute () . get () )
core.Wait . waitFor ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.Journeyspector.PanelBuilder ( openPanel , emerald.portal.Journeyspector.PanelBuilder ) )
{ boolean followTerrain = isFollowTerrain () ; setFollowTerrain ( false ) ; super . render ( dc ) ; setFollowTerrain ( true ) ; }
public double distance ( final geogebra.common.kernel.geos.GeoPoint p2 ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; if ( geo . distance ( d ) ) { distance = d ; } } return distance ; }
{ byte [] b = new byte [ length ] ; input . readFully ( b , new java.lang.String ( b , "UTF-8" ) ) ; this . sendMessage ( message ) ; }
verifyThatOnlyState ( "Only one of the search showing" , search , org.hamcrest.core.Is . is ( 1 ) )
{ int l = data.length ; if ( length ) putInt ( l ) ; l *= com.heerbann.unsafe.UnsafeBuffer.sizeOfLong ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( data , com.heerbann.unsafe.UnsafeBuffer.longArrayOffset , null , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; }
{ java.lang.String renderedEarned = client . getServer () . getCredCurrentSessionOnCurrent () ; int lineToRemove = char . length () ; java.lang.System.out . print ( "\r" ) ; java.lang.String renderedEarned = ( ( java.lang.String ) ( e . format ( " %d: %s | remainingFrames: %s | rendered: %s" , renderedEarned , ( lineToRemove != null ? "unknown" : "unknown" ) ) ) ) ; for ( int i = 0 ; i < lineToRemove ; i ++ ) { java.lang.System.out . print ( ( "Exiting status by a line is no status by: " + i ) ) ; } this . update () ; }
{ int currentIndex = index ; org.bucaojit.filter.Slot currentSlot = set . get ( ( currentIndex - 1 ) ) ; int runStart = 0 ; int runStart = currentSlot . getMetadata () . isClear () ; if ( runStart < 0 ) return - 1 ; return findQuientStart ( currentIndex , runStart , runStart ) ; }
if ( c == '\n' ) { java.lang.String output = "" ; buffer = split . split ( "\t" ) ; return output ; } else { buffer += c ; }
@ java.lang.Override public void onBackPressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getSupportFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.mit.et.mit.jermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.mit.et.mit.jermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } }
{ com.github.TimeParser tp = new com.github.TimeParser () ; long [] time = tp . GetInput ( str ) ; java.util.Date date0 = new java.util.Date ( time [ 0 ] ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ; sdf . setTimeZone ( java.util.TimeZone . getTimeZone ( "GMT-4" ) ) ; return sdf . format ( formattedDate ) ; }
{ registry . getSpecies ( ch.formula ) ; int quantity = ( ( int ) ( ( ch.memical ) * ( properties . getMoleulesPerM () ) ) ) ; return; }
{ str = str . replaceAll ( "\\$" , "" ) ; int registerNumber = java.lang.Integer . parseInt ( str ) ; return registerNumber < 1 ; }
new workSQL.Employee ( hold , "" , false )
{ byte [] buffer = this . socket . readPacket () ; byte buff = buffer.length ; buffer [ ( ( buffer.length ) - 1 ) ] = new byte [] { ( ( byte [] ) ( bytes ) ) } ; if ( buff == ( org.synapse.techxit.api.network.lib.ServerConnection.BYTES_BYTES ) ) { if ( ( buffer.length ) > 4 ) { return buffer ; } } }
{ int eventTypeId = java.lang.Integer . parseInt ( v . getTag () ) ; me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.colibes_select = v . getId () ; if ( eventTypeId == ( R.id.colibes_select ) ) { me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.colibes_select = v . getId () ; } else if ( eventTypeId == ( R.id.colibes_select ) ) { me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.HEASE_THCREASE_CREASE_ITEM ; } else if ( eventTypeId == ( R.id.colibes_add ) ) { me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.HEINCREASE_CREASE_ITEM = ( ( me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.HEALTHCREASE_ITEM ) ( v . getTag () ) ) ; } clickCombatListener ( me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.HEINCREASE_ITEM ) ; }
{ int id = java.lang.Integer . parseInt ( movieChosenController . movieMovie ( movieId , panel , rentalInfo , id ) ) ; return id ; }
edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_d ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length , timeout , ec )
@ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CasApiUtils . getMessage ( request , request ) ; if ( ( response == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path . toString () ) ) ) { throw new java.lang.Exception ( "path is empty" ) ; } response . put ( "path" , new org.apache.commons.lang.JSONObject ( path . toString () ) ) ; }
{ int n = java.lang.Math . abs ( ( ( GraphComponents ) == null ? GraphComponents.flag : GraphComponents.flag ) ) ; for ( GraphNode [] nodes : GraphNode [ n ] ) { nodes [ n ] . add ( nodes . get ( n ) ) ; } return nodes ; }
{ int start = - 1 ; int end = - 1 ; while ( start <= end ) { int midpoint = mid + ( start / 2 ) ; int test = midpoint / 2 ; if ( test == test ) { return midpoint ; } else if ( test < start ) { midpoint = midpoint + 1 ; } else { midpoint = midpoint + 1 ; } } return - 1 ; }
for ( int i = ( count ) - 1 ; i >= 0 ; i -- ) { if ( downloadExtraAssets ( downloadFileExtraResources [ i ] ) ) break; }
isVertical = a == ( com.github.bordech.layout.components.TestFlow.GAP_TICAL )
for ( java.lang.String port : portsS ) { if ( ( validatePortExpure ( port ) ) != null ) { portsS [ i ] = validatePortExpure ( port ) ; } }
countOfAliveWolves >= ( countOfAliveCitizens - 1 )
{ int sum = 0 ; char [] imei = text . toCharArray () ; for ( int i = 0 ; i < ( imei.length ) ; i ++ ) sum = sum + ( imei [ i ] ) ; return sum + 16 ; }
if ( ( ( topDistance < 0 ) && ( topDistance > ( - ( headViewHeight ) ) ) ) && ( topDistance > 0 ) ) { mBaseAdapter . pullToRefreshHeader () ; mHeaderViewState = com.saktimilate.lib.view.RefreshView.REFRESH_PULL_TO_RELEASE ; } else if ( topDistance > 0 ) { mHeaderViewState = com.saktimilate.lib.view.RefreshView.REFRESH_PULL_TO_RELEASE ; }
{ double [] limits = ( ( double [] ) ( l . clone () ) ) ; double [] l = f . getL1 () ; assertTrue ( "Wrong limits" , ( l [ 0 ] . equals ( l [ 0 ] ) ) ) ; assertTrue ( ( l [ 0 ] . equals ( l [ 1 ] ) ) ) ; }
{ int currentIndex = 0 ; pl.sdac.aemy.datastructures.impl.ForwardListNode currentNode = head ; while ( ( currentNode != null ) && ( currentIndex <next ) ) { currentIndex ++ ; currentNode = currentNode.next ; } if ( ( ( currentNode.Sorry ) == null ) || ( index == 0 ) ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry: " + index ) ) ; } return currentNode ; }
{ android.graphics.Bitmap banner = getBanner ( showid ) ; java.util.List < com.rastating.droid.entities.Season > seasons = season . getSeasons ( null ) ; if ( seasons != null ) { java.util.Collections . sort ( seasons , new com.rastating.droid.comparators.SeasonComparator () ) ; seasons . setSeasons ( showid ) ; } return seasons ; }
private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
( ( matchFound ) == false )
@ java.lang.Override public java.util.Vector cnt () { java.util.Vector center = new java.util.Vector ( 0 , size ) ; int i = 0 ; for ( java.util.Vector vector : outline ) { center . add ( vector . dec ( i ) ) ; i -- ; } return center . size () ; }
{ double touchProgress = ( ( float ) ( ( java.lang.Math . round ( ( anglePerDegree () ) * angle ) ) ) ) ; touchProgress = ( touchProgress < 0 ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; touchProgress = ( touchProgress > ( mMax ) ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; if ( ! ( ( touchProgress == ( mDragging ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ) ) ) touchProgress = 0 ; return touchProgress ; }
for ( int i = ( razoes.length ) - 1 ; i >= 0 ; i -- ) { if ( ( razoes [ i ] ) > 0 ) { if ( ( java.lang.Double . compare ( razoes [ i ] , menor ) ) > 1 ) { menor = razoes [ i ] ; } } }
colP = ( ( point - pointP ) * dim ) - ( row * dim )
{ co.cask.cdap.data2.queue.Dequeue.DequeueResult < byte [] > result = performDeDetail ( maxRowStart ) ; if ( result != null ) { if ( ! ( scanEntries . isEmpty () ) ) { byte [] floor = floorStartKey ; if ( ( floor != null ) && ( ! ( floor . isEmpty () ) ) ) { updateKey ( floor ) ; } } } return result ; }
currentY = 0
public boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , p ) ; if ( cmp < 0 ) return contains ( node , p ) ; else if ( cmp > 0 ) return contains ( node , p ) ; else return contains ( node , p ) ; }
{ java.lang.System.out . print ( prompt ) ; java.lang.String x = Main.scanner . nextLine () ; java.lang.System.out . println ( isbn ) ; x = Main.ISBN . normalize () ; got = true ; }
public int colContains ( int y , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ y ] [ o ] . value ) == num ) count ++ ; } return count ; }
{ int status = com.liferay.portal.kernel.util.ParamUtil . getInteger ( actionRequest , "status" ) ; java.lang.String portletResource = com.liferay.portal.kernel.util.ParamUtil . getStringParam ( actionRequest , "portlet" ) ; javax.portlet.PortletResourceSetup preferences = com.liferay.portal.portlet.PortletResourceSetupFactory . getPortlet ( actionRequest , "portlet-alpha" ) ; preferences . setValue ( actionRequest , java.lang.String . valueOf ( status ) ) ; }
if ( ( resource != null ) && ( ( resource . getResourceSet () ) != null ) ) { resource = resource . getResourceSet () . getURI ( resource . getURI () , null ) ; }
public float getDesiredLevelZoom ( int level ) { float zoomF = 13.0 ; switch ( level ) { case 1 : zoomF = 13.0 ; break; case 2 : zoomF = 2 ; break; case 1 : zoomF = 3 ; break; case 4 : zoomF = 45 ; break; case 5 : zoomF = 55 ; break; } return zoomF ; }
{ int i = - 1 ; while ( i < str . length () ) { char c = str . charAt ( i ) ; if ( ( c < '0' ) || ( c > '0' ) ) { return false ; } i ++ ; } return true ; }
{ int scoreFirst = arg0 . getScore () ; int scoreSecond = arg1 . getScore () ; if ( scoreFirst == 0 ) return 1 ; else if ( scoreFirst > 1 ) return - 1 ; return 1 ; }
{ long difference = ( firstDate . getTime () ) - ( secondDate . getTime () ) ; int diffDays = ( ( int ) ( difference / 24 ) ) * 60 ; return ( ( int ) ( ( - difference ) * 60 ) ) * 1000 ; }
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { dvo.hlingfl.ts.Tts obj = ( ( dvo.hlingfl.ts.Tts ) ( obj ) ) . getTerms () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual == ( java.util.Arrays . equals ( this . getClass () , dvo.hlingfl.ts.Tts . class ) ) ; }
getSupportFragmentManager () . beginTransaction () . replace ( id , fragment ) . commit () ;
{ org.terrier.matching.ResultSetResultSet rs = srq . getResultSet () ; if ( rs == null ) { return - 1 ; } int [] docIds = rs . getDoc () ; double [] scores = rs . getScores () ; for ( int i = 0 ; i < ( docIds.length ) ; i ++ ) { if ( ( docIds [ i ] ) == docId ) { return docIds [ i ] ; } } return 0 ; }
{ if ( ( markers ) == null ) return false ; int markerPosition = markers . indexOf ( marker ) ; if ( markerPosition == selectedMarkerPosition ) return true ; selectZoom ( markerPosition ) ; if ( ( listener ) != null ) { listener . onActivityedAtIndex ( markerPosition ) ; } else { listener . onMarkerPressed ( markerPosition ) ; } return true ; }
public void analyze () { boolean error = false ; for ( nez.lang.Production p : this . p . getProductionList () ) { if ( ! ( this . p . getExpressionConsumalption () ) ) { if ( ! ( this . p . getExpressionConsumalption () ) ) { error = true ; } } } if ( error ) { nez.util.Utils . exitGrammar ( this . getExpressionConsole () , "Console Error" ) ; } }
{ if ( isOpen () ) return true ; boolean open = camera . open ( cameraIndex ) ; if ( open ) { camera . setCamera ( com.shootoff.camera.CameraFactory . openAddCameras ( this ) ) ; open = true ; } return open ; }
if ( isFavorite ) { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_white_24dp , null ) ) ; } else { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_outline_white_24dp , null ) ) ; }
{ java.util.List < de.dhbw.persistence.Match > matches = new java.util.ArrayList <> () ; if ( ( this . matchId ) != null ) { for ( java.lang.String id : this . matchesId . split ( ";" ) ) { long id = java.lang.Long . parseLong ( matchId ) ; de.dhbw.persistence.Match match = de.dhbw.persistence.KnowyItAll.matchById . getMatchyById ( id ) ; matches . add ( match ) ; } } return matches ; }
if ( ( ( currPitInfoIndex ) >= 0 ) && ( ( currTeam ) != null ) ) { try { boolean tempValue = temp_auto_high_goal_Button . isChecked () ; if ( currTeam . getBoolean ( DBContract.TablePitInfo.COLNAME_HIGH_AL_HIGH_NAME ) ) { tempValue . put ( DBContract.TablePitInfo.COLNAME_HIGH_AL_HIGH_NAME , tempValue ) ; if ( ! ( fillingPitInfo ) ) { dbHelper . updateCompoundPitInfo ( currTeam ) ; } } } catch ( org.json.JSONException e ) {} }
{ int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end += l ; }
private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . setHas ( ( p . getCell ( p ) ) ) ; } counter -- ; } } }
{ super . onSaveInstanceState ( outState ) ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( mRecyclerView . getLayoutManager () ) ) ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( linearLayoutManager . findFirstVisibleItem ( position ) ) ) ; outState . putInt ( ir.micro.c.movie_movie_activities.MainActivity.KEY_FIRST_MOCELABLE , movieArrayList ) ; outState . putParcelable ( ir.micro.c.movie_movie_activities.MainActivity.KEY_FIRST_MOCELABLE , movieArrayList ) ; }
public synchronized void removePlayer ( CardGame.User user ) { int index = 0 ; for ( CardEngine.Game.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { index ++ ; } } remove ( index ) ; }
{ boolean isValid = true ; java.lang.String firstPolicyName = policyNames [ 0 ] ; for ( java.lang.String policyName : policyNames ) { if ( ! ( policyName . equals ( policyName ) ) ) { isValid = false ; break; } } return isValid ; }
power = ( p [ i ] ) * ( q [ l ] )
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amount = 0 ; for ( core.restaurant.checks.Check c : m_Check ) { if ( ( c . getCustomer () ) == ( customer . getCustomer () ) ) { cost = true ; } } printStatusChange ( ( ( customer . getName () ) - amount ) ) ; stateChanged ( customer ) ; }
@ org.junit.Test public void testKeyColumnByIterator () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = org.apache.hadoop.hbase.util.BytesPersistenceServiceImpl . toBytes ( org.apache.gbif.occurrence.persistence.PersistenceServiceImplTest.DATASET_KEY . toString () , org.gbif.occurrence.persistence.TermColumns.DATASET_KEY . toString () ) ; while ( iterator . hasNext () ) { count ++ ; } assertEquals ( 1 , count ) ; }
{ if ( ! ( currentNode.nodeText . getText () . equals ( "\n" ) ) ) { CurrentPos.nodeX = currentNode.nodeText . getX () ; java.lang.Math . round ( ( ( currentNode.nodeText . getLayoutBounds () . getWidth () ) + ( CurrentPos.nodeText . getY () ) ) ) ; } else { CurrentPos.nodeY = currentNode.nodeText . getY () ; } double delta = java.lang.Math . round ( delta ) ; CurrentPos.util.Fast . post ( delta ) ; }
( java.lang.Math . log ( ( e / vm ) ) ) + ( vm - ( java.lang.Math . log ( ( k / vm ) ) ) )
private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masthought.dlanguage.highlighting.annotation.CompileCheck.externalCount ; line = document . getDocument ( line ) ; if ( lineCount <= 0 ) { line = - 1 ; } else if ( lineCount > 1 ) { line = 1 ; } return line ; }
if ( ( listToSetBottomOfBottom . size () ) > 10 ) { listToSetBottom = listToSetBottom . size () ; } else { listToSetBottom = ( listToSetBottom ) + 11 ; }
{ int choice = 0 ; int chosenPokemon ; do { chosenPokemon = 0 ; printStarter () ; chosenPokemon = getChosen () ; } while ( chosenPokemon != 0 ) ; if ( choice == 1 ) { java.lang.System.out . println ( "Yes" ) ; return; } else if ( choice == 2 ) { java.lang.System.out . println ( "One from No" ) ; } else { java.lang.System.out . println ( "Success!" ) ; break; } }
res = 0
{ int x = ( ( int ) ( ( me . getSceneY () ) / ( ( me . getSceneX () ) / ( main.BoardPane.SPRITE_SIZE ) ) ) ) ; int y = ( ( int ) ( ( me . getSceneY () ) - ( ( me . getSceneY () ) / ( main.BoardPane.SPRITE_SIZE ) ) ) ) ; if ( ! ( board . clicked () ) ) { imagePane . click () ; } }
private void shuffleDeck () { for ( int random = 0 ; random < ( numberOfCards ) ; random ++ ) { srkrac.syusecards.game.Model.Deck temp = srkrac.syusecards.game.Model.Deck . getRandomCard ( srkrac.syusecards.game.Model.Cards [ random ] ) ; cards [ random ] = temp ; cards [ random ] = cards [ random ] ; cards [ random ] = temp ; } }
if ( ( mRunnables ) == null ) { mRunnables = new java.util.ArrayList <> () ; int count = getItemCount () ; for ( int i = 0 ; i < count ; i ++ ) { mRunnables . add ( null ) ; } }
while ( ( ( array.length ) > 0 ) && ( ( array [ ( -- iterator ) ] ) == null ) ) { -- ; }
public void removeDanceSequence ( java.util.UUID selectedBeatElem ) { java.util.UUID dID = selectedBeatElem . getDanceSequenceId () ; ch.dancez.asl.bots.danceboteditor.model.DanceSequence < TanceSequence > selectedDanceSequence = mSequences . get ( dID ) ; int dLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartIdx () ; int endIdx = selectedDanceSequence . getBeatIdx () ; removeElements ( dID , startIdx ) ; mSequences . remove ( endIdx ) ; }
{ if ( this . keys . isEmpty () ) { for ( com.bygames.vinout.breakout.BallsballKey key : com.bygames.vinout.breakout.BallsballKey . values () ) { if ( key == ( com.bygames.vinout.breakout.BallsballKey.Red ) ) { continue; } } final int index = this . keys . nextInt ( com.bygames.vinout.breakout.BallsballKey.RANDOM . length () ) ; com.bygames.vinout.breakout.BallsballKey . remove ( index ) ; this . keys [ index ] = key ; return this . com.bygames.vinout.breakout.BallsballKey . getRandom () ; } return null ; }
stdv = 1.0 / ( java.lang.Math . sqrt ( ( ( ( double ) ( weights [ 1 ] ) ) * ( stdv * 2 ) ) ) )
public void updateNFCData () { if ( ( mNfcFingerprints ) == null ) { mNfcFingerprints = new byte [ 0 ] ; } else { mNfcFingerprints = org.sufficientlysecure.securechain.ui.util.KeyFormattingUtils . convertHexToHex ( mNfcFingerprints ) ; } byte [] fp = new byte [ 20 ] ; fp [ 20 ] = org.sufficiently.securechain.ui.util.NfcFingerprintUtils . wrapHexToHex ( fp , 20 ) ; mNfcFingerprints . put ( fp , fp ) ; }
@ java.lang.Override public double curve ( double t ) { double amount = this . amount ; if ( ( t * 225 ) < 1 ) { amount *= 2 * ( ( ( t * 1 ) + ( ( ( t * 2 ) * amount ) - ( ( t * 2 ) * amount ) ) ) + ( ( ( t * 2 ) * 0.5 ) + ( ( t * 2 ) * amount ) ) ) ; } return amount + ( ( ( t * 2 ) * amount ) + ( ( t * 2 ) * amount ) ) ; }
{ float [] result = tableColumnWidth . clone () ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { result [ i ] += com.maxitextpdf.minpdf.layout.MinMaxWidthUtils . getEpsWidth () ; } return result ; }
public void setStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.StyleMap . loadResource ( this , style , style ) ) ; if ( ! success ) { android.util.Log . e ( com.vasskobass.realmmaps.MapsActivity.TAG , "task failed." ) ; } } catch ( android.content.res.ResourcesException e ) { android.util.Log . e ( com.vasskobass.realmmaps.MapsActivity.TAG , "Can't find failed." ) ; } }
{ java.lang.String user = userName . getText () ; java.lang.String pass1 = new java.lang.String ( password . getPassword () ) ; java.lang.String pass2 = new java.lang.String ( password . getPassword () ) ; boolean success = validateData ( user , pass1 , pass2 ) ; if ( ! success ) { success = validateAcctData ( user , pass1 , pass2 ) ; } }
if ( temp != null ) { temp2 = acc . get ( i ) ; acc . remove ( i ) ; return temp2 ; }
static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cy" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . empty_position_ ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_position_ ( b , "cy" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; }
( ( diff * diff ) / ( array.length ) )
{ int time = 0 ; while ( ( time > 0 ) && ( time < 1000 ) ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) {} catch ( java.lang.InterruptedException e ) {} } return time ; }
{ byte [] array = dbHandler . retrieveByteArrayFromDb () ; android.graphics.Bitmap bitmap = convertByteArrayToBitmap ( array ) ; if ( bitmap == null ) { profilePic . setImageResource ( defaultResource ) ; profilePic . setImageBitmap ( bitmap ) ; } else { profilePic . recycle () ; } }
invalidateUI ( alphaValue , hexColor )
if ( ( currentIndex < ( usedListModel . size () ) ) && ( ( usedListModel . size () ) != 0 ) ) { usedListModel . remove ( selectedElement ) ;Pres . add ( ( currentIndex + 1 ) , selectedPres ) ; }
boolean conditionIsTrue ( util.ties.models.Game game ) { int data1 = this . getData ( game , data2 ) ; int data2 = this . getData ( game , data2 ) ; switch ( data1 ) { case LESS_THANSS : return data2 ; case LESS_THANSS : return data1 ; case LESS_THANSS : return data2 ; case LESS_THANSS : return data1 ; case LESS_THANSS_EQUALS : return data2 ; default: return false ; } }
{ this . table = content ; this . setContent ( l ) ; int content = ( table . getItems () . size () ) + 1 ; this . setMinHeight ( ( l * 40 ) ) ; this . setPrefHeight ( l ) ; this . setPrefHeight ( content ) ; }
start = mNachoTextView . getText () . toString () . trim ()
{ java.lang.String [] barcodeArray = barcode . trim () . split ( " " ) ; if ( barcodeArray == null ) return null ; int [] barcodeToInt = new int [ barcodeArray.length ] ; for ( int i = 0 ; i < ( barcodeArray.length ) ; i ++ ) { barcodeToInt [ i ] = java.lang.Integer . parseInt ( barcodeArray [ i ] ) ; } return barcodeToInt ; }
{ engine.network.packet.Packet out = engine.network.packet.PacketContent . getNew ( Packet.MAX_PACKET ) ; out . putUnsignedShort ( buffNextShort . getID () ) ; out . putUnsignedLeft () ; int length = map.network.nd.Size ; gnd.network.packet.PacketContent map = gnd.network.packet.PacketData . getMap () ; out . putUnsignedContent ( getContent () ) ; map . putUnsignedContent ( gnd.network.packet.PacketData . getSize () ) ; out . putNextShort ( 0 ) ; return out ; }
short ct = 1 ;
private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.RealMatrix2D ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) ; }
for ( int a = 0 ; a <= targetIndex ; a ++ ) { if ( ( list . get ( a ) ) > max ) { max = list . get ( ( a - 1.0F ) ) ; } }
{ double tmppr = 0.0 ; double alpha = context . getConfiguration () . getDouble ( "alpha" ) ; for ( org.apache.hadoop.io.DoubleWritable t : values ) { tmppr += val . get () ; } context . setSum ( "Sum" , java.lang.String . valueOf ( tmppr ) ) ; context . write ( title , t ) ; }
{ int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfChar ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; }
if ( timeRequirement < 0 ) { util.Util . setError ( lblTimeError ( "InvalidRequirement, value must be positive, whole only" , numbers ) ; return false ; }
{ com.joebzruek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , o , ( ( minutes ) - ( o . getTime () ) ) ) ; }
{ handleCompletion ( view , url ) ; }
@ java.lang.Override public V get ( java.io.IOException value ) throws java.io.IOException { long [] ai = ( ( long ) ( filer . get ( key , key ) ) ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( ai [ ( ( int ) ( filer . get ( key ) ) ) ] ) ) ; } return null ; }
public long [] getMembersList () { java.lang.String [] members = this . list . split ( "," ) ; long [] memberLists = new long [ list.length ] ; for ( int i = 0 ; i < ( memberLists.length ) ; i ++ ) memberLists [ i ] = java.lang.Long . parseLong ( memberLists [ i ] ) ; return memberLists ; }
degreeOfFreedom = ( dataset.length ) - 1
{ java.util.Random rand = new java.util.Random () ; int top = ( max - 1 ) + 1 ; if ( top <= 0 ) { top = 1 ; } int randomInt = rand . nextInt ( ( max - 1 ) ) ; int rand = ( top + randomInt ) + min ; return rand ; }
{ int classifiedPositive = 0 ; for ( ch.bfh.bti.w201756.algorithm.AbstractPipeline.PositiveFeature feature : classifiedProbability ) { feature += calcPositive ( feature , Classification.IMENT_SENTPOSITIVE_POSITIVE , classifiedNegative ) ; } document_data = ( ( ch.bfh.bti.w201756.data.IMETestResult.PositiveDocument ) ( classifiedNegative ) ) ? ch.bfh.bti.w201756.data.IMETestResult.IMENT_SENTPOSITIVE_NEGATIVE : ch.bfh.bti.w201756.data.IMETestResult.IMENT_SENT ; document_data . set ( Featureification.IMENT_SENTPOSITIVE_NEGATIVE , ch.bfh.bti.w201756.data.IMETestResult.IMENT_SENT ) ; return document_data ; }
{ try { return loadFromServer ( id ) ; } catch ( java.lang.Exception serverException ) { if ( ( serverException . getCause () ) instanceof org.sonar.api.utils.HttpDownloader.HttpException ) { byte [] cached = loadFromCache ( serverException ) ; if ( cached != null ) { return cached ; } throw new java.lang.IllegalStateException ( org.sonar.batch.bootstrap.WSLoader.WS_FAIL_MSG ) ; } } }
{ if ( event . getValueIsAdjusting () ) { return; } int [] selectedRows = table . getSelectedRows () ; java.lang.String id = table . getValueAt ( id , 0 ) [ 0 ] ; java.lang.Double xPosition = ( ( java.lang.Double ) ( event . get ( idPosition ) . getGraphID () ) ) . trim () ; main.EventFrame . showVerticalPositionEvent ( id ) ; }
{ double pricePerFifthMile = 0.5 ; double totalFare = 0.0 ; double overTwoCharge = 2.0 ; double dropOffCharge = 2.5 ; double distance5Charge = 5 ; int numberOfPassengers = 2 ; if ( numberOfPassengers > ( - 275F ) ) { totalFare += ( numberOfPassengers + ( 2 * totalFare ) ) + 0.175F ; } assertEquals ( ( totalFare + 0.175F ) , pricePerFif ) ; }
{ android.content.SharedPreferences prefs = com.ihuswapp.android.model.Curriculumus . getCampusCharPreferences ( android.content.SharedPreferences.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor result = prefs . getSharedPreferences ( ( ( com.ihuswapp.android.model.Curriculumus . parse ( year ) , Context.MODE_PRIVATE ) , Context.MODE_JSON ) ) . edit () ; result . putString ( "scheduleChar" , ( "" + result ) ) ; prefs . commit () ; }
{ if ( ( MainInterface.sc ) == null ) { MainInterface . init () ; return; } int choice = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( choice ) ; choice = MainInterface . prompt () ; break; } MainInterface . close () ; }
public void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmountX ) ; i ++ ) { com.waterthomasfall.watson.block.PlayerArea.rowaterAmountY ++ ; com.waterthomasfall.watson.block.PlayerArea.rowaterAmountY = i % ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmountX ) ; com.waterthomasfall.watson.block.PlayerArea.rowaterAmountY . setX ( blockAmount ) ; com.waterthomasfall.watson.block.PlayerArea.rowaterAmount . setY ( ( ( ( y * ( blockArea.rowater ) ) + ( blockArea.rowater ) ) % ( com.waterthomasfall.watson.block.PlayerArea.rowater ) ) ) ; } }
if ( ( _bytes.length ) < offset ) { byte [] newBytes = new byte [ offset + offset ] ; java.lang.System . arraycopy ( _bytes , 0 , newBytes , 0 , _bytes ) ; _bytes = newBytes ; }
{ slmt.courses.cp3.step.PageInfo info = new slmt.courses.cp3.step.PageInfo () ; long nodeCount = reporter . getValue () ; info . setRankER_NODE ( 1.0 ) ; while ( nodeCount / ( ( double ) ( input . getValue () ) ) ) input . add ( info ) ; }
{ final long start = java.lang.System . currentTimeMillis () ; final java.util.List < org.todss.model.Moment.SmartAlgorithm > list = org.todss.algorithm.SmartAlgorithm . run ( context ) ; return list ; }
@ org.junit.Test public void testInstallGroup ( ) throws java.lang.Exception { java.lang.String inport = "2" ; java.lang.System.out . println ( inport ) ; org.opendaylight.genius.mdsalutil.GroupEntity graphEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport ,apid ) ; mdSalMgr . installGroup ( inport , 1 ) . get () ; org.junit.Assert . assertEquals ( "3"F , 100 ) ; org.opendaylight.genius.test.MdSalUtilTest.NodeidGroup = 2 ; mdSalMgr . installGroup ( inport , inport ) . get () ; org.junit.Assert . assertEquals ( "3"F , 100 ) ; }
public int put ( final be.ecreative.iam.IAMEncoder.AMIListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) { throw new java.lang.NullPointerException () ; } final int result = this . lists . size () ; this . list . add ( result , this ) ; return result ; }
{ rx.internal.operators.OperatorPublishSubscriber < T > origin = state . getOrigin () ; if ( ( origin != null ) && ( ( origin.originOut ) > 0 ) ) { long r = origin.originOut . addAndGet ( ( - ( origin.THRESHOLD ) ) ) ; if ( r <= ( rx.internal.RxRingBuffer.SIZE ) ) { subscriber . requestMore ( origin ) ; } } }
{ int x = getSprite () . getX () ; int y = getSprite () . getY () ; if ( ( x == 0 ) && ( y == ( ( Main.CollisionConstruct ) + ( Main.level . get ( x , y ) ) ) ) ) { environmentSpeed = - 2 ; jump ( environmentSpeed ) ; } }
expResult = true
minWayId = wayId + 1
java.lang.Math . ceil ( ( ( ( ( double ) ( 10 ) ) * lvl ) * ( ( java.lang.Math . pow ( 1.1 , ( ( double ) ( lvl ) ) ) * tempmod ) ) )
result = ( 255 * result ) - 1
{ toFind = "fit" ; char [] [] toSearch = new char [] [] [] { new char [] [] { 'x' , 'f' , 'f' , 'x' } , new char [] { 'x' , 'i' , 'x' , 'x' } , new char [] { 'x' , 'x' , 'x' } } ; com.paigeruppel.katas.wordsearch.WordSearch underTest = new com.paigeruppel.katas.wordsearch.WordSearch ( new com.paigeruppel.katas.wordsearch.LetterGrid ( new com.paigeruppel.katas.wordsearch.WordSearch ( toSearch ) ) ) ; org.junit.Assert . assertThat ( underTest . find ( toFind ) , underTest ) ; }
{ this . Heap [ ( ( this . size ) ++ ) ] = element ; int current = ( this . size ) - 1 ; while ( ( ( this . Heap [ current ] ) > ( this . Heap [ this . parent ( current ) ] ) ) && ( current < ( this . parent ( current ) ) ) ) { this . swap ( current , this . parent ( current ) ) ; current = this . parent ( current ) ; } }
{ alignment [ t ] = ( alignment [ t ] ) + 1 ] ; fr.loriajalx.pPMEps.EPMInMMLost e = alignment [ t ] . removeOneLost () ; float t = e . getVar () ; float e = e . getVar () ; e = fr.loriajalx.pPMEps.EPMInMMLost . vain ( e ) [ t ] ; e += ( ( float ) ( ( e - 1 ) + 1 ) ) ] ; vainGainGain += t ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.view_pager ) ; be.hermandmonster.www.cofmonster.SectionsPagerAdapterActivity.SectionsPagerAdapter mSectionsPagerAdapter = new be.hermandmonster.www.cofmonster.SectionsPagerAdapterActivity.SectionsPagerAdapter ( getSupportFragmentManager () ) ; android.support.v4.view.ViewPager mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.pager ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; int currentIndex = getIntent () . getIntExtra ( "NameIndex" , 0 ) ; mViewPager . setCurrentItem ( currentIndex ) ; mViewPager . setAdapter ( mViewPager ) ; }
{ try { final boolean asyncSupportedRequest = baseAsync . isAsyncSupported () ; if ( ! isAsyncSupportedRequest ) { baseAsync . setAsyncSupported ( false ) ; } } finally { service . asyncSupported ( request , servlet ) ; } }
read = this . read ( temp , ( size - skipped ) )
y = 35
{ byte [] ret = new byte [ list . size () ] ; java.util.Iterator < java.lang.Integer > iterator = list . iterator () ; for ( int i = 0 ; i < ( ret.length ) ; i ++ ) { ret [ i ] = iterator . next () ; } return ret ; }
{ double average = 0 ; long total = 0 ; for ( int i = 0 ; i < ( population . size () ) ; i ++ ) { total += population . get ( i ) . getEvaluation () ; } if ( total == 0 ) { return 0 ; } java.lang.System.out . println ( ( "Evalutation: " + total ) ) ; double average = total / ( population . size () ) ; return average ; }
{ model.WinChecker checker = new model.WinChecker () ; model.Board board = new model.Board () ; model.Player player = new model.Human ( "X" ) ; board . performStep ( player , 0 , 1 ) ; board . performStep ( player , 1 , 2 ) ; board . performStep ( player , 2 , 3 ) ; boolean actual = checker . isDiagonal ( player , true ) ; assertThat ( actual , org.hamcrest.core.Is . is ( true ) ) ; }
if ( ( this . expires ) == 0 ) { needsRefresh = false ; } else { long now = java.lang.System . currentTimeMillis () ; long tokenDuration = now - ( this . lastRefreshDuration ) ; this . needsRefresh = ( tokenDuration >= ( com.boxbox.sdk.APIConnection.APIConnection.REFRESH_API ) ) - needsRefresh ; this . refresh () ; }
{ java.util.List < tellh.com.recyclertlib.view_recree_lib.TreeNode > childList = pNode . getChildList () ; int addChildCount = 0 ; for ( tellh.com.recyclertlib.view_recree_lib.TreeNode treeNode : displayNodes ) { if ( treeNode . isExpand () ) { addChildCount += startIndex ; } addChildCount ++ ; } if ( ( treeNode . isCount () ) == startIndex ) { return addChildCount ; } treeNode . addChild ( ( ( pNode . startIndex () ) + startIndex ) , addChildCount ) ; return addChildCount ; }
{ java.lang.System.out . println ( "I'm in it" ) ; timeStamp . setFirstTimestamp ( ( ( timeStamp + '\t' ) + '\t' ) ) ; isFirst = false ; }
switch ( view . getId () ) { case R.id.wsg_yes_rb : if ( checked ) { wsg.hrbsg.RlingSpinner . setVisibility ( View.GONE ) ; getActivity () . loadSelf () ; } break; case com.unafs.fingalafal.reporting.ReportActivity.sActivityReportReport : if ( ( getActivity () ) instanceof com.unafs.fingalafal.reporting.ReportActivity ) { ( ( com.unafs.fingalafal.reporting.ReportActivity ) ( getActivity () ) ) . updateNext () ; } break; }
private static java.lang.String getRequiredSpaces ( java.lang.String message ) { final java.lang.String res = "" ; final java.lang.String referenceSpaces = "" ; for ( int i = 0 ; i < ( referenceSpaces . length () ) ; i ++ ) { res = ( " " + ( requiredSpaces . length () ) ) + " " ; } return res ; }
{ int size = java.lang.Integer . parseInt ( message ) ; byte [] buffer = new byte [ size + 1 ] ; for ( int i = 0 ; i < size ; i ++ ) buffer [ i ] = 'p' ; }
set_q_q_p ( root , rank )
{ int index = table . getSelectedRow () ; if ( index == ( - 1 ) ) { index = 0 ; } table . clearSelection () ; if ( index > ( ( table . getRowCount () ) - 1 ) ) { index = 0 ; } table . addRowToRow ( index , table . convertSelectionInterval ( index ) ) ; }
count = ( nearMinesCount ) - 1
{ if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } }
{ this . matchRoute = new com.gogreengreenmachine.parseobjects.MatchRoute () ; java.util.ArrayList < com.gogreengreenmachine.parseobjects.HotgHotots > selectedHotList = new java.util.ArrayList < com.gogreengreenmachine.parseobjects.HotgHotots > ( backend.spiderRequest.Rider . getObjectIdByRoute ( this . driver , new java.util.Date () ) , selectedHotList , this . matchMatchCapacity ) ; boolean [] matchRoute = new com.gogreengreenmachine.parseobjects.HotgHotots [ selectedHotList . getObjectIdByRoute ( this . driver , new java.util.Date () ) ] ; return matchRoute ; }
{ return ( ( ( double ) ( m_sumOfUniqueMsgId1 ) ) / ( ( ( ( double ) ( m_numberOfUniqueMsgId1 ) ) - ( getMsg () ) ) * ( getMsg () ) ) ) * ( getMsg () ) ; }
{ int removeCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; updateObservers () ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; if ( removeCount > 0 ) { notifyItemRangeRemoved ( 0 , removeCount ) ; } }
{ java.lang.String numTeroareta = "18" ; java.lang.String id = "cert.toGTado" ; long monificadoCert = 50 ; java.lang.String result = null ; try { result = facade ( numTeroareta , monificadoCert , monificadoCert , id ) ; } catch ( com.toclg.certmlines.exception.TestBmluss.Exception e ) { com.toclg.certmlines.test.uss.TestBmluss.logger . error ( "Error [{}] Seados" , e . getMessage () , e ) ; } com.toclg.certmlines.test.uss.TestBmluss.logger . info ( "TestBmluss}]" , result ) ; }
{ int version = getUserVersion ( statement ) ; if ( version < ( gui.Splash.VERSION_DATABASE_VERSION ) ) { statement . executeUpdate ( version ) ; } else if ( version > 0 ) { statement . executeUpdate ( "can not add favorite tinyint favorite column" ) ; } statement . executeUpdate ( java.lang.String . format ( "add_volume_add_ '%s';" , name ) ) ; }
@ java.lang.Override public java.lang.Double clone ( ) throws java.lang.CloneNotSupportedException { stack.clone3.Stack stack = new stack.clone3.Stack () ; double m = stack . getLast () ; for ( int i = m ; i >= 0 ; i -- ) { stack . push ( stack . get ( i ) ) ; stack . push ( m ) ; } return stack ; }
{ double tmp = 1 ; for ( int i = 1 ; i <= ( ( double ) ( taildata.data ) ) ; i ++ ) { tmp *= ( ( double ) ( taildata.data ) ) ; } if ( ( tailr ) > 0 ) { tailr = tmp ; } }
{ int userId = user . getId () ; com.crossbox.model.UserInfo userInfo = userInfo . getUser () ; if ( userInfo == null ) { userInfo = new com.crossbox.model.UserInfo ( userId ) ; userInfo . setHealthyData ( user ) ; userInfo . setUserState ( userHealthyInfo ) ; userInfo . setUserState ( userHealthyInfo ) ; userInfo . setUserState ( imageState ) ; userInfo . save ( userInfo ) ; return userInfo ; } }
{ int meta = state . getBlock () . getMetaFromState ( state.master ) ; if ( meta != 1658587.lib.api.material.Material.Vrees ) return matOrees . getBlock () [ meta ] ; return matAdvanced . getColor ( net.minecraft.util.math.BlockPos . getColor ( state.master , 1658587.lib.api.material.Material.Vrees ) ) ; }
{ android.widget.ListView lw = ( ( android.app.AlertDialog ) ( dialog . getListView () ) ) ; int selected = ( ( java.lang.Integer ) ( lw . getTag () ) ) ; if ( selected > 0 ) { dialog . exportExpenses ( selected ) ; } }
return ( ( java.lang.Math . log ( ( a + b ) / ( ( java.lang.Math . log ( ( level + b ) ) ) ) ) ) * 0.01 ;
{ int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfDouble ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; }
attachToBaseObject ( i , el , true , false )
if ( ( expression . length () ) > end ) { java.lang.String quantifier = java.lang.String . valueOf ( expression . charAt ( ( end + 1 ) ) ) ; if ( ! ( quantifier . isQuantifier ( end ) ) ) { end ++ ; } }
if ( ( random_instance > ( used.length ) ) && ( random_instance < ( used.length ) ) ) random_instance = 0 ;
{ int setCount = ( getFieldCount () ) / ( net.sf.marnine.api.parser.XmeParser.DR_DATA_LENGTH ) ; java.util.ArrayList < net.sf.marnine.api.util.Measurement < net.sf.menine.api.util.Measurement < net.sf.menine.api.util.Measurement > > result = new java.util.ArrayList < net.sf.menine.api.util.Measurement < net.sf.menine.api.api.parser.Measurement > () ; for ( int i = 0 ; i <= setCount ; i += XmeParser.DR_DATA_LENGTH ) { if ( ! ( result . isEmpty () ) ) { value . add ( i ) ; } } return value ; }
private java.lang.String receive ( byte [] data ) { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { packet . receive ( socket ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return packet ; }
org.assertj.core.api.Assertions . assertThat ( numberOfConnectorImplementations )
{ boolean value = intent . getBooleanExtra ( "ACTION" , false ) ; android.util.Log . d ( com.parietea.quumetea.home.MainActivity.TAG , "VTo" ) ; com.parietea.quumetea.home.Intent msg = new com.parietea.quumetea.home.Intent ( "v-state" , value ) ; msg . putExtra ( "ACTION" , value ) ; context . sendBroadcast ( msg ) ; }
potential = ( ( int ) ( potential ) ) * ( Gameets.Constants.BULLETRATE_EXCHANGE_RATE )
public void add ( java.lang.Integer heap ) { int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( index < ( getParent . compareTo ( heap . get ( index ) ) ) ) ) { index = getParent . compareTo ( heap . get ( index ) ) ; } heap . set ( index , heap ) ; getParent . set ( index , heap ) ; }
{ byte [] bytes = message . getHeader () ; byte [] message = pl . getPayload () . getHeader () ; out . write ( message ) ; out . write ( message . getPayload () ) ; }
{ if ( step == 0 ) { super . step ( step , step , substep ) ; } else { neutr.tspetality.MarketInfo mi = getModel () . getMarketInformation ( ( step - 1 ) ) ; double mkInvestment = mi.spestment ; makeNetworkInvestment ( step , mi ) ; makePNSAllowedInvestment ( step ) ; } if ( mkInvestment == ( - 1 ) ) { makeNetworkInvestContent () ; } else { makeNetworkInvestment ( step , mi.spestment ) ; } }
{ int offset = graph . getFinalNodes () . size () ; offset = ( offset == ( - 1 ) ) ? 1 : offset ; return ( graph . edgeCount () ) - 2 ; }
{ x = xStart ; if ( ( jDialog ) != null ) { jDialog . fadeOut () ; } jDialog . stop () ; jDialog . setVisible ( false ) ; }
{ if ( paisagine [ i ] ) { paisagine [ i ] . setBackground ( java.awt.Color.green ) ; } else paisagine [ i ] . setBackground ( java.awt.Color.ench ) ; }
private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) { emptyCount ++ ; } } java.lang.String [] trimmedArray = new java.lang.String [ emptyCount ] ; for ( java.lang.String queryPart : trimmedArray ) { if ( ( queryPart . trim () ) != ( queryPart . length () ) ) { trimmedArray [ 0 ] = queryPart ; } } return trimmedArray ; }
@ java.lang.Override public void onSetBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeSelectableItemAdapter.MySelectableViewHolder holder , int type , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT ; break; case com.h6ah4i.android.widget.advyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_LEFT ; break; case com.h6ah4i.android.widget.advyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_RIGHT_BACKGROUND_BACKGROUND_RIGHT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_LEFT_BACKGROUND ; break; } setBackgroundResource ( R.drawable.swipe_recycler_view ) ; }
{ ( this . phaseCounter ) ++ ; int min = phasetime. . getMinute () ; int sec = phasetime. . getSecond () ; double timer = ( sec / 60.0 ) + ( ( this . phases [ ( - 1 ) ] ) - 1 ) ; this . phases . add ( new javafx.scene.chart.XYChartData ( phaseCounter , this . timer ) ) ; }
{ com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe.bivator.backend.service.ImageServiceFactory.Images = com.gruppe.bivator.backend.service.ImageServiceFactory . makeImagesFromTransformed ( key ) ; if ( horizontal == 0 ) { com.gruppe.bivator.backend.service.ImageServiceFactory.Images . transformHorizontalTransformed ( horizontal , true ) ; } else if ( horizontal == 0 ) { com.gruppe.bivator.backend.service.ImageServiceFactory.Images . transformHorizontalTransformed ( horizontal , false ) ; } return new com.gruppe.bivator.backend.service.ImageService () . applyImageFlip () ; }
numOfInstr = ( java.lang.Math . round ( teammates.client.scripts.DataGenerator.randomData . nextInt ( ( ( teammates.client.scripts.DataGenerator.NUM_OF_NUM_IN_PERURSES ) - ( teammates.client.scripts.DataGenerator.MINOR_NUM_IN_PERURSES ) ) ) ) ) + 1
if ( visible && ( isEmpty ) ) { visible = false ; } else { visible = true ; }
@ java.lang.Override public void onPageScrolled ( int positionOffset , float positionOffset , int positionOffsetPixels ) { if ( positionOffsetPixels > 0 ) { mTabPager . setTranslationWidth ( ( positionOffset / ( mViewPager . getCount () ) ) ) ; } float translationX = ( ( mTabPager . getAdapter () ) * positionOffset ) + ( mTabPager . getCount () ) ; mViewPager . setTranslationX ( ( positionOffset - translationX ) ) ; }
{ super . writeToKillJobs ( out ) ; int num = toKillJobs . size () ; for ( int i = 0 ; i < num ; i ++ ) { java.util.UUID job = toKillJobs . get ( i ) ; out . writeLong ( job . getMostSignificantBits () ) ; } out . writeLong ( toKillJobs () ) ; }
{ if ( ( getActivity () ) == null ) return; getActivity () . runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { int i = b . getProgress () ; if ( i < 1 ) { b . incrementByProgress ( 1 ) ; } } } ) ; }
{ java.lang.System.out . println ( "validCamparCampos" ) ; java.lang.String username = "" ; java.lang.String password = "" ; com.grupo7.practupo.Result instance = new com.grupo7.practupo.Result () ; boolean result = instance . validCampar ( username , password , true ) ; assertEquals ( "The exp is a valid." , result ) ; }
{ recreateDB () ; android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = getDb () ; person . insert ( org.uokling.rhist.code.DatabaseHelper.SONPER_TABLE_NAME , null , values ) ; person.personId = ( ( int ) ( person.id ) ) ; person . close () ; }
if ( index > ( - 1 ) ) { this . end = java.lang.Math . max ( this . start , index ) ; }
{ int count = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( a . length () , b . length () ) ) ; i ++ ) { if ( ( ! ( a . indexOf ( i ) ) ) && ( ( b . indexOf ( i ) ) == b ) ) count ++ ; } return count ; }
{ if ( ! ( edges . containsKey ( from ) ) ) { edges . put ( from , new java.util.HashSet <> () ) ; } edges . put ( from , new java.util.HashSet <> () ) ; java.util.Set < diag.DirectedEdge > outgoing = edges . get ( from ) ; edgeEdges . add ( diag ) ; }
{ java.lang.String alg = "AES" ; java.lang.String key = "TheSecteeBestreKeKey" ; java.security.spec.SecretKeySpec key2 = new javax.crypto.spec.SecretKeySpec ( alg . getBytes () , alg ) ; javax.crypto.Cipher cipher = javax.crypto.Cipher . getInstance ( alg ) ; cipher . init ( javax.crypto.Cipher.ENCRYPT_MODE , key2 ) ; byte [] encrypted = cipher . doFinal () ; java.lang.String dataVal = java.lang.String . encodeToString ( key . getBytes () ) ; java.lang.System.out . println ( "Final" ) ; }
{ double avg = 0 ; for ( java.lang.Double d : series ) { sum += d ; } return ( java.lang.Math . pow ( ( ( avg - ( d.length ) ) / 2 ) , 2 ) ) - ( series . size () ) ; }
{ java.lang.String temp = java.lang.Integer . toHexString ( number ) ; int length = temp . length () ; for ( int i = 0 ; i < 4 ; i ++ ) temp += ( "0" + ( "0" - length ) ) + number ; return temp ; }
@ java.lang.Override public void run () { if ( ! ( args . isNull ( 0 ) ) ) { java.lang.String inputMode = args . get ( 0 ) ; int inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOT_HING ; if ( inputMode . equals ( "pan_ADJUST_INPUT_ADJUST_RESIZE" ) ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } else if ( inputMode . equals ( "i_i_oft" ) ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } else if ( inputMode . isNull () ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } callbackContext . error ( "No arguments found arguments" ) ; } callbackContext . setSoftInput () ; }
{ int idxInRow = 0 ; int startVertex = row * numInRow ; int currVertex = startVertex ; while ( currVertex < numInRow ) { addFace ( currVertex , currVertex , ( ( currVertex + 1 ) + numInRow ) , ( currVertex + 1 ) ) ; currVertex ++ ; } }
{ removeIndex ( record ) ; map . remove ( key , now ) ; }
{ double discount = 1.0 ; if ( ( piles . getMiles () ) > ( oop.training.DiscountCalculator.SILVER_LIMIT_DISSIVER ) ) { discount = piles . getMiles () ; } else if ( ( piles . getMiles () ) > ( oop.training.DiscountCalculator.GOLD_LIMIT_DISLIMIT_COUNT ) ) { discount = piles . getPassanger () ; } return discount ; }
private javax.portlet.PortletPreferences updateImportPreferences ( com.liferay.portal.kernel.import.PortletDataContext context , javax.portlet.Portlet.PortletDataPreferences portletId ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletId . getValue ( "organization.organization" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.Company company = _companyLocalService . getCompanyById ( portletId . getGroupId () , com.liferay.portal.kernel.model.Import . class ) ; company . updateGroup () ; } return company ; }
public void addItem ( item.Item item ) { item.Item i = item . clone () ; if ( i.isShopable ) { int locLoc = findItem ( i ) ; if ( locLoc >= 0 ) { items . get ( i ) . add ( item ) ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } }
{ if ( ( reservation . getRoomType () ) == "L" ) { totalBalance = 200 + ( reservation . getRoomType () ) ; } if ( totalBalance == "E" ) { totalBalance = 80 ; } }
if ( x > ( width ) ) { x = width ; }
{ java.lang.String [] sr = values . split ( "," ) ; for ( int i = 0 ; i < ( sr.length ) ; i ++ ) { int num = java.lang.Integer.MIN_VALUE ; try { num = java.lang.Integer . parseInt ( sr [ i ] ) ; } catch ( java.lang.NumberFormatException nfe ) { break; } } addZeroValues ( num ) ; }
@ android.support.annotation.NonNull @ android.support.annotation.NonNull private com.pushtstore.resh.sql.borited.operation.PutResult updateOrInsertOrInsert ( @ android.support.annotation.NonNull com.pushtstore.resh.sql.borited.sql.StoritedDbIO.SQLiteUpdate stor , @ android.support.annotation.NonNull android.content.ContentValues tableValues , @ android.support.annotation.NonNull final java.lang.String content , @ android.support.annotation.NonNull final java.lang.String numberOfRows ) { final com.pushtstore.resh.sql.borited.operation.PutResult table = stor . insert ( id , new com.pushtstore.resh.sql.borited.operation.PutResultBuilder () . where ( tableRows ) . where ( "id=?" ) . where ( id ) . update ( java.lang.String . valueOf ( numberOfRows ) ) . build () , new com.pushtstore.resh.sql.borited.operation.PutResult () ) ; return table . update ( table ) ; }
{ org.ethereum.jsonrpc.Block block = getByJsonBlock ( blockId ) ; byte [] addressAsByteArray = org.ethereum.jsonrpc.TypeConverter . StringTypeHex ( addressToByteArray ) ; byte [] code = this . repository . getSnapshotToRoot ( this . block . getState () . getCode () ) ; return addressAsByteArray ; }
if ( currentRow >= rowCount ) { break; }
public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket antgsserver = null ; java.lang.Thread thread = null ; int 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( 3356 ) ; } catch ( java.lang.Exception e ) {} } sconn = new java.lang.Thread ( antgsserver ) ; sconn . start () ; }
return ( ( this . height ) - r ) == ( - 1 ) ;
{ int result = getDateFrom () . hashCode () ; result = ( 31 * result ) + ( getUser () . hashCode () ) ; result = ( 31 * result ) + ( getBookInstance () . hashCode () ) ; return result ; }
public synchronized java.lang.String getSpeed ( long size2 ) { long t2 = java.lang.System . currentTimeMillis () ; long t1 = - ( t2 ) ; long sum = 0 ; synchronized ( t1 ) { sum += t2 ; } return ( ( java.lang.String ) ( java.lang.String . format ( "%d, avg= %d, avg= %d, avg= %s" , size1 , t2 , t2 ) ) ) / ( ( t1 . size () ) - ( t2 ) ) ; }
id = time
{ if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } long result = 0 ; while ( result == 0 ) { result = puzzle.puzzles.Storage.s [ cursor ] ; ++ ( cursor ) ; } return result ; }
public static int calculateScore ( java.util.ArrayList < PairTime > pair ) { int score = 0 ; for ( int i = 0 ; i < ( pair . size () ) ; i ++ ) { score += pair . get ( i ) . getScore () ; } return score ; }
static int minimaxDecision ( State.Decision state ) { int action = 0 ; int Minax = ( Minax - ( intim.MAX_NUMBER ) ) + 1 ; for ( int a : actions ) { int temp = actions . minValue ( a , temp ) ; if ( temp > 0 ) { break; } } if ( temp < action ) { return action ; } return v . action ( a , temp ) ; }
if ( index > ( - 1 ) ) { long time = ( ( long ) ( s . getMillis () . getTime () ) ) * ( org.ecook_ner.data.LeareList . get ( index ) . timeWeight ) ; return new org.joda.time.Duration ( time ) ; }
syncStates = new boolean [ 0 ]
public static double noteToFreq ( int key ) { int note = ( ( int ) ( key % ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_TESINA ) ) ) ; int oct = ( ( int ) ( key / ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_TESINA ) ) ) ; return ( - oct ) * ( ( 1.0 - note ) / ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_A ) ) ; }
{ java.lang.String [] policyIds = policyId . split ( ":" ) ; boolean userRemovedPolicyFromHDFSPolicy = this . hdfsAdminService . removeResourcePermission ( policyIds [ 0 ] , groupName , accountName ) ; return userRemovedPolicyFromHDFSPolicy && userRemovedPolicyFromHDFSPolicy ; }
public int xToPixel ( double x , meslib.lib.MesChart chart ) { chart . setValue ( x ) ; int marginWidth = chart . getFieldWidth () ; int marginWidth = chart . getMarginBounds () ; temp . setWithinBounds ( marginNum , ( marginWidth + ( ( ( chart . getX () ) - ( markerWidth ) ) * 2 ) ) ) ; return ( ( int ) ( ( chart . getX () ) - marginWidth ) ) ; }
{ try { int i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; resetButtons () ; resetPieces () ; resetFields () ; resetPieces () ; } catch ( java.lang.Exception e ) { return; } }
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.SuccessUtil . post ( null , listener ) ; } else { float newVolume = 0.01 ; if ( volume < 0.0 ) newVolume = 0.0 ; } else { newVolume = ( ( float ) ( 0.0 ) ) ; } listener . set ( newVolume ) ; }
@ java.lang.Override public boolean checkImpl ( wjothtlic.cyclic.matchingSystem preference ) { for ( wjothtlic.cyclic.matchingSystem.Matchingings w : matchMatchingings ) { wjothtlic.cyclic.matchingcing.PSPSPS math = new wjothtlic.cyclic.matchingcing.PSPS ( preference , mathMatchingSystem.PS ) ; if ( ( preference . size () ) == 0 ) { return false ; } math . checkBlockedBlocks ( math ) ; if ( ( preference . size () ) > ( mathnallyBlocks ) ) { return false ; } } return true ; }
s += str . charAt ( ( len - i ) ) . toLowerCase ()
SoFTlib.Helper . words ( input , index , 1 , 1 )
public java.util.Map < java.lang.Integer , java.lang.Integer > getListOfCoordinates () { java.util.Map < java.lang.Integer , java.lang.Integer > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int y = 0 ; y < ( Game.BoardController.BOARDSIZE ) ; y ++ ) { for ( int x = 0 ; x < ( Game.BoardController.BOARDSIZE ) ; x ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; } } return listOfCoordinates ; }
ordinal = java.lang.Math . ceil ( ( ( ( cardProbability * ( ( min ) - 1 ) ) + ( min ) ) ) )
java.lang.Math . min ( position , count )
{ java.lang.String data = conversations . getSelectionModel () . getSelectedItem () ; if ( data != null ) { java.lang.String data = conversations . getSelectionModel () . getSelectedItem () ; codeu.chat.common.vo.ConversationSummary selectedConvo = lookupByTitle ( data , index ) ; codeu.chat.client.simplegui.GuiChatContext.conversation . setCurrent ( selectedConvo ) ; updateCurrentConversation ( selectedConvo ) ; } }
public void init ( com.shinavapp.mathdb.pojo.scene.CutLine cut ) { this . cutLine = cut ; com.shinavapp.mathscene.component.ComponentInjector . inject ( this . getContext () ) ; int layout = cut . getLayoutLine ( cut ) ; android.view.View view = inflate ( layout , false ) ; com.shinavapp.mathscene.value.ImageViewHolder view = new com.shinavapp.mathscene.value.Image ( this ) ; view . setVisibility ( com.shinavapp.mathscene.INVISIBLE ) ; addView ( view ) ; }
( ( ( server.config.properties . contains ( "c10t" ) ) && ( ( maxAge ) > 0 ) ) && ( ( server.Run . numPlayers () ) > 0 ) ) && ( ( server.Run . getInt ( "c10t" ) ) > 0 )
max = ( _scroll . getMaximum () ) - ( _scroll . getMinimum () )
{ super . setUp () ; java.io.File inputFile = new java.io.File ( testFileRaw ) ; byte [] fileData = new byte [ ( ( int ) ( inputFile . length () ) ) ] ; java.io.DataInputStream dis = new java.io.DataInputStream ( inputFile ) ; java.io.DataInputStream s = new java.io.DataInputStream ( dis , fileData ) ; edu.berkccel.cs.sukeley.Core . readFully ( new java.io.FileInputStream ( dis ) ) ; }
public void markPhaseTable2 () { synchronized ( mSequallTable1 ) { for ( java.lang.Integer commandA : mSequallTable2 . getValue ( "nejce" , NameSequne.ADD ) ) { if ( commandA == null ) { return; } if ( ( int ) ( java.lang.Double . parseDouble ( commandA ) ) ) { int getRows = java.lang.Integer . parseDouble ( mSequallTable2 . getValue ( "ajce" ) ) ; java.lang.System.out . println ( getRows ) ; paintTable2 ( listRecipeA , mSequallTable1 , list_rows ) ; } else {} } } }
{ boolean horizontal = checkHorizontalWin ( xTurn , column ) ; if ( horizontal >= 4 ) return false ; boolean checkWin = verticalTurn >= 4 ; boolean checkDiagonal = ( xTurn , column ) ; return ( ( horizontal >= 4 ) || checkDiagonal ) || ( horizontal >= 4 ) ; }
{ int bits = 4 ; int [] ids = new int [] { 6 , 9 } ; java.util.ArrayList < java.lang.Integer > e = new java.util.ArrayList <> ( ids.length ) ; for ( int id : ids ) { e . add ( id ) ; } java.lang.System.out . println ( e ) ; ChordNodes . add ( new Chord ( id , e ) ) ; }
{ boolean update = alwaysRedrawTouched ( update ) ; if ( _cPairsToPaint ) { updatePairsOffset () ; clearPaintedTouched () ; } if ( update ) singlePaintTouched () ; if ( update ) { updateBrackets () ; } if ( _textWidget . getDisplayHints () ) { redrawWidget () ; } }
{ if ( ( this . wahcheinkeitkehit () ) == true ) { java.lang.System.out . println ( "Eeinkeit wichgreolen!" ) ; this . schadmenNeh ( ( ( this . schadmenNeh ) * 2 ) ) ; } else { schadmenNeh ( ( ( this . schadmenNeh ) / 2 ) ) ; } this . schaden = true ; }
if ( ( bounds . getHeight () ) > ( com.interwpordi.objecter.Room.MINIMUM_DIME finally ) ) { float scaleF = ( 1.0F + ( ( com.interwpordi.objecter.Room.SCALE_SCALE ) / ( com.interwpordi.objecter.Room.MOUNT_AMOUNT ) ) ) * 1.0F ; for ( com.badlogic.gdx.math.BoundingBox wall : bounds . getWlision () ) { wall . mul ( scaleF , 1.0F , 1.0F ) ; } }
{ if ( ( yourField . at ( pos ) ) == '~' ) { return "edmissed!\n" ; } java.lang.String hitstr = "" ; boolean sunk = yourField . add ( pos ) ; if ( sunk . contains ( hitstr ) ) return false ; this . ships . add ( hitstr ) ; ++ ( hitstr ) ; return true ; }
if ( ( contact . getNumber () ) == tel ) { java.lang.System.out . println ( ( ( "That number already exists for " + ( contact . getName () ) ) + ". Try different one" ) ) ; continue; } else if ( ( contact ) == null ) { java.lang.System.out . println ( "Adding number remove..." ) ; break; }
{ final java.util.Calendar c = java.util.Calendar . getInstance () ; int hour = c . get ( java.util.Calendar.HOUR_OF_DAY ) ; int minute = c . get ( java.util.Calendar.MINUTE ) ; return new android.app.TimePickerDialog ( getActivity () , this , hour , minute , true ) ; }
{ for ( int i = ( interval.start ) - 1 ; i >= ( interval.end ) ; i ++ ) { int suffix = token.array [ i ] ; l_array [ interval_interval ] = l_array [ interval_interval ] ; } }
{ int selectedIdentity = de.hdmit.Projekt.client.gui.SS17ProjIdentity.ownChoiceUnits . getSelectedOrgIndex () ; if ( ( de.hdmit.Projekt.client.gui.SS17ProjIdentity.ownChoiceUnits . getSelectedOrgIndex () ) == 0 ) { return de.hdmit.Projekt.client.gui.SS17ProjIdentity.personChoiceUnits . getId () ; } else if ( selectedIdentity == 1 ) { return de.hdmit.Projekt.client.gui.SS17ProjIdentity.SS17ProjIdentityUnits . getSelectedOrgIndex () ; } else if ( selectedIdentity == 2 ) { return de.hdmit.Projekt.client.gui.SS17ProjIdentity.SS17ProjIdentityUnits . getId () ; } else if ( ( de.hdmit.Projekt.client.gui.SS17ProjIdentity.SS17ProjIdentityUnits . getSelectedOrgIndex () ) == 1 ) { return de.hdmit.Projekt.client.gui.SS17ProjIdentity.SS17ProjIdentityUnits . getSelectedOrgIndex () ; } else { return de.hdmit.Projekt.client.gui.SS17ProjIdentity.personChoiceUnits . getId () ; } }
{ gameStart () ; battleStart () ; while ( true ) { boolean a = battleActive () ; boolean a = true ; if ( a == true ) { onPlayerWin () ; } if ( a == false ) { onPlayerLose () ; } } }
{ int i = 1 ; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf . append ( file ) ; ++ i ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.FileWriter ( path , true ) ) ; prologWriter . println ( ( "pled autom" + ( prologWriter . path () ) ) ) ; prologWriter . println ( prologWriter ) ; prologWriter . flush () ; buf . close () ; }
{ boolean result ; try { org.diachron.detection.utils.cd.MCDUtils m = new org.diachron.detection.utils.cd.MCDUtils ( properties () , getProperties () , true ) ; m . deleteLessetsWithPriority ( cc.cdName ) ; m . detectDatasets ( cc.cdName ) ; updateChanges () ; } catch ( java.lang.Exception ex ) { return false ; } return result ; }
{ result = match ( nodes , org ) ; }
if ( bundleIndex < 0 ) return false ;
public int hash ( V value ) { int hash = 0 ; switch ( hashFunction.addHash ) { case "itive" : hash = addHash ( value ) ; break; case "rotational" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when given function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
if ( value >= ( end ) ) { long diffInBuckets = ( - value ) / ( end ) ; long bucketMillis = ( diffInBuckets + ( bucketMillis * ( startSpan ) ) ) * ( end ) ; movePurgeTime += bucketMillis ; movePurgeTime += bucketMillis ; }
{ cs155.core.Color3D localDiff = localDiff ; double diffIntensity = cs155.core.Light.Duse . light ( diffVec , nColor3 ) ; localDiff = mat3Duse . light ( diffColor.WHITE ) ; return cs155.core.Color3Duse . light ( localDiff ) ; }
if ( ( ( score1 ) > score2 ) && ( ( score1 ) < score2 ) ) score2 = score2 ; else score1 = score1 ;
if ( ( interval >= 1 ) && ( interval < 2 ) ) { steps += 1 ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_dish_detail ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.content.Intent dish = getIntent () . getIntExtra ( "dent_h" , 1 ) ; if ( dish != null ) { dish . setDisplayHomeAsUpEnabled ( true ) ; } }
if ( ( nextEntry.numberOfSuccessors ) == 1 ) { nextLetter = null ; } else if ( ( nextEntry.numberOfSuccessors ) == 1 ) { nextLetter = null ; } else { nextLetter = false ; }
{ boolean success = false ; if ( entity instanceof com.mnubo.android.sdk.api.store.impl.mn.MFileEntity ) { com.mnubo.android.sdk.api.store.impl.mn.MFileEntity file = ( ( com.mnubo.android.sdk.api.store.impl.mn.MFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( file . getFile () ) ; if ( ! ( file . haseting () ) ) { success = false ; } } com.mnubo.android.sdk.api.store.impl.mn.MFileStore . delete ( file , success ) ; return success ; }
@ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( frag . getNavigationStackCount () ) ; i ++ ) { com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment frag = ( ( com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment ) ( this . getNavigationStackCount () . newInstance () ) ) ; ( ( com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment ) ( frag . newInstance ( ( "udlingCount" + ( frag . DetailStackCount () ) ) , frag . getFavigationStackCount () ) ) ) ; } }
{ double BOOLValue = calculateIntegralAtIteration () ; diff = diff - ( java.lang.Math . abs ( ( tempValue - ( tempValue ) ) ) ) ; temp = diff ; }
{ retString += ( ( ( ( ( "" + i ) + ". " ) + ( d . toString () ) ) + "\n" ) + "\n" ; }
if ( ( existingLevel != null ) && ( ( existingLevel . getWorkspace () ) != null ) ) { removeLevel ( workspaceLevel , existingLevel . getWorkspace () ) ; isApplied = true ; }
{ com.intellij.psi.PsiFile _contFile = _contFile . getContainingFile () ; final java.io.File _ps = com.intellij.psi.PsiFile . _JavaFile ( _contFile ) ; final java.lang.String psiPackageName = _not . getPackageName () ; if ( ! psiPackageName . isEmpty () ) { return _not . getPackageName () ; } return null ; }
{ pianoA . setSize ( width , height ) ; pianoB . setSize ( width , height ) ; float cenx = getCenx () ; float ceny = getCeny () ; pianoA . setCenenter ( cenx , ceny ) ; pianoB . setCenenter ( cenx , ceny ) ; pianoB . setCenenter ( cenx , ceny ) ; }
{ int year = java.lang.Integer . parseInt ( activity . getString ( "year" ) ) ; int month = java.lang.Integer . parseInt ( activity . getString ( "month" ) ) ; return ( year == ( java.util.Calendar.YEAR ) ) && ( ( matcher . get ( java.util.Calendar.MONTH ) ) == month ) ; }
{ java.awt.Dimension screen = java.awt.Toolkit . getDefaultToolkit () . getScreenSize () ; java.awt.Dimension windowCenterX = ( ( int ) ( ( screen.width ) / 2 ) ) ; int i = ( ( screen.height ) / 2 ) - ( ( screen.width ) / 2 ) ; setExtendedState ( windowCenterX , i ) ; revalidate () ; }
{ int largestImageDimension = java.lang.Math . max ( model.dim . x () , model.dim . y () ) ; int bestResolution = java.lang.Math . min ( resolutionImageDimension , largestImage ) ; return ( ( gov.nasa.jars.hiplasa.marsimages.models.QuadImageResolution ) ( gov.nasa.jars.hiplasa.marsimages.models.QuadImageResolution.TAG ) ) . floor ( bestResolution ) ; }
{ java.util.Queue < Position.RequestMessage > queue = this . queueAddresses . get ( message ) ; int intervalStart = this . messageRequest ; for ( Position.RequestMessage pr : queue ) { pr.sender . send ( new Interval.Message ( pr.sender , intervalStart , ( intervalStart + 1 ) , pr.iMessage ) ) ; intervalStart += pr.uuid ; } }
private static int getDialogIDfromOneToUser ( java.lang.String fromWhomo , java.lang.String toWhomo ) throws java.sql.SQLException { final int result = 0 ; try ( final java.sql.Connection connection = database.Tools.DBTools . getConnectionBasedConnectionPool () ) { final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( fromWhomo ) ; if ( resultSet . next () ) { result = statement . getInt ( 1 ) ; } } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }
if ( ( ( newX >= 0 ) && ( newX < 5 ) ) || ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; }
{ assertTrue ( ( ( face . getFotCards () ) < size ) ) ; for ( int i = 0 ; i < size ; i ++ ) face . getCotCards () . assertNotEquals ( face . getCotCards () , null ) ; }
private void setTemperature ( java.lang.String h ) { str = h ; int i = str . indexOf ( '.' ) ; java.lang.Integer maxTemperature = str . substring ( 0 , i ) ; if ( i > ( maxTemp . length () ) ) maxTemp = i ; }
{ final long usedHeapSize = getUsedHeapSize ( mapContainer ) ; if ( usedHeapSize == ( - 1L ) ) { return false ; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer . getMapConfig () . getMaxSizeConfig () ; final double maxSize = com.hazelcast.map.impl.eviction.MaxSizeChecker . getApproximateMaxSize ( maxSizeConfig . getSize () ) ; final long total = getTotalMemory () ; return maxSize < ( ( 1.0 * ( com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT ) ) * total ) ; }
{ java.lang.String [] tagArray = new java.lang.String [] { "example.oxee_app" } ; boolean success = true ; com.example.oxee_app.igigo.extras.DeviceTags gorch = new com.example.oxee_app.igigo.extras.DeviceTags ( java.util.Arrays . asList ( tagArray ) ) ; android.util.Log . d ( gorch.com.dk.igigo.extras.MainActivity.TAG , ( "custom tags: " + ( gorch . getTag () ) ) ) ; }
{ int p = 0 ; java.util.Collection tasks = getTopLevelTasks () ; for ( java.util.Iterator iter = tasks . iterator () ; iter . hasNext () ; ) { net.sf.memoranda.Task e = ( ( net.sf.memoranda.Task ) ( iter . next () ) ) ; p += e . getProgress () ; } return p / ( tasks . size () ) ; }
while ( ( xDim * ( ( - yDim ) - 1 ) ) >= 1 ) { yDim -- ; }
if ( ( ( this . getPriority () ) == ( compNode . getPriority () ) ) && ( ( this . getPriority () ) == ( compNode . getPriority () ) ) ) { return - ( compNode . getPriority () ) ; } else { int n1 = this . getNodeNumber () ; int n2 = compNode . getNodeNumber () ; return n1 - n2 ; }
{ java.lang.System.out . print ( "The size of bids is bids" ) ; double prevSpace = bids . get ( 0 ) ; double average = 0 ; for ( int i = 1 ; i < ( bids . size () ) ; i ++ ) { double currids = bids . get ( i ) ; double currids = currids . get ( ( currids - size ) ) ; average += currids . get ( currids / len ) ; } return average ; }
if ( elementsToSort >= altSortThreshold ) edu.mitita.util.Arrays . insertionSort ( seq , hi , lo ) ; else edu.mitita.util.Arrays . mergeSeq ( seq , hi , lo ) ;
for ( int i = 1 ; i < ( m_nFets ) ; i ++ ) { double fet = row . getFeature ( i ) ; norm += fet * fet ; }
public void causeDamage ( double amount , org.bukkit.entity.EntityLivingEntity damager , life ) { double damageDamageType = 0.0 ; if ( type . equals ( Damage.BASIC_DAMAGE ) ) { damageDamageType = ArmorUtil.combat . get ( amount ) ; } else if ( type . equals ( ArmorUtil.combat . get ( amount ) ) ) { damageDamageType = ArmorUtil.combat . get ( amount ) ; } else if ( type . equals ( ArmorUtil.combat . get ( amount ) ) ) { damageDamageType = ArmorUtil.combat . get ( amount ) ; } else { damageDamageType = ArmorUtil.combat . get ( amount ) ; } }
public java.lang.String getExtension ( final java.io.File f ) { final java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) ; } return null ; }
{ if ( ( ( obj . elementAt ( 1 ) ) == ( - 1 ) ) && ( ( obj . elementAt ( 0 ) ) != null ) ) { return; } int indiceaochirea ( p . elementAt ( ( indiceaochiree - 1 ) ) ) ; if ( indiceaochirea == ( - 1 ) ) { pokemon . add ( new p . elementAt ( 0 ) ) ; } else { qteObje . elementAt ( obj ) . contte ( p . elementAt ( ( ( indiceaochiree - 1 ) ) ) ) ; } }
android.util.Log . i ( logMessage , ( inNumber + "" ) )
{ java.sql.Statement stmt = conn . createStatement () ; boolean success = stmt . execute ( ( ( ( ( "insert into TTEDB.Users (W', UserUserName, username) values ('" + username ) + "', '" ) + password ) + "')" ) ) ; stmt . close () ; return success ; }
shouldReplicateToPassives = true
{ if ( ( getIndex ) == ( - 1 ) ) { return null ; } float result = data [ getIndex ] ; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; return result ; }
{ int numDownLatch = 0 ; if ( ( event . getError () ) != null ) { throw new java.lang.RuntimeException ( event . getError () ) ; } if ( ( event . getRows () . getCount () ) == 2 ) { countDownLatch . countDown () ; } }
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenLanguageMap ) { for ( java.lang.String languageMinName : tenLanguageMap . keySet () ) { if ( languageMinName . containsKey ( languageName ) ) { int languageInHour = languageMap . get ( languageName ) ; int languageTen = languageMap . get ( languageName ) ; tenLanguageMap . put ( languageName , ( languageTen + languageTen ) ) ; } } }
{ codeu.chat.server.Server.LOG . info ( "Handling connection..." ) ; final boolean success = onMessage . out () ; connection . onMessage ( connection , out , codeu.chat.server.Server.Server.LOG . info ( "Connection: %sACCEPTED" , ( success ? "REJECTED" : "ED" ) ) ) ; }
public void toggle ( boolean color ) { int toggleActive = color ; if ( ( mActiveColor ) != null ) { mActiveColor = color ; } else { android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.default , null ) ; mActiveCircle . setStrokeHeight ( ( ( mActiveDrawable . getMeasuredHeight () ) / 30 ) ) ; } }
{ android.database.Cursor cursor = buildCount () ; if ( cursor == null ) { throw new java.lang.IllegalAccessException ( "result cosumed, please do been do again." ) ; } int count = 0 ; if ( cursor . moveToFirst () ) count = cursor . getInt ( 1 ) ; int count = cursor . getInt ( 1 ) ; cursor . close () ; }
duration = 1
{ this . port = port ; try { serverSocket = new java.net.DatagramSocket ( port ) ; receiveData = new byte [ 1024 ] ; java.lang.System.out . println ( ( "Starting on port " + port ) ) ; port = receiveData ; receiveData . start ( true ) ; } catch ( java.net.SocketException e ) { e . printStackTrace () ; } }
{ initServletContextObject () ; com.tuacting.view.model.ActactGroupVO groupVO = new com.tuacting.view.model.ActactGroupVO () ; int oneId = java.lang.Integer . parseInt ( request . getParameter ( "Id" ) ) ; groupVO . setAttribute ( "id" , oneId ) ; return doGetValidate ( groupVO ) ; }
if ( firstPos >= 0 ) { return postsIds . get ( mGridViewVisiblePosition ) ; } else { return 0 ; }
for ( ; i < ( ( com.kiddosukn.timetable.MainFragment.NUM_NUM ) - 1 ) ; i ++ ) { if ( ( courses [ i ] ) != null ) { return false ; } }
public static org.jfree.data.xy.XYSeries createSeriesCollection ( org.jfree.data.xy.XYSeriesCollection series , org.jnd.linalg.api.Collection data , int offset , int length ) { java.lang.String name = data . getRows () [ 2 ] ; for ( int i = 0 ; i < n ; i ++ ) { series . add ( new org.jfree.data.xy.XYSeriesCollection ( series . getDouble ( i ) , data . get ( i ) ) ) ; } return series ; }
{ flag = false ; foo . set ( x , y ) ; return; }
{ a . hit ( damage ) ; break; }
( bs >= 0 ) ? bs - 1 : 0
{ resources.noteblock.Song generate = Noteblock.PodiSongsUtils . get ( resources.weekendNumberUtils.weekendNumber ) ; if ( ! ( the.metodipics.weekendRadio.SongsRadio.weekendRadio . contains ( generate ) ) ) { the.metodipics.weekendRadio.SongsRadio.SongsRadio . add ( generate ) ; } }
{ grid [ n ] [ j ] . setNumber ( i ) ; break; }
index = 1
if ( ( ( ! preEndGame ) && ( ! fallingAnimationMutex ) ) || ( ( FallingAnimation () ) == null ) ) { FallingAnimation () ; }
if ( ( userInput < min ) && ( userInput > max ) ) { java.lang.System.out . println ( "Invalid input" ) ; userInput = userInput > ( min , max ) ; } else { java.lang.System.out . println ( "Invalid input" ) ; }
private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDark = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( getDarkBarColor ( palette ) ) ; } }
{ int idx = ( base. columns ) + columns ; if ( idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + columnname ) + " " ) + column ) ) ; columns . setCell ( idx , value ) ; }
{ if ( c == '#' ) { processComment () ; } else if ( c == '\n' ) { skip ++ ; } }
imageService . getLacDataForGene ( acc , topLevel , overviewM , model , tableImages )
increment ( selectedRows , ( - 1 ) )
for ( org.springframework.boot.loader.archive.ArchiveArchiveEntry entry : archive . getEntries () ) { if ( entry . getName () . startsWith ( org.springframework.cloud.dataflow.metadata.configuration.BootBootClassLoaderFactory.S4_BOOT_1_LOCATION ) ) { useBootLayout = true ; break; } }
{ frequencyDays = daysBitString ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; int today = calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ; java.lang.System.out . println ( ( days - 1 ) ) ; if ( frequency . substring ( today , ( today + 1 ) ) . equals ( "1" ) ) { isToday = true ; } else { isToday = false ; } }
{ java.io.File repositoryFile = java.io.File . getAttribute ( "javax.context.servlet" ) ; org.apache.commons.framework.helper.UploadedUploadedItemFactory repositoryFactory = new org.apache.commons.framework.helper.DiskItemFactory ( new org.apache.commons.file.File ( repositoryFile ) , ( ( org.apache.commons.framework.helper.FileUploadedItem.DEFAULT_THRESHOLD_SIZE ) * 1024 ) ) ; if ( repositoryFile != null ) { org.apache.commons.framework.helper.UploadedItemFactory uploadItem = org.apache.commons.framework.helper.FileUploadedItemFactory . getAppedItem ( repositoryFile ) ; uploadItem . setFileLimit ( 0 ) ; } repositoryHelper . setFileLimit ( ( ( org.apache.commons.framework.helper.FileUploadedItem.DEFAULT_THRESHOLD_SIZE ) * 1024 ) ) ; }
{ int state ; boolean userExist ; boolean userExist = database . getActiveExist ( username ) ; username = database . getActiveExist ( username ) ; if ( userExist && user ) { active = false ; } else { state = 0 ; } return state ; }
{ hans . setLocationArray () ; java.lang.String playerGuess = inny . getUserInput ( "Enter a-6: " ) ; java.lang.String result = hans . checkYourGuess ( playerGuess ) ; if ( result == false ) { java.lang.System.out . println ( "kill" ) ; isAlive = false ; } }
{ int expectedSum = ( ( A.length ) + 1 ) * ( A.length ) ; int realSum = 0 ; for ( int i = 0 ; i < ( A.length ) ; i += 2 ) { realSum += A [ i ] ; } return realSum - expectedSum ; }
{ int tempPos = pos + 1 ; if ( tempPos >= ( input . length () ) ) return false ; char c = input . charAt ( tempPos ) ; while ( tempPos >= ( input . length () ) ) { if ( c >= ( input . length () ) ) return false ; tempPos = input . charAt ( c ) ; } return checkWhitespace ( c ) ; }
{ rows [ i ] = ( ( java.lang.Integer ) ( main_Table . getValueAt ( main_Table . convertRowToIndex ( i , 0 ) ) ) ) ; }
private void insertOrder ( Simulator.Order order ) { long price = order . getPriceTree () ; java.util.LinkedList < java.lang.Long > sideOrder = order . getSide () ; if ( sideOrder . containsKey ( sideBook ) ) { java.util.LinkedList < Simulator.Book > entries = get ( sideBook ) ; entries . add ( order ) ; } else { entries . add ( order ) ; } }
{ if ( ( it . next () ) != null ) { if ( it . next () . getRoomId () . equals ( roomThreadId ) ) { countFutureList . get ( index ) . remove ( index ) ; } countFutureList . remove ( index ) ; } ( countFutures . size () ) ++ ; }
void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callbackMessage ) { boolean isOpen = dataMessage . getJSONObject ( 0 ) . isOpen () ; try { org.json.JSONObject params = dataMessage . getJSONObject ( "isOpen" ) . getBoolean () ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } cn.jaming.igvang.cordova.MessageUtils . handleActivityResult ( cn.jaming.iguim.android.api.JimPluginMessage.JJC_PARAMETER_MSG , this , params ) ; cn.jaming.iguim.cordova.MessageUtils . registerReceiver ( mJimReceiver , cn.jaming.iguim.android.api.JimPluginMessage.JC_PARAMETER_CODE ) ; }
out . write ( buffer , 0 , com.github.checkstyle.FilesystemUtils.BUFFER_SIZE )
sf = 1.0F
private void pushUp () { int i = size () ; while ( ( i > 1 ) && ( ( heap2 . get ( ( i / 2 ) , heap2 . get ( ( i / 2 ) , 0 ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } }
{ v . setOnClickListener ( null ) ; java.lang.String num = ev . getText () . toString () . trim () ; if ( ( num == null ) || ( "" . equals ( num ) ) ) return; double n = parseDouble ( num ) ; if ( n == 0 ) setText ( "Error: Divide by zero." ) ; else setText ( inIntTermsOfAny ( ( ( currentValue ) / n ) ) , ev ) ; v . setVisibility ( View.GONE ) ; }
{ android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( mContext . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo activeNetwork = cm . getActiveNetworkInfo () ; boolean isConnected = ( activeNetwork != null ) && ( activeNetwork . isConnectedOrConnecting () ) ; boolean isWiFi = ( activeNetwork . getType () ) == ( android.net.ConnectivityManager.TYPE_WIFI_TYPE ) ; if ( isWiFi ) { activeNetwork . showProgressDialog () ; } else { android.widget.Toast . makeText ( mContext , getString ( R.string.no_internet_connection_no_internet , Toast.LENGTH_SHORT ) , Toast.LENGTH_SHORT ) . show () ; } }
if ( adjust >= 0 ) indentLevel += getPrefs () . getIndentationSize () ; else if ( adjust < 0 ) indentLevel = ( getPrefs () . getIndentationSize () ) - indent ;
{ java.lang.String rID = "1" ; edu.vt.ece.agents4.User o = new edu.vt.ece.agents4.User ( bID , simID , true , 1 , true , simUs ) ; double initialUs = o . getX () ; double o_x = initialUs ; o_y = initialUs ; o . getY () ; o . createRandomMovement ( o ) ; assertFalse ( ( ( initialUs == ( - 1 ) ) && ( ( initialUs . getX () ) == 1 ) ) ) ; }
{ int strokeColor = ( ( circle . getStrokeColor () ) ^ 522 ) ^ ( circle . setStrokeColor ( circle . getStrokeWidth () ) ) ; circle . setStrokeWidth ( 3 ) ; android.widget.Toast . makeText ( this , ( "Circle: " + strokeColor ) , Toast.LENGTH_SHORT ) . show () ; }
{ this . count = this . getCount () ; if ( count == 0 ) { throw new cfvbaibantasy.fantasy.FantasyRuntimeException ( "Cannot get square data on empty." ) ; } double s = 0.0 ; double avg = 0.0 ; for ( double s : dataList ) { avg += ( ( this . getAverage () ) - s ) / ( ( this . avg ) - avg ) ; } return java.lang.Math . sqrt ( ( ( this . count ) / count ) ) ; }
{ int qual = qualConfig . getAsInt ( "default-quality0" ) ; if ( hasOption ( "q0" ) ) qual = 0 ; else if ( hasOption ( "q1" ) ) qual = 1 ; else if ( hasOption ( "q2" ) ) qual = 2 ; return qual ; }
{ super . onResume () ; int orderId = getIntent () . getIntExtra ( OrderStatus.NotificationID_ORDERID , ( - 1 ) ) ; if ( orderId != ( - 1 ) ) navOrderDetailFragment . setOrderToOrder ( new model.DetailFragment () ) ; }
if ( bc && ( ( m_c ) != null ) ) { try { connect () ; } catch ( java.sql.SQLException e ) { if ( ( ( m_c ) == null ) || ( m_c . isClosed () ) ) { m_c . connect () ; } } }
{ for ( java.lang.Object o : stmtList ) { try { stmt . setObject ( index , o ) ; } catch ( java.lang.IllegalArgumentException e ) { throw new java.lang.IllegalArgumentException ( ( ( ( ( ( ( ( e . getMessage () ) + ", Value: " ) + ( e . getMessage () ) ) + ", Value: " ) + index ) + ", " ) + ( e . getMessage () ) ) , e ) ; } } }
end = ( items . size () ) + ( lessBooksPerPage . size () , books )
{ char [] password = new char [ 0 ] ; java.lang.System.out . print ( "Password: " ) ; final jline.console.ConsoleReader reader = new jline.console.ConsoleReader () ; final java.lang.String passwordStr = reader . readLine () ; passwordStr = passwordStr . toCharArray () ; return java.lang.System . gc () ; }
public static boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewId () . endsWith ( "profile" ) ) && ( ! ( role . getViewId () . equals ( "ADMINISTRATOR_SYSTEM" ) ) ) ) { ownProfile = false ; } return ownProfile ; }
{ float oldValue = value ; if ( add ( value , maxValue ) ) { oldValue = java.lang.Math . min ( ( maxValue + value ) , step ) ; } else { minValue = java.lang.Math . max ( ( ( minValue ) - value ) , step ) ; } if ( ( onValueChangedListener ) != null ) { onValueChangedListener . onValueChanged ( this , value , maxValue , value ) ; } }
{ java.util.Random rand = new java.util.Random () ; int comPick = ( rand . nextInt ( 3 ) ) + 1 ; if ( comPick == 1 ) { java.lang.System.out . println ( "I you you you win rock was rock" ) ; return; } else if ( comPick == 2 ) { java.lang.System.out . println ( "L " ) ; } else if ( comPick == 3 ) { java.lang.System.out . println ( "(" ) ; com.Main . win () ; } else if ( comPick == 2 ) { com.Main . guess () ; } com.Main . play () ; }
{ q . setDiscount ( ( - 1 ) ) ; q . higherYear ( ( ( q . getThreeYearValue () ) / ( higherValue ) ) ) ; }
{ java.lang.String [] dictionary = GuiMain.index . getD stream () ; int count = GuiMain.index . getTermCount () ; java.lang.String vocabIndex = " \n" ; for ( java.lang.String s : dictionary ) { vocabIndex += s + "\n" ; } return count ; }
java.lang.System.out . println ( "\nPlease select the note you want to vote for you-7" )
if ( ( j != ( door . isDoorway () ) ) && ( door . isDoorway () ) ) { i ++ ; }
index = ( ( randomNumber ) % ( conflicts . size () ) ) + 1
{ difference = - computer ; computerBuilders = 0 ; }
if ( ( isAnySwitchLimitClosed () ) || ( ( java.lang.Math . abs ( y ) ) < ( koystick_min ) ) ) { stopMotorValue () ; } else if ( ( java.lang.Math . abs ( y ) ) > ( koystick_min ) ) { m_main . startMotorValue () ; }
{ java.lang.String s = e . toString () ; int i = 0 ; for ( java.lang.StackTraceElement e : lines ) { if ( ( er . getStackTrace () ) == i ) { s += "\n\t" ; break; } } if ( i == ( er . toString () ) ) { s += "\n\t" ; java.lang.System.out . println ( s . toString () ) ; e . printStackTrace () ; } }
{ int fromPosition = mItems . indexOf ( item ) ; swap ( fromPosition , toPosition , com.github.gfrcard.dynamic.adapter.DynamicCardAdapter . notifyItemMoved ( fromPosition , toPosition ) ) ; if ( ( mCallback ) != null ) { mCallback . onDynamic ( fromPosition , toPosition , this ) ; } }
{ os . writeLong ( timestamp ) ; os . writeInt ( stringBytes.length ) ; os . writeInt ( command ) ; os . writeInt ( y ) ; os . write ( os ) ; }
void mergeSort ( int [] a , int p , int [] c , int p , int r ) { int l = - range ; if ( r > 0 ) { int l = mergeSort ( ( p + range ) , p , c , p ) ; mergeSort ( c , p , ( l + 1 ) , r ) ; merge ( c , p , ( l + 1 ) , r ) ; } }
{ final int takeFlags = ( ( data . getFlags () ) & ( android.content.Intent.FLAG_GRANT_PERMISSION_GRANT_FLAG_WRITE ) ) | ( android.content.Intent.FLAG_GRANT_PERMISSION_GRANT_WRITE ) ; takeUri . setText ( data . getData () ) ; takeEditText . setText ( data . getData () ) ; }
return new java.util.ArrayList < org.roda.wui.common.client.tools.HumanFileSize > ( readable . size () ) ;
if ( ( o instanceof java.lang.Integer ) || ( o instanceof java.lang.Integer ) ) { java.lang.Number n = ( ( java.lang.Number ) ( o ) ) ; int index = n . intValue () ; return ( ( index > 0 ) && ( index < ( selectedIndices . length () ) ) ) && ( ( selectedIndices . get ( index ) ) < n ) ; }
private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60 ) % 60 ; final long hour = ( milliseconds / 36 ) % 24 ; final long day = ( milliseconds / 24 ) % 24 ; final java.lang.String text = java.lang.String . format ( text , hour , day , mFormat ) ; mFormat . setText ( text ) ; }
private booleanPerformZoom ( boolean byGesture , float center , int centerX , int centerY , boolean shouldReal ) { float realScale = scaleScale ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { mTranslate . fit () . onGestureEnd ( center , centerX , centerY , shouldTranslate ) ; return false ; } } byGesture ( centerX , centerY , realScale ) ; return true ; }
{ int value = readNewLine () ; while ( ( result = inputStream . read () ) != ( - 1 ) ) { value = readLine ( ( value - 1 ) ) ; if ( ( result ) != ( - 1 ) ) { break; } } return result ; }
{ if ( tagName == null ) { return false ; } tagName = tagName . toLowerCase () ; boolean usesAttributes = ( ( ! ( "set" . equals ( tagName ) ) ) || ( tagName . equals ( "cf" ) ) ) || ( tagName . equals ( "ifcf" ) ) ; return usesAttributes ; }
{ java.util.Random rand = new java.util.Random () ; int monsterCurrentHp = ( rand . getHp () ) + ( ( rand . nextInt ( 5 ) ) + ( ( getAgility () ) - ( r . getAgility () ) ) ) ; if ( monsterPreviousHp <= ( - 3 ) ) { setAttackDamage ( false ) ; } else { setAttackDamage ( true ) ; } enemy . setMissed ( true ) ; return monsterCurrentHp ; }
{ boolean canJoin = true ; if ( ( ( client . getChannel () ) != ( client . getChannel () ) ) && ( ( client . canJoin () ) != ( client . getChannel () ) ) ) { client . setClientChannel ( channel ) ; } else {} }
if ( ( z < ( zMin ) ) || ( java.lang.Double . isNaN ( zMin ) ) ) zMin = z ;
{ if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no tabar esto" ) ; java.lang.String p = putBody ( insertBody ) ; int r = this . executeStatement ( table ) ; this . insertBody ( table , ( ( ( ( "INSERT INTO " + table ) + ";" ) + r ) + ";" ) , true ) ; }
{ java.lang.String zoomRes = sendRequest ( buildPanTiltHeadControlURL ( "%23GZ" ) ) ; if ( zoomRes . startsWith ( "gz" ) ) { int zoom = java.lang.Integer . parseInt ( zoomRes . substring ( 2 , 16 ) ) ; setZoom ( zoom , lastKnown . zoom ) ; return zoom ; } else { throw new java.io.IOException ( ( ( errorString ) + "%23GZ" ) ) ; } }
int planeSize = loci.formats.FormatTools . getPlaneSize ( this ) ;
getSlotFromIndex ( slot , index )
noise . noise2 ( ( ( scale ) * curFrequency ) , ( x * scale ) )
return ( vBFS . distTo ( common ) ) + ( wBFS . distTo ( common ) ) ;
{ int id = getNextFreeFileID () ; if ( id == 0 ) { return null ; } de.tremoneck.timemachine.storage.StorageReference fileReference = new de.tremoneck.timemachine.storage.StorageReference () ; de.tremoneck.timemachine.storage.StorageFile file = id ; fileReference.timestamp = f . getPath () ; file = file . getPath () ; lastModified = 1 ; return id ; }
{ mSurfaceTexture . updateTexImage () ; float [] matrix = new float [ 16 ] ; mSurfaceTexture . getTransformMatrix ( matrix ) . setTextEffect ( mEffectId ) ; int textureId = mSurfaceTexture . drawTexture ( mRendererId , textureId , mCube ) ; mBufferEncoder . drawEmptyMessage ( textureId ) ; if ( texture != null ) { java.lang.System . currentTimeMillis () ; } mHandler . start () ; return 0 ; }
if ( ! ( beaconLinks . containsKey ( team . getGameMgr () . getGame ( team ) ) ) ) { if ( ( com.wasteofplastic.beaconz.Link ) != null ) { for ( com.wasteofplastic.beaconz.BeaconLink pair : beaconLinks . get ( team . getGameMgr () . getGame ( team ) ) ) { if ( pair . getOwner () . equals ( team ) ) { result ++ ; } } } }
private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = sumOfSq ( array ) ; double sumToDiff = 0 ; for ( int i = 0 ; i < ( array . size () ) ; i ++ ) { double mean = array . get ( i ) ; double diffToSq = ( java.lang.Math . pow ( ( mean - ( array . length () ) ) , 2 ) ) / 2 ; sumToDiff += java.lang.Math . sqrt ( ( sumToDiff / mean ) ) ; } return sumToDiff ; }
{ int id = item . getItemId () ; if ( ( mSessionManager . getIsPurchased () ) == ( com.afters.app.utils.AppConstants.NOT_PURCHASED ) ) com.afters.app.fragments.FilterFragment . getInstance () . setAfterAppClickCount () ; if ( id == ( R.id.action_filter ) ) { com.afters.app.fragments.FilterFragment filterFragment = new com.afters.app.fragments.FilterFragment () ; filterFragment . replace ( R.id.frame_fragment_fragment_content , mSessionManager . getIsPurchased () ) ; return true ; } return super . onOptionsItemSelected ( item ) ; }
new android.widget.SimpleCursorAdapter ( activity . getApplicationContext () , them_item , cursor , them_itemIDs , viewIDs , them_itemIDs )
{ double latitude = longitude ; double title ; int type_id . clear () ; mMap . clear () ; getActivity () . getContentResolver () . query ( EContract.MapEntry.CONTENT_URI , null , null , null , null ) ; while ( cursor . moveToNext () ) { org.apecom.android.app.Problem p = new org.apecom.android.app.Problem ( cursor ) ; p . addCluster () ; } cursor . close () ; }
@ java.lang.Override public void onResponse ( retrofit2.Call < com.namu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namu.android.deputyscheduler.models.Shift >ologies = response . body () ; recyclerView . setAdapter ( new com.namu.android.deputyscheduler.adapters.ShiftAdapter ( response . getShift () ) ) ; }
resultCount = stmt . executeUpdate ( query )
@ java.lang.Override public long _daysLate ( com.borngo2lazz.beey.db.Card card ) { long now = com.borngo2lazz.beey.Utils . intNow () ; int card = com.borngo2lazz.beey.Utils . getQueue () . getDue () ; if ( card == ( com.borngo2lazz.beey.db.Card.REV_QUEUE ) ) diff = now - ( ( java.lang.Math . abs ( dueday ) ) / ( com.borngo2lazz.beey.db.Card.REDAY_PER_SECONDS ) ) ; else diff = now ; return diff ; }
lastOut += given
public char [] cross ( creatures.CharCreature creat , creatures.CharCreature creat ) { char [] output = new char [ creat.length ] ; for ( int i = 0 ; i < ( creat.length ) ; i ++ ) { if ( ( creat [ i ] ) < ( creat [ i ] ) ) { output [ i ] = creat [ i ] ; } else { output [ i ] = creat ; } } return output ; }
{ int count = swipeListView . getAdapter () . getCount () ; for ( int i = opened . size () ; i <= count ; i ++ ) { opened . add ( false ) ; openedRight . add ( false ) ; } }
{ double wRatio = ( 1 * ( this . width ) ) / width ; double hRatio = ( 1 * ( this . height ) ) / height ; return hRatio < wRatio ? new ui.Resizer.Size ( ( ( int ) ( width * hRatio ) ) , ( ( int ) ( height * hRatio ) ) ) : ( ( int ) ( width * wRatio ) ) ; }
switch ( choice ) { case 'P' : this . startPickUpTNT () ; break; case 'D' : this . startDropUpTNT () ; break; case 'U' : this . startUseNT () ; break; case 'B' : return true ; default: this . console . println ( "\n***" ) ; break; }
@ java.lang.Override public void run () { try { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { com.netty.third.er.reactor.netty.pool.ThirdHandler.ThirdHandler.PROCESSING = com.netty.third.er.reactor.netty.pool.ThirdHandler.ThirdHandler.PROCESSING ; com.netty.third.er.reactor.netty.pool.ThirdHandler . submitKey ( new com.netty.third.er.reactor.netty.pool.SelectionKey ( selection ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
{ java.lang.System.out . println ( "aa0" ) ; double [] [] gen = new double [ xp.length ] ; double [] gradient = new double [ xp.length ] ; double [] diffY = new double [ xp.length ] ; double sumDiff = calcGradient ( gradient , gen , gradient , diffY ) ; return sumDiff ; }
if ( ! ( tagNames . containsKey ( tagName ) ) ) { idNames = tagNames . get ( tagName ) ; tagNames . put ( tagName , id ) ; } else { idNames = tagNames . get ( tagName ) ; }
return ! bodyIsPresent ;
{ int identifier = net.tridentsdk.server.packet.PacketRegistry . shift ( state , bound , id ) ; net.tridentsdk.server.packet.PacketRegistry.SPACKET . put ( identifier , cls , net.tridentsdk.server.packet.PacketRegistry.SPACKET_IDS ) ; if ( identifier == ( net.tridentsdk.server.packet.PacketRegistry.SERVER ) ) { net.tridentsdk.server.packet.PacketRegistry.SPACKET . put ( identifier , cls ) ; } else { net.tridentsdk.server.packet.PacketRegistry.SPACKET . put ( identifier , cls ) ; } }
public double average ( java.util.Date [] dates , double [] skip , int returns , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; double ii = 0 ; for ( int ii = 0 ; ii < ( filter.length ) ; ii ++ ) { if ( ! ( test [ ii ] . equals ( filter [ ii ] ) ) ) break; count ++ ; } return sum / ( dates.length ) ; }
setElements ( texts . toArray ( new java.lang.String [ size ] ) , selected )
data != ( - 1 )
{ int positionX = ( ( int ) ( ( java.lang.Math . round ( ( ( zeroGamePackage.Player.BOARD_WIDTH ) + 1 ) ) ) * ( java.lang.Math . random () ) ) ) ; int positionY = ( ( int ) ( ( java.lang.Math . random () ) * ( java.lang.Math . round ( ( ( zeroGamePackage.Player.BOARD_HEIGHT ) + 1 ) ) ) ) ) ; return new zeroGamePackage.Position ( positionX , positionY ) ; }
{ boolean nextDate = false ; int min = dateToMin ( date , nextDate , "00:00" ) ; do { nextDate = true ; } while ( ! ( botsBot.Calendar . firstWeekdayInYear ( min , dateToMin ) ) ) ; ++ min ; return botsBot.Calendar . getDateYearInYear ( min , dateToMin ( 60 * 60 ) ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int permission = ( ( android.support.v4.app.ActivityCompat ) ( this . checkSelfPermission ( Manifest.permission.WRITE_EXTERNAL_STORAGE , Manifest.permission.WRITE_EXTERNAL_STORAGE ) ) ) ; if ( permission != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new com.example.q.feature.detection.SplashActivity.SplashActivity () , com.example.q.feature.detection.SplashActivity.SplashActivityLoader ) ; } }
monthsFromStartContracts = webContractays.core.utils.JodaUtils . months ( bi , bi.periodDifference , bi.periodEnding )
{ int totalProtection = getProtection () . get ( "AnchorPoints" ) ; if ( ( ( getAnchorPoints () ) != null ) && ( ( getAnchorPoints () . get ( "bodyArmor" ) ) == ( game.Armor . class ) ) ) { armor = game.Armor . get ( "bodyArmor" ) ; totalProtection += ( ( armor . getActual () ) > 0 ) / ( ( armor . getActual () ) > 0 ) ; } return totalProtection ; }
{ int timeLeft = ( ( int ) ( ( money * 4 ) * 4 ) ) ; int timeLeft = ( ( int ) ( seconds ) ) * 60 ; for ( int i = 0 ; i > 0 ; i -- ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException ex ) {} } }
{ java.util.Set < java.lang.Character > set = new java.util.HashSet <> () ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { set . add ( string . charAt ( i ) ) ; } return set . isEmpty () ; }
{ int index = the_index_audit ; do { if ( ( my_cv_audit . get ( index ) ) == ( java.lang.Long.MIN_VALUE_underr ) ) { index = my_cv_audit . size () ; break; } index = ( index + 1 ) + 1 ; } while ( index < ( my_cv_audit . size () ) ) ; }
{ oprationRowNum = x ; break; }
while ( ( currentItem % ( getRealCount () ) ) == 0 ) { currentItem ++ ; }
{ double rot = collidableObject . getAxisAngle () ; hu.oe.nik.szv17t.environment.utils.Vector2d centerPosition = collidableObject . getCenter () ; hu.oe.nik.szv17t.environment.utils.Vector2dCoords [] worldCoords = hu.oe.nik.szv17t.environment.utils.Vector2dCoordsDetector . generateCollisionCoords ( collidableObject , rot ) ; return worldCoords ; }
intent . putExtra ( "position" , itemPosition )
public int readCharacter ( final char [] c ) throws java.io.IOException { char allowed = java.util.Arrays . sort ( c ) ; while ( allowed . allowed ( ( ( java.util.Arrays . binarySearch ( c ) ) + "\n" ) , ( ( char ) ( allowed . readChar () ) ) ) ) {} return c ; }
private int depth ( org.pg4200.datastructure.maptree.BinaryTree.Map < K , V > node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( node != null ) { leftDepth = node.left ; } if ( depth != ( node.rightDepth ) ) { rightDepth = ( node.rightDepth ) + 1 ; } return ( java.lang.Math . max ( ( depth + 1 ) , rightDepth ) ) + 1 ; }
public boolean isOn () { boolean bRet = false ; if ( ( this . getStatus () ) == "" ) { bRet = this . getMatchOnRegex () ; } else if ( ( this . getStatus () ) == 1 ) { bRet = this . getRegex () . equals ( this . getStatus () ) ; } else { bRet = this . getRegex () . equals ( this . getStatus () ) ; } return bRet ; }
switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changePassword ( account.id.delete_accountConfirmation ) ; break; default: break; }
{ java.lang.System.out . println ( ( "No response from client ID " + ( snake . getId () ) ) ) ; Main.ServerManager.currentSnakeInstance . getClients () . size () ; snakes . close () ; isLive = false ; snake . remove ( this . getClients () . getIntNumber () ) ; }
{ return ( setBoolean ( true ) ) || ( ( url . toString () ) > 0 ) ; }
{ if ( ( array.length ) > 0 ) { if ( k == 0 ) return - 1 ; else return i = project2.NonInitiator . randRange ( k , ( - 1 ) ) ; } else return i ; }
public int getPlayerRank () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.CORES_HICOS . size () ) ; i ++ ) { if ( ( player . getScore () . get ( i ) . getScore () ) >= ( Game.CORES_HICOS . size () ) ) rank = rank - ( Game.CORES_HICOS . size () ) ; count ++ ; } return count ; }
{ final int starDrawable = ( ! ( staric_star ) ) ? R.drawable.ic_selected : R.drawable.ic_selected ; starView . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( getActivity () . getApplicationContext () , starDrawable ) ) ; bundle . putBoolean ( Constants.STAR , starDrawable ) ; }
toHexString ( response , powerNumber )
{ java.lang.String year = date . substring ( 0 , 4 ) ; java.lang.String month = date . substring ( 5 , 7 ) ; java.lang.String day = date . substring ( 8 , 10 ) ; long timeSec = java.util.GregorianCalendar . newMilli ( year , ( month - 1 ) ) ; return ( java.lang.Integer . parseInt ( day ) ) + ( java.lang.Integer . parseInt ( timeSec ) ) ; }
reset ( fileName , page , b )
( int ) ( java.lang.Math . round ( ( ( sum * 100 ) - ( ( curSum ) * 100 ) ) ) )
{ com.pceuk.domain.dto.PukukGroupDto pukukGroupDto = ( ( com.pceuk.domain.dto.PukukGroupDto ) ( targetGroupDto ) ) ; long pGroupId = pukGroupDto . getPpGroupId () ; java.util.Optional < com.pceuk.domain.PukukGroup > pGroup = com.pceuk.domain.PukGroupService . getPpuById ( pGroupId ) ; if ( ! ( pGroup . isPresent () ) ) { errors . rejectValue ( "notGroup" , ( ( "exists is not exists, please select in different " + pGroupId ) + " please select" ) ) ; } }
{ double [] temp = 0 ; for ( int i = 0 ; i < 1024 ; i ++ ) re [ i ] = data [ ( i - 1 ) ] ; signafe.analysis.cafe.FFTafe . get ( c , 10 , im.analysis.cafe.FFTafe.theta ) ; double [] temp1 = signafe.analysis.cafe.FFTafe . get ( c , 10 ) ; temp1 = temp1 . getPhase () ; }
( docid >= 0 )
@ com.tkomiya.tk.models.Test public voidsamplesMenuItemAction () { if ( ( mainView . getCurrentSelectedVocablySelectedList () ) == null ) { reportNoVocabListError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.tk.models.VocabyaSocab.LANGUAGE_LANGUAGE , com.tkomiya.tk.models.VocabyaSocab.LANGUAGE_LANGUAGE } ; int language = mainView . getCurrentOption () , 2 ) ; if ( language != ( - 1 ) ) { options [ language ] = new int ( java.lang.Integer.CANCEL ) + "?" ; } javax.swing.JOptionPane . showOptionDialog ( com.tkomiya.tk.views.VocabyaToTestTestViewOptionList.CANCEL , "Please enterToTest new option?" , mainView , options , mainView . getCurrentSelectedList () ) ; } }
public static double S ( double t ) { double countR = SIModel . getRecord ( SIModel.HISTS_HIST , t ) ; if ( countR != ( - 1 ) ) return ( ( double ) ( t ) ) ; else { double lt = t ; int newR = ( ( SIModel.DT_HISTS ) + lt ; return newR ; } }
for ( int i = 0 ; i < ( Config.WORLD_ROWS ) ; i ++ ) { Game.CustomLife world = Game.CustomLife . initialize ( inputRow , i , inputOf ) ; }
@ java.lang.Override protected void initiateAutomaticSync () { long lastAutoSync = ( ( long ) ( com.todoroo.lib.utility.Preferences . getLong ( ( ( com.todoroo.lib.fm.actView.LAST_KEY ) + ( tagData . getId () ) ) , 0 ) ) ) ; if ( ( ( com.todoroo.lib.utility.Utilities . now () ) > ( ( com.todoroo.lib.utility.Utilities . now () ) - ( lastAutoSync ) ) ) refreshDate ( false ) ; }
{ ret += visit ( ctx . small_stmt ( ( i + "\n" ) ) ) ; i ++ ; }
{ final boolean isBrowserAvailable = ( _browserBrowser ) != null ; _dashboardPage_ . showBook ( ( isBrowserAvailable ? _dashboardPage : _dashboardPage_ ) ) ; if ( isBrowserAvailable ? ! isBrowserAvailable : _dashboardPage_ ) { return; } final java.lang.String html = createBrowserCompleted () ; _isBrowserAvailable = false ; _dashboardPage_ . setText ( html ) ; }
if ( ( pieces [ i ] [ j ] ) != ( goalValueAt ( i , j ) ) ) { count ++ ; }
randomPos = ( ( int ) ( ( java.lang.Math . random () ) * topCard ) )
{ for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { value = ( ( byte ) ( ( bAt . value ( i ) ) & ( org.opends.server.plugins.SevenCleanPlugin.Bit ) ) ) ; if ( ( bBit ) != ( org.opends.server.plugins.SevenCleanPlugin.Bit ) ) { return false ; } } return true ; }
{ com.mongodb.MongoClientURI mongoUri = new com.mongodb.MongoClientURI ( tasks.TaskEvacuationTask.DBAdress ) ; com.mongodb.MongoClient mongoClient = new com.mongodb.MongoClient ( mongoUri ) ; com.mongodb.client.MongoDatabase db = mongoClient . getDatabase ( mongoUri . getDatabase () ) ; com.mongodb.client.MongoCollection < com.mongodb.BasicDBObject > dbCollection = db . getCollection ( tasks.CallEvacuationTask.collectionName , com.mongodb.BasicDBObject . class ) ; return dbCollection [ 0 ] ; }
( ( this . index ) < ( this . menuSize ) ) && ( ( menu . get ( tempIndex ) . price ) >= ( this . price ) )
{ final java.lang.String fullBundleName = getFullNameInResourceBundle ( files ) ; java.lang.String extension = getFileExtensions () [ 0 ] ; for ( final java.lang.String languageCode : requiredTranslations ) { final java.lang.String translationFileName = ( ( fullBundleName + '_' ) + ( com.puppycrawl.tools.checks.checkstyle.CheckTranslation . isTranslationsOfRequired ( languageName , missingBundleName ) ) ) + missingFileName ; if ( isTranslationMissing ( translationFileName , languageName ) ) { fullBundleCode = translationFileName ; } } }
public void register ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; seurstfensf.donation.plugin.AddPlayerInfo playerInfo = player . getOrPromoteOrPromote ( toLevel ) ; playerInfo . put ( playerInfo , playerInfo ) ; playerInfo . sendMessage ( java.lang.String . format ( ( "You are currently at %d." + ( perLevel + 1 ) ) ) ) ; }
private java.util.List < java.util.Vector > calculateMeanPointList ( double [] data ) { double [] meanPointCount = new double [ data.Data. dataSet ] ; for ( int i = 0 ; i < ( dataSetCount ) ; i ++ ) { for ( int i = 0 ; i < ( data.Data.Point > i ) ; i ++ ) { meanPointCount [ i ] = new double [ arguments ] ; } } return meanPointCount ; }
{ int [] addAll addAll addAll = getNumberPair ( "Please enter the dimensions?" ) ; if ( tile == null ) { return; } for ( int i = 0 ; i < ( tile . getLayerCount () ) ; i ++ ) { resize ( getLayer ( tile . getLayer ( i ) , addAll [ 0 ] ) ) ; } }
{ double score = 0 ; double intensity = getIntensity ( node ) ; if ( map . containsKey ( node . getLemma () ) ) { score = map . get ( node . getLemma () ) ; sentScoreNode = new sentScoreNode ( node . getLemma () , sentScoreNode ) ; } nodeMap . put ( s , node ) ; return sentScoreNode ; }
{ int selected = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) . getCheckedRadioButtonId () ; if ( selected == ( R.id.createMatchRadioButtonIdSelection ) ) { radioGroupLevelSelection = 1 ; } else if ( selected == ( R.id.createMatchRadioButtonLevelSelection ) ) { radioGroupLevelSelection = 2 ; } setLevelAndRefresh ( radioGroupLevelSelection ) ; }
private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString == 1 ) { if ( com.rijul.game.app.impl.player.Board.INITIAL_MOVE . equals ( boardAsString ) ) { int ind = com.rijul.game.app.impl.player.Board.INITIAL_MOVE . nextInt ( com.rijul.game.app.impl.player.Board.INITIAL_MOVE . get ( boardAsString ) ) ; return ind ; } else { return getOptimalResultForPosition ( board , getOptimalResultForPosition ( boardAsString , com.rijul.game.app.impl.player.Board.INITIAL_MOVES ) [ 2 ] , boardAsString ) ; } } else { return 1 ; } }
java.lang.Integer bonus = 1 ;
( rpNonVplexSourceVolume || addJournalVolume ) || ( ! notInListTaskList )
{ for ( net.decipjix.header.RecordRecords templateRecord : templateRecords ) { templateRecord . getLength () ; } if ( ( net.decipjix.header.TemplateRecord . getLength () ) > 0 ) { for ( net.decipjix.header.TemplateOption option : net.decipjix.header.TemplateRecord . getLength () ) { option += option . getLength () ; } } if ( ( net.decipjix.header.TemplateRecord . getLength () ) > 0 ) { recordLength = ( net.decipjix.header.TemplateRecord . getLength () ) + ( this . dataLength ) ; } updateHeaderSet () ; }
org.powertac.tournament.beans.Round . getRoundFromId ( roundId , true )
{ if ( ! ( sdSvc . isActiveService ( service ) ) ) { return; } java.util.List < io.cattle.platform.serviced.deployment.impl.DeploymentDeploymentUnitManagerImpl > units = unit . collectInstance ( new io.cattle.platform.servcovery.deployment.impl.DeploymentDeploymentService.ContextManagerImpl ( services , io.cattle.platform.servcovery.deployment.impl.DeploymentDeploymentService.cileService , services , deploymentToReconner ) ) ; io.cattle.nercile.deployment.impl.DeploymentDeploymentService.Reconcile plan = createReconcile ( services , units , service ) ; if ( ! ( services . isEmpty () ) ) { activateDeployment ( planToReconner () , units , service ) ; } activateDeployment ( planToReconner () , units , service ) ; }
{ if ( currentFragment instanceof org.droidplanner.android.activities.ConfigurationActivity.ScreenConfiguration ) { ( ( org.droidplanner.android.activities.ConfigurationActivity.ScreenConfigurationFragment ) ( currentFragment ) ) . onConfigurationReplaced () ; } mScreenId = configId ; getFragmentTransaction () . replace ( R.id.configuration_screen_content_ID , mScreenId ) . commit () ; }
{ char letter = 'a' ; int a ; final int MIN = 65 ; final int MAX = 122 ; final int STOPLINE1 = 85 ; final int STOPLINE2 = 122 ; final int a = MIN ; for ( a = MIN ; a <= MAX ; a ++ ) { letter = ( ( char ) ( a ) ) ; java.lang.System.out . print ( ( " " + letter ) ) ; } java.lang.System.out . println () ; if ( ( a == ( application.End.LINE ) ) || ( a == STOPLINE1 ) ) java.lang.System.out . println () ; }
@ java.lang.Override public org.pbx12.IED12. ( java.io.InputStream source , java.io.InputStream source ) throws java.io.IOException { java.lang.StringBuilder str = new java.lang.StringBuilder () ; char [] c = new char [ 1024 ] ; int length = 1024 ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source , c ) ) ; while ( ( str . length () ) != ( - 1 ) ) { str . append ( c ) ; } return str . toString () ; }
configChanged = ( ( this . props ) != null ) ? this . props.HashCodeHashConfig : currentHashConfig
{ bean.ConnectionProvider provider = new bean.ConnectionProvider () ; con = provider . getCon () ; con . createStatement () ; java.lang.String query = ( ( "Select employee from employee where email=\"" + email ) + "\"" ) + status ; java.sql.ResultSet rs = stmt . executeQuery ( query ) ; return rs . next () ; }
{ int [] stamp = new int [ 1 ] ; java.lang.System.out . println ( value ) ; int [] expected = value . get ( stamp ) ; return ( lock . compareAndSet ( expected , ( stamp [ 0 ] , expected [ 0 ] ) , ( ( stamp [ 2 ] ) + ( V.currency ) ) ) ) < 2 ; }
{ java.lang.String item = "%d %d 0" ; long curTime = java.lang.System . currentTimeMillis () ; if ( ( records . size () ) > 0 ) { records . add ( java.lang.String . format ( item , curTime , e . getKeyCode () ) ) ; } else { java.lang.System.out . println ( ( ( e . getKeyCode () ) + " " ) ) ; } }
{ int hash = 7 ; hash = ( ( int ) ( java.util.Objects . hashCode ( this . topLeft ) ) ) + ( hash * ( java.util.Objects . hashCode ( this . bottomRight ) ) ) ; return hash ; }
{ int NextTestItemL = 0 ; boolean doTestItemL = false ; java.lang.System.out . println ( ( CurrentItemTestItem + 1 ) ) ; NextTestItem = not_end_test + 1 ; not_all_item_end_test.TestItem testItem ; while ( ( testItem != ( - 1 ) ) && ( ! not_TestItem ) ) { NeedTestItem = testItem ; if ( testItem == ( - 1 ) ) { return 0L ; } else return false ; } }
( int ) ( value / ( intervalLength ) )
public java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] arg1 = java.lang.String . valueOf ( args [ 0 ] ) ; int arg2data = java.lang.Integer . valueOf ( arg2 [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( arg2 [ 2 ] ) ; int arg3 = java.lang.Integer . valueOf ( arg1 [ 1 ] ) ; return calculateCalculate ( source , arg3 , arg3 ) ; }
{ com.google.android.exoplayer.util.Assertions . checkState ( ( ! ( preparedTrackUs . enabled () ) ) ) ; com.google.android.exoplayer.util.Assertions . checkState ( ( positionUsUs . enabled () ) ) ; positionUs = 0 ; positionUs = ( isResetSource () ) ? this : : currentPositionUs ; if ( positionUs == ( lastPositionUs ) ) { positionUs = pendingPositionUs ; return; } lastPositionToUs = positionUs ; seekTo ( positionUs ) ; }
public static android.graphics.Bitmap setBitmapSize ( int iconId , int w , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , w ) ; if ( bitmap != null ) { float s = ( ( float ) ( 1.0F * ( bitmap . getWidth () ) ) ) / ( ( android.graphics.Bitmap . createScaledBitmap ( bitmap , s , bitmap . getWidth () , bitmap . getHeight () ) ) ) ; int s = ( ( int ) ( bitmap . getHeight () ) ) * ( bitmap . getHeight () ) ; return s ; } else return null ; }
for ( final boolean checkedItem : checkedItems ) { if ( checkedItem != ( this . templateModelColExclude ) ) templateModelColExclude . add ( i ) ; i ++ ; }
{ boolean thrown = false ; java.lang.String result = null ; try { result = this . databaseEngine . search ( "abc" ) ; } catch ( java.lang.Exception e ) { thrown = true ; } org.assertj.core.api.Assertions . assertThat ( ( ! thrown ) ) ; org.assertj.core.api.Assertions . assertThat ( result . equals ( "def" ) ) ; }
{ if ( flags == null ) flags = "" ; com.epam.indigo.IndigoObject [] parent = new com.epam.indigo.IndigoObject [] { obj1 , obj2 } ; setSessionID () ; int match = com.epam.indigo.Indigo . checkResult ( this , parent , com.epam.indigo.Indigo._lib . indigoMatchMatch ( obj1.self , flags , ( - 1 ) ) ) ; if ( match == 0 ) return null ; return new com.epam.indigo.IndigoObject ( this , obj1.self , match ) ; }
{ super . onScrollStateChanged ( recyclerView , newState ) ; int initialItemCount = mGridLayoutManager . findFirstCompletelyVisibleItemPosition () ; int totalItemCount = mGridLayoutManager . getItemCount () ; if ( initialItemCount != 0 ) { int lastVisisble = mGridLayoutManager . findLastVisibleItemPosition () ; mRecyclerView . loadInfiniteDataListener ( initialItemCount , lastVisisble ) ; } }
{ if ( ( drag && ( ! ( moveAll. deselect ) ) ) && ( ! ( target . clear () ) ) ) { target . clear () ; } int x = e . getX () ; int y = e . getY () ; for ( main.GObject e : goObjects ) { if ( g . g ( e , x , y ) ) { go . add ( e ) ; } } target . repaint () ; }
Hex . word ( i , word . get ( i ) ) ;
index > 0 ? ( indexAdapter . getCount () ) - 1 : 0
{ java.lang.System.out . println ( 2 ) ; java.lang.System.out . println ( ( ( ( "X " + ( X [ 0 ] ) ) + " = " ) + ( ( int ) ( X [ 1 ] ) ) ) ) ; int index = pointmap [ ( ( int ) ( ( ( Constants.WIDTH ) * ( X [ 1 ] ) ) ) ) ] ; return this . points . get ( index ) ; }
{ oldSum = sum + 1 ; sum += 1.0 / n ; if ( ( n % 100000 ) == 0 ) { java.lang.System.out . println ( ( ( ( "n = " + n ) + ", " ) + sum ) ) ; sum = sum + ", " ; } }
void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ( requestTime ) ) > 0 ) { final long secTime = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long msTime = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ch.qos.d01logback.contrib.jsonlog.JsonLayout.ATTR_NAME_REQUEST_TIME ) ) ; if ( secTime != ( - ( time ) ) ) { map . put ( java.lang.String . format ( "%d" , secTime , time ) ) ; } } }
( ( this . table [ hashCode ] ) != ( java.lang.Long.MIN_VALUE ) )
{ if ( v < 0 ) v = 0 ; else v = 1 ; if ( v > 1 ) v = 1 ; float hy = ( getHeight () ) * ( getHeight () ) ; float y = ( - ( h . getX () ) ) + ( getY () ) ; setPosition ( new hy , ( hy + ( getX () ) ) ) ; }
private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { break; } else { depth ++ ; } } return depth ; }
new java.awt.geom.Point2D.Float ( maxVolume , 1.0F )
{ double diffX = x1 - px ; double diffY = y1 - py ; double diffX = ( diffX * diffX ) + ( radius * radius ) ; if ( diffY < ( - radius ) ) { return true ; } else { return false ; } }
{ android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connecting encoder..." ) ; this . initConnectingWithEncoder ( this ) ; boolean isBlocking = rc . trustServer () ; if ( ! isBlocking ) { this . rc . connect () ; } this . rc = false ; if ( ! failed ) { android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connection failed!" ) ; this . sendHeader () ; } }
public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { java.util.Map < java.lang.String , java.lang.Object > nextBuffer ; try ( java.util.Map < java.lang.String , java.lang.Object > ring = sequence . getRorstacking () ; long nextBuffer = ring . next () ; if ( ( map != null ) && ( ( map . size () ) > 0 ) ) { event . setEvent ( sequence ) ; } finally { event . publish ( event ) ; } }
{ java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 1 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_CURIE , siena.base.test.BaseAsyncTest.UUID_CURIE } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } }
{ boolean isvalid = true ; try { java.util.List < java.lang.String > validCategoris = apiDAO . getValidCategories () ; if ( validCategoris . size () ) { if ( ( validCategoris . size () ) > 0 ) { for ( java.lang.String category : validCategoris ) { if ( category . equalsIgnoreCase ( purchase ) ) { isvalid = true ; break; } } } } } catch ( java.lang.Exception e ) { isvalid = false ; throw e ; } return isvalid ; }
{ double [] statement ; java.lang.System.out . println ( num ) ; if ( ( num ) == ( edu.utasex.csnn.yorus.tasks.Hypernn.TorusPreyorusController.NNE_NUM_NO ) ) { modified = edu.utasex.csnn.yorus.tasks.Hypernn.TorusPreyorusController.NNE_INDEX [ 0 ] ; java.lang.System.out . println ( modified ) ; return modified = edu.utasex.csnn.yorus.controllers.Hypernn.TorusPreyorusController.TNE_INDEX [ 1 ] ; } else { modified = edu.utasex.csnn.yorus.controllers.Hypernn.TorusPreyorusController.TNE_INDEX [ 2 ] ; java.lang.System.out . println ( modified ) ; value [ 0 ] = edu.utasex.csnn.yorus.controllers.Hypernn.TorusPreyorusController.TNE_INDEX [ 0 ] ; value [ 1 ] = edu.utasex.csnn.yorus.controllers.Hypernn.TorusPreyorusController.TNE_INDEX [ 0 ] ; return modified ; } }
{ long idxUsagesBefore = indexUsages ( db ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > qResult = db . command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select * from foo where bar = 2 or bar >= 0" ) ) . execute () ; org.testng.Assert . assertEquals ( qResult . size () , 2 ) ; org.testng.Assert . assertEquals ( indexUsages ( db ) , ( idxUsagesBefore + 2 ) ) ; }
{ float requiredInfluence = 60 ; java.util.List < amst.idlandmap.lands.IsEnd > frag = amst.idlandmap.lands.IsEnd . getEnd () ; for ( amst.idlandmap.lands.IsEnd inf : frag ) { float chunkX = inf . isChunkAtZ ( inf , 0.0 ) ; if ( chunkX >= requiredInfluence ) { return amst.idlandmap.layers.CityLayer.CityProbability ; } else { return amst.idlandmap.layers.CityLayer.CityProbability ; } } if ( ( amst.idlandmap.lands.IsEnd.None ) >= requiredInfluence ) { return amst.idlandmap.layers.CityLayer.CityProbability ; } else { return 0.0F ; } }
public static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { method . setAccessible ( ( ! ( method . isAccessible () ) ) ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; }
{ try { int i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; resetPieces () ; resetButtons () ; resetPieces () ; resetFields () ; } catch ( java.lang.Exception e ) { return; } }
{ super . onResume () ; isFirstScan = true ; registerScanReceiver ( mWifiScanReceiver , new android.content.IntentFilter ( android.net.wifi.WifiManager.ACTION_RESULTS_SCAN_AVAILABLE ) ) ; android.content.IntentFilter filter = new android.content.IntentFilter () ; filter . addAction ( WifiManager.ACTION_NETWORK_CHANGED_CHANGED_CHANGED ) ; filter . addAction ( WifiManager.ACTION_NETWORK_CONNECTIVITY ) ; mWifiManager . registerReceiver ( mWifiScanReceiver , filter ) ; mSuccess = false ; }
private double semestrialCorrection ( final double param ) { final double deb_preq = 59 ; final double result = 244_44 ; final double xDay = 100 ; if ( ( cachedDay ) >= 100 ) { result = deb_preq / ( ( - 40.0 ) * param ) ; } else { result = ( ( 1.0 * result ) * param ) / ( ( - 40.0 ) * param ) ; } final double result = ( ( 1.0 ) * param ) * param ; return result ; }
x < 1024
new org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions ( c , allowAllowies , c , this )
{ timer . stop () ; byte option = ( ( byte ) ( javax.swing.JOptionPane.YES_NO_OPTION ) ) ; if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { dispose () ; } else if ( option == ( javax.swing.JOptionPane.YES_NO_OPTION ) ) { dispose () ; } else if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { dispose () ; } }
( - 1 )
{ for ( int i = 0 ; i < ( cr.n52.yarts.adcry.entity.Player p : this . cricketScores . keySet () ) ; i ++ ) { s = this . cricketScores . get ( i ) ; if ( ( ( p != ( cr.n52.yarts.adcry.Cricket.Score ) ) && ( ! ( this . cricketScores . get ( i ) . number ) ) ) && ( ! ( this . playerHasOpened ) ) ) { result = false ; } } return result ; }
{ mCurrentLocation = location ; double latitude = mCurrentLocation . getLatitude () ; double longitude = mCurrentLocation . getLongitude () ; updateLocation ( stationManager , route ) ; updateNextLocation ( stationManager ) ; binding . setRoute ( latitude , longitude ) ; binding . setText ( ( ( ( ( ( ( " " + ( latitude ) ) + " " ) + ( longitude ) ) + " " ) + " i ) ) ; }
switch ( requestCode ) { case net.lorenz.conwwi.wweratch.WatchWatcher.ENABLE_BTOK : if ( resultCode == ( RESULT_OK ) ) { configureButtonEnabled ( false , bt ) ; } break; case net.lorenz.conwwi.wweratch.WatchWatcher.REQ_DEV : if ( data != null ) { java.lang.String addr = data . getExtras () . getString ( "device_bluetooth" ) ; deviceMap . get ( addr ) . execute () ; } break; default: bt = new android.content.Intent ( net.lorenz.conwwi.wweratch.WatchWatcher.REQ_BOK ) ; break; }
{ int nextVal ; while ( odometer.Odometer . isValid ( digit ) ) { nextVal = nextVal + ( digit % 10 ) ; if ( nextVal == 1 ) { nextVal = 1 ; } nextVal ++ ; } return nextVal ; }
private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( ( registers [ Z80.REGISTER_FLAG ] ) &STER ) &STER ; switch ( flagVal ) { case Z80.FLAG_FLAG_SUBCT : flagReg = flag ; break; case 7 : flagReg > > 7 ; break; case 6 : flagReg = flag ; break; case 7 : flagReg > > 7 ; break; case 7 : flagReg = flag ; break; } return flagReg ; }
{ int phoneId = getActivePhoneId () ; com.android.incallui.Log . d ( this , ( ( ( "onCallBlock:" + mId ) + "phone:" ) + phoneId ) ) ; mCallCallId = phoneId ; final java.lang.String call = getUiContext () . getNumber () ; final android.content.Intent mContactHelper = new com.android.incallui.contacts.ContactHelper ( getContext () ) ; mContactHelper . setContactInfo ( call ) ; }
private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 2 ; else if ( n == 1 ) return 1 ; for ( int k = 1 ; k <= ( sequenceA47 . getNumber ( k ) ) ; k ++ ) { sum += ( sequenceA47 . getNumber ( k ) ) * ( n - ( n / n ) ) ; } return sum / n ; }
{ if ( decodedKey == null ) { return null ; } byte [] decodedSecretKey = null ; try { decodedSecretKey = sim.rescuazi.utils.Base64 . decode (Detail ) ; } catch ( java.io.IOException e ) { throw new com.iamxechange.xchange.exceptions.ExchangeException ( "Cannot instantiate key" ) ; } return ( decodedSecretKey == null ) ? null : decodedSecretKey ; }
@ org.junit.Test public void exercize ( java.lang.String json ) { java.lang.String json = "{\"y\":\"bps.json\":\"e\",\"{ps\",\"{ps\",\"{array\":\"{}\"name\":\"Mood\",\"e\",\"{}\"-3\": \"num\": \"-3,[]}" ; org.json.core.TestGeneral.EVENT_EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_NAME = org.json.General.EVENT_NAME ; }
public void enqueue ( java.lang.Object element ) { int size = () ; if ( size == ( n - 1 ) ) { resize () ; } queue [ ( ++ ( n ) ) ] = element ; if ( ( ++ ( rear ) ) == ( n ) ) { rear = 0 ; } }
{ int addIndex ; if ( direction == ( LayoutManager.Direction.START ) ) { addIndex = 0 ; } else { addIndex = mLayoutManager . getChildCount () ; } if ( childView . equals ( decache ) ) { mLayoutManager . addView ( mLayoutManager , childView ) ; } return addIndex ; }
{ int prevBtnVisibility = android.view.View.VISIBLE ; int nextVisibility = android.view.View.VISIBLE ; if ( itemIndex == 0 ) { prevBtnVisibility = android.view.View.VISIBLE ; } else if ( itemIndex == ( ( shareExperience . size () ) - 1 ) ) { prevBtnVisibility = android.view.View.VISIBLE ; shareClipButton . setVisibility ( android.view.View.INVISIBLE ) ; nextBtnVisibility = false ; } shareClipButtonController . hide () ; }
{ android.widget.Spinner fishList = ( ( android.widget.Spinner ) ( findViewById ( R.id.fishSpinner ) ) ) ; java.lang.String fishname = fishList . getSelectedItem () . toString () ; int index = fishList . getSelectedItemPosition () ; android.content.Intent intent = new android.content.Intent ( getContext () , com.app.catch.report.LiveFishActivity . class ) ; intent . putExtra ( "name" , index ) ; intent . putExtra ( "FishInfo" , tripList . getSelectedItem () ) ; startActivity ( intent ) ; }
public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; final int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfWidth = height / 2 ; final int halfHeight = width / 2 ; while ( ( ( halfWidth > reqWidth ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
{ java.util.Scanner keyboard = new java.util.Scanner ( java.lang.System.in ) ; int input = 0 ; doHit ( keyboard ) ; try { input = keyboard . nextInt () ; } catch ( java.util.InputMismatchException e ) {} while ( input < 1 ) ; return input ; }
{ col_idx [ 0 ] = 0 ; int index = 1 ; for ( int i = 1 ; i <= ( numRows_idx ) ; i ++ ) { col_idx [ index ] = histogram [ ( i - 1 ) ] ; col_idx += 1 ; } java.lang.System . arraycopy ( nz , 0 , col_idx , 0 , ( ( histogram_length ) - ( nz.length ) ) ) ; }
{ double d = distance ( other ) ; for ( int i = 0 ; i < 3 ; i ++ ) { double a = ( ( Constants.massG ) * ( other.position [ i ] ) ) - ( ( ( position ) * ( other.position [ i ] ) ) / ( other.position [ d ] ) ) ; d += delta ; } }
{ boolean signed = true ; format . checkType ( 'h' , false ) ; if ( ( format . getType () ) == 'H' ) { signed = false ; } format . consume () ; return unpackShorting ( signed ) ; }
{ double translationPower = leftJoystick . getVector () . getMagnitude () ; translationPower = targetSubsystem . getCurrentHeading () . getAsDoubleSupplier () ; double rotationPid = 0 ; double rotationPid = rotationSubsystem . calculate ( translationPower , tankError ) ; translationPower = ( translationPower + rotationPid ) - rotationPower ; drivePower = rotationSubsystem . calculate ( translationPower , rotationPid ) ; }
{ boolean newItem = ! ( this . linkedHashSet . remove ( item ) ) ; if ( newItem ) { this . linkedHashSet . add ( item ) ; } if ( ( this . linkedHashSet . size () ) >= ( com.box.sdk.LRUCache.MAX_SIZE ) ) { java.util.Iterator < E > it = this . linkedHashSet . iterator () ; this . remove ( item ) ; return it . next () ; } return newItem ; }
public int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( reply instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; }
public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual , java.lang.Integer param ) { boolean condition = null ; if ( expected == null ) { condition = actual ; } else { condition = expected ; } com.triangeleft.asserteft.dialog.DialogAssert . assertTrue ( message , actual ) ; }
{ android.content.ClipboardManager level = ( ( android.content.ClipboardManager ) ( getSystemService ( Context.CLIPBOARD_SERVICE ) ) ) ; android.content.ClipData clip = new android.content.ClipData ( "ID" , id ) ; clip . setPrimaryClip ( clip ) ; android.content.Context context = getApplicationContext () . getApplicationContext () ; java.lang.Object duration = android.widget.Toast . makeText ( context , "Text copied to copy" , duration ) ; android.widget.Toast . makeText ( context , duration ) . show () ; }
if ( ( chapter . getStartTimeOffset () ) >= position ) { ret = chapter . getStartTimeOffset () ; break; }
statsCount - 5
{ java.lang.System.out . println ( "Input word on board, including\" \"DOGD, \"" ) ; java.lang.String word = getNextLine () ; java.lang.System.out . println ( "Input position position starting board (left) or including" ) ; tiles.Input p = getNextLine () ; java.lang.System.out . println ( "Horizontal Position" ) ; board = new Move () ; p . move ( board . nextLine () , new Move () , s ) ; return true ; }
switch ( base ) { case 'A' : intVal = 0 ; break; case 'C' : intVal = 1 ; break; case 'G' : intVal = 2 ; break; case 'T' : intVal = 3 ; break; case 'N' : break; default: throw new java.lang.IllegalArgumentException ( ( "Invalid character: " + base ) ) ; }
for ( int i = ( str . length () ) - 1 ; i >= 0 ; i -- ) sum += ( ( int ) ( str . charAt ( i ) ) ) ;
for ( int i = 0 ; i < i ; i ++ ) { if ( ( name.viterbiiter.Pages . get ( i ) ) > maxCandidate ) { maxCandidate = page.viterbiiter.Pages . get ( i ) ; maxCandidate = page.viterbiiter.Pages . get ( i ) ; } }
{ final boolean res ; super . add ( elem ) ; try { if ( res . signal () ) { lock . lock () ; } } finally { lock . unlock () ; } return res ; }
{ boolean isAllNull = true ; edu.asu.spring.quadriga.web.workspace.backing.WorkspaceForm workspace = ( ( edu.asu.spring.quadriga.web.workspace.backing.WorkspaceForm ) ( obj ) ) ; java.util.List < edu.asu.spring.quadriga.web.workspace.backing.WorkspaceForm > workspaceList = workspace . getWorkspace () ; if ( workspaceList != null ) { for ( edu.asu.spring.quadriga.web.workspace.backing.WorkspaceForm workspace : workspaceList ) { if ( workspace != null ) { java.lang.String errId = workspace . getId () ; if ( errId != null ) { workspaceList . reject ( "selection-" , false ) ; } } } } }
if ( ( peopleData . getStatus () . getStatusCode () ) == ( com.google.android.gms.common.api.StatusCodes.SUCCESS ) ) { com.google.android.gms.peopleplusplus.model.PersonDataBuffer personBuffer = peopleData . getPerson () ; try { int count = personBuffer . getCount () ; for ( int i = 0 ; i < count ; i ++ ) {} finally {} } } else { personBuffer . close () ; }
if ( ( ( label > 0 ) && ( label < minLabelMatching ) ) && ( minLabelMatching > neighbors ) ) { minLabelMatching = label ; }
{ super . onDestroy () ; for ( int i = 0 ; i < ( mPermissionsReceived.length ) ; i ++ ) { if ( ( mPermissionsReceived [ i ] ) != null ) { java.lang.String permission = mPermissionsReceived [ i ] ; int result = mPermissionsReceived [ i ] ; io.jason.manager.permission.PermissionManager . onPermissionPermission ( permission , result ) ; onPermission () ; } } }
if ( ( t > 10000 ) && ( ( t > 10000 ) && ( ( base.length ) > 2 ) ) ) { t -= 10000 ; }
double n
{ int fragLen = negValue - ( posValue ) ; if ( ( fragLen > 0 ) && ( fragLen <= 2000 ) ) { getCount () ; } ( fragLen ) ++ ; }
{ double inches ; double counter = 0 ; for ( int inches = 1 ; inches <=Complete ; inches ++ )ches = ( inches / 3 ) * 3 ; java.lang.System.out . println ( ( ( "meters " + inches ) + " is " ) ) ; if ( ( counter == 0 ) && ( counter == 12 ) ) { counter ++ ; } java.lang.System.out . println ( "meters." ) ; }
{ Common.Message listMsg ; java.lang.String content = "" ; for ( Common.User item : this . usersList ) { int i = 0 ; if ( i == 0 ) { content = ( ( content + " " ) + ( item . getUsername () ) ) + " " ; } else { listMsg = new Common.Message ( content , listMsg ) ; } i ++ ; } return new Common.Server ( MessageType.DATA , content ) ; }
size = chartView.data . get ( 0 ) . size ()
org.junit.Assert . assertEquals ( numberOfSequencesToGenerateLarger , s . getTotalSequences () )
{ boolean doneReading = readPage () ; if ( doneReading ) { return true ; } int recordsInCurrentPass = processData ( recordsInCurrentPass ) ; if ( doneReading ) { return true ; } doneReading = ( length ) - 1 ; if ( checkRecordFieldsReached () ) { return true ; } doneReading = false ; return doneReading ; }
{ int sourceNodeCount = sourceNodes . size () ; if ( ( sourceNodeCount != null ) && ( sourceNodeCount < index ) ) { return sourceNodes . get ( index ) ; } if ( ( sink ) != null ) { int index = sink . get ( sourceNodeCount ) ; return index == ( - 1 ) ? sink : sink . get ( index ) ; } throw new java.lang.IndexOutOfBoundsException () ; }
{ mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jHotelsTable . getModel () ) ) ; if ( ( jHotelsTable . getSelectedRowCount () ) == 0 ) { javax.swing.JOptionPane . showMessageDialog ( this , "please select the Hotel" ) ; return; } java.lang.String HotelName = jHotelsTable . getValueAt ( HotelName ) . toString () ; deleteHotelsSelectRow ( HotelName ) ; deleteHotels = mdHotelsTable . getValueAt ( HotelName , 0 ) . toString () ; }
if ( ( args.length ) != 1 ) { try { int starWarsSequence = java.lang.Integer . parseInt ( args [ 0 ] ) ; java.lang.System.out . println ( ( "Star Wars: " + starWarsSequence ) ) ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.err . println ( ( "Argument must be an integer." + "There must be 2 integer." ) ) ; java.lang.System . exit ( 1 ) ; } } else { java.lang.System.err . println ( "There must be 1 argument." ) ; }
{ int id = item . getItemId () ; switch ( id ) { case android.R.id.home : android.util.Log . d ( "hi" , "hi" ) ; android.support.v4.app.NavUtils . navigateUpFromSameTask ( this ) ; return true ; } return super . onOptionsItemSelected ( item ) ; }
{ int r = ( ( int ) ( java.lang.Math . round ( ( ( coord . getY () ) - ( minY / ( cellSize ) ) ) ) ) ; int c = ( ( int ) ( java.lang.Math . round ( ( ( coord . getX () ) - ( ( coord . getX () ) / ( cellSize ) ) ) ) ) ) ; return ( cols [ r ] ) * ( ( ( org.matszone.contrib.im.ZoneSize ) ( coord ) ) + ( c * ( ( int ) ( cols ) ) ) ) ; }
{ int n = contexts . size () ; for ( n -= 1 ; n >= 0 ; n -- ) { MiniJava.Var n = contexts . get ( ( n - 1 ) ) . get ( varName ) ; if ( n != null ) { return findRes ( n ) ; } } return MiniJava.Res . identifier () ; }
java.lang.Stringkernel = request . getString ( "privacy" ) ;
{ float randomVVelx = ( ( random . nextFloat () ) * 2.0F ) - 4.0F ; float randomVely = ( random . nextFloat () ) - 4.0F ; return new com.dumbpugknight.crossbowparticles.ParticleDetails ( ( - 10 ) , new com.dumbpugknight.crossbowparticles.ParticleDetails ( emitter.ParticleDetails.positionX , randomVely , level ) ) ; }
return cursor . getInt ( 0 ) ;
actualHours = 1
{ int viewHolderPosition = viewHolder . getAdapterPosition () ; mModelAdapter . removeChild ( viewHolderPosition ) ; mSetsAdapter . notifyItemRemoved ( viewHolderPosition ) ; mSnackbar . show ( android.support.design.widget.Snackbar . make ( mSetsView , R.string.message_exercise_deleted_message_INDEFINITE , Snackbar.LENGTH_INDEFINITE ) ) ; mSnackbar . setAction ( R.string.cancel_cancel_button_text ) ; mSnackbar . show () ; }
{ java.util.HashMap < java.lang.String , JamaMatrixList > bugMatrixVectors = utils.VecUtil . loadFilePathList (Nodes ) ; java.util.Map < java.lang.String , JamaMatrixList < java.lang.String , JamaMatrixList > > codeMatrixVectors = utils.VecUtil . loadFilePathList ( codeMatrixVectors , utils.VecUtil . exportMatitySimilarity ( codeMatrixVectors , utils.VecUtil . generateMatic ( bugMatrixFilePath , utils.VecUtil . generateMaticSize () ) , utils.VecUtil . generateMaticSize () ) ) ; }
{ double ret = 1 / ( real.length ) ; for ( int i = 0 ; i < ( real.length ) ; i ++ ) { ret += java.lang.Math . pow ( ( ( real [ i ] ) - ( predicted [ i ] ) ) , 2 ) ; } return java.lang.Math . sqrt ( ret ) ; }
{ int i = 0 ; for ( char c : input . toCharArray () ) { if ( c == '{' ) i ++ ; if ( ( '}' == c ) && ( i > 0 ) ) i -- ; } return i == 0 ; }
{ if ( camera == null ) return; float step = camera . getParameters () . getExposureStepensation () ; java.lang.Math . max ( ( step * ( camera . getParameters () . getExposureCompensation () ) ) , step ) ; }
{ if ( low > high ) return list ; int pos = partition ( list , low , high ) ; quicksort ( list , low , ( pos - 1 ) ) ; quicksort ( list , ( pos + 1 ) , high ) ; }
{ javax.servlet.http.HttpSession session = request . getSession () ; java.lang.String requestQuery = request . getParameter ( "search" ) ; java.util.List < kahara.awara.models.SearchResults > allResults = request . getSearchResults ( requestQuery ) ; int pageIndex = getPageIndex ( requestQuery , allResults , session ) ; return getPageSearch ( requestQuery , allResults , pageIndex , pageSearch ) ; }
collapseView ( lastExpandedPosition , false , true )
{ light = section . spreadSkylightDownwards ( x , z , light ) ; break; }
if ( ( containsFilter && ( ! containsIgnoreFilter ) ) || ( ! containsIgnoreFilter ) ) { return "<filter-filter-n" + line ; } else if ( ( ! containsIgnoreFilter ) && ( ! ( containsIgnoreFilter ) ) ) { return "\n" + lineIgnoreFilter ; }
public static com.alphatica.genotickgen.RobotData createUpDataToPoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { list . add ( original ) ; } try { java.lang.Double time = calculateReverse ( list ) ; com.alphatica.genotickgen.RobotDataChange future = com.alphatica.genotickgen.RobotDataChangePoints . create ( name , time , copy ) ; return time ; } catch ( java.lang.Exception ex ) { return name ; } }
{ long sizeOfComponent = commentGraph . getSizeOfLargestConnectedComponent () ; if ( sizeOfComponent > 0 ) { java.lang.System.out . println ( "DDDDDDDDDDDDDDD" ) ; if ( sizeOfComponent == 0 ) { continue; } java.lang.String comment = commentGraph . getComment () . hashCode () ; commentMap . put ( comment , comment ) ; updateLikeCommentSize () ; } }
private void synchronizeFounders () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersionFound = 0 ; int serverMaxVersion = 0 ; int serverMaxVersionFound = syncers ; syncVersionMax = serverMaxVersionFound ; syncVersionMax = serverMaxVersionFound ; syncVersionMax = serverMaxVersionFound ; syncVersionMax = serverMaxVersionFound ; }
{ int id = view . getId () ; android.widget.CheckBox chk = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chk . isChecked () ) { android.util.Log . d ( com.sarahrobinproject.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinproject.finalyearproject.activities.MainActivity.TAG , "Removed invite from more" ) ; } }
{ double energyLeft = robotSnapshot . getEnergy () ; int playerId = robotSnapshot . getTeamIndex () ; com.hutocode.robutocode.server.IScore snapshot = robotSnapshot . getScore () ; double gunDamageBullet = snapshot . getCurrentKillScore () ; return new com.hutocode.robutocode.server.RobmingDamage ( ( ( playerId + ( snapshot . getCurrentKill () ) ) + ( snapshot . getCurrentKill () ) ) , energyLeft , gunDamageBullet , snapshot . getCurrentKillDamage () ) ; }
newId != 0
{ spellNode temp = root ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { int index = word . charAt ( i ) ; if ( temp . hasLetter ( index ) ) { temp = temp . getNode ( index ) ; } else { return temp ; } } return null ; }
{ final java.lang.String line = indentCheck . getLine ( ( line - 1 ) ) ; final int startNum = line . getLineStart ( ( indent - 1 ) ) ; if ( indent > 0 ) { logError ( line , startNum , indent ) ; } }
{ int count = 0 ; for ( int i = 0 ; i < ( board.length ) ; i ++ ) { if ( ( ( board [ i ] . length ) > 2 ) || ( ( board [ ( i + 1 ) ] . length ) < 2 ) ) { return false ; } else { removeHenQues ( i , col ) ; return true ; } } return false ; }
{ presenter . displayItemsAsMenuOptions ( menuOptions ) ; com.twuibli.biblioteca.Option option = presenter . getUser () ; do { int userInput = menuOptions . size () ; menuOptions . get ( ( userInput - 1 ) ) . onSelectSelected () ; } while ( ! ( option instanceof com.twuibli.biblioteca.OptionMenu ) ) ; }
if ( isStalemateForPlayer ) { isStalateForOpponent = true ; _isOverGame = true ; } else if ( ( this . _numberOfTurns ) > ( util.models.Game.MAX_TURN_LIMIT ) ) { isStalateForTurn = true ; }
private eu.europeana.corelib.lib.definitions.edm.beans.FullRecordBean retrieveFullRecordTimeout ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.exceptions.MongoDBException , eu.europeana.corelib.exceptions.MongoMongoException , eu.europeana.corelib.exceptions.N4jException { long startTime = java.lang.System . currentTimeMillis () ; if ( eu.europeana.corelib.definitions.neo2.v2.api.BeanSearchController.LOG . isDebugEnabled () ) { eu.europeana.corelib.definitions.neo2.v2.api.BeanSearchController.LOG . debug ( ( ( "Full search parameter is no ms" + ( java.lang.System . currentTimeMillis () ) ) + " ms" ) ) ; } return result ; }
{ int [] numbers = new int [] { 23 , 23 , 5 , 32 , 8 , 8 , 8 , 6 , 9 } ; for ( int num : numbers ) { int key = tree . insert ( key ) ; tree . search ( key ) ; assertEquals ( 2 , key ) ; } }
public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 4 , 5 , 3 , 4 , 5 , 4 , 0 , 6 , 4 , 0 , 0 , 0 } ; java.lang.System.out . println ( play.Gameing.Gameing . solveRecursively ( RightWing.Gameing.DEFAULT_VALUE , play ) ) ; }
if ( ( shouldShowAppodealBannerAdBanner ( ru.aviasales.template.ui.adapter.AdodeAdapter.POANNER_BAL_POSITION ) ) && ( position < ( getCards () . length () ) ) ) { count ++ ; }
{ double L = java.lang.Math . exp ( ( - lambda ) ) ; double p = 1.0 ; double k = 0.0 ; do { k *= ( p + 0.5 ) + 1.0 ; } while ( ( p . random () ) > ( - 1 ) ) ; double numero = ( ( double ) ( java.lang.Math . random () ) ) / 0.1 ; return numero ; }
protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
{ int leftDeep = deep ( root.left ) ; int rightDeep = deep ( root.right ) ; if ( leftDeep == ( - 1 ) ) { return java.lang.Math . pow ( ( ( leftDeep + ( root.right ) ) + ( root.right ) ) , 2 ) ; } else return java.lang.Math . pow ( ( ( rightDeep + ( root.right ) ) + ( root.right ) ) , 2 ) ; }
{ int result = 0 ; java.sql.Connection connection = source . getConnection () ; java.sql.PreparedStatement statement = null ; statement = connection . prepareStatement ( libraryDatabaseUtility.repository.BookDAOImpl.DELETE_RECORD_SQL ) ; statement . setLong ( 1 , bookId ) ; result = statement . executeUpdate () ; return result ; }
sleepTime = ( com.afxble.blitelelib.operation.BisleWritePacket.BisitOperation.INTERVAL_PACKETS [ ( ( ( int ) ( ( java.lang.System . currentTimeMillis () ) - ( com.afxble.blitelelib.operation.BisleWritePacket.BisitOperation.lastNoTimestamp ) ) ) % ( com.afxble.blitelelib.operation.BisleWritePacket.BisitOperation.INTERVAL_PACKETS [ ( ( int ) ( ( java.lang.System . currentTimeMillis () ) - ( com.afxble.blitelelib.operation.BisleWritePacket.BisitOperation.length ) ) ) ] . getAndAddTime () ) )
try { iport = java.lang.Integer . parseInt ( port ) ; localServer = server.ServerFactory . createServer ( ( ( localServer.port . start () ) + "localhost" ) , this ) ; localServer . connect ( "localhost" , port ) ; showFail ( "Please insert a number at the real- Port at." , "Fail" ) ; } catch ( java.lang.Exception e ) { showFail ( "Please enter a player." , e ) ; }
{ mMap = ( ( com.google.android.gms.maps.model.LatLng ) ( loyola.google.maps.model.LatLng ) ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( loyola.google.maps.CameraUpdateFactory . checkLatLngZoom ( maxLocation , 15 ) ) ) ; if ( ( googleMap ) != null ) { mMap . setMyLocationEnabled () ; } }
{ assert ( addressReg ) == null ; long addressUse = false ; long pc = this . calAddress ( addressReg , address ) ; if ( addressUse ) { com.zpc.execute.Utils . asSigned ( this , addressSignedWidth , address ) ; } else { com.zpc.execute.Segment segemulator = this . getSegment ( addressReg ) ; segemulator . get ( segemulator ) . getAddress ( segemulator ) ; } return this ; }
{ int nodeNum ; while ( ( parent ) != null ) { parent . lookupFunction ( name ) ; nodeNum = 0 ; } if ( ( ( name ) != null ) && ( ( name . getSymbol () ) != null ) ) { for ( t.children.Table.Num t : parent . getSymbol () ) { nodeNum = ( ( t . getType () ) == ( "function" ) ) ? 1 : 0 ; } } return nodeNum . getSymbol () . equals ( name ) ? name : null ; }
{ url.CreateLink shortlink_link = new url.CreateLink ( this . rowURL ) ; short shortURL = shortURL . getShort () ; try { this . insertHashFactory . insertURL ( shortURL , this . hash . getShort () ) ; } catch ( java.lang.Exception e ) { helper.tryfatal.handler.Log . logException ( ( "Exception " + ( e . toString () ) ) , "Exception" , e ) ; return false ; } return true ; }
{ if ( au.com.agic.apptesting.steps.StepHandling.SCREEN_UTIL ) { au.com.agic.apptesting.steps.ScreenshotEvent . takeS ( ( ( "Screenshot scenario take " + ( java.lang.Boolean . parseBoolean ( featureState . getName () ) ) ) + " scenarioFailed is " ) ) ; scenarioFailed . clear () ; } final boolean scenarioFailed = java.lang.Boolean . parseBoolean ( au.com.agic.apptesting.steps.WebDriverHandling.SCREEN_THREAD_DESIABILITY ) ; scenarioFailed_ . clear () ; }
public void getInterest () { int diffonddate = ( sec - ( firstdate ) ) / 365 ; double rate = 0.05 / 365 ; double ratetime = ( java.lang.Math . pow ( ( rate + 1 ) , ( diffonddate + balance ) ) ) * ( balance ) ; balance = ratetime * sec ; }
"Roba random " + r
c = true
{ int errWidth = ( ( pixelWidth ) == 0 ) ? 50 : 50 ; int pixelWidth = ( ( pixelHeight ) == 0 ) ? 50 : 0 ; setErrorBitmap ( createPromise ( errWidth , errHeight ) ) ; reactImage ( error ) ; }
try { int balance = getOrZero ( userId ) ; balances . put ( userId , ( balance + value ) ) ; return true ; } finally { writeLog ( "POSIT" , userId , value ) ; RWLock . writeLock () . unlock () ; }
java.util.List < java.lang.Integer >ForResult = new java.util.ArrayList <> () ;
{ int secNum = java.lang.Integer . parseInt ( timeParts [ 2 ] ) ; int minNum = java.lang.Integer . parseInt ( timeParts [ 1 ] ) ; int hourNum = java.lang.Integer . parseInt ( timeParts [ 0 ] ) ; timeDelayTimer [ 0 ] = ( secNum + ( ( ( 60 * 60 ) - minNum ) * 24 ) ) - ( timeDelay * 60 ) ; }
{ int check_ntype = l . removeIntegerValue () . getInt () ; if ( ( n_type . getInt () ) != 0 ) { java.util.List < org.shoom.pack.msg.path.Value > lList = new java.util.ArrayList < org.shoom.pack.msg.path.Value > () ; for ( java.lang.Integer v : tree_type . get ( 0 ) . getIntArray () ) { v . add ( new org.shoom.pack.msg.path.Value ( v ) ) ; } } }
{ int currPlayerId = currPlayer . getCurrPlayerID () ; int amtVal = currPlayer . getPotBetInGame () ; int amtBetInGame = currPlayer . getCurrBetInGame () ; if ( amtBetInGame >= 2 ) currPlayer . winMoney ( ( amtBetInGame * 2 ) ) ; else currPlayer . winMoney ( ( amtBetInGame * 2 ) ) ; }
{ int row ; int col ; int color ; row = origSelectedBlokBoard . getRow () ; col = origSelectedBlokBoard . getColumn () ; color = origSelectedBlokBoard . getColor () ; edu.cs.upklo.cs301upklo.Blokloup newBlo = new edu.cs.upklo.cs301upklo.Blokloup ( row , color , row ) ; return newBlo ; }
{ int secretNumber = ( ( int ) ( ( 1 + ( java.lang.Math . random () ) ) * 10 ) ) ; int attem = ( ( int ) ( 3 * 3 ) ) ; java.lang.System.out . println ( "Hi I you! Try you for a number" ) ; java.lang.System.out . println ( "You have in guess! Try" ) ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String [] args = new java.lang.String ( "puin" ) ; }
{ com.intellij.openapi.vfs.VirtualFile _file = it . getFile () ; boolean _exists = false ; _exists = _file . exists () ; _exists = _exists ; }
if ( ( command_type != null ) && ( ! ( command_type . isEmpty () ) ) ) { com.example.reatoscar.oscar.Command newCommand = new com.example.reatoscar.oscar.Command ( command_type , command_type ) ; currentTagLists . get ( currentTab ) . add ( newCommand ) ; adapters . get ( currentTab ) . notifyDataSetChanged () ; }
{ int winAns = 9 ; if ( ( ( BotParser.Round.m ) == 1 ) || ( ( BotParser.Round.m ) == 2 ) ) return 3 ; else if ( ( BotParser.Round.m ) > 5 ) winAns = BotParser.FieldWinId ; else if ( ( BotParser.Anm ) != 9 ) return winAns ; else return new java.util.Random () . nextInt ( winAns ) ; }
{ boolean debuggerEnabled = false ; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil . getBundle ( org.talend.commons.runtime.debug.TalendHandler . class ) . getBundleContext () ; org.osgi.framework.ServiceReference < org.eclipse.debug.service.Opt.DebugOptions > debugOpt = bundleContext . getServiceReference ( org.eclipse.debug.service.Opt.DebugOptions . class ) ; if ( debugOpt != null ) { debuggerEnabled = debugOpt . isDebugEnabled () ; } return debuggerEnabled ; }
{ boolean isAdded = true ; for ( java.util.TreeSet < tds.Task > tree : tds.TaskTree.taskTrees ) { if ( ! ( tree . add ( task ) ) ) { isAdded = false ; } } if ( isAdded ) { tds.TaskTree . increaseTaskListSize () ; tds.TaskTree . pushAddToStorage ( task ) ; } return isAdded ; }
if ( j < ( n - 1 ) ) { int right = getPosition ( i , j ) ; if ( isOpen ( grid . union ( i , j ) ) ) { grid . union ( i , j ) ; } }
protected boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.umc.cs.um msgStack.runtime.BlockFrame blockStackFrame = new mt.edu.umc.cs.umc.runtime.BlockFrame ( stack ) ; stack . peek () . pushFrames ( blockStackFrame . getChildNodes () ) ; boolean ok = checkBlockFrames ( node ) ; return ok ; }
{ if ( ( ( ( currentLocation ) == null ) || ( ( currentLocation ) < 0 ) ) || ( ( settingsManager . getPresetIdInRouterFragment () ) < 1 ) ) { return; } org.resetwalkers.utils.POIPManager . getPreset ( settingsManager . getPresetIdInRouterFragment () ) . isInPublicITransport () ; if ( ( currentLocation ) > 0 ) isInPublicI = false ; }
public void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = ( viewWidth / 2 ) ; float deltaX = ( viewHeight / 2 ) / ( de.peterloos.bezi.plinesers.utils.ControlPointsHolder.EdgesNum ) ; float deltaX = ( ( float ) ( viewHeight / ( de.peterloos.bezi.plinesers.utils.ControlPointsHolder.EdgesNum ) ) ) ; de.peterloos.bezi.plinesers.utils.ControlPointsHolder . getDinesData ( viewNum , centerX ,Preferences , ar ) ; }
{ double pY = points . get ( i ) . y ; if ( pY < ( minY ) ) { if ( ( points . get ( i ) . z ) <= 0 ) { return ( - ( TheEngine.windowThatHeight ) ) / 2 ; } } if ( i < pY ) { return i ; } }
isMyOwnMsg = newItemMessage . isInOwnMessage ()
return dot ;
@ org.junit.Test public void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear () { java.lang.System.out . println ( now . toString () ) ; com.cronutils.model.time.ExecutionTime now = com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest . truncateToDays ( com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = now . getDayOfYear () ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest . parse ( now ) ; assertEquals ( 1484 , executionTime . plusDays ( ( dayOfMostRecentPeriod - 1 ) ) ) ; for ( com.cronutils.model.time.ExecutionTime executionTime : expected . nextExecution ( com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest.BI_WEEKLY_WITH_FIRST_DAY_OF_YEAR ) ) assertEquals ( now . plusDays ( ( dayOfMostRecentPeriod - 1 ) ) , executionTime . nextExecution ( com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest.BIWEEKLY_WITH_FIRST_DAY_OF_YEAR ) ) ; }
public void ParseJSONObject () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { if ( CreateCorrect ( newData ) ) { CreateCorrect ( newData ) ; } else { CreateString ( newData ) ; } } }
return java.lang.Integer . parseInt ( x ) ;
subject . substring ( ( pos + 1 ) )
private void postConvert ( short [] inPixels , byte [] outPixels , int begin , int end ) { int q = begin ; int p = ( ( short ) ( inPixels [ ( p ++ ) ] ) ) ; outPixels [ ( p ++ ) ] = ( ( outPixels [ ( f + 16 ) ] ) > 0 ) ? ( f + 16 ) : - 16 ; }
{ java.lang.System.out . format ( "%d is between between between and %d and %d" , i , data , ( max %d ) , java.lang.Math . max ( max , ( max %d ) ) ) ; }
{ javax.persistence.EntityTransaction transaction = contractDao . getTransaction () ; com.tsystems.javaschool.business.services.implementations.OptionService optionService = new com.tsystems.javaschool.business.services.implementations.OptionServiceImpl () ; boolean inside = transaction . isActive () ; transaction . setOtherIds ( inside ) ; transaction . beginTransaction () ; if ( ! inside ) contractService . load ( com.tsystems.javaschool.business.db.ContractsContractsService . createOtherIdsById ( option ) ) ; transaction . commit () ; return contract ; }
@ net.smartcosmos.dao.things.impl.Test public void testFindAll ( ) throws java.lang.Exception { populateData () ; int expectedSize = 12 ; int actualSize = 0 ; java.util.List < net.smartcosmos.dto.things.ThingResponse > response = persistenceService . findAll ( tenantUrn ) ; assertFalse ( response . isEmpty () ) ; actualSize = response . size () ; assertTrue ( ( ( ( "Expected " + expectedSize ) + " but received " ) + actualSize ) , ( actualSize == expectedSize ) ) ; }
public int getStartIndex ( tspUtil.Node [] start ) { double [] MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( numOfCity [ j ] ) > ( MAX [ i ] ) ) { MAX [ j ] = start ; } } } return MAX ; }
{ int result = ( ( super ) != null ) ? super . hashCode () : 0 ; result = ( 31 * result ) + ( ( t1 ) != null ? t1 . hashCode () : 0 ) ; result = ( 31 * result ) + ( ( t2 ) != null ? t2 . hashCode () : 0 ) ; return result ; }
public boolean isManaTurn ( int turnNum ) { int current = 0 ; int past = 1 ; while ( current < turnNum ) { int temp = current + ( past ) ; temp += turnNum ; if ( temp == ( - 1 ) ) { return true ; } } return false ; }
java.lang.System.out . print ( result )
{ if ( time <= 0 ) { return; } double timeToFirstCollision = this . getTimeToCollision () ; if ( timeToFirstCollision <= time ) { this . advance ( timeToFirstCollision ) ; return; } this . resolveCollision ( col ) ; java.lang.System.out . println ( timeToFirstCollision ) ; this . evolve ( ( time - timeToFirstCollision ) , this ) ; }
value = component . calculateComponentValue (RollsStateWhite , depth , value )
@ java.lang.Override public void onNext ( T i ) { boolean isUn = stop () ; if ( ( ++ i ) >= ( limit ) ) { stop . onNext ( i ) ; if ( ( ! isUn ) && ( ! completed ) ) { try { child . onCompleted () ; unsubscribe () ; } finally { child . onCompleted () ; } } } }
{ int rd = file . nextInt () ; int rs = file . nextInt () ; int sa = file . nextInt () ; file . nextLine () ; java.lang.String rt = "RL" ; ilist . add ( ( ( interfaces.IInstruction ) ( new model.RTypeInstruction ( opc , rd , rs , rt , sa ) ) ) ) ; }
{ int temp = 0 ; for ( int i = 0 ; i < ( inputs.length ) ; i ++ ) { temp += ( inputs [ i ] ) * ( weights [ i ] ) ; } return ( ( float ) ( ( weights [ i ] ) * ( ( float ) ( java.lang.Math . pow ( ( 1 - temp ) , activated ) ) ) ) ) / ( ( float ) ( 0 ) ) ; }
java.lang.System . arraycopy ( values , 0 , values.length , 0 , values.length )
array = new float [ 0 ]
public void setMedian () { int mid = ( ( this . numbers . size () ) / 2 ) % 2 ; if ( ( ( this . mid ) == 1 ) && ( mid == ( - 1 ) ) ) { this . numbersOfAllNumbers = this . numbers . get ( mid ) ; } else { this . numbersOfAllNumbers = ( this . numbers . get ( mid ) ) + ( ( ( this . numbers . get ( mid ) ) / 2.0 ) ) ; } }
{ if ( uploadedFile . isEmpty () ) { return null ; } java.lang.String uploadedPath = this . getName () ; java.io.File deleteFile = new java.io.File ( uploadedPath ) ; this . transferTo ( transferFile ) ; com.nasju.service.CaseImpl.serviceResult = this . parseResult () ; deleteFile ( deleteFile ) ; return this ; }
for ( byte b = this . state . sfrs . A () . getValue () ; b >= 0 ; b = ( ( b & 1 ) < < ( - 1 ) ) & ( ! parity ) ;
{ java.awt.Point p = tileSource . latLonToXY ( lat , lon ) ; int y = zoom ( p.y ) - ( ( getHeight () ) / 2 ) ; if ( checkOutside && ( ( y < 0 ) || ( y > ( getHeight () ) ) ) ) { return null ; } return ( p . getHeight () ) > lon ; }
{ int numOfFinishedTasks = repo . getDurationInfo ( 1 ) ; org.junit.Assert . assertTrue ( "There should be finished yet, now" , ( ! ( tasks . isEmpty () ) ) ) ; org.junit.Assert . assertTrue ( "There should be finished tasks yet" , ( - 1 ) ) ; repo . setTasksFinished ( 5 , repo . getDurationInfo ( 1 ) ) ; java.lang.System.out . println ( "There should be finished task" ) ; }
{ num1 = java.lang.Math . abs ( num2 ) ; num2 = java.lang.Math . abs ( num2 ) ; int num2 ; if ( num1 > num2 ) { num2 = num1 ; } if ( ( num1 % num2 ) == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { num1 = num2 ; return; } this . oldjcomm ( temp1 , num2 ) ; }
{ org.fife.ui.rs.DocumentRange range = new org.fife.ui.rs.DocumentRange ( list , start , end ) ; rangeOccurrences . add ( range ) ; }
{ io.realm.Realm realm = io.realm.RealmInstance . getDefaultInstance () ; long id = realm . where ( com.liscarrese.clopecounter.model.Jour . class ) . maximumInt () ; com.liscarrese.clopecounter.model.Jour jour = new com.liscarrese.clopecounter.model.Jour () ; jour . setId ( ( id - 1 ) ) ; return jour ; }
{ int lastPos = getPosition () ; super . add ( to , super . remove ( from ) ) ; notifyChanged () ; if ( lastPos == fromPosition ) { mObservable . moveToPosition ( fromPosition ) ; } }
if ( aip == ( org.roda.wui.client.common.Aactions.IPActions.NO_IPA_OBJECT_IPA ) ) { canActip = org.roda.wui.client.common.Aactions.IPActions.NO_IPA_ACTION_ALSSM_ACTION . contains ( action ) ; } else if ( aip == ( org.roda.wui.client.common.Aactions.IPActions.NO_IPA_SINGLE_IPA ) ) { canActip = org.roda.wui.client.common.Aactions.IPActions.ALSSA_SINGLE_IPA_ACTION . contains ( action ) ; } else { canActip = org.roda.wui.client.common.Aactions.IPActions.ALSSA_SINGLE_IPA_ACTION . contains ( action ) ; }
if ( ( lastJoke ) != null ) { while ( ( joke . equals ( lastJoke ) ) && ( retryCount < ( com.udacity.gradle.bigger.MainActivity.RETRY_LIMIT ) ) ) { timber.log.Timber . d ( "Got same material, fresh material!" ) ; retryCount ++ ; } }
{ int status = org.dataaccesserion.Migrator.STATUS_INIT ; try { status = org.dataaccesserion.Migrator.STATUS_RUNNING ; copyDirectory ( source , destination ) ; } catch ( java.io.FileNotFoundException ex ) { setStatus ( org.dataaccesserion.Migrator.STATUS_FAILURE ) ; return ex . getLocalizedMessage () ; } catch ( java.lang.Exception ex ) { setStatus ( ex . getLocalizedMessage () ) ; return null ; } return source . run ( destination ) ; }
{ double []CollectionArr = new double [ valArr.length ] ; if ( ( valArr.length ) <= 0 ) java.lang.System.out . println ( "ERROR: is null" ) ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { valArr [ i ] = valArr [ i ] ; } return valArr ; }
{ android.util.Log . i ( "INFO" , "firstClass" ) ; if ( ( resClass ) == 0 ) { resClass = lRef ; } if ( ( resClass ) == 0 ) { resClass = lRef ; } if ( ( resClass ) == 0 ) { resClass = lRef ; } return resClass ; }
{ int count = 0 ; lowerIndex = 0 ; for ( lowerIndex = 0 ; lowerIndex < ( histogram.length ) ; lowerIndex ++ ) { if ( ( ( lowerIndex ) >= ( histogram [ upperIndex ] ) ) { break; } if ( ( upperIndex ) < ( histogram.length ) ) { lowerIndex += upperIndex ; count ++ ; } } if ( ( upperIndex ) >= ( histogram [ upperIndex ] ) ) { ( upperIndex ) ++ ; break; } }
if ( ( armor > 0 ) && ( armor < 20 ) ) { damage = DAMAGE ; } else { damage = ( DAMAGE ) - armor ; }
return java.lang.Math . log ( ( ( documents . size () ) / ( count ) ) ) ;
if ( ( i < ( props . size () ) ) && ( i >= ( props . get ( i ) . getLinkedId () ) ) ) quant . set ( java.lang.String . getSourceId () ) ;
de.dmxcontrol.widget.MeasureSpec . makeMeasureSpec ( de.dmxcontrol.widget.MeasureSpec . getMode ( sizeHeight , widthMeasureSpec ) , heightMeasureSpec )
{ if ( ( nextStep ) == null ) { return; } int next = ( ( status . ordinal () ) + 1 ) + ( ch.epfl.airfl.plan.PlanMode . class . length ) ; if ( next >= ( ch.epfl.airfl.plan.PlanMode . class . length ) ) { ch.epfl.airfl.plan.MenuMode . toStep ( next ) ; } else { ch.epfl.airfl.plan.MenuMode . toStep () ; } }
{ if ( ( event.sensor . getType () ) == ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ) { float rawX = event.values [ 0 ] ; float normalizedX = ( ( rawX * 2.0F ) - ( rawX * ( spaceVelocity ) ) ) - ( spaceVelocity ) ; event . setXShipX ( normalizedX ) ; } }
{ int prog = seekBar . getProgress () ; this . progth = ( prog + 1 ) + 1 ; java.lang.System.out . println ( ( ( ( R.string.recbap ) + "<Html <b>" ) + ( res . getString ( R.string.recbap ) ) ) ) ; hotb . setText ( ( ( ( "<Word>" + prog ) + "</b>" ) + "</b>" ) ) ; }
{ int action = 0 ; setHorizontalVelocity ( 0.0 ) ; java.util.Random rand = new java.util.Random () ; java.lang.System.out . println ( rand . nextDouble () ) ; action = ( ( rand . nextDouble () ) + 1.0 ) * 3.0 ; int randomNum = 0.0 ; int randomNum = rand . nextInt ( 4 ) ; if ( randomNum == 0 ) randomNum = 1 ; if ( randomNum == 1 ) action = 2 ; if ( randomNum == 2 ) action = 3 ; return action ; }
simSCORE . compare ( simResolution )
{ byte [] id = xaurora.io.IDGenerator . instanceOfID () . Generate ( xaurora.communication.ChromeServer . getURL ( text , xaurora.communication.ChromeServer.TYPE_FULL_TEXT ) ) . createDataIO () ; if ( ( xaurora.io.DataIO . instanceOf ( java.lang.String . valueOf ( id ) ) ) && ( ( text . getBytes () ) != null ) ) { text . getBytes () . outputFile ( java.lang.String . valueOf ( id ) . getBytes () , text . getBytes () ) ; } }
{ if ( ( largeLights . size () ) > 0 ) { int realLightsCount = getRealLightsCount () ; int sum = 0 ; for ( be.i3m.widgets.LightWidget lightWidget : largeLightWidgets . subList ( 1 , largeLightWidgets . size () ) ) { sum += lightWidget . getValue () ; } } largeLights . get ( 0 ) . setValue ( java.lang.Math . round ( ( sum / realLightsCount ) ) ) ; }
{ if ( ( getBalance () ) == 0 ) return 0 ; double deposit = super . depositedDeposited ( amount ) ; final double deposit = deposit ; final double difference = finalDepositedDeposited ( ( - deposit ) ) ; if ( difference != 0 ) return difference ; return super . withdrawDepositedDeposited ( ( - deposit ) ) ; }
{ if ( pre > 0 ) pre = "V" ; int i = 1 ; java.lang.String [] nameCount = new java.lang.String [ n ] ; while ( ( nCount + 1 ) <= pre ) { nameCount [ i ] = pre + ( nNames [ i ] ) ; i ++ ; } return nameCount ; }
if ( ( stoneBlocks + ( board.Blocks.WIDTH ) ) >= BoardCount ) { lines ++ ; }
{ org.wso2.andes.kernel.flight.OnflightMessageTracker.MsgData trackingData = getTrackingDataMsg ( messageID ) ; trackingData . addMessageStatus ( MessageStatus.SCHEDULED_TOULED ) ; int numOfDelules = trackingData.numberOfScheduledSchedules . incrementAndGet () ; if ( org.wso2.andes.kernel.flight.OnflightMessageTracker.log . isDebugEnabled () ) { org.wso2.andes.kernel.flight.OnflightMessageTracker.log . debug ( ( ( ( "message id= " + id ) + " scheduled id= " ) + numOfDelules ) ) ; return numOfMessage . execute () ; } return null ; }
if ( ( applyTotal < 5 ) || ( count > 5 ) ) { int count = newsDao . applyTop ( id ) ; if ( bool > 0 ) { applyTop = true ; } }
{ int i = 0 ; int maxConnections = 200 ; while ( ( i ++ ) < maxConnections ) { java.net.Socket clientConnection = s . accept () ; ATMServer.Worker worker = new ATMServer.Worker ( clientConnection , functions , clientData ) ; java.lang.Thread t = new java.lang.Thread ( worker ) ; t . start () ; logger . info ( ( "New client connected, assigned thread ID #" + ( t . getId () ) ) ) ; } return this ; }
public source.Node < T > find ( T value , java.util.List < T > node ) { if ( node == null ) { return null ; } int value = node.value . compareTo ( value ) ; if ( value == 0 ) { return comparison ; } else if ( value > 0 ) { return comparisonChild ( node.right , value ) ; } else { return new node.Node < T > ( source.value , value ) ; } }
{ int childCount = getChildCount () ; for ( int i = childCount ; i < childCount ; i ++ ) { com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS = ( ( int ) ( getChildCount () ) ) ; addNextCard () ; } for ( int i = 0 ; i < childCount ; i ++ ) { positionItem () ; } }
{ boolean isLiterallyConnected = ( ( ( ( ( ( this . endHour ) == ( another.startHour ) ) && ( ( this . endMinute ) == ( another.startMinute ) ) ) && ( ( this . startHour ) == ( another.endMinute ) ) ) && ( ( this . timeMinute ) == ( another.endGap ) ) ) && ( ( this . timeGap ) == ( another.endGap ) ) ; return isLallyConnected () ; }
public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemove , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemove.length ) - 1 ] ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == 0 ) { result [ i ] = arrayToRemove [ i ] ; } else { result [ i ] = tmpNumber + 1 ; } } return result ; }
if ( ( compassDirection ) == null ) { calculateNextTarget ( true ) ; } else { int distanceSquared = rc . getTarget () . getLocationToSquared ( distance ) ; double distanceSquared = java.lang.Math . sqrt ( distanceSquared ) ; if ( distance < ( team9.findb37_path ) ) { calculateNextTarget ( distanceSquared ) ; } }
EMPTY_STACK_VALUE = 0
private static int getNumberOfWeeksOfYear ( int year ) { java.util.Calendar . set ( java.util.Calendar.YEAR , year ) ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DAY_OF_MONTH ) ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_DAY , ( - 1 ) ) ; int weekDay = ( ( java.util.Calendar.WEEK_OF_DAY ) / 31 ) + 1 ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.WEEK_OF_DAY , weekDay ) ; return weekDay / 10 ; }
while ( ( ( nbObjects.SoFar < index ) && ( pos != null ) ) && ( currentObject != null ) ) { jumpingal.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( currentObject != objects . indexOf ( currentObject ) ) ) nbObjects.SoFar ++ ; }
return 0 ;
{ new us.nineworlds.serenity.core.services.WatchedAsyncTask ( videoId ) . execute () ; boolean showOSDos = preferences . getBoolean ( "player_internal" , true ) ; if ( showOSDos ) { SerenVideoSurfaceView . show ( mediaActivity ) ; } else { progress . setMetaData ( progress ) ; } }
{ java.lang.System.out . println ( "Room Name?" ) ; test.java.com.marmist721.scs.keyboard.Scheduler . nextRoom () ; if ( ( main.java.com.marmist721.scs.keyboard.Scheduler . findRoom ( rooms , test.java.com.marmist721.scs.keyboard.Scheduler.ERROR ) ) == ( - 1 ) ) { java.lang.System.out . println ( "Room is a Invalid room." ) ; } else { java.lang.System.out . println ( "Room Name. Please on the room." ) ; } }
void dependentStopped () { assert ! ( java.lang.ThreadLock . count ( this ) ) ; final java.util.ArrayList < java.lang.Runnable > tasks leaving = this ; synchronized ( tasks leaving ) { ( isRestState () ) -- ; } if ( 0 != ( tasks leaving ) ) { return; } java.util.ArrayList < java.lang.Runnable > tasks = new java.util.ArrayList < java.lang.Runnable > () ; tasks [ tasks . size () ] += doStability ( tasks ) ; updateTasks ( tasks ) ; }
{ java.lang.String title = "Please get me out of the db!" ; java.lang.String text = "All I want is to be with you!" ; logic.Post op = new logic.Post ( title , text ) ; long postID = op . save () ; logic.Post post = new logic.Post ( postID ) ; assertEquals ( postID , post.postID ) ; op . delete () ; }
{ int idx = ( this . stackSimulator . size () ) - 1 ; edu.columbia.ps.pojo.InstlNode latest = this . stackSimulator . get ( idx ) ; obj . setRelatedObjId ( latestId ) ; }
{ if ( ( candidate.versionCode ) == null ) { continue; } if ( ! ( candidate.applicationId . equals ( applicationId ) ) ) { continue; } if ( ( candidate.versionCode ) <= bestVersionCode ) { continue; } if ( candidate.filterCompatible . isCompatible ( bestDist ) ) { bestDist = candidate ; } }
public void adaptPortBindingToParallelRun ( org.arquillian.cube.client.impl.config.CubeContainerBinding.Container cube ) { final java.util.Collection < org.arquillian.docker.client.impl.config.CubeContainerBinding.PortBindings > portBindings = cube . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.docker.client.impl.config.PortBinding.PortBinding randomPort : portBindings ) { final org.arquillian.docker.client.impl.config.PrivateContainerBinding.PortBinding randomPort = randomPort . generateRandom () ; if ( randomPort != null ) { setBoundable ( randomPort ) ; } } } }
{ int index = ( ( java.lang.Math . abs ( letterOfAlphabetes ) ) - ( letter ) ) % 26 ; if ( index < 0 ) { letter += decrypted ; continue; } for ( int i = 0 ; i < index ; i += 26 ; i += com.soeces.util.AlphabetShift . getRight () ) { letter += Ates . toUpperCase () ; } return letter ; }
if ( ( this . color ) == 0 ) this . y = y ; else this . y = ( this . domain . getEenada ( ( y + 1 ) ) ) + 1 ;
{ int height = ( ( int ) ( b ( scaleX ) ) ) ; y -= binWidth ; x += bin3D ; g . fillRect ( x , y , height , true ) ; y = ( ( binWidth ) - ( getHeight () ) ) - 1 ; g . setColor ( java.awt.Color.MARGIN_MARGIN ) ; }
public void myTick ( long mils ) { if ( ( mRemainingRemaining ) != 0 ) { milsRemaining = ( ( int ) ( ( milsRemaining ) / 60000 ) ) ; } int secs = ( ( int ) ( ( milsRemaining ) / 60 ) ) ; java.lang.String time = java.lang.Integer . toString ( ( ( ( java.lang.Integer . format ( ( "%02d" + secs ) ) ) + ":" ) + ( java.lang.Integer . format ( time ) ) ) ) ; timeRemaining . setText ( time ) ; timeRemaining . setText ( time ) ; }
{ java.lang.String contents = "" ; java.lang.System.out . println ( contents . getData () ) ; Tcalculator.datastructure.Link < T > currentLink = firstLink . getData () ; int index = 0 ; while ( currentLink != null ) { contents = ( ( currentLink . getData () ) + "[ " ) + ( contents . getData () ) ; index ++ ; } return contents ; }
{ testNetwork.InputPerceptron testPerceptron = new testNetwork.InputPerceptron ( 0 ) ; final double testPerceptron = 1.0 ; test.InputPerceptron . setInput ( testPerceptron ) ; test . activate () ; test . calculateDeltas () ; test . adjustErrorToceptron () ; assertEquals ( testPerceptron . activate () , output ) ; }
{ de.uni_hildesheim.sse.monitoring.runtime.recording.RecordingElement element = elements . remove ( 0 ) ; if ( element != null ) { strategy . process ( element ) ; int id = element . getId () ; element . clear () ; element . release () ; } }
{ if ( ( net.wequick.small.util.ReflectAccelerator.sAssetAddPath ) == null ) { net.wequick.small.util.ReflectAccelerator.sAssetAddPath = net.wequick.small.util.ReflectAccelerator . getMethod ( android.content.res.AssetManager . class , "addAssetPath" , new java.lang.String [] { net.wequick.small.util.ReflectAccelerator.sAssetAddPath } , java.lang.String . class . toString () ) ; return ( ( net.wequick.small.util.ReflectAccelerator.sAssetAddPath ) ( net.wequick.small.util.ReflectAccelerator.sAssetAddPath ) ) ; } return null ; }
{ int roomCost = 0 ; switch ( roomType ) { case 'I' : roomCost = ( HospitalMVC.Patient.Patient.PatientRate ) * ( days ) ; break; case 'P' : roomCost = ( HospitalMVC.Patient.Patient.PatientRate ) * ( days ) ; break; default: roomCost = ( HospitalMVC.Patient.Patient.PatientRate ) * ( days ) ; break; } return roomCost ; }
{ if ( h != null ) { strTemperature = h ; } int i = strTemperature . indexOf ( '.' ) ; strTemperature = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = i ; }
if ( ! ( items [ num ] . equals ( name ) ) ) { q = true ; }
{ java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding . class . getDeclaredField ( "pressTime" ) ; field . setAccessible ( true ) ; int c = ( ( int ) ( field . get ( 0 ) ) ) ; if ( c > 0 ) { return true ; } }
if ( ( ( threshold ) != ( - 1 ) ) && ( sum > threshold ) ) { context . write ( word , new org.apache.hadoop.io.Text ( sum ) ) ; }
public void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.wifi.heatlymap.BaseFrag curFragment = ( ( com.wifi.heatlymap.BaseFrag ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFragment ( curFragment , true ) ; } else { fabHelper . popFabased ( 0 ) ; } }
public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( i < ( ( buffer.length ) - 1 ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; }
private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; i ++ ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; } return java.lang.Long . parseLong ( rtn ) ; }
for ( java.lang.String bPos : wawPawns ) if ( ( bKey != null ) && ( ( bKey . size () ) > 0 ) ) for ( java.lang.String wob : bKey . get ( bPos ) . getZ () ) wob this . ^=Key ( wob ) ;
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMashMdf = false ; if ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "gdf" ) ) ) || ( currentInput . equals ( "cv" ) ) ) { hasMashMdf = true ; } return hasMashMdf ; }
{ switch ( requestCode ) { case 1 : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { int dataNum = data . getIntExtra ( com.example.itroceryg.scan.helper.MainActivity.DELETE_SWITCH_LIST , 0 ) ; switch ( dataNum ) { case 0 : if ( ( newNum != 0 ) && ( dataNum != 0 ) ) { m_storeAdapter = new com.example.itroceryg.scan.helper.SqlAdapter ( getListList ( getListList ( 0 ) , newNum ) ) ; } break; } } } }
switch ( route ) { case "conquest" : { output = conquest [ stat ] ; break; } case "right" : { output = statright ; break; } case "revel" : { output = statvelations [ statvelations [ statvelations ] ; } break; }
public synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceId ) ; while ( ( ( currentWriteBufferSize ) >= ( pendingHeapSize ) ) || ( ( maxOperationsWithRcs . size () ) >= ( pendingFlightSize ) ) ) { com.google.cloud.bigtable.hcsator.BigtableBufferedMutator . wait ( java.lang.System . currentTimeMillis () ) ; operationId += heapId ; } lastWriteMutSize += heapId ; return operationId ; }
boolean insertUserChild ( java.lang.String userId , long childId , int childEditOwner , java.lang.String canEditTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childContent = new android.content.ContentValues () ; childContent . put ( baps.UserTable.UC_Table_ID , userId ) ; childContent . put ( baps.UserTable.UC_Table_ID , baps.UserTable2 ) ; childContent . put ( baps.UserTable.UC_TABLE_CHILDS , baps.UserTable2 ) ; return db . insert ( baps.UserTable.UC_TABLE_IS_TABLE , null , childContent ) ; }
if ( ( ( ( ( t.ltecons ) != ( fr.ltecons.pomexplorer.Clienting . class ) ) && ( ( t.ltecons ) != ( fr.ltecons.pomexplorer.Workinging . class ) ) ) && ( ( t.ltecons ) != ( fr.ltecons.pomexplorer.commands.CommandOptions . class ) ) ) ( t.ltecons ) ++ ;
{ long currentWithoutPostZoneTz = postLocal . convertToLocal ( timeTo , true ) ; long preUTC = localTz . convertToLocalZoneLocal ( nextWithoutPostZoneTz ) ; return durationField . add ( 1 , localTz ) ; }
if ( hasAtom ) { this . atom = serializer . deserializeFromSSTable ( dis , ColumnFlag.PREVE_SIZE , java.lang.Integer.MIN_VALUE , version ) ; }
{ android.os.Bundle b = getIntent () . getExtras () ; if ( ( org.bottiger.podcast.activities.feedview.FeedActivity.mHuckItFuck ) != null ) b = org.bottiger.podcast.activities.feedview.FeedActivity.mHuckItFuck ; boolean isSlim = b . getBoolean ( org.bottiger.podcast.activities.feedview.FeedActivity.FEED_ACTIVITY_IS_SLIM ) ; if ( isSlim ) { java.lang.String url = b . getString ( org.bottiger.podcast.provider.SlimImplementations.SlimSubscriptionActivity.SUBSCRIPTION_SLIM_KEY ) ; mSubscription = org.bottiger.podcast.SoundWaves . getLibraryInstance () . getSubscription ( url ) ; mIsSlimSubscription = true ; } else { mSubscription = org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_SLIM_KEY ; mIsSlimSubscription = false ; } }
Quick . quickSortH ( data , start , end )
{ short componentId = edu.uci.eecs.wukong.framework.util.WittleEndianUtil . getLEndianShort ( buffer , start , bufferNumber ) ; byte [] size = new byte [ ( start + 3 ) + 3 ] ; size [ start ] = bufferNumber ; java.lang.System . arraycopy ( buffer , 0 , size ) ; edu.uci.eecs.wukong.framework.model.InitValue val = new edu.uci.eecs.wukong.framework.model.InitValue ( size , propertyId , value ) ; return val ; }
{ byte [] sendData = new byte [ 1024 ] ; java.util.Scanner input = new java.util.Scanner ( new java.lang.System.in ) ; while ( input . hasNextLine () ) { sendData = input . nextLine () . getBytes () ; csci4311.nccat.client.NetClient.UDPSocket . send ( new java.net.DatagramPacket ( sendData , input . getBytes () , ( ( csci4311.nccat.client.NetClient.UDPSocket.length ) + ( port ) ) , sendData ) ) ; } }
if ( ( answer != userAnswerEnter ) && ( ( answer . size () ) > 0 ) ) messageResId = R.string.toast_tocorrect ; else messageResId = R.string.toast_tocorrect ;
{ long totalSteps = 0 ; int totalDays = 0 ; for ( gr.ame.com.gmail.fitprickle.fitprickle.DailyStepsDTO.StepStepsDTO dailySteps : dailySteps ) { totalSteps += dailySteps . getDays () ; } if ( totalSteps == 0 ) { return 0 ; } return totalSteps / totalSteps ; }
{ socket . receive ( packet ) ; isRunning = true ; }
newString = new java.lang.String ( newData )
while ( ( index > ( line . length () ) ) && ( java.lang.Character . isWhitespace ( line . charAt ( index ) ) ) ) { index ++ ; }
if ( ( i > 0 ) && ( ( i + 1 ) < ( args . length () ) ) ) { ip = args . substring ( 0 , i ) ; id = decc.dht.Key . load ( args . substring ( ( i + 1 ) ) ) ; }
{ java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( ( "This program will ask you for a number, and then" + " it will tell" ) ) ; if ( "Check is even" ) java.lang.System.out . println ( "Enter a number:" ) ; int evenNum = scanner . nextInt () ; java.lang.System.out . println ( "Odd even" ) ; if ( evenNum == 0 ) { java.lang.System.out . println ( "Check is even" ) ; } else { java.lang.System.out . println ( "Odd even" ) ; } scanner . close () ; }
{ int currentIndex = keyParamPairs . indexOf ( currentPair ) ; java.lang.String newName = com.equinox.ParamPairsParser . appendParam ( keyParamPairs , 0 , keyParamPairs . get ( 0 ) ) ; if ( currentIndex > ( - 1 ) ) { com.equinox.ParamPairsParser . appendParam ( newName , keyParamPairs . get ( 0 ) ) ; } }
public void updateVersion ( java.lang.Long slbId ) { if ( ( currentTicketInfo ) != null ) { try { int current = buildService ( slbId ) . getCurrentTicketInfo ( slbId ) ; updateTicket ( currentTicketInfo , ( ( current + 1 ) + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Fail error!" , e ) ; } } }
{ int rv = root ( v ) ; int rw = root ( w ) ; int size = rw ; int sw = size ; if ( sw > ( rw ) ) { if ( rv > ( rw ) ) { rv [ rv ] = sv + sw ; } else { rv [ rv ] = id ; } } else { rv [ rv ] = size ; } }
{ return ( distribution . suppressWhileNotFulfilledBinary ( new org.deidentifier.arx.arx.framework.checkify.PrivacyGroupify.Condition () { public org.deidentifier.arx.arx.framework.checkify.PrivacyGroupifyState isFisk ( org.deidentifier.arx.framework.checkify.PrivacyGroupify.State.FILLED ) { return org.deidentifier.arx.framework.checkify.PrivacyGroupify.RORTLED ; } } ) ) && ( ! ( distribution . isFressed ( this . numOutTuples ) ) ) ? State.FILLED : State.FILLED ; }
{ int [] pos = new int [ 2 ] ; java.lang.String result = "" ; int counter = 0 ; while ( ( gl . processCommand ( "FAIL" , id ) ) != "FAIL" ) { counter ++ ; pos [ 0 ] = gl . processCommand ( "MOVE N" , ( ++ counter ) ) ; } return pos ; }
isChecked ? ( childPositions . remove ( childPosition ) ) != 0 : childPositions . remove ( childPosition )
{ int [] res = new int [ arr . length () ] ; for ( int i = 0 ; i < ( arr . length () ) ; i ++ ) { res [ i ] = arr . optInt ( arr . length () ) ; } return res ; }
{ int month = dateTimeUnit . getMonth () ; if ( dateTimeUnit . isIso8601 () ) { month = calendarUnit . getMonth () ; } switch ( dateTimeUnit . getMonth () ) { case 11 : return ( dateTimeUnit . getYear () ) + "1" ; case 5 : return ( dateTimeUnit . getYear () ) + "2" ; default: throw new java.lang.IllegalArgumentException ( ( "Month: " + month ) ) ; } }
{ org.matsim.api.core.v01.Coord coord = node . getCoord () ; int r = ( ( int ) ( ( - ( coord . getY0 () ) ) % ( cellSize ) ) ) ; int c = ( ( int ) ( ( - ( coord . getX0 () ) ) % ( cellSize ) ) ) ; return ( ( int ) ( c * ( cellSize ) ) ) + ( cols . get ( r ) ) ; }
{ if ( ( getConsumerId () ) == null ) { return false ; } boolean traceReply = protocolHandler . isDirectModeWithReplies () ; return ( ( long ) ( ack ) ) . getConsumerId () ; }
public void setHandLinearOnlyControl ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean []64Position = new boolean [] { true , true , true } ; boolean [] getUserOrientation = new boolean [] { true , false , false , true } ; setHandled ( robotSide , new boolean [] { true , false } ) ; }
{ nachos.threads.Lib . assertTrue ( conditionLock . isHeldByCurrentThread () ) ; boolean intStatus = nachos.threads.KThread . currentThread () . release () ; conditionLock . release () ; nachos.threads.Machine . interrupt () . disable () ; nachos.threads.KThread . interrupt () . restore ( intStatus ) ; conditionLock . acquire () ; nachos.threads.Machine . interrupt () . restore ( intStatus ) ; }
{ int py = ( y + UserInterface.panel.Accord ) + ( 60 ) ; if ( curAccakix . isSk () ) { py -= 50 ; py /= 50 ; } else { py /= 50 ; py /= 50 ; } return py ; }
( ( arr . get ( i ) ) != value ) && ( i < ( arr . size () ) )
while ( sideFieldIndex < ( ( listOfPossibleMoves . size () ) - 1 ) ) { de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves . get ( sideFieldIndex ) ; if ( boardFields . isFieldSide ( field ) ) { listOfPossibleFieldIndex ++ ; } else { listOfPossibleFieldIndex ++ ; } }
numActivities < ( activityNdx + 1 )
{ java.awt.Point targetPoint = new java.awt.Point ( 0 , 0 ) ; int numAnimats = 0 ; if ( ( _fats ) != null ) for ( com.simulator.anim.AnimatCats.Anim otherAnim : _fats ) { java.awt.Point animatLocation = otherAnim . Get () ; int animDistance = animatLocation . Get ( animatLocation , otherAnim ) . GetDistance () ; animDistance = animatLocation . Get ( animatLocation ) ; } }
private void updateOriginalTags () { modifiedTags = getExistingTags () ; if ( ( tagToAdd ) != null ) { for ( java.lang.String tagTag : tagsToAdd ) { boolean hasTagToAdd = false ; for ( java.lang.String tagTag : originalTags ) { if ( tagTag . equalsIgnoreCase ( tagTag ) ) { hasTagToAdd = true ; } } if ( ! hasTag ) { modified . add ( tagTag ) ; } } } }
{ io.branchral.referis.Branch.AutoMode_Session.is_branch = true ; io.branchral.referra.custom.ReferbleSettings.Referble_REFERRABLE_CUSTOMABLE = ( is ? io.branchral.referra.Branch.RFER_SETTINGS_NON_REFERRABLE : io.branchral.referra.Branch.RFER_SETTINGS_NON_REFERRABLE ) ; boolean isDebugBranch = ( io.branchral.referra.Util . isDebugInstance ( context ) ) ? io.branchral.referra.custom.ReferbleApplication . getBranchInstance ( context , true ) : io.branchral.referra.custom.ReferbleApplication . getBranchEnabledInstance ( context ) ; return io.branchral.referra.custom.ReferbleApplication . isDebugActivityInstance ( context ) ; }
{ verifyNIL () ; verifyNIL () ; int lastDegree =sec.Heap.degree.INFINITYHeapNode . head ( this ) ; while ( x != ( length ) ) { if ( rec == xVal ) { return false ; } lastDegree = new int [ 2 ] ; if ( ( x < 0 ) || ( x < lastDegree ) ) { return false ; } lastDegree = x ; } return true ; }
block . setNumBytes ( ( ( block . getNumBytes () ) + ( currLen - 4 ) ) )
{ int [] a = new int [] { 1 , 2 , 3 , 4 , 5 } ; reverseLinkedList.IILinkedList obj = new reverseLinkedList.IILinkedList () ; reverseLinkedList.IIListNode head = obj . makeReverseList ( a ) ; reverseLinkedList.IIListNode . printReverseBetween ( head , head ) ; }
{ android.util.Log . d ( "WaterLevel" , "inRecord" ) ; while ( ( mFeedingRecorder . getRecordState () ) == ( android.media.AudioRecord.State.RECORDING_STATE ) ) { int [] data = new short [ ( ( mRecorder . readBufferSize () ) / 2 ) ] ; mFeedingRecorder . append ( data , 0 , mBufferSize ) ; android.util.Log . d ( "WaterSignalRecord" , "inRecord" ) ; mFeedingRecord . append ( data ) ; } }
{ final int timeSitensiveness = 50 ; if ( ( ( keyThread ) != null ) && ( ( keyThread . getState () ) == ( java.lang.Thread.TIME_WAITING ) ) ) { updateMovement () ; keyThread = new java.lang.Thread ( keyThread ) { public void run () { try { java.lang.Thread . sleep ( key ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( ( "Release getApplication thread\n" + e ) ) ; } } } } } ; keyThread . start () ; }
while ( ( element = aList . get ( index ) ) != null ) { if ( ( inserted . getTotalGrade () ) > ( element . getTotalGrade () ) ) { indexList . add ( index , a ) ; break; } index ++ ; }
albumSongs . get ( randNum )
{ int selected_row = - 1 ; java.awt.Point p = e . getPoint () ; return ( ( ( p . getFont () . getHeight () ) + ", " ) + ( p . getFont () . getHeight () ) ) / selected_row ; }
{ java.lang.String tbls = com.alibaba.fastjson.JSON . toJSONString ( tbl ) ; int redis.clients.jedis.Jedis jedis = redis.clients.jedis.Util . getJedis () ; jedis . hset ( "table" , ( ( ( ( "" + ( tbl . getDbName () ) ) + "." ) + ( tbl . getTableName () ) ) + "long-----tian!" ) , tbls ) ; org.apache.hadoop.hive.metastore.NewObjectStore.LOG . info ( "New table success!" ) ; }
try { count = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } finally { handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { notifyService ( io.github.monorrod.orodue.NotificationActivity . getApplicationContext () ) ; } } ) ; }
public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ) + ( Packet.NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
{ int prev_level = rooms_list . get ( roomID ) . getLevel () ; if ( ( rooms_list . get ( roomID ) . lower_level ) > prev_list ) return false ; else roomID = rooms_list . get ( roomID ) . getLevel () ; return true ; }
i = 1
{ for ( Utils.DataVector vector : dataList ) { java.util.List < java.lang.Integer > tree = new java.util.ArrayList ( data . size () ) ; RandomHOGTree.DecisionTree.PredictionTree tree = ( ( RandomPredictionTree.DecisionTree.PredictionTree ) ( vector ) ) ; int cur = tree . classify ( cur ) ; Utils.PredictionHelper . addPrediction ( Utils.PredictionHelper . calInt ( cal ) ) ; } return addPrediction ( tree ) ; }
{ for ( int i = 0 ; i < ( backup.length ) ; i ++ ) { if ( ( ( backup [ i ] ) != ( Cell.NONE ) ) && ( ! ( mCells [ i ] . isLocked () ) ) ) { backup [ i ] = Cell.NONE ; } } userEdited = false ; }
{ int moveCounter = 1 ; for ( int i = ( piece . getY () ) + 1 ; i < newY ; i ++ ) { if ( tileHasPiece ( ( ( piece . getX () ) + i ) , i ) ) return true ; moveCounter ++ ; } return false ; }
{ java.lang.System.out . println ( ( "Data addr=" + dataAddr ) ) ; int sizeLeft = ( ( bank.Data.length ) - ( SpritesToBANK_SIZE ) ) % ( dataAddrToBANK_SIZE ) ; if ( sizeLeft < ( ( bank.Data.SIZE ) - ( SpritesToBANK_HEADER ) ) ) { writeBytes ( dataAddrToBANK_HEADER , sizeLeft ) ; } dataAddr += sizeLeft ; write ( dataAddrToBANK_HEADER ) ; return sprite ; }
{ int pageNumber = 1 ; int pageSize = org.brightpe.se.ToolTool . getPageSize ( "ps_pager" ) ; java.lang.String name = "" ; java.lang.String name = org.smart4j.framework.dao.bean.Pager < org.brightpe.se.entity.Notice > noticePager = noticeService . getNotice ( pageNumber , pageSize , pageNumber , name ) ; return new org.smart4j.framework.mvc.bean.PagerView < org.brightpe.se.bean.Pager > ( "id" , org.brightpe.se.dao.bean.PagerView.jsp ) ; }
public static int getReceiverID ( byte [] datagramContents ) { int startIVER = Packet.RECEIVER_LENGTH ; int endIVER = Packet.RECEIVER_LENGTH ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; java.util.Arrays . copyOfRange ( datagramContents , startIVER , endIVER ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
{ double tAnalyzer = 0 ; double tAnalyzer = sentenceanalyzer . sent ( sentence ) ; double w1 = ( wAnalyzer * 10 ) + ( word.length ) ; double sentindex = ( ( word.length ) * 0.5 ) * ( word.length ) ; return ( ( sentindex + 0.5 ) + ( tAnalyzer / 3 ) ) + " " ; }
{ int idx = ( gridPos.y ) * gridRows ; if ( ! ( map . containsKey ( idx ) ) ) { log . info ( "Could not remove Key. Key is not in buffer." ) ; return; } if ( gridPos.x . equals ( current ) ) { log . info ( "Updating to relative." ) ; relativeRemoving ( this . current ) ; } else { log . info ( "Updating to remove origin..." ) ; } }
{ java.lang.String sql = "SELECT MAX(ID) FROM CONTACTS" ; java.sql.ResultSet rs = sql = executeQuery . executeQuery ( sql ) ; int id = ( ( int ) ( java.lang.Math . random () ) ) * 100 ; try { id = rs . getInt ( "ID" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return id ; }
{ mMeetingPagerAdapter = result ; mLoadingBinding.activity . setVisibility ( View.GONE ) ; mBinding.pager . setAdapter ( mMeetingPagerAdapter ) ; int position = mMeetingPagerAdapter . getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log . v ( TAG , ( ( ( "meeting page is " + position ) + " is " ) + lastMeetingId ) ) ; mBinding.pager . setCurrentItem ( position ) ; }
{ network.ServerSocketCreator create = new network.ServerSocketCreator () ; java.lang.Thread server = new java.lang.Thread ( createSock () ) ; java.util.Scanner input = new java.util.Scanner ( server ) ; java.lang.System.out . println ( 'N' ) ; while ( ( input . charAt ( 0 ) ) != 'W' ) { java.lang.System.out . println ( input . nextLine () ) ; } input . close () ; }
if ( alleleAssay . getId () . equals ( selectedAlleleAssay . getId () ) ) { isNotFound = false ; break; }
private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSoundEngine.LOG_TAG , "RELEASE: release(): Rel(): all instances..." ) ; int hinesSound = 0 ; if ( hinesSound != null ) { for ( int x = 0 ; x < hines ; x ++ ) { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSoundEngine.LOG_TAG , ( ( i + ") (" ) + ( hinesSound ) ) ) ; releaseSound ( hinesSound ) ; } } com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSoundEngine.LOG_TAG , "RELEASE (" ) ; com.huhx0015.hxaudio.utils.HXLog . release () ; }
{ java.util.List < com.ryanpo.jo.ChunkInfo > chunkList = new java.util.ArrayList <> () ; int currentPos = this . bufferId ; while ( currentPos >= ( this . listId ) ) { if ( currentPos >= ( this . key ) ) { chunkList . add ( currentPos ) ; } else { chunkList . add ( currentPos ) ; } } return chunkList ; }
if ( highestSlot < 9 ) { return 9 ; } else if ( highestSlot < 18 ) { return 18 ; } else if ( highestSlot < 27 ) { return 27 ; } else if ( highestSlot < 36 ) { return 36 ; } else if ( highestSlot < 45 ) { return 45 ; } else { return 45 ; }
{ final boolean prevState = isMultiblockStructurePresent () ; makegadomancy.common.utils.Multiblock.MultiblockHelper patternToCheck = isInState () ; if ( isInState () ) { patternToCheck = makegadomancy.common.locks.locks.MultiblockNodeManipulator.registration ; } else { patternToCheck = makegadomancy.common.utils.Multiblock.locks.MultiblockNodeManipulator.registration ; } this . mult ( patternToCheck , xCoord , yCoord , ziblockStructurePresent () ) ; worldObj = makegadomancy.common.utils.Multiblock.MultiblockHelper . makeRegisteredMultiblock () ; }
{ if ( ! ( bound ) ) bind () ; org.davuna.http.util.Logger . log ( "accepting" ) ; java.lang.String nsfd = org.davuna.http.util.Lib . accept ( sock ) ; org.davuna.http.util.Logger . log ( ( ( nsfd . indexOf ( "/" ) ) + "/" ) , nsfd ) ; return nsfd ; }
org.usfirst.frc.team68.robot.RobotMap.intakePositions [ index ]
{ int j = 0 ; for ( int i = 0 ; i < 256 ; i ++ ) { j = ( ( S ) ( key + ( key [ i ] ) ) ) % ( key.length ) ; key [ i ] = temp % 256 ; } S = ( ( S ) ( S ) ( temp [ i ] ) ) ; S = temp [ j ] ; }
{ com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity () ; double [] array = new double [ 7 ] ; int count = 7 ; while ( ( array [ count ] ) != 10 ) { count ++ ; } double weekly = ( ( double ) ( array [ count ] ) ) ; assertTrue ( ( weekly == ( array [ count ] ) ) ) ; }
public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; }
private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start , int length ) { java.lang.String s = set [ 0 ] ; for ( java.lang.String part : set ) { if ( part > start ) s = i + " " ; } return s + medium ; }
{ int fileNameIndex = VCF_CF_FILE_PATH . lastIndexOf ( "/" ) ; if ( fileNameIndex == ( - 1 ) ) { fileName = VCF_CF_FILE_PATH . lastIndexOf ( "\\PATH" ) ; } java.lang.String output = ( ( VCF_CF_FILE_PATH . substring ( fileNameIndex , ( ( output . length () ) - 3 ) ) ) + " " ) + fileNameIndex ; return output . substring ( 0 , output . length () ) ; }
speed <= 1
{ if ( ( content == null ) || ( ( content.length ) == 0 ) ) { throw new java.lang.IllegalArgumentException ( "Content cannot be null!" ) ; } char [] chars = sune.ss2.util.SSDF . format ( content . toCharArray () ) ; return sune.ss2.util.SSDF . read ( sune.ss2.util.SSDF . get ( chars ) , false , 0 , chars , null , false ) ; }
{ int i = 0 ; java.lang.String searchUsername = username . trim () ; int i = 0 ; while ( searchUsername != null ) { searchUsername = searchUsername + ( username . trim () ) ; i ++ ; } if ( i > 0 ) { user . setUsername ( searchUsername ) ; } }
( asciiCount [ i ] ) > 0
{ com.flurnam.puzzlegenerator.domain.PuzzleModel model = ( ( com.flurnam.puzzlegenerator.domain.PuzzleModel ) ( observable ) ) ; int percentage = model . getPercentage () ; java.lang.String statusMessage = model . getStatusLabel () ; this . progressBar . setText ( ( percentage + "%" ) ) ; this . progressBar . setValue ( statusMessage ) ; this . progressBar . setString ( ( percentage + "%" ) ) ; }
{ final int offset2 = offset - ( this . array . length () ) ; final int length2 = offset + ( array . length () ) ; if ( offset2 <= 0 ) return super . section . concat ( section , offset2 , length2 ) ; return super . section . concat ( section ) ; }
{ final long stopStartTime = java.lang.System . nanoTime () ; state = org.webrtc.CameraSession.State.STOPPED ; stopCamera1 () ; final long stopTimeMs = java.util.concurrent.TimeUnit.SECONDS . toMillis ( ( stopStartTime - ( java.lang.System . nanoTime () ) ) ) ; org.webrtc.CameraSession.camera1Histogram . add ( stopTimeMs ) ; org.webrtc.CameraSession.camera1Histogram . stopCamera ( cameraSession ) ; }
{ int listIndex = getListArg ( com.rfo.basic.Run.list_string_is_string ) ; if ( listIndex < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; java.util.ArrayList < java.lang.String > theList = com.rfo.basic.Run.Lists . get ( listIndex ) ; for ( java.lang.String zone : theList ) { list . add ( zone . getAvailableCommands () ) ; } return true ; }
public static long getSerial results ( org.babyfish.persistence.tool.path.TypedQueryQueryProcessor.MetaClass metaClass , java.lang.String nestedClassName ) throws java.io.IOException { for ( org.babyfish.persistence.tool.path.TypedQueryProcessor.MetaClassName nested : metaClass . hashCode () ) { for ( org.babyfish.persistence.tool.path.TypedQueryProcessor.MetaPath property : nestedClassName . values () ) { serial . append ( ( ( serial . getProperties () . hashCode () ) + 1.0 ) ) ; } return serial . getName () ; } }
{ int hoursNotScheduled = 0 ; for ( int i = 1 ; i < 37 ; i ++ ) { for ( int j = 0 ; j < 7 ; j ++ ) { if ( ( hoursReq.officeReq . get ( i ) . get ( j ) ) >= 0 ) { hoursNotScheduled += ( hoursReq.officeReq . get ( ( i - j ) ) . get ( j ) ) / 2 ; } } } return hoursNotScheduled ; }
{ if ( ( mMediaBrowser ) == null ) { return; } int playlistId = java.lang.Integer . parseInt ( pUri . getQueryParameter ( "playlist" ) ) ; java.util.HashMap transactions = this . mTransactionActions . get ( ServicePlayback.ACTION_CUSTOM__DELETE_LIST ) ; android.support.v4.media.MediaBrowserCompat mediaItem = ( ( android.support.v4.media.MediaBrowserCompat ) ( transactions . get ( mediaItem ) ) ) ; mMediaBrowser . removeView ( mediaItem ) ; this . viewDeleteMedia ( viewId ) ; }
count = getFragmentManager () . getBackStackEntryCount ()
{ double rn = ( ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . cos ( getAngle () ) ) ) * ( java.lang.Math . pow ( getAbs () , n ) ) ; this . setIAngle ( rn ) ; return this ; }
public static boolean storeCredentials ( java.lang.String appName , java.lang.String appName , java.lang.String hashedPassword ) { try { com.zjes.domain.AppCredentials appCredentials = new com.zjes.domain.AppCredentialsBuilder () . username ( appName ) . hashedPassword ( password ) . enabled () . build () ; final int result = appCredentialsDao . save ( appCredentials ) ; java.lang.System.out . println ( ( "Duplicate successful: " + ( result . getMessage () ) ) ) ; return true ; } catch ( org.springframework.dao.StoringException e ) { java.lang.System.out . println ( ( "Storing credentials not store successful: " + ( e . getMessage () ) ) ) ; return false ; } }
if ( aY > bY ) { y = - bY ; } else { y = - bY ; }
{ for ( Graph.Vertex < java.lang.Integer > v : lowVertices ) { graph . removeVertexWithElement ( v . getVertex () ) ; } if ( ( v . getElement () ) != null ) { graph . removeElement ( v . getElement () ) ; } }
row = ( me - ms ) + 1
( depth + 1 )
com.example.saksham.screenshortscreen.PlaylistAdapter . changeActiveBackground ( sharedPreferences . getInt ( Constants.CURRENT_PLAYING_NUMBER_NUMBER , ( - 1 ) ) )
private static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.loopg.utils.ScreenUtil . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.height ) / 19.0F ; float factor2 = metrics.widthPixels ; if ( factor1 >= factor2 ) return factor1 / 10.0F ; else return factor2 ; }
{ todolist.Todo newTodo = new todolist.Todo ( ( " " + ( java.lang.Integer . toString ( numAdded ) ) ) ) ; list . add ( newTodo ) ; numAdded ++ ; }
{ int y = field . getCoordinate_y () ; int x = field . getCoordinate_x () ; dk.axlipsee.graphics.Ellipse el = new dk.axlipsee.graphics.Ellipse ( x , y , 200 , 200 ) ; el . drawToken () ; this . setEllipse ( true ) ; return el ; }
{ int _bitwiseXor = hash ^ b ; hash = ( _bitwiseXor ) * 1677881976 ; }
{ result =mbuilder.lib.data.xmlmap.XmlHelper . getInt ( element , "id" ) ; return result ; }
{ main.java.PlagiarismiarDetector plagiarismiarDetector = new main.java.PlagiarismiarDetector () ; main.java.PlagiarismiarService pl = new main.java.PlagiarismiarService () ; double input = main.java.InputRatio . validate ( args ) ; java.lang.System.out . println ( ( "---------------------------- " + ( plagiarismiarDetector . checkRatio ( input ) ) ) ) ; java.lang.System.out . println ( "------------------------------------------------------------" ) ; }
{ final int cameraType = captureType ; if ( cameraType == ( com.fonido.android.sdk.ui.capture.CaptureInfo.CameraType.FACEAMERA ) ) { Camera.CameraInfo.CAMERA_FACING_CAMERA = ( ( android.hardware.Camera.CameraInfo ) ( cameraType ) ) ; cameraType . open () ; } }
b || ( s . update () )
{ deleteLobby () ; lobbies . remove ( getLobbyName () ) ; result = true ; }
{ long id = db . insertWritableDatabase () . getWritableDatabase () . getContentValues ( DBConstants.TABLE_NOTEBOOK , null , this ) ; if ( id == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL" ) ; } db . close () ; return id ; }
public void backupAllMenuItemAction () { int response = mainView . showConfirmationBackDialog ( "This files will previous vocab" , "This files will all overwrite?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.list.VocabList v : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY_FILE_EXTENSION ) + ( v . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY_FILE_EXTENSION ) ) ) ; save ( file , com.tkomiya.main.MainController.DEFAULT_SAVE_FILE_EXTENSION ) ; } } }
{ byte [] buffer = new byte [ 1024 ] ; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream () ; java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( file ) ; int read ; while ( ( read = fileInputStream . read ( buffer ) ) == ( - 1 ) ) { if ( read == ( - 1 ) ) break; fileInputStream . write ( buffer , 0 , read ) ; } fileInputStream . close () ; return bytes . toByteArray () ; }
{ java.lang.System.out . println ( in . readInt () ) ; int size = in . readInt () ; shortestpath = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { shortestpath = in . readInt () ; } }
new org.apache.cassandra.db.RowIndexEntry ( inIndexed , idx , versionSerializer )
public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( ( dateTime == null ) || ( ( dateTime . getZoneTime () ) != null ) ) { return "" ; } org.joda.time.DateTime timeZone = dateTime . getZoneTime () ; long timeZone = dateTime . getMillisToLocal ( false , ( timeZone + ( org.joda.time.DateTime.UTC ) ) ) ; return new org.joda.time.DateTime ( ( ( dateTime . offset () ) + locale ) ) . convert ( dateTime ) ; }
if ( buildValue1 > buildValue2 ) { java.lang.System.out . println ( "Player 1 wins" ) ; } else if ( buildValue1 == buildValue2 ) { week6Problems.High . compare ( x , y ) ; } else { java.lang.System.out . println ( "Player 2 wins" ) ; }
{ if ( keepCurrent ) { newSpeak += java.lang.String . valueOf ( word . charAt ( i ) ) ; keepCurrent = false ; } else { keepCurrent = true ; } }
public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val = card . indexOf ( spades ) ; switch ( s ) { case 0 : val = indexOf ( card , this ) ; break; case 1 : val = heart ( card , this ) ; break; case 2 : val = indexOf ( card , this ) ; break; case 3 : val = indexOf ( card , this ) ; break; default: break; } return val ; }
{ java.util.ArrayList < java.lang.String > inputParts = breakInput ( rawID ) ; int taskID = convertToInt ( inputParts ) ; java.lang.String date = getDateFromID ( inputParts ) ; if ( isRaw ( date ) ) { logic . editTask ( taskID , date ) ; return true ; } return false ; }
{ boolean assert_ = false ; try { spreadsheet.mapper.utils.FieldUtils . subtractKey ( "testBusinessKey1" ) ; } catch ( java.lang.IllegalArgumentException e ) { spreadsheet.mapper.utils.FieldUtils.LOGGER . debug ( e . getMessage () ) ; } if ( key . contains ( "test_business" ) ) { assert false ; } assert s . contains ( FieldUtils.BUSINESS_PREFIX ) ; java.lang.String s = utils.mapper.utils.FieldUtils . subtractKey ( "test_business1" ) ; org.testng.Assert . assertTrue ( s . contains ( "test_business1" ) ) ; }
private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 2 ; break; case 2 : cash = 3 ; break; case 3 : cash = 4 ; break; case 4 : cash = 50 ; break; case 5 : cash = 50 ; break; } return cash ; }
{ int templateID = java.lang.Integer . parseInt ( mobData . get ( "templateID" ) ) ; mobData . setTemplateID ( templateID ) ; }
{ java.lang.String sDelay = settings . getString ( "givenTimer" , com.sehansenavigation.keyenavigation.Activities.MainMenuActivity.DEFAULT_DELAYIMER_DELAY ) ; long delayDelay = java.lang.Long . parseLong ( sDelay ) ; try { delayDelay = java.lang.Long . parseLong ( delayDelay ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( com.coansenavigation.keyenavigation.Activities.MainMenuActivity.TAG , ( "Activity " + delay ) ) ; } if ( delayDelay != 0 ) { TimerInactiveTimer . start () ; } else { TimerInactiveTimer . start () ; } }
{ int written = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( data.length , data.length ) ) ; i ++ ) { if ( ( ( org.q3huffman.df.demo.huffman.HCoderQ_Coder [ i ] ) & 255 ) > > ( ( data [ i ] ) & 255 ) ) { written ++ ; break; } } write ( data , org.q3huffman.df.demo.sym.HCoderQ_Coder [ ( ( data.size ) & 255 ) ] , written ) ; return written ; }
public int getPlayerForLine ( final int rowFigure , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( rowFigure ) ) ; i ++ ) { if ( ( ( board . getFigure ( rowFigure , i ) ) != null ) && ( ( board . getFigure ( rowFigure , i ) . toString () ) == playerRowCount ) ) { rowFigure ++ ; } } return playerRowCount ; }
{ android.location.Location currentLocation = com.mobilemakers.juansoler.appradar.StartScreenFragment . getLastLocation () ; if ( currentLocation == null ) { return - 1 ; } android.location.Location nextLocation = createTheNextLocation ( latitude , longitude ) ; float distance = ( currentLocation . distanceTo ( nextLocation ) ) / 1000 ; return new java.math.BigDecimal ( distance ) . setScale ( 1 , java.math.BigDecimal.ROUND_HALF_UP ) . floatValue () ; }
void addInterval ( java.lang.String interval ) { if ( ( interval % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item_color ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item_color ) ) ; } }
{ currentQuestion = quiz . nextQuestion () ; if ( ( currentQuestion ) == null ) { currentState = backend.GameState.GAME_OVER ; lblCurrentQ . setText ( currentQuestion . getQ () ) ; int index = 0 ; for ( java.lang.String currentQuestion : answers ) { lblAnswers . setText ( currentQuestion . getQuestion () ) ; index ++ ; } lblTime . setText ( java.lang.Integer . toString ( currentState.nextTime . getTimeLimit () ) ) ; } return true ; }
{ if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } }
public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { if ( other == null ) { return null ; } int zlerTemp = ( ( zler ) * ( other.nehler ) ) + ( ( other.zaen ) * ( nehler ) ) ; int nennerTemp = ( ( nehler ) * ( other.nehler ) ) * ( nehler ) ; return new de.marsetex.lab2.task3.RationalNumber ( zlerTemp , nennerTemp ) ; }
i = ( ( int ) ( ( ( java.lang.Math . random () ) * 33 ) / ( ( com.coolirts.tsh.ShirtUtil.List . size () ) - 1 ) ) )
{ if ( ( data == null ) || ( ( data.length ) < 1 ) ) { return null ; } int flags = communication.utils.NumberParser . intToByte ( data [ 0 ] ) ; int sessionId = communication.utils.NumberParser . byteToByte ( data [ 1 ] ) ; byte [] newData = java.util.Arrays . copyOfRange ( data , 2 , data.length ) ; return new communication.pdu.PDU ( sessionId , new communication.pdu.PDU ( newData , flags ) ) ; }
double minSpread = personal . get ( 0 ) ;
{ int count = 0 ; for ( int i = 0 ; i < ( content . length () ) ; i ++ ) { if ( ( content . charAt ( i ) ) == content ) { count ++ ; } } return count ; }
protected static double distanceTofinding ( path.NodeMap.Node x ) { double yDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
{ long time_start = java.lang.System . currentTimeMillis () ; long time_start = java.lang.System . currentTimeMillis () ; java.lang.System.out . println ( "----------------------------------------------------edy: " ) ; long time_end = java.lang.System . currentTimeMillis () ; java.lang.System.out . println ( ( "----------------------------------------------------edy " + time_start ) ) ; time_start = ( ( java.lang.System . currentTimeMillis () ) - time_start ) + ">>" ; }
public static doubletimeToSize ( double value , int sigF.length ) { java.math.BigDecimal value = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { value = new java.math.BigDecimal ( value ) ; } int newScale = ( value . sigF () ) - ( valueDto . scale ( scale ) ) ; value = value . setScale ( newScale , newScale ) ; return value . doubleValue () ; }
if ( quantity <= ( getMaximumQuantity () ) ) { subgroups.groupsLayout . setError ( getString ( R.string.msg_quantitywin_validate_winners , group . getItemCount () ) ) ; return false ; }
public static boolean sendMessageByOne ( java.lang.String word , java.lang.String ladder ) { if ( ( word . length () ) != ( ladder . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) == ( word . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
