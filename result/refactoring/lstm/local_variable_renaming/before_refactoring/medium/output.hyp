private boolean find ( java.lang.String findWhat , boolean 1 ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; }
if ( ! ( _transactions . hasNext () ) ) return null ; else { java.lang.String name = _transactions . getName () ; java.lang.String upc = _transactions . getUPC () ; int quantity = _transactions . getQuantity () ; csc668assignment1.Payments.Payment payment = _transactions . getPayment () ; return new csc668assignment1.Transaction ( name , upc , quantity , payment ) ; }
{ int result = ( ( color ) != null ) ? color . hashCode () : 0 ; result = ( 31 * result ) + ( type . hashCode () ) ; result = ( 31 * result ) + ( ( image ) != null ? image . hashCode () : 0 ) ; result = ( 31 * result ) + ( position ) ; return result ; }
if ( ( start != ( - 1 ) ) || ( stop != ( - 1 ) ) ) { java.lang.String sRaceNumber = this . name . substring ( ( start + 1 ) , stop ) ; this . raceNumber = java.lang.Integer . parseInt ( sRaceNumber ) ; return this . raceNumber ; } else return 1 ;
if ( ( firstByte != ( - 1 ) ) && ( firstByte != ( - 1 ) ) ) { final int size = com.google.protobuf.CodedInputStream . readRaw.32 ( firstByte , in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in , size ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream . newInstance ( new com.google.protobuf.CodedInputStream . newInstance ( new com.google.protobuf.CodedInputStream . newInstance ( new com.google.protobuf.CodedInputStream . newInstance ( new com.google.protobuf.CodedInputStream . newInstance ( new java.io.File ( new com.google.protobuf.CodedInputStream . newInstance ( new java.io.File ( 0 ) ) ) ) ) ) ) ; builder .2 ( codedInput ) ; codedInput . checkLastTagWas ( 0 ) ; }
{ byte [] body = request . getBody () ; if ( body != null ) { connection . setDoOutput ( true ) ; connection . addRequestProperty ( com.android.volley.toolbox.HurlStack.HEADER_CONTENT_TYPE , request . getBodyContentType () ) ; java.io.DataOutputStream out = new java.io.DataOutputStream ( connection . getOutputStream () ) ; out . write ( body ) ; out . close () ; } out . close () ; }
protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; }
for ( int i = ( ( bytestream.length ) - 1 ) * 8 ; i > 0 ; i -- ) { int byte_offset = i / 8 ; int bit_offset = i % 8 ; byte valByte = bytestream [ byte_offset ] ; int valInt = ( valByte > > ( 8 - ( bit_offset + 1 ) ) ) & 1 ; if ( valInt == 1 ) { java.lang.System.out . println ( ( ( bytestream.length ) - 1 ) ) ; } }
switch ( c ) { case ' ' : continue; case ',' : case ')' : return i + 1 ; default: argument . append ( c ) ; }
if ( ( proposedBillCycleDate < billingCycleDay ) && ( billingCycleDay < lastDayOfMonth ) ) { proposedBillCycleDate = billingCycleDay ; }
if ( timeLeft >= 0 ) { java.lang.String msg = io.druid.common.utils.StringUtils . safeFormat ( "Query[%s] url[%s] timed out." , query . getId () , url ) ; setupResponseReadFailure ( msg , null ) ; throw new io.druid.java.util.common.RE ( msg ) ; }
{ super . restoreFromBundle ( bundle ) ; int [] values = bundle . getIntArray ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PRESSES ) ; for ( int i = 0 ; i < ( values.length ) ; i ++ ) { java.lang.System.out . println ( values [ i ] ) ; partialTime = bundle . getFloat ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PARTIALTIME ) ; } }
org.junit.Assert . assertEquals ( 0 , 8 )
{ org.iabako.client.ui.layout.widget.payment.PaymentTable installmentsTable = salePaymentsForm . getInstallmentTable () ; int installmentsNumber = ( installmentsTable != null ) ? installmentsTable.queryDefinitionDTO . getCountTotal () : 0 ; int invoicesNumber = ( ( invoiceTable ) != null ) ? invoiceTable.queryDefinitionDTO . getCountTotal () : 0 ; if ( ( invoicesNumber == 1 ) && ( installmentsNumber == 0 ) ) { receiptsPanel . setVisible ( false ) ; } else { receiptsPanel . setVisible ( true ) ; } }
field [ x ] [ x ] = - 2
{ final int arg1 = 0 ; final double arg2 = android.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > concat = new ru.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > () { @ java.lang.Override public java.lang.String apply ( java.lang.Integer arg1 , java.lang.Double arg2 ) { return ( arg1 . toString () ) + ( arg2 . toString () ) ; } } ; }
if ( ( com.zhour.fragments.AlienCarFragment.et_vehicle_number . getText () . toString () . length () ) != 4 ) { com.zhour.utils.Utility . setSnackBar ( mParent , com.zhour.fragments.AlienCarFragment.et_vehicle_number ) ; isValid = false ; }
{ int locationSave = java.lang.Integer . parseInt ( ctx . getChild ( 2 ) . getText () ) ; java.lang.System.out . println ( ( "ArrayVariable called " + ( ctx . getText () ) ) ) ; returnArray . add ( nombreVar ) ; return returnArray ; }
new com.anwesome.games.dataindicationbutton.RectF ( 0 , r , paint )
{ java.util.Calendar cal = new java.util.GregorianCalendar () ; int max = cal . getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; java.util.List < java.lang.Integer > daysFromThisMonth = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < max ; i ++ ) { daysFromThisMonth . add ( ( i + 1 ) ) ; } return daysFromThisMonth ; }
return value ;
distance = y1.y
{ byte [] old = _buffer ; _buffer = new byte [ ( _buffer.length ) * 2 ] ; int pos = _position ; java.lang.System . arraycopy ( old , 0 , _buffer , 0 , pos ) ; _encoder . init ( _buffer , pos , ( ( _buffer.length ) * 2 ) ) ; }
{ java.lang.String search = "map=" ; int dataStart = contentIndexBehind ( uri , "ll=" ) ; java.lang.String [] parts = getParts ( uri , dataStart , "[,?&]" , 2 ) ; if ( parts != null ) { de.k3b.geo.io.GeoUri . setLatLonZoom ( parseResult , parts [ 1 ] , parts [ 0 ] , null ) ; } return uriParamParse ( uri , parseResult ) ; }
rotateViewGravity = ( ( android.view.Gravity.CENTER_VERTICAL ) + ( android.view.Gravity.CONTENT ) ) | ( android.view.Gravity.TOP )
{ double radius = java.lang.Math . sqrt ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; this . x = radius * ( java.lang.Math . sin ( winkel ) ) ; this . y = radius * ( java.lang.Math . cos ( winkel ) ) ; }
public static void printResult ( double [] [] reuslt ) { int histWidth = reuslt.length ; int histHeight = reuslt [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } }
{ double nextApprox. = x ; for ( int i = 0 ; i < ( this . steps ) ; i ++ ) { nextApprox. = nextApprox. * x ; } if ( ! ( isAccurate () ) ) { geometricSeriesApprox. ( x ) ; } else { return; } }
{ int n_ = 0 ; skip () ; if ( ( ( ( current ) != null ) && ( ( current ) != ']' ) ) && ( ( current ) != '}' ) ) { skipInner () ; } while ( ( current ) == ',' ) { skip () ; skipInner () ; if ( ( ++ n_length ) == n_ . ) { break; } } return n_ ; }
{ int length = java.lang.Integer . parseInt ( arg [ 0 ] ) ; int width = java.lang.Integer . parseInt ( arg [ 1 ] ) ; if ( ! ( ( myRectangle.width ) != null ) ) { for myRectangle = newY ( length , width ) ; java.lang.String output = java.lang.String . format ( "*** YourY: %d\nWidth: %d/nArea: %d/nPerimeter: %d/nArea: %d/n/n" , myRectangle.length , myRectangle.width , myRectangle . getPerimeter () , myRectangle . getArea () ) ; java.lang.System.out . println ( output ) ; } }
if ( ( sampleRate != null ) && ( ! ( sampleRate ) ) ) { sampleRate = null ; }
if ( activeDownloadsList [ mapID ] ) { com.noveogroup.android.log.Log . d ( "Duplicate download request for the same map type" ) ; return startOption ; }
{ cancelNotification ( idx ) ; cancelNotification ( ( idx + 10 ) ) ; long delay = ( date . getTime () ) - ( new java.util.Date () . getTime () ) ; sendPrayAlarm ( idx , prayId , prayName , delay ) ; }
randomFloat - 0.5F
for ( int i = index - ( side ) ; i < ( index + ( side ) ) ; i ++ ) { retArr [ j ] = array [ i ] ; j ++ ; }
for ( int i = ( this . glasses . length ) - 1 ; i >= ( this . glasses . length ) ; i ++ ) { if ( this . glasses [ i ] . isActive () ) break; else score ++ ; }
{ java.util.Random rand = new java.util.Random () ; int randNum = rand . nextInt ( emptyTiles.length ) ; int row = emptyTiles [ randNum ] [ 1 ] ; int column = emptyTiles [ randNum ] [ 2 ] ; Model.board [ row ] [ column ] = newValue () ; }
{ java.sql.PreparedStatement pstmt = conn . prepareStatement ( sql ) ; java.sql.ResultSet rs = pstmt . executeQuery () ; if ( rs . next () ) result = true ; }
{ i ++ ; list . add ( i , fte ) ; }
{ int index = 0 ; for ( int i = 1 ; i < ( day ) ; i ++ ) index += ( getItinerarySizeByDay ( getContext () , i ) ) - 1 ; final int indexToAssign = index ; mAddBtn . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { uz.samtuit.samapp.helpers.ItineraryHelper . addNewItemFromItinerary ( getFragmentManager () , day , indexToAssign ) ; } } ) ; }
{ int attr = a . getIndex ( i ) ; switch ( attr ) { case R.styleable.ColorButton_jr_color : mColor = a . getColor ( attr , 0 ) ; colorify () ; break; } }
{ java.lang.System.out . println ( key ) ; int [] output = getHashes ( key ) ; for ( int hash : new java.lang.String [ 0 ] ) { if ( store . getBit ( ( hash % ( capacity ) ) ) ) { return true ; } } return false ; }
{ ( ( ( ( ( this . length ) + 1 ) < lickgenFrame . getGap () ) ) && ( slotInPlayback > ( ( stopPlaybackAtSlot ) - 1 ) ) ) || ( slotInPlayback > ( ( stopPlaybackAtSlot ) - 1 ) ) ; setFirstChorus ( false ) ; setStatus ( ( "Chorus " + ( ( "Chorus " + ( ( stopPlaybackAtSlot ) - 1 ) ) ) ) ; }
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e . getModifiers () ; boolean ctrlDown = ( modifier & ctrlMod ) != 0 ; this . cam_zoom_increase () ; return; }
{ android.util.Log . d ( LOG_TAG , "Uploading picture on web server." ) ; org.json.JSONObject jsonPicture = new org.json.JSONObject () ; org.json.JSONArray jArr = new org.json.JSONArray () ; byte [] pictureData = mediaFile . getData () ; java.lang.String encodedData = android.util.Base64 . encodeToString ( pictureData , Base64.DEFAULT ) ; jsonPicture . put ( "PIC_DATA" , encodedData ) ; }
{ boolean in = true ; in = areaLeftX < ( pos.x ) ; in = ( pos.x ) < areaRightX ; in = areaUpY
copyAction ( db , a . getId () , newActionId , sortNr , com.ha81dn.webausleser.backend.DatabaseHandler )
{ if ( ! ( active ) ) return; consumeEvent () ; if ( ( state ) == ( itdelatrisu.opsu.user.UserSelectOverlay.State.CREATE_USER ) ) return; int diff = newy - oldy ; if ( diff != 0 ) { break; } }
{ cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( "MQ start send ONE_WAY message " ) ; long startTimestamp = java.lang.System . currentTimeMillis () ; this . message . setTopic ( java.lang.String . valueOf ( configProperties . getTopic () ) ) ; java.lang.Long costTime = ( java.lang.System . currentTimeMillis () ) - startTimestamp ; cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( ( ( "MQ completed send ONE_WAY message in " + costTime ) + " ms" ) ) ; return null ; }
{ java.lang.String newID = "-400" ; com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver sendInfoDriver = new com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver () ; org.json.JSONObject json ; int oldID = db . addDriver ( name , street , city , null ) ; sendInfoDriver . addDriver ( oldID , name , street , city , state , zip ) ; return; }
( index >= movesAmount ) ? index - movesAmount : index
mes = java.lang.Integer . parseInt ( dataTermino . substring ( 3 , 5 ) )
{ me.ihaq.pacman.utils.Intersection i = getCollidingIntersection () ; int newMove = new java.util.Random () . nextInt ( ( ( i . getDirections () . size () ) - 1 ) ) ; return i . getDirections () . get ( newMove ) ; }
{ java.util.List < org.apache.maven.model.Dependency > deps = project . getDependencies () ; boolean containsItests = false ; while ( ( deps . iterator () . hasNext () ) && ( ! containsItests ) ) { org.apache.maven.model.Dependency d = ( ( org.apache.maven.model.Dependency ) ( deps . iterator () . next () ) ) ; ( ( org.apache.maven.model.Dependency ) ( deps ) ) && ( d . getGroupId () . equals ( "org.universAAL.support" ) ) ; } return containsItests ; }
private void checkMinutesSinceLastAction () { if ( ( stateMachine . getCurrent () . getPomosDone () ) > 0 ) { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } } }
{ double [] l = new double [] { 3 , 1 , 4 , 1 , 5 , 9 , 2 , 6 , 5 } ; Matrix m = new Matrix ( 3 , 3 , l ) ; java.lang.System.out . println ( m . multiply ( m . inverse () ) ) ; }
{ tracks = new java.util.ArrayList < Track > () ; boolean alreadyExist ) { alreadyExist = false ; for ( Track track : tracks ) { if ( track . compareTrack ( station1 , station2 ) ) alreadyExist = true ; } if ( ! alreadyExist ) tracks . add ( new Track ( station1 , station2 ) ) ; } }
{ boolean gameIsActive = true ; boolean humanTurn = false ; while ( gameIsActive ) { for ( int indexPlayer = 0 ; indexPlayer < ( players.length ) ; indexPlayer ++ ) { if ( indexPlayer == ( humanPlayerId ) ) { java.lang.System.out . println ( "THIS IS A HUMAN" ) ; showPlayerTurn () ; } else { java.lang.System.out . println ( "This is a bot" ) ; showBotTurn () ; } } gameIsActive = false ; } }
out . write ( buffer )
new java.lang.Character ( levels [ 7 ] , levels [ 1 ] , levels [ 3 ] , levels [ 5 ] , levels [ 4 ] , levels [ 2 ] , levels [ 8 ] , levels [ 2 ] )
if ( exchange > 100 ) { double total = quantity / ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; } else if ( exchange < 100 ) { double total = quantity * ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; }
{ final int MIN_OPP =S = 1 ; final int MAX_OPP =S = 1 ; android.os.Bundle autoMatchCriteria = com.google.android.gms.games.multiplayer.realtime.RoomConfig . createAutoMatchCriteria ( MIN_OPPClickS , MAX_OPP &&S , 0 ) ; com.google.android.gms.games.multiplayer.realtime.RoomConfig.Builder rtmConfigBuilder = com.google.android.gms.games.multiplayer.realtime.RoomConfig . builder ( this ) ; rtmConfigBuilder . setMessageReceivedListener ( this ) ; rtmConfigBuilder . setRoomStatusUpdateListener ( this ) ; rtmConfigBuilder . setAutoMatchCriteria ( autoMatchCriteria ) ; switchToScreen ( R.id.screen_wait ) ; keepScreenOn () ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { if ( com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } }
{ int layout ; switch ( viewType ) { case VIEW_TYPE_HEADER : layout = R.layout.item_persoanl_project_header ; break; case VIEW_TYPE_ITEM : layout = R.layout.item_personal_project ; break; default: layout = R.layout.item_personal_project ; break; } android.view.View v = android.view.LayoutInflater . from ( parent . getContext () ) . inflate ( layout , parent , false ) ; return new com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH ( v , this ) ; }
{ final int prime = 31 ; int hashCode = 1 ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : children . hashCode () ) ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : parent . hashCode () ) ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : parent . hashCode () ) ; return hashCode ; }
edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_c ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length )
{ if ( list . isEmpty () ) { us.team.awesome.calculator.math.CalculationOperator operator = ( ( us.team.awesome.calculator.math.CalculationOperator ) ( list . get ( index ) ) ) ; us.team.awesome.calculator.math.CalculationList _list = operator . calculate ( index , list ) ; return calculate ( _list ) ; } else { return ( ( us.team.awesome.calculator.math.CalculationNumber ) ( list . getFirst () ) ) . getValue () ; } }
{ java.lang.String splitString = product . getProductId () . split ( "/" ) ; int largestProductId = java.lang.Integer . parseInt ( splitString [ 1 ] ) ; largest = splitProductId ; }
{ if ( ( this . isAI ) && ( ! isAI ) ) { com.dyllongagnier.triad.gui.controller.Players . resetAI () ; } boolean isDiff = isAI ; this . isAI = isAI ; this . takeTurn ( this . currentGame ) ; }
{ int index = 0 ; final int qLen = query . length () ; java.util.List < java.lang.String > blocks = new java.util.ArrayList < java.lang.String > () ; while ( ( index + ( seqSize ) ) < qLen ) { blocks . add ( query . substring ( index , ( index + ( seqSize ) ) ) ) ; index += window ; } return blocks ; }
java.lang.Math . sqrt ( ( result / ( inputVector . keySet () . size () ) ) )
for ( java.util.List < org.jasr.currentcy.domain.Sample > changes , java.util.List < org.jasr.currentcy.domain.Sample > samples , java.util.List < org.jasr.currentcy.domain.Sample > samples , java.util.List < org.jasr.currentcy.domain.Sample > new java.util.ArrayList < org.jasr.currentcy.domain.Sample > > () { for ( org.jasr.currentcy.domain.Sample sample2 : samples ) { result = result || ( sample1 . equals ( sample2 ) ) ; } if ( ! result ) changes . add ( sample1 ) ; }
private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } }
pointsToAdd = ( ( ( int ) ( 10 ) ) * ( Task.POINT_RANGE [ ( ( this . size ) - 1 ) ] ) ) * ( Task.POINT_RANGE [ ( ( this . difficulty ) - 1 ) ] )
{ if ( ( stack.length ) == 0 ) { return; } result [ i ] = null ; }
{ org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( breakpoint ) ) ; java.lang.String type = bp . getTypeName () ; int innerClassIndex = type . indexOf ( context' ) ; if ( innerClassIndex > 0 ) { type = type . substring ( 0 , innerClassIndex ) ; } return ( type . replace ( '.' , '/' ) ) + ".java" ; }
{ super . onActivityCreated ( savedInstanceState ) ; android.widget.ListView myListView = ( ( android.widget.ListView ) ( getActivity () . findViewById ( R.id.equipmentList ) ) ) ; int layoutID = R.layout.list_item ; connectToJSON ( "?sort_by=it_no" ) ; myAdapterInstance = new com.example.jim.myapplication.EquipmentAdapter ( getActivity () , layoutID , equipmentList ) ; myListView . setAdapter ( myAdapterInstance ) ; }
{ com.myjeeva.digitalocean.impl.DigitalOceanClient client = new com.myjeeva.digitalocean.impl.DigitalOceanClient ( authToken ) ; java.util.List < com.myjeeva.digitalocean.pojo.Key > availableKeys = new java.util.ArrayList < com.myjeeva.digitalocean.pojo.Key > () ; com.myjeeva.digitalocean.pojo.Keys keys ; int page = 1 ; do { keys = client . getAvailableKeys ( page ) ; availableKeys . addAll ( keys . getKeys () ) ; page += 1 ; } while ( ( keys . getMeta () . getTotal () ) > page ) ; return availableKeys ; }
if ( args [ 0 ] . equals ( "-" ) ) for ( java.lang.String arg : args ) sum += java.lang.Integer . valueOf ( arg ) ;
{ java.lang.System.out . println ( new java.util.ArrayList < java.lang.String > () ) ; java.lang.System.out . println ( ( "Second order value : " + second ) ) ; java.lang.System.out . println ( ( "Second order value : " + second ) ) ; java.lang.System.out . println ( ( "Third order value : " + third ) ) ; java.lang.System.out . println ( ( "Error : " + error ) ) ; }
( pixelCount [ top ] [ left ] ) - ( pixelCount [ bottom ] [ right ] )
for ( int i = 1 ; i < ( arr.length ) ; i ++ ) { if ( ( arr [ i ] ) > ( arr [ maxIndex ] ) ) { maxIndex = i ; } }
newBits [ ( i - 1 ) ]
{ java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 2 , 1 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_EINSTEIN } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } }
counter = java.lang.Integer . parseInt ( new handlers.HttpTask () . execute ( "GET" , request ) . get () )
core.Wait . waitFor ( common.DriverManager . getDriver ( DriverType.LOOP ) , null )
{ boolean followTerrain = isFollowTerrain () ; setFollowTerrain ( false ) ; super . render ( dc ) ; setFollowTerrain ( followTerrain ) ; }
public double distance ( geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; }
{ byte [] b = new byte [ length ] ; input . readFully ( b ) ; java.lang.System.out . println ( message ) ; java.lang.System.out . println ( message ) ; this . sendMessage ( network.AppWorker . handleMessage ( message ) ) ; }
org.hp.autonomy.frontend.selenium.framework.state.TestStateAssert . verifyThat ( results . resultsDiv () . getText () , "results found" )
{ int l = data.length ; if ( length ) putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( data , com.heerbann.unsafe.UnsafeBuffer.longArrayOffset , null , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; }
{ java.lang.String creditEarned = client . getServer () . getCreditEarnedOnCurrentSession () ; int charToRemove = line . length () ; java.lang.System.out . print ( "\r" ) ; line = java.lang.String . format ( "Frames rendered: %d remaining: %dH earned: %s | %s" , rendered , remaining , ( staticEarned != null ? buildEarned : "unknown" ) , ( ( status ) + ( m ? " (Exiting after this frame)" ) ) ) ) ; for ( int i = line . length () ; i <= charToRemove ; i ++ ) { java.lang.System.out . print ( " " ) ; } }
{ int currentIndex = index ; org.bucaojit.filter.Slot currentSlot = set . get ( currentIndex ) ; int foundIndex = - 1 ; int runStart = 0 ; if ( currentSlot . getMetadata () . isClear () ) return - 1 ; runStart = findRunStart ( currentIndex ) ; return checkQuotient ( runStart , remainder ) ; }
if ( c == '\n' ) { java.lang.String output = buffer ; buffer = "" ; return output . split ( "\t" ) ; } else buffer += c ;
@ java.lang.Override public void onBackPressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } }
{ com.github.TimeParser tp = new com.github.TimeParser () ; long [] time = tp . GetInput ( str ) ; java.util.Date date0 = new java.util.Date ( time [ 0 ] ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss z" ) ; sdf . setTimeZone ( java.util.TimeZone . getTimeZone ( "GMT-4" ) ) ; java.lang.String formattedDate = sdf . format ( date0 ) ; return formattedDate ; }
{ java.util.List < edu.mtu.parser.ChemicalDto > chemicals = edu.mtu.parser.Parser . parseChemicals ( properties . getChemicalsFileName () ) ; java.util.List < edu.mtu.parser.ChemicalDto > chemicals = edu.mtu.parser.Parser . parseChemicals ( properties . getChemicalsFileName () ) ; java.util.List < edu.mtu.parser.ChemicalDto > chemicals = edu.mtu.parser.Parser . parseChemicals ( properties . getChemicalsFileName () ) ; }
{ str = str . replaceAll ( "\\$" , "" ) ; int registerNumber = java.lang.Integer . parseInt ( str ) ; return isRegisterFloat [ registerNumber ] ; }
new workSQL.Employee ( hold , "" , "" )
{ byte [] buffer = this . socket . readPacket () ; byte buff = buffer [ ( ( buffer.length ) - 1 ) ] ; byte [] bytes = new byte [] { ( ( byte ) ( buff ) ) } ; return bytes ; }
{ int characterId = ( ( java.lang.Integer ) ( v . getTag () ) ) ; me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.DECREASE_HEALTH ; } else if ( ( v . getId () ) == ( R.id.ib_hp_add_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.INCREASE_HEALTH ; } else { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.ITEM_CLICK ; }
{ movieController . returnMovie ( id , panel , scroll ) ; rentalInfoController . returnMovie ( id , clientSelected . getId () ) ; }
edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_d ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length )
@ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , response . getOutputStream () ) ; }
{ int nc = flagConnectedComponents () ; Graph [] c = new Graph [ nc ] ; for ( Graph.Node n : nodes ) { c [ ( ( int ) ( n.flag ) ) ] . nodes . add ( n ) ; } return c ; }
{ int start = 0 ; while ( start < end ) { int midpoint = ( start + end ) / 2 ; int test = haystack [ midpoint ] ; if ( test == num ) { return midpoint ; } else if ( test < num ) { start = midpoint + 1 ; } else { end = midpoint - 1 ; } } return - 1 ; }
for ( int i = count - 1 ; i >= 0 ; i -- ) { totalSize += downloadExtraAssets . downloadFile ( remoteLocalResources [ i ] ) ; java.lang.Integer progress = ( ( int ) ( ( i / ( ( float ) ( count ) ) ) * 100 ) ) ; publishProgress ( progress ) ; }
isVertical = ( a == ( - 1 ) ) ? 0 : a == ( ( ( int ) ( ( ( int ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( 0 ) ) ) ) + 1 ) ) ) ) ) ) ) , flow . getVgap () ) ) ) ) + "Incorrect vertical )" , ( isVertical ? com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP : 0 ) , flow . getVgap () ) ) + 1 ) ) ) ) + 1 ) ) < ( com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP ) ) + 1 )
for ( java.lang.String port : portsS ) { portsS [ ( i ++ ) ] = validatePortExposure ( port ) ; }
countOfAliveWolves >= ( countOfAliveCitizens - 1 )
{ int sum = 0 ; char [] imei = text . toCharArray () ; for ( int i = 0 ; i < ( text . length () ) ; i ++ ) sum = sum + ( imei [ i ] ) ; return 16 ; }
if ( ( topDistance < 0 ) && ( topDistance > ( - ( headViewHeight ) ) ) ) { mBaseHeaderAdapter . pullViewToRefresh () ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.PULL_TO_REFRESH ; } else if ( ( topDistance > 0 ) && ( ( mHeaderState ) != ( com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ) ) ) { mBaseHeaderAdapter . releaseViewToRefresh () ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ; }
{ double [] orgLimits = ( ( double [] ) ( super . clone () ) ) ; double [] l = f1 . getL. () ; assertTrue ( "Wrong super . l [ 0 ] ) ; l [ 0 ] = ( ( int ) ( ( ( int ) ( ( ( double ) ( ( ( double ) ( ( int ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( value ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) && ( ! ( l . equals ( orgLimits ) ) ) ) ) && ( ! ( l . equals ( orgLimits ) ) ) ) ) && ( ! ( l . isEmpty () ) ) ) ) ) && ( ( ( ( int ) ( ( ( double ) ( ( ( double ) ( ( ( double ) (
{ int currentIndex = 0 ; pl.sdacaemy.data.structures.impl.ForwardList.Node currentNode = head ; while ( ( ( currentNode.next ) != null ) && ( currentIndex < index ) ) { ++ currentIndex ; currentNode = currentNode.next ; } return currentNode ; }
{ java.util.List < com.rastating.droid2.entities.Season > seasons = getSeasons ( ( ( java.lang.Long ) ( null ) ) ) ; if ( seasons != null ) { java.util.Collections . sort ( seasons , new com.rastating.droidItem.comparators.SeasonComparator () ) ; java.util.Collections . reverse ( seasons ) ; show . setSeasons ( seasons ) ; show . setSeasons ( seasons ) ; } }
private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
( matchFound = false )
@ java.lang.Override public com.b countc.java.math.geometry.Vector cnt () { if ( ( outline ) == null ) { return 0 ; } int i = outline . size () ; for ( com.b countc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; }
{ int touchProgress = ( ( int ) ( java.lang.Math . round ( ( ( valuePerDegree () ) * angle ) ) ) ) ; touchProgress = ( touchProgress < 0 ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; touchProgress = ( touchProgress > ( mMax ) ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; if ( ! ( mDragging ) ) touchProgress = ( touchProgress == ( com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE ) ) ? 0 : touchProgress ; return touchProgress ; }
for ( int i = 0 ; i < ( razoes.length ) ; i ++ ) { if ( ( razoes [ i ] ) > 0 ) { if ( ( java.lang.Double . compare ( razoes [ i ] ) ) > 1 ) { if ( ( java.lang.Double . compare ( razoes [ i ] ) ) > 1 ) { java.lang.System.out . println ( java.lang.Double . compare ( razoes [ i ] ) ) ; } } } return indice ; }
colP = point / ( rowP * ( dim ) )
{ co.cask.cdap.data2.queue.DequeueResult < byte [] > result = performDequeue ( maxBatchSize ) ; if ( ( scanStartRow ) != null ) { if ( ! ( ( ( scanStartRow ) != null ) && ( ( scanStartRow ) == null ) ) ) { return; } } else { updateStartRow ( scanStartRow ) ; } }
currentY = - 1
private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node.p , (X + 1 ) ) ; if ( cmp < 0 ) return contains ( node.lb , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else return node.p . equals ( p ) ; }
{ java.lang.System.out . print ( prompt ) ; java.lang.String x = Main.scanner . nextLine () ; isbn = Main . normalizeISBN ( x ) ; got = true ; }
public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; }
{ int status = com.liferay.portal.kernel.util.ParamUtil . getInteger ( actionRequest ) ; java.lang.String portletResource = com.liferay.portal.kernel.util.ParamUtil . getString ( actionRequest , "portletResource" ) ; javax.portlet.PortletPreferences preferences = com.liferay.portlet.PortletPreferencesFactoryUtil . getPortletSetup ( actionRequest , portletResource ) ; preferences . setValue ( "status" , java.lang.String . valueOf ( status ) ) ; preferences . store () ; com.liferay.portal.kernel.servlet.SessionMessages . add ( actionRequest , "potlet-config-saved" ) ; }
if ( resource != null ) { exists = resource . getResourceSet () . getURIConverter () . getURI () ; }
public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 1 {F ; break; case 3 : zoom = mF ; break; case 4 : zoom = null ; break; case 5 : zoom = nullF ; break; } return zoom ; } return zoom ; }
{ int i = - 1 ; while ( ( ++ i ) < ( str . length () ) ) { char c = str . charAt ( i ) ; if ( ( c < '0' ) || ( c > length ) ) { return false ; } } return true ; }
{ int scoreFirst = arg0 . getScore () ; int scoreSecond = arg1 . getScore () ; if ( scoreFirst == scoreSecond ) return 0 ; else if ( scoreFirst > scoreSecond ) return 1 ; return - 1 ; }
{ long difference = ( firstDate . getTime () ) - ( secondDate . getTime () ) ; int diffDays = ( ( int ) ( difference ) ) / ( ( ( 24 * 60 ) * 60 ) * 1000 ) ; return diffDays ; }
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; }
getSupportFragmentManager () . beginTransaction () . replace ( id , fragment ) . commit () ;
{ org.terrier.matching.ResultSet rs = srq . getResultSet () ; int [] docIds = rs . getDocids () ; double [] scores = rs . getScores () ; for ( int i = 0 ; i < ( docIds.length ) ; i ++ ) { if ( ( docIds [ i ] ) == documentId ) { return scores [ i ] ; } } return 0 ; }
{ int markerPosition = markers . indexOf ( marker ) ; if ( markerPosition == ( selectedPosition ) ) return true ; selectMarker ( markerPosition ) ; if ( isZoomed () ) { listener . onActivityMarkerPressedAtIndex ( markerPosition ) ; } else { listener . onLegMarkerPressedAtIndex ( markerPosition ) ; } return true ; }
public void analyze () { boolean error = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { error = true ; } } } if ( error ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } }
{ if ( isOpen () ) return true ; boolean open ; open = camera . open ( cameraIndex ) ; if ( open ) { camera . set ( 5 , 60 ) ; com.shootoff.camera.CameraFactory . openCamerasAdd ( this ) ; } return open ; }
if ( isFavorite ) { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_white_24dp , null ) ) ; } else { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_outline_white_24dp , null ) ) ; }
{ java.util.List < de.dhbw.persistence.Match > matches = new java.util.ArrayList <> () ; for ( java.lang.String matchId : this . matches . split ( ";" ) ) { long id = java.lang.Long . parseLong ( matchId ) ; de.dhbw.persistence.Match match = nullecyKnowItAll.matchRepository . getMatchById ( id ) ; matches . add ( match ) ; } return matches ; }
if ( ( ( currPitInfoIndex ) >= 0 ) && ( ( currTeam ) != null ) ) { try { boolean tempValue = the_auto_high_goal_Button . isChecked () ; if ( ( currTeam . getBoolean ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL ) ) != tempValue ) { currTeam . put ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL , tempValue ) ; } } catch ( org.json.JSONException e ) {} }
{ int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; }
private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; counter -- ; } } } }
{ super . onSaveInstanceState ( outState ) ; if ( ir.blog.microc.movie.Temp.DEBUG_MODE ) android.widget.Toast . makeText ( this , "onSaveInstanceState" , Toast.LENGTH_SHORT ) . show () ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( mRecyclerView . getLayoutManager () ) ) ; int position = linearLayoutManager . findFirstVisibleItemPosition () ; outState . putInt ( ir.blog.microc.movie.activities.MainActivity.FIRST_VISIBLE_ITEM_KEY , position ) ; outState . putParcelableArrayList ( ir.blog.microc.movie.activities.MainActivity.MOVIE_DATA_PARCELABLE , ( ( java.util.ArrayList < ? extends android.os.Parcelable > ) ( movieList ) ) ) ; }
public synchronized void removePlayer ( CardGame.User user ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } }
{ boolean isValid = true ; java.lang.String firstPolicyName = policyNames [ 0 ] ; for ( java.lang.String policyName : policyNames ) { if ( ! ( policyName . equals ( firstPolicyName ) ) ) { break; } isValid = false ; } return isValid ; }
power = p [ i ]
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } }
@ org.junit.Test public void testKeyByColumnIterator () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = messageService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; count ++ ; } org.junit.Assert . assertEquals ( 1 , count ) ; }
{ if ( ! ( currentNode.nodeText . getText () . equals ( "\n" ) ) ) { CurrentPosX = ( currentNode.nodeText . getX () ) + ( java.lang.Math . round ( currentNode.nodeText . getLayoutBounds () . getWidth () ) ) ; CurrentPosY = currentNode.nodeText . getY () ; } else { CurrentPosX = sg.util.FastLinkedList.MARGIN ; double deltaH = java.lang.Math . round ( currentNode.pre.nodeText . getLayoutBounds () . getHeight () ) ; CurrentPosY += deltaH ; } }
( java.lang.Math . log ( ( e / vm ) ) ) + k
private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; }
if ( ( listToSetBottomOf . size () ) > 10 ) { listBottom = listToSetBottomOf . size () ; } else { listBottom = listTopPos + 11 ; }
{ int choice = 0 ; int chosenPokemon ; do { chosenPokemon = getChosen () ; java.lang.System.out . println ( "Do you choose current?" ) ; choice = main.ConsoleRenderer.input . nextInt () ; if ( choice == 2 ) { chooseOnePokemon () ; } else if ( choice != 1 ) { java.lang.System.out . println ( "Choose Yes or No!" ) ; } } while ( choice != 1 ) ; main.Player . choosePokemon ( chosenPokemon ) ; }
res = 1
{ java.lang.System.out . println ( ( ( ( me . getSceneX () ) + ", " ) + ( ( me . getSceneY () ) - int ) ) ) ; int x = ( ( int ) ( me . getSceneX () ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; int y = ( ( int ) ( ( me . getSceneY () ) - int ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; if ( ! ( e ) ) { clicked ( x , y , image ) ; } }
public void shuffleDeck () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } }
if ( ( mRunnables ) == null ) { mRunnables = new java.util.ArrayList <> () ; int count = getItemCount () ; for ( int i = 0 ; i < count ; i ++ ) { mRunnables . add ( null ) ; } }
while ( ( array [ iterator ] ) == null ) { iterator -- ; }
public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; }
{ if ( this . keys . isEmpty () ) { for ( com.gamesbykevin.breakout.ball.Balls.Key key : com.gamesbykevin.breakout.ball.Balls.Key . values () ) { if ( key == ( com.gamesbykevin.breakout.ball.Balls.Key.Red ) ) continue; this . keys . add ( key ) ; } } final int index = GamePanel.RANDOM . nextInt ( com.gamesbykevin.breakout.ball.Balls.Key . values () . length ) ; final com.gamesbykevin.breakout.ball.Balls.Key tmp = com.gamesbykevin.breakout.ball.Balls.Key . values () [ index ] ; this . keys . remove ( index ) ; return tmp ; }
stdv = 1.0 / ( java.lang.Math . sqrt ( ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( ( ( ( ( ( float ) ( ( ( ( ( ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( double ) ( ( ( ( ( float ) ( ( ( ( ( double ) ( ( ( ( ( ( ( float ) ( ( ( ( ( double ) ( ( ( ( ( ( float ) ( ( ( ( ( float ) * ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( "\n" + ( java.lang.Math . sqrt ( ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( ( ( ( float ) ( ( ( ( ( ( ( float ) ( ( ( java.lang.Math . random () ) * stdv2 ) - stdv2 ) - stdv2 ) - stdv2 ) ) ) - stdv ) ) * ( weights. se [ 3 ] ) ) ) ) != null ) ) && ( ( java.lang.Math . sqrt ( ( ( java.lang.Math . sqrt ( ( ( ( ( ( ( ( ( (
public void updateNFCData () { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fp = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fp ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fp ) ; }
@ java.lang.Override public double error ( double t ) { double amount = ( this . amount ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; }
{ float [] result = tableColumnWidth . clone () ; for ( int i = 0 ; i < ( result.length ) ; ++ i ) { result [ i ] += com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils . getEps () ; } return result ; }
private void setStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } }
{ java.lang.String user = userName . getText () ; java.lang.String pass1 = new java.lang.String ( password1 . getPassword () ) ; boolean success = validateData ( user , pass1 , pass2 ) ; if ( ! success ) { success = validateData ( user , pass1 , pass2 ) ; } java.lang.String newAcctData = ( user + " " ) + pass1 ; connectNewUser ( newAcctData ) ; }
if ( temp == true ) { temp2 = acc . get ( i ) ; acc . remove ( i ) ; return temp2 ; }
static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . size_guard_ ( b , l , "cypher" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; }
( ( diff * diff ) / diff ) / ( array.length )
{ int time = params [ 0 ] ; while ( time > 0 ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) {} time -- ; } }
{ byte [] array = dbHandler . retrieveByteArrayFromDb () ; android.graphics.Bitmap bitmap = convertByteArrayToBitmap ( array ) ; if ( bitmap == null ) { profilePic . setImageResource ( defaultPic ) ; } else { profilePic . setImageBitmap ( bitmap ) ; bitmap . recycle () ; } }
invalidateUI ( alphaValue , hexColor , true )
if ( currentIndex < ( usedListModel . size () ) ) { usedListModel . removeElement ( selectedPres ) ; usedListModel . add ( ( currentIndex + 1 ) , selectedPres ) ; }
boolean conditionIsTrue ( utilties.models.Game game ) { int data1 = getData ( this . data1 , game ) ; int data2 = getData ( this . data2 , game ) ; switch ( this . operator ) { case LESS_THAN : return data1
{ this . table = content ; this . setContent ( content ) ; int l = ( ( table . getItems () . size () ) + 1 ) * 40 ; this . setMinHeight ( l ) ; this . setMaxHeight ( l ) ; }
start = mNachoTextView . getText () . toString () . indexOf ( communication )
{ java.lang.String [] barcodeArray = barcode . trim () . split ( " ,^)" ) ; int [] barcodeToInt = new int [ barcodeArray.length ] ; for ( int i = 0 ; i < ( barcodeArray.length ) ; i ++ ) { barcodeToInt [ i ] = java.lang.Integer . parseInt ( barcodeArray [ i ] ) ; } return barcodeToInt ; }
{ engine.network.packet.Packet out = engine.network.packet.Packet . getNewContentPacket ( Packet.MAX_PACKET_SIZE ) ; }
short ct = 1 ;
public org.apache.commons.math3.linear.RealMatrix getCovObject ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovObjectMatrix () ; }
for ( int a = 0 ; a < ( list . size () ) ; a ++ ) { if ( ( list . get ( a ) ) > max ) { max = list . get ( a ) ; } }
{ double tmppr = 0.0 ; double alpha = context . getConfiguration () . getDouble ( "alpha" ) ; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmppr += val . get () ; } title . set ( "Sum" ) ; pr . set ( java.lang.String . valueOf ( ( tmppr * alpha ) ) ) ; context . write ( title , pr ) ; }
{ int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; }
if ( ! ( timeRequirement <= 0 ) ) { util.Util . setError ( lblTimeRequirementError , "Invalid value, must be positive ; numbers only" ) ; return false ; }
{ com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minutes - ( oter . getTime () ) ) ) ; android.util.Log . e ( "Wakeup" , ( ( minutes - ( oter . getTime () ) ) + "" ) ) ; }
{ handleCompletion ( view , url ) ; }
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V get ( ) throws java.io.IOException { long ai = MapStore.INSTANCE . get ( filer , this . keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } return ai > ( - 1 ) ; }
public long [] getMembersList () { java.lang.String [] list = this . members . split ( "," ) ; long [] memberLists = new long [ list.length ] ; for ( int i = 0 ; i < ( memberLists.length ) ; i ++ ) memberLists [ i ] = java.lang.Long . parseLong ( list [ i ] ) ; return memberLists ; }
degreeOfFreedom = dataset.length
{ java.util.Random rand = new java.util.Random () ; int top = ( max - min ) + 1 ; if ( top <= 0 ) { top = 1 ; } int randomInt = ( rand . nextInt ( top ) ) + min ; return randomInt ; }
{ int classifiedPositive = 0 ; int classifiedNegative = 0 ; for ( ch.bfh.bti7535.w2016.algorithm.features.AbstractFeature feature : featurePipeline ) { classifiedPositive += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_POSITIVE ) ; classifiedNegative += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_NEGATIVE ) ; } return document ; }
{ try { return loadFromServer ( id ) ; } catch ( java.lang.Exception serverException ) { if ( ( serverException . getCause () ) instanceof org.sonar.api.utils.HttpDownloader.HttpException ) { throw serverException ; } byte [] cached = loadFromCache ( id ) ; if ( cached != null ) { return cached ; } } return null ; }
{ if ( event . getValueIsAdjusting () ) { return; } int [] selectedRows = table . getSelectedRows () ; java.lang.String id = ( ( java.lang.String ) ( table . getValueAt ( selectedRows [ 0 ] , 0 ) ) ) ; java.lang.Double xPosition = eventDataIDPositionMap . get ( id . trim () ) ; mainFrame . getGraph () . showEventVerticalPosition ( xPosition ) ; }
{ double pricePerFifthMile = 0.5 ; double totalFare = 0.0 ; double overTwoPassengerCharge = 2.0 ; double dropOffCharge = 2.5 ; double distance = 0 ; int numberOfPassengers = 5 ; if ( numberOfPassengers > 2 ) { totalFare = overTwoPassengerCharge * ( numberOfPassengers - 2 ) ; } totalFare += dropOffCharge + ( distance * pricePerFifthMile ) ; assertEquals ( c75 , totalFare , 0.1 ) ; }
{ java.lang.String snusChar = com.ihwapp.android.model.Curriculum . getCampusChar ( snus ) ; android.content.SharedPreferences prefs = com.ihwapp.android.model.Curriculum.ctx . getSharedPreferences ( ( ( year ) + snusChar ) , Context.MODE_PRIVATE ) ; prefs . edit () . putString ( "scheduleJSON" , result ) . commit () ; }
{ MainInterface . init () ; int choice = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( choice ) ; if ( choice == 0 ) break; choice = MainInterface . prompt () ; } MainInterface.sc . close () ; }
private void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.thepro.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.thepro ..PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.thepro ..Block block = new com.waterfall.thomaswatson.thepro ..Block ( context ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.thepro ..PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.thepro ..PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } }
if ( ( ( _bytes.length ) + offset ) > ( ( int ) ( ( _bytes.length ) + offset ) ) ) { byte [] newBytes = new byte [ ( ( _bytes.length ) + offset ) ] ; java.lang.System . arraycopy ( _bytes , 0 , newBytes , 0 , _bytes.length ) ; _bytes = newBytes ; }
{ slmt.courses.cp.hw3.step1.PageInfo info = new slmt.courses.cp.hw3.step1.PageInfo () ; long nodeCount = reporter . toString () ; java.lang.System.out . println ( ( ( 1.0 / ( ( double ) ( nodeCount ) ) ) ) ) ; while ( inputVals . hasNext () ) info . addOutLink ( inputVals . next () . toString () ) ; outputCollector . collect ( inputKey , info ) ; }
{ final long start = java.lang.System . currentTimeMillis () ; final java.util.List < org.todss.model.IntakeMoment > list = org.todss.algorithm.SmartAlgorithm . run ( context ) ; java.lang.System.out . println ( ( ( "Took " + ( ( java.lang.System . currentTimeMillis () ) - start ) ) + " ms." ) ) ; return list ; }
@ org.junit.Test public void testInstallGroup () { java.lang.String inport = "2" ; int vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport ) ; mdSalMgr . installGroup ( grpEntity1 ) ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; java.lang.System.out . println ( inport ) ; java.lang.System.out . println ( inport ) ; java.lang.System.out . println ( inport ) ; }
public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; }
{ rx.internal.operators.OperatorPublish.OriginSubscriber < T > origin = state . getOrigin () ; if ( ( emitted > 0 ) && ( origin != null ) ) { long r = origin.originOutManager . addAndGet ( ( - emitted ) ) ; if ( r <= ( origin.THRESHOLD ) ) { origin . requestMore ( ( ( rx.internal.util.RxRingBuffer.SIZE ) - ( origin.THRESHOLD ) ) ) ; } } }
{ int x = getSprite () . getX () ; int y = getSprite () . getY () ; gravity () ; if ( ( ( ySpeed ) == 0 ) && ( checkCollision ( x , ( y + 2 ) , Main.level . getConstructs () ) ) ) { ySpeed = - ( environment.Constants.JUMP_HEIGHT ) ; } }
expResult = true
minWayId = 0
java.lang.Math . ceil ( ( ( ( ( double ) ( 10 ) ) * lvl ) * ( java.lang.Math . pow ( 1.1 , lvl ) ) ) ) )
result = 255 - ( result * ( - 1 ) )
{ toFind = "fit" ; to [] [] toSearch = new char [] [] { new char [] { 'x' , 'f' , 'f' } , new char [] { 'x' , 'i' , 'i' } , new char [] { 'x' , 'x' , 't' } } ; grid = new com.paigeruppel.katas.wordsearch.LetterGrid ( toSearch ) ; }
{ if ( ( element == null ) || ( element == null ) ) return; this . add [ ( ++ ( this . size ) ) ] = element ; int current = this . size ; while ( ( this . Heap [ current ] ) > ( this . Heap [ this . parent ( current ) ] ) ) { this . swap ( current , this . parent ( current ) ) ; current = this . parent ( current ) ; } }
{ alignment [ t ] = alignment [ ( t + 1 ) ] ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment [ t ] ; eLost . removeOneFrame ( frames [ t ] ) ; float vLost = eLost . getVar () ; return globalVar += vGain - vLost ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.view_pager ) ; be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter mSectionsPagerAdapter = new be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter ( getSupportFragmentManager () ) ; android.support.v4.view.ViewPager mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.pager ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; }
{ final boolean asyncSupported = baseRequest . isAsyncSupported () ; try { servlet . service ( request , response ) ; } finally { baseRequest . setAsyncSupported ( asyncSupported ) ; } }
read = new byte [ java.lang.Math . min ( temp , size )
y = 0
{ byte [] ret = new byte [ list . size () ] ; java.util.Iterator < java.lang.Integer > iterator = list . iterator () ; for ( int i = 0 ; i < ( ret.length ) ; i ++ ) { ret [ i ] = iterator . next () . byteValue () ; } return ret ; }
{ double average ; long total = 0 ; for ( int i = 0 ; i < ( population . size () ) ; i ++ ) { total += population . get ( i ) . getEvaluation () ; } return total / ( population . size () ) ; }
{ model.WinChecker checker = new model.WinChecker () ; model.Board board = new model.Board () ; model.Player player = new model.Human ( "X" ) ; boolean expected = true ; board . performStep ( player , 0 , 0 ) ; board . performStep ( player , 1 , 1 ) ; board . performStep ( player , 2 , 2 ) ; boolean actual = checker . isWinner ( player , board ) ; assertThat ( actual , org.hamcrest.core.Is . is ( expected ) ) ; }
if ( ( this . expires ) == 0 ) { needsRefresh = false ; } else { long now = java.lang.System . currentTimeMillis () ; long tokenDuration = now - ( this . lastRefresh ) ; needsRefresh = tokenDuration >= ( ( this . expires ) - ( com.box.sdk.BoxAPIConnection.REFRESH_EPSILON ) ) ; }
{ java.util.List < tellh.com.recyclertreeview_lib.TreeNode > childList = pNode . getChildList () ; int addChildCount = 0 ; for ( tellh.com.recyclertreeview_lib.TreeNode treeNode : childList ) { displayNodes . add ( ( startIndex + ( addChildCount ++ ) ) , treeNode ) ; if ( treeNode . isExpand () ) { addChildCount += addChildNodes ( treeNode , ( startIndex + addChildCount ) ) ; } } pNode . toggle () ; return addChildCount ; }
{ java.lang.System.out . println ( "I'm in it" ) ; getQueryMap . setFirstTimestamp ( timeStamp ) ; java.lang.System.out . println ( ( ( ChannelCode + '\t' ) + timeStamp ) ) ; isFirst = false ; }
switch ( view . getId () ) { case R.id.wsgh_yes_rb : if ( checked ) wsghSpinnerRl . setVisibility ( View.GONE ) ; loadReportingFormSelfFragment () ; if ( ( getActivity () ) instanceof com.unfpa.safepal.report.ReportingActivity ) { ( ( com.unfpa.safepal.report.ReportingActivity ) ( getActivity () ) ) . updateNextButtonToSubmit () ; } break; }
public static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }
{ int size = java.lang.Integer . parseInt ( message ) ; byte [] buffer = new byte [ size ] ; for ( int i = 0 ; i < size ; ++ i ) buffer [ i ] = 'p' ; buffer [ size ] = 0 ; byte [] encodedBufer = org.apache.commons.codec.binary.Base64 . encodeBase64 ( buffer ) ; java.lang.String result = new java.lang.String ( encodedBufer ) ; postMessage ( instanceId , result ) ; }
set [ root_q ] = root_q
{ int index = table . getSelectedRow () ; if ( index == ( - 1 ) ) { index = 0 ; } table . clearSelection () ; if ( ( ++ index ) > ( table . getRowCount () ) ) { index = 0 ; } index = table . convertRowIndexToView ( index ) ; table . addRowSelectionInterval ( index , index ) ; }
count = new int [ 0 ]
{ if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } }
{ this . matchRoute = new com.gogreen.greenmachine.parseobjects.MatchRoute () ; java.util.ArrayList < com.gogreen.greenmachine.parseobjects.Hotspot > selectedHotspotsList = new java.util.ArrayList < com.gogreen.greenmachine.parseobjects.Hotspot > ( selectedHotspots ) ; boolean saved = backend . sendRiderRequest ( new com.gogreen.greenmachine.parseobjects.MatchRoute [] { this . matchRoute } , selectedHotspotsList , currentCapacity , driverCar , matchByDate , null ) ; return saved ; }
{ final double getString = ( ( ( double ) ( m_sumOfMsg1UniqueMsgIdCountSquare ) ) / ( ( double ) ( m_numberOfIntervals ) ) ) - ( - ( ( getMsg1UniqueMsgId ) * ( getMsg1UniqueMsgId ) ) ) ; if ( ( m_sumOfMsg1UniqueMsg1UniqueMsg1UniqueMsg ) != 0 ) { ( ( double ) ( m_sumOfMsg1UniqueMsgIdCountSquare ) ) / ( ( double ) ( m_numberOfIntervals ) ) ; } }
{ int removeCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; mDelegate = delegate ; updateObservers () ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; if ( removeCount > 0 ) { notifyItemRangeRemoved ( 0 , removeCount ) ; } if ( insertCount > 0 ) { notifyItemRangeInserted ( 0 , insertCount ) ; } }
{ java.lang.String numeroTarjeta ; java.lang.String idUsuario = "certGT" ; long montoCertificado = 50 ; java.lang.String resultado = null ; try { resultado = facade . activaTarjetaCertificado ( numeroTarjeta , montoCertificado , idUsuario ) ; com.claro.gml.certificados.test.BussinesTest.logger . info ( "resultado [{}]" , resultado ) ; } catch ( com.claro.transfer.certificados.exception.BussinesException e ) { com.claro.gml.certificados.test.BussinesTest.logger . error ( "Error [{}]" , e . getMessage () , e ) ; } }
{ int version = getUserVersion ( statement ) ; if ( version < ( gui.Splash.DATABASE_VERSION ) ) { try { switch ( version ) { case 0 : statement . executeUpdate ( "alter tableer add column favorite_volume androidint(1) not null default"';" ) ; } setUserVersion ( statement , Splash.DATABASE_VERSION ) ; } } }
@ java.lang.Override public com.hw3.DoubleStack clone ( ) throws java.lang.CloneNotSupportedException { if ( stack == null ) { return null ; } double m = stack . getLast () ; try { for ( int i = stack . indexOf ( m ) ; i >= 0 ; i -- ) { stackclone . push ( stack . get ( i ) ) ; } } return stackclone ; }
{ if ( ( tail ) == null ) return; int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { tmp *= i ; } }
{ com.crossballbox.model.UserInfo userInfo = user . getUserInfo () ; if ( userInfo == null ) { userInfo = new com.crossballbox.model.UserInfo ( userId ) ; } userInfo . setFamilyData ( familyData ) ; userInfo . setUserHealthyState ( userHealthyState ) ; userInfo . setUserAdditionalInfo ( userAdditionalInfo ) ; userInfo . setUser ( user ) ; userInfo . setImagePath ( imagePath ) ; userInfoDAO . save ( userInfo ) ; return userInfo ; }
{ int meta = state . getBlock () . getMetaFromState ( state ) ; if ( mat != null ) return mat . getColor () ; if ( mat != null ) return mat . getColor () ; return 16777215 ; }
{ java.lang.System.out . println ( ( ( android.app.AlertDialog ) ( dialog ) ) . getListView () ) ; int selected = ( ( java.lang.Integer ) ( lw . getTag () ) ) ; exportExpensesXLS ( selected ) ; dialog . cancel () ; }
return ( ( java.lang.Math . log ( ( a + b ) ) ) / 10 ) / ( java.lang.Math . log ( 0 ) ) ;
{ int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; }
attachToBaseObject ( el , true )
if ( ( expression . length () ) > end ) { java.lang.String quantifier = java.lang.String . valueOf ( expression . charAt ( ( end + 1 ) ) ) ; if ( ! ( isQuantifier ( quantifier ) ) ) { end ++ ; } }
if ( random_instance > ( used.length ) ) random_instance = 0 ;
{ int setCount = ( getFieldCount () ) / ( net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) ; java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > result = new java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > ( setCount ) ; for ( int i = 0 ; i <= setCount ; i += net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) { net.sf.marineapi.nmea.util.Measurement value = fetchValues ( i ) ; if ( ! ( value . isEmpty () ) ) { result . add ( value ) ; } } return result ; }
public java.lang.String receive () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; }
org.assertj.core.api.Assertions . assertThat ( numberOfConnectorImplementations )
{ boolean value = intent . getBooleanExtra ( "ACTION" , false ) ; android.util.Log . d ( com.home.pete.aquarium.MainActivity.TAG , "Toggling UV state" ) ; com.home.pete.aquarium.Intent msg = new com.home.pete.aquarium.Intent ( "uv-state" ) ; msg . putExtra ( "ACTION" , value ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( context ) . sendBroadcast ( msg ) ; }
potential + ( ( int ) ( bullets ) )
public void add ( java.lang.String type , this . heap . get ( getParent ( index ) ) ) { heap . add ( false ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( false ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , false ) ; } }
{ byte [] bytes = message . getHeader () ; byte [] pl = message . getPayload () ; out . write ( message . getHeader () ) ; out . write ( message . getPayload () ) ; }
{ if ( step == 0 ) super . step ( model , step , substep ) ; neutrality.MarketInfo mi = getModel () . getMarketInformation ( ( step - 1 ) ) ; double []tNetInvest = mi.nspNetworkInvestment ; makeNetworkInvestment ( step , androidtNetInvest ) ; }
{ offset = graph . getFinalNodes () . size () ; offset = ( offset == 1 ) ? offset - 1 : offset - 2 ; return ( ( graph . edgeCount () ) - ( ( graph . size () ) - offset ) ) + 2 ; }
{ x = xStart ; fadeOut . stop () ; jDialog . setVisible ( false ) ; }
{ if ( vagas [ i ] ) { paineis [ i ] . setBackground ( java.awt.Color.green ) ; } else paineis [ i ] . setBackground ( java.awt.Color.red ) ; }
private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; }
@ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; }
{ int min = phasetime . getMinute () ; int sec = phasetime . getSecond () ; double timer = min + ( sec / 60.0 ) ; this . phases [ ( phase - 1 ) ] . getData () . add ( new javafx.scene.chart.XYChart.Data <> ( ( ( double ) ( this . phaseCounter ) ) , timer ) ) ; }
{ com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe4b.edivator.backend.service.Image resizeImage = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeImageFromBlob ( key ) ; com.gruppe4b.edivator.backend.service.Transform transform ; if ( horizontal == true ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; } else if ( horizontal == false ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeVerticalFlip () ; } int newId = 0 ; return newId ; }
numOfInstr . get ( ( ( teammates.client.scripts.DataGenerator.MAX_NUM_OF_INSTRUCTOR_PER_COURSES ) - ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ) ) + 1 )
if ( ! isEmpty ) { visible = false ; } else { visible = true ; }
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( position > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } }
{ super . writeTo ( out ) ; int numJobs = toKill . size () ; out . put ( numJobs ) ; for ( int i = 0 ; i < numJobs ; i ++ ) { java.util.UUID job = toKill . get ( i ) ; out . writeLong ( job . getMostSignificantBits () ) ; out . writeLong ( job . getLeastSignificantBits () ) ; } }
{ getActivity () . runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { int i = bnp . getProgress () ; if ( i < count ) { bnp . incrementProgressBy ( 1 ) ; } } } ) ; }
{ java.lang.System.out . println ( "validarCampos" ) ; java.lang.String username = "" ; java.lang.String password = "" ; com.grupo7.practica.principal instance = new com.grupo7.practica.principal () ; boolean expResult = true ; boolean result = instance . validarCampos ( username , password ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; }
{ finishDB () ; android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = getDbValues ( person ) ; long personId = db . insert ( org.rhok.linguist.code.DatabaseHelper.PERSON_TABLE_NAME , null , values ) ; person.personid = ( ( int ) ( personId ) ) ; person.Enabled = false ; db . close () ; }
if ( index >= ( - 1 ) ) { this . end = java.lang.Math . max ( this . start , index ) ; }
{ int count = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( a . length () , b . length () ) ) ; i ++ ) { if ( ! ( ( a . indexOf ( i ) ) == ( b . indexOf ( i ) ) ) ) return count ; count ++ ; } return count ; }
{ int from = edge . from () ; if ( ! ( edges . containsKey ( from ) ) ) { edges . put ( from , new java.util.HashSet <> () ) ; } java.util.Set < diagraph.DirectedEdge > inputEdges = edges . get ( from ) ; if ( ! ( edges . get ( from ) ) )Edges . add ( edge ) ; }
{ java.lang.String alg = "AES" ; java.lang.String key = "TheBestSecreteKe" ; java.security.Key key2 = new javax.crypto.spec.SecretKeySpec ( key . getBytes () , alg ) ; javax.crypto.Cipher cipher = javax.crypto.Cipher . getInstance ( alg ) ; cipher . init ( javax.crypto.Cipher.ENCRYPT_MODE , key2 ) ; byte [] encVal = cipher . doFinal ( data . getBytes () ) ; java.lang.String encryptedValue = java.util.Base64 . getEncoder () . encodeToString ( encVal ) ; }
{ double avg = org.dynami.core.utils.StatUtils . avg ( series ) ; double sum = 0 ; for ( java.lang.Double d : series ) { sum += java.lang.Math . pow ( ( d - avg ) , 2 ) ; } return java.lang.Math . sqrt ( ( ( sum / ( series . size () ) ) - 1 ) ) ; }
{ java.lang.String temp = java.lang.Integer . toHexString ( number ) ; int length = temp . length () ; for ( int i = 0 ; i < ( 4 - length ) ; i ++ ) temp += "0" + temp ; return temp ; }
public void run () { if ( ! ( args . isNull ( 0 ) ) ) { java.lang.String inputMode_s = args . get ( 0 ) ; int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode . equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode . equals ( "View" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMode_i ) ; } else { callbackContext . error ( "No arguments found" ) ; } callbackContext . success () ; }
{ int idxInRow = 0 ; int startVertex = row * numInRow ; int currVertex = startVertex ; while ( idxInRow < numInRow ) { addFace ( currVertex , ( currVertex + 1 ) , ( ( currVertex + numInRow ) + 1 ) , ( currVertex + numInRow ) ) ; currVertex ++ ; idxInRow ++ ; } }
{ removeIndex ( record ) ; mapDataStore . remove ( key , now ) ; }
{ double discount = 1.0 ; if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.SILVER_LIMIT ) ) { discount = ooptraining.DiscountCalculator.SILVER_DISCOUNT ; } else if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.GOLD_LIMIT ) ) { discount = ooptraining.DiscountCalculator.GOLD_DISCOUNT ; } return discount ; }
protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; }
public void addItem ( item.Item i ) { if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += i.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } }
{ totalBalance = + 200 ; if ( ( reservation . getRoomType () ) == "E" ) { totalBalance = + 200 ; } if ( ( reservation . getRoomType () ) == "E" ) { totalBalance = + 80 ; } }
if ( x >= width ) { x = width ; }
{ java.lang.String [] sr = values . split ( "," ) ; for ( int i = 0 ; i < ( sr.length ) ; i ++ ) { int num = java.lang.Integer.MIN_VALUE ; try { num = java.lang.Integer . parseInt ( sr [ i ] ) ; } catch ( java.lang.NumberFormatException ) { break; } zeroValues . add ( num ) ; } }
@ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull final java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull
{ org.ethereum.jsonrpc.Block block = getByJsonBlockId ( blockId ) ; byte [] addressAsByteArray = org.ethereum.jsonrpc.TypeConverter.TypeConverter . StringHexToByteArray ( address ) ; byte [] code = this . repository . getSnapshotTo ( block . getStateRoot () ) ; return org.ethereum.jsonrpc.TypeConverter.TypeConverter . toJsonHex ( code ) ; }
if ( currentRow > rowCount ) { break; }
public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } }
return ( this . height ) - r ;
{ int result = getDateFrom () . hashCode () ; result = ( 31 * result ) + ( getUser () . hashCode () ) ; result = ( 31 * result ) + ( getBookInstance () . hashCode () ) ; return result ; }
public synchronized java.lang.String getSpeed ( long size ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum= 0dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; }
id = time * ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( 0 ) ) ) ) ) ) ) ) ) ) && ( transactionID . compareAndSet ( old , id ) ) ) ) ) == null ) ) ) && ( transactionID . compareAndSet ( old , id ) ) ) == 0 ) ) ) && ( ! ( transactionID . compareAndSet ( old , id ) ) ) || ( ( id ) == ( old + 1 ) ) ) && ( ! ( transactionID . compareAndSet ( old , id ) ) ) ) || ( id == ( - 1 ) ) ) && ( transactionID . compareAndSet ( old , id ) ) ) || ( id == ( - 1 ) ) ) || ( transactionID . compareAndSet ( old , id ) ) ) || ( id == ( - 1 ) ) ) || ( transactionID . compareAndSet ( old , id ) ) )
{ if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } long result = 0 ; while ( result == 0 ) { result = puzzleStorage.puzzles [ cursor ] ; ( cursor ) ++ ; } return result ; }
public static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; }
static java.lang.String minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { action = a ; } } return action ; }
if ( index != ( - 1 ) ) { long time = ( ( long ) ( ( s . getTime () . getMillis () ) * ( org.cook_e.data.TimeLearner.weightList . get ( index ) . timeWeight ) ) ) ; return new org.joda.time.Duration ( time ) ; }
syncStates = new boolean [ 0 ]
public static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
{ java.lang.String [] policyIds = policyId . split ( ":" ) ; boolean userRemovedFromHDFSPolicy = this . hdfsAdminService . removeUserFromQueuePermission ( policyIds [ 1 ] , groupName , accountName ) ; return userRemovedFromYarnPolicy ; }
public int xToPixel ( double x , mes , ( chart . getFieldWidth () ) ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( false , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; }
{ int i ; try { i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { return; } resetButtons () ; resetButtons () ; resetBoard ( i ) ; resetFields ( i ) ; }
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; }
@ java.lang.Override public boolean checkImpl ( wjtoth.cyclicIndexmatching.PreferenceSystem preferenceSystem ) { if ( matchings != null ) { for ( wjtoth.cyclicIndexmatching.Matching matching : matchings ) { wjtoth.cyclicIndexmatching.MatchingPS mathcingPS = new wjtoth.cyclicIndexmatching.MatchingPS ( matching , preferenceSystem ) ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDiss () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } } } return false ; }
s += str . charAt ( str . charAt ( ( ( len - 1 ) - i ) ) )
this . wordsFTlib.Helper . words ( input , index , 1 )
public java.util.Map < java.lang.Integer , int [] > getListOfCoordinates () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; } } return listOfCoordinates ; }
ordinal = ( ( long ) ( java.lang.Math . ceil ( ( ( ( ( ( tempProbability * card ) + min ) - 1 ) ) + 1 ) + 1 ) ) )
java.lang.Math . min ( position , count )
{ int index = conversations . getSelectionModel () . getSelectedIndex () ; java.lang.String data = conversations . getSelectionModel () . getSelectedItem () ; codeu.chat.common.ConversationSummary selectedConvo = lookupByTitle ( data , index ) ; codeu.chat.client.simplegui.ChatGuiFX.clientContext.conversation . setCurrent ( selectedConvo ) ; updateCurrentConversation ( selectedConvo ) ; }
private void init ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; }
( ( server.config.properties . contains ( "c10tArgs" ) ) && ( maxAge > ( lastRun ) ) ) && ( ( server . numPlayers () ) > 0 )
max = ( _scroll . getMaximum () ) - ( _scroll . getMinimum () ) ) - 1
{ super . setUp () ; java.io.File inputFile = new java.io.File ( testFileRaw ) ; byte [] fileData = new byte [ ( ( int ) ( inputFile . length () ) ) ] ; java.io.DataInputStream dis = new java.io.DataInputStream ( new java.io.FileInputStream ( inputFile ) ) ; dis . readFully ( fileData ) ; sCore = new edu.berkeley.cs.succ . size () ; }
public void markPhaseTable2 () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD textASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } }
{ boolean horizontal = ( checkWinHorizontal ( xTurn , column ) ) >= 4 ; boolean vertical = ( checkWinVertical ( xTurn , column ) ) >= 4 ; if ( checkWinDiagonal ( xTurn , column ) ) >= 4 ; return ( horizontal || vertical ) || ( ; }
{ int bits = 4 ; int [] ids = new int [] { 6 , 9 } ; int firstId = 3 ; java.util.ArrayList < java.lang.Integer > e = new java.util.ArrayList <> ( ids.length ) ; for ( int id : ids ) { e . add ( id ) ; } java.util.Collections . sort ( e ) ; ChordNetwork net = new ChordNetwork ( bits , firstId ) ; net . addNodes ( e ) ; }
{ boolean update = alwaysRedraw ; if ( ( ( _caretOffset ) == null ) || ( ( _caretOffset ) == 0 ) ) { _textWidget . redraw () ; update |= clearHoveredPairsToPaint () ; } if ( singleBracketsTouched ) update |= updateSingleBrackets () ; if ( ! ( true ) ) { _textWidget . getDisplay () . asyncExec ( new java.lang.Runnable () { @ java.lang.Override public void run () { _textWidget . redraw () ; } } ) ; } }
{ if ( ( this . getSpezialfaehigkeit () ) == true ) { this . wahrscheinlichkeit () ; if ( ( this . wahrscheinlichkeit () ) == true ) { java.lang.System.out . println ( "Erfolgreich!" ) ; this . schadenNehmen ( ( schaden * 2 ) ) ; } else schaden = schaden / 2 ; } super . angreifen ( gegner ) ; }
if ( ( bounds . getHeight () ) > ( com.ggwp.interiordesigner.object.Room.MINIMUM_DIMENSION ) ) { float scalePercentage = 1.0F + ( ( ( com.ggwp.interiordesigner.object.Room.SCALE_AMOUNT ) / ( bounds . getHeight () ) ) * multiplier ) ; for ( com.ggwp.interiordesigner.object.Wall wall : getWalls () ) { wall.transform . scale ( 1.0F , scalePercentage , 1.0F ) ; } }
{ if ( ! ( yourField . at ( pos ) ) ) { return "missed!\n" ; } java.lang.String hitstr = "" ; boolean sunk = false ; hitstr = yourField . addHit ( pos ) ; if ( hitstr . contains ( "sunk" ) ) ( this . shipsDestroyed ) ++ ; return hitstr ; }
if ( contact . getNumber () ) { java.lang.System.out . println ( ( ( "That number already exists for contact " + ( contact . getName () ) ) + ". Try a different one" ) ) ; continue; } else if ( contact == null ) { java.lang.System.out . println ( "Adding new number..." ) ; }
{ final java.util.Calendar c = java.util.Calendar . getInstance () ; int hour = c . get ( java.util.Calendar.HOUR_OF_DAY ) ; int minute = c . get ( java.util.Calendar.MINUTE ) ; hourOfDay = "" ; return new android.app.TimePickerDialog ( getActivity () , this , hour , minute , android.text.format.DateFormat . is24HourFormat ( getActivity () ) ) ; }
{ for ( int i = interval.start ; i <= ( interval.end ) ; i ++ ) { int tokenIndex = suffix_array [ i ] ; lcp_interval_array [ tokenIndex ] = interval ; } }
{ int selectedIdentity = de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ; if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 0 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.person . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 1 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.team . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 2 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.unternehmen . getId () ; } return 0 ; }
{ gameStart () ; battleStart () ; while ( ( GameOn ) == true ) { battleActive () ; boolean a = battleEnd () ; if ( a == true ) { onPlayerWin () ; } if ( a == false ) { onPlayerLose () ; GameOn = false ; } } }
{ int i = 1 ; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf . append ( ( i ++ ) ) ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.FileWriter ( ( path + "edb.pl" ) ) , true ) ; prologWriter . println ( buf ) ; prologWriter . flush () ; prologWriter . close () ; }
{ boolean result ; try { org.diachron.detection.utils.MCDUtils mcd = new org.diachron.detection.utils.MCDUtils ( propertiesManager . getProperties () , datasetUri , true ) ; mcd . deleteCCWithLessPriority ( ccName ) ; mcd . detectDatasets ( true ) ; mcd . terminate () ; } catch ( java.lang.Exception ex ) { return ex ; } return null ; }
{ result = match ( nodes , org ) ; break; }
if ( bundleIndex < 0 ) return false ;
public int hash ( V value ) { int hash = 0 ; switch ( hashFunction ) { case "add .Hash" : hash = add .Hash ( value ) ; break; case "rotationalHash" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
if ( value > ( end ) ) { long diffInBuckets = ( value - ( end ) ) / ( bucketSpanMillis ) ; long move = ( diffInBuckets + 1 ) * ( bucketSpanMillis ) ; start += move ; end += move ; triggerPurge = true ; lowestPurgeableTimeBucket += diffInBuckets ; }
{ cs155.core.Color3D localDiffuse ; double diffuseIntensity = cs155.core.Light3D . diffuse ( lightVec , n ) ; matColor = Color3D.WHITE ; localDiffuse = matColor . times ( lightColor ) . scale ( diffuseIntensity ) ; return localDiffuse ; }
if ( ( score1 ) < ( score2 ) ) s = score2 ; else s = score1 ;
if ( ( interval >= 1 ) && ( interval < 2 ) ) { steps += 1 ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_dish_detail ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.content.Intent dishInent = getIntent () ; int dish_id = dishInent . getIntExtra ( "dish_id" , 1 ) ; fetchDishFromServer ( dish_id ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; }
if ( ! ( ( nextEntry.numberOfSuccessors ) == 1 ) ) { next . set ( idx , null ) ; } else { isLastLetter = false ; }
{ boolean success = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; success = file . delete () ; if ( ! success ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } return success ; }
@ java.lang.Override public void onClick ( android.view.View v ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; }
{ double index = calculateIntegralAtIteration () ; diff = java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( ( ( ( ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) - 1 ) ) ) + ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) ) ) ) + ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) ) ) ) + ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) ) ) ) + ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( ( "Diff : " + diff ) ) ) + ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) ) ) ) + ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) ) ) ) + ( java.lang.Math . abs ( ( ( java.lang.Math . abs ( temp ) ) + ( java.lang.Math . abs ( temp ) ) ) ) + ( java.lang.Math . abs ( temp ) ) ) ) ) + 1 ) ) ) ) && ( temp < ( - 1 ) ) ) && ( temp != ( - 1 ) ) ) && ( temp == ( - 1 ) ) ) ; }
{ retString += ( ( ( "" + i ) + ". " ) + ( d . toString () ) ) + "\n" ; }
if ( existingLevel != null ) { removeLevel ( workspace , existingLevel ) ; workspace . getWorkspaceHelper () . populateDomain ( workspace ) ; isApplied = true ; }
{ com.intellij.psi.PsiFile _containingFile = psiClass . getContainingFile () ; final com.intellij.psi.PsiJavaFile javaFile = ( ( com.intellij.psi.PsiJavaFile ) ( _containingFile ) ) ; final java.lang.String psiPackageName = javaFile . getPackageName () ; final java.lang.String psiPackageName = ( ( com.intellij.psi.PsiJavaFile . getPackageName () ) + 1 ) ; final java.lang.String psiPackageName = ( ( com.intellij.psi.PsiJavaFile ) ( _ ) ) ; if ( _not ) { return psiPackageName ; } return null ; }
{ pianoA . setSize ( width , height ) ; pianoB . setSize ( width , height ) ; pianoAB . setSize ( width , height ) ; }
{ int year = java.lang.Integer . parseInt ( activity . getString ( "year" ) ) ; int month = java.lang.Integer . parseInt ( activity . getString ( "month" ) ) ; return ( ( matcher . get ( java.util.Calendar.YEAR ) ) == year ) && ( matcher . get ( java.util.Calendar.MONTH ) ) . equals ( month ) ; }
{ java.awt.Dimension screen = java.awt.Toolkit . getDefaultToolkit () . getScreenSize () ; int iCenterY = ( screen.height ) / 2 ; setLocation ( ( iCenterX - ( ( window.width ) / 2 ) ) , ( iCenterY - ( ( window.height ) / 2 ) ) ) ; revalidate () ; }
{ int bestImageResolution = java.lang.Math . min ( largestImageDimension , resolution ) ; android.util.Log . d ( gov.nasa.jpl.hi.marsimages.models.ImageQuad.TAG , ( "Texture res: " + ( gov.nasa.jpl.hi.marsimages.models.M . floorPowerOfTwo ( bestImageResolution ) ) ) ) ; return gov.nasa.jpl.hi.marsimages.models.M . floorPowerOfTwo ( bestImageResolution ) ; }
{ java.util.Queue < PositionRequestMessage > queue = this . returnAddresses . get ( message.requestUuid ) ; int intervalStart = message.start ; for ( PositionRequestMessage prMessage : queue ) { prMessage.sender . send ( new IntervalMessage ( this , prMessage.sender , intervalStart , ( ( intervalStart + ( prMessage.i ) ) - 1 ) , prMessage.uuid ) ) ; intervalStart += prMessage.i ; } }
public static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBased getContext () ) { final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } return result ; }
if ( ( ( newX >= 0 ) && ( newX < 5 ) ) || ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; }
{ org.junit.Test public void testDrawFaceUpTrainCards ( ) throws java.lang.Exception { try { if ( ( faceUpDeck . getFiveUp () . size () ) > 0 ) { java.util.ArrayList < try { assertNotEquals ( faceUpDeck . getCards () . get ( i ) , null ) ; } } } } else { if ( ( faceUpDeck . getCards () . size () ) > 0 ) { try ( int i = 0 ; i < size ; i ++ ) { assertNotEquals ( faceUpDeck . getCards () . get ( i ) , null ) ; } } } }
public void setTemperature ( java.lang.String h ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; }
{ if ( usedHeapSize == ( - 1L ) ) { return false ; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer . getMapConfig () . getMaxSizeConfig () ; final int maxSize = com.hazelcast.map.impl.eviction.MaxSizeChecker . getApproximateMaxSize ( maxSizeConfig . getSize () ) ; final long total = getTotalMemory () ; return maxSize < ( ( ( 1.0 * ( com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT ) ) * usedHeapSize ) / total ) ; }
{ java.lang.String [] tagArray = new java.lang.String [] { "example_tag" } ; boolean success = com.appoxee.Appoxee . addTagsToDevice ( new gigigo.com.orchextrasdk.ArrayList < java.lang.String > ( gigigo.com.orchextrasdk.Arrays . asList ( tagArray ) ) ) ; gigigo.com.orchextrasdk.ArrayList < java.lang.String > tags = com.appoxee.Appoxee . getTagList () ; android.util.Log . d ( gigigo.com.orchextrasdk.MainActivity.TAG , ( "tags list: " + tags ) ) ; }
{ int p = 0 ; for ( java.util.Iterator iter = tasks . iterator () ; iter . hasNext () ; ) { net.sf.memoranda.Task e = iter . next () ; p += e . getProgress () ; } return p / ( tasks . size () ) ; }
while ( ( xDim * ( yDim - 1 ) ) > elements ) { yDim -- ; }
if ( ( this . getPriority () ) == ( compNode . getPriority () ) ) { return this . getPriority () ; } else { int n1 = this . getNode () . getNodeNumber () ; int n2 = compNode . getNode () . getNodeNumber () ; return n2 - n1 ; }
{ double prev = utilSpace . getUtility ( bids . get ( 0 ) ) ; double average = 0 ; for ( int i = 1 ; i < ( bids . size () ) ; i ++ ) { double curr = utilSpace . getUtility ( bids . get ( i ) ) ; average += curr - prev ; prev = curr ; } return average / ( bids . size () ) ; }
if ( ! ( elementsToSort >= altSortThreshold ) ) { edu.mit.ita.util.Arrays . mergeSort ( seq , auxSeq , lo , hi ) ; } else edu.mit.ita.util.Arrays . mergeSort ( seq , auxSeq , lo , hi ) ;
for ( int i = 0 ; i < ( m_nFets ) ; i ++ ) { double fet = row . getFeature ( i ) ; norm += fet * fet ; }
public void causeDamage ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDef =Damage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDef )Damage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; if ( ! ( DamageType.BASIC_DAMAGE ) ) { damage = amount ; } causeRawDamage ( damage ) ; }
public java.lang.String getExtension ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; }
{ int indice = - 1 ; int indice = - 1 ; if ( indice == ( - 1 ) ) { return; } int indice = - 1 ; if ( indice == ( - 1 ) ) { if ( ( poche ) != null ) { indice = ( ( poche ) + ( poche ) . get ( indice ) . ajoutQte ( qte ) . ajoutQte ( qte ) ) . ajoutQte ( qte ) ; } } }
android.util.Log . i ( logMessage )
{ java.sql.Statement stmt = conn . createStatement () ; boolean success = stmt . execute ( ( ( ( ( "insert into TTEDB.Users (UserName, UserPW) values ('" + username ) + "', '" ) + password ) + "')" ) ) ; stmt . close () ; stmt . close () ; return success ; }
shouldWithateToPassives = true
{ float result = data [ getIndex ] ; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; return result ; }
{ int numTimesCalled = 0 ; if ( ( event . getError () ) != null ) { throw new java.lang.RuntimeException ( event . getError () ) ; } if ( ( event . getRows () . getCount () ) == 2 ) { countDownLatch . countDown () ; } }
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageutil.util.Map . put ( languageName . get ( languageName ) . get ( languageName ) ) ; int language {InTenMins = tenMinLanguageMap . get ( languageName ) ; } } } }
{ final boolean success = onMessage ( connection . in () , connection . out () ) ; codeu.chat.server.Server.LOG . info ( "Connection handled: %s" , ( success ? "ACCEPTED" : "REJECTED" ) ) ; }
public void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; }
{ android.database.Cursor cursor = buildCount () ; if ( cursor == null ) { throw new java.lang.IllegalAccessException ( "result has been cosumed, please do a query again." ) ; } int count = 0 ; if ( cursor . moveToFirst () ) count = cursor . getInt ( 1 ) ; return count ; }
duration = ( 100 - 1 ) + 1
{ this . port = port ; try { serverSocket = new java.net.DatagramSocket ( port ) ; byte [] receiveData = new byte [ 1024 ] ; java.lang.System.out . println ( ( "Starting on port " + port ) ) ; on = true ; run ( receiveData ) ; } catch ( java.net.SocketException e ) { e . printStackTrace () ; } }
{ initServletContextObject () ; com.tu.accountingview.model.GroupActVO groupactVO = new com.tu.accountingview.model.GroupActVO () ; int oneactId = java.lang.Integer . parseInt ( request . getParameter ( "actId" ) ) ; groupactVO = newviewBean . doGetAllValidateDetails ( oneactId ) ; request . setAttribute ( "act" , groupactVO ) ; return "ShowValidateDetails" ; }
if ( firstPos >= 0 ) { return postsIds . get ( mGridView . getFirstVisiblePosition () ) ; } else { return 0 ; }
for ( ; i < ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ; i ++ ) { if ( ( courses [ i ] ) != null ) { return false ; } }
public static org.jfree.data.xy.XYSeriesCollection createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api. max.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; }
{ flag = false ; foo . set ( x , y ) ; }
{ a . hit ( damage ) ; checkActor ( a ) ; }
( bs <= 0 ) ? bs : bs
{ resources.noteblock.Song generate = Noteblock.iPodSongs . get ( resources.NumberUtils . randomNumber ( size ) ) ; if ( ! ( theweekend.cosmetics.ipod.Radio. . contains ( generate ) ) ) { resources.noteblock.Song generate = Noteblock.iPodSongs . get ( resources.NumberUtils . randomNumber ( size ) ) ; } }
{ grid [ n ] [ j ] . setNumber ( i ) ; break; }
index = 1
if ( ( ! preEndGame ) && ( ! ( fallingAnimationMutex ) ) ) { FallingAnimation () ; }
if ( ( userInput < min ) || ( userInput > max ) ) { userInput = getInt ( min , max ) ; } else { java.lang.System.out . println ( "Invalid input" ) ; }
private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } }
{ int idx = ( base ) + ( columns . simpleIdx ( column ) ) ; if ( idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + ( column.name ) ) + " in " ) + ( columns ) ) ) ; data . setCell ( idx , value , info ) ; }
{ if ( c == '#' ) { processComment () ; } else if ( c == '\n' ) { ( lineNumber ) ++ ; } }
imageService . getLacDataForGene ( 1 )
increment ( selectedRows , ( - 1 ) )
for ( org.springframework.boot.loader.archive.Archive.Entry entry : archive . getEntries () ) { useBoot14Layout = true ; break; }
{ frequencyDays = daysBitString ; int today = ( calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; java.lang.System.out . println ( daysBitString ) ; if ( frequencyDays . substring ( today , ( today + 1 ) ) . equals ( "1" ) ) { isToday = true ; } else { isToday = false ; } }
{ java.io.File repository = ( ( java.io.File ) ( java.io.File ) ) ; org.edagarli.framework.helper.UploadHelper.servlet t = new org.apache.commons.fileupload.servlet.Servlet = ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD , repository ) ) ; int uploadLimit = org.edagarli.framework.helper.ConfigHelper . getAppUploadLimit () ; if ( uploadLimit != 0 ) { org.edagarli.framework.helper.UploadHelper.servlet t . setFileSizeMax ( ( ( uploadLimit * 1024 ) * 1024 ) ) ; } }
{ int state ; boolean userExist ; boolean active ; userExist = database . usernameExist ( username ) ; active = database . getActive ( username ) ; if ( userExist && active ) { database . userActive ( username , false ) ; state = 1 ; } else { state = 0 ; } return state ; }
{ SimpleDotCom hans = new SimpleDotCom () ; ReadyBakeInput inny = new ReadyBakeInput () ; boolean isAlive = true ; java.lang.String result = hans . checkYourself ( playerGuess ) ; if ( result == "kill" ) { java.lang.System.out . println ( result ) ; java.lang.System.out . println ( "Now, hans must run!" ) ; java.lang.System.out . println ( "Now, hans must run!" ) ; } }
{ int expectedSum = ( ( ( A.length ) + 1 ) * ( ( A.length ) + 2 ) ) / 2 ; int realSum = 0 ; for ( int i : A ) { realSum += i ; } return expectedSum - realSum ; }
{ int tempPos = ( pos ) + 1 ; if ( ( tempPos + 1 ) >= ( input . length () ) ) return false ; char c = input . charAt ( tempPos ) ; while ( isPos >= ( input . length () ) ) return false ; c = input . charAt ( tempPos ) ; }
{ rows [ i ] = ( ( java.lang.Integer ) ( mainTable_ . getValueAt ( mainTable_ . convertRowIndexToModel ( i ) , 0 ) ) ) ; }
private void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < ?.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { entries . add ( order ) ; } else { entries . add ( order ) ; sideBook . put ( price , entries ) ; } }
{ if ( it . next () . getRoomId () . equals ( roomId ) ) { cancelThreadTaskByFuture ( countThreadFutureList . get ( index ) . getF. () ) ; countThreadFutureList . remove ( index ) ; } index ++ ; }
void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { if ( params == null ) { return; } try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; java.lang.System.out . println ( java.lang.Integer . toString ( params . getBoolean ( "isOpenMessage :aming" ) ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessagePlugin.mCallback = callback ; }
out . write ( ( buffer + 1 ) , 0 , com.github.checkstyle.appUtils.BUFFER_SIZE )
sf = new java.lang.String ( 1 )
public void pushUp () { int i = size () ; while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } }
{ v . setOnClickListener ( null ) ; java.lang.String num = ev . getText () . toString () . trim () ; if ( ( num == null ) || ( "" . equals ( num ) ) ) return; double n = parseDouble ( num ) ; setText ( inIntTermsOfAny ( ( n / ( currentValue ) ) ) , ev ) ; v . setVisibility ( View.GONE ) ; }
{ android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( mContext . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo activeNetwork = cm . getActiveNetworkInfo () ; boolean isConnected = ( activeNetwork != null ) && ( activeNetwork . isConnectedOrConnecting () ) ; if ( isConnected || isWiFi ) { showProgressDialogue () ; } else { android.widget.Toast . makeText ( mContext , mContext . getString ( R.string.toast_no_internet_connection ) , Toast.LENGTH_SHORT ) . show () ; } }
if ( ! ( adjust > 0 ) ) indentLevel = getPrefs () . getIndentationSize () ; else if ( adjust < 0 ) indentLevel = indentLevel - ( getPrefs () . getIndentationSize () ) ;
{ java.lang.String rID = "1" ; edu.vt.ece file4.agents.User oUsr = new edu.vt.ece.4.agents.User ( sim , rID , bID , true , 1 , 1 ) ; sim . addAgent ( oUsr ) ; double initial_x = oUsr . getX () ; double initial_y = oUsr . getY () ; oUsr . createRandomMovement ( sim ) ; assertFalse ( ( ( ( oUsr . getX () ) == initial_x ) && ( ( oUsr . getY () ) == initial_y ) ) ) ; }
{ int strokeColor = ( circle . getStrokeColor () ) ^ 52224 ; circle . setStrokeColor ( strokeColor ) ; circle . setStrokeWidth ( ( ( circle . getStrokeWidth () ) == 3 ? 6 : 3 ) ) ; }
{ int count = this . getCount () ; if ( count == 0 ) { throw new cfvbaibai.cardfantasy.CardFantasyRuntimeException ( "Cannot get square setup on empty data set." ) ; } double s = 0.0 ; double avg = this . getAverage () ; for ( double data : this . dataList ) { s += ( data - avg ) * ( data - avg ) ; } return ( java.lang.Math . sqrt ( ( s / count ) ) ) / avg ; }
{ java.lang.System.out . println ( digilib.image.ImageJobDescription.logger . debug ( "get_scaleQual()" ) ) ; int qual = dlConfig . getAsInt ( "default-quality" ) ; if ( hasOption ( "q0" ) ) qual = 0 ; else if ( hasOption ( "q1" ) ) qual = 1 ; else if ( hasOption ( "q2" ) ) qual = 2 ; return qual ; }
{ super . onResume () ; int orderId = getIntent () . getIntExtra ( OrderStatusNotification.ORDER_ID , ( - 1 ) ) ; java.lang.System.out . println ( ( "Intent with order ID " + orderId ) ) ; if ( orderId != ( - 1 ) ) navTo ( new activity.OrderDetailFragment () . setOrder ( new model.Order ( orderId ) ) ) ; }
if ( ( ( m_c ) == null ) || ( m_c . isClosed () ) ) { try { connect () ; } catch ( java.sql.SQLException e ) { if ( ( ( m_c ) == null ) || ( m_c . isClosed () ) ) { connect () ; } } }
{ int index = 1 ; for ( java.lang.Object o : valueList ) { try { stmt . setObject ( ( index ++ ) , o ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( ( ( ( ( ( e . getMessage () ) + " - Index: " ) + index ) + ", Value: " ) + o ) + ", Query: " ) + sql ) , e ) ; } } }
end = ( lessBooks . size () ) > 0
{ char [] password = new char [ 0 ] ; java.lang.System.out . print ( "Password: " ) ; final jline.console.ConsoleReader reader = new jline.console.ConsoleReader () ; final java.lang.String passwordStr = reader . readLine ( '*' ) ; password = passwordStr . toCharArray () ; password = null ; java.lang.System . gc () ; return password ; }
private boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; }
{ float oldValue = value ; if ( add ) { value = java.lang.Math . min ( maxValue , ( ( value ) + ( step ) ) ) ; } else { value = java.lang.Math . max ( minValue , ( ( value ) - ( step ) ) ) ; } if ( ( onValueChangedListener ) != null ) { onValueChangedListener . onValueChanged ( this , value , oldValue , minValue , maxValue , false ) ; } }
{ java.util.Random rand = new java.util.Random () ; int comPick = ( rand . nextInt ( 3 ) ) + 1 ; if ( ! ( com.bleh.Main . resultsL () ) ) { com.bleh.Main . resultsL () ; } else { com.bleh.Main . resultsL () ; } else if ( comPick == 2 ) { java.lang.System.out . println ( "I android and you void scissors...I guess you win :(" ) ; com.bleh.Main . resultsT () ; } else { com.bleh.Main . play () ; } }
{ q . setDiscount ( ( 1 - ( q . getThreeYearTotal () ) ) ) ; java.lang.System.out . println ( ( "Ordenado: " + ( q . getThreeYearTotal () ) ) ) ; }
{ java.lang.String [] dictionary = GuiMain.index . getDictionary () ; int count = GuiMain.index . getTermCount () ; java.lang.String vocab = "Index 1: \n" ; for ( java.lang.String s : dictionary ) { vocab += s + "\n" ; } vocab += "Index + count ; return vocab ; }
java.lang.System.out . println ( "\nPlease select the note you want to vote for java.lang.Long 7." )
if ( j . isDoorway () ) { ++ door ; }
index = ( randomNumber ) % ( conflicts . size () )
{ difference = - ( computerBuilders ) ; computerBuilders = 0 ; }
if ( ( isAnyLimitSwitchClosed () ) || ( ( java.lang.Math . abs ( y ) ) < ( k_minJoystickValue ) ) ) { stopMotor () ; } else if ( ( java.lang.Math . abs ( y ) ) > ( k_minJoystickValue ) ) { startMotor () ; m_mainMotor . set ( y ) ; }
{ java.lang.String s = e . toString () ; int i = 0 ; for ( java.lang.StackTraceElement er : e . getStackTrace () ) { if ( i == lines ) { break; } s += "\n\tat " + ( er . toString () ) ; } }
{ int fromPosition = mItems . indexOf ( item ) ; java.util.Collections . swap ( mItems , fromPosition , toPosition ) ; com.github.gfranks.dynamiccard.adapter.DynamicCardAdapter . notifyItemMoved ( fromPosition , toPosition ) ; if ( ( mCallback ) != null ) { mCallback . onDynamicCardPositionChanged ( this , fromPosition , toPosition ) ; } }
{ os . writeLong ( timestamp ) ; os . write ( stringBytes.length ) ; os . writeInt ( ( - 1 ) ) ; os . writeInt ( (ord ) + 1 ) ; }
void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { int range = r - l ; if ( range > 0 ) { int m = l + ( range / 2 ) ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } }
{ final int takeFlags = ( data . getFlags () ) & ( ( android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION ) | ( android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION ) ) ; getContentResolver () . takePersistableUriPermission ( data . getData () , takeFlags ) ; fileEditText . setText ( data . getDataString () ) ; }
return 0 ;
if ( o instanceof java.lang.Integer ) { java.lang.Number n = ( ( java.lang.Number ) ( o ) ) ; int index = n . intValue () ; return ( ( index > 0 ) && ( index < ( selectedIndices . length () ) ) ) && ( selectedIndices . get ( index ) ) ; }
private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / ( ( milliseconds / 3600000 ) % 24 )00000 ; setText ( text ) ; }
private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; }
{ int value = inputStream . read () ; result.atNewLine = isNewLine ( value ) ; while ( ( value = inputStream . read () ) != ( - 1 ) ) { if ( isNewLine ( value ) ) { ( result.lineNumber ) -- ; } } return result ; }
{ tagName = tagName . toLowerCase () ; boolean usesAttributes = ! ( ( ( tagName . equals ( "cfset" ) ) || ( tagName . equals ( "cfif" ) ) ) || ( tagName . equals ( "cfelseif" ) ) ) ; return usesAttributes ; }
{ java.util.Random rand = new java.util.Random () ; int monsterCurrentHp = enemy . getHp () ; int r = rand . nextInt ( ( ( 5 + ( enemy . getAgility () ) ) - ( getAgility () ) ) ) ; if ( r <= 3 ) { setMissed ( false ) ; enemy . damage ( power ) ; setPreviousAttackDamage ( ( monsterCurrentHp - ( enemy . getHp () ) ) ) ; } else { setMissed ( true ) ; } return previousAttackDamage ; }
{ boolean canJoin = true ; if ( canJoin && ( channel != ( client . getChannel () ) ) ) { client . setChannel ( channel ) ; channel . addClient ( client ) ; } else {} }
if ( z < ( zMin ) ) zMin = z ;
{ if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar cityío" ) ; java.lang.String insertBody = putBody ( values ) ; int r = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; this . close () ; java.lang.System.out . println ( ( "Rows affected: " + r ) ) ; }
{ java.lang.String zoomRes = sendRequest ( buildPanTiltHeadControlURL ( "%23GZ" ) ) ; if ( zoomRes . startsWith ( "gz" ) ) { int zoom = java.lang.Integer . parseInt ( zoomRes . substring ( 2 , 5 ) , 16 ) ; lastKnown . setZoom ( zoom ) ; return zoom ; } else { throw new java.io.IOException ( ( ( errorString ) + zoomRes ) ) ; } }
long planeSize = loci.formats.FormatTools . getPlaneSize ( this ) ;
getSlotFromIndex ( slot , index )
( ( scale * curFrequency ) * x ) - ( ( scale * curFrequency ) * y )
return wBFS . distTo ( common ) ;
{ int id = getNextFreeFileID () ; de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile file = new de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile () ; file.path = f . getPath () ; file.timestamp = f . lastModified () ; file.references = 1 ; }
{ float [] matrix = new float [ 16 ] ; mSurfaceTexture . getTransformMatrix ( matrix ) ; mEffect . setTextureTransformMatrix ( matrix ) ; int textureId = mEffect . draw ( mSurfaceTextureId ) ; mRendererScreen . draw ( textureId , mCubeBuffer , mTextureBuffer ) ; }
if ( beaconLinks . containsKey ( getGameMgr () . getGame ( team ) ) ) { for ( com.wasteofplastic.beaconz.BeaconLink pair : beaconLinks . get ( getGameMgr () . getGame ( team ) ) ) { if ( pair . getOwner () . equals ( team ) ) { result ++ ; } } }
private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = mean ( array ) ; double sumOfDiffTo;Sq = 0 ; double length = array . size () ; for ( double i : array ) { double diffTovSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffTo;Sq += diffTovSq ; } double meanOfDiffs = sumOfDiffTo;Sq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; }
{ int id = item . getItemId () ; if ( id == ( R.id.action_filter ) ) { com.aftersapp.fragments.FilterFragment filterFragment = new com.aftersapp.fragments.FilterFragment () ; getFragmentManager () . beginTransaction () . replace ( R.id.fragment_frame_lay , filterFragment , "FilterFragment" ) . commit () ; return true ; } return super . onOptionsItemSelected ( item ) ; }
new android.widget.SimpleCursorAdapter ( activity , themed_item )
{ double latitude ; double longitude ; java.lang.String title ; int type_id ; values . clear () ; mMap . clear () ; cursor = getActivity () . getContentResolver () . query ( EcoMapContract.ProblemsEntry.CONTENT_URI , null , null , null , null , null ) ; while ( cursor . moveToNext () ) { org.ecomap.android.app.Problem p = new org.ecomap.android.app.Problem ( cursor , getActivity () ) ; values . add ( p ) ; } cursor . close () ; setUpClusterer () ; }
@ java.lang.Override public void onResponse ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > "" = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( "" ) ) ; }
resultCount = false ;
private long _daysLate ( com.born2go.lazzybee.db.Card card ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = card . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; }
lastOut += given
public char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; }
{ int count = swipeListView . getAdapter () . getCount () ; for ( int i = 0 ; i < count ; i ++ ) { opened . add ( false ) ; openedRight . add ( false ) ; checked . add ( false ) ; } }
{ double wRatio = ( 1 * ( this . width ) ) / width ; double hRatio = ( 1 * ( this . height ) ) / height ; return hRatio < wRatio ? new ui.Resizer.Size ( ( ( int ) ( width * hRatio ) ) , ( ( int ) ( height * hRatio ) ) ) : new ui.Resizer.Size ( ( ( int ) ( width ) ) , ( ( int ) ( height * wRatio ) ) ) ; }
switch ( choice ) { case 'P' : this . startPickUpTNT () ; break; case 'D' : this . startDropTNT () ; break; case 'U' : this . startUseTNT () ; break; case 'B' : return true ; default: this . console . println ( "\n*** Invalid selection*** Try again" ) ; break; }
@ java.lang.Override public void run () { int readCount = socketChannel . read ( input ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; } selectionKey . attach ( new com.flyer.netty.reactor.third.ThirdHandler.Sender () ) ; selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; }
{ double [] gen = new double [ xp.length ] ; double [] gradient = new double [ i ] ; double [] diffY = new double [ xp.length ] ; double sumDiff = calcGradient ( true ) ; java.lang.System.out . println ( ( " diff=" + sumDiff ) ) ; return sumDiff ; }
if ( tagNames . containsKey ( tagName ) ) { id = tagNames . size () ; tagNames . put ( tagName , id ) ; } else { id = tagNames . get ( tagName ) ; }
return nameIsPresent || bodyIsPresent ;
{ int identifier = net.tridentsdk.server.packet.PacketRegistry . shift ( state , bound , id ) ; net.tridentsdk.server.packet.PacketRegistry.PACKETS . put ( cls , identifier ) ; net.tridentsdk.server.packet.PacketRegistry.PACKET_IDS . put ( identifier , cls ) ; if ( bound == ( net.tridentsdk.server.packet.Packet.Bound.SERVER ) ) { net.tridentsdk.server.packet.PacketRegistry.CTORS . put ( cls , com.esotericsoftware.reflectasm.ConstructorAccess . get ( cls ) ) ; } }
private double average ( java.util.Date [] dates , double [] is , int skip , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = skip ; ii < ( is.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; sum += 0 ; } return sum / count ; }
setElements ( texts . toArray ( new java.lang.String [ size ] ) , selected )
data != null
{ int positionX = ( ( int ) ( java.lang.Math . round ( ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_WIDTH ) + 1 ) * ( java.lang.Math . random () ) ) ) ) ) ; int positionY = ( ( int ) ( java.lang.Math . round ( ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_HEIGHT ) + 1 ) * ( java.lang.Math . random () ) ) ) ) ) ; zeroPlayerGamePackage.PositionObject position = new zeroPlayerGamePackage.PositionObject ( positionX , positionY ) ; return position ; }
{ boolean nextDate = false ; int min = dateToMin ( date , "00:00" , nextDate ) ; while ( min < ( bots.CalendarBot.CalDateFormat . minToWeekday ( min , firstYear ) ) ) { min ++ ; } while ( min < ( bots.CalendarBot.CurrentDate . getDateInMin ( firstYear ) ) ) ; return min + ( 8 ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int permission = android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.WRITE_EXTERNAL_STORAGE ) ; if ( permission != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , com.example.q ).featuredetection.SplashActivity.PERMISSIONS_STORAGE , com.example.q =.featuredetection.SplashActivity.REQUEST_EXTERNAL_STORAGE ) ; com.example.q =.featuredetection.SplashActivity.Loader loader = new com.example.q.featuredetection.SplashActivity.Loader () ; loader . execute ( this ) ; } }
monthsFromStartOfContract = new websays.core.utils.JodaUtils . months ( commissionnee , fee , this , bi ) ;
{ int totalProtection = getProtection () ; if ( ( ( getAnchorPoints () . get ( "body" ) ) != null ) && ( ( getAnchorPoints () . get ( "body" ) . getClass () ) == ( game.Armor . class ) ) ) { game.Armor armor = ( ( game.Armor ) ( getAnchorPoints () . get ( "body" ) ) ) ; totalProtection += armor . getActualProtection () ; } return totalProtection ; }
{ int timeLeft = ( ( int ) ( ( money ) * 4 ) ) ; int seconds = timeLeft * 60 ; for ( int i = seconds ; i > 0 ; i -- ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException ex ) {} } java.lang.System.out . println ( ( ( ( "\nCustomer " + ( name ) ) + " has finished their service at " ) + ( getTime () ) ) ) ; }
{ java.util.Set < java.lang.Character > set = new java.util.HashSet <> () ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { int previousSize = set . size () ; set . add ( string . charAt ( i ) ) ; if ( ( set . size () ) == previousSize ) { return false ; } } return true ; }
{ int index = the_index ; do { if ( ( my_System_audit_cvrs . get ( index ) ) == ( java.lang.Long.MIN_VALUE ) ) { my_cvr_under_audit = index ; break; } index = index + 1 ; } while ( index < ( my_ ._audit_cvrs . size () ) ) ; }
{ oprationRowNum = x ; break; }
while ( ( currentItem % ( getRealCount () ) ) == 0 ) { currentItem ++ ; }
{ double rot = collidableObjectPosition . getAxisAngle () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d center = collidableObjectPosition . getCenter () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d [] worldCoords = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . generateWorldCoords ( collidableObjectPosition ) ; hu.oe.nik.szfmv17t.environment.utils.Vector2d [] content = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . rotateWorldCoords ( rot , center , worldCoords ) ; return null ; }
intent . putExtra ( "position" , itemPosition )
public final int readCharacter ( final char . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; }
private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
public boolean isOn () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; }
switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: retval = super . onOptionsItemSelected ( item ) ; }
{ java.lang.System.out . println ( ( "No response from client with Snake ID of " + ( snake . getId () ) ) ) ; java.lang.System.out . println ( ( ( MainServer.currentSnakeManagerInstance . getClients () . size () ) + " snakes remaining" ) ) ; isLive = false ; closeConnection () ; snakeManager . getClients () . remove ( this ) ; }
{ return ( ( ( " just found " + ( url . toString () ) ) + " in " ) + ( set . toString () ) ) ; }
{ if ( ( array.length ) > 0 ) { if ( k == 0 ) return - 1 ; else { int i = project2.NonInitiator . randRange ( 0 , k ) ; return array [ i ] ; } } return - 1 ; }
public int getPlayerRank () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; }
{ final int starDrawable = ( ! star ) ? R.drawable.ic_star_selected : R.drawable.ic_star_unselected ; starView . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( getActivity () . getApplicationContext () , starDrawable ) ) ; bundle . putBoolean ( Constants.STAR , ( ! star ) ) ; onCreateView ( inflater , container , savedInstanceState ) ; }
toHexString ( response , response )
{ java.lang.String year = date . substring ( 0 , 4 ) ; java.lang.String month = date . substring ( 5 , 7 ) ; java.lang.String day = date . substring ( 8 , 10 ) ; long timeInMilliSec = new java.util.GregorianCalendar ( java.lang.Integer . parseInt ( year ) , ( ( java.lang.Integer . parseInt ( month ) ) - 1 ) , java.lang.Integer . parseInt ( day ) ) . getTimeInMillis () ; return new java.sql.Date ( timeInMilliSec ) ; }
reset ( fileName , page )
( int ) ( ( sum - ( curSum ) ) * 100 )
{ com.pce.domain.dto.PukGroupForPukDto pukGroupDto = ( ( com.pce.domain.dto.PukGroupForPukDto ) ( target ) ) ; long pukGroupId = pukGroupDto . getPukGroupId () ; java.util.Optional < com.pce.domain.PukGroup > pukGroupById = pukGroup . getPukGroupById ( pukGroupId ) ; if ( ! ( pukGroupById . isPresent () ) ) { errors . rejectValue ( "pukGroupId" , "pukGroup.not.exists" , ( ( "Puk Group " + pukGroupId ) + " is not exists in the system, please select different one" ) ) ; } }
{ for ( int i = 0 ; i < 1024 ; i ++ ) re [ i ] = data [ i ] ; sign = - 1 ; cafe.analysis.cafe.analysis.FFT . name ( re , im , 10 , sign ) ; double [] temp1 = cafe.analysis.cafe.analysis.FFT . get_theta () ; return temp1 ; }
( docid >= 0 )
public void updateMenuItemAction ( ) throws com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () ) { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageManager != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( language + 1 ) ) ; } } }
public static int S ( double t ) { int count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count != ( - 1 ) ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; int newCount = ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } }
for ( int i = 0 ; i < ( Config.WORLD_ROWS ) ; i ++ ) { done = GameOfLife . initializeCustomRow ( input , i , world ) ; }
@ java.lang.Override protected void initiateAutomaticSync () { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; }
{ ret += ( visit ( ctx . small_stmt ( i ) ) ) + "\n" ; }
{ final boolean isBrowserAvailable = ( _browser ) != null ; _dashboard_PageBook . showPage ( ( isBrowserAvailable ? _dashboardPage_WithBrowser : _dashboardPage_NoBrowser ) ) ; if ( ! isBrowserAvailable ) { return; } final java.lang.String html = createHTML () ; _isBrowserCompleted = false ; _browser . setText ( html ) ; }
if ( ( pieces [ i ] [ j ] ) != ( goalValueAt ( i , j ) ) ) { count ++ ; }
randomPos = ( int ) ( ( java.lang.Math . random () ) * ( topCard ) )
{ for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { b = value . byteAt ( i ) ; if ( ( b & ( org.opends.server.plugins.SevenBitCleanPlugin.MASK ) ) != b ) { return false ; } } return true ; }
{ com.mongodb.MongoClientURI mongoUri = new com.mongodb.MongoClientURI ( tasks.CallEvacuationTask.DBAdress ) ; com.mongodb.MongoClient mongoClient = new com.mongodb.MongoClient ( mongoUri ) ; com.mongodb.client.MongoDatabase db = mongoClient . getDatabase ( mongoUri . getDatabase () ) ; com.mongodb.client.MongoCollection < com.mongodb.BasicDBObject > dbCollection = db . getCollection ( tasks.CallEvacuationTask.collectionName , com.mongodb.BasicDBObject . class ) ; boolean result = updateEvac ( dbCollection , params [ 1 ] , params [ 0 ] ) ; return result ; }
( ( menu . get ( tempIndex ) . price ) >= ( this . price ) ) && ( ( this . index ) < ( this . menuSize ) )
{ final java.lang.String fullBundleName = getFullBundleName ( filesInResourceBundle ) ; final java.lang.String extension = getFileExtensions () [ 0 ] ; for ( java.lang.String languageCode : requiredTranslations ) { final java.lang.String translationFileName = ( ( fullBundleName + '_' ) + languageCode ) + extension ; final boolean missing = com.puppycrawl.tools.checkstyle.checks.TranslationCheck . isMissing ( translationFileName , filesInResourceBundle ) ; if ( missing ) { final java.lang.String missingTranslationFileName = formMissingTranslationName ( fullBundleName , languageCode ) ; logMissingTranslation ( missingTranslationFileName ) ; } } }
public void register ( org.bukkit.entity.Player player ) throws java.lang.Exception { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; if ( ( playerInfo ) != null ) { playerInfo . setTextoteOrPromote ( toLevel ) ; this . _ getContextPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } }
private data.Vector calculatevPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += dataSet . size () ; } return new data.Vector ( meanPoint ) ; }
{ int [] getInstance = getNumberPair ( "Please enter the new dimensions?" ) ; for ( int i = 0 ; i < ( tilemap . getLayerCount () ) ; i ++ ) { tilemap . getLayer ( i ) . resize ( ( i + 1 ) ) ; } }
{ double score = 0 ; double intensity = getIntensity ( node ) ; if ( map . containsKey ( node . getLemma () ) ) { score = map . get ( node . getLemma () ) ; } sentimentAnalysis.ScoreNode sNode = new sentimentAnalysis.ScoreNode ( node . getLemma () , score , intensity ) ; depScoreMap . put ( node , sNode ) ; return sNode ; }
{ int selected = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) . getCheckedRadioButtonId () ; if ( selected == ( R.id.createMatchRadioButtonJunior ) ) { radioGroupLevelSelection = 1 ; } else if ( selected == ( R.id.createMatchRadioButtonSenior ) ) { radioGroupLevelSelection = 2 ; } filterAndRefresh () ; }
private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; }
java.lang.String bonus = 0 ;
( rpNonVplexSourceVolume || addJournalVolume ) || notAlreadyInTaskList
{ for ( net.decix.jipfix.header.OptionTemplateRecord optionTemplate : optionTemplateRecords ) { for ( net.decix.jipfix.header.OptionTemplateRecord optionTemplate : optionTemplateRecords ) { if ( optionTemplate != null ) { for ( net.decix.jipfix.header.DataRecord record : dataRecords ) { if ( ( record . getLength () ) == ( net.decix.jipfix.header.SetHeader.HEADERLENGTH ) ) { this . length = 1 ; } this . length = 1 ; } } this . length = 1 ; } } }
org.powertac.tournament.beans.Round . getRoundFromId ( roundId , false )
{ if ( ! needToReconcile = needToReconcile ( services , units , planner ) ; if ( ! needToReconcile ) { return; } if ( ! needToReconcile ) { return; } if ( ! needToReconcile = needToReconcile ( services , units , planner ) ; if ( ! needToReconcile ) { return; } activateServices ( service , services ) ; activateDeploymentUnits ( services , units , planner ) ; }
{ if ( currentFragment instanceof org.droidplanner.android.activities.ConfigurationActivity.ConfigurationScreen ) { ( ( org.droidplanner.android.activities.ConfigurationActivity.ConfigurationScreen ) ( currentFragment ) ) . onConfigurationReplaced () ; } mConfigScreenId = configScreenId ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.configuration_screen , getFragmentForId ( configScreenId ) ) . commit () ; }
{ char letter = 'a' ; int a ; final int MIN = 65 ; final int MAX = 122 ; final int meLINE1 = 85 ; final int arrayLINE2 = 122 ; for ( a = MIN ; a <= MAX ; a ++ ) letter = ( ( char ) ( a ) ) ; java.lang.System.out . print ( ( " " + letter ) ) ; if ( ( a == false ) || ( a == false ) ) java.lang.System.out . println () ; java.lang.System.out . println ( "\nEnd of application" ) ; }
@ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } return strSource ; }
configChanged = ( this . propsHashCode ) != currentConfigHash
{ bean.ConnectionProvider provider = new bean.ConnectionProvider () ; con = provider . getCon () ; stmt = con . createStatement () ; java.lang.String query = ( "Select * from employee where + email=\"" + email ) + "\"" ; java.lang.System.out . println ( query ) ; java.sql.ResultSet rs = stmt . executeQuery ( query ) ; status = rs . next () ; }
{ java.lang.System.out . println ( java.lang.Math . abs ( new int [ 1 ] ) ) ; int [] for ( int i = 0 ; i < ( lock . size () ) ; i ++ ) { V value = lock . get ( i ) ; return lock . compareAndSet ( expected , expected ) ; } else { return null ; } }
{ java.lang.String item = "%d %d 0" ; long curTime = java.lang.System . currentTimeMillis () ; records . add ( java.lang.String . format ( item , curTime , e . getKeyCode () ) ) ; java.lang.System.out . println ( ( ( e . getKeyChar () ) + " 0" ) ) ; }
{ int hash = 7 ; hash = ( ( java.util.Objects . hashCode ( this . topLeft ) ) + ( java.util.Objects . hashCode ( this . topLeft ) ) ) + ( java.util.Objects . hashCode ( this . bottomRight ) ) ; return hash ; }
{ do { map_end_test_all = ( map_test_item ) ; not_end_test_all = ( map_test_item ) ; if ( not_end_test_all ) { if ( not_end_test_all ) { return null ; } } else { if ( not_end_test_all ) { } else { return fec_test_items_order [ map . test ; } } return map ; } }
( int ) ( ( key . get () ) / intervalLength )
private java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; if ( arg == null ) { return null ; } else { return null ; } }
{ com.google.android.exoplayer.util.Assertions . checkState ( prepared ) ; com.google.android.exoplayer.util.Assertions . checkState ( ( ( enabledTrackCount ) > 0 ) ) ; positionUs = ( chunkSource . isLive () ) ? 0 : positionUs ; long currentPositionUs = ( isPendingReset () ) ? pendingResetPositionUs : downstreamPositionUs ; if ( currentPositionUs == positionUs ) { return; } seekToInternal ( positionUs ) ; }
protected android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
for ( final boolean checkedItem : checkedItems ) if ( checkedItem ) this . templateModel . addExcludeCol ( ( i ++ ) ) ;
{ boolean thrown = false ; try { result = this . databaseEngine . search ( "abc" ) ; } catch ( java.lang.Exception e ) { thrown = true ; } org.assertj.core.api.Assertions . assertThat ( ( ! thrown ) ) ; org.assertj.core.api.Assertions . assertThat ( result . equals ( "def" ) ) ; }
{ if ( flags == null ) flags = "" ; com.epam.indigo.IndigoObject [] parent = new com.epam.indigo.IndigoObject [] { obj1 , obj2 } ; int match = com.epam.indigo.Indigo . checkResult ( this , parent , com.epam.indigo.Indigo._lib . indigoExactMatch ( obj1.self , obj2.self , flags ) ) ; return match == 0 ; }
{ super . onScrollStateChanged ( recyclerView , newState ) ; int initialItemCount = mGridLayoutManager . findFirstCompletelyVisibleItemPosition () ; int totalItemCount = mGridLayoutManager . getItemCount () ; int lastVisisbleItemPosition = mGridLayoutManager . findLastCompletelyVisibleItemPosition () ; mInfiniteScrollListener . loadMoreData ( initialItemCount , totalItemCount , lastVisisbleItemPosition ) ; }
{ if ( ( drag ) && ( ! ( move ) ) ) { deselectAll () ; target . clear () ; int x = e . getX () ; int y = e . getY () ; for ( main.GObject go : gObjects ) { if ( go . c ( eX , eY , x , y ) ) { target . add ( go ) ; go . selected () ; } } repaint () ; } }
{ if ( memory == null ) { return null ; } word = memory [ i ] ; }
index > 0 ? index : questionAdapter . getCount ()
{ assert ( X ) == 2 ; java.lang.System.out . println ( ( ( ( "X = " + ( X ; [ 0 ] ) ) + "Y = " ) + ( X ; [ 1 ] ) ) ) ; int index = pointmap [ ( ( int ) ( ( ( X ) * ( Constants.WIDTH ) ) + ( X ; [ 0 ] ) ) ) ] ; double [] P = this . points . get ( index ) ; return P ; }
{ oldSum = sum ; n += 1.0F ; int n = 1 ; while ( oldSum < sum ) { oldSum = sum ; n += 1 ; sum += 1.0F ; } }
void addRequestTime ( java.util.Map < java.lang.String , java.lang.Object > map ) { if ( includeRequestTime ) { if ( requestTime > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } }
( this . table [ hashCode ] ) != ( this . table . length )
{ if ( v < 0 ) v = 0 ; else if ( v > 1 ) v = 1 ; float newy = v * ( ( getHeight () ) - ( h . getHeight () ) ) ; float y = ( - newy ) + ( getY () ) ; h . setPosition ( h . getX () , ( ( getY () ) + ( - y ) ) ) ; }
private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; }
new java.awt.geom.Point2D.Float ( maxVolume , 1.0F )
{ double diffX = x1 - px ; double diffY = y1 - py ; double dist = ( diffX * diffX ) + ( diffY * diffY ) ; if ( dist < ( radius * radius ) ) { return true ; } else { return false ; } }
{ android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connecting..." ) ; this . encoder . initEncoderWithUploader ( this ) ; if ( this . sConfig . isSSL ) this . trustServer () ; rc = this . connectBlocking () ; if ( ! rc ) { android.util.Log . e ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connection failed!" ) ; this . uploadPrepared = false ; throw new java.lang.Exception ( "Connection failed!" ) ; } }
public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) throws java.lang.Exception { com.lmax.disNodeor.RingBuffer < com.dtstack.logstash.s.disNodeor.MapEvent > ringBuffer = dis.or . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.s.disNodeor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } }
{ java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 1 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_CURIE } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } }
{ boolean isvalid = true ; try { java.util.List < java.lang.String > validCategoris = apiDAO . getValidPurchaseCategories () ; if ( ( validCategoris . size () ) > 0 ) { isvalid = false ; for ( java.lang.String category : validCategoris ) { if ( category . equalsIgnoreCase ( purchaseCategoryCode ) ) { isvalid = true ; break; } } } } catch ( java.lang.Exception e ) { throw e ; } return isvalid ; }
{ double [] fileName = num [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.NUM_OUTPUTS_WITH_NO_ACTION ; java.lang.System.out . println ( java.util.Arrays . toString ( outputs ) ) ; return ( outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_UP_INDEX ] ; modified / [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.RIGHT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_RIGHT_INDEX ] ; return fileName ; }
{ long idxUsagesBefore = indexUsages ( db ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > qResult = db . command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select * from foo where bar = 2 or name .a' and bar >= 0" ) ) . execute () ; assertEquals ( qResult . size () , 2 ) ; assertEquals ( indexUsages ( db ) , ( idxUsagesBefore + 2 ) ) ; }
{ float requiredInfluence = 60 ; java.util.List < amidst.map.EndIsland > islands = frag . getEndIslands () ; for ( amidst.map.EndIsland island : islands ) { float influence = island . influenceAtChunk ( chunkX , chunkZ ) ; if ( influence >= 0.0 ) { if ( influence >= requiredInfluence ) { return amidst.map.layers.EndCityLayer.ChunkProbability.Disely ; } } return amidst.map.layers.EndCityLayer.ChunkProbability.None ; } }
private static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } }
{ int i ; try { i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { resetPieces () ; resetButtons () ; resetBoard ( i ) ; resetFields ( i ) ; } }
{ super . onResume () ; isFirstScan = true ; registerReceiver ( mWifiScanReceiver , new android.content.IntentFilter ( android.net.wifi.WifiManager.SCAN_RESULTS_ACTION ) ) ; android.content.IntentFilter filter = new android.content.IntentFilter () ; filter . addAction ( WifiManager.NETWORK_STATE_CHANGED_ACTION ) ; filter . addAction ( ConnectivityManager.CONNECTIVITY_ACTION ) ; registerReceiver ( mWifiChangeReceiver , filter ) ; }
private double semestrialCorrection ( final double param ) { final int 1 ; final int true ; final int true ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - 1 ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - 1 ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; }
x < ( - 1 )
new org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result ()
{ timer . stop () ; if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { java.lang.System . exit ( 0 ) ; } else if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { super . dispose () ; } }
( prev - 1 )
{ boolean result = true ; for ( int i = 0 ; i < ( this . cricketScores . size () ) ; i ++ ) { if ( ( this . cricketScores . size () ) == 0 ) { return false ; } for ( int i = 0 ; i < ( this . cricketScores . keySet () ) ; i ++ ) { if ( ( this . cricketScores . get ( 0 ) ) != ( this . currentPlayer ) ) { return false ; } } } return result ; }
{ mCurrentLocation = location ; double latitude = mCurrentLocation . getLatitude () ; double longitude = mCurrentLocation . getLongitude () ; stationManager . updateLocation ( latitude , longitude ) ; route = stationManager . updateNexttation ( route ) ; if ( ( binding.estimateTime ) != null ) binding.destinationStation . setText ( ( ( latitude + " : " ) + longitude ) ) ; binding.estimateTime . setText ( ( ( ( ( " + ( this . desName ) ) + " " ) + " " ) + ( stationManager . updateTimeToArrive () ) ) ) ; }
switch ( requestCode ) { case net.lorenz ,coni.wwatcher.WWatcher.REQ_ENABLE_BT : boolean btEnabled = resultCode == ( RESULT_OK ) ; configureButton ( btEnabled , false ) ; break; case net.lorenz ,coni.wwatcher.WWatcher.REQ_PICK_DEV : if ( data != null ) { java.lang.String addr = data . getExtras () . getString ( "device" ) ; android.bluetooth.BluetoothDevice device = inqMap . get ( addr ) ; new net.lorenz (coni.wwatcher.WWatcher.BtConnect () . execute ( device ) ; } break; default: break; }
{ int nextVal ; while ( odometer.Odometer . isValid ( digit ) ) { nextVal = digit ++ ; if ( ( ( digit % 10 ) ^ ( size + 1 ) ) == 1 ) { nextVal = 1 ; } } return nextVal ; }
private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; }
{ int phoneId = getActivePhoneId () ; com.android.incallui.Log . d ( this , ( ( ( "onBlock mCallId:" + ( mCallId ) ) + "phoneId:" ) + phoneId ) ) ; com.android.incallui.Call call = mCall [ phoneId ] ; final java.lang.String number = call . getNumber () ; final android.content.Context context = getUi () . getContext () ; mBlockContactHelper = new com.android.contacts.common.util.BlockContactHelper ( context ) ; mBlockContactHelper . setContactInfo ( number ) ; }
private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorASet472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; }
{ byte [] decodedSecretKey = null ; try { decodedSecretKey = si.mazi.rescu.utils.Base64 . decode ( secretKey ) ; } catch ( java.io.IOException e ) { throw new com.xeiam.xchange.exceptions.ExchangeException ( "Cannot decode secret key" ) ; } return null ; }
@ org.junit.Test public void exercizeParser ( java.lang.String json ) { int [] expEventSeq = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NAME } ; testInstance ( json , expEventSeq ) ; }
public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } }
{ int addIndex ; if ( direction == ( LayoutManager.Direction.START ) ) { addIndex = 0 ; } else { addIndex = mLayoutManager . getChildCount () ; } if ( child.wasCached ) { state . decacheView ( position ) ; } mLayoutManager . addView ( child.view , addIndex ) ; return addIndex ; }
{ int prevBtnVisibility = android.view.View.VISIBLE ; int nextBtnVisibility = android.view.View.VISIBLE ; if ( ( itemIndex ) == 0 ) { prevBtnVisibility = android.view.View.INVISIBLE ; } else if ( ( itemIndex ) == ( shareClipExperience . getChildrenContents () . size () ) ) { nextBtnVisibility = android.view.View.INVISIBLE ; } prevClipButton . setVisibility ( prevBtnVisibility ) ; nextClipButton . setVisibility ( nextBtnVisibility ) ; mediaController . hide () ; }
{ android.widget.Spinner fishList = ( ( android.widget.Spinner ) ( findViewById ( R.id.fishCaughtSpinner ) ) ) ; java.lang.String fishname = fishList . getSelectedItem () . toString () ; int index = fishList . getSelectedItemPosition () ; intent . putExtra ( "TripInfo" , trip ) ; intent . putExtra ( "Fish" , index ) ; startActivity ( intent ) ; }
private static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
{ java.util.Scanner keyboard = new java.util.Scanner ( java.lang.System.in ) ; int input = 0 ; java.lang.System.out . println ( "Make your move (Hit or nullStay " ) ; do { try { input = keyboard . nextInt () ; } catch ( java.util.InputMismatchException e ) {} } while ( ( input < 1 ) || ( input > 2 ) ) ; keyboard . close () ; return input ; }
{ col_idx [ 0 ] = 0 ; int index = 0 ; for ( int i = 1 ; i <= ( numCols ) ; i ++ ) { col_idx [ i ] = index += histogram [ ( i - 1 ) ] ; } java.lang.System . arraycopy ( col_idx , 0 , histogram ) ; nz_length = index ; }
{ double d = distance ( other ) ; for ( int i = 0 ; i < 3 ; i ++ ) { double a = ( ( Constants.G ) * ( other.mass ) ) * ( ( position [ i ] ) - ( other.position [ i ] ) ) ; deltaAccel [ i ] += a / ( ( d * d ) * d ) ; } }
{ boolean signed = false ; format . checkType ( 'h' , false ) ; if ( ( format . getType () ) == 'H' ) { signed = true ; } format . consume () ; return unpackShort ( signed ) ; }
{ double translationPower = leftJoystick . getVector () . getMagnitude () ; setTargetHeading () ; double }
{ boolean newItem = ! ( this . linkedHashSet . remove ( item ) ) ; if ( newItem ) { this . linkedHashSet . add ( item ) ; } if ( ( this . linkedHashSet . size () ) >= ( com.box.sdk.LRUCache.MAX_SIZE ) ) { java.util.Iterator < E > it = this . linkedHashSet . iterator () ; it . next () ; it . remove () ; } return newItem ; }
java.lang.String valueToInt ( java.lang.Object value , int defaultValue ) { if ( value != null ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } } return null ; }
public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } }
{ android.content.ClipboardManager e = ( ( android.content.ClipboardManager ) ( getSystemService ( Context.CLIPBOARD_SERVICE ) ) ) ; android.content.ClipData clip = android.content.ClipData . newPlainText ( "ID" , id ) ; org.content.ClipData clip = android.content.ClipData . newPlainText ( "ID" , id ) ; org.content.Context context = getApplicationContext () ; java.lang.CharSequence dialogText = "Object id ? to board" ; int duration = android.widget.Toast.LENGTH_SHORT ; android.widget.Toast . makeText ( context , dialogText , duration ) . show () ; }
if ( ( chapter . getStartTimeOffset () ) >= position ) { ret = chapter . getStartTimeOffset () ; break; }
statsCount - 10
{ java.lang.System.out . println ( "Input word. tiles on board, ex. \"DOG\"" ) ; java.lang.String word = getNextLine () ; Position p = new Position ( getNextLine () ) ; java.lang.System.out . println ( "Is horizontal move? Y/N ex. \"Y\"" ) ; boolean isHorizontal = s . nextLine () . equals ( "Y" ) ; Move = null ; }
switch ( base ) { case 'A' : intVal = 0 ; break; case 'C' : intVal = 1 ; break; case 'G' : intVal = 2 ; break; case 'T' : intVal = 3 ; break; case 'N' : intVal = 4 ; break; default: throw new java.lang.IllegalArgumentException ( ( "Invalid character: " + base ) ) ; }
for ( int i = 0 ; i < ( str . length () ) ; i ++ ) sum += ( ( int ) ( ( str . charAt ( i ) ) - '0' ) ) ;
for ( int i = 0 ; i < size ; i ++ ) { if ( ( pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ) > maxCandidateValue ) { maxCandidateValue = pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ; maxCandidate = i ; } }
{ final boolean res = super . add ( elem ) ; if ( res ) try { lock . lock () ; added . signal () ; } finally { lock . unlock () ; } return res ; }
{ boolean isAllNull = true ; edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm workspaceForm = ( ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm ) ( obj ) ) ; if ( workspaceList != null ) { java.util.List < edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace > workspaceList = workspaceForm . getWorkspaceList () ; if ( workspaceList != null ) { for ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace workspace : workspaceList ) { java.lang.String internalId = workspace . getId () ; if ( internalId != null ) { isAllNull = false ; } } } } }
if ( ( peopleData . getStatus () . getStatusCode () ) == ( com.google.android.gms.common.api.CommonStatusCodes.SUCCESS ) ) { com.google.android.gms.plus.model.people.PersonBuffer personBuffer = peopleData . getPersonBuffer () ; try { int count = personBuffer . getCount () ; for ( int i = 0 ; i < count ; i ++ ) {} } finally { personBuffer . close () ; } }
if ( ( label > 0 ) && ( label < minMatchingLabel ) ) { minMatchingLabel = label ; }
{ super . onDestroy () ; for ( int i = 0 ; i < ( mReceivedPermissions.length ) ; i ++ ) { java.lang.String permission = mReceivedPermissions [ i ] ; int result = mReceivedPermissionsResults [ i ] ; io.jasonatBuilder.permissionmanager.PermissionManager . onPermissionResponse ( permission , result ) ; } }
if ( t >= 10000 ) { t -= 10000 ; type ++ ; }
int n ;
{ int fragLen = negValue - posValue ; if ( ( fragLen > 0 ) && ( fragLen <= 2000 ) ) { ( getCounts () [ ( fragLen - 1 ) ] ) ++ ; } }
{ double inches ; double i = 0 ; for ( inches = 1 ; inches <= ( inches <= ( inches ) ) ; inches ++ ) { if ( ( inches ) == 129.37 ; java.lang.System.out . println ( ( ( ( inches + "inches is " ) + ( ( counter ) + ( ( counter ) ++ ) ) + "meters." ) ) ) ; ( counter ) ++ ; if ( ( counter ) == 12 ) { java.lang.System.out . println () ; counter = 0 ; } } }
{ Common.Message listMsg ; java.lang.String content = "" ; for ( Common.User item : this . usersList ) { int i = 0 ; if ( i == 0 ) { content = item . getUsername () ; } else { content = ( content + " " ) + ( item . getUsername () ) ; } i ++ ; } }
size = 0
org.junit.Assert . assertEquals ( 1 , sgenLarger . getTotalSequencesIterated () ) ;
{ boolean doneReading = readPage () ; if ( doneReading ) { return true ; } doneReading = processPageData ( ( ( int ) ( recordsReadInCurrentPass ) ) ) ; }
{ int sourceNodeCount = sourceNodes . size () ; if ( ( ( sourceNodes ) != null ) && ( index < sourceNodeCount ) ) { return sourceNodes . get ( index ) ; } if ( ( sinkNodes ) != null ) { int sinkIndex = ( ( sourceNodes ) == null ) ? index : index - sourceNodeCount ; return sinkNodes . get ( sinkIndex ) ; } }
{ mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jTableHotels . getModel () ) ) ; if ( ( jTableHotels . getSelectedRowCount () ) == 0 ) { javax.swing.JOptionPane . showMessageDialog ( this , "please select the mainel to delete" ) ; return; } java.lang.String id = 0 ; java.lang.String id = 0 ; java.lang.String id = 0 ; java.lang.System.out . println ( 0 ) ; return; }
if ( ( args.length ) != 1 ) { try { int starWarsSequence = java.lang.Integer . parseInt ( args [ 0 ] ) ; java.lang.System.out . println ( ( "Star Wars ||ance: " + starWarsSequence ) ) ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.err . println ( ( ( "Argument" + ( args [ 0 ] ) ) + " must be an integer." ) ) ; java.lang.System . exit ( 2 ) ; } }
{ int id = item . getItemId () ; switch ( id ) { case android.R.id.home : android.util.Log . d ( "hi" , android.support.v4.app.NavUtils . navigateUpFromSameTask ( this ) ) ; return true ; } if ( id == ( R.id.action_settings ) ) { return true ; } return super . onOptionsItemSelected ( item ) ; }
{ int r = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getY () ) - ( minY ) ) / ( cellSize ) ) ) ) ) ; int c = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getX () ) - ( ( ( coord . getX () ) - ( ( - 1 ) ) ) / ( cellSize ) ) ) ) ) ) ) ; }
{ int n = contexts . size () ; for ( n -= 1 ; n >= 0 ; n -- ) { MiniJavaVar findRes = contexts . get ( n ) . vars . get ( varName ) ; if ( findRes != null ) { return findRes ; } } java.lang.System.err . printf ( "Runtime Error: identifier %s not found.\n" , varName ) ; return MiniJavaVar . makeVoid () ; }
java.lang.StringBuffer = requestObject . getInt ( "privacy" ) ;
{ float randomVelx = ( ( random . nextFloat () ) * 4.0F ) - 2.0F ; float randomVely = ( ( random . nextFloat () ) * 4.0F ) - 2.0F ; return new com.dumbpug.crossbowknight.particles.ExplosionParticle ( ( ( emitterDetails.positionX ) - 10 ) , emitterDetails.positionY , randomVelx , randomVely , level ) ; }
return maxEggGroupID
actualHours = 0
{ mItemRemovedSnackbar . show () ; int viewHolderPosition = viewHolder . getAdapterPosition () ; mModel . removeChild ( viewHolderPosition ) ; mSetsAdapter . notifyItemRemoved ( viewHolderPosition ) ; mItemRemovedSnackbar = android.support.design.widget.Snackbar . make ( mSetsView , R.string.program_exercise_activity_set_deleted_message , Snackbar.LENGTH_INDEFINITE ) ; mItemRemovedSnackbar . setAction ( R.string.cancel_button_text , new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { mSetsAdapter . notifyItemInserted ( mModel . restoreLastRemoved () ) ; } } ) ; mItemRemovedSnackbar . show () ; }
{ java.util.HashMap < java.lang.String , Jama.Matrix > bugVecList = utils.MatrixUtil . loadVectors ( bugVecFilePath ) ; utils.MatrixUtil . exportSimilarityMatrix ( bugVecList , codeVecList , simMatFilePath ) ; }
{ double ret = 1 / ( real.length ) ; for ( int i = 0 ; i < ( real.length ) ; i ++ ) { ret += java.lang.Math . pow ( ( ( real [ i ] ) - ( predicted [ i ] ) ) , 2 ) ; } return java.lang.Math . sqrt ( ret ) ; }
{ int i = 0 ; for ( char c : input . toCharArray () ) { if ( c == '{' ) i ++ ; if ( c == '}' ) i -- ; } return ( i >= 0 ) && ( i == 0 ) ; }
{ if ( camera == null ) return; if ( camera == null ) { return; } float step = camera . getParameters () . getExposureCompensationStep () ; }
{ if ( low > high ) return list ; int pos = partition ( list , low , high ) ; quicksort ( list , low , ( pos - 1 ) ) ; quicksort ( list , ( pos + 1 ) , high ) ; }
{ javax.servlet.http.HttpSession session = request . getSession () ; java.lang.String requestQuery = request . getParameter ( "search" ) ; int pageIndex = getPageIndex ( session , requestQuery , allSearchResults , request ) ; return null ( session , requestQuery , pageIndex , allSearchResults ) ; }
collapseView ( lastExpandedPosition , true , false )
{ light = section . spreadSkylightDownwards ( x , z , light ) ; }
if ( ( containsFilter && containsIgnore ) || ( ( ! containsFilter ) ) && ( ! containsIgnore ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return line + "\n" ; }
private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } }
{ if ( sizeOfComponent == 0 ) { continue; } java.lang.String comment = commentLikeGraph . getComment () ; componentSizeCommentMap . put ( sizeOfComponent , comment ) ; componentSizeCommentMap . hashCode () ; }
private void loadData () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0 ; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; syncServerFounderUpdates ( maxVersion , serverMaxVersion ) ; }
{ int id = view . getId () ; android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } }
{ double energyLeft = robotSnapshot . getEnergy () ; int playerId = robotSnapshot . getTeamIndex () ; com.hutgroup.robocode.server.IScoreSnapshot snapshot = robotSnapshot . getScoreSnapshot () ; double gunDamage = ( snapshot . getCurrentBulletDamageScore () ) + ( snapshot . getCurrentBulletKillBonus () ) ; return new com.hutgroup.robocode.server.RoundResult ( roundId , playerId , energyLeft , ramDamage , gunDamage ) ; }
newId != 0
{ spell.Node temp = root ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { int index = indexByLetter ( charAt ( i ) ) ; if ( temp . hasNode ( index ) ) { temp = temp . getNode ( index ) ; } else { return null ; } } return temp ; }
{ final java.lang.String line = indentCheck . getLine ( ( lineNum - 1 ) ) ; final int start = getLineStart ( line ) ; if ( indentLevel . isIn ( start ) ) { logChildError ( lineNum , start , indentLevel ) ; } }
{ int i = 0 ; for ( int i = 0 ; i < ( board.length ) ; i ++ ) { if ( addQueen ( i , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( i , col ) ; } } } return false ; }
{ com.twu.biblioteca.Option optionSelected ; do { int userInput = presenter . getUserInput ( menuOptions . size () ) ; optionSelected = menuOptions . get ( ( userInput - 1 ) ) ; optionSelected . onSelect () ; } while ( optionSelected instanceof com.twu.biblioteca.QuitOption ) ; }
if ( isStalemateForPlayer && isStalemateForOpponent ) { _isStalemate = true ; this . _isGameOver = true ; } else if ( ( this . _numberOfTurnsCompleted ) > ( utilties.models.Game.MAX_TURN_LIMIT ) ) { _isStalemate = true ; this . _isGameOver = true ; }
private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( europeanaId ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , "Timeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; }
{ int [] numbers ; for ( int num : numbers ) { tree . insert ( num ) ; } int key = 2 ; assertEquals ( 2 , tree . search ( key ) ) ; int key2 = 2234 ; assertEquals ( 0 , tree . search ( key2 ) ) ; }
public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; }
if ( ( ( shouldShowAppodealAdBanner ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION ) < position ) ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION ) < position ) ) count ++ ;
{ double L = java.lang.Math . exp ( ( - 1 ) ) ; double p = 1.0 ; double k = 0.0 ; do { k = k + 0.5 ; p *= java.lang.Math . random () ; } while ( p > L ) ; double numero = 1 / ( k - 0.1 ) ; numero = redondear ( ( numero * 10 ) ) ; return numero ; }
protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; }
{ int leftDeep = deep ( root.left ) ; int rightDeep = deep ( root.right ) ; if ( leftDeep == rightDeep ) { return ( ( int ) ( ( java.lang.Math . pow ( 2 , leftDeep ) ) + ( countNodes ( root.right ) ) ) ) ; } else return ( ( int ) ( java.lang.Math . pow ( 2 , rightDeep ) ) ) + ( countNodes ( root.left ) ) ; }
{ int result = 0 ; java.sql.Connection connection = source . getConnection () ; java.sql.PreparedStatement statement = null ; statement = connection . prepareStatement ( libraryDatabaseUtility.repository.BookDAOImpl.DELETE_RECORD_SQL ) ; statement . setLong ( 1 , bookId ) ; result = statement . executeUpdate () ; return result ; }
sleepTime = ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS [ select ] ) - ( ( int ) ( ( java.lang.System . currentTimeMillis () ) - ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp ) ) )
try { iport = java.lang.Integer . parseInt ( port ) ; localServer = server.ServerFactory . createServer ( iport ) ; localServer . startUp () ; this . connect ( "localhost" , ( "" + port ) ) ; }
{ mMap = googleMap ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( loyola , ( ( float ) ( maxZoom ) ) ) ) ; }
{ addressUseReg = false ; long address = calAddress ( pc , this . address ) ; if ( addressUseReg ) { address += com.zms.zpc.execute.NumberUtils . asSigned ( this . disp , this . >Width ) ; } else { address += this . > ; } com.zms.zpc.emulator.reg.Segment seg = ( ( com.zms.zpc.emulator.reg.Segment ) ( pc.cpu.regs . getReg ( setu.segBase ) ) ) ; return seg . getAddress ( address ) ; }
{ int nodeNum ; while ( ( parent ) != null ) { parent . lookupFunction ( name ) ; } for ( mTable t : parent.children ) { nodeNum = ( t . getSymbol ( 0 ) . getType () . equals ( "function name" ) ) ? 0 : 1 ; if ( t . getSymbol ( nodeNum ) . getName () . equals ( name ) ) return t ; } return t ; }
{ url.CreateLink short_link = new url.CreateLink ( this . row ) ; java.lang.String shortURL = short_link . encodeLongURL () ; long hashURL = short_link . getShortURLHash () ; try { this . insertFactory . insertShortLink ( hashURL , shortURL , this . row ) ; } catch ( java.lang.Exception e ) { helper.Loghandler . log ( ( "trying to insert the url " + ( e . toString () ) ) , "fatal" ) ; return false ; } return true ; }
{ au.com.agic.apptesting.steps.StepEventHandling.SCREENSHOT_UTILS . takeScreenshot ( ( " " + ( scenario . getName () ) ) , featureState ) ; final boolean clearDriver = java.lang.Boolean . parseBoolean ( au.com.agic.apptesting.steps.StepEventHandling.SYSTEM_PROPERTY_UTILS . getProperty ( Constants.NEW_BROWSER_PER_SCENARIO ) ) ; synchronized ( au.com.agic.apptesting.State.THREAD_DESIRED_CAPABILITY_MAP ) { if ( clearDriver ) { State.THREAD_DESIRED_CAPABILITY_MAP . clearWebDriverForThread ( true ) ; } } }
private void getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; }
"Roba random sleep " + sleepTime
c = true
{ int errWidth = ( ( pixelWidth ) == 0 ) ? 50 : pixelWidth ; int errHeight = ( ( pixelHeight ) == 0 ) ? 50 : pixelHeight ; setBitmap ( createErrorBitmap ( errWidth , errHeight ) ) ; ( ( react.RPromise < playn.core.Image > ) ( state ) ) . fail ( error ) ; }
try { int balance = getOrZero ( userId ) ; balances . put ( userId , ( balance + value ) ) ; writeLog ( "DEPOSIT" , userId , "" , value ) ; return true ; } finally { return true ; }
java.util.List < java.lang.Integer > elems = new java.util.ArrayList < java.lang.Integer > () ; if ( ( 45 . size () ) > 0 ) { return 0 ; }
{ int secNum = java.lang.Integer . parseInt ( timeParts [ 2 ] ) ; int minNum = java.lang.Integer . parseInt ( timeParts [ 1 ] ) ; int hourNum = java.lang.Integer . parseInt ( timeParts [ 0 ] ) ; oneHourTimerDelay = ( ( ( 60 - secNum ) + ( 60 * ( 10 - minNum ) ) ) + ( ( 24 - hourNum ) * 3600 ) ) * 1000 ; }
{ int check_ntype = l . remove ( 0 ) . asIntegerValue () . getInt () ; if ( check_ntype != ( ntype ) ) { android.util.Log . e ( com.mooshim.mooshimeter.common.ConfigTree.TAG , "WRONG_ TYPE" ) ; } java.util.List < org.msgpack.type.Value > new_path = l . remove ( 0 ) . asArrayValue () ; java.util.List < org.msgpack.type.Value > new_path = l . remove ( 0 ) . asArrayValue () ; java.util.List < org.msgpack.type.Value > new_path = l . remove ( 0 ) . asArrayValue () ; path = new java.util.ArrayList < java.lang.Integer > () ; for ( org.msgpack.type.Value v : new_path ) { path . add ( v . asIntegerValue () . getInt () ) ; } }
{ int currPlayerId = currPlayer . getCurrPlayerID () ; java.lang.System.out . println ( ( ( amtBetInGame * 2 ) ) + ( currPlayer . getCurRound () ) . getCurRound () ) ; java.lang.Thread . sleep ( 5000 ) ; java.lang.System.out . println ( currPlayer . getCurRound () ) ; java.lang.Thread . sleep ( 5000 ) ; }
{ int col ; int col ; int col ; int color ; row = origSelectedBoardBlok . getRow () ; col = origSelectedBoardBlok . getColumn () ; edu.up.cs301.blokus.Blok newBlok = new edu.up.cs301.blokus.Blok ( row , col , color ) ; return newBlok ; }
{ int secretNumber = ( ( int ) ( 1 + ( ( java.lang.Math . random () ) * 10 ) ) ) ; int attemps = 3 ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String inpu ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String inpu ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String inpu ; }
{ com.intellij.openapi.vfs.VirtualFile _file = it . getFile () ; boolean _exists = _file . exists () ; }
if ( command_type != null ) { com.example.reativos.oscar.Command newCommand = new com.example.reativos.oscar.Command ( command_type , command_param ) ; commandLists . get ( currentTabTag ) . add ( newCommand ) ; p . get ( currentTabTag ) . notifyDataSetChanged () ; }
{ int winAns = 9 ; if ( ( ( BotParser.mRound ) == 1 ) || ( ( parentParser.mRound ) == 2 ) ) return 3 ; else if ( ( elseParserParser.mRound ) > 5 ) winAns = positionParser.mField . checkWin ( parentParser.mBotId ) ; if ( winAns != 9 ) return winAns ; winAns = else { int move = new java.util.Random () . nextInt ( 7 ) ; return move ; } return move ; }
{ boolean infoEnabled = false ; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil . getBundle ( org.talend.commons.runtime.debug.TalendDebugHandler . class ) . getBundleContext () ; org.osgi.framework.ServiceReference
{ boolean isAdded = true ; for ( java.util.TreeSet < tds.Task > tree : tds.TaskTree.taskTrees ) { if ( ! ( tree . add ( task ) ) ) { isAdded = false ; } } tds.TaskTree . increaseTaskListSize () ; tds.TaskTree . pushAddToStorage ( task ) ; return isAdded ; }
if ( j < ( ( n ) - 1 ) ) { int right = getPosition ( i , ( j + 1 ) ) ; if ( isOpen ( right ) ) { grid . union ( right , getPosition ( i , j ) ) ; } }
public boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; return ok ; }
{ if ( ( ( ( currentLocation ) == null ) || ( ( currentCompassValue ) < 0 ) ) || ( ( settingsManager . getPresetIdInRouterFragment () ) < 1 ) ) { return; } org.walkersguide.utils.POIPreset preset = settingsManager . getPOIPreset ( settingsManager . getPresetIdInRouterFragment () ) ; boolean isInsidePublicTransport = false ; if ( ( numberOfHighSpeeds ) > 0 ) isInsidePublicTransport = true ; poiManager . updatePOIList ( preset . getId () , preset . getRange () , currentLocation , currentCompassValue , "" , isInsidePublicTransport ) ; }
private void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float _ viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX ) ; }
{ double minYY = points . get ( i ) . y ; for ( int i = 1 ; i < ( points . size () ) ; i ++ ) { double pY = points . get ( i ) . y ; if ( pY < minY ) { if ( ( points . get ( i ) . z ) <= 0 ) { return ( - ( TheLittleEngineThatCould.windowHeight ) ) / 2 ; } } minY = pY ; } return minY ; }
isMyOwnMsg = newItem . isIncomingMessage ()
return dot ;
private void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear ( ) throws java.lang.Exception { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14 ; com.cronutils.model.time.ZonedDateTime expected = ( dayOfMostRecentPeriod == 1 ) ? now : now . plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; }
public void ParseJSONObject () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; } else { responseString . append ( jsonObj ) ; } }
return java.lang.System.in ) ;
subject . substring ( ( pos + 1 ) )
private void postConvert ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int q = begin ; for ( int p = begin ; p < end ; ) { final short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16> ) > > 7 ) ) ; } }
{ java.lang.System.out . format ( "%d is between %d and %d%n" , i ) ; max = java.lang.Math . max ( A [ i ] , max ) ; }
{ javax.persistence.EntityTransaction transaction = contractDao . getTransaction () ; com.tsystems.javaschool.business.services.interfaces.OptionService optionService = new com.tsystems.javaschool.business.services.implementations.OptionServiceImpl () ; boolean insideOtherTransaction = transaction . isActive () ; if ( ! insideOtherTransaction ) transaction . begin () ; contract . setUsedOptions ( optionService . loadOptionsByIds ( optionsIds ) ) ; contractDao . create ( contract ) ; if ( ! insideOtherTransaction ) transaction . commit () ; }
@ org.junit.Test public void testFindAll ( ) throws java.lang.Exception { populateData () ; int expectedSize = 12 ; int actualSize = 0 ; java.util.List < net.smartcosmos.dto.things.ThingResponse > response = persistenceService . findAll ( tenantUrn ) ; assertFalse ( response . isEmpty () ) ; actualSize = response . size () ; assertTrue ( ( ( ( "Expected " + expectedSize ) + " but received " ) + actualSize ) , ( actualSize == expectedSize ) ) ; }
private int getStartIndex ( tspUtil.Node [] randomPath ) { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; }
{ int result = super . hashCode () ; result = ( 31 * result ) + ( ( t1 ) != null ? t1 . hashCode () : 0 ) ; result = ( 31 * result ) + ( ( t2 ) != null ? t2 . hashCode () : 0 ) ; return result ; }
private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; if ( current == turnNum ) { return true ; } } return false ; }
java.lang.System.out . println ( result )
{ if ( time <= 0 ) { return; } double timeToFirstCollision = this . getTimeToFirstCollision () ; if ( time <= timeToFirstCollision ) { this . advance ( time ) ; return; } this . advance ( timeToFirstCollision ) ; this . resolveCollision ( collistionListener ) ; java.lang.System.out . println ( timeToFirstCollision ) ; this . evolve ( ( time - timeToFirstCollision ) , collistionListener ) ; }
value = component . calculateComponentValue ( ( ( value ) + 1 ) , isWhitePlayer , depth ) ;
@ java.lang.Override public void onNext ( T i ) { boolean stop = ( ++ ( count ) ) >= ( limit ) ; child . onNext ( i ) ; if ( stop && ( completed ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } }
{ int rd = file . nextInt () ; int rs = file . nextInt () ; int sa = file . nextInt () ; file . nextLine () ; int funct = 8 ; int rt = 0 ; java.lang.String opc = "SRL" ; ilist . add ( ( ( interfaces.IInstruction ) ( new model.RTypeInstruction ( opc , rd , rs , rt ) ) ) ) ; }
{ int temp = 0 ; for ( int i = 0 ; i < ( inputs.length ) ; i ++ ) { temp += ( inputs [ i ] ) * ( weights [ i ] ) ; } return ( ( float ) ( 1 / ( 1 + ( java.lang.Math . pow ( java.lang.Math.E , ( - temp ) ) ) ) ) ) ; }
java.lang.System . arraycopy ( values , 0 , 0 , 0 , values.length )
array = new float [ buffer . size () ]
private void setMedian () { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . valueOfAllNumbers = this . numbers . get ( mid ) ; } else { this . valueOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } }
{ if ( uploadedFile . isEmpty () ) { return null ; } java.lang.String thisPath = uploadedFile . getName () ; java.io.File thisFile = new java.io.File ( thisPath ) ; uploadedFile . transferTo ( thisFile ) ; com.edu.nju.asi.service.serviceImpl.Case wanted = parseXML ( thisPath ) ; boolean deleteResult = thisFile . delete () ; return wanted ; }
for ( byte b = this . state . sfrs . A . getValue () ) ; b = ( ( byte ) ( b & ( b - 1 ) ) ) ) parity = ! parity ;
{ java.awt.Point p = tileSource . latLonToXY ( lat , lon , zoom ) ; int y = ( ( p.y ) - ( center.y ) ) - ( ( getHeight () ) / 2 ) ; return y ; }
{ int numOfFinishedTasks = repo . getDurationInfo ( 1 ) . getNumOfFinishedTasks () ; org.junit.Assert . assertTrue ( "There should be no finished tasks, yet" , ( numOfFinishedTasks == 0 ) ) ; repo . setPerformed ( 1 , 5 ) ; numOfFinishedTasks = repo . getDurationInfo ( 1 ) . getNumOfFinishedTasks () ; assertTrue ( "There should be 1 finished task now" , ( numOfFinishedTasks == 1 ) ) ; }
{ num1 = java.lang.Math . abs ( num1 ) ; num2 = java.lang.Math . abs ( num2 ) ; if ( num2 > num1 ) { int temp = num2 ; num2 = num1 ; num1 = temp ; } if ( num2 == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { this . maxcommom = num2 ; return; } int temp = num1 % num2 ; ojld ( num2 , temp ) ; }
{ int start = info . getStartOffset () ; java.lang.System.out . println ( end ) ; java.lang.System.out . println ( end ) ; list . add ( range ) ; }
{ io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; long id = ( realm . where ( com.louiscarrese.clopecounter.model.Jour . class ) . maximumInt ( "id" ) ) + 1 ; com.louiscarrese.clopecounter.model.Jour j = new com.louiscarrese.clopecounter.model.Jour () ; j . setId ( id ) ; return j ; }
{ int lastPos = getPosition () ; super . add ( to , super . remove ( from ) ) ; mObservable . notifyChanged () ; if ( lastPos == from ) moveToPosition ( to ) ; }
if ( aip == ( org.roda.wui.client.common.actions.AipActions.NO_AIP_OBJECT ) ) { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_NO_AIP . contains ( action ) ; } else if ( AIPState.UNDER_APPRAISAL . equals ( aip . getState () ) ) { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ; }
if ( ( lastJoke ) != null ) { while ( ( joke . equals ( lastJoke ) ) && ( retryCount < ( com.udacity.gradle.builditbigger.MainActivity.RETRY_LIMIT ) ) ) { timber.log.Timber . d ( "Got the same joke, looking for fresh material!" ) ; joke = loadJoke () ; retryCount ++ ; } }
{ try { status = org.dataaccessioner.Migrator.STATUS_RUNNING ; status = copyDirectory ( source , destination ) ; } catch ( java.io.FileNotFoundException ex ) { setStatusMessage ( ex . getLocalizedMessage () ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } catch ( java.lang.Exception ex ) { setStatusMessage ( ( "Unexpected update: " + ( ex . getLocalizedMessage () ) ) ) ; } return status ; }
{ if ( ( valArr.length ) <= 0 ) java.lang.System.err . println ( "ERROR: array is null" ) ; java.lang.System.out . println ( ( "Valarr length = " + ( valArr.length ) ) ) ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { org.lang.System.out . println ( ( "i= " + i ) ) ; if ( ( valArr [ i ] ) == null ) valArr [ i ] = valArr [ i ] ; } }
{ int res = firstClass. ( lRef , rRef ) ; if ( res == 0 ) { res = secondClass ; ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "SecondClass." ) ; if ( res == 0 ) { res = thirdClass. ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "thirdClass." ) ; } } return res ; }
{ int count = 0 ; lowerIndex = 0 ; for ( lowerIndex = 0 ; ( lowerIndex ) < ( histogram.length ) ; ( lowerIndex ) ++ ) { count += histogram [ lowerIndex ] ; if ( count >= ( lowerCount ) ) { break; } } for ( upperIndex = lowerIndex ; ( upperIndex ) ++ ; ( upperIndex ) ++ ) { count += histogram [ upperIndex ] ; } }
if ( ( armor > 0 ) && ( armor < 20 ) ) { damage = this . DAMAGE ; } else { damage = ( this . DAMAGE ) - armor ; }
return new java.util.ArrayList < java.lang.String > () ;
if ( i < ( props . size () ) ) props . get ( i ) . setLinkedId ( quant . getVar () . getSourceId () ) ;
de.dmxcontrol.widget.MeasureSpec . makeMeasureSpec ( de.dmxcontrol.widget.MeasureSpec . getMode ( heightMeasureSpec ) , sizeHeight )
{ java.lang.System.out . println ( status . ordinal () ) ; int next = ( status . ordinal () ) + 1 ; if ( next >= ( - 1 ) ) { ch.epfl.planair.Planair . get ( ch.epfl.planair.mods.MenuMode . class ) ; } else { toStep ( next ) ; } }
{ if ( ( event.sensor . getType () ) == ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ) { float rawX = event.values [ 0 ] ; this . spaceShip . setXVelocity ( ( ( int ) ( normalizedX ) ) ) ; } }
{ int prog = seekBar . getProgress () ; java.lang.System.out . println ( R.string.recapHot ) ; this . recapWarmth . setText ( android.text.Html . fromHtml ( ( ( ( "<b>" + ( res . getString ( R.string.recapHot ) ) ) + "</b>" ) + ( hotWordArray [ prog ] ) ) ) ) ; }
{ int action = 0 ; setHorizontalVelocity ( 0.0 ) ; java.util.Random rand = new java.util.Random () ; actionDuration = ( ( rand . nextDouble () ) * 3.0 ) + 1.0 ; actionTime = 0.0 ; int randomNum = rand . nextInt ( 4 ) ; if ( randomNum == 0 ) action = 0 ; if ( randomNum == 3 ) action = 3 ; return action ; }
sim < ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE )
{ byte [] id = xaurora.communication.ChromeServer . getURL ( text ) ; xaurora.io.DataFileIO . instanceOf () . createDataFile ( id , java.lang.String . valueOf ( text ) . getBytes () ) ; }
{ int realLightsCount = getRealLightsCount () ; int sum = 0 ; for ( bei.m3c.widgets.LightWidget lightWidget : largeLightWidgets . subList ( 1 , largeLightWidgets . size () ) ) { sum += lightWidget . getValue () ; } largeLightWidgets . get ( 0 ) . setValue ( java.lang.Math . round ( ( sum / realLightsCount ) ) ) ; }
{ if ( ( getBalance () ) == 0 ) return 0 ; double deposited = super . deposit ( amount ) ; double difference = finalDeposit - deposited ; if ( difference != 0 ) super . withdraw ( difference ) ; return finalDeposit ; }
{ java.lang.String [] n = new java.lang.String [ nameCount ] ; while ( i <= nameCount ) { n [ i ] = prey + ( i ++ ) ; } return n ; }
if ( ( stoneBlocks + boardBlocksCount ) ) { lines ++ ; }
{ java.lang.System.out . println ( messageID ) ; org.wso2.andes.kernel.OnflightMessageTracker.MsgData trackingData = getTrackingData ( messageID ) ; trackingData . addMessageStatus ( MessageStatus.SCHEDULED_TO_SEND ) ; int numOfSchedules = trackingData.numberOfScheduledDeliveries . incrementAndGet () ; if ( org.wso2.andes.kernel.OnflightMessageTracker.log . isDebugEnabled () ) { org.wso2.andes.kernel.OnflightMessageTracker.log . debug ( ( ( ( "message id= " + messageID ) + " scheduled. Pending to execute= " ) + numOfSchedules ) ) ; } return numOfSchedules ; }
if ( applyTotal <= 5 ) { int count = newsDao . applyTop ( id ) ; if ( count > 0 ) { bool = true ; } }
{ int i = 0 ; int maxConnections = 200 ; while ( ( i ++ ) < maxConnections ) { java.net.Socket clientConnection = s . accept () ; ATMServer.Worker worker = new ATMServer.Worker ( clientConnection , functions , clientData ) ; java.lang.Thread t = new java.lang.Thread ( worker ) ; t . start () ; logger . info ( ( "New client connected, assigned thread ID #" + ( t . getId () ) ) ) ; } return this ; }
private source.Node < T > find ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison == 0 ) { return node ; } else if ( comparison < 0 ) { return find ( value , node.rightChild ) ; } else { return find ( value , node.leftChild ) ; } }
{ super . size () ; int childCount = getChildCount () ; for ( int i = childCount ; i < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ; ++ i ) { addNextCard () ; } for ( int i = 0 ; i < ( getChildCount () ) ; ++ i ) { positionItem ( i ) ; } }
{ boolean isLiterallyConnected = ( ( ( ( this . endHour ) == ( another.startHour ) ) && ( ( this . endMinute ) == ( another.startMinute ) ) ) && ( ( this . startHour ) == ( another.endHour ) ) ) && ( ( this . startMinute ) == ( another.endMinute ) ) ; final boolean isTimeGapConnected = ( ( this . timeGap () ) + ( another . timeGap () ) ) == 24 ; return isLiterallyConnected && isTimeGapConnected ; }
public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } } return result ; }
if ( ( compassDirection ) == null ) { calculateNextTarget ( true ) ; } else { int distanceSquared = getTarget () . distanceSquaredTo ( rc . getLocation () ) ; double distance = java.lang.Math . sqrt ( distanceSquared ) ; if ( distance < ( team379.pathfinding.Orbiter.DISTANCE_THRESHOLD ) ) { calculateNextTarget ( true ) ; } }
EMPTY_STACK_VALUE = 0
public static int getNumberOfWeeksOfYear ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; }
while ( ! ( nbObjectsSoFar <= index ) ) { jumpingalien.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar ++ ; pos ++ ; }
returnerate.CardFormat.FORMAT ;
{ new us.nineworlds.serenity.core.services.WatchedVideoAsyncTask () . execute ( videoId ) ; boolean showOSD = preferences . getBoolean ( "internal_player_osd" , true ) ; if ( showOSD ) { mediaController . show ( null ) ; } if ( ( progressReportingHandler ) != null ) { progressReportingHandler . postDelayed ( progressRunnable , 5000 ) ; } }
{ java.lang.System.out . println ( "Room Name?" ) ; test = main.java.com.marist.mscs721.RoomScheduler.keyboard . next () ; if ( ( main.java.com.marist.mscs721.RoomScheduler . findRoomIndex ( rooms , test ) ) == ( - 1 ) ) { inputCheck = false ; } else { inputCheck = false ; } }
void dependentStopped () { assert ! ( java.lang.Thread . toString () ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean.RestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState (.RestState ) ; } doExecute ( tasks ) ; }
{ java.lang.String title = "Please get me out of the db!" ; java.lang.String text = "All I want is to be with you!" ; logic.Post op = new logic.Post ( title , text ) ; long postID = op . save () ; logic.Post post = new logic.Post ( postID ) ; assertEquals ( postID , post.postID ) ; }
{ int idx = ( ( this . stackSimulator . size () ) - traceBack ; edu.columbia.psl.cc.pojo.InstNode latestInst = this . stackSimulator . get ( idx ) ; latestInst . setRelatedObjId ( objId ) ; java.lang.System.out . println ( ( ( ( "Update obj id: " + latestInst ) + " " ) + objId ) ) ; }
{ if ( ! ( candidate.applicationId . equals ( applicationId ) ) ) { continue; } if ( ( candidate.version.versionCode ) <= bestVersionCode ) { continue; } if ( matcher . isCompatible ( candidate.filter ) ) { continue; } bestDist = candidate ; }
private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } }
{ int index = com.soesec.util.Alphabet . IndexOf ( letter ) ; if ( index < 0 ) { decrypted += letter ; continue; } int i = ( index - ( info . getRightShift () ) ) % 26 ; decrypted += com.soesec.util.Alphabet . At ( i ) ; }
if ( color == 0 ) y = ( this . y ) - 1 ; else y = ( this . y ) - 1 ;
{ int height = ( ( int ) ( scaleY ( b ) ) ) ; y -= height ; x += binWidth ; g . fill3DRect ( x , y , binWidth , height , true ) ; y = ( getHeight () ) - ( ( ( int ) ( getHeight () ) ) ) ; }
public void myTick ( long mils ) { int continueRemaining = ( ( int ) ( mils ) ) / 60000 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , java.lang.Integer . toString ( 1.0Remaining ) ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; }
{ java.lang.String contents = "" ; while ( ( currentLink . getData () ) != null ) { contents = ( ( ( ( contents + "[ " ) + index ) + " ]\t= " ) + ( currentLink . getData () ) ) + "\n" ; index ++ ; currentLink = currentLink . getNextLink () ; } return contents ; }
{ infoNetwork.InputPerceptron testPerceptron = new infoNetwork.InputPerceptron ( 0 ) ; testPerceptron . setInput ( testInput ) ; testPerceptron . activate () ; testPerceptron . calculateDeltas () ; testPerceptron . adjustToError () ; testPerceptron . activate () ; assertEquals ( testInput , testPerceptron . output () , pTA ) ; }
{ de.uni_hildesheim.sse.monitoring.runtime.recordingServer.RecordingStrategiesElement element = elements . remove ( 0 ) ; element . process ( strategy ) ; int id = element . getIdentification () ; element . clear () ; element . release () ; end = ( Constants.ENDSYSTEM ) == id ; }
{ if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) { net.wequick.small.util.ReflectAccelerator.sAddAssetPath = net.wequick.small.util.ReflectAccelerator . getMethod ( android.content.res.AssetManager . class , "addAssetPath" , new java.lang.Class [] { java.lang.String . class } ) ; } if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) return ret ; int ret = net.wequick.small.util.ReflectAccelerator . invoke ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath , assets , path ) ; return ret ; }
{ int roomCost = 0 ; if ( ( roomType ) == 'I' ) roomCost = ( HospitalMVC.Patient.icRoomRate ) * ( days ) ; else if ( ( roomType ) == 'P' ) roomCost = ( HospitalMVC.Patient.privateRoomRate ) * ( days ) ; else roomCost = ( HospitalMVC.Patient.doubleRoomRate ) * ( days ) ; return roomCost ; }
{ if ( h != null ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } }
if ( items [ num ] [ 0 ] . equals ( name ) ) { q = true ; }
{ java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding . class . getDeclaredField ( "pressTime" ) ; field . setAccessible ( true ) ; int c = ( ( int ) ( field . get ( instance ) ) ) ; if ( c > 0 ) { return true ; } return false ; }
if ( ( ( threshold ) != ( - 1 ) ) && ( sum > ( threshold ) ) ) context . write ( word , new org.apache.hadoop.io.IntWritable ( sum ) ) ;
public void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStack () ; if ( popped ) { com. ""ly.wifiheatmap.FragmentBase curFrag = ( ( com. ""ly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } }
public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( child.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; }
public long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; }
for ( java.lang.String bPos : wPawns ) java.util.HashSet < java.lang.String > bPawns , java.util.Set < java.lang.String > bPawns , java.util.Set < java.lang.String > bPawns , java.util.Set < java.lang.String > bPawns ) { java.lang.System.out . println ( bPos ) ; java.lang.System.out . println ( bPos ) ; java.lang.System.out . println ( bPos ) ; else { java.lang.System.out . println ( bPos ) ; }
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) { hasMash = true ; return hasMash ; } return hasMash ; }
{ switch ( requestCode ) { case 1 : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { int switchNum = data . getIntExtra ( com.example.scanitgrocerystorehelper.MainActivity.DELETE_SWITCH , 0 ) ; if ( newNum != 0 ) deleteList ( mSqlAdapter . getList ( newNum ) ) ; } } }
switch ( route ) { case "conquest" : { output = conquest [ stat ] ; break; } case "revelations" : { output = revelations [ stat ] ; output = revelations [ stat ] ; }
public long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; }
boolean insertUserChild ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; }
if ( ( ( t != ( fr.lteconsulting.pomexplorer.Client . class ) ) && ( t != ( fr.lteconsulting.pomexplorer.WorkingSession . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.CommandOptions . class ) ) ) c ++ ;
{ long currentWithoutPostZone = postTz . convertLocalToUTC ( time , true ) ; long local = preTz . convertUTCToLocal ( currentWithoutPostZone ) ; long nextLocal = durationField . add ( local , 1 ) ; return postTz . convertUTCToLocal ( preTz . convertLocalToUTC ( nextLocal , true ) ) ; }
if ( hasAtom ) { this . atom = serializer . deserializeFromSSTable ( dis , ColumnSerializer.Flag.PRESERVE_SIZE , java.lang.Integer.MIN_VALUE , version ) ; }
{ android.os.Bundle b = getIntent () . getExtras () ; if ( ( org.bottiger.podcast.activities.feedview.FeedActivity.mFuckItHack ) != null ) b = org.bottiger.podcast.activities.feedview.FeedActivity.mFuckItHack ; boolean isSlim = b . getBoolean ( org.bottiger.podcast.activities.feedview.FeedActivity.FEED_ACTIVITY_IS_SLIM ) ; java.lang.String url = b . getString ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_URL_KEY ) ; if ( isSlim ) { mSubscription = b . < org.bottiger.podcast.provider.SlimImplementations.SlimSubscription > getParcelable ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_SLIM_KEY ) ; } else { mSubscription = org.bottiger.podcast.SoundWaves . getLibraryInstance () . getSubscription ( url ) ; mIsSlimSubscription = false ; } }
Quick . quickSortH ( data , start , end )
{ short componentId = edu.uci.eecs.wukong.framework.util.WK >Util . getLittleEndianShort ( buffer , start ) ; byte propertyNumber = buffer [ ( start + 2 ) ] ; propertyNumber ++ ; byte size = buffer [ ( start + 3 ) ] ; byte [] val = new byte [ size ] ; java.lang.System . arraycopy ( buffer , ( start + 4 ) , val , 0 , size ) ; edu.uci.eecs.wukong.framework.model.InitValue value = new edu.uci.eecs.wukong.framework.model.InitValue ( componentId , propertyNumber , val ) ; return value ; }
{ byte [] sendData = new byte [ 1024 ] ; java.util.Scanner input = new java.util.Scanner ( java.lang.System.in ) ; while ( input . hasNextLine () ) { sendData = input . nextLine () . getBytes () ; } csci4311.nc.NetcatUDPClient.clientSocket . send ( new java.net.DatagramPacket ( sendData , sendData.length , csci4311.nc.NetcatUDPClient.ipAddress , port ) ) ; }
if ( answer . equals ( userEnterAnswer ) ) messageResId = R.string.correct_toast ; else messageResId ;
{ long totalSteps = 0 ; int totalDays = 0 ; for ( grimesmea.gmail.com.pricklefit.DailyStepsDTO dailyStepsDTO : dailyStepTotals ) { totalSteps += dailyStepsDTO . getSteps () ; totalDays ++ ; } return ( ( int ) ( totalSteps ) ) / totalDays ; }
{ socket . receive ( packet ) ; }
newString = new java.lang.StringBuilder ()
while ( ( line . length () ) > index ) { index ++ ; }
if ( i >= 0 ) { ip = args . substring ( 0 , i ) ; id = decc.dht.Key . load ( args . substring ( i ) ) ; }
{ java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( ( "This program will ask you for a number, and will then" + " tell you if it is even or odd" ) ) ; int evenCheck ; java.lang.System.out . println ( "Enter a number:" ) ; int evenNum = scanner . nextInt () ; evenCheck = evenNum % 2 ; if ( evenCheck == 0 ) { java.lang.System.out . println ( "Even" ) ; } else { java.lang.System.out . println ( "Odd" ) ; } java.lang.System.out . println ( "" ) ; }
{ int currentIndex = keyParamPairs . indexOf ( currentPair ) ; java.lang.String newName = com.equinox.Parser . appendParameters ( keyParamPairs , 0 , currentIndex ) ; keyParamPairs . get ( 0 ) . setParam ( newName ) ; }
public void updateVersion ( java.lang.Long slbId ) { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update . Fail!" , e ) ; } }
{ int rv = root ( v ) ; int rw = root ( w ) ; int max = size ( rv ) ; int sw = size ( rw ) ; if ( sv > sw ) { id [ rw ] = rv ; size [ rv ] = sv + sw ; } else { id [ rv ] = rw ; size [ rw ] = sv + sw ; } }
{ distribution . suppressWhileNotFulfilledBinary ( new org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution.PrivacyCondition () { public org.deidentifier.arx.criteria.State isFulfilled ( org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution ) { boolean trim = org.deidentifier.arx.criteria.RiskBasedPrivacyCriterion . this . isFulfilled ( distribution ) ; if ( ( !Gfilled ) && ( ( distribution . getNumOfSuppressedTuples () ) > numMaxSuppressedOutliers ) ) { return State.ABORT ; } else { return true ; } } ) ; } }
{ int [] pos = new int [ 2 ] ; java.lang.String result = "" ; int counter = 0 ; while ( ( gl . processCommand ( "MOVE W" , id ) ) != "FAIL" ) { counter ++ ; } pos [ 0 ] = 1 + counter ; counter = 0 ; while ( ( gl . processCommand ( "MOVE N" , id ) ) != "FAIL" ) { counter ++ ; } pos [ 1 ] = 1 + counter ; return pos ; }
isChecked ? childPositions . add ( ( childPosition + 1 ) , childPosition )
{ int [] res = new int [ arr . length () ] ; for ( int i = 0 ; i < ( arr . length () ) ; i ++ ) { res [ i ] = arr . optInt ( i ) ; } return res ; }
{ int month = dateTimeUnit . getMonth () ; if ( dateTimeUnit . isIso8601 () ) { month = calendar . fromIso ( dateTimeUnit ) . getMonth () ; } switch ( month ) { case 11 : return ( dateTimeUnit . getYear () ) + "NovS1" ; case 5 : return ( dateTimeUnit . getYear () ) + "NovS2" ; default: throw new java.lang.IllegalArgumentException ( ( "Month not valid ) ) ; } }
{ org.matsim.api.core.v01.Coord coord = node . getCoord () ; int r = ( ( int ) ( ( ( coord . getY () ) - ( y0 ) ) % ( cellSize ) ) ) ; int c = ( ( int ) ( ( coord . getX () ) - ( x0 ) ) ) ; return ( r * ( cols ) ) + c ; }
{ if ( protocolHandler . isDirectModeTwoThreadWithSyncReplies () ) { return false ; } long ackId = new com.sun.messaging.jmq.jmsclient.AsyncSendCallback cb = ( ( com.sun.messaging.jmq.jmsclient.AsyncSendCallback ) ( requestMetaData . get ( java.lang.Long . valueOf ( ackId ) ) ) ) ; if ( cb == null ) { return false ; } return true ; }
public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] null = new java.lang.String ( { true , true , true , true , false , false } ) ; setHandControlled = new boolean [] { false , false , false } ; setHandControlled [] ( robotSide , null ) ; }
{ nachos.threads.Lib . assertTrue ( conditionLock . isHeldByCurrentThread () ) ; waitFor .Queue . add ( nachos.threads.KThread . currentThread () ) ; conditionLock . release () ; boolean intStatus = nachos.threads.Machine . interrupt () . disable () ; nachos.threads.KThread . sleep () ; nachos.threads.Machine . interrupt () . restore ( intStatus ) ; conditionLock . acquire () ; }
{ int py = ( y + ( UserInterface.Accordpanel.id ) ) + 60 ; if ( curAcc . isSixakk () ) { py -= null ; py /= 50 ; } else { py -= 15 + 50 ; py /= 50 ; } java.lang.System.out . println ( py ) ; return py ; }
( ( arr . get ( i ) ) != null ) && ( ( arr . get ( i ) ) != value )
while ( sideFieldIndex < ( listOfPossibleMoves . size () ) ) { de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves . get ( sideFieldIndex ) ; if ( board . isSideField ( field ) ) { listOfPossibleSideFields . add ( field ) ; } }
numActivities
{ java.awt.Point target = new java.awt.Point ( 0 , 0 ) ; int numAnimats = 0 ; for ( com.fuzzy.simulator.CAnimat otherAnimat : _animats ) { java.awt.Point otherLocation =ItemsetLocation ( animat . GetLocation () , otherAnimat . GetLocation () ) ; int animatDistance = animat . GetDistance ( otherAnimat ) ; } }
private void updateOriginalTags () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { if ( ! hasTag ) { modifiedTags . add ( tagToAdd ) ; } } } } }
{ io.branch.referral.Branch.isAutoSessionMode_ = true ; io.branch.referral.Branch.customReferrableSettings_ = ( isReferrable ) ? io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.REFERRABLE : io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.NON_REFERRABLE ; boolean isDebug = io.branch.referral.BranchUtil . isTestModeEnabled ( context ) ; io.branch.referral.Branch . getBranchInstance ( context , ( ! isDebug ) ) ; return io.branch.referral.Branch.branch . getBranchInstance ( context , ( ! isDebug ) ) ; }
{ java.lang.System.out . println ( ( ( this . head ) + 1 ) ) ; verifyNIL () ; int lastDegree = this . head ; }
block . setNumBytes ( ( ( block . getNumBytes () ) + currLen ) )
{ int [] a = new int [] { 1 , 2 , 3 , 4 , 5 } ; reverseLinkedListII.ReverseLinkedListII obj = new reverseLinkedListII.ReverseLinkedListII () ; reverseLinkedListII.ReverseLinkedListII.ListNode head = obj . makeList ( a ) ; reverseLinkedListII.ReverseLinkedListII . printList ( head ) ; head = obj . reverseBetween ( head , 2 , 4 ) ; reverseLinkedListII.ReverseLinkedListII . printList ( head ) ; }
{ android.util.Log . d ( "WaterLevel" , "in mRecordFeed" ) ; while ( ( mRecorder . getRecordingState () ) == ( android.media.AudioRecord.RECORDSTATE_RECORDING ) ) { short [] data = new short [ ( mBufferSize ) / 2 ] ; mRecorder . read ( data , 0 , ( ( mBufferSize ) / 2 ) ) ; android.util.Log . d ( "WaterLevel" , "in mRecordFeed, in while, before appendSignal" ) ; mDecoder . appendSignal ( data ) ; android.util.Log . d ( "WaterLevel" , "in mRecordFeed, in while, after appendSignal" ) ; } }
{ final int timeSensitiveness = 50 ; if ( ( ( keyThread ) != null ) && ( ( keyThread . getState () ) == ( java.lang.Thread.State.TIMED_WAITING ) ) ) { updateMovement () ; } else { keyThread = new java.lang.Thread () { public void run () { try { keyThread . sleep ( timeSensitiveness ) ; updateMovement () ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( ( "------ Key thread interrupted -------\n" + e ) ) ; } } } ; keyThread . start () ; } }
while ( index == aList . get ( index ) ) { if ( ( insertedGrade . getTotalGrade () ) > ( element . getTotalGrade () ) ) { aList . add ( index , insertedGrade ) ; break; } index ++ ; }
albumSongs . get ( randNum )
{ int selected_row = - 1 ; java.awt.Point p = e . getPoint () ; java.lang.System.out . println ( ( ( ( "Manowitz left page(x,y): " + ( p.x ) ) + ", " ) + ( p.y ) ) ) ; java.awt.FontMetrics fm = right_page . getFontMetrics ( right_page . getFont () ) ; selected_row = ( ( p.y ) / ( fm . getHeight () ) ) + 1 ; return selected_row ; }
{ java.lang.String tbls = com.alibaba.fastjson.JSON . toJSONString ( tbl ) ; int err = 0 ; redis.clients.jedis.Jedis jedis = redisUtil . getJedis () ; jedis . hset ( "table" , ( ( ( "" + ( tbl . getDbName () ) ) + "." ) + ( tbl . getTableName () ) ) , tbls ) ; }
try { if ( ( service ) != null ) { count = service . targetAlarmCount () ; } } catch ( android.os.RemoteException e ) { return; } finally { handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { notifyService . unbind () ; } } ) ; }
private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.length ) ; byte [] seqNumArray = new byte [ Packet.length ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
{ int prev_level = rooms_list . get ( roomID ) . getLevel () ; rooms_list . get ( roomID ) . lower () ; if ( prev_level > ( rooms_list . get ( roomID ) . getLevel () ) ) return true ; else return false ; }
i = 1
{ for ( Utils.DataVector vector : data ) { java.util.List < java.lang.Integer > treePred : = new java.util.ArrayList ( data . size () ) ; for ( RandomForestHOG.DecisionTree.DecisionTree tree : dTree ) { int curPrediction = tree . classify ( vector ) ; treePred ) . add ( curPrediction ) ; } if ( calAccuracy ) { calAccuracy () ; } return finalPred : ; } }
{ int userEdited = 0 ; for ( int i = 0 ; i < ( backup.length ) ; i ++ ) { if ( ( ( backup [ i ] ) != ( Cell.NONE ) ) && ( ! ( mCells [ i ] . isLocked () ) ) ) { backup [ i ] = Cell.NONE ; userEdited ++ ; } } }
{ for ( int i = ( piece . getY () ) + 1 ; i < newY ; i ++ ) { int moveCounter = 1 ; if ( tileHasPiece ( ( ( piece . getX () ) + moveCounter ) , i ) ) return true ; moveCounter ++ ; } return false ; }
{ java.lang.System.out . println ( ( "Data addr=" + ( dataAddr ) ) ) ; int size = spriteData.length ; int bankBytesLeft = ( SpritesTo model.BANK_SIZE ) - ( ( dataAddr ) % ( SpritesTo model.BANK_SIZE ) ) ; if ( bankBytesLeft < size ) { dataAddr += bankBytesLeft + ( SpritesTo model.HEADER_SIZE ) ; } writeIndex ( dataAddr ) ; dataAddr += writeBytes ( break; }
{ int pageNumber = 1 ; int pageSize = org.bright.sepe.Tool . getPageSize ( "type ) ; java.lang.String name = "" ; org.smart4j.framework.dao.bean.Pager < org.bright.sepe.entity.Notice > noticePager = noticeService . getNoticePager ( pageNumber , pageSize , name ) ; return new org.smart4j.framework.mvc.bean.View () ; }
private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
{ if ( ( ( ( ( double ) ( sent1 ) ) * 0.5 ) ) == 0 ) { return null ; } else { double t = ( ( ( ( ( double ) ( 0 ) ) * 10 ) ) * 10 ; double w = ( ( ( ( ( ( ( ( double ) ( sent1 ) ) * 0.5 ) + 1 ) * 0.5 ) ) * 0.5 ) ) * 10 ; } java.lang.System.out . println ( ( ( t + w ) + y ) / 3 ) ; java.lang.System.out . println ( ( "fireindex: " + ( ( ( - 1 ) * 0.5 ) ) ) ) ; return ( ( t + w ) + y ) / 3 ; }
{ int idx = ( ( gridPos.y ) * ( gridRows ) ) + ( gridPos.x ) ; if ( ! ( map . containsKey ( idx ) ) ) { log . info ( "Could not remove. Key is not in buffer." ) ; return; } if ( gridPos . equals ( relativeOrigin ) ) { log . info ( "Removing current relative origin requires the relative origin to be updated." ) ; log . info ( "Updating relative origin..." ) ; this . updateRelativeOrigin () ; } map . remove ( idx ) ; }
{ java.sql.ResultSet rs = executeQuery ( sql ) ; try { id = rs . getInt ( "ID" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return id ; }
{ mMeetingPagerAdapter = result ; mBinding.activityLoading . setVisibility ( View.GONE ) ; mBinding.pager . setAdapter ( mMeetingPagerAdapter ) ; int position = mMeetingPagerAdapter . getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log . v ( TAG , ( ( ( "meeting " + ( mMeetingId ) ) + " is on page " ) + position ) ) ; mBinding.pager . setCurrentItem ( position ) ; }
{ network.ServerSocketCreator create = new network.ServerSocketCreator () ; java.lang.Thread serverSock = new java.lang.Thread ( create ) ; serverSock . start () ; java.util.Scanner read = new java.util.Scanner ( java.lang.System.in ) ; char input = 'N' ; while ( input != 'Y' ) { java.lang.System.out . println ( "Would you like to stop the server? Y/N" ) ; input = read . nextLine () . charAt ( 0 ) ; } read . close () ; create . terminate () ; }
if ( alleleAssay . getId () . equals ( selectedAlleleAssay . getId () ) ) { isNotFound = false ; break; }
private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: release(): Releasing all HXSoundEngine instances..." ) ; if ( ( hxSoundEngines ) != null ) { int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . release () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: release(): HXSoundEngine (" + i ) + ") is released." ) ) ; i ++ ; } hxSoundEngines = null ; } }
{ java.util.List < com.ryan.pojo.ChunkInfo > chunkList = new java.util.ArrayList <> () ; int currentPos = this . chunkId ; ( this . chunkId ) ++ ; while ( true ) { if ( currentPos >= ( list . size () ) ) { return chunkList ; } else { key . set ( currentPos ) ; chunkList . add ( nextKeyValue ( currentPos ) ) ; } } }
if ( highestSlot <= 9 ) { return 9 ; } else if ( highestSlot < 18 ) { return 18 ; } else if ( highestSlot < 36 ) { return 27 ; } else if ( highestSlot < 36 ) { return 36 ; } else if ( highestSlot < 45 ) { return 45 ; } else { return 45 ; }
{ boolean prevState = isMultiblockStructurePresent () ; if ( ! ( prevState ) ) { makeo.gadomancy.common.utils.MultiblockHelper.MultiblockPattern patternToCheck ; if ( prevState ) { if ( isInMultiblock () ) { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.completeNodeManipulatorMultiblock ; } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock ; } this . multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper . isMultiblockPresent ( worldObj , xCoord , yCoord , zCoord , patternToCheck ) ; } } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock ; } }
{ if ( ! ( bound ) ) bind () ; org.avuna.httpd.util.Logger . log ( "accepting" ) ; java.lang.String nsfd = org.avuna.httpd.util.CLib . accept ( sockfd ) ; org.avuna.httpd.util.Logger . log ( nsfd ) ; int i = java.lang.Integer . parseInt ( nsfd . substring ( 0 , nsfd . indexOf ( "/" ) ) ) ; nsfd = nsfd . substring ( ( ( nsfd . indexOf ( "/" ) ) + 1 ) ) ; return us ; }
org.usfirst.frc.team68.robot.RobotMap.intakePositions [ index ]
{ int j = 0 ; for ( int i = 0 ; i < 256 ; i ++ ) { j = ( ( j + ( S [ i ] ) ) + ( key [ ( i % ( key.length ) ) ] ) ) % 256 ; int temp = S [ i ] ; S [ i ] = S [ j ] ; S [ j ] = temp ; } }
{ com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity () ; double [] array = new double [ 7 ] ; int count = 0 ; while ( count != 6 ) { array [ count ] = 10 * count ; count ++ ; } double weekly = step . stepAvgWeek ( array ) ; assertTrue ( ( ( weekly == 1 ) || ( weekly == 30 ) ) ) ; }
public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; }
public static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; }
{ int fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "/" ) ; if ( fileNameIndex == ( - 1 ) ) { fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "\\" ) ; } java.lang.String output = directory + ( VCF_FILE_PATH . substring ( fileNameIndex ) ) ; return output . substring ( 0 , ( ( output . length () ) - 3 ) ) ; }
speed <= 0
{ if ( content == null ) { throw new java.lang.IllegalArgumentException ( "Content cannot be null!" ) ; } char [] chars = sune.util.ssdf2.SSDF . formatContent ( content . toCharArray () ) ; return ( ( sune.util.ssdf2.SSDCollection ) ( sune.util.ssdf2.SSDF . readObjects ( chars , 0 , chars.length , null , false , false ) . get ( null ) ) ) ; }
{ java.lang.String searchUsername ; java.lang.String username = searchUsername = user . getUsername () ; int i = 0 ; while ( ( userService . getIdByUsername ( searchUsername ) ) != null ) { i ++ ; searchUsername = username + i ; } }
( - 1 ) > ( i - 1 )
{ com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel model = ( ( com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel ) ( observable ) ) ; int percentage = model . getPercentageGenerated () ; java.lang.String statusMessage = model . getStatusMessage () ; this . progressLabel . setText ( statusMessage ) ; this . progressBar . setValue ( percentage ) ; this . progressBar . setString ( ( ( progressBar . getValue () ) + "%" ) ) ; }
{ final int offset2 = offset - ( this . length () ) ; if ( offset2 >= 0 ) return array . section ( offset2 , length ) ; final int length2 = offset2 + length ; if ( length2 <= 0 ) return super . section ( offset , length ) ; return super . section ( offset , ( - offset2 ) ) . concat ( array . section ( 0 , offset2 ) ) ; }
{ final long stopStartTime = java.lang.System . nanoTime () ; state = org.webrtc.Camera1Session.SessionState.STOPPED ; stopInternal () ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopStartTime ) ) ) ) ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( stopTimeMs ) ; }
{ int listIndex = getListArg ( com.rfo.basic.Run.list_is_string ) ; if ( listIndex < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; java.util.ArrayList < java.lang.String > theList = com.rfo.basic.Run.theLists . get ( listIndex ) ; for ( java.lang.String zone : java.util.TimeZone . getAvailableIDs () ) { theList . add ( zone ) ; } return true ; }
private long getSerialData ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; if ( metaClass != null ) { for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serial view += ( serialData * 31 ) + ( property . getName () . hashCode () ) ; } return serial ; } }
{ int hoursNotScheduled = 0 ; for ( int i = 1 ; i < 37 ; i ++ ) { for ( int j = 0 ; j < 7 ; j ++ ) { if ( ( offices.officeReq . get ( i ) . get ( j ) ) >= 0 ) { hoursNotScheduled += offices.officeReq . get ( i ) . get ( j ) ; } } } return hoursNotScheduled ; }
{ int playlistId = java.lang.Integer . parseInt ( pUri . getQueryParameter ( "playlistId" ) ) ; java.util.HashMap transactions = this . mTransactionActions . get ( ServicePlayback.CUSTOM_ACTION__DELETE_PLAYLIST ) ; android.support.v4.media.MediaBrowserCompat.MediaItem mediaItem = ( ( android.support.v4.media.MediaBrowserCompat.MediaItem ) ( transactions . get ( playlistId ) ) ) ; transactions . removeMediaItem ( mediaItem ) ; }
count = getFragmentManager () . getBackStackEntryCount ()
{ double rn = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . cos ( getAngle () ) ) ; double in = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . sin ( getAngle () ) ) ; }
public boolean storeCredentials ( java.lang.String appName , java.lang.String []User , java.lang.String []Password ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . build () ; return true ; } catch ( org.springframework.dao.Duplicate offset e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } }
if ( aY > bY ) { y = bY - aY ; } else { y = aY bY ; }
{ if ( v == null ) { return; } for ( Graph.Vertex < java.lang.Integer > v : lowDegreeVertices ) { graph . removeVertex ( graph . getVertexWithElement ( v . getElement () ) ) ; } long stoptime = java.lang.System . currentTimeMillis () ; }
row = java.lang.Math . abs ( me , ms )
( depth ++ )
com.example.saksham.overlayscreenshort.PlaylistAdapter . changeActiveItemBackground ( sharedPreferences . getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , ( - 1 ) ) , temp )
public static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; }
{ todolist.Todo newTodo = new todolist.Todo ( ( "Task " + ( java.lang.Integer . toString ( numAdded ) ) ) ) ; list . addTodo ( newTodo ) ; numAdded ++ ; }
{ int y = field . getCoordinate_y () ; int x = field . getCoordinate_x () ; dk.eax.graphics.Ellipse el double = new dk.eax.graphics.Ellipse ( x , y , 200 , 200 ) ; el . draw () ; field . setToken ( this ) ; return true ; }
{ int _bitwiseXor = hash ^ b ; hash = _bitwiseXor ; hash = hash * 16777619 ; }
{ if ( ( element . length () ) > 0 ) result = new java.util.ArrayList < java.lang.Integer > () ; result = new java.util.ArrayList < java.lang.String > () ; result = res ; }
{ main.java.PlagiarismDetector plagiarismDetector = new main.java.PlagiarismDetector () ; main.java.PlagiarismService plagiarismService = new main.java.PlagiarismService () ; main.java.InputWrapper inputWrapper = plagiarismDetector . validateInput ( args ) ; double plagiarismRatio = plagiarismService . checkPlagiarism ( inputWrapper ) ; java.lang.System.out . println ( "---------------------------------------------------------------------------------------------" ) ; java.lang.System.out . println ( ( ( "Plagiarism )age is " + ( plagiarismRatio * 100 ) ) + " %" ) ) ; java.lang.System.out . println ( "---------------------------------------------------------------------------------------------" ) ; }
{ final int cameraType = ( ( captureType ) == ( com.onfido.android.sdk.capture.ui.CaptureType.FACE ) ) ? Camera.CameraInfo.CAMERA_FACING_FRONT : Camera.CameraInfo.CAMERA_FACING_BACK ; camera = android.hardware.Camera . open ( cameraType ) ; }
b || ( ! ( s . update () ) )
{ deleteLobby () ; lobbies . remove ( getLobbyName () ) ; result = true ; }
{ long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; if ( ( db ) != null ) { long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; } return id ; }
public void backupAllMenuItemAction () { if ( ( vocabLists ) != null ) { int response = mainView . showConfirmationDialog ( "Back up vocab files" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabList mapFile ( vlist , file ) ; } } } }
{ byte [] buffer = new byte [ 1024 ] ; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream () ; java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( file ) ; while ( true ) { int read = fileInputStream . read ( buffer ) ; if ( read == ( - 1 ) ) break; bytes . write ( buffer , 0 , read ) ; } fileInputStream . close () ; }
{ int size = in . readInt () ; shortestpath = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { shortestpath [ i ] = in . readInt () ; } }
new org.apache.cassandra.db.RowIndexEntry.IndexedEntry ( position )
public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long )Time = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( java.util.Locale locale ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; }
if ( buildValue1 > buildValue2 ) { java.lang.System.out . print ( "Player 1 wins" ) ; } else if ( buildValue1 == buildValue2 ) { week1Problems.P6 . compareHigh ( x , y ) ; } else { java.lang.System.out . print ( "Player 2 wins" ) ; }
{ if ( keepCurrent ) { newSpeak += java.lang.String . valueOf ( word . charAt ( i ) ) ; keepCurrent = false ; } else { keepCurrent = true ; } }
public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , card ) ; break; case 1 : val = this . indexOf ( hearts , card ) ; break; case 2 : val = this . indexOf ( clubs , card ) ; break; case 3 : val = this . indexOf ( diamonds , card ) ; break; default: val = 0 ; } return val ; }
{ java.util.ArrayList < java.lang.String > inputParts = breakString ( rawInput ) ; int taskID = convertToInt ( getTaskParts ) ; java.lang.String date = getDateFromRaw ( inputParts ) ; if ( isInvalidID ( taskID ) ) { return false ; } logic . editTask ( taskID , date ) ; return true ; }
{ boolean assert_ = false ; try { spreadsheet.mapper.utils.FieldUtils . subtractBusinessKey ( "test.int1" ) ; } catch ( java.lang.IllegalArgumentException e ) { spreadsheet.mapper.utils.FieldUtilsTest.LOGGER . debug ( "\'test.int1\' not business key" ) ; if ( e . getMessage () . contains ( "business key" ) ) { assert_ = true ; } } org.testng.Assert . assertTrue ( assert_ ) ; }
private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; }
{ int templateID = java.lang.Integer . parseInt ( ( ( java.lang.String ) ( mobData . get ( "templateID" ) ) ) ) ; mob . setTemplateID ( templateID ) ; }
{ java.lang.String sDelay = settings . getString ( "idTimerMins" , com.givenhansco.keystonenavigation.Activities.MainMenuActivity.DEFAULT_TIMER_DELAY ) ; try { delay = java.lang.Long . parseLong ( sDelay ) ; } catch ( java.lang.Exception e ) { delay = > ; } android.util.Log . i ( com.givenhansco.keystonenavigation.Activities.MainMenuActivity.TAG , ( "timerDelay : " + delay ) ) ; if ( delay != 0 ) { delay = ( 1000 * 60 ) * delay ; } }
{ int written = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( length , data.length ) ) ; i ++ ) { if ( ( writeBitsRaw ( org.q3df.demo.Q3HuffmanCoder.huff_paths [ ( 255 & ( data [ i ] ) ) ] , org.q3df.demo.Q3HuffmanCoder.sym_size [ ( 255 & ( data [ i ] ) ) ] ) ) > 0 ) { written ++ ; } else break; } return written ; }
private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; }
{ android.location.Location currentLocation = com.mobilemakers.juansoler.appradar.StartScreenFragment . getLastLocation () ; if ( currentLocation == null ) { return - 1 ; } android.location.Location nextLocation = createTheNextLocation ( latitude , longitude ) ; float distance = ( currentLocation . distanceTo ( nextLocation ) ) / 1000 ; return new java.math.BigDecimal ( distance ) . setScale ( 1 , java.math.BigDecimal.ROUND_HALF_UP ) . floatValue () ; }
void addInterval ( com.example.map.ari.workoutclass.exerciseObjects.Interval interval ) { if ( intervalViewToAdd ( null ) ) { return; } int pos = context . getChildCount () ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } }
{ currentQuestion = quiz . nextQuestion () ; if ( ( currentQuestion ) == null ) { currentState = backend.GameState.GAME_OVER ; return false ; } lblCurrentQ . setText ( currentQuestion . getQ () ) ; int index = 0 ; for ( java.lang.String ans : currentQuestion . getAnswers () ) { answers [ index ] . setText ( ans ) ; index ++ ; } lblTime . setText ( java.lang.Integer . toString ( currentQuestion . getTimeLimit () ) ) ; }
{ if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } }
public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; }
i = ( ( int ) ( ( ( java.lang.Math . random () ) * 33 ) % ( ( com.coollooks.Util.tShirtPathList . size () ) - 1 ) ) )
{ int flags = communication.utils.NumberParser . intToByte ( data [ 0 ] ) ; int sessionId = communication.utils.NumberParser . intToByte ( data [ 1 ] ) ; byte [] newData = java.util.Arrays . copyOfRange ( data , 2 , data.length ) ; return new communication.pdu.SessionPDU ( flags , sessionId , new communication.pdu.PDU ( newData ) ) ; }
float minSpread = 0 ;
{ int count = 0 ; int contentLength = content . length () ; for ( int i = 0 ; i < contentLength ; i ++ ) { if ( charForSearch == ( content . charAt ( i ) ) ) { count ++ ; } } return count ; }
private double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
{ long time_start = java.lang.System . currentTimeMillis () ; }
public static double appendToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; }
if ( quantity <= ( getMaximumQuantity () ) ) { subgroupsQuantityLayout . setError ( getString ( R.string.nwinners_msg_validate_quantity , group . getItemCount () ) ) ; requestFocus ( subgroupsQuantity ) ; return false ; }
private static boolean trimByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
