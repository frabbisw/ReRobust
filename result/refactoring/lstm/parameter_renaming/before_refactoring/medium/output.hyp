@ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.util.List < java.lang.String > , java.util.jar ) { refreshDirectory ( java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + height ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } }
private boolean find ( java.lang.String findWhat , boolean 1 ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; }
public void readJsonStream ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } }
public java.io.File getComponentFile ( java.io.File pathFile , java.lang.String view ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , view , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } }
public java.util.List < ca.ubc.ece.cpen221.mp3. ).Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3. ) { java.util.LinkedList < ca.ubc.ece.cpen221.mp3. ).Vertex > new java.util.ArrayList < ca.ubc.ece.cpen221.mp3. =.Vertex > () ; for ( java.util.List < java.lang.String > vertices : nodeList ) { for ( java.lang.String vertex : vertices ) { if ( ( v . getLabel () ) == vertex ) { (NeighboursList . add ( new ca.ubc.ece.cpen221.mp3. ).Vertex ( vertexList ) ) ; } } } return new java.util.ArrayList <> () ; }
private static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_Object : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } }
private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; }
@ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; }
public java.lang.Long requestBook ( java.lang.Long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; }
@ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
private voidExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().ModuleExclusion two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().ModuleExclusion two ) && ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().IntersectionExclusion ) ) == 0 ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().IntersectionExclusion ) ( two ) ) ) ; } return two ; }
private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; }
public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceType (PluginException { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return false ; } else { registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } }
private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.js >.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.js =.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
public static void printResult ( double [] [] reuslt ) { int histWidth = reuslt.length ; int histHeight = reuslt [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } }
private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } return result ; }
public static com.izik.recipebook.Model instance ( android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; return com.izik.recipebook.Model.instance ; }
public void printGrid ( java.lang.String [] [] gridDis ) { for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "" ) ; }
public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; }
@ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; }
private java.lang.String decrypt ( java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Dec com error for key: '%s'. Item will be removed" , value ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Item removed for key: '%s'. Item will be removed" , value ) ; removeItem ( value ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , value ) ) ; } } return null ; }
@ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE ( java.lang.String baseUrl ) throws java.lang.InterruptedException { logger . info ( "[TEST .]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; }
public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
public static void main ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; main.Files2Facts filesAM .RDF = new main.Files2Facts () ; try { filesAM .RDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAM .RDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB.uctiveDB = new main.DeductiveDB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
private void addRecord ( java.lang.String newkey , java.lang.String newkey , java.lang.String path ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () ) ) ; else if ( ! ( oldList . contains ( to ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( to ) ; map . put ( newkey , newList ) ; } }
public void onRequest ( java.sql.Timestamp time ) { ( requestTotal ) ++ ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } }
public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , filename . length () ) ) ; else connField . setText ( filename ) ; }
public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > idList ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; }
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e . getModifiers () ; boolean ctrlDown = ( modifier & ctrlMod ) != 0 ; this . cam_zoom_increase () ; return; }
public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list = new java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > () ; if ( SP . getBoolean ( context . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( context , hidden ) ) ; } }
public static java.lang.String fetchWebpageData ( java.lang.String requestUrl , android.content.Context context ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "ProblemEvent the HTTP request." ; } return response ; }
@ java.lang.Override protected void listItemClicked ( int position ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , id ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; }
private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "A game" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; }
@ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) , id ) { jdbclib.IConnector db = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; } return user ; }
private static java.lang.String escapeAndConvertToSQL ( java.lang.String value ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysUnknown ? ( "%" + ret ) + "%" : ret ; }
public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand != null ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power ; behavior of thing state{0}''" + ( " is javafx to be a read only value. " + "No command is executed!" ) ) , this . getP my () . getName () ) ; } } else { if ( value != null ) { setChanged ( true ) ; } } }
private void writeImports ( java.io.Writer writer , java.lang.String className , java.lang.Class baseClazz ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor . getPackageName ( className ) ; if ( ! ( currentPackageName . isEmpty () ) ) { writer . append ( "package " ) . append ( currentPackageName ) . append ( ";" ) . append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } }
public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { updateStorageLocation ( ctx ) ; return; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; }
private boolean canDelete ( org.eclipse.core.resources.IResource [] resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; }
@ java.lang.Override protected boolean onBal ( int index , com.google.android.maps.OverlayItem item ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; return true ; }
public boolean set ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) == ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; }
public void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { if ( com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } }
public void initProgram ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( vertexCode , fragCode ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; }
public static < T > java.util.List < T > toList ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; }
public java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; }
private static void put ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
private boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String filePath = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; java.lang.System.out . println ( ( ( ( ( filePath ) == null ) || ( ( filePath . length () ) == 0 ) ) ) || ( ( ( filePath ) == null ) && ( ( filePath ) == null ) ) ) ; }
void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } }
@ java.lang.Override protected void run ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace , final io.paradoxical.cassieq.ServiceConfiguration configuration , final io.paradoxical.cassieq.ServiceConfiguration configuration ) throws java.lang.Exception { io.paradoxical.cassieq.commands.SetupDbCommand . finishDatabase ( dbRunnerConfig ) ; io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; }
public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } }
private int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '^' ) return 30 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }
private static void initializeRoom ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , rightDoorWidth , hasObstacle ) ; }
protected javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; }
public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist: =====" + ( productsList . size () ) ) ) ; return mv ; }
private void presentNotificationsList ( java.lang.String url , final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.DataARSDKController . getInstance () . presentNotificationsList () ; } }
public void sendEmail ( java.util.List < java.lang.String > , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInst ( getLocation ( transmissionType , new org.recap.camel.EmailPayLoad () ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; }
public void putAll ( java.util.HashMap < java.lang.String , K > add ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = add . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } }
@ java.lang.Override public void positionModifierChange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; }
public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; }
public double distance ( geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; }
public void add ( int index , long element ) { this . boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; }
public static java.util.Date getLatestDate ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; }
@ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } }
@ java.lang.Override public void onSuccess ( java.lang.Void result ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; }
public void assertEquals ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; }
@ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , double motionX , double motionY , double motionZ , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; entity.motionZ = motionZ ; }
public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.DateCTR dateCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( typeRepeat ) { case 'D' : return dateCTR . addDayInDate ( date ) ; case 'M' : return dateCTR . addMonthInDate ( date ) ; case 'A' : return dateCTR . addYearInDate ( date ) ; default: return date ; } }
private java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }
public java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; }
public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } }
public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } }
private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bit.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , case_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( this_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } }
public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_mail ) . getUser_id () ; } return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_mail ) . getUser_id () ; }
@ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , response . getOutputStream () ) ; }
public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long id ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . getArticleDetailById ( id ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "id" ) . toString () ) ) ) ; return article ; }
private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } }
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; onLocationChaged ( curLatitude , curLongitude ) ; }
private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
public java.lang.Iterable < org.matsim.api.core.v01.Id
private void addCover ( org.ernest.applications.dmc.report.builders.Document document , org.ernest.applications.dmc.domain.Region region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; }
private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; }
@ java.lang.SuppressWarnings ( value = "unchecked" ) public static org.opendaylight.genius.mdsalutil.packet.E total createE []Packet ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP ) throws org.opendaylight.controller.libl ..PacketException { org.opendaylight.genius.mdsalutil.packet.E > > = new org.opendaylight.genius.mdsalutil.packet.E > () ; java.lang.System.out . println ( sourceMAC ) ; java.lang.System.out . println ( targetMAC ) ; java.lang.System.out . println ( targetMAC ) ; java.lang.System.out . println ( targetMAC ) ; java.lang.System.out . println ( targetMAC ) ; }
public static java.io.File findExe ( java.io.File root , java.lang.String exe ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; }
private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node.p , (X + 1 ) ) ; if ( cmp < 0 ) return contains ( node.lb , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else return node.p . equals ( p ) ; }
public java.util.Map < java.lang.String , double [] > fetchTrace ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( channelNumber - 1 ) ) . getXAxis () ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; }
private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( assignment , copy ) ; return copy ; }
public org.apollo.game.model.Position fromDeltas ( int deltaX ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + b ) , ( ( getHeight () ) + deltaZ ) ) ; }
public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; }
public void printTree ( DataStructure.RBTNode < T > node ) { if ( node == ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) ) ) { printTree ( node.right ) ; } }
public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 1 {F ; break; case 3 : zoom = mF ; break; case 4 : zoom = null ; break; case 5 : zoom = nullF ; break; } return zoom ; } return zoom ; }
public java.util.List < java.lang.Object > > find ( java.util.List < java.lang.String > relations , java.lang.Class clazz ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; }
public boolean monsterExist ( game.zork.Monster monster ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; }
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; }
@ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; if ( binOp ) { append ( " " ) ; } }
public java.math.BigInteger getNum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . getNum ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } }
private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl != null ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } }
public boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }
public java.time.LocalDate resultToDate ( java.lang.String inputDateStr , java.lang.String inputPattern ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () ; return null ; }
@ java.lang.Override public java.lang.Boolean execute ( java.lang.Object . . . args ) { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IM ( ) . execute () . getRefreshPolicy ( WriteRequest.RefreshPolicy.IM ( ) . execute () . m () ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; }
@ java.lang.Override public void onNext ( manoilo.catsapiandroidclient.model.Cat cat ) { getCatImgUrl ( cat ) ; }
private java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; }
public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connectorStatusLock . lock () ; }
public synchronized void removePlayer ( CardGame.User user ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem doc ) { org.datasays.wes.vo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { org.datasays.wes.vo.EsItem newdoc = esService . save ( doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; }
public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( file ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , null ) ; return false ; }
pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + key ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; }
public static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } return sb . toString () ; }
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } }
protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout treeLayout , boolean keepColumnStatus ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , treeLayout , keepColumnStatus ) ; } }
private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; }
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } }
private void openChat ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }
public int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( fileName ) ) return di ; } return - 1 ; }
@ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; }
@ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; }
public void addDoctor ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; }
public void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } setupStep += 1 ; }
private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; }
@ java.lang.Override public double error ( double t ) { double amount = ( this . amount ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; }
public static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; }
private void setStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } }
static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . size_guard_ ( b , l , "cypher" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; }
@ java.lang.Override public void add ( com.ivstuart.tmud.person.carried.Money money ) { if ( list == null ) { return; } java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . add ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return; } } money <= . add ( money ) ; }
boolean conditionIsTrue ( utilties.models.Game game ) { int data1 = getData ( this . data1 , game ) ; int data2 = getData ( this . data2 , game ) ; switch ( this . operator ) { case LESS_THAN : return data1
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( long startTS , backtype.storm.tuple.Tuple input ) { operator.merger. 6Entry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( startTS , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } }
public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations qSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|Throwable.*|p.*|.*|.*\\.pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String le = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( le.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( aNode ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; }
public void uiautomator_switcher ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { tap ( s ) ; if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action . equals ( "TYPE" ) ) {} }
public org.apache.commons.math3.linear.RealMatrix getCovObject ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovObjectMatrix () ; }
@ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.Long idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; }
public void voteThreshold ( int downVotedTrack ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } }
@ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { genericValues [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } }
public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest , triggerOnPipelineEvent ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } }
public java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; }
@ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long memberId , org.springframework.ui.Model model ) { if ( bookId > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; }
private void fillCart ( int elementPosition , int commandCount ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; }
void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services ) { java.util.Collection < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; }
private void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.thepro.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.thepro ..PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.thepro ..Block block = new com.waterfall.thomaswatson.thepro ..Block ( context ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.thepro ..PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.thepro ..PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } }
public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; }
public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () , event . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( event . getPlayer () , plugin . getSessionManager () . getSession ( event . getPlayer () ) ) ; }
public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . asyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > async : asyncs ) { results . add ( async . complete () ) ; } return results ; }
@ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int getTint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; }
void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } }
private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = 0 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; }
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( ! ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; }
@ java.lang.Override public void instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; }
public void setLatestItem ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } this . incrementCounter () ; }
public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAn imageWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; }
public synchronized java.util.List < java.lang.String > getJobConsole ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; }
private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; }
@ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { if ( ( loadedMaximList . size () ) == 0 ) { return; } if ( ( loadedMaximList . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( loadedMaximList ) ; } }
protected void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; }
public static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }
public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . isEmpty ( spec . getTypes () ) ) { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . isEmpty ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } }
private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( path , java.nio.file.Path path ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( path . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( path . toAbsolutePath () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( path ) ) . build () ) ; }
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } }
private org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperand ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; }
@ java.lang.Override protected void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) { ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } }
public void spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) ; updateGeneratedImage () ; }
private void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { this . historySearch . add ( sq ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } }
public org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; }
private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; }
public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; }
private void showLatLonPicker ( final de.k3b.database.QueryParameter currentDirContentQuery ) { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , "Util.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } }
@ java.lang.Override public T get ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( i > 0 ) { current = current . getNext () ; i -- ; } return current . getObject () ; }
public void controller ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService inputMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = inputMessageExceptionsService . getMessageById ( messageId ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) model . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage inputMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , false ) ; } }
@ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
@ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { if ( ! ( ( ( ( this . allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersread ( - 1 ) ) ) || ( allowEscapesForControlCharacters ) ) ) { log ( ast . getLineNo () ) ; } else { log ( ast . getLineNo () ) ; } }
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) { if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; }
private void mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; }
static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] list , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.down ) + 1 ) >= ( ( w.start.across ] . length ) - 1 ) ; } return ( w.start.across ) + 1 ; }
@ java.lang.Override public void migrate ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) {} }
com.google.javascript.jscomp.newtypes.FunctionType ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType .h ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } }
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }
public int getIndexFromValue ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) return i ; } return 0 ; }
@ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; }
@ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList list , java.lang.Object value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( value ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; }
public static com.rgi.android.geop <.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geoping.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopJ.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geoping.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} }
@ com.name.banApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( java.lang.String "redirect:/section" ) public org.springframework.web.servlet.ModelAndView AddSection ( java.lang.String "redirect:/section" ) { if ( courseID . isEmpty () ) { return null ; } else { com.name.nameApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.name.nameApplication.entities.Section n = new com.name. textApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; }
public boolean addNetworkUser ( java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return false ; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; return true ; }
public void add ( java.lang.String type , this . heap . get ( getParent ( index ) ) ) { heap . add ( false ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( false ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , false ) ; } }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOn ) { runArtificialFlash () ; makeToast ( "Artificial dataing" ) ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; }
public com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; }
public void getTextFromActivity ( android.view.View view ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; }
private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; }
@ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; }
public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } }
private boolean matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { return ( transaction != null ) && ( matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ) ; }
public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; }
public void actionPerformed ( java.awt.event.ActionEvent evt ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; }
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( position > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } }
public static void setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; } }
private traer.physics.Particle createParticle ( int x , int y ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE ) ; } return newParticle ; }
public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } if ( folder != null ) { if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } } if ( folder != null ) { folder . open ( id ) ; } }
public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } }
public com.bagri.core.system.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( com.bagri.core.system.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; }
protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; }
public void addItem ( item.Item i ) { if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += i.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } }
@ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull final java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull
public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures , lastUpdated ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setLastUpdated ( structures ) ; spotsListAdapter . setLastUpdated ( lastUpdated ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; }
public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } }
public java.util.Collection getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } }
public synchronized java.lang.String getSpeed ( long size ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum= 0dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; }
public static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; }
static java.lang.String minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { action = a ; } } return action ; }
public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . size () ; } } } return null ; }
public java.lang.Integer getPortForBridge ( java.lang.Integer for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( de.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) ) { return link . getBridgePort () ; } } return null ; } return null ; }
public static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; }
public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } }
public boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; }
public int xToPixel ( double x , mes , ( chart . getFieldWidth () ) ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( false , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; }
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; }
@ java.lang.Override public boolean checkImpl ( wjtoth.cyclicIndexmatching.PreferenceSystem preferenceSystem ) { if ( matchings != null ) { for ( wjtoth.cyclicIndexmatching.Matching matching : matchings ) { wjtoth.cyclicIndexmatching.MatchingPS mathcingPS = new wjtoth.cyclicIndexmatching.MatchingPS ( matching , preferenceSystem ) ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDiss () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } } } return false ; }
public static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; }
public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; }
private static weka.core.Instances loadTestFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( fileName ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }
private void init ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; }
public void show ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
public java.lang.StringByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } }
static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } }
private void isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } }
@ java.lang.SuppressWarnings ( value = "unchecked" ) public static games.strategy. (a.ai.proAI.data.ProBattleResult callBattleCalculator ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { return games.strategy. true ; }
public static void toh ( int n , char src , char dest , char aux ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , dest , aux ) ; } }
public void setNode ( model.ClassNode person ) { this . node = person ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; }
public void addCampaign ( snId ) throws java.lang.Exception { deleteCampaign ( new java.util.ArrayList < java.lang.String > () ) ; deleteCampaign ( new java.util.ArrayList < java.lang.String > () ) ; com.xrtb.common.CampaignUser = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( new java.lang.Exception ( ( ( "Campaign " + snId ) + " does not exist in database" ) ) ; }
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( j_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestBody ( required = false ) com.dataloom.data.requests.EntitySetSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , req , fileType ) ; }
private void seekTo ( int seekto ) { android.util.Log . d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG , "seekTo" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunsai.mymusicplayer.service.MusicService . class ) ; intent . setAction ( "SEEK_TO" , seekto ) ; startService ( intent ) ; }
private void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_util" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; }
public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + etiquette ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) , ( ( indent ) + 1 ) ) ;
public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; }
public boolean isPrime ( java.lang.String number ) { if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } if ( number == 2 ) { return true ; } if ( number == 2 ) { return true ; } else { oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } } return true ; }
@ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPol.s () ) ) ; }
public static java.lang.Boolean attachAssetToAccount ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( accountUuid ) ; java.lang.System.out . println ( assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; }
private void validateHeader ( final org.milyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; }
private void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_ ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; }
private void makeBestMove () { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; }
private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( java.lang.Double timeStep , java.lang.Double timeStep ) throws java.lang.Exception { tum.cms.sim..um.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim..um.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; }
public void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } }
public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } }
public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType ) ; }
@ org.w2fc.geoportal.ws.aspect.After ( value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" , java.lang.String messageObject)))" ) public void aroundCreate () { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; }
public static void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) ) ) ) ; }
public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence text , int offset ) { if ( ( text . length () ) == 0 ) return "" ; if ( offset > 0 ) { return text . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; }
public int hash ( V value ) { int hash = 0 ; switch ( hashFunction ) { case "add .Hash" : hash = add .Hash ( value ) ; break; case "rotationalHash" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
private void doNext ( int requestCode , int [] grantResults ) { if ( requestCode == ( - 1 ) ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission ()ied" ) ; } } }
private algo.BSTMap < K , V > . Node findMinNode () { algo.BSTMap < K , V > . Node parent = node ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } }
@ java.lang.Override public void onClick ( android.view.View v ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; }
public boolean isIE7 ( java.lang.String userAgent ) { if ( userAgent != null ) { if ( ( ( ( userAgent . contains ( "; MSIEsh ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { return true ; } } return false ; }
void setEndDate ( int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormatour_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = color_FORMAT . format ( date ) ; }
public void initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + gameStarted ) + "\n" ) ) ; inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } }
public void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; }
public static int getValidThreshold ( int threshold , boolean isSelected , java.lang.String text ) { if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; }
private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; } if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } }
public static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBased getContext () ) { final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } return result ; }
public void print ( java.lang.String map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . println ( map . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } }
public void setTemperature ( java.lang.String h ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; }
public void addWord ( java.lang.String word ) { for ( java.lang.Integer integer : new java.util.ArrayList < java.lang.String > () ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MsHash3 . mshash3x8632 ( word . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ] = true ; } }
private float sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } }
@ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; }
private void drawMon ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } }
public void causeDamage ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDef =Damage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDef )Damage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; if ( ! ( DamageType.BASIC_DAMAGE ) ) { damage = amount ; } causeRawDamage ( damage ) ; }
public java.lang.String getExtension ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; }
public void insertLoadRecord ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute get_dir query." , ex ) ; } }
@ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; }
private void onPostExecute ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } }
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageutil.util.Map . put ( languageName . get ( languageName ) . get ( languageName ) ) ; int language {InTenMins = tenMinLanguageMap . get ( languageName ) ; } } } }
private boolean containsLinkedResource ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( permissions . getPermission () ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } }
private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod invokedMethod , boolean reportCaller ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , true ) ; if ( reportCaller ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; }
public void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; }
private void updateStatus ( int trackToPlay , int status , int position ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; }
public final void parseInt ( android.support.v4.app.Fragment fragment , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; }
public void createLand ( int id , java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . createLand ( id , owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; }
public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus ) { if ( ( receiveThread ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; }
public static org.jfree.data.xy.XYSeriesCollection createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api. max.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; }
public void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpio.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; }
private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad t6 ) { java.util.List < edu.cmu.tetrad.search.IntSextad t3 , edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t6 ) ; return list ; }
private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } }
public void write ( java.lang.String out ) throws java.io.IOException { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; }
public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator , java.util.List < T > datas ) { this . mDatas = datas ; this . holderCreator = holderCreator ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( holderCreator , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; }
private static org.glassfish.jersey.internal.util.ReflectionHelper.Dec ()ClassInterfacePair getType ( java.lang.Class < ? > concrete , java.lang.Class < ? > class , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.Dec ()ClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . getType ( concrete , class , c , t ) ; if ( p != null ) { return p ; } } return null ; }
@ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } }
@ java.lang.Override public boolean onCanProcessClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } }
private void submitToErrorPort ( java.lang.Exception e ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > new java.util.ArrayList < com.ibm.streams.operator.OutputTuple > > (Output = getOutput ( 0 ) ) ; com.ibm.streams.operator.OutputTuple = null ; } try { if ( ! ( validErrorPort ) . getMessage () . isEmpty () ) { return null ; } } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } }
void removeBundleListener ( final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "newUser" , user . getUsername () ) ; org.launchcode.models.UserData . add ( user ) ; return "users/index" ; } else { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "error" , "Passwords do not match" ) ; model . addAttribute ( user ) ; return "users/add" ; } }
public static boolean collides ( int x , int y , int width , int height , com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( bounds . collides ( x , y , width , height ) ) { return true ; } } return false ; }
private void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < ?.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { entries . add ( order ) ; } else { entries . add ( order ) ; sideBook . put ( price , entries ) ; } }
public void swap ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ x1 ] [ y1 ] ; board [ x1 ] [ y1 ] = board [ x2 ] [ y2 ] ; board [ x2 ] [ y2 ] = temp ; }
private List < java.lang.String > getAllObjects ( java.lang.String path ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSum. () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; }
@ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target ) { if ( super . onStartNestedScroll ( parent , child , directTargetChild , target ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } }
public void setMinDateInMs ( long minDateInMs ) { synchronized ( this . minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSub iToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSub .ToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } }
void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { if ( params == null ) { return; } try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; java.lang.System.out . println ( java.lang.Integer . toString ( params . getBoolean ( "isOpenMessage :aming" ) ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessagePlugin.mCallback = callback ; }
public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; return words ; }
private java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; }
private boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + ( currAnswer ) ) ) ; if ( answer == ( currAnswer ) ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; }
private static boolean isHex ( char c ) { return ( ( ( c >= '0' ) && ( c <= java ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ) ; }
private void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } }
public void borrowBook () { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; } else { java.lang.System.out . println ( "Book not Found" ) ; } }
@ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; }
private void scannerQrCode ( android.app.Activity activity ) { if ( ( activity ) != null ) { com.google.zxing.integration.android.IntentIntegrator pagerator = new com.google.zxing.integration.android.IntentIntegrator ( activity ) ; if ( ( this . activity ) != null ) { if ( ( this . activity ) instanceof com.google.zxing.integration.android.IntentIntegrator ( activity ) ) { mDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; } } ifrator . setPrompt ( "Scan item" ) ; } ifrator . setCameraId ( 0 ) ; }
public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; }
@ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( pSceneTouchEvent . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; }
@ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { synchronized ( responseHandler ) { responseHandler . onSuccess ( reqId , header , sequence , result , type , taxonRank ) ; } } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } }
private boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; }
@ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { juja.microservices.teams.entity.Team team = teamService . dismissTeam ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; }
public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_AD.AL . toString () ) ) if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; }
@ java.lang.Override public boolean leaveGroup ( long courseId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , userId ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; }
public java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocomm.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; return null ;
public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( un ()Dir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) {} }
public void onPostExecute ( java.lang.Void result ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; }
@ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > request = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return true ; } return true ; }
@ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; return ( user . getPassword () ) == password ; }
public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos >= 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { mSelectedItems . put ( pos , selected ) ; view . setSelected ( true ) ; } else { mSelectedItems . delete ( pos ) ; view . setSelected ( false ) ; } } }
@ java.lang.Override protected synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; }
void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { int range = r - l ; if ( range > 0 ) { int m = l + ( range / 2 ) ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } }
@ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/user" ) public api.ConfirmationMessage user ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userTypeId" ) int userTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.String username , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return userLogic . addUser ( userTypeId , calamityAssigneeId , buildingId , username , password , email , city , token ) ; }
private static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; }
private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; entity . addChild ( child ) ; } return entity ; }
private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / ( ( milliseconds / 3600000 ) % 24 )00000 ; setText ( text ) ; }
private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; }
public void execute () { org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; }
@ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { synchronized ( fileObject ) { fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; }
private com.xebialabs.deployit.plugin.api.udm.Deployed
public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest request , final java.io.File file , final java.lang.String url ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( request , file , url ) ; } } ) ; }
public void decr ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } }
private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = mean ( array ) ; double sumOfDiffTo;Sq = 0 ; double length = array . size () ; for ( double i : array ) { double diffTovSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffTo;Sq += diffTovSq ; } double meanOfDiffs = sumOfDiffTo;Sq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; }
private javax.mail.Message [] searchMailbox () { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "In super ." ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return 1 ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } }
public static byte [] read ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; }
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; return ( id ) != ( other.id ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{ ]Id}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable java.util.PathVariable java.lang.String userId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( [Id , description ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.Transistors.logger . error ( te ) ; te . printStackTrace () ; throw te ; } }
@ java.lang.Override public void onResponse ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > "" = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( "" ) ) ; }
@ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHub . () ) ; } }
private long _daysLate ( com.born2go.lazzybee.db.Card card ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = card . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; }
private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
@ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . deleteNodeByNodeId ( nodeId , user ) ; node . setChildren ( null ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } }
@ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = child . getAttributeByName ( this . id ) ; if ( ( ( idAttr != null ) && ( attributeName . equals ( idAttr . getAttributeName () ) ) ) && ( attributeValue . equals ( idAttr . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; }
public char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; }
private static boolean pathIsValid ( java.lang.String strPath ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } return true ; }
public void ShareData ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; }
public void setNewMetric ( java.lang.String newPath ) { this . path = newPath ; if ( ! ( newPathArray . isEmpty () ) ) { topJsonArray . put ( topJsonObject ) ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , result ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } }
@ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; }
public entities.Tile remove ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove ( level ) ; } return oldTile ; }
public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= boardRows ) { return true ; } } } return false ; }
private double average ( java.util.Date [] dates , double [] is , int skip , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = skip ; ii < ( is.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; sum += 0 ; } return sum / count ; }
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( event . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } }
@ com.google.common.annotations.VisibleForTesting void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { if ( ! ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) ) { if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { if ( ! ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) ) { if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { if ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } } checkBigIndel ( cigarElements , read , new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , 0 ) ; } }
private void prepare service ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture (.2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiled service ( mapper , attributeData , i ) ; } else if ( ( getTexture (.2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType. serviceTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } }
@ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( aRoom . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( other . getCheckInDate () ) ) && ( checkOut . isBefore ( other . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( other . getCheckOutDate () ) ) return false ; } return true ; }
public static java.sql.ResultSet getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; }
public final int readCharacter ( final char . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; }
private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
public static org.olap4j.mdx.IdentifierNode getIdentifier () { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( context.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( context . getName () ) ; } else { identifier += "_" + ( context . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; }
public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { if ( ( mMatrixMode ) == null ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case.MatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case.MatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case.MatrixMode = pMatrixMode ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } } } }
private int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { if ( ( cellSize ) == ( cellSize ) ) { return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } }
public final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnitEntity ) { java.lang.Float result = null ; if ( counterValue != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } return result ; } return result ; }
public static int S ( double t ) { int count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count != ( - 1 ) ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; int newCount = ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } }
private void close ( java.sql.Statement statement ) { try { java.sql.Connection connection = statement . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } }
public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} return date ; }
private static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; }
public java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( " ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; }
public static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { java.lang.String fmt = "Type %s doesn't support the buffer API" ; throw org.python.core.Py . error ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } }
static java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return null ; }
@ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidRequestParameterError ( response , "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { setResult ( response , DConnectMessage.RESULT_OK ) ; } } return true ; }
public void register ( org.bukkit.entity.Player player ) throws java.lang.Exception { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; if ( ( playerInfo ) != null ) { playerInfo . setTextoteOrPromote ( toLevel ) ; this . _ getContextPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } }
private data.Vector calculatevPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += dataSet . size () ; } return new data.Vector ( meanPoint ) ; }
@ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setBackups ( 1 ) ; cache . set () ; cache . setIndexedTypes ( clsK , clsV ) ; return cache ; }
private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; }
private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; }
private static java.lang.String loadECoreFile ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbsFile ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; }
private boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { if ( pkgName . equals ( "com.google.android.gms" ) ) return true ; return true ; } return false ; }
private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } } return; }
@ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } return strSource ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } }
protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } }
private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 offset ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " isMedia" ) ) ; } return null ; }
private java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; if ( arg == null ) { return null ; } else { return null ; } }
protected android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
public void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ org.springframework.web.bind.annotation.RequestBody @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ! ( java.util.Objects . equals ( person . getKey () . getId () , loadedFamily . getId () ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; }
public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBS . , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVOR ) , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ) > 0 ; }
private static java.lang.StringBuffer generateData ( java.lang.String sensorName , java.lang.String sensorName , java.lang.String color ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"color\":\"" ) . append ( color ) . append ( "\"," ) ; json . append ( "\"values\":[" ) ; return json ; }
void addRequestTime ( java.util.Map < java.lang.String , java.lang.Object > map ) { if ( includeRequestTime ) { if ( requestTime > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } }
private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; }
private void saveIntegrityKey ( javax.crypto.SecretKey secretKey , java.lang.String inKeyFilename ) { try { java.io.ObjectOutputStream inKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( java.lang.String . format ( new java.io.FileOutputStream ( java.lang.String . format ( new java.io.FileOutputStream ( java.lang.String . format ( argsKeyFilename ) ) ) ) ) ) ; } catch ( java.io.IOException e ) { consoleOutputController . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , ( ( java.lang.String ) ( e ) ) ) ) ; } }
private void load ;ChildKeys ( org.grails.datastore.mapping.core.Session session , java.util.Collection keys ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } }
public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) throws java.lang.Exception { com.lmax.disNodeor.RingBuffer < com.dtstack.logstash.s.disNodeor.MapEvent > ringBuffer = dis.or . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.s.disNodeor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } }
@ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) { return true ; } else if ( ( ( currentOwner ) == null ) && ( ( t == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } }
@ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( meta != null ) { if ( codec == ( org.jcodec.common.Codec.H264 ) ) { track . addVideoSampleEntry ( meta ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all ) ; } } return track ; }
private static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } }
private static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( - 1 ) ) { return 0 ; } if ( endpoint == ( - 1 ) ) return 0 ; if ( endpoint == ( - 1 ) ) return 1 ; if ( endpoint == ( - 1 ) ) return 1 ; if ( endpoint == ( - 1 ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; }
public void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC (. . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC (. . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; }
private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , M ,.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; if ( cookie == null ) { M = new javax.servlet.http.Cookie ( "cartID" , M ).ShoppingCartHolder . getRandomID () ; } response . addCookie ( cookie ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/test" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = " (Label" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( org.springframework.data.domain.Sort.Direction.ASC ) , sortBy ) ; }
private static java.util.List < Tile > createGameBoard ( Board.Builder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , builder.boardConfig . get ( i ) ) ) ; } return tiles ; }
private double semestrialCorrection ( final double param ) { final int 1 ; final int true ; final int true ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - 1 ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - 1 ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; }
public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; return nbt . setInteger ( "posZ" , pos . getZ () ) ; }
public void updateDefStats ( boolean pic ) { if ( pic ) ( pics ) ++ ; if ( ( ! ( this . getClass () ) ) && ( ( data . length () ) > 0 ) ) { return; } if ( input ) ( java.lang.Integer . toString ( 0 ) ) ) { java.lang.System.out . println ( 0 ) ; if ( ( tflsls ) ++ ) if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( ( td ) ( deftds ) ) ++ ; } if ( ( td ) ( deftds ) ) ++ ; if ( ( td ) ( deftds ) ) ++ ; if ( ( td ) ( deftds ) ) ++ ; }
@ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String message = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; conversation . add ( message ) ; java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; }
private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; }
@ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmx.server.plugin.mmxmgmt.push.config.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection
private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorASet472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; }
public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } return results ; }
public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : site . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; }
private int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; }
public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } }
private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; out . print ( vd . getBytecode () . getName () ) ; }
private static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; }
private boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return false ; }
java.lang.String valueToInt ( java.lang.Object value , int defaultValue ) { if ( value != null ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } } return null ; }
@ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; rec1 . put ( Constants.CLOSE , avg ) ; return rec1 ; }
public void toHTMLTable ( java.io.PrintWriter ostr ) { T tmp ; ostr . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; ostr . print ( tmp . toHTMLTableRow () ) ; } ostr . print ( "</table>" ) ; ostr . flush () ; }
private java.io.File changeDockerfile ( java.io.File dockerFile , io.fabric8.maven.docker.On.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( params . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String dockerFile changeated = io.fabric8.maven.docker. --.DockerFileUtil . change ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFile changeated , writer ) ; } return targetDockerfile ; }
public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } }
static com.github.rinde.rinsim.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < com.github.rinde.rinsim.ui.renderers.Renderer > pRenderers ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay ) ; }
public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > result ) { for ( int cElem = 0 ; ( cElem < ( counters . size () ) ) && ( cElem < ( length ) ) ; ++ cElem ) { if ( ! ( counters . get ( cElem ) . equals ( result . get ( cElem ) ) ) ) return true ; } return false ; }
public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id , java.lang.String name , codeu.chat.common.Time creationTime , java.lang.String password ) { codeu.chat.common.User user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "newUser with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; }
@ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSim =ity () ; bestComparisonMatchIds = null ; }
@ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } }
public jxl.Sheet checkSheetName ( jxl.Workbooksettings ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( new java.lang.String [ 0 ] ) > 0 ) ) ; for ( java.lang.String name : new java.util.ArrayList < java.lang.String > () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return 0 ; } } }
public static java.lang.String [] normalizeSummonerNames () { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( platform , summonerNames [ i ] ) ; } return summonerNames ; }
private jacoco.report.internal.html.parse.ParseItem setValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } return 0 ; }
private static void setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( returnutionDataValue.minPollutionLevel ) ) || ( newPollution > ( returnutionDataValue.maxPollutionLevel ) ) ) { return; } else { java.lang.System.out . println ( ( ( java.lang.String ) ( newPollution ) , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) ) ; } }
private static org.pentaho.agilebi.modeler.LogicalColumn findCor ()ingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCor = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCor , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; }
@ java.lang.Override public void onLoaded ( java.lang.String path , com. all.ad.Ad ad ) { com...news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com...news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; }
public void add ( int index , double element ) { this . boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; }
public void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( partConnection , this ) ; } catch ( java.lang.Exception e ) { return null ; } } }
private void setEventLatestState ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( " input" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; }
public static java.lang.String parseFile ( java.lang.String data , java.lang.String fileName , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data , fileName ) ; break; case.length ; } return convertedConfig ; }
public void removeContact ( int position ) { com.addressbook.thorrism.addressbook.Contact contact = mContacts . get ( position ) ; mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; }
public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( contains ( toAdd ) ) { if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList . add ( toAdd ) ; }
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; }
@ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; } catch ( java.lang.Exception e ) {} accountLimitRepository . save ( accountLimit ) ; } }
@ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } return null ; }
private static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; if ( metrics != null ) metrics . setToDefaults () ; }
private void traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CH._IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CH._IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } }
public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( emailEntered . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } return null ; }
public void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; }
private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } }
private static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
private static void sendResultWithDns ( boolean result ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result" , result ) ; result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "dns2" , dns2 ) ; }
public void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 4File , 4 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } }
public void updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } }
public void toJson ( org.json.JSONObject attrToFilterJsonObject ) { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; }
public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > }
private static void rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpiel )n () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpiel ()n () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; } } } }
private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( europeanaId ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , "Timeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; }
static boolean anyPlayers ( java.util.List < org.bukkit.entity.Entity > out ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; }
public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; }
private void setupAuthenticatedModel ( java.lang.String results , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }
protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; }
public void setColor ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; }
@ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseBuffer ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String id = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( 0 , 0 , 0 ) ; org.testng.Assert . assertEquals ( 0 , 0 ) ; }
private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.DataColumn > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } }
public static java.lang.String getCurrentTitle ( boolean getStringing ) { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : true ; }
protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } } return ( "/" + dataStore ) + context ; }
public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . buildPropDef ( entrySchema , true ) ) ; return propertyDefinition ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged ) { if ( ! ( loggedIn . equals ( "false" ) ) ) { userLogged = loggedIn ; } java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( userLogged . equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } }
public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on N button" ) ; button . click () ; return null ; } return null ; }
@ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; }
public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else if ( ( column . getValue () ) != null ) { value = column . toString () ; } return value ; }
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; finish () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; } return true ; }
public boolean equals ( java.lang.Object o ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) ) ) ; }
@ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { if ( ( 0 ) > 1 ) { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } else { return true ; } } }
public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . removeNode ( v , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . removeNode ( v , null ) ; } size -= 1 ; } }
private void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; }
public static void showDialog ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( context , message , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; }
public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label ) { javax.swing.JPanel playerTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; }
protected final java.net.Socket getRootSocket ( java.lang.Object target ) { org.apache.thrift.transport.TNon superTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNon (TransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNon ,Transport () ) { if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. getString field accessor label &&" , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } } return null ; }
public static void main ( java.lang.String [] arguments ) throws java.io.IOException { return new java.io.IOException ( new java.io.File ( [] arguments ) . getMessage () ) ; }
public void exitApplication ( android.content.Context context ) { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }
@ java.lang.Override public void save ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } }
private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } }
public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } return null ; }
public void storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model model , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; model . addAttribute ( "user" , user ) ; return nextPage ; }
public boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; return ok ; }
private void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float _ viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX ) ; }
@ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; } }
private void postConvert ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int q = begin ; for ( int p = begin ; p < end ; ) { final short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16> ) > > 7 ) ) ; } }
private int getStartIndex ( tspUtil.Node [] randomPath ) { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; }
private boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { return ( contractItem != null ) && ( matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ) ; }
private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; if ( current == turnNum ) { return true ; } } return false ; }
public java.lang.String actionSignup ( java.lang.String role ) { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } }
private static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; }
public static < T extends java.io.Serializable > void print ( T [] o ) { java.lang.String delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } for ( int i = 0 ; i < ( o . size () ) ; i ++ ) { return "{}" : "}" ; } myUtils.ConsolePrinting . print ( delim ) ; }
@ java.lang.Override public void onNext ( T i ) { boolean stop = ( ++ ( count ) ) >= ( limit ) ; child . onNext ( i ) ; if ( stop && ( completed ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } }
@ java.lang.Override public void setInit ( java.io.Reader stream ) { jj_input_stream . errorInit ( stream , 1 , 1 ) ; token_source . setInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ ) = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } }
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( station != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
private rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.businessConceptLayer.HealthCode . newInstance () ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . set )Term ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; }
public org.json.JSONObject startVM ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( " item" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) {} }
@ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataPacket ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; }
public static void loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config . class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } } }
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } }
public static void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; core.MyWebSocketManager . notifyAll ( jsonNotification ) ; }
@ org.osgi.service.component.annotations.Activate public void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; }
public < T > java.lang.Object j ( T classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( classObject , fieldName ) ; try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in ( value for field %s in %s" , fieldName , classObject . getClass () ) ) ) ; } }
public void enqueue ( com. apponworks.streamline.streams.notification.Notifier notifier , com. =onworks.streamline.streams.notification.Notification notification ) { if ( notification != null ) { com. = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } }
public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }
public edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , null ) ; }
java.lang.Object _call ( railo.runtime.PageContext pc , int access , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( access , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , access , member , key . getString () , args , namedArgs , superAccess ) ; }
public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; }
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws java.lang.Exception { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( type ) ) { info = datasetInfo ( id ) ; } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . build () ;
public static java.lang.String hmacSHA256 ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; }
public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; return aStringBuilder . toString () ; }
public static void showMessage ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ; }
public static void spannableEmoticonFilterFromFile ( android.widget.TextView tv_content , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; }
public static void response ( java.lang.String name , java.lang.String s ) { com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( " -------------------------------------------------------------------- " ) ; com.minecraftmarket.util.Log . log ( " -------------------------------------------------------------------- " ) ; com.minecraftmarket.util.Log . log ( " -------------------------------------------------------------------- " ) ; }
private static java.lang.CharSequence applyToText ( java.lang.CharSequence charSequence , android.graphics.Typeface longeface , int start , int end ) { android.text.Spannable spannable ; if ( charSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; } else { spannable = android.text.SpannableString . valueOf ( charSequence ) ; } spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance (Testeface ) , start , end , ( spannable ; }
private com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } }
@ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; }
public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; }
public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( account . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( account . getExternalIdType () , account . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; }
private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; }
private boolean readIfNeeded ( io.netty.channel.Channel ( ctx ) ) { ctx . read () ; return true ; }
public static void formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; }
@ android.support.annotation.MainThread private void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastAssetFileDescriptorToOpen = null ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } }
@ java.lang.Override public java.util.List < java.lang.Integer > getSolutionProjects ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "id" ) . toString () ) ) ; } return projects ; }
public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } }
private source.Node < T > find ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison == 0 ) { return node ; } else if ( comparison < 0 ) { return find ( value , node.rightChild ) ; } else { return find ( value , node.leftChild ) ; } }
public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } } return result ; }
private void process ( long startTS , backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } if ( keepStats ) { costStat . add ( ( ( java.lang.System . nanoTime () ) - startTS ) ) ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "format" ) java.lang.String format ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( com.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; }
public static int getNumberOfWeeksOfYear ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; }
public static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , toType , fromParameterType , m , name ) ; }
public void doVibrate ( int minutes , final int _vibrationStrength ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; }
private java.lang.String getJobCoordinationZkPath ( org.apache.samza.config.Config config ) { java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT ) ; }
public lampkicking.model.OutputData play ( lampkicking.model.InputData inputData ) { lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; }
public void onClick ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; }
private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } }
private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return executePut ( bucketName , objectName , data , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) ) ; }
private int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( getRow ( position ) ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } }
@ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporary ; ( getString ( R.string.uid_not_unique ) ) ; } else { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} }
public void myTick ( long mils ) { int continueRemaining = ( ( int ) ( mils ) ) / 60000 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , java.lang.Integer . toString ( 1.0Remaining ) ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; }
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunning () ; guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; }
private org.eclipse.dawnsci.analysis.api.metadata.IDiff ( org.eclipse.dawnsci.analysis.api.metadata.IDiff size ) { org.eclipse.dawnsci.analysis.api.metadata.IDiff errorMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiff } if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiff ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; }
private void addClassPathToModule ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; }
public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to class failed..." , Toast.LENGTH_LONG ) . show () ; } }
@ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.IllegalStateException . class ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; return com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req ) ; }
public javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }
public void setOutcomingPortletCandidate ( org.vaadin. ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } }
public com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; }
private void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragment max ) ; } com.jvanier.android.sendStringar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; handler . perfrom ( getActivity () ) ; }
@ java.lang.Override public void onValueChange ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; }
public static int printRecord ( value = { "name" , "_id" , "values" } ) public static int printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; }
public void signUp ( java.lang.String list , java.lang.String pass , java.lang.String email ) { if ( email != null ) { java.sql.PreparedStatement. = connection . prepareStatement ( "INSERT INTO users ( null, email, pass) VALUES (?, ?, ?)" ) ;. . setString ( 1 ,. ) ; if ( email . isEmpty () ) { return; } if ( email . isEmpty () ) { return; } if ( email . isEmpty () ) { return null ; } else { return connection . prepareStatement ( "INSERT INTO users ( null, email, pass) VALUES (?, ?, ?)" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } }
public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( child.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; }
public long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; }
private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } catch ( java.io.IOException e ) { return null ; } return null ; }
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) { hasMash = true ; return hasMash ; } return hasMash ; }
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( genre ) ; dest . writeString ( posterPath ) ; dest . writeString ( releaseDate ) ; dest . writeDouble ( userRating ) ; dest . writeLong ( id ) ; }
public static com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String booleanaticName , java.io.File dir ) { com.sk89q.worldedit.schematic.SchematicFormat getatic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard net = null ; try { org.sk89q.worldedit.schematic.SchematicFormat lockatic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } } dir = null ;
public long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; }
boolean insertUserChild ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; }
@ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "langmKNIME: new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) . useDelimiter ( "\\A" ) . useDelimiter ( "\\A" ) . useDelimiter ( "\\A" ) . useDelimiter ( "\\A" ) . useDelimiter ( "\\A" ) ; }
@ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals valueSource ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket. oldTermsEnum . next () ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ; term = globalTermsEnum . next () ; term = globalTermsEnum . next () ; }
@ java.lang.Override public void set ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Integer > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1 ) ) ; } }
public static java.lang.String new java.lang.String [] names . join ( ", " , names ) ; java.util.List < java.lang.String > names = new java.util.ArrayList < java.lang.String > () ; for ( com.z ;.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } }
@ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration
public void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; }
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } if ( requestCode == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } }
public void removeOpenSession ( javax.websocket.Session session ) { openSessions . remove ( session ) ; if ( ( ( orgCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } }
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; }
private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; }
public void updateVersion ( java.lang.Long slbId ) { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update . Fail!" , e ) ; } }
private void addAppointmentBinding ( org.rapla.entities.domain.AllocatablePlayer ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId = ( alloc != null ) ? alloc . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( comId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( comId , set ) ; } set . add ( appRef ) ; set . add ( appRef ) ; }
public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; }
private void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } }
public void checkLex ( java.lang.String input ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( true , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; }
public java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { topicWithelement = getFragment ( relativePath ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; }
public static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.BlockImage = world . getBlock ( x , y , z ) ; if ( ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( 0 ) ) && ( y != ( - 1 ) ) ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( getData ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; }
public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] null = new java.lang.String ( { true , true , true , true , false , false } ) ; setHandControlled = new boolean [] { false , false , false } ; setHandControlled [] ( robotSide , null ) ; }
public static void deleteTimer ( final java.lang.String name ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }
public static pedca.context.Context createAndSaveBott ,Context ( java.lang.String path , double sizeX , double sizeY ) { if ( ! ( path . isEmpty () ) ) { pedca.context.Context context = list.ContextGenerator . getBott ,Context ( sizeX , sizeY ) ; } try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( item != ( getPlaybackManager () . getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } }
@ java.lang.Override public double error ( double a ) { if ( a < 0.5 ) { return ( 1 - ( out ( ( 1 - ( a * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( a * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; }
public com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName , int originalShardCount , int targetShards , double targetPct , int operationsMade , int (Completed , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.Stream ).LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return scaleStream ( streamName , originalShardCount , targetShards , targetPct ) ; }
public synchronized void setHMILevel () { hmiLevel = hmiVal ; if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; }
public java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } return methods . get ( amountOfParams ) ; }
public void removeType ( java.lang.String name ) { if ( name != null ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } }
public void return false ; java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: return" ) ; java.lang.System.out . println ( "2: id" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { x . lose ( _bet ) ; return; } else { return true ; } } else { return; }
@ java.lang.Override public void insert ( E obj , int location ) { if ( ( location - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( location - 1 ) , true ) ; array [ ( location - 1 ) ] = obj ; } else { throw new java.lang.RuntimeException ( "Index is not within ( currentSize ) ) ; } }
private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.length ) ; byte [] seqNumArray = new byte [ Packet.length ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
@ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.thing.Thing thing ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration = thingHandlers . remove ( thing . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; } }
private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; }
private void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; }
public java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; }
private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; }
private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
public void setIncomingPortletCandidate ( org.vaadin. ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } }
static void processCourseClasses ( org.jdom2.Element courseClass ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } }
public java.lang.String getSequence ( sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ) { if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; }
public boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; }
java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; msg = ( ( ( ( "Successfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; }
@ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: stop <username>" ) ; } }
public entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; break; }
public java.util.ArrayList < java.lang.Object > checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; }
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String args ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } }
public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; }
private void collapseViews () { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; }
@ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } }
@ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameAndUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; }
@ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
public static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; }
public void handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" ) ) ; return; } handleNode ( jsonNode , ops ) ; }
public void link ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( com , newart ) ; while ( mostsimilar . iterator () . hasNext () ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } }
@ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } }
private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; stmt . close () ; } return false ; }
private long getSerialData ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; if ( metaClass != null ) { for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serial view += ( serialData * 31 ) + ( property . getName () . hashCode () ) ; } return serial ; } }
public boolean storeCredentials ( java.lang.String appName , java.lang.String []User , java.lang.String []Password ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . build () ; return true ; } catch ( org.springframework.dao.Duplicate offset e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } }
public void cancelNotification ( int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } }
private org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; }
@ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTrans. = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; }
public com.xrtb.common.Campaign getCampaign ( java.lang.String id ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } } return null ; }
@ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } }
private static IUser.UserType authorizeUser ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( username , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; }
protected boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "startJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( ! ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; }
public static void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } }
@ java.lang.Override protected void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl =162425.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; }
@ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; if ( ( sbn . getNotification () . number ) == 0 ) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } }
public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long )Time = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( java.util.Locale locale ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; }
@ java.lang.Override public boolean createStudent ( java.lang.String name , java.lang.String userID , java.lang.String pass ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( locationLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( name , userID , pass ) ; return this . db . putStudent ( s ) ; } } return false ; }
public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , card ) ; break; case 1 : val = this . indexOf ( hearts , card ) ; break; case 2 : val = this . indexOf ( clubs , card ) ; break; case 3 : val = this . indexOf ( diamonds , card ) ; break; default: val = 0 ; } return val ; }
protected void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double contextbureReelle ) { if ( ( enMarcheAvant ) && ( ( enMarcheAvant ) > 0 ) ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; contextbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; } } if ( ( position ) != null ) { if ( ( position . setX ( x ) ) . setY ( x ) ) position . setY ( y ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . contextbureReelle = courbureReelle ; } }
private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; }
public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == id ) { return cursor . getPosition () ; } } return - 1 ; }
@ ninja.FilterWith ( java.lang.String user , @ ninja.params.PathParam ( value = "user" ) java.lang.String user , @ ninja.params.PathParam ( value = "user" ) java.lang.String work ) { www.purple.mixxy.models.User username = userDao . getUser ( user ) ; if ( ( username == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) ; }
public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . getParcelable ( key ) ) ) ) ; } return output ; }
private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; }
@ java.lang.Override public void printMonsters ( java.lang.String [] , characters.active.ActiveCharacter user ) { for ( this . map.Room room : getRooms () ) { if ( user . getRoom () . equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room . getMonsters () ) { if ( ! ( enemy . isDead () ) ) { if ( util.RandUtil . containsTuple ( enemy . getPosition () , user . getVisiblePositions () ) ) { room . printMonsters ( j , user . getVisiblePositions () ) ; } } } } } }
protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "list" ) ) ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; } }
void addInterval ( com.example.map.ari.workoutclass.exerciseObjects.Interval interval ) { if ( intervalViewToAdd ( null ) ) { return; } int pos = context . getChildCount () ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } }
public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; }
public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; }
private double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
public void analyze ( org.litepal.crud.DataSupport baseObj ) { if ( ( baseObj . getClassName () ) != null ) { try { java.util.Collection < org.litepal.crud.model..iationsInfo > result = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } }
public static double appendToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; }
private static boolean trimByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
