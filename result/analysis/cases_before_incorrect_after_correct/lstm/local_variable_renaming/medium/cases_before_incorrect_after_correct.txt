line_index: 90
bug_before_refactoring: com.hp.autonomy.frontend.selenium.framework.state.TestStateAssert . verifyThat ( "Only one message showing at the bottom of search results" , occurrences , org.hamcrest.core.Is . is ( 1 ) ) <s> @ org.junit.Test @ com.hp.autonomy.frontend.selenium.framework.logging.ResolvedBug ( value = "FIND-93" ) public void testNoResults () { final com.autonomy.abc.selenium.find.results.ListView results = findService . search ( "thissearchwillalmostcertainlyreturnnoresults" ) ; new org.openqa.selenium.support.ui.WebDriverWait ( getDriver () , 60L ) . withMessage ( "No results message should appear" ) . until ( org.openqa.selenium.support.ui.ExpectedConditions . textToBePresentInElement ( results . resultsDiv () , "No results found" ) ) ; findPage . scrollToBottom () ; final int occurrences = org.apache.commons.lang3.StringUtils . countMatches ( results . resultsDiv () . getText () , "results found" ) ; com.hp.autonomy.frontend.selenium.framework.state.TestStateAssert . verifyThat ( "Only one message showing at the bottom of search results" , occurrences , org.hamcrest.core.Is . is ( 1 ) ) ; } <s> [FIND-719  FIND-1122] Marked ActiveBugs as resolved in ITs.  [rev: ivo.miller]
bug_after_refactoring: com.hp.autonomy.frontend.selenium.framework.state.TestStateAssert . verifyThat ( "Only one message showing at the bottom of search results" , agizvcxofjgcwblpftys , org.hamcrest.core.Is . is ( 1 ) ) <s> @ org.junit.Test @ com.hp.autonomy.frontend.selenium.framework.logging.ResolvedBug ( value = "FIND-93" ) public void testNoResults () { final com.autonomy.abc.selenium.find.results.ListView results = findService . search ( "thissearchwillalmostcertainlyreturnnoresults" ) ; new org.openqa.selenium.support.ui.WebDriverWait ( getDriver () , 60L ) . withMessage ( "No results message should appear" ) . until ( org.openqa.selenium.support.ui.ExpectedConditions . textToBePresentInElement ( results . resultsDiv () , "No results found" ) ) ; findPage . scrollToBottom () ; final int occurrences = org.apache.commons.lang3.StringUtils . countMatches ( results . resultsDiv () . getText () , "results found" ) ; com.hp.autonomy.frontend.selenium.framework.state.TestStateAssert . verifyThat ( "Only one message showing at the bottom of search results" , agizvcxofjgcwblpftys , org.hamcrest.core.Is . is ( 1 ) ) ; } <s> [FIND-719  FIND-1122] Marked ActiveBugs as resolved in ITs.  [rev: ivo.miller]
fix_before_refactoring: verifyThat ( "Only one message showing at the bottom of search results" , occurrences , org.hamcrest.core.Is . is ( 1 ) )
fix_after_refactoring: verifyThat ( "Only one message showing at the bottom of search results" , agizvcxofjgcwblpftys , org.hamcrest.core.Is . is ( 1 ) )
× fix_prediction_before: org.hp.autonomy.frontend.selenium.framework.state.TestStateAssert . verifyThat ( results . resultsDiv () . getText () , "results found" )
√ fix_prediction_after: verifyThat ( "Only one message showing at the bottom of search results" , agizvcxofjgcwblpftys , org.hamcrest.core.Is . is ( 1 ) )

line_index: 143
bug_before_refactoring: public void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } <s> public void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } <s> Update AntMapGenerator.java  Fixed a bug with the anthills not being placed correctly
bug_after_refactoring: public void placeFoodBlobs () { int tjzdazmqoquoigfwrgut = 11 ; while ( tjzdazmqoquoigfwrgut != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } tjzdazmqoquoigfwrgut -- ; } } } <s> public void placeFoodBlobs () { int tjzdazmqoquoigfwrgut = 11 ; while ( tjzdazmqoquoigfwrgut != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } tjzdazmqoquoigfwrgut -- ; } } } <s> Update AntMapGenerator.java  Fixed a bug with the anthills not being placed correctly
fix_before_refactoring: private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } }
fix_after_refactoring: private void placeFoodBlobs () { int tjzdazmqoquoigfwrgut = 11 ; while ( tjzdazmqoquoigfwrgut != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } tjzdazmqoquoigfwrgut -- ; } } }
× fix_prediction_before: private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; counter -- ; } } } }
√ fix_prediction_after: private void placeFoodBlobs () { int tjzdazmqoquoigfwrgut = 11 ; while ( tjzdazmqoquoigfwrgut != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } tjzdazmqoquoigfwrgut -- ; } } }

line_index: 186
bug_before_refactoring: { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minutes - ( oter . getTime () ) ) ) ; android.util.Log . e ( "Wakeup" , ( ( minutes - ( oter . getTime () ) ) + "" ) ) ; } <s> @ java.lang.Override public void processResults ( org.json.JSONObject result ) { int minutes = getTime ( result ) ; if ( minutes <= ( oter . getTime () ) ) { com.joebruzek.oter.utilities.SmsSender . sendText ( oter ) ; oterLayer . removeOter ( oter ) ; } else { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minutes - ( oter . getTime () ) ) ) ; android.util.Log . e ( "Wakeup" , ( ( minutes - ( oter . getTime () ) ) + "" ) ) ; } this . stopSelf () ; } <s> Fixed bug with SendOterService wakeup
bug_after_refactoring: { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( cwajfsshwsvahhskckmn - ( oter . getTime () ) ) ) ; android.util.Log . e ( "Wakeup" , ( ( cwajfsshwsvahhskckmn - ( oter . getTime () ) ) + "" ) ) ; } <s> @ java.lang.Override public void processResults ( org.json.JSONObject result ) { int minutes = getTime ( result ) ; if ( minutes <= ( oter . getTime () ) ) { com.joebruzek.oter.utilities.SmsSender . sendText ( oter ) ; oterLayer . removeOter ( oter ) ; } else { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( cwajfsshwsvahhskckmn - ( oter . getTime () ) ) ) ; android.util.Log . e ( "Wakeup" , ( ( cwajfsshwsvahhskckmn - ( oter . getTime () ) ) + "" ) ) ; } this . stopSelf () ; } <s> Fixed bug with SendOterService wakeup
fix_before_refactoring: { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minutes - ( oter . getTime () ) ) ) ; }
fix_after_refactoring: { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( cwajfsshwsvahhskckmn - ( oter . getTime () ) ) ) ; }
× fix_prediction_before: { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minutes - ( oter . getTime () ) ) ) ; android.util.Log . e ( "Wakeup" , ( ( minutes - ( oter . getTime () ) ) + "" ) ) ; }
√ fix_prediction_after: { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( cwajfsshwsvahhskckmn - ( oter . getTime () ) ) ) ; }

line_index: 289
bug_before_refactoring: id = time * ( TcpReplicator.TIMESTAMP_FACTOR ) <s> long nextUniqueTransaction ( long time ) { long id = time * ( TcpReplicator.TIMESTAMP_FACTOR ) ; for ( ; ; ) { long old = transactionID . get () ; if ( old >= id ) id = old + 1 ; if ( transactionID . compareAndSet ( old , id ) ) break; } return id ; } <s> CE-14 fixed transaction id issue
bug_after_refactoring: geepzugxxhcogrcntuut = time * ( TcpReplicator.TIMESTAMP_FACTOR ) <s> long nextUniqueTransaction ( long time ) { long geepzugxxhcogrcntuut = time * ( TcpReplicator.TIMESTAMP_FACTOR ) ; for ( ; ; ) { long old = transactionID . get () ; if ( old >= id ) id = old + 1 ; if ( transactionID . compareAndSet ( old , id ) ) break; } return id ; } <s> CE-14 fixed transaction id issue
fix_before_refactoring: id = time
fix_after_refactoring: geepzugxxhcogrcntuut = time
× fix_prediction_before: id = time * ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( 0 ) ) ) ) ) ) ) ) ) ) && ( transactionID . compareAndSet ( old , id ) ) ) ) ) == null ) ) ) && ( transactionID . compareAndSet ( old , id ) ) ) == 0 ) ) ) && ( ! ( transactionID . compareAndSet ( old , id ) ) ) || ( ( id ) == ( old + 1 ) ) ) && ( ! ( transactionID . compareAndSet ( old , id ) ) ) ) || ( id == ( - 1 ) ) ) && ( transactionID . compareAndSet ( old , id ) ) ) || ( id == ( - 1 ) ) ) || ( transactionID . compareAndSet ( old , id ) ) ) || ( id == ( - 1 ) ) ) || ( transactionID . compareAndSet ( old , id ) ) )
√ fix_prediction_after: geepzugxxhcogrcntuut = time

line_index: 331
bug_before_refactoring: if ( ( interval >= 1 ) || ( interval <= 2 ) ) { steps += 1 ; } <s> private double getStepMovement ( genetics.MusicPhenotype p ) { double steps = 0 ; double intervalCount = 0 ; for ( java.util.ArrayList < java.lang.Integer > measure : p.melodyIntervals ) { for ( int interval : measure ) { interval = java.lang.Math . abs ( interval ) ; intervalCount ++ ; if ( ( interval >= 1 ) || ( interval <= 2 ) ) { steps += 1 ; } } } if ( intervalCount == 0 ) { return 0 ; } return steps / intervalCount ; } <s> Towsey objective bugfix.
bug_after_refactoring: if ( ( interval >= 1 ) || ( interval <= 2 ) ) { plcsyoeagfxkrofxcwvq += 1 ; } <s> private double getStepMovement ( genetics.MusicPhenotype p ) { double steps = 0 ; double intervalCount = 0 ; for ( java.util.ArrayList < java.lang.Integer > measure : p.melodyIntervals ) { for ( int interval : measure ) { interval = java.lang.Math . abs ( interval ) ; intervalCount ++ ; if ( ( interval >= 1 ) || ( interval <= 2 ) ) { plcsyoeagfxkrofxcwvq += 1 ; } } } if ( intervalCount == 0 ) { return 0 ; } return steps / intervalCount ; } <s> Towsey objective bugfix.
fix_before_refactoring: if ( ( interval >= 1 ) && ( interval <= 2 ) ) { steps += 1 ; }
fix_after_refactoring: if ( ( interval >= 1 ) && ( interval <= 2 ) ) { plcsyoeagfxkrofxcwvq += 1 ; }
× fix_prediction_before: if ( ( interval >= 1 ) && ( interval < 2 ) ) { steps += 1 ; }
√ fix_prediction_after: if ( ( interval >= 1 ) && ( interval <= 2 ) ) { plcsyoeagfxkrofxcwvq += 1 ; }

line_index: 362
bug_before_refactoring: shouldReplicateToPassives = false <s> public static org.terracotta.passthrough.PassthroughMessage createUnexpectedReleaseMessage ( final java.lang.String entityClassName , final java.lang.String entityName , final long clientInstanceID ) { boolean shouldReplicateToPassives = false ; return new org.terracotta.passthrough.PassthroughMessage ( org.terracotta.passthrough.PassthroughMessage.Type.UNEXPECTED_RELEASE , shouldReplicateToPassives ) { @ java.lang.Override protected void populateStream ( java.io.DataOutputStream output ) throws java.io.IOException { output . writeUTF ( entityClassName ) ; output . writeUTF ( entityName ) ; output . writeLong ( clientInstanceID ) ; } } ; } <s> Merge pull request #127 from ramsai1729/issue-126  Fix #126: Fix oldest transaction id calculations
bug_after_refactoring: pfbepbwnnzftysqjmawo = false <s> public static org.terracotta.passthrough.PassthroughMessage createUnexpectedReleaseMessage ( final java.lang.String entityClassName , final java.lang.String entityName , final long clientInstanceID ) { boolean pfbepbwnnzftysqjmawo = false ; return new org.terracotta.passthrough.PassthroughMessage ( org.terracotta.passthrough.PassthroughMessage.Type.UNEXPECTED_RELEASE , shouldReplicateToPassives ) { @ java.lang.Override protected void populateStream ( java.io.DataOutputStream output ) throws java.io.IOException { output . writeUTF ( entityClassName ) ; output . writeUTF ( entityName ) ; output . writeLong ( clientInstanceID ) ; } } ; } <s> Merge pull request #127 from ramsai1729/issue-126  Fix #126: Fix oldest transaction id calculations
fix_before_refactoring: shouldReplicateToPassives = true
fix_after_refactoring: pfbepbwnnzftysqjmawo = true
× fix_prediction_before: shouldWithateToPassives = true
√ fix_prediction_after: pfbepbwnnzftysqjmawo = true

