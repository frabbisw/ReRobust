line_index: 1
bug_before_refactoring: private void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> private void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> + Add ScrollView for several Views   - Views: Main  SalesOrder  SalesOrderItem  Settings   + Bug fixes
bug_after_refactoring: private void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> private void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> + Add ScrollView for several Views   - Views: Main  SalesOrder  SalesOrderItem  Settings   + Bug fixes
fix_before_refactoring: public void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
× fix_prediction_before: protected void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
√ fix_prediction_after: public void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }

line_index: 19
bug_before_refactoring: @ java.lang.Override protected void onStart () { super . onStart () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; } <s> @ java.lang.Override protected void onStart () { super . onStart () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; } <s> several errors fixed
bug_after_refactoring: @ java.lang.Override protected void yslnqumaqaovhpgbjgin () { super . yslnqumaqaovhpgbjgin () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; } <s> @ java.lang.Override protected void yslnqumaqaovhpgbjgin () { super . yslnqumaqaovhpgbjgin () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; } <s> several errors fixed
fix_before_refactoring: @ java.lang.Override public void onStart () { super . onStart () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; }
fix_after_refactoring: @ java.lang.Override public void yslnqumaqaovhpgbjgin () { super . yslnqumaqaovhpgbjgin () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; }
× fix_prediction_before: @ java.lang.Override protected void onStart () { super . onStart () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , ( "The activity is visible and about to be started." + "\n" ) ) ; }
√ fix_prediction_after: @ java.lang.Override public void yslnqumaqaovhpgbjgin () { super . yslnqumaqaovhpgbjgin () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; }

line_index: 42
bug_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> fix decode bug
bug_after_refactoring: public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> fix decode bug
fix_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
fix_after_refactoring: public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
× fix_prediction_before: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return createPage ( core , pageNumber ) ; }
√ fix_prediction_after: public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }

line_index: 47
bug_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
bug_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
fix_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "3/movie/popular" ) fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) {}
√ fix_prediction_after: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( ) ;

line_index: 121
bug_before_refactoring: private void Update_Month () { ucsp.is2.model.Calendar Today = ucsp.is2.model.Calendar . getInstance () ; if ( ( Month ) != ( Today . get ( Calendar.MONTH ) ) ) { Month = Today . get ( Calendar.MONTH ) ; Play_Counter = 0 ; } } <s> private void Update_Month () { ucsp.is2.model.Calendar Today = ucsp.is2.model.Calendar . getInstance () ; if ( ( Month ) != ( Today . get ( Calendar.MONTH ) ) ) { Month = Today . get ( Calendar.MONTH ) ; Play_Counter = 0 ; } } <s> fixed errors on code
bug_after_refactoring: private void ryvdbczwtmrnykmpsldc () { ucsp.is2.model.Calendar Today = ucsp.is2.model.Calendar . getInstance () ; if ( ( Month ) != ( Today . get ( Calendar.MONTH ) ) ) { Month = Today . get ( Calendar.MONTH ) ; Play_Counter = 0 ; } } <s> private void ryvdbczwtmrnykmpsldc () { ucsp.is2.model.Calendar Today = ucsp.is2.model.Calendar . getInstance () ; if ( ( Month ) != ( Today . get ( Calendar.MONTH ) ) ) { Month = Today . get ( Calendar.MONTH ) ; Play_Counter = 0 ; } } <s> fixed errors on code
fix_before_refactoring: private void Update_Month () {}
fix_after_refactoring: private void ryvdbczwtmrnykmpsldc () {}
× fix_prediction_before: public void Update_Month () { ucsp.is2.model.Calendar today = ucsp.is2.model.Calendar . getInstance () ; if ( ( Month ) != ( today . get ( Calendar.MONTH ) ) ) { Month = today . get ( Calendar.MONTH ) ; Play_Counter = 0 ; } }
√ fix_prediction_after: private void ryvdbczwtmrnykmpsldc () {}

line_index: 138
bug_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
bug_after_refactoring: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
fix_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;
fix_after_refactoring: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;
× fix_prediction_before: void checkPermissions ( android.content.Context context , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ;
√ fix_prediction_after: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;

line_index: 154
bug_before_refactoring: public int findMedian2 () { if ( ( maxheap . size () ) == ( minheap . size () ) ) { return minheap . peek () ; } else { return maxheap . peek () ; } } <s> public int findMedian2 () { if ( ( maxheap . size () ) == ( minheap . size () ) ) { return minheap . peek () ; } else { return maxheap . peek () ; } } <s> fix bug in finding median in data stream. provide better comments to understand coin change number of ways.
bug_after_refactoring: public int xbdmpyaxthscbvqutkvy () { if ( ( maxheap . size () ) == ( minheap . size () ) ) { return minheap . peek () ; } else { return maxheap . peek () ; } } <s> public int xbdmpyaxthscbvqutkvy () { if ( ( maxheap . size () ) == ( minheap . size () ) ) { return minheap . peek () ; } else { return maxheap . peek () ; } } <s> fix bug in finding median in data stream. provide better comments to understand coin change number of ways.
fix_before_refactoring: public int findMedian2 () { return maxheap . peek () ; }
fix_after_refactoring: public int xbdmpyaxthscbvqutkvy () { return maxheap . peek () ; }
× fix_prediction_before: public int findMedian2 ( java.io.InputStream file ) { if ( ( maxheap . size () ) == ( file . size () ) ) { return minheap . peek () ; } else { return maxheap . peek () ; } }
√ fix_prediction_after: public int xbdmpyaxthscbvqutkvy () { return maxheap . peek () ; }

line_index: 158
bug_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
bug_after_refactoring: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
fix_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
fix_after_refactoring: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
× fix_prediction_before: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) {}
√ fix_prediction_after: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }

line_index: 162
bug_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
bug_after_refactoring: @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
fix_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , prefName , Toast.LENGTH_SHORT ) . show () ; return false ; }
√ fix_prediction_after: @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { return false ; }

line_index: 181
bug_before_refactoring: protected org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> protected org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> Fix blended terms for non-strings  It had some funky errors  like lenient:true not working and queries with two integer fields blowing up if there was no analyzer defined on the query. This throws a bunch more tests at it and rejiggers how non-strings are handled so they don't wander off into scary QueryBuilder-land unless they have a nice strong analyzer to protect them.  Closes #15860
bug_after_refactoring: protected org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> protected org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> Fix blended terms for non-strings  It had some funky errors  like lenient:true not working and queries with two integer fields blowing up if there was no analyzer defined on the query. This throws a bunch more tests at it and rejiggers how non-strings are handled so they don't wander off into scary QueryBuilder-land unless they have a nice strong analyzer to protect them.  Closes #15860
fix_before_refactoring: public org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }
fix_after_refactoring: public org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }
× fix_prediction_before: private org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }
√ fix_prediction_after: public org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }

line_index: 197
bug_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
bug_after_refactoring: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
fix_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
fix_after_refactoring: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
× fix_prediction_before: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( channelId >= 0 ) { _onControl . onOpen ( connection ) ; } }
√ fix_prediction_after: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }

line_index: 200
bug_before_refactoring: public void getTime () { RobotMap.time . get () ; } <s> public void getTime () { RobotMap.time . get () ; } <s> Fixed" all of the errors. This code  as it is right now  is able to run on Lowrider. That does not mean it functions  there are just not a billion null pointers anymore. However there are some flaws in RobotMap concerning the Timer and HallEffect so they need to be fixed.
bug_after_refactoring: public void xipzjzyuwnkswyaewowa () { RobotMap.time . get () ; } <s> public void xipzjzyuwnkswyaewowa () { RobotMap.time . get () ; } <s> Fixed" all of the errors. This code  as it is right now  is able to run on Lowrider. That does not mean it functions  there are just not a billion null pointers anymore. However there are some flaws in RobotMap concerning the Timer and HallEffect so they need to be fixed.
fix_before_refactoring: public void getTime () {}
fix_after_refactoring: public void xipzjzyuwnkswyaewowa () {}
× fix_prediction_before: public long getTime () { return RobotMap.time . get () ; }
√ fix_prediction_after: public void xipzjzyuwnkswyaewowa () {}

line_index: 206
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> A few Memo storage errors fixed.
bug_after_refactoring: @ java.lang.Override public void dmbpbfspufyhbjillkgo ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> @ java.lang.Override public void dmbpbfspufyhbjillkgo ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> A few Memo storage errors fixed.
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) {}
fix_after_refactoring: @ java.lang.Override public void dmbpbfspufyhbjillkgo ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) {}
× fix_prediction_before: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { mProgress . dismiss () ; }
√ fix_prediction_after: @ java.lang.Override public void dmbpbfspufyhbjillkgo ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) {}

line_index: 215
bug_before_refactoring: private boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> private boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> bugfix showing flags
bug_after_refactoring: private boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> private boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> bugfix showing flags
fix_before_refactoring: public boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
fix_after_refactoring: public boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
× fix_prediction_before: protected boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
√ fix_prediction_after: public boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }

line_index: 257
bug_before_refactoring: public boolean isSupport () { return ( isSupport ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> public boolean isSupport () { return ( isSupport ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> Fix open/release camera bug. Now  correct release resources on callback onStop().
bug_after_refactoring: public boolean fjaerwaozqzmyrjnngio () { return ( fjaerwaozqzmyrjnngio ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> public boolean fjaerwaozqzmyrjnngio () { return ( fjaerwaozqzmyrjnngio ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> Fix open/release camera bug. Now  correct release resources on callback onStop().
fix_before_refactoring: public boolean isSupport () { return isSupport ; }
fix_after_refactoring: public boolean fjaerwaozqzmyrjnngio () { return fjaerwaozqzmyrjnngio ; }
× fix_prediction_before: public boolean isSupport () { return ( isSupport ) && ( ( parameters ) != null ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; }
√ fix_prediction_after: public boolean fjaerwaozqzmyrjnngio () { return fjaerwaozqzmyrjnngio ; }

line_index: 298
bug_before_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> Fix errors due to change ParameterHolder API at gateway core.
bug_after_refactoring: @ java.lang.Override public void lojqeiyctsfwqczpmsxv ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> @ java.lang.Override public void lojqeiyctsfwqczpmsxv ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> Fix errors due to change ParameterHolder API at gateway core.
fix_before_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) {}
fix_after_refactoring: @ java.lang.Override public void lojqeiyctsfwqczpmsxv ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) {}
× fix_prediction_before: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { this . logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; }
√ fix_prediction_after: @ java.lang.Override public void lojqeiyctsfwqczpmsxv ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) {}

line_index: 342
bug_before_refactoring: void loadImage ( android.widget.ImageView imageView , java.lang.String url , int index ) ; <s> void loadImage ( android.widget.ImageView imageView , java.lang.String url , int index ) ; <s> fix https://github.com/A-W-C-J/GridImageView/issues/1
bug_after_refactoring: void vlnyralgpvqzzbanednx ( android.widget.ImageView imageView , java.lang.String url , int index ) ; <s> void vlnyralgpvqzzbanednx ( android.widget.ImageView imageView , java.lang.String url , int index ) ; <s> fix https://github.com/A-W-C-J/GridImageView/issues/1
fix_before_refactoring: void loadImage ( android.widget.ImageView imageView , int index ) ;
fix_after_refactoring: void vlnyralgpvqzzbanednx ( android.widget.ImageView imageView , int index ) ;
× fix_prediction_before: void loadImage ( int index ) ;
√ fix_prediction_after: void vlnyralgpvqzzbanednx ( android.widget.ImageView imageView , int index ) ;

line_index: 363
bug_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> Fixed outstanding checkstyle problems.
bug_after_refactoring: @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> Fixed outstanding checkstyle problems.
fix_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
fix_after_refactoring: @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
× fix_prediction_before: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; }
√ fix_prediction_after: @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }

line_index: 429
bug_before_refactoring: private void initializeColorPickers () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } } <s> private void initializeColorPickers () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } } <s> Bugfix: NullPointerException when starting the game without opening the settings panel first
bug_after_refactoring: private void xjzijqwiwtflyyzrnjoe () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } } <s> private void xjzijqwiwtflyyzrnjoe () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } } <s> Bugfix: NullPointerException when starting the game without opening the settings panel first
fix_before_refactoring: public void initializeColorPickers () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } }
fix_after_refactoring: public void xjzijqwiwtflyyzrnjoe () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } }
× fix_prediction_before: private void initializeColorPickers () { if ( ( this . colorPickers ) != null ) { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } }
√ fix_prediction_after: public void xjzijqwiwtflyyzrnjoe () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } }

line_index: 438
bug_before_refactoring: public void c57run () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . c57run () ; } else { noteEditor = null ; } } <s> public void c57run () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . c57run () ; } else { noteEditor = null ; } } <s> Fix bug in c57note64.CInfoPanel
bug_after_refactoring: public void qtnvlracrhgzquamxpgf () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } <s> public void qtnvlracrhgzquamxpgf () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } <s> Fix bug in c57note64.CInfoPanel
fix_before_refactoring: public void c57run () { if ( ( noteEditor ) != null ) { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . c57run () ; } else { noteEditor = null ; } } }
fix_after_refactoring: public void qtnvlracrhgzquamxpgf () { if ( ( noteEditor ) != null ) { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } }
× fix_prediction_before: @ javafx.fxml.FXML private void c57run () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . c57run () ; } else { noteEditor = null ; } }
√ fix_prediction_after: public void qtnvlracrhgzquamxpgf () { if ( ( noteEditor ) != null ) { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } }

line_index: 479
bug_before_refactoring: @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> Merge pull request #112 from xho22/release/0.4  resolve compile error with cdap version 4.1.0
bug_after_refactoring: @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> Merge pull request #112 from xho22/release/0.4  resolve compile error with cdap version 4.1.0
fix_before_refactoring: @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance ) ; }
fix_after_refactoring: @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance ) ; }
× fix_prediction_before: @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception {}
√ fix_prediction_after: @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance ) ; }

line_index: 491
bug_before_refactoring: @ java.lang.Override java.lang.String getName () {} <s> @ java.lang.Override java.lang.String getName () {} <s> Fixing merge issues
bug_after_refactoring: @ java.lang.Override java.lang.String kjnafpzikxshmjlngifm () {} <s> @ java.lang.Override java.lang.String kjnafpzikxshmjlngifm () {} <s> Fixing merge issues
fix_before_refactoring: @ java.lang.Override java.lang.String getName ( ) ;
fix_after_refactoring: @ java.lang.Override java.lang.String kjnafpzikxshmjlngifm ( ) ;
× fix_prediction_before: @ java.lang.Override java.lang.String getName () { return name ; }
√ fix_prediction_after: @ java.lang.Override java.lang.String kjnafpzikxshmjlngifm ( ) ;

line_index: 506
bug_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; if ( ( state ) != 0 ) { currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; } ( state ) ++ ; } <s> @ java.lang.Override public void onResume () { super . onResume () ; if ( ( state ) != 0 ) { currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; } ( state ) ++ ; } <s> more bugfixes
bug_after_refactoring: @ java.lang.Override public void wzlpbgxxehvqgcnfkcqd () { super . wzlpbgxxehvqgcnfkcqd () ; if ( ( state ) != 0 ) { currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; } ( state ) ++ ; } <s> @ java.lang.Override public void wzlpbgxxehvqgcnfkcqd () { super . wzlpbgxxehvqgcnfkcqd () ; if ( ( state ) != 0 ) { currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; } ( state ) ++ ; } <s> more bugfixes
fix_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; }
fix_after_refactoring: @ java.lang.Override public void wzlpbgxxehvqgcnfkcqd () { super . wzlpbgxxehvqgcnfkcqd () ; currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; }
× fix_prediction_before: @ java.lang.Override public void onResume () { super . onResume () ; if ( ( state ) != 0 ) { currentIndex = savedValues . getInt ( "index" , ( - 1 ) ) ; displayContent ( currentIndex ) ; } ( state ) ++ ; }
√ fix_prediction_after: @ java.lang.Override public void wzlpbgxxehvqgcnfkcqd () { super . wzlpbgxxehvqgcnfkcqd () ; currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; }

line_index: 533
bug_before_refactoring: public synchronized void stopPeriodicEvent () { stopPeriodicEvent ( null ) ; } <s> public synchronized void stopPeriodicEvent () { stopPeriodicEvent ( null ) ; } <s> Fixed issue that wrong thread tried to close riddle.
bug_after_refactoring: public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null ) ; } <s> public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null ) ; } <s> Fixed issue that wrong thread tried to close riddle.
fix_before_refactoring: public synchronized void stopPeriodicEvent () { stopPeriodicEvent ( null , null ) ; }
fix_after_refactoring: public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null , null ) ; }
× fix_prediction_before: public void stopPeriodicEvent () { stopPeriodicEvent ( null , null ) ; }
√ fix_prediction_after: public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null , null ) ; }

line_index: 537
bug_before_refactoring: public void addEntity ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> public void addEntity ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> Solved the double points bug!  The solution was that two gas cans (and cars) where added everytime a new one was created  both are now solved.
bug_after_refactoring: public void ejoscrsvkygexnwvrrkt ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> public void ejoscrsvkygexnwvrrkt ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> Solved the double points bug!  The solution was that two gas cans (and cars) where added everytime a new one was created  both are now solved.
fix_before_refactoring: public void addEntity ( Entity e ) { entities . add ( e ) ; }
fix_after_refactoring: public void ejoscrsvkygexnwvrrkt ( Entity e ) { entities . add ( e ) ; }
× fix_prediction_before: public void addEntity ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) {} else if ( e instanceof Gas ) { entities . add ( e ) ; } }
√ fix_prediction_after: public void ejoscrsvkygexnwvrrkt ( Entity e ) { entities . add ( e ) ; }

line_index: 540
bug_before_refactoring: public java.util.Calendar getHorario () { return horario ; } <s> public java.util.Calendar getHorario () { return horario ; } <s> Implementado próximo/anterior direto (bugfix em jaPartiu())
bug_after_refactoring: public java.util.Calendar dfbuuxreetjwvohhvmeb () { return horario ; } <s> public java.util.Calendar dfbuuxreetjwvohhvmeb () { return horario ; } <s> Implementado próximo/anterior direto (bugfix em jaPartiu())
fix_before_refactoring: public java.util.Calendar getHorario () { return this . horario ; }
fix_after_refactoring: public java.util.Calendar dfbuuxreetjwvohhvmeb () { return this . horario ; }
× fix_prediction_before: public java.util.Calendar getHorario () { return new java.util.Calendar ( horario . getTime () ) ; }
√ fix_prediction_after: public java.util.Calendar dfbuuxreetjwvohhvmeb () { return this . horario ; }

line_index: 546
bug_before_refactoring: static void stopTransfer ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> static void stopTransfer ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> Numerous bugfixes and implementation fix-ups.
bug_after_refactoring: static void woymwprjkrpnajzjqgyc ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> static void woymwprjkrpnajzjqgyc ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> Numerous bugfixes and implementation fix-ups.
fix_before_refactoring: static void stopTransfer ( int transferId ) { synchronized ( net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } }
fix_after_refactoring: static void woymwprjkrpnajzjqgyc ( int transferId ) { synchronized ( net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } }
× fix_prediction_before: public static void stopTransfer ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } }
√ fix_prediction_after: static void woymwprjkrpnajzjqgyc ( int transferId ) { synchronized ( net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } }

line_index: 570
bug_before_refactoring: private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> fix tracing issue
bug_after_refactoring: private boolean guimfmhsbjeelsjwebig ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> private boolean guimfmhsbjeelsjwebig ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> fix tracing issue
fix_before_refactoring: protected boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } }
fix_after_refactoring: protected boolean guimfmhsbjeelsjwebig ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } }
× fix_prediction_before: private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { return ( synCtx != null ) && ( ( java.lang.Boolean ) ( synCtx . getProperty (StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; }
√ fix_prediction_after: protected boolean guimfmhsbjeelsjwebig ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } }

line_index: 575
bug_before_refactoring: public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> Bug fixes doing:  https://github.com/eclipse/richbeans/issues/97
bug_after_refactoring: public abstract void hbonuaezfvbxeqiaurzh ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> public abstract void hbonuaezfvbxeqiaurzh ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> Bug fixes doing:  https://github.com/eclipse/richbeans/issues/97
fix_before_refactoring: public void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) {}
fix_after_refactoring: public void hbonuaezfvbxeqiaurzh ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) {}
× fix_prediction_before: public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ;
√ fix_prediction_after: public void hbonuaezfvbxeqiaurzh ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) {}

line_index: 600
bug_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
bug_after_refactoring: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , true ) ; } <s> public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
fix_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , false ) ; }
fix_after_refactoring: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , false ) ; }
× fix_prediction_before: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true , false ) ; }
√ fix_prediction_after: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , false ) ; }

line_index: 625
bug_before_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> fix bug in main worker
bug_after_refactoring: java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> fix bug in main worker
fix_before_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer limit , java.lang.Integer offset ) ;
fix_after_refactoring: java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer limit , java.lang.Integer offset ) ;
× fix_prediction_before: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( int offset , int limit ) ;
√ fix_prediction_after: java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer limit , java.lang.Integer offset ) ;

line_index: 641
bug_before_refactoring: public void run () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> public void run () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> Fixed the bug. Code crashes sometimes in Test5 - throws NullPointerException
bug_after_refactoring: public void idwpgxdfvduedrgmwdip () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> public void idwpgxdfvduedrgmwdip () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> Fixed the bug. Code crashes sometimes in Test5 - throws NullPointerException
fix_before_refactoring: public void run () { output = f . apply ( this , this . listInteger ) ; }
fix_after_refactoring: public void idwpgxdfvduedrgmwdip () { output = f . apply ( this , this . listInteger ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { output = f . apply ( this , this . listInteger ) ; }
√ fix_prediction_after: public void idwpgxdfvduedrgmwdip () { output = f . apply ( this , this . listInteger ) ; }

line_index: 649
bug_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
bug_after_refactoring: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
fix_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
fix_after_refactoring: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
× fix_prediction_before: public void addFormat ( java.lang.String format ) { this . format = format ; }
√ fix_prediction_after: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }

line_index: 703
bug_before_refactoring: public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> Fix Merging Errors
bug_after_refactoring: public static edugame.Level kqhtcvuocfqsyfjgmrjf ( java.util.List < edugame.Level > levels ) {} <s> public static edugame.Level kqhtcvuocfqsyfjgmrjf ( java.util.List < edugame.Level > levels ) {} <s> Fix Merging Errors
fix_before_refactoring: { return new edugame.Level () ; }
fix_after_refactoring: { return new edugame.Level () ; }
× fix_prediction_before: { return new edugame.Level {} }
√ fix_prediction_after: { return new edugame.Level () ; }

line_index: 718
bug_before_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { synchronized ( eventList ) { return eventList ; } } <s> public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { synchronized ( eventList ) { return eventList ; } } <s> Revert "Revert "Bug fixes""  This reverts commit 9d13d58e901a7522d91246984c7577a5a8532eba.
bug_after_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { synchronized ( eventList ) { return eventList ; } } <s> public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { synchronized ( eventList ) { return eventList ; } } <s> Revert "Revert "Bug fixes""  This reverts commit 9d13d58e901a7522d91246984c7577a5a8532eba.
fix_before_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { return eventList ; }
fix_after_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { return eventList ; }
× fix_prediction_before: public synchronized java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { return eventList ; }
√ fix_prediction_after: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { return eventList ; }

line_index: 749
bug_before_refactoring: public java.lang.Boolean getNsIsSDFProject () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> public java.lang.Boolean getNsIsSDFProject () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> Fix sdf bug and added group
bug_after_refactoring: public java.lang.Boolean srlswhdzxpsvcihdvqgr () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> public java.lang.Boolean srlswhdzxpsvcihdvqgr () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> Fix sdf bug and added group
fix_before_refactoring: public java.lang.Boolean getNsIsSDFProject () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }
fix_after_refactoring: public java.lang.Boolean srlswhdzxpsvcihdvqgr () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }
× fix_prediction_before: public java.lang.Boolean getNsIsSDFProject () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF , false ) ; }
√ fix_prediction_after: public java.lang.Boolean srlswhdzxpsvcihdvqgr () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }

line_index: 813
bug_before_refactoring: @ java.lang.Override public long refill ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> @ java.lang.Override public long refill ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> HBASE-13888 Fix refill bug from HBASE-13686 (Guanghao Zhang)
bug_after_refactoring: @ java.lang.Override public long ktputlffjagiqpumynpn ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> @ java.lang.Override public long ktputlffjagiqpumynpn ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> HBASE-13888 Fix refill bug from HBASE-13686 (Guanghao Zhang)
fix_before_refactoring: @ java.lang.Override public long refill ( long limit ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; }
fix_after_refactoring: @ java.lang.Override public long ktputlffjagiqpumynpn ( long limit ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; }
× fix_prediction_before: @ java.lang.Override public long refill () { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; }
√ fix_prediction_after: @ java.lang.Override public long ktputlffjagiqpumynpn ( long limit ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; }

line_index: 820
bug_before_refactoring: private android.hardware.Camera getCamera () { return getCamera ( false ) ; } <s> private android.hardware.Camera getCamera () { return getCamera ( false ) ; } <s> fixed: - torch (request camera on demand)  issues: - menu layout broken
bug_after_refactoring: private android.hardware.Camera ytgzxkiybwsxofcpdqqd () { return ytgzxkiybwsxofcpdqqd ( false ) ; } <s> private android.hardware.Camera ytgzxkiybwsxofcpdqqd () { return ytgzxkiybwsxofcpdqqd ( false ) ; } <s> fixed: - torch (request camera on demand)  issues: - menu layout broken
fix_before_refactoring: private android.hardware.Camera getCamera () { return getCamera ( true ) ; }
fix_after_refactoring: private android.hardware.Camera ytgzxkiybwsxofcpdqqd () { return ytgzxkiybwsxofcpdqqd ( true ) ; }
× fix_prediction_before: public android.hardware.Camera getCamera () { return getCamera ( false ) ; }
√ fix_prediction_after: private android.hardware.Camera ytgzxkiybwsxofcpdqqd () { return ytgzxkiybwsxofcpdqqd ( true ) ; }

line_index: 831
bug_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> caught a fairly important type error.  But looks very hard to fix
bug_after_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > xgydiifvycuxmuueqyws ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > xgydiifvycuxmuueqyws ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> caught a fairly important type error.  But looks very hard to fix
fix_before_refactoring: @ java.lang.Override protected simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; }
fix_after_refactoring: @ java.lang.Override protected simplecausal.SimpleCausal.SimpleRemoteObject < ? > xgydiifvycuxmuueqyws ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; }
× fix_prediction_before: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected simplecausal.SimpleCausal.SimpleRemoteObject newObject () { return new simplecausal.SimpleCausal.SimpleRemoteObject () ; }
√ fix_prediction_after: @ java.lang.Override protected simplecausal.SimpleCausal.SimpleRemoteObject < ? > xgydiifvycuxmuueqyws ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; }

line_index: 839
bug_before_refactoring: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> WINDOW SDK Release version 3.3.1 - Edk libs. 32bit  64bit. - C#  Java wrapper. - C++ header files. - Fixed some bugs example with new edk libs.
bug_after_refactoring: boolean juppituavzwjhsvtyaol ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> boolean juppituavzwjhsvtyaol ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> WINDOW SDK Release version 3.3.1 - Edk libs. 32bit  64bit. - C#  Java wrapper. - C++ header files. - Fixed some bugs example with new edk libs.
fix_before_refactoring: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId ) ;
fix_after_refactoring: boolean juppituavzwjhsvtyaol ( int userCloudID , int engineUserID , int profileId ) ;
× fix_prediction_before: boolean ec_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId ) ;
√ fix_prediction_after: boolean juppituavzwjhsvtyaol ( int userCloudID , int engineUserID , int profileId ) ;

line_index: 921
bug_before_refactoring: public java.lang.String [] getTools () {} <s> public java.lang.String [] getTools () {} <s> errors "fixed
bug_after_refactoring: public java.lang.String [] aishltpocwtrddejyong () {} <s> public java.lang.String [] aishltpocwtrddejyong () {} <s> errors "fixed
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: { return new java.lang.String [ 0 ] ; }
√ fix_prediction_after: { return null ; }

line_index: 968
bug_before_refactoring: @ java.lang.Override public void run () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> @ java.lang.Override public void run () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> Handle failures after closed transaction  We should not run `onError` of a transaction after the transaction has been successfully closed.  Fixes #146
bug_after_refactoring: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> Handle failures after closed transaction  We should not run `onError` of a transaction after the transaction has been successfully closed.  Fixes #146
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }
fix_after_refactoring: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }
× fix_prediction_before: @ java.lang.Override public void run () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; }
√ fix_prediction_after: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }

line_index: 1003
bug_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
bug_after_refactoring: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
fix_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
fix_after_refactoring: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { super . onCreateOptionsMenu ( menu , inflater ) ; }
√ fix_prediction_after: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }

line_index: 1071
bug_before_refactoring: @ java.lang.Override public void run () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> @ java.lang.Override public void run () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> Merge pull request #29 from shimohq/2.0.0  Fix some bugs on Android
bug_after_refactoring: @ java.lang.Override public void vzbycclxqvuxebxyqveh () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> @ java.lang.Override public void vzbycclxqvuxebxyqveh () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> Merge pull request #29 from shimohq/2.0.0  Fix some bugs on Android
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( mCoverView ) != null ) { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } }
fix_after_refactoring: @ java.lang.Override public void vzbycclxqvuxebxyqveh () { if ( ( mCoverView ) != null ) { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } }
× fix_prediction_before: @ java.lang.Override public void run () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , mCoverViewWidth , mCoverViewHeight ) ; }
√ fix_prediction_after: @ java.lang.Override public void vzbycclxqvuxebxyqveh () { if ( ( mCoverView ) != null ) { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } }

line_index: 1122
bug_before_refactoring: private void onError () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; } <s> private void onError () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; } <s> fix gcm bug
bug_after_refactoring: private void nfkuoggvuoeegymhivzi () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; } <s> private void nfkuoggvuoeegymhivzi () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; } <s> fix gcm bug
fix_before_refactoring: public void onError () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; }
fix_after_refactoring: public void nfkuoggvuoeegymhivzi () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_before: private void onError ( android.content.Context context ) { android.widget.Toast . makeText ( context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; }
√ fix_prediction_after: public void nfkuoggvuoeegymhivzi () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; }

line_index: 1127
bug_before_refactoring: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
bug_after_refactoring: public boolean wbwvdxjmjfudqfqvbdjh ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> public boolean wbwvdxjmjfudqfqvbdjh ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
fix_before_refactoring: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
fix_after_refactoring: public boolean wbwvdxjmjfudqfqvbdjh () { mStartRecordingAudio = false ; return true ; }
× fix_prediction_before: public void stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; }
√ fix_prediction_after: public boolean wbwvdxjmjfudqfqvbdjh () { mStartRecordingAudio = false ; return true ; }

line_index: 1128
bug_before_refactoring: public void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> public void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> Fix extremely small bug in Receive class
bug_after_refactoring: public void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> public void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> Fix extremely small bug in Receive class
fix_before_refactoring: private void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }
fix_after_refactoring: private void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }
× fix_prediction_before: protected void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }
√ fix_prediction_after: private void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }

line_index: 1176
bug_before_refactoring: protected void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> protected void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> fix context menu btn bug + style  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@56301 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
bug_after_refactoring: protected void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> protected void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> fix context menu btn bug + style  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@56301 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
fix_before_refactoring: public void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; }
fix_after_refactoring: public void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; }
× fix_prediction_before: protected void cutCmd () { if ( ( app . getCopyPaste () ) != null ) { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } }
√ fix_prediction_after: public void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; }

line_index: 1177
bug_before_refactoring: private void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> private void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> fix bug edit/delete user
bug_after_refactoring: private void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> private void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> fix bug edit/delete user
fix_before_refactoring: public void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; }
fix_after_refactoring: public void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; }
× fix_prediction_before: protected void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; }
√ fix_prediction_after: public void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; }

line_index: 1189
bug_before_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; } <s> @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; } <s> Fix issue with ApiServerRunner and Java SDK version mismatch.
bug_after_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; } <s> @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; } <s> Fix issue with ApiServerRunner and Java SDK version mismatch.
fix_before_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull public java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; }
fix_after_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull public java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; }
× fix_prediction_before: @ org.jetbrains.annotations.NotNull public java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; }
√ fix_prediction_after: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull public java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; }

line_index: 1208
bug_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> fixed interrupt bug
bug_after_refactoring: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; } } <s> public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; } } <s> fixed interrupt bug
fix_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
fix_after_refactoring: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; }
× fix_prediction_before: public synchronized void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } }
√ fix_prediction_after: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; }

line_index: 1213
bug_before_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> clean up main of board fix bugs add PlayerDTO
bug_after_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void lioukgfzoosfzqqtaxdo ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . lioukgfzoosfzqqtaxdo ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void lioukgfzoosfzqqtaxdo ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . lioukgfzoosfzqqtaxdo ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> clean up main of board fix bugs add PlayerDTO
fix_before_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; }
fix_after_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void lioukgfzoosfzqqtaxdo ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . lioukgfzoosfzqqtaxdo ( gameID ) ; }
× fix_prediction_before: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; }
√ fix_prediction_after: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void lioukgfzoosfzqqtaxdo ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . lioukgfzoosfzqqtaxdo ( gameID ) ; }

line_index: 1250
bug_before_refactoring: public static void removeItemFromCurrentItemLsitInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> public static void removeItemFromCurrentItemLsitInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> Fix bugs
bug_after_refactoring: public static void gmpwrhutlvwvniraajst ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> public static void gmpwrhutlvwvniraajst ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> Fix bugs
fix_before_refactoring: public static void removeItemFromCurrentItemListInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; }
fix_after_refactoring: public static void removeItemFromCurrentItemListInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; }
× fix_prediction_before: public static void removeItemFromCurrentItemLsitInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; }
√ fix_prediction_after: public static void removeItemFromCurrentItemListInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; }

line_index: 1272
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
× fix_prediction_before: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
√ fix_prediction_after: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }

line_index: 1294
bug_before_refactoring: private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> parser bug fix  gui fixed
bug_after_refactoring: private void xyjmarobmqytffrmptpd ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpComxyjmarobmqytffrmptpdds.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> private void xyjmarobmqytffrmptpd ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpComxyjmarobmqytffrmptpdds.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> parser bug fix  gui fixed
fix_before_refactoring: private void man () { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
fix_after_refactoring: private void xyjmarobmqytffrmptpd () { java.io.File helpFile = new java.io.File ( "HelpComxyjmarobmqytffrmptpdds.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
× fix_prediction_before: private void man ( java.lang.String content ) { java.awt.Desktop . getDesktop () . browse ( new java.io.File ( "HelpCommands.html" ) . toURI () ) ; }
√ fix_prediction_after: private void xyjmarobmqytffrmptpd () { java.io.File helpFile = new java.io.File ( "HelpComxyjmarobmqytffrmptpdds.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }

line_index: 1311
bug_before_refactoring: public void onClick ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> public void onClick ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> Fixed bug where pressing buttons would crash Android 5.0+
bug_after_refactoring: public void ezglehxooamqfkwifrmy ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> public void ezglehxooamqfkwifrmy ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> Fixed bug where pressing buttons would crash Android 5.0+
fix_before_refactoring: public void onClick ( android.view.View view ) { guess ( view ) ; switchQuestionAndAnswers () ; }
fix_after_refactoring: public void ezglehxooamqfkwifrmy ( android.view.View view ) { guess ( view ) ; switchQuestionAndAnswers () ; }
× fix_prediction_before: public void onClick ( android.view.View v ) { guess () ; switchQuestionAndAnswers () ; }
√ fix_prediction_after: public void ezglehxooamqfkwifrmy ( android.view.View view ) { guess ( view ) ; switchQuestionAndAnswers () ; }

line_index: 1334
bug_before_refactoring: private void clickOnce () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> private void clickOnce () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> fix zoom in issue
bug_after_refactoring: private void ottaiqqyljwcffedzvha () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> private void ottaiqqyljwcffedzvha () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> fix zoom in issue
fix_before_refactoring: private void clickOnce () { aRobot . click () ; }
fix_after_refactoring: private void ottaiqqyljwcffedzvha () { aRobot . click () ; }
× fix_prediction_before: public void clickOnce () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }
√ fix_prediction_after: private void ottaiqqyljwcffedzvha () { aRobot . click () ; }

line_index: 1348
bug_before_refactoring: public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> Fix syntax error
bug_after_refactoring: public void ugerfcjamypdzdmurndn ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> public void ugerfcjamypdzdmurndn ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> Fix syntax error
fix_before_refactoring: public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftPower ) ; frontright . set ( rightPower ) ; }
fix_after_refactoring: public void ugerfcjamypdzdmurndn ( double leftPower , double rightPower ) { frontleft . set ( leftPower ) ; frontright . set ( rightPower ) ; }
× fix_prediction_before: public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( ( leftPower * rightPower ) ) ; frontright . set ( ( rightPower * leftPower ) ) ; }
√ fix_prediction_after: public void ugerfcjamypdzdmurndn ( double leftPower , double rightPower ) { frontleft . set ( leftPower ) ; frontright . set ( rightPower ) ; }

line_index: 1349
bug_before_refactoring: public void addUser ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> public void addUser ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> Fix Server bugs
bug_after_refactoring: public void pblmjdpadmtqadohwndr ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> public void pblmjdpadmtqadohwndr ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> Fix Server bugs
fix_before_refactoring: public void addUser ( customclass.User user ) { userList . add ( user ) ; }
fix_after_refactoring: public void pblmjdpadmtqadohwndr ( customclass.User user ) { userList . add ( user ) ; }
× fix_prediction_before: public void addUser ( server.customclass.User user ) { userList . add ( user ) ; }
√ fix_prediction_after: public void pblmjdpadmtqadohwndr ( customclass.User user ) { userList . add ( user ) ; }

line_index: 1369
bug_before_refactoring: @ java.lang.Override public long length ( ) throws java.io.IOException { return this . max ( ( ( this . fileendpos ) + 1 ) , this . initfilelen ) ; } <s> @ java.lang.Override public long length ( ) throws java.io.IOException { return this . max ( ( ( this . fileendpos ) + 1 ) , this . initfilelen ) ; } <s> bugfix
bug_after_refactoring: @ java.lang.Override public long dqwtidddehjekufmrhsq ( ) throws java.io.IOException { return this . max ( ( ( this . fileendpos ) + 1 ) , this . initfilelen ) ; } <s> @ java.lang.Override public long dqwtidddehjekufmrhsq ( ) throws java.io.IOException { return this . max ( ( ( this . fileendpos ) + 1 ) , this . initfilelen ) ; } <s> bugfix
fix_before_refactoring: @ java.lang.Override public long length ( ) throws java.io.IOException { return max ( ( ( fileendpos ) + 1 ) , initfilelen ) ; }
fix_after_refactoring: @ java.lang.Override public long dqwtidddehjekufmrhsq ( ) throws java.io.IOException { return max ( ( ( fileendpos ) + 1 ) , initfilelen ) ; }
× fix_prediction_before: @ java.lang.Override public long length ( ) throws java.io.IOException { return this . fileendpos ; }
√ fix_prediction_after: @ java.lang.Override public long dqwtidddehjekufmrhsq ( ) throws java.io.IOException { return max ( ( ( fileendpos ) + 1 ) , initfilelen ) ; }

line_index: 1372
bug_before_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> Bug 520273 - synchronize access to group subLaunches  This fix makes sure that concurrent access to the subLaunches of a group cannot cause Exceptions - e.g. while terminating a launch group.  Change-Id: I4e009b41b4acaa6104c2c53159e34c7f95841dbe Signed-off-by: Markus Duft <markus.duft@ssi-schaefer.com>
bug_after_refactoring: public void zyestxthfqhemsixixbc ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> public void zyestxthfqhemsixixbc ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> Bug 520273 - synchronize access to group subLaunches  This fix makes sure that concurrent access to the subLaunches of a group cannot cause Exceptions - e.g. while terminating a launch group.  Change-Id: I4e009b41b4acaa6104c2c53159e34c7f95841dbe Signed-off-by: Markus Duft <markus.duft@ssi-schaefer.com>
fix_before_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { synchronized ( subLaunches ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } }
fix_after_refactoring: public void zyestxthfqhemsixixbc ( org.eclipse.debug.core.ILaunch subLaunch ) { synchronized ( subLaunches ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } }
× fix_prediction_before: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , subLaunch ) ; }
√ fix_prediction_after: public void zyestxthfqhemsixixbc ( org.eclipse.debug.core.ILaunch subLaunch ) { synchronized ( subLaunches ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } }

line_index: 1396
bug_before_refactoring: protected void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> protected void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> fixed final bug before first run
bug_after_refactoring: protected void tqfqsqkmjzyvfidpugdq ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> protected void tqfqsqkmjzyvfidpugdq ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> fixed final bug before first run
fix_before_refactoring: public void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } }
fix_after_refactoring: public void tqfqsqkmjzyvfidpugdq ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } }
× fix_prediction_before: protected void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { if ( ! ( mRequestQueue . contains ( request ) ) ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } }
√ fix_prediction_after: public void tqfqsqkmjzyvfidpugdq ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } }

line_index: 1418
bug_before_refactoring: public V remove ( K key ) {} <s> public V remove ( K key ) {} <s> fixing bugs in BSTMap
bug_after_refactoring: public V qrecbofbrghxzdqtefky ( K key ) {} <s> public V qrecbofbrghxzdqtefky ( K key ) {} <s> fixing bugs in BSTMap
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: public boolean remove ( K key ) { return false ; }
√ fix_prediction_after: { return null ; }

line_index: 1462
bug_before_refactoring: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fix class errors
bug_after_refactoring: @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fix class errors
fix_before_refactoring: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
fix_after_refactoring: @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_before: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
√ fix_prediction_after: @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }

line_index: 1496
bug_before_refactoring: public void closeConnection ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void closeConnection ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> few bugs fixed
bug_after_refactoring: public void vmdcaprmllkdninyepwb ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void vmdcaprmllkdninyepwb ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> few bugs fixed
fix_before_refactoring: public void closeConnection ( ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
fix_after_refactoring: public void vmdcaprmllkdninyepwb ( ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_before: public void closeConnection ( java.sql.Connection connection ) throws java.sql.SQLException {}
√ fix_prediction_after: public void vmdcaprmllkdninyepwb ( ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }

line_index: 1503
bug_before_refactoring: public static < T > mnm.mods.util.config.SettingMap < T > map () { return new mnm.mods.util.config.SettingMap < T > () ; } <s> public static < T > mnm.mods.util.config.SettingMap < T > map () { return new mnm.mods.util.config.SettingMap < T > () ; } <s> Fix generics settings errors
bug_after_refactoring: public static < T > mnm.mods.util.config.SettingMap < T > whxdswjicenezissvcfp () { return new mnm.mods.util.config.SettingMap < T > () ; } <s> public static < T > mnm.mods.util.config.SettingMap < T > whxdswjicenezissvcfp () { return new mnm.mods.util.config.SettingMap < T > () ; } <s> Fix generics settings errors
fix_before_refactoring: public static < T > mnm.mods.util.config.SettingMap < T > map ( java.lang.Class < T > type ) { return new mnm.mods.util.config.SettingMap < T > ( type ) ; }
fix_after_refactoring: public static < T > mnm.mods.util.config.SettingMap < T > whxdswjicenezissvcfp ( java.lang.Class < T > type ) { return new mnm.mods.util.config.SettingMap < T > ( type ) ; }
× fix_prediction_before: public static < T > mnm.mods.util.config.SettingMap < T > map () { return new mnm.mods.util.config.SettingMap < T > () ; }
√ fix_prediction_after: public static < T > mnm.mods.util.config.SettingMap < T > whxdswjicenezissvcfp ( java.lang.Class < T > type ) { return new mnm.mods.util.config.SettingMap < T > ( type ) ; }

line_index: 1528
bug_before_refactoring: public org.teavm.classlib.java.lang.TString getName () { return new org.teavm.classlib.java.lang.TString ( name ) ; } <s> public org.teavm.classlib.java.lang.TString getName () { return new org.teavm.classlib.java.lang.TString ( name ) ; } <s> Fix Class.getName(). Fix https://github.com/konsoletyper/teavm/issues/43 Fix Eclipse plugin descriptor  Conflicts: 	teavm-eclipse/teavm-eclipse-core-plugin/META-INF/MANIFEST.MF
bug_after_refactoring: public org.teavm.classlib.java.lang.TString ufefnxowwhepsbwrckof () { return new org.teavm.classlib.java.lang.TString ( name ) ; } <s> public org.teavm.classlib.java.lang.TString ufefnxowwhepsbwrckof () { return new org.teavm.classlib.java.lang.TString ( name ) ; } <s> Fix Class.getName(). Fix https://github.com/konsoletyper/teavm/issues/43 Fix Eclipse plugin descriptor  Conflicts: 	teavm-eclipse/teavm-eclipse-core-plugin/META-INF/MANIFEST.MF
fix_before_refactoring: public org.teavm.classlib.java.lang.TString getName () { return name ; }
fix_after_refactoring: public org.teavm.classlib.java.lang.TString ufefnxowwhepsbwrckof () { return name ; }
× fix_prediction_before: public java.lang.String getName () { return name ; }
√ fix_prediction_after: public org.teavm.classlib.java.lang.TString ufefnxowwhepsbwrckof () { return name ; }

line_index: 1530
bug_before_refactoring: @ io.swagger.client.api.GET ( value = "user/login" ) retrofit2.Call < java.lang.String > loginUser ( @ io.swagger.client.api.Query ( value = "username" ) java.lang.String username , @ io.swagger.client.api.Query ( value = "password" ) java.lang.String password ) ; <s> @ io.swagger.client.api.GET ( value = "user/login" ) retrofit2.Call < java.lang.String > loginUser ( @ io.swagger.client.api.Query ( value = "username" ) java.lang.String username , @ io.swagger.client.api.Query ( value = "password" ) java.lang.String password ) ; <s> fix javadoc error
bug_after_refactoring: @ io.swagger.client.api.GET ( value = "user/login" ) retrofit2.Call < java.lang.String > hrssfmdcvrxiendyjmxh ( @ io.swagger.client.api.Query ( value = "username" ) java.lang.String username , @ io.swagger.client.api.Query ( value = "password" ) java.lang.String password ) ; <s> @ io.swagger.client.api.GET ( value = "user/login" ) retrofit2.Call < java.lang.String > hrssfmdcvrxiendyjmxh ( @ io.swagger.client.api.Query ( value = "username" ) java.lang.String username , @ io.swagger.client.api.Query ( value = "password" ) java.lang.String password ) ; <s> fix javadoc error
fix_before_refactoring: @ io.swagger.client.api.GET ( value = "user/login" ) loginUser ( @ io.swagger.client.api.Query ( value = "username" ) java.lang.String username , @ io.swagger.client.api.Query ( value = "password" ) java.lang.String password ) {}
fix_after_refactoring: @ io.swagger.client.api.GET ( value = "user/login" ) hrssfmdcvrxiendyjmxh ( @ io.swagger.client.api.Query ( value = "username" ) java.lang.String username , @ io.swagger.client.api.Query ( value = "password" ) java.lang.String password ) {}
× fix_prediction_before: @ io.swagger.client.api.GET ( value = "user/login" ) loginUser () {}
√ fix_prediction_after: @ io.swagger.client.api.GET ( value = "user/login" ) hrssfmdcvrxiendyjmxh ( @ io.swagger.client.api.Query ( value = "username" ) java.lang.String username , @ io.swagger.client.api.Query ( value = "password" ) java.lang.String password ) {}

line_index: 1543
bug_before_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: public synchronized boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
fix_after_refactoring: public boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
× fix_prediction_before: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( peer . getHexPeerID () ) != null ; }
√ fix_prediction_after: public boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }

line_index: 1560
bug_before_refactoring: public void visit () { this . visited += 1 ; } <s> public void visit () { this . visited += 1 ; } <s> bugfixes / improvements
bug_after_refactoring: public void xznxdhpqcqyclkteeyfw () { this . xznxdhpqcqyclkteeyfwed += 1 ; } <s> public void xznxdhpqcqyclkteeyfw () { this . xznxdhpqcqyclkteeyfwed += 1 ; } <s> bugfixes / improvements
fix_before_refactoring: public void visit () { visited += 1 ; }
fix_after_refactoring: public void xznxdhpqcqyclkteeyfw () { xznxdhpqcqyclkteeyfwed += 1 ; }
× fix_prediction_before: public void visit () { if ( ! ( this . visited ) ) { this . visited += 1 ; } }
√ fix_prediction_after: public void xznxdhpqcqyclkteeyfw () { xznxdhpqcqyclkteeyfwed += 1 ; }

line_index: 1570
bug_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
bug_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
fix_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
fix_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
× fix_prediction_before: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
√ fix_prediction_after: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }

line_index: 1585
bug_before_refactoring: public java.util.List < java.lang.String > getFlags () { return flags ; } <s> public java.util.List < java.lang.String > getFlags () { return flags ; } <s> Fixed some leaked references to mutable lists  This seems to occur in a lot of different places and it can introduce subtle bugs that are hard to track down.  Here's a couple examples of what you should do to prevent reference leaks and unintentional modification of object internals.
bug_after_refactoring: public java.util.List < java.lang.String > yvrtzgtkvbomzbncggug () { return flags ; } <s> public java.util.List < java.lang.String > yvrtzgtkvbomzbncggug () { return flags ; } <s> Fixed some leaked references to mutable lists  This seems to occur in a lot of different places and it can introduce subtle bugs that are hard to track down.  Here's a couple examples of what you should do to prevent reference leaks and unintentional modification of object internals.
fix_before_refactoring: public java.util.List < java.lang.String > getFlags () { return new java.util.ArrayList < java.lang.String > ( flags ) ; }
fix_after_refactoring: public java.util.List < java.lang.String > yvrtzgtkvbomzbncggug () { return new java.util.ArrayList < java.lang.String > ( flags ) ; }
× fix_prediction_before: public java.util.List < java.lang.String > getFlags () { return new java.util.ArrayList <> ( flags ) ; }
√ fix_prediction_after: public java.util.List < java.lang.String > yvrtzgtkvbomzbncggug () { return new java.util.ArrayList < java.lang.String > ( flags ) ; }

line_index: 1663
bug_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } <s> Fixed a runtime error and made the radio name capitalised
bug_after_refactoring: @ java.lang.Override public void nvhbuzxvtmialbxgdejh ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . nvhbuzxvtmialbxgdejh ( outState ) ; } <s> @ java.lang.Override public void nvhbuzxvtmialbxgdejh ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . nvhbuzxvtmialbxgdejh ( outState ) ; } <s> Fixed a runtime error and made the radio name capitalised
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( this . language ) != null ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } }
fix_after_refactoring: @ java.lang.Override public void nvhbuzxvtmialbxgdejh ( android.os.Bundle outState ) { if ( ( this . language ) != null ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . nvhbuzxvtmialbxgdejh ( outState ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , language . getId () ) ; super . onSaveInstanceState ( outState ) ; }
√ fix_prediction_after: @ java.lang.Override public void nvhbuzxvtmialbxgdejh ( android.os.Bundle outState ) { if ( ( this . language ) != null ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . nvhbuzxvtmialbxgdejh ( outState ) ; } }

line_index: 1664
bug_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
bug_after_refactoring: public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
fix_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
fix_after_refactoring: public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
× fix_prediction_before: public void execute ( backtype.storm.tuple.Tuple tuple ) { if ( sendOnlyOnce ) { initiateEmitter () ; } sendOnlyOnce = false ; }
√ fix_prediction_after: public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }

line_index: 1692
bug_before_refactoring: public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
bug_after_refactoring: public mainPackage.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
fix_before_refactoring: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
fix_after_refactoring: public java.util.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
× fix_prediction_before: public void removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; }
√ fix_prediction_after: public java.util.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }

line_index: 1768
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
bug_after_refactoring: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ; }
√ fix_prediction_after: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }

line_index: 1790
bug_before_refactoring: public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> Organization id issue resolved.
bug_after_refactoring: public void wkjwzfydqvhnugowypnq ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> public void wkjwzfydqvhnugowypnq ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> Organization id issue resolved.
fix_before_refactoring: public void setId ( long id ) { this . id = id ; }
fix_after_refactoring: public void wkjwzfydqvhnugowypnq ( long id ) { this . id = id ; }
× fix_prediction_before: public void setId ( java.lang.Long id ) { this . id = id ; }
√ fix_prediction_after: public void wkjwzfydqvhnugowypnq ( long id ) { this . id = id ; }

line_index: 1807
bug_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
bug_after_refactoring: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , b.length ) ; } <s> public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
fix_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , 0 , b.length ) ; }
fix_after_refactoring: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , 0 , b.length ) ; }
× fix_prediction_before: public static java.lang.String toHex ( byte [] b ) { return toHex ( b , 0 , b.length ) ; }
√ fix_prediction_after: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , 0 , b.length ) ; }

line_index: 1838
bug_before_refactoring: private void finish () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> private void finish () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> fix bug with animation
bug_after_refactoring: private void iawttjzhnoojvbkrasce () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> private void iawttjzhnoojvbkrasce () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> fix bug with animation
fix_before_refactoring: private void finish () {}
fix_after_refactoring: private void iawttjzhnoojvbkrasce () {}
× fix_prediction_before: public void finish () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; }
√ fix_prediction_after: private void iawttjzhnoojvbkrasce () {}

line_index: 1849
bug_before_refactoring: public void UnLoadMod () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { com.peculiargames.andmodplug.PlayerThread . ModPlug_JUnload () ; } } <s> public void UnLoadMod () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { com.peculiargames.andmodplug.PlayerThread . ModPlug_JUnload () ; } } <s> Fixed issues with key press processing for the purpose of game control.
bug_after_refactoring: public void roehafxzlcttipkymevo () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { com.peculiargames.andmodplug.PlayerThread . ModPlug_JUnload () ; } } <s> public void roehafxzlcttipkymevo () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { com.peculiargames.andmodplug.PlayerThread . ModPlug_JUnload () ; } } <s> Fixed issues with key press processing for the purpose of game control.
fix_before_refactoring: public void UnLoadMod () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { ModPlug_JUnload () ; } }
fix_after_refactoring: public void roehafxzlcttipkymevo () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { ModPlug_JUnload () ; } }
× fix_prediction_before: public void UnLoadMod () { ModPlug_JUnload () ; }
√ fix_prediction_after: public void roehafxzlcttipkymevo () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { ModPlug_JUnload () ; } }

line_index: 1858
bug_before_refactoring: public static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> public static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> Add basic graph analysis on some graph  fix bugs in AnalysisController
bug_after_refactoring: public static final void jjkngrgqlgcggpbzjiqk ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> public static final void jjkngrgqlgcggpbzjiqk ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> Add basic graph analysis on some graph  fix bugs in AnalysisController
fix_before_refactoring: private static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; }
fix_after_refactoring: private static final void jjkngrgqlgcggpbzjiqk ( java.lang.String s ) { java.lang.System.out . println ( s ) ; }
× fix_prediction_before: public static final void myPrint ( java.lang.String s ) {}
√ fix_prediction_after: private static final void jjkngrgqlgcggpbzjiqk ( java.lang.String s ) { java.lang.System.out . println ( s ) ; }

line_index: 1873
bug_before_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> fix compatability issues
bug_after_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent zjpxmliaxrzcjtvhzfqo ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> @ java.lang.Override protected net.minecraft.util.SoundEvent zjpxmliaxrzcjtvhzfqo ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> fix compatability issues
fix_before_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound () { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }
fix_after_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent zjpxmliaxrzcjtvhzfqo () { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }
× fix_prediction_before: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }
√ fix_prediction_after: @ java.lang.Override protected net.minecraft.util.SoundEvent zjpxmliaxrzcjtvhzfqo () { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }

line_index: 1884
bug_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> Bugfix
bug_after_refactoring: @ java.lang.Override public void zgdokpnstxnqvsdladpr ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> @ java.lang.Override public void zgdokpnstxnqvsdladpr ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> Bugfix
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( mPairsSpinner ) != null ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }
fix_after_refactoring: @ java.lang.Override public void zgdokpnstxnqvsdladpr ( android.os.Bundle outState ) { if ( ( mPairsSpinner ) != null ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) {}
√ fix_prediction_after: @ java.lang.Override public void zgdokpnstxnqvsdladpr ( android.os.Bundle outState ) { if ( ( mPairsSpinner ) != null ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }

line_index: 1895
bug_before_refactoring: private void refreshMarkers ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> private void refreshMarkers ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> fix codacy issues
bug_after_refactoring: private void edrrsjypmnebbrazebqo ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> private void edrrsjypmnebbrazebqo ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> fix codacy issues
fix_before_refactoring: private void refreshMarkers ( java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } }
fix_after_refactoring: private void edrrsjypmnebbrazebqo ( java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } }
× fix_prediction_before: public void refreshMarkers ( java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } }
√ fix_prediction_after: private void edrrsjypmnebbrazebqo ( java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } }

line_index: 1907
bug_before_refactoring: private void sendState ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> private void sendState ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> Fix bug on destroy application
bug_after_refactoring: private void bpbcjdtvzdhfrfrruspr ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> private void bpbcjdtvzdhfrfrruspr ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> Fix bug on destroy application
fix_before_refactoring: private void sendState () { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
fix_after_refactoring: private void bpbcjdtvzdhfrfrruspr () { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
× fix_prediction_before: protected void sendState ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
√ fix_prediction_after: private void bpbcjdtvzdhfrfrruspr () { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }

line_index: 1911
bug_before_refactoring: public void stopLocationUpdates ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> public void stopLocationUpdates ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> Implemented several bug fixes for stability  including crashing on exit and malformed url problems
bug_after_refactoring: public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> Implemented several bug fixes for stability  including crashing on exit and malformed url problems
fix_before_refactoring: public void stopLocationUpdates ( ) throws java.lang.SecurityException { if ( ( locationManager ) != null ) { locationManager . removeUpdates ( this ) ; } }
fix_after_refactoring: public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { if ( ( locationManager ) != null ) { locationManager . removeUpdates ( this ) ; } }
× fix_prediction_before: public void stopLocationUpdates ( ) throws java.lang.SecurityException {}
√ fix_prediction_after: public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { if ( ( locationManager ) != null ) { locationManager . removeUpdates ( this ) ; } }

line_index: 1918
bug_before_refactoring: public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
bug_after_refactoring: public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
fix_before_refactoring: public void setProgressText ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
fix_after_refactoring: public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
× fix_prediction_before: public void setProgressText ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; if ( mShowProgressText ) { getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } }
√ fix_prediction_after: public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }

line_index: 1976
bug_before_refactoring: @ java.lang.Override public void onDestroy () { progressDialog . dismiss () ; org.wizbots.labtab.LabTabApplication . getInstance () . removeUIListener ( org.wizbots.labtab.interfaces.requesters.CreateTokenListener . class , this ) ; org.wizbots.labtab.LabTabApplication . getInstance () . removeUIListener ( org.wizbots.labtab.interfaces.requesters.GetMentorProfileListener . class , this ) ; super . onDestroy () ; } <s> @ java.lang.Override public void onDestroy () { progressDialog . dismiss () ; org.wizbots.labtab.LabTabApplication . getInstance () . removeUIListener ( org.wizbots.labtab.interfaces.requesters.CreateTokenListener . class , this ) ; org.wizbots.labtab.LabTabApplication . getInstance () . removeUIListener ( org.wizbots.labtab.interfaces.requesters.GetMentorProfileListener . class , this ) ; super . onDestroy () ; } <s> bug resolved
bug_after_refactoring: @ java.lang.Override public void viptkmochudyqlzmilfe () { progressDialog . dismiss () ; org.wizbots.labtab.LabTabApplication . getInstance () . removeUIListener ( org.wizbots.labtab.interfaces.requesters.CreateTokenListener . class , this ) ; org.wizbots.labtab.LabTabApplication . getInstance () . removeUIListener ( org.wizbots.labtab.interfaces.requesters.GetMentorProfileListener . class , this ) ; super . viptkmochudyqlzmilfe () ; } <s> @ java.lang.Override public void viptkmochudyqlzmilfe () { progressDialog . dismiss () ; org.wizbots.labtab.LabTabApplication . getInstance () . removeUIListener ( org.wizbots.labtab.interfaces.requesters.CreateTokenListener . class , this ) ; org.wizbots.labtab.LabTabApplication . getInstance () . removeUIListener ( org.wizbots.labtab.interfaces.requesters.GetMentorProfileListener . class , this ) ; super . viptkmochudyqlzmilfe () ; } <s> bug resolved
fix_before_refactoring: @ java.lang.Override public void onDestroy () { progressDialog . dismiss () ; super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override public void viptkmochudyqlzmilfe () { progressDialog . dismiss () ; super . viptkmochudyqlzmilfe () ; }
× fix_prediction_before: @ java.lang.Override public void onDestroy () { super . onDestroy () ; }
√ fix_prediction_after: @ java.lang.Override public void viptkmochudyqlzmilfe () { progressDialog . dismiss () ; super . viptkmochudyqlzmilfe () ; }

line_index: 1997
bug_before_refactoring: @ java.lang.Override public int hashCode () { return ( ( m_identifier . hashCode () ) ^ ( m_properties . hashCode () ) ) ^ ( m_value . hashCode () ) ; } <s> @ java.lang.Override public int hashCode () { return ( ( m_identifier . hashCode () ) ^ ( m_properties . hashCode () ) ) ^ ( m_value . hashCode () ) ; } <s> Clean up Reference class a bit.  * Fix some documentation errors. * refactor Format function to avoid copying strings repeatedly with .Replace
bug_after_refactoring: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return ( ( m_identifier . eutbbmjcaxsetohodszy () ) ^ ( m_properties . eutbbmjcaxsetohodszy () ) ) ^ ( m_value . eutbbmjcaxsetohodszy () ) ; } <s> @ java.lang.Override public int eutbbmjcaxsetohodszy () { return ( ( m_identifier . eutbbmjcaxsetohodszy () ) ^ ( m_properties . eutbbmjcaxsetohodszy () ) ) ^ ( m_value . eutbbmjcaxsetohodszy () ) ; } <s> Clean up Reference class a bit.  * Fix some documentation errors. * refactor Format function to avoid copying strings repeatedly with .Replace
fix_before_refactoring: @ java.lang.Override public int hashCode () { return m_value . hashCode () ; }
fix_after_refactoring: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return m_value . eutbbmjcaxsetohodszy () ; }
× fix_prediction_before: @ java.lang.Override public int hashCode () { return m_identifier . hashCode () ; }
√ fix_prediction_after: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return m_value . eutbbmjcaxsetohodszy () ; }

line_index: 2048
bug_before_refactoring: @ java.lang.Override public void onLastItemVisible () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> @ java.lang.Override public void onLastItemVisible () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> fix bug 1.产品以及机构专题列表加载更多重复　２.产品专题点击内容页崩溃
bug_after_refactoring: @ java.lang.Override public void bjaatliruhvypwmwarcb () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> @ java.lang.Override public void bjaatliruhvypwmwarcb () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> fix bug 1.产品以及机构专题列表加载更多重复　２.产品专题点击内容页崩溃
fix_before_refactoring: @ java.lang.Override public void onLastItemVisible () {}
fix_after_refactoring: @ java.lang.Override public void bjaatliruhvypwmwarcb () {}
× fix_prediction_before: @ java.lang.Override public void onLastItemVisible () { if ( ( mQueue ) != null ) { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } }
√ fix_prediction_after: @ java.lang.Override public void bjaatliruhvypwmwarcb () {}

