line_index: 8
bug_before_refactoring: private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl resourceAssignmentImpl ) { resetLoads () ; fireAssignmentsChanged () ; } <s> private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl resourceAssignmentImpl ) { resetLoads () ; fireAssignmentsChanged () ; } <s> Never return null name Fixes issue #1409
bug_after_refactoring: private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl ekiavcvcyuprfaeceucn ) { resetLoads () ; fireAssignmentsChanged () ; } <s> private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl ekiavcvcyuprfaeceucn ) { resetLoads () ; fireAssignmentsChanged () ; } <s> Never return null name Fixes issue #1409
fix_before_refactoring: private void fireAssignmentChanged () { resetLoads () ; fireAssignmentsChanged () ; }
fix_after_refactoring: private void fireAssignmentChanged () { resetLoads () ; fireAssignmentsChanged () ; }
× fix_prediction_before: private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl resourceAssignmentImpl ) { resetLoads () ; fireAssignmentsChanged ( resourceAssignmentImpl ) ; }
√ fix_prediction_after: private void fireAssignmentChanged () { resetLoads () ; fireAssignmentsChanged () ; }

line_index: 29
bug_before_refactoring: private boolean validType ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; } <s> private boolean validType ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; } <s> bug fix // sine and changes type a functions using ans might be wrong when used thus type check is re run at run time to ensure that all types are ok
bug_after_refactoring: private boolean validType ( java.lang.String petfkcqdvisulhncppxa , java.lang.String gyktwwxkbpproezpzjbo ) { return ( ( gyktwwxkbpproezpzjbo . equals ( "Unknown" ) ) || ( gyktwwxkbpproezpzjbo . equals ( petfkcqdvisulhncppxa ) ) ) || ( petfkcqdvisulhncppxa . equals ( "any" ) ) ; } <s> private boolean validType ( java.lang.String petfkcqdvisulhncppxa , java.lang.String gyktwwxkbpproezpzjbo ) { return ( ( gyktwwxkbpproezpzjbo . equals ( "Unknown" ) ) || ( gyktwwxkbpproezpzjbo . equals ( petfkcqdvisulhncppxa ) ) ) || ( petfkcqdvisulhncppxa . equals ( "any" ) ) ; } <s> bug fix // sine and changes type a functions using ans might be wrong when used thus type check is re run at run time to ensure that all types are ok
fix_before_refactoring: protected boolean validType ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; }
fix_after_refactoring: protected boolean validType ( java.lang.String petfkcqdvisulhncppxa , java.lang.String gyktwwxkbpproezpzjbo ) { return ( ( gyktwwxkbpproezpzjbo . equals ( "Unknown" ) ) || ( gyktwwxkbpproezpzjbo . equals ( petfkcqdvisulhncppxa ) ) ) || ( petfkcqdvisulhncppxa . equals ( "any" ) ) ; }
× fix_prediction_before: public boolean validType ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; }
√ fix_prediction_after: protected boolean validType ( java.lang.String petfkcqdvisulhncppxa , java.lang.String gyktwwxkbpproezpzjbo ) { return ( ( gyktwwxkbpproezpzjbo . equals ( "Unknown" ) ) || ( gyktwwxkbpproezpzjbo . equals ( petfkcqdvisulhncppxa ) ) ) || ( petfkcqdvisulhncppxa . equals ( "any" ) ) ; }

line_index: 30
bug_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> fix decode bug
bug_after_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( bdagrpiuplneymrsmvnj + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( bdagrpiuplneymrsmvnj + 1 ) ) ; } <s> fix decode bug
fix_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
fix_after_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , bdagrpiuplneymrsmvnj ) ; }
× fix_prediction_before: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return createPage ( core , pageNumber ) ; }
√ fix_prediction_after: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , bdagrpiuplneymrsmvnj ) ; }

line_index: 33
bug_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
bug_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_nwaacbyoewuhqvtolrah" ) java.lang.String nwaacbyoewuhqvtolrah ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_nwaacbyoewuhqvtolrah" ) java.lang.String nwaacbyoewuhqvtolrah ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
fix_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "3/movie/popular" ) fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) {}
√ fix_prediction_after: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;

line_index: 128
bug_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
bug_after_refactoring: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } <s> public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } <s> Fixing arraylist issues found in testing.
fix_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
fix_after_refactoring: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } }
× fix_prediction_before: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( channelId >= 0 ) { _onControl . onOpen ( connection ) ; } }
√ fix_prediction_after: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } }

line_index: 134
bug_before_refactoring: public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> fix: beer count bug
bug_after_refactoring: public ohhuwueznbcsqmvjusaloid increaseBeerCount ( android.ohhuwueznbcsqmvjusaliew.View ohhuwueznbcsqmvjusal ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> public ohhuwueznbcsqmvjusaloid increaseBeerCount ( android.ohhuwueznbcsqmvjusaliew.View ohhuwueznbcsqmvjusal ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> fix: beer count bug
fix_before_refactoring: public void increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
fix_after_refactoring: public ohhuwueznbcsqmvjusaloid increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
× fix_prediction_before: public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , java.lang.Integer . toString ( mBeerCount ) ) ) ; updateBAC () ; }
√ fix_prediction_after: public ohhuwueznbcsqmvjusaloid increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }

line_index: 160
bug_before_refactoring: public void addPoints ( java.lang.Integer [] deltas ) { if ( deltas != null ) { for ( int delta : deltas ) { addPoint ( delta ) ; } } } <s> public void addPoints ( java.lang.Integer [] deltas ) { if ( deltas != null ) { for ( int delta : deltas ) { addPoint ( delta ) ; } } } <s> Merge branch 'davidohana-master' into develop Add support for MAC and fix problems integer to long
bug_after_refactoring: public void addPoints ( java.lang.Integer [] ifubobpfnspidtbhsjfm ) { if ( ifubobpfnspidtbhsjfm != null ) { for ( int delta : ifubobpfnspidtbhsjfm ) { addPoint ( delta ) ; } } } <s> public void addPoints ( java.lang.Integer [] ifubobpfnspidtbhsjfm ) { if ( ifubobpfnspidtbhsjfm != null ) { for ( int delta : ifubobpfnspidtbhsjfm ) { addPoint ( delta ) ; } } } <s> Merge branch 'davidohana-master' into develop Add support for MAC and fix problems integer to long
fix_before_refactoring: public void addPoints ( java.lang.Long [] deltas ) { if ( deltas != null ) { for ( long delta : deltas ) { addPoint ( delta ) ; } } }
fix_after_refactoring: public void addPoints ( java.lang.Long [] ifubobpfnspidtbhsjfm ) { if ( ifubobpfnspidtbhsjfm != null ) { for ( long delta : ifubobpfnspidtbhsjfm ) { addPoint ( delta ) ; } } }
× fix_prediction_before: public void addPoints ( java.lang.Long [] delta ) { if ( delta != null ) { for ( int delta : delta ) { addPoint ( delta ) ; } } }
√ fix_prediction_after: public void addPoints ( java.lang.Long [] ifubobpfnspidtbhsjfm ) { if ( ifubobpfnspidtbhsjfm != null ) { for ( long delta : ifubobpfnspidtbhsjfm ) { addPoint ( delta ) ; } } }

line_index: 229
bug_before_refactoring: public void setDur ( long duration ) { this . dur = duration ; } <s> public void setDur ( long duration ) { this . dur = duration ; } <s> Some bugfixes...
bug_after_refactoring: public void setDur ( long mhuyxcqtiqnpnbsjaqyn ) { this . dur = mhuyxcqtiqnpnbsjaqyn ; } <s> public void setDur ( long mhuyxcqtiqnpnbsjaqyn ) { this . dur = mhuyxcqtiqnpnbsjaqyn ; } <s> Some bugfixes...
fix_before_refactoring: public void setDur ( long dur ) { this . dur = dur ; }
fix_after_refactoring: public void setDur ( long dur ) { this . dur = dur ; }
× fix_prediction_before: public void setDur ( long duration ) { dur = duration ; }
√ fix_prediction_after: public void setDur ( long dur ) { this . dur = dur ; }

line_index: 270
bug_before_refactoring: private void actionButtonAddForToolBar ( java.awt.event.ActionEvent evt ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> private void actionButtonAddForToolBar ( java.awt.event.ActionEvent evt ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
bug_after_refactoring: private void actionButtonAddForToolBar ( java.awt.event.ActionEvent igngvkzhqfnipbvshwnf ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> private void actionButtonAddForToolBar ( java.awt.event.ActionEvent igngvkzhqfnipbvshwnf ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
fix_before_refactoring: private void actionButtonAddForToolBar () { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }
fix_after_refactoring: private void actionButtonAddForToolBar () { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }
× fix_prediction_before: private void actionButtonAddForToolBar ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_after: private void actionButtonAddForToolBar () { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }

line_index: 338
bug_before_refactoring: public void setName ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> public void setName ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> Refresh button added and rotation bug fixed. Closes #22 Closes #6
bug_after_refactoring: public void setName ( java.lang.String agewffiwytcbgyioeawx ) { if ( ! ( agewffiwytcbgyioeawx . equals ( name ) ) ) { name = agewffiwytcbgyioeawx ; commitChanges () ; } } <s> public void setName ( java.lang.String agewffiwytcbgyioeawx ) { if ( ! ( agewffiwytcbgyioeawx . equals ( name ) ) ) { name = agewffiwytcbgyioeawx ; commitChanges () ; } } <s> Refresh button added and rotation bug fixed. Closes #22 Closes #6
fix_before_refactoring: public void setName ( java.lang.String newName ) { name = newName ; }
fix_after_refactoring: public void setName ( java.lang.String agewffiwytcbgyioeawx ) { name = agewffiwytcbgyioeawx ; }
× fix_prediction_before: public void setName ( java.lang.String newName ) { name = newName ; commitChanges () ; }
√ fix_prediction_after: public void setName ( java.lang.String agewffiwytcbgyioeawx ) { name = agewffiwytcbgyioeawx ; }

line_index: 361
bug_before_refactoring: public java.lang.String reverseString1 ( java.lang.String str ) {} <s> public java.lang.String reverseString1 ( java.lang.String str ) {} <s> Adding return statements to fix the compile errors - please write code
bug_after_refactoring: public java.lang.String reverseString1 ( java.lang.String sygxxkhkndguoermlqlh ) {} <s> public java.lang.String reverseString1 ( java.lang.String sygxxkhkndguoermlqlh ) {} <s> Adding return statements to fix the compile errors - please write code
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: { return str ; }
√ fix_prediction_after: { return null ; }

line_index: 417
bug_before_refactoring: public void addRow ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> public void addRow ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> Fixed the bug of getHeight in Board class
bug_after_refactoring: public void addRow ( java.lang.String nwqjgwjqxmzfjrxsehph ) { nwqjgwjqxmzfjrxsehphs . add ( nwqjgwjqxmzfjrxsehph ) ; if ( ( nwqjgwjqxmzfjrxsehph . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> public void addRow ( java.lang.String nwqjgwjqxmzfjrxsehph ) { nwqjgwjqxmzfjrxsehphs . add ( nwqjgwjqxmzfjrxsehph ) ; if ( ( nwqjgwjqxmzfjrxsehph . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> Fixed the bug of getHeight in Board class
fix_before_refactoring: public void addRow ( java.lang.String row ) { rows . add ( row ) ; this . numOfColumns = length () ; ( this . numOfRows ) ++ ; }
fix_after_refactoring: public void addRow ( java.lang.String nwqjgwjqxmzfjrxsehph ) { nwqjgwjqxmzfjrxsehphs . add ( nwqjgwjqxmzfjrxsehph ) ; this . numOfColumns = length () ; ( this . numOfRows ) ++ ; }
× fix_prediction_before: public void addRow ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { numOfColumns = length () ; ( numOfRows ) ++ ; } }
√ fix_prediction_after: public void addRow ( java.lang.String nwqjgwjqxmzfjrxsehph ) { nwqjgwjqxmzfjrxsehphs . add ( nwqjgwjqxmzfjrxsehph ) ; this . numOfColumns = length () ; ( this . numOfRows ) ++ ; }

line_index: 438
bug_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { if ( pzwbbmagmiytpiywuqul != ( - 1 ) ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; } } <s> private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { if ( pzwbbmagmiytpiywuqul != ( - 1 ) ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
fix_after_refactoring: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; }
× fix_prediction_before: public void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } }
√ fix_prediction_after: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; }

line_index: 473
bug_before_refactoring: public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> Solved a problem with the cache nodes
bug_after_refactoring: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( sdkarkvcmyytkqhqlcqf ) ) ) ) ; sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; } <s> public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( sdkarkvcmyytkqhqlcqf ) ) ) ) ; sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; } <s> Solved a problem with the cache nodes
fix_before_refactoring: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
fix_after_refactoring: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; }
× fix_prediction_before: public void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
√ fix_prediction_after: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; }

line_index: 511
bug_before_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( outState ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( outState ) ; } <s> bug fixes and error dialogs on no network
bug_after_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle kvlwakbgvowkieymwjxv ) { kvlwakbgvowkieymwjxv . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( kvlwakbgvowkieymwjxv ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle kvlwakbgvowkieymwjxv ) { kvlwakbgvowkieymwjxv . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( kvlwakbgvowkieymwjxv ) ; } <s> bug fixes and error dialogs on no network
fix_before_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( placeLocateResults ) != null ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; } super . onSaveInstanceState ( outState ) ; }
fix_after_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle kvlwakbgvowkieymwjxv ) { if ( ( placeLocateResults ) != null ) { kvlwakbgvowkieymwjxv . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; } super . onSaveInstanceState ( kvlwakbgvowkieymwjxv ) ; }
× fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( outState ) ; }
√ fix_prediction_after: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle kvlwakbgvowkieymwjxv ) { if ( ( placeLocateResults ) != null ) { kvlwakbgvowkieymwjxv . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; } super . onSaveInstanceState ( kvlwakbgvowkieymwjxv ) ; }

line_index: 566
bug_before_refactoring: public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
bug_after_refactoring: public void setRadii ( byte emvksywonwiqbrublbhp ) { byte before = this . emvksywonwiqbrublbhp ; this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; if ( before != ( this . emvksywonwiqbrublbhp ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void setRadii ( byte emvksywonwiqbrublbhp ) { byte before = this . emvksywonwiqbrublbhp ; this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; if ( before != ( this . emvksywonwiqbrublbhp ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
fix_before_refactoring: public void setRadii ( byte radii ) { this . radii = radii ; }
fix_after_refactoring: public void setRadii ( byte emvksywonwiqbrublbhp ) { this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; }
× fix_prediction_before: public void setRadii ( byte radii ) { synchronized ( this ) { this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } }
√ fix_prediction_after: public void setRadii ( byte emvksywonwiqbrublbhp ) { this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; }

line_index: 751
bug_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> fixed interrupt bug
bug_after_refactoring: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; } } <s> public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; } } <s> fixed interrupt bug
fix_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
fix_after_refactoring: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; }
× fix_prediction_before: public synchronized void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } }
√ fix_prediction_after: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; }

line_index: 840
bug_before_refactoring: public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> Fix syntax error
bug_after_refactoring: public void driveRaw ( double zyyzwticdbhpcrjyyptr , double rthbwthqefdkrlvigmls ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> public void driveRaw ( double zyyzwticdbhpcrjyyptr , double rthbwthqefdkrlvigmls ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> Fix syntax error
fix_before_refactoring: public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftPower ) ; frontright . set ( rightPower ) ; }
fix_after_refactoring: public void driveRaw ( double zyyzwticdbhpcrjyyptr , double rthbwthqefdkrlvigmls ) { frontleft . set ( zyyzwticdbhpcrjyyptr ) ; frontright . set ( rthbwthqefdkrlvigmls ) ; }
× fix_prediction_before: public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( ( leftPower * rightPower ) ) ; frontright . set ( ( rightPower * leftPower ) ) ; }
√ fix_prediction_after: public void driveRaw ( double zyyzwticdbhpcrjyyptr , double rthbwthqefdkrlvigmls ) { frontleft . set ( zyyzwticdbhpcrjyyptr ) ; frontright . set ( rthbwthqefdkrlvigmls ) ; }

line_index: 875
bug_before_refactoring: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> Add build operation listener and fix html append problem
bug_after_refactoring: @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { started ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { started ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> Add build operation listener and fix html append problem
fix_before_refactoring: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
fix_after_refactoring: @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { start ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
× fix_prediction_before: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { start ( "PHASE" ) ; }
√ fix_prediction_after: @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { start ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }

line_index: 964
bug_before_refactoring: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent target ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( target ) ; indicateAddressBookChanged () ; } <s> @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent target ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( target ) ; indicateAddressBookChanged () ; } <s> fixed issues regarding saving of data of events
bug_after_refactoring: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent amlourtytnnpmswdchzl ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( amlourtytnnpmswdchzl ) ; indicateAddressBookChanged () ; } <s> @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent amlourtytnnpmswdchzl ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( amlourtytnnpmswdchzl ) ; indicateAddressBookChanged () ; } <s> fixed issues regarding saving of data of events
fix_before_refactoring: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent event ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( event ) ; indicateAddressBookChanged () ; }
fix_after_refactoring: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent event ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( event ) ; indicateAddressBookChanged () ; }
× fix_prediction_before: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent target ) { addressBook . removeEvent ( target ) ; indicateAddressBookChanged () ; }
√ fix_prediction_after: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent event ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( event ) ; indicateAddressBookChanged () ; }

line_index: 1032
bug_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
bug_after_refactoring: public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
fix_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
fix_after_refactoring: public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; }
× fix_prediction_before: public void execute ( backtype.storm.tuple.Tuple tuple ) { if ( sendOnlyOnce ) { initiateEmitter () ; } sendOnlyOnce = false ; }
√ fix_prediction_after: public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; }

line_index: 1040
bug_before_refactoring: @ java.lang.Override public void desenha ( java.awt.Graphics g ) { g . drawOval ( x , x , largura , altura ) ; } <s> @ java.lang.Override public void desenha ( java.awt.Graphics g ) { g . drawOval ( x , x , largura , altura ) ; } <s> Merge branch '1.0.0bugfix-1.0.0'
bug_after_refactoring: @ java.lanrlcofulvpfudmywgylkb.Override public void desenha ( java.awt.Graphics rlcofulvpfudmywgylkb ) { rlcofulvpfudmywgylkb . drawOval ( x , x , larrlcofulvpfudmywgylkbura , altura ) ; } <s> @ java.lanrlcofulvpfudmywgylkb.Override public void desenha ( java.awt.Graphics rlcofulvpfudmywgylkb ) { rlcofulvpfudmywgylkb . drawOval ( x , x , larrlcofulvpfudmywgylkbura , altura ) ; } <s> Merge branch '1.0.0bugfix-1.0.0'
fix_before_refactoring: @ java.lang.Override public void desenha ( java.awt.Graphics g ) { g . drawOval ( x , y , largura , altura ) ; }
fix_after_refactoring: @ java.lanrlcofulvpfudmywgylkb.Override public void desenha ( java.awt.Graphics rlcofulvpfudmywgylkb ) { rlcofulvpfudmywgylkb . drawOval ( x , y , larrlcofulvpfudmywgylkbura , altura ) ; }
× fix_prediction_before: @ java.lang.Override public void desenha ( java.awt.Graphics g ) { g . drawOval ( x , x , largura , altura ) ; }
√ fix_prediction_after: @ java.lanrlcofulvpfudmywgylkb.Override public void desenha ( java.awt.Graphics rlcofulvpfudmywgylkb ) { rlcofulvpfudmywgylkb . drawOval ( x , y , larrlcofulvpfudmywgylkbura , altura ) ; }

line_index: 1081
bug_before_refactoring: public void close ( android.view.View view ) { mListener . closeThis ( this ) ; } <s> public void close ( android.view.View view ) { mListener . closeThis ( this ) ; } <s> Trying FrameLayout to solve adding problem
bug_after_refactoring: public void close ( android.qfiemwiamnweslxarvjd.View qfiemwiamnweslxarvjd ) { mListener . closeThis ( this ) ; } <s> public void close ( android.qfiemwiamnweslxarvjd.View qfiemwiamnweslxarvjd ) { mListener . closeThis ( this ) ; } <s> Trying FrameLayout to solve adding problem
fix_before_refactoring: public void close () { mListener . closeThis ( this ) ; }
fix_after_refactoring: public void close () { mListener . closeThis ( this ) ; }
× fix_prediction_before: public void close ( android.view.View view ) {}
√ fix_prediction_after: public void close () { mListener . closeThis ( this ) ; }

line_index: 1103
bug_before_refactoring: public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> Organization id issue resolved.
bug_after_refactoring: public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { try { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; } catch ( java.lang.NullPointerException e ) { this . kafiruiegjepzilydofa = 999 ; } } <s> public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { try { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; } catch ( java.lang.NullPointerException e ) { this . kafiruiegjepzilydofa = 999 ; } } <s> Organization id issue resolved.
fix_before_refactoring: public void setId ( long id ) { this . id = id ; }
fix_after_refactoring: public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; }
× fix_prediction_before: public void setId ( java.lang.Long id ) { this . id = id ; }
√ fix_prediction_after: public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; }

line_index: 1110
bug_before_refactoring: public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ; <s> public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ; <s> Fixed network problems! (Grab Moneychanger too.)  Signed-off-by: FellowTraveler <F3llowTraveler@gmail.com>
bug_after_refactoring: public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba , java.lang.String xbfneuxbfglynwbepzqg ) ; <s> public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba , java.lang.String xbfneuxbfglynwbepzqg ) ; <s> Fixed network problems! (Grab Moneychanger too.)  Signed-off-by: FellowTraveler <F3llowTraveler@gmail.com>
fix_before_refactoring: public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 ) ;
fix_after_refactoring: public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba ) ;
× fix_prediction_before: public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ;
√ fix_prediction_after: public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba ) ;

line_index: 1188
bug_before_refactoring: public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
bug_after_refactoring: public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { if ( mShowProgressText ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { if ( mShowProgressText ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
fix_before_refactoring: public void setProgressText ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
fix_after_refactoring: public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
× fix_prediction_before: public void setProgressText ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; if ( mShowProgressText ) { getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } }
√ fix_prediction_after: public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }

line_index: 1264
bug_before_refactoring: private void selectNetPlanViewItem ( long layer , com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; } <s> private void selectNetPlanViewItem ( long layer , com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; } <s> Fixing multilayer refresh problem
bug_after_refactoring: private void selectNetPlanViewItem ( long kotarmznjkgseocsjrwk , com.net2plan.internal.Constants.NetworkElementType thfoyktxxsbyyqdmlfkm , java.lang.Object faziwpsboesubkuabagb ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( thfoyktxxsbyyqdmlfkm , faziwpsboesubkuabagb ) ; } <s> private void selectNetPlanViewItem ( long kotarmznjkgseocsjrwk , com.net2plan.internal.Constants.NetworkElementType thfoyktxxsbyyqdmlfkm , java.lang.Object faziwpsboesubkuabagb ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( thfoyktxxsbyyqdmlfkm , faziwpsboesubkuabagb ) ; } <s> Fixing multilayer refresh problem
fix_before_refactoring: private void selectNetPlanViewItem ( com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; }
fix_after_refactoring: private void selectNetPlanViewItem ( com.net2plan.internal.Constants.NetworkElementType thfoyktxxsbyyqdmlfkm , java.lang.Object faziwpsboesubkuabagb ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( thfoyktxxsbyyqdmlfkm , faziwpsboesubkuabagb ) ; }
× fix_prediction_before: public void selectNetPlanViewItem ( long layer , com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; }
√ fix_prediction_after: private void selectNetPlanViewItem ( com.net2plan.internal.Constants.NetworkElementType thfoyktxxsbyyqdmlfkm , java.lang.Object faziwpsboesubkuabagb ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( thfoyktxxsbyyqdmlfkm , faziwpsboesubkuabagb ) ; }

line_index: 1271
bug_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> fix bug due to section null for about tab
bug_after_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( emyykcuzmwtiuibixyud . getItemCount () ) ) ) ; this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( emyykcuzmwtiuibixyud . getItemCount () ) ) ) ; this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; } <s> fix bug due to section null for about tab
fix_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
fix_after_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; }
× fix_prediction_before: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { if ( feedPartners != null ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } }
√ fix_prediction_after: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; }

line_index: 1272
bug_before_refactoring: private void addCell ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } } <s> private void addCell ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } } <s> Fix errors in Model test
bug_after_refactoring: private void addCell ( application.fxobjects.graph.opnuzicquczkmkczevwb.Cell opnuzicquczkmkczevwb ) { if ( ! ( opnuzicquczkmkczevwbMap . containsKey ( opnuzicquczkmkczevwb . getCellId () ) ) ) { addedCells . add ( opnuzicquczkmkczevwb ) ; opnuzicquczkmkczevwbMap . put ( opnuzicquczkmkczevwb . getCellId () , opnuzicquczkmkczevwb ) ; } } <s> private void addCell ( application.fxobjects.graph.opnuzicquczkmkczevwb.Cell opnuzicquczkmkczevwb ) { if ( ! ( opnuzicquczkmkczevwbMap . containsKey ( opnuzicquczkmkczevwb . getCellId () ) ) ) { addedCells . add ( opnuzicquczkmkczevwb ) ; opnuzicquczkmkczevwbMap . put ( opnuzicquczkmkczevwb . getCellId () , opnuzicquczkmkczevwb ) ; } } <s> Fix errors in Model test
fix_before_refactoring: public void addCell ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } }
fix_after_refactoring: public void addCell ( application.fxobjects.graph.opnuzicquczkmkczevwb.Cell opnuzicquczkmkczevwb ) { if ( ! ( opnuzicquczkmkczevwbMap . containsKey ( opnuzicquczkmkczevwb . getCellId () ) ) ) { addedCells . add ( opnuzicquczkmkczevwb ) ; opnuzicquczkmkczevwbMap . put ( opnuzicquczkmkczevwb . getCellId () , opnuzicquczkmkczevwb ) ; } }
× fix_prediction_before: private void addCell ( application.fxobjects.graph.cell.Cell cell ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; }
√ fix_prediction_after: public void addCell ( application.fxobjects.graph.opnuzicquczkmkczevwb.Cell opnuzicquczkmkczevwb ) { if ( ! ( opnuzicquczkmkczevwbMap . containsKey ( opnuzicquczkmkczevwb . getCellId () ) ) ) { addedCells . add ( opnuzicquczkmkczevwb ) ; opnuzicquczkmkczevwbMap . put ( opnuzicquczkmkczevwb . getCellId () , opnuzicquczkmkczevwb ) ; } }

