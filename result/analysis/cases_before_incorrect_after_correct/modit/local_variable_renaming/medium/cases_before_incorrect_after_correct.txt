line_index: 118
bug_before_refactoring: @ java.lang.Override public com.buginc.java.math.geometry.Vector cnt () { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( com.buginc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; } <s> @ java.lang.Override public com.buginc.java.math.geometry.Vector cnt () { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( com.buginc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; } <s> Fixed: bugs in rtt Added: some builders
bug_after_refactoring: @ java.lang.Override public com.buginc.java.math.geometry.Vector cnt () { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector ( 0 , 0 ) ; int dgerqviygonlvoxzvedf = outline . size () ; for ( com.buginc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( dgerqviygonlvoxzvedf ) ) ; -- dgerqviygonlvoxzvedf ; } return center . dec ( outline . size () ) ; } <s> @ java.lang.Override public com.buginc.java.math.geometry.Vector cnt () { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector ( 0 , 0 ) ; int dgerqviygonlvoxzvedf = outline . size () ; for ( com.buginc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( dgerqviygonlvoxzvedf ) ) ; -- dgerqviygonlvoxzvedf ; } return center . dec ( outline . size () ) ; } <s> Fixed: bugs in rtt Added: some builders
fix_before_refactoring: @ java.lang.Override public java.util.Vector cnt () { java.util.Vector center = new java.util.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( java.util.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.Vector cnt () { java.util.Vector center = new java.util.Vector ( 0 , 0 ) ; int dgerqviygonlvoxzvedf = outline . size () ; for ( java.util.Vector vector : outline ) { center = center . add ( vector . inc ( dgerqviygonlvoxzvedf ) ) ; -- dgerqviygonlvoxzvedf ; } return center . dec ( outline . size () ) ; }
× fix_prediction_before: @ java.lang.Override public com.buginc.java.math.geometry.Vector cnt () { if ( ! ( outline . isEmpty () ) ) { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( com.buginc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; } return cnt () ; }
√ fix_prediction_after: @ java.lang.Override public java.util.Vector cnt () { java.util.Vector center = new java.util.Vector ( 0 , 0 ) ; int dgerqviygonlvoxzvedf = outline . size () ; for ( java.util.Vector vector : outline ) { center = center . add ( vector . inc ( dgerqviygonlvoxzvedf ) ) ; -- dgerqviygonlvoxzvedf ; } return center . dec ( outline . size () ) ; }

line_index: 128
bug_before_refactoring: if ( resource != null ) { exists = resource . getResourceSet () . getURIConverter () . exists ( resource . getURI () , null ) ; } <s> @ java.lang.Override public boolean exists () { boolean exists = super . exists () ; if ( ! exists ) { org.eclipse.emf.ecore.EObject input = getInput ( false ) ; if ( input != null ) { org.eclipse.emf.ecore.resource.Resource resource = input . eResource () ; if ( resource != null ) { exists = resource . getResourceSet () . getURIConverter () . exists ( resource . getURI () , null ) ; } } } return exists ; } <s> [471456] Fix NPE on SessionEditorInput.exists()  - Fix potential NPE on SessionEditorInput.exists() when Resource has not ResourceSet. This can occurs for example with metamodel resource.  Bug: 471456 Change-Id: I6242312937b9fffd1f6190ed1a283b09d2e3ec46 Signed-off-by: Esteban Dugueperoux <esteban.dugueperoux@obeo.fr>
bug_after_refactoring: if ( resource != null ) { iyetfzarjylxmhhpnlov = resource . getResourceSet () . getURIConverter () . iyetfzarjylxmhhpnlov ( resource . getURI () , null ) ; } <s> @ java.lang.Override public boolean exists () { boolean exists = super . exists () ; if ( ! exists ) { org.eclipse.emf.ecore.EObject input = getInput ( false ) ; if ( input != null ) { org.eclipse.emf.ecore.resource.Resource resource = input . eResource () ; if ( resource != null ) { iyetfzarjylxmhhpnlov = resource . getResourceSet () . getURIConverter () . iyetfzarjylxmhhpnlov ( resource . getURI () , null ) ; } } } return exists ; } <s> [471456] Fix NPE on SessionEditorInput.exists()  - Fix potential NPE on SessionEditorInput.exists() when Resource has not ResourceSet. This can occurs for example with metamodel resource.  Bug: 471456 Change-Id: I6242312937b9fffd1f6190ed1a283b09d2e3ec46 Signed-off-by: Esteban Dugueperoux <esteban.dugueperoux@obeo.fr>
fix_before_refactoring: if ( ( resource != null ) && ( ( resource . getResourceSet () ) != null ) ) { exists = resource . getResourceSet () . getURIConverter () . exists ( resource . getURI () , null ) ; }
fix_after_refactoring: if ( ( resource != null ) && ( ( resource . getResourceSet () ) != null ) ) { iyetfzarjylxmhhpnlov = resource . getResourceSet () . getURIConverter () . iyetfzarjylxmhhpnlov ( resource . getURI () , null ) ; }
× fix_prediction_before: if ( ( resource != null ) && ( ( resource . getURI () ) != null ) ) { exists = resource . getResourceSet () . getURIConverter () . exists ( resource . getURI () , null ) ; }
√ fix_prediction_after: if ( ( resource != null ) && ( ( resource . getResourceSet () ) != null ) ) { iyetfzarjylxmhhpnlov = resource . getResourceSet () . getURIConverter () . iyetfzarjylxmhhpnlov ( resource . getURI () , null ) ; }

line_index: 180
bug_before_refactoring: short ct = 1 ; <s> public static void addTable ( br.com.mvbos.mymer.el.TableElement te , java.lang.StringBuilder sb ) { br.com.mvbos.mymer.sync.Differ.entityToScript . setMode ( IEntityToScript.Mode.PLAIN ) ; br.com.mvbos.mymer.sync.Differ.entityToScript . addTable ( te , sb ) ; short ct = 1 ; for ( br.com.mvbos.mymer.xml.field.Field f : te . getFields () ) { br.com.mvbos.mymer.sync.Differ.entityToScript . addField ( te , f , ( ct ++ ) , sb ) ; } } <s> Revert "Bug fix"  This reverts commit 8b136ce6229b5f592e1b385898e5f57571389ec7.
bug_after_refactoring: short asyhrdxrctantntcugkc = 1 ; <s> public static void addTable ( br.com.mvbos.mymer.el.TableElement te , java.lang.StringBuilder sb ) { br.com.mvbos.mymer.sync.Differ.entityToScript . setMode ( IEntityToScript.Mode.PLAIN ) ; br.com.mvbos.mymer.sync.Differ.entityToScript . addTable ( te , sb ) ; short asyhrdxrctantntcugkc = 1 ; for ( br.com.mvbos.mymer.xml.field.Field f : te . getFields () ) { br.com.mvbos.mymer.sync.Differ.entityToScript . addField ( te , f , ( ct ++ ) , sb ) ; } } <s> Revert "Bug fix"  This reverts commit 8b136ce6229b5f592e1b385898e5f57571389ec7.
fix_before_refactoring: int ct = 1 ;
fix_after_refactoring: int asyhrdxrctantntcugkc = 1 ;
× fix_prediction_before: short ct = 0 ;
√ fix_prediction_after: int asyhrdxrctantntcugkc = 1 ;

line_index: 197
bug_before_refactoring: { MainInterface . init () ; int choice = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( choice ) ; if ( choice == 0 ) break; choice = MainInterface . prompt () ; } MainInterface.sc . close () ; } <s> public static void main ( java.lang.String [] args ) { MainInterface . init () ; int choice = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( choice ) ; if ( choice == 0 ) break; choice = MainInterface . prompt () ; } MainInterface.sc . close () ; } <s> Working with bug fixes
bug_after_refactoring: { MainInterface . init () ; int uaqzxglmqdnxuhbywmpl = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( uaqzxglmqdnxuhbywmpl ) ; if ( uaqzxglmqdnxuhbywmpl == 0 ) break; uaqzxglmqdnxuhbywmpl = MainInterface . prompt () ; } MainInterface.sc . close () ; } <s> public static void main ( java.lang.String [] args ) { MainInterface . init () ; int uaqzxglmqdnxuhbywmpl = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( uaqzxglmqdnxuhbywmpl ) ; if ( uaqzxglmqdnxuhbywmpl == 0 ) break; uaqzxglmqdnxuhbywmpl = MainInterface . prompt () ; } MainInterface.sc . close () ; } <s> Working with bug fixes
fix_before_refactoring: { MainInterface . init () ; int choice = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( choice ) ; if ( choice == 0 ) break; choice = MainInterface . prompt () ; } }
fix_after_refactoring: { MainInterface . init () ; int uaqzxglmqdnxuhbywmpl = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( uaqzxglmqdnxuhbywmpl ) ; if ( uaqzxglmqdnxuhbywmpl == 0 ) break; uaqzxglmqdnxuhbywmpl = MainInterface . prompt () ; } }
× fix_prediction_before: { MainInterface . init () ; int choice = MainInterface . prompt () ; while ( true ) { if ( choice == 0 ) break; choice = MainInterface . prompt () ; } }
√ fix_prediction_after: { MainInterface . init () ; int uaqzxglmqdnxuhbywmpl = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( uaqzxglmqdnxuhbywmpl ) ; if ( uaqzxglmqdnxuhbywmpl == 0 ) break; uaqzxglmqdnxuhbywmpl = MainInterface . prompt () ; } }

line_index: 224
bug_before_refactoring: private static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } <s> private static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } <s> #17 Fixed bug with non-dynamic reference when calculating the required spaces
bug_after_refactoring: private static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int iedmicbukyzsysjpfdtg = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < iedmicbukyzsysjpfdtg ; i ++ ) { res = res + " " ; } return res ; } <s> private static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int iedmicbukyzsysjpfdtg = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < iedmicbukyzsysjpfdtg ; i ++ ) { res = res + " " ; } return res ; } <s> #17 Fixed bug with non-dynamic reference when calculating the required spaces
fix_before_refactoring: private static java.lang.String getRequiredSpaces ( java.lang.String reference , java.lang.String message ) { java.lang.String res = "" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }
fix_after_refactoring: private static java.lang.String getRequiredSpaces ( java.lang.String reference , java.lang.String message ) { java.lang.String res = "" ; int iedmicbukyzsysjpfdtg = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < iedmicbukyzsysjpfdtg ; i ++ ) { res = res + " " ; } return res ; }
× fix_prediction_before: public static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }
√ fix_prediction_after: private static java.lang.String getRequiredSpaces ( java.lang.String reference , java.lang.String message ) { java.lang.String res = "" ; int iedmicbukyzsysjpfdtg = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < iedmicbukyzsysjpfdtg ; i ++ ) { res = res + " " ; } return res ; }

line_index: 236
bug_before_refactoring: { int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { tmp *= i ; } tail.data = ( ( double ) ( tmp ) ) ; } <s> void factr () { int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { tmp *= i ; } tail.data = ( ( double ) ( tmp ) ) ; } <s> fixed bug  null factr and reverse
bug_after_refactoring: { int wrmucxgqaucxtyinfjrs = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { wrmucxgqaucxtyinfjrs *= i ; } tail.data = ( ( double ) ( wrmucxgqaucxtyinfjrs ) ) ; } <s> void factr () { int wrmucxgqaucxtyinfjrs = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { wrmucxgqaucxtyinfjrs *= i ; } tail.data = ( ( double ) ( wrmucxgqaucxtyinfjrs ) ) ; } <s> fixed bug  null factr and reverse
fix_before_refactoring: { if ( ( tail.data ) == null ) return; int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { tmp *= i ; } tail.data = ( ( double ) ( tmp ) ) ; }
fix_after_refactoring: { if ( ( tail.data ) == null ) return; int wrmucxgqaucxtyinfjrs = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { wrmucxgqaucxtyinfjrs *= i ; } tail.data = ( ( double ) ( wrmucxgqaucxtyinfjrs ) ) ; }
× fix_prediction_before: { if ( ( tail ) == null ) return; int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { tmp *= i ; } tail.data = ( ( double ) ( tmp ) ) ; }
√ fix_prediction_after: { if ( ( tail.data ) == null ) return; int wrmucxgqaucxtyinfjrs = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { wrmucxgqaucxtyinfjrs *= i ; } tail.data = ( ( double ) ( wrmucxgqaucxtyinfjrs ) ) ; }

line_index: 246
bug_before_refactoring: private java.lang.String receive () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } <s> private java.lang.String receive () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } <s> - implement listen thread - need to solve the problem of data length
bug_after_refactoring: private java.lang.String receive () { byte [] sucbzfeuioadgafbwtrp = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( sucbzfeuioadgafbwtrp , sucbzfeuioadgafbwtrp.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } <s> private java.lang.String receive () { byte [] sucbzfeuioadgafbwtrp = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( sucbzfeuioadgafbwtrp , sucbzfeuioadgafbwtrp.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } <s> - implement listen thread - need to solve the problem of data length
fix_before_refactoring: public java.lang.String receive () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; }
fix_after_refactoring: public java.lang.String receive () { byte [] sucbzfeuioadgafbwtrp = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( sucbzfeuioadgafbwtrp , sucbzfeuioadgafbwtrp.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; }
× fix_prediction_before: private synchronized java.lang.String receive ( java.net.DatagramPacket packet ) { byte [] data = new byte [ 1024 ] ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; }
√ fix_prediction_after: public java.lang.String receive () { byte [] sucbzfeuioadgafbwtrp = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( sucbzfeuioadgafbwtrp , sucbzfeuioadgafbwtrp.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; }

line_index: 334
bug_before_refactoring: { boolean success = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; success = file . delete () ; if ( ! success ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only remove MnuboFileEntity" ) ; return success ; } <s> @ java.lang.Override public boolean remove ( com.mnubo.platform.android.sdk.api.store.MnuboEntity entity ) { boolean success = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; success = file . delete () ; if ( ! success ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only remove MnuboFileEntity" ) ; return success ; } <s> Fix logging error + implemented Serializable on MnuboEntity
bug_after_refactoring: { boolean wwocileudmjlsyeowqgd = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; wwocileudmjlsyeowqgd = file . delete () ; if ( ! wwocileudmjlsyeowqgd ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only remove MnuboFileEntity" ) ; return wwocileudmjlsyeowqgd ; } <s> @ java.lang.Override public boolean remove ( com.mnubo.platform.android.sdk.api.store.MnuboEntity entity ) { boolean wwocileudmjlsyeowqgd = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; wwocileudmjlsyeowqgd = file . delete () ; if ( ! wwocileudmjlsyeowqgd ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only remove MnuboFileEntity" ) ; return wwocileudmjlsyeowqgd ; } <s> Fix logging error + implemented Serializable on MnuboEntity
fix_before_refactoring: { boolean success = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; success = file . delete () ; if ( ! success ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } else { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only remove MnuboFileEntity" ) ; } return success ; }
fix_after_refactoring: { boolean wwocileudmjlsyeowqgd = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; wwocileudmjlsyeowqgd = file . delete () ; if ( ! wwocileudmjlsyeowqgd ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } else { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only remove MnuboFileEntity" ) ; } return wwocileudmjlsyeowqgd ; }
× fix_prediction_before: { boolean success = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; success = file . delete () ; if ( ! success ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } return success ; }
√ fix_prediction_after: { boolean wwocileudmjlsyeowqgd = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; wwocileudmjlsyeowqgd = file . delete () ; if ( ! wwocileudmjlsyeowqgd ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } else { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only remove MnuboFileEntity" ) ; } return wwocileudmjlsyeowqgd ; }

line_index: 346
bug_before_refactoring: if ( ( ( newX >= 0 ) && ( newX < 5 ) ) || ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; } <s> public boolean move ( int dx , int dy , int color ) { int newX = x ; int newY = y ; newX += ( dx * ( - 1 ) ) * color ; newY += dy * color ; if ( ( ( newX >= 0 ) && ( newX < 5 ) ) || ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; } return false ; } <s> Updated Coordinate Fix error with move function not propperly limiting bounds of box
bug_after_refactoring: if ( ( ( yzwwnvueuoewjfnimahq >= 0 ) && ( yzwwnvueuoewjfnimahq < 5 ) ) || ( ( cohlijtwijmpasvztgzr >= 0 ) && ( cohlijtwijmpasvztgzr < 5 ) ) ) { setPair ( yzwwnvueuoewjfnimahq , cohlijtwijmpasvztgzr ) ; return true ; } <s> public boolean move ( int dx , int dy , int color ) { int newX = x ; int newY = y ; newX += ( dx * ( - 1 ) ) * color ; newY += dy * color ; if ( ( ( yzwwnvueuoewjfnimahq >= 0 ) && ( yzwwnvueuoewjfnimahq < 5 ) ) || ( ( cohlijtwijmpasvztgzr >= 0 ) && ( cohlijtwijmpasvztgzr < 5 ) ) ) { setPair ( yzwwnvueuoewjfnimahq , cohlijtwijmpasvztgzr ) ; return true ; } return false ; } <s> Updated Coordinate Fix error with move function not propperly limiting bounds of box
fix_before_refactoring: if ( ( ( newX >= 0 ) && ( newX < 5 ) ) && ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; }
fix_after_refactoring: if ( ( ( yzwwnvueuoewjfnimahq >= 0 ) && ( yzwwnvueuoewjfnimahq < 5 ) ) && ( ( cohlijtwijmpasvztgzr >= 0 ) && ( cohlijtwijmpasvztgzr < 5 ) ) ) { setPair ( yzwwnvueuoewjfnimahq , cohlijtwijmpasvztgzr ) ; return true ; }
× fix_prediction_before: if ( ( ( newX >= 0 ) && ( newX < 5 ) ) && ( newY >= 0 ) ) { setPair ( newX , newY ) ; return true ; }
√ fix_prediction_after: if ( ( ( yzwwnvueuoewjfnimahq >= 0 ) && ( yzwwnvueuoewjfnimahq < 5 ) ) && ( ( cohlijtwijmpasvztgzr >= 0 ) && ( cohlijtwijmpasvztgzr < 5 ) ) ) { setPair ( yzwwnvueuoewjfnimahq , cohlijtwijmpasvztgzr ) ; return true ; }

line_index: 363
bug_before_refactoring: { float result = data [ getIndex ] ; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; return result ; } <s> public java.lang.Float get () { if ( ( getIndex ) == ( putIndex ) ) { return null ; } else { float result = data [ getIndex ] ; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; return result ; } } <s> bugfixes
bug_after_refactoring: { float gagdzcpokxguyxrbnlhc = data [ getIndex ] ; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; return gagdzcpokxguyxrbnlhc ; } <s> public java.lang.Float get () { if ( ( getIndex ) == ( putIndex ) ) { return null ; } else { float gagdzcpokxguyxrbnlhc = data [ getIndex ] ; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; return gagdzcpokxguyxrbnlhc ; } } <s> bugfixes
fix_before_refactoring: { getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; float result = data [ getIndex ] ; return result ; }
fix_after_refactoring: { getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; float gagdzcpokxguyxrbnlhc = data [ getIndex ] ; return gagdzcpokxguyxrbnlhc ; }
× fix_prediction_before: { float result = data [ getIndex ] ; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; putIndex = ( getIndex ) + 1 ; return result ; }
√ fix_prediction_after: { getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; float gagdzcpokxguyxrbnlhc = data [ getIndex ] ; return gagdzcpokxguyxrbnlhc ; }

line_index: 387
bug_before_refactoring: slash.navigation.gui.events.Range . increment ( selectedRows , ( - 1 ) ) <s> public void run () { int [] selectedRows = tablePositions . getSelectedRows () ; if ( ( selectedRows.length ) > 0 ) { getPositionsModel () . up ( selectedRows , 1 ) ; selectPositions ( slash.navigation.gui.events.Range . increment ( selectedRows , ( - 1 ) ) ) ; } } <s> fixes disabled functions until selection problem  might cause performance problems http://forum.routeconverter.com/thread-1987.html
bug_after_refactoring: slash.navigation.gui.events.Range . increment ( riclvjieshlqqxnypyhp , ( - 1 ) ) <s> public void run () { int [] selectedRows = tablePositions . getSelectedRows () ; if ( ( selectedRows.length ) > 0 ) { getPositionsModel () . up ( selectedRows , 1 ) ; selectPositions ( slash.navigation.gui.events.Range . increment ( riclvjieshlqqxnypyhp , ( - 1 ) ) ) ; } } <s> fixes disabled functions until selection problem  might cause performance problems http://forum.routeconverter.com/thread-1987.html
fix_before_refactoring: increment ( selectedRows , ( - 1 ) )
fix_after_refactoring: increment ( riclvjieshlqqxnypyhp , ( - 1 ) )
× fix_prediction_before: increment ( selectedRows , 1 )
√ fix_prediction_after: increment ( riclvjieshlqqxnypyhp , ( - 1 ) )

line_index: 416
bug_before_refactoring: { java.util.Random rand = new java.util.Random () ; int comPick = ( rand . nextInt ( 3 ) ) + 1 ; if ( comPick == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( comPick == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( comPick == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } com.bleh.Main . play () ; } <s> public static void comChoiceS () { java.util.Random rand = new java.util.Random () ; int comPick = ( rand . nextInt ( 3 ) ) + 1 ; if ( comPick == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( comPick == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( comPick == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } com.bleh.Main . play () ; } <s> fixed 'quit' issue
bug_after_refactoring: { java.util.Random rand = new java.util.Random () ; int hzhxswhjwvannmxqoilp = ( rand . nextInt ( 3 ) ) + 1 ; if ( hzhxswhjwvannmxqoilp == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( hzhxswhjwvannmxqoilp == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( hzhxswhjwvannmxqoilp == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } com.bleh.Main . play () ; } <s> public static void comChoiceS () { java.util.Random rand = new java.util.Random () ; int hzhxswhjwvannmxqoilp = ( rand . nextInt ( 3 ) ) + 1 ; if ( hzhxswhjwvannmxqoilp == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( hzhxswhjwvannmxqoilp == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( hzhxswhjwvannmxqoilp == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } com.bleh.Main . play () ; } <s> fixed 'quit' issue
fix_before_refactoring: { java.util.Random rand = new java.util.Random () ; int comPick = ( rand . nextInt ( 3 ) ) + 1 ; if ( comPick == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( comPick == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( comPick == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } }
fix_after_refactoring: { java.util.Random rand = new java.util.Random () ; int hzhxswhjwvannmxqoilp = ( rand . nextInt ( 3 ) ) + 1 ; if ( hzhxswhjwvannmxqoilp == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( hzhxswhjwvannmxqoilp == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( hzhxswhjwvannmxqoilp == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } }
× fix_prediction_before: { java.util.Random rand = new java.util.Random () ; java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; com.bleh.Main . play () ; }
√ fix_prediction_after: { java.util.Random rand = new java.util.Random () ; int hzhxswhjwvannmxqoilp = ( rand . nextInt ( 3 ) ) + 1 ; if ( hzhxswhjwvannmxqoilp == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( hzhxswhjwvannmxqoilp == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( hzhxswhjwvannmxqoilp == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } }

line_index: 438
bug_before_refactoring: { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int r = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; this . close () ; java.lang.System.out . println ( ( "Rows affected: " + r ) ) ; } <s> protected void insert ( java.lang.String table , java.util.HashMap < java.lang.String , java.lang.String > values ) throws java.lang.Exception { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int r = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; this . close () ; java.lang.System.out . println ( ( "Rows affected: " + r ) ) ; } <s> Connection bug fixed  Determines correctly when the connection is closed when needed to open and so. Aditionally  the connection is closed when the Statement Update is done. For the querying  the connection is maintained open to keep the ResultSet values.
bug_after_refactoring: { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int vhilteqkhxcbusbwutrf = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; this . close () ; java.lang.System.out . println ( ( "Rows affected: " + vhilteqkhxcbusbwutrf ) ) ; } <s> protected void insert ( java.lang.String table , java.util.HashMap < java.lang.String , java.lang.String > values ) throws java.lang.Exception { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int vhilteqkhxcbusbwutrf = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; this . close () ; java.lang.System.out . println ( ( "Rows affected: " + vhilteqkhxcbusbwutrf ) ) ; } <s> Connection bug fixed  Determines correctly when the connection is closed when needed to open and so. Aditionally  the connection is closed when the Statement Update is done. For the querying  the connection is maintained open to keep the ResultSet values.
fix_before_refactoring: { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int r = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; }
fix_after_refactoring: { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int vhilteqkhxcbusbwutrf = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; }
× fix_prediction_before: { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int r = ( ( int ) ( this . executeStatement ( ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; }
√ fix_prediction_after: { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int vhilteqkhxcbusbwutrf = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; }

line_index: 452
bug_before_refactoring: resultCount = stmt . executeUpdate ( query ) ; <s> public void assignForm ( int govid , sample.ApplicationData unAssignedForm ) throws java.sql.SQLException { int resultCount ; stmt = conn . createStatement () ; java.lang.String query = ( ( ( "UPDATE FORM SET FORM.STATUS = 'ASSIGNED', FORM.GOVID = " + govid ) + " WHERE TTBID = '" ) + ( unAssignedForm . getTtbID () ) ) + "'" ; resultCount = stmt . executeUpdate ( query ) ; } <s> Fixed Bug
bug_after_refactoring: mxppjwglkogaqxibndbh = stmt . executeUpdate ( query ) ; <s> public void assignForm ( int govid , sample.ApplicationData unAssignedForm ) throws java.sql.SQLException { int resultCount ; stmt = conn . createStatement () ; java.lang.String query = ( ( ( "UPDATE FORM SET FORM.STATUS = 'ASSIGNED', FORM.GOVID = " + govid ) + " WHERE TTBID = '" ) + ( unAssignedForm . getTtbID () ) ) + "'" ; mxppjwglkogaqxibndbh = stmt . executeUpdate ( query ) ; } <s> Fixed Bug
fix_before_refactoring: stmt . executeUpdate ( query ) ;
fix_after_refactoring: stmt . executeUpdate ( query ) ;
× fix_prediction_before: resultCount ++ ;
√ fix_prediction_after: stmt . executeUpdate ( query ) ;

line_index: 482
bug_before_refactoring: switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: retval = super . onOptionsItemSelected ( item ) ; } <s> @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { boolean retval = true ; switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: retval = super . onOptionsItemSelected ( item ) ; } return retval ; } <s> Fix codacy issues
bug_after_refactoring: switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: ppobbciggghdtnfzzzfb = super . onOptionsItemSelected ( item ) ; } <s> @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { boolean retval = true ; switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: ppobbciggghdtnfzzzfb = super . onOptionsItemSelected ( item ) ; } return retval ; } <s> Fix codacy issues
fix_before_refactoring: switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: retval = super . onOptionsItemSelected ( item ) ; break; }
fix_after_refactoring: switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: ppobbciggghdtnfzzzfb = super . onOptionsItemSelected ( item ) ; break; }
× fix_prediction_before: switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: retval = super . onOptionsItemSelected ( item ) ; }
√ fix_prediction_after: switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: ppobbciggghdtnfzzzfb = super . onOptionsItemSelected ( item ) ; break; }

line_index: 502
bug_before_refactoring: randomPos = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) ) + 1 <s> public void shuffle () { sorted = false ; for ( int i = ( topCard ) - 1 ; i > 0 ; i -- ) { int randomPos = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) ) + 1 ; Card temp = cards [ i ] ; cards [ i ] = cards [ randomPos ] ; cards [ randomPos ] = temp ; } } <s> Fixed a lot of issues in Card and Deck  made a new DeckTester
bug_after_refactoring: touosnixnzozrojndbcm = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) ) + 1 <s> public void shuffle () { sorted = false ; for ( int i = ( topCard ) - 1 ; i > 0 ; i -- ) { int touosnixnzozrojndbcm = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) ) + 1 ; Card temp = cards [ i ] ; cards [ i ] = cards [ randomPos ] ; cards [ randomPos ] = temp ; } } <s> Fixed a lot of issues in Card and Deck  made a new DeckTester
fix_before_refactoring: randomPos = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) )
fix_after_refactoring: touosnixnzozrojndbcm = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) )
× fix_prediction_before: randomPos = ( topCard ) * ( java.lang.Math . random () )
√ fix_prediction_after: touosnixnzozrojndbcm = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) )

line_index: 516
bug_before_refactoring: org.powertac.tournament.beans.Round . getRoundFromId ( roundId , true ) <s> public void afterPropertiesSet ( ) throws java.lang.Exception { int roundId = getRoundId () ; if ( roundId < 1 ) { return; } round = org.powertac.tournament.beans.Round . getRoundFromId ( roundId , true ) ; loadRoundInfo () ; loadParticipantInfo () ; loadCsvLinks () ; loadMaps () ; } <s> Bugfix : load fat round for actionRound
bug_after_refactoring: org.powertac.tournament.beans.Round . getRoundFromId ( dmtrjyevbmrhedowugjc , true ) <s> public void afterPropertiesSet ( ) throws java.lang.Exception { int roundId = getRoundId () ; if ( roundId < 1 ) { return; } round = org.powertac.tournament.beans.Round . getRoundFromId ( dmtrjyevbmrhedowugjc , true ) ; loadRoundInfo () ; loadParticipantInfo () ; loadCsvLinks () ; loadMaps () ; } <s> Bugfix : load fat round for actionRound
fix_before_refactoring: org.powertac.tournament.beans.Round . getRoundFromId ( roundId , false )
fix_after_refactoring: org.powertac.tournament.beans.Round . getRoundFromId ( dmtrjyevbmrhedowugjc , false )
× fix_prediction_before: org.powertac.tournament.beans.Round . getRoundFromId ( roundId , true , false )
√ fix_prediction_after: org.powertac.tournament.beans.Round . getRoundFromId ( dmtrjyevbmrhedowugjc , false )

line_index: 622
bug_before_refactoring: if ( ( containsFilter && containsIgnore ) || ( ( ! containsFilter ) && ( ! containsIgnore ) ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return line + "\n" ; } <s> java.lang.String add ( de.hk.wfh.rs.FilterContext filterContext , java.lang.String line ) { boolean containsFilter = containsPattern ( line , filterContext . getFilterList () ) ; boolean containsIgnore = containsPattern ( line , filterContext . getIgnoreList () ) ; if ( ( containsFilter && containsIgnore ) || ( ( ! containsFilter ) && ( ! containsIgnore ) ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return line + "\n" ; } return "\n" ; } <s> serveral bugfixes
bug_after_refactoring: if ( ( xgefagqpgujdrbfamxuw && ngbmldxhqihinyzukeww ) || ( ( ! xgefagqpgujdrbfamxuw ) && ( ! ngbmldxhqihinyzukeww ) ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( xgefagqpgujdrbfamxuw && ( ! ngbmldxhqihinyzukeww ) ) { return line + "\n" ; } <s> java.lang.String add ( de.hk.wfh.rs.FilterContext filterContext , java.lang.String line ) { boolean containsFilter = containsPattern ( line , filterContext . getFilterList () ) ; boolean containsIgnore = containsPattern ( line , filterContext . getIgnoreList () ) ; if ( ( xgefagqpgujdrbfamxuw && ngbmldxhqihinyzukeww ) || ( ( ! xgefagqpgujdrbfamxuw ) && ( ! ngbmldxhqihinyzukeww ) ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( xgefagqpgujdrbfamxuw && ( ! ngbmldxhqihinyzukeww ) ) { return line + "\n" ; } return "\n" ; } <s> serveral bugfixes
fix_before_refactoring: if ( containsFilter && containsIgnore ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return line + "\n" ; }
fix_after_refactoring: if ( xgefagqpgujdrbfamxuw && ngbmldxhqihinyzukeww ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( xgefagqpgujdrbfamxuw && ( ! ngbmldxhqihinyzukeww ) ) { return line + "\n" ; }
× fix_prediction_before: if ( ( containsFilter && containsIgnore ) || ( ! containsFilter ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsIgnore && ( ! containsIgnore ) ) { return line + "\n" ; }
√ fix_prediction_after: if ( xgefagqpgujdrbfamxuw && ngbmldxhqihinyzukeww ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( xgefagqpgujdrbfamxuw && ( ! ngbmldxhqihinyzukeww ) ) { return line + "\n" ; }

line_index: 626
bug_before_refactoring: { int id = view . getId () ; android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } } <s> public void toggleEventInvite ( android.view.View view ) { int id = view . getId () ; android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } } <s> more progress with invite friends dialog (smoother UX  adding list items  fixing bugs)
bug_after_refactoring: { int pgzxdjqrniflkfxyfmlu = view . getId () ; android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } } <s> public void toggleEventInvite ( android.view.View view ) { int pgzxdjqrniflkfxyfmlu = view . getId () ; android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } } <s> more progress with invite friends dialog (smoother UX  adding list items  fixing bugs)
fix_before_refactoring: { android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } }
fix_after_refactoring: { android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } }
× fix_prediction_before: { int id = view . getId () ; android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } }
√ fix_prediction_after: { android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } }

line_index: 631
bug_before_refactoring: { int i = 0 ; int count = 0 ; for ( i = 0 ; i < ( board.length ) ; i ++ ) { if ( addQueen ( i , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( i , col ) ; } } } return false ; } <s> private boolean solveH ( int col ) { int i = 0 ; int count = 0 ; for ( i = 0 ; i < ( board.length ) ; i ++ ) { if ( addQueen ( i , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( i , col ) ; } } } return false ; } <s> fixed countsolutions i rlly want to add exclamation marks but if i do github will return an error
bug_after_refactoring: { int xiujuiclojqdduoczpfv = 0 ; int brikigzrufpzpmpsuryc = 0 ; for ( xiujuiclojqdduoczpfv = 0 ; xiujuiclojqdduoczpfv < ( board.length ) ; xiujuiclojqdduoczpfv ++ ) { if ( addQueen ( xiujuiclojqdduoczpfv , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( xiujuiclojqdduoczpfv , col ) ; } } } return false ; } <s> private boolean solveH ( int col ) { int xiujuiclojqdduoczpfv = 0 ; int brikigzrufpzpmpsuryc = 0 ; for ( xiujuiclojqdduoczpfv = 0 ; xiujuiclojqdduoczpfv < ( board.length ) ; xiujuiclojqdduoczpfv ++ ) { if ( addQueen ( xiujuiclojqdduoczpfv , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( xiujuiclojqdduoczpfv , col ) ; } } } return false ; } <s> fixed countsolutions i rlly want to add exclamation marks but if i do github will return an error
fix_before_refactoring: { int i = 0 ; for ( i = 0 ; i < ( board.length ) ; i ++ ) { if ( addQueen ( i , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( i , col ) ; } } } return false ; }
fix_after_refactoring: { int xiujuiclojqdduoczpfv = 0 ; for ( xiujuiclojqdduoczpfv = 0 ; xiujuiclojqdduoczpfv < ( board.length ) ; xiujuiclojqdduoczpfv ++ ) { if ( addQueen ( xiujuiclojqdduoczpfv , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( xiujuiclojqdduoczpfv , col ) ; } } } return false ; }
× fix_prediction_before: { int i = 0 ; for ( i = 0 ; i < ( board.length ) ; i ++ ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( i , col ) ; } } return false ; }
√ fix_prediction_after: { int xiujuiclojqdduoczpfv = 0 ; for ( xiujuiclojqdduoczpfv = 0 ; xiujuiclojqdduoczpfv < ( board.length ) ; xiujuiclojqdduoczpfv ++ ) { if ( addQueen ( xiujuiclojqdduoczpfv , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( xiujuiclojqdduoczpfv , col ) ; } } } return false ; }

line_index: 649
bug_before_refactoring: public void getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; } <s> public void getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; } <s> fixed errors in calc interest
bug_after_refactoring: public void getInterest () { int stxysrhtbdlsdhxmfsmv = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double yromemwxxjdkjtjdeblj = java.lang.Math . pow ( ( 1 + ( rate ) ) , stxysrhtbdlsdhxmfsmv ) ; balance = ( balance ) * yromemwxxjdkjtjdeblj ; firstdate = seconddate ; } <s> public void getInterest () { int stxysrhtbdlsdhxmfsmv = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double yromemwxxjdkjtjdeblj = java.lang.Math . pow ( ( 1 + ( rate ) ) , stxysrhtbdlsdhxmfsmv ) ; balance = ( balance ) * yromemwxxjdkjtjdeblj ; firstdate = seconddate ; } <s> fixed errors in calc interest
fix_before_refactoring: public double getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; return balance ; }
fix_after_refactoring: public double getInterest () { int stxysrhtbdlsdhxmfsmv = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double yromemwxxjdkjtjdeblj = java.lang.Math . pow ( ( 1 + ( rate ) ) , stxysrhtbdlsdhxmfsmv ) ; balance = ( balance ) * yromemwxxjdkjtjdeblj ; firstdate = seconddate ; return balance ; }
× fix_prediction_before: public double getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; return ratetime ; }
√ fix_prediction_after: public double getInterest () { int stxysrhtbdlsdhxmfsmv = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double yromemwxxjdkjtjdeblj = java.lang.Math . pow ( ( 1 + ( rate ) ) , stxysrhtbdlsdhxmfsmv ) ; balance = ( balance ) * yromemwxxjdkjtjdeblj ; firstdate = seconddate ; return balance ; }

line_index: 703
bug_before_refactoring: { double [] primArr = new double [ valArr.length ] ; if ( ( valArr.length ) <= 0 ) java.lang.System.err . println ( "ERROR: array is null" ) ; java.lang.System.out . println ( ( "Valarr length = " + ( valArr.length ) ) ) ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { java.lang.System.out . println ( ( "i= " + i ) ) ; primArr [ i ] = valArr [ i ] ; } return primArr ; } <s> private double [] primConverter ( java.lang.Double [] valArr ) { double [] primArr = new double [ valArr.length ] ; if ( ( valArr.length ) <= 0 ) java.lang.System.err . println ( "ERROR: array is null" ) ; java.lang.System.out . println ( ( "Valarr length = " + ( valArr.length ) ) ) ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { java.lang.System.out . println ( ( "i= " + i ) ) ; primArr [ i ] = valArr [ i ] ; } return primArr ; } <s> commented out debugging code  fixed file locations  commented out code in the main
bug_after_refactoring: { double [] wdznkfbwjrsqzfeqimhr = new double [ valArr.length ] ; if ( ( valArr.length ) <= 0 ) java.lang.System.err . println ( "ERROR: array is null" ) ; java.lang.System.out . println ( ( "Valarr length = " + ( valArr.length ) ) ) ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { java.lang.System.out . println ( ( "i= " + i ) ) ; wdznkfbwjrsqzfeqimhr [ i ] = valArr [ i ] ; } return wdznkfbwjrsqzfeqimhr ; } <s> private double [] primConverter ( java.lang.Double [] valArr ) { double [] wdznkfbwjrsqzfeqimhr = new double [ valArr.length ] ; if ( ( valArr.length ) <= 0 ) java.lang.System.err . println ( "ERROR: array is null" ) ; java.lang.System.out . println ( ( "Valarr length = " + ( valArr.length ) ) ) ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { java.lang.System.out . println ( ( "i= " + i ) ) ; wdznkfbwjrsqzfeqimhr [ i ] = valArr [ i ] ; } return wdznkfbwjrsqzfeqimhr ; } <s> commented out debugging code  fixed file locations  commented out code in the main
fix_before_refactoring: { double [] primArr = new double [ valArr.length ] ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { primArr [ i ] = valArr [ i ] ; } return primArr ; }
fix_after_refactoring: { double [] wdznkfbwjrsqzfeqimhr = new double [ valArr.length ] ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { wdznkfbwjrsqzfeqimhr [ i ] = valArr [ i ] ; } return wdznkfbwjrsqzfeqimhr ; }
× fix_prediction_before: { double [] primArr = new double [ valArr.length ] ; if ( ( valArr.length ) <= 0 ) java.lang.System.err . println ( "ERROR: array is null" ) ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { java.lang.System.out . println ( ( "i= " + i ) ) ; primArr [ i ] = valArr [ i ] ; } return primArr ; }
√ fix_prediction_after: { double [] wdznkfbwjrsqzfeqimhr = new double [ valArr.length ] ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { wdznkfbwjrsqzfeqimhr [ i ] = valArr [ i ] ; } return wdznkfbwjrsqzfeqimhr ; }

line_index: 704
bug_before_refactoring: { int res = firstClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "firstClassOrdering" ) ; if ( res == 0 ) { res = secondClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "SecondClassOrdering" ) ; if ( res == 0 ) { res = thirdClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "thirdClassOrdering" ) ; } } return res ; } <s> @ java.lang.Override public int compare ( com.example.nickozoulis.teamproj.domain.Referee lRef , com.example.nickozoulis.teamproj.domain.Referee rRef ) { int res = firstClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "firstClassOrdering" ) ; if ( res == 0 ) { res = secondClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "SecondClassOrdering" ) ; if ( res == 0 ) { res = thirdClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "thirdClassOrdering" ) ; } } return res ; } <s> more features and bug fixes
bug_after_refactoring: { int cttisehwqshsnkrxuiua = firstClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "firstClassOrdering" ) ; if ( cttisehwqshsnkrxuiua == 0 ) { cttisehwqshsnkrxuiua = secondClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "SecondClassOrdering" ) ; if ( cttisehwqshsnkrxuiua == 0 ) { cttisehwqshsnkrxuiua = thirdClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "thirdClassOrdering" ) ; } } return cttisehwqshsnkrxuiua ; } <s> @ java.lang.Override public int compare ( com.example.nickozoulis.teamproj.domain.Referee lRef , com.example.nickozoulis.teamproj.domain.Referee rRef ) { int cttisehwqshsnkrxuiua = firstClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "firstClassOrdering" ) ; if ( cttisehwqshsnkrxuiua == 0 ) { cttisehwqshsnkrxuiua = secondClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "SecondClassOrdering" ) ; if ( cttisehwqshsnkrxuiua == 0 ) { cttisehwqshsnkrxuiua = thirdClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "thirdClassOrdering" ) ; } } return cttisehwqshsnkrxuiua ; } <s> more features and bug fixes
fix_before_refactoring: { int res = firstClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = secondClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = thirdClassOrdering ( lRef , rRef ) ; } } return res ; }
fix_after_refactoring: { int cttisehwqshsnkrxuiua = firstClassOrdering ( lRef , rRef ) ; if ( cttisehwqshsnkrxuiua == 0 ) { cttisehwqshsnkrxuiua = secondClassOrdering ( lRef , rRef ) ; if ( cttisehwqshsnkrxuiua == 0 ) { cttisehwqshsnkrxuiua = thirdClassOrdering ( lRef , rRef ) ; } } return cttisehwqshsnkrxuiua ; }
× fix_prediction_before: { int res = firstClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = secondClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = thirdClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = firstClassOrdering ( lRef , rRef ) ; } } } return res ; }
√ fix_prediction_after: { int cttisehwqshsnkrxuiua = firstClassOrdering ( lRef , rRef ) ; if ( cttisehwqshsnkrxuiua == 0 ) { cttisehwqshsnkrxuiua = secondClassOrdering ( lRef , rRef ) ; if ( cttisehwqshsnkrxuiua == 0 ) { cttisehwqshsnkrxuiua = thirdClassOrdering ( lRef , rRef ) ; } } return cttisehwqshsnkrxuiua ; }

line_index: 719
bug_before_refactoring: if ( ( stoneBlocks + boardBlocksCount ) == ( Board.WIDTH_IN_BLOCKS ) ) { lines ++ ; } <s> public static int getFutureLinesVanished ( de.slothsoft.tetris.Board board , de.slothsoft.tetris.Stone stone , int blockY ) { int lines = 0 ; for ( int y = 0 ; y < ( stone . getHeightInBlocks () ) ; y ++ ) { int stoneBlocks = stone . calculateBlockCountOfLine ( y ) ; int boardBlocksCount = board . calculateBlockCountOfLine ( ( y + blockY ) ) ; if ( ( stoneBlocks + boardBlocksCount ) == ( Board.WIDTH_IN_BLOCKS ) ) { lines ++ ; } } return lines ; } <s> bug fixes
bug_after_refactoring: if ( ( gjlkbrhhaadmhfvcaznx + qvwuhmlzyzhtgqspvboy ) == ( Board.WIDTH_IN_BLOCKS ) ) { xsgabswdftidefvmeehv ++ ; } <s> public static int getFutureLinesVanished ( de.slothsoft.tetris.Board board , de.slothsoft.tetris.Stone stone , int blockY ) { int lines = 0 ; for ( int y = 0 ; y < ( stone . getHeightInBlocks () ) ; y ++ ) { int stoneBlocks = stone . calculateBlockCountOfLine ( y ) ; int boardBlocksCount = board . calculateBlockCountOfLine ( ( y + blockY ) ) ; if ( ( gjlkbrhhaadmhfvcaznx + qvwuhmlzyzhtgqspvboy ) == ( Board.WIDTH_IN_BLOCKS ) ) { xsgabswdftidefvmeehv ++ ; } } return lines ; } <s> bug fixes
fix_before_refactoring: if ( ( stoneBlocks + boardBlocksCount ) >= ( Board.WIDTH_IN_BLOCKS ) ) { lines ++ ; }
fix_after_refactoring: if ( ( gjlkbrhhaadmhfvcaznx + qvwuhmlzyzhtgqspvboy ) >= ( Board.WIDTH_IN_BLOCKS ) ) { xsgabswdftidefvmeehv ++ ; }
× fix_prediction_before: if ( boardBlocksCount >= ( stoneBlocks + boardBlocksCount ) ) { lines ++ ; }
√ fix_prediction_after: if ( ( gjlkbrhhaadmhfvcaznx + qvwuhmlzyzhtgqspvboy ) >= ( Board.WIDTH_IN_BLOCKS ) ) { xsgabswdftidefvmeehv ++ ; }

line_index: 721
bug_before_refactoring: if ( applyTotal <= 5 ) { int count = newsDao . applyTop ( id ) ; if ( count > 0 ) { bool = true ; } } <s> public boolean applyTop ( int id ) { boolean bool = false ; int applyTotal = newsDao . applyTotalTop () ; if ( applyTotal <= 5 ) { int count = newsDao . applyTop ( id ) ; if ( count > 0 ) { bool = true ; } } return bool ; } <s> #fix bug
bug_after_refactoring: if ( sajluifewgtmsgwkpfwo <= 5 ) { int mdasbofpfrunjrkyubvo = newsDao . applyTop ( id ) ; if ( mdasbofpfrunjrkyubvo > 0 ) { pewnajohtgutqfmmpbse = true ; } } <s> public boolean applyTop ( int id ) { boolean bool = false ; int applyTotal = newsDao . applyTotalTop () ; if ( sajluifewgtmsgwkpfwo <= 5 ) { int mdasbofpfrunjrkyubvo = newsDao . applyTop ( id ) ; if ( mdasbofpfrunjrkyubvo > 0 ) { pewnajohtgutqfmmpbse = true ; } } return bool ; } <s> #fix bug
fix_before_refactoring: if ( applyTotal < 5 ) { int count = newsDao . applyTop ( id ) ; if ( count > 0 ) { bool = true ; } }
fix_after_refactoring: if ( sajluifewgtmsgwkpfwo < 5 ) { int mdasbofpfrunjrkyubvo = newsDao . applyTop ( id ) ; if ( mdasbofpfrunjrkyubvo > 0 ) { pewnajohtgutqfmmpbse = true ; } }
× fix_prediction_before: if ( applyTotal <= 5 ) { int count = newsDao . applyTop ( id ) ; if ( count > 0 ) { bool = true ; } } else { bool = false ; }
√ fix_prediction_after: if ( sajluifewgtmsgwkpfwo < 5 ) { int mdasbofpfrunjrkyubvo = newsDao . applyTop ( id ) ; if ( mdasbofpfrunjrkyubvo > 0 ) { pewnajohtgutqfmmpbse = true ; } }

line_index: 730
bug_before_refactoring: while ( nbObjectsSoFar <= index ) { jumpingalien.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar ++ ; pos ++ ; } <s> private int getInternalIndexOfObjectAt ( int index ) throws java.lang.IndexOutOfBoundsException { int nbObjectsSoFar = 0 ; int pos = 0 ; while ( nbObjectsSoFar <= index ) { jumpingalien.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar ++ ; pos ++ ; } return pos - 1 ; } <s> bugfix
bug_after_refactoring: while ( svzjoiksshfeurlevnjw <= index ) { jumpingalien.model.Characters currentObject = objects . get ( mojigtlbqllabzjtther ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == mojigtlbqllabzjtther ) ) svzjoiksshfeurlevnjw ++ ; mojigtlbqllabzjtther ++ ; } <s> private int getInternalIndexOfObjectAt ( int index ) throws java.lang.IndexOutOfBoundsException { int nbObjectsSoFar = 0 ; int pos = 0 ; while ( svzjoiksshfeurlevnjw <= index ) { jumpingalien.model.Characters currentObject = objects . get ( mojigtlbqllabzjtther ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == mojigtlbqllabzjtther ) ) svzjoiksshfeurlevnjw ++ ; mojigtlbqllabzjtther ++ ; } return pos - 1 ; } <s> bugfix
fix_before_refactoring: while ( nbObjectsSoFar < index ) { jumpingalien.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar ++ ; pos ++ ; }
fix_after_refactoring: while ( svzjoiksshfeurlevnjw < index ) { jumpingalien.model.Characters currentObject = objects . get ( mojigtlbqllabzjtther ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == mojigtlbqllabzjtther ) ) svzjoiksshfeurlevnjw ++ ; mojigtlbqllabzjtther ++ ; }
× fix_prediction_before: while ( nbObjectsSoFar < index ) { jumpingalien.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( ! ( objects . contains ( currentObject ) ) ) ) nbObjectsSoFar ++ ; pos ++ ; }
√ fix_prediction_after: while ( svzjoiksshfeurlevnjw < index ) { jumpingalien.model.Characters currentObject = objects . get ( mojigtlbqllabzjtther ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == mojigtlbqllabzjtther ) ) svzjoiksshfeurlevnjw ++ ; mojigtlbqllabzjtther ++ ; }

line_index: 758
bug_before_refactoring: switch ( route ) { case "conquest" : { output = conquest [ stat ] ; } case "birthright" : { output = birthright [ stat ] ; } case "revelations" : { output = revelations [ stat ] ; } } <s> public int getStats ( java.lang.String route , int stat ) { int output = 0 ; switch ( route ) { case "conquest" : { output = conquest [ stat ] ; } case "birthright" : { output = birthright [ stat ] ; } case "revelations" : { output = revelations [ stat ] ; } } return output ; } <s> Finished Unittesting Unitclass  -Fixed an issue where stats and mods were not being correctly calculated. -Fixed an issue where the getStat function in BaseStats class was only outputting revelations stats when called.
bug_after_refactoring: switch ( route ) { case "conquest" : { pdtpxubhzgrzvgvixhih = conquest [ stat ] ; } case "birthright" : { pdtpxubhzgrzvgvixhih = birthright [ stat ] ; } case "revelations" : { pdtpxubhzgrzvgvixhih = revelations [ stat ] ; } } <s> public int getStats ( java.lang.String route , int stat ) { int output = 0 ; switch ( route ) { case "conquest" : { pdtpxubhzgrzvgvixhih = conquest [ stat ] ; } case "birthright" : { pdtpxubhzgrzvgvixhih = birthright [ stat ] ; } case "revelations" : { pdtpxubhzgrzvgvixhih = revelations [ stat ] ; } } return output ; } <s> Finished Unittesting Unitclass  -Fixed an issue where stats and mods were not being correctly calculated. -Fixed an issue where the getStat function in BaseStats class was only outputting revelations stats when called.
fix_before_refactoring: switch ( route ) { case "conquest" : { output = conquest [ stat ] ; break; } case "birthright" : { output = birthright [ stat ] ; break; } case "revelations" : { output = revelations [ stat ] ; break; } }
fix_after_refactoring: switch ( route ) { case "conquest" : { pdtpxubhzgrzvgvixhih = conquest [ stat ] ; break; } case "birthright" : { pdtpxubhzgrzvgvixhih = birthright [ stat ] ; break; } case "revelations" : { pdtpxubhzgrzvgvixhih = revelations [ stat ] ; break; } }
× fix_prediction_before: switch ( route ) { case "conquest" : { output = conquest [ stat ] ; break; } case "birthright" : { output = birthright [ stat ] ; break; } case "revelations" : { output = revelations [ stat ] ; break; } break; }
√ fix_prediction_after: switch ( route ) { case "conquest" : { pdtpxubhzgrzvgvixhih = conquest [ stat ] ; break; } case "birthright" : { pdtpxubhzgrzvgvixhih = birthright [ stat ] ; break; } case "revelations" : { pdtpxubhzgrzvgvixhih = revelations [ stat ] ; break; } }

line_index: 803
bug_before_refactoring: try { count = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } finally { handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { notifyService . unbind () ; } } ) ; } <s> @ java.lang.Override public void run ( io.github.carlorodriguez.alarmon.NotificationServiceInterface service ) { int count ; try { count = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } finally { handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { notifyService . unbind () ; } } ) ; } if ( count > 0 ) { android.content.Intent notifyActivity = new android.content.Intent ( getApplicationContext () , io.github.carlorodriguez.alarmon.ActivityAlarmNotification . class ) ; notifyActivity . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( notifyActivity ) ; } } <s> Fix service not registered  The bug can be reproduced with following steps:  1. Schedule an alarm. 2. Double click the notification at status bar.  The bug was not only appearing on above situation  but above situation was reproducing it each time.
bug_after_refactoring: try { bqmaoefqgkdjsbhuovxd = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } finally { handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { notifyService . unbind () ; } } ) ; } <s> @ java.lang.Override public void run ( io.github.carlorodriguez.alarmon.NotificationServiceInterface service ) { int count ; try { bqmaoefqgkdjsbhuovxd = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } finally { handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { notifyService . unbind () ; } } ) ; } if ( count > 0 ) { android.content.Intent notifyActivity = new android.content.Intent ( getApplicationContext () , io.github.carlorodriguez.alarmon.ActivityAlarmNotification . class ) ; notifyActivity . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( notifyActivity ) ; } } <s> Fix service not registered  The bug can be reproduced with following steps:  1. Schedule an alarm. 2. Double click the notification at status bar.  The bug was not only appearing on above situation  but above situation was reproducing it each time.
fix_before_refactoring: try { count = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; }
fix_after_refactoring: try { bqmaoefqgkdjsbhuovxd = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; }
× fix_prediction_before: try { service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; }
√ fix_prediction_after: try { bqmaoefqgkdjsbhuovxd = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; }

line_index: 836
bug_before_refactoring: { final long stopStartTime = java.lang.System . nanoTime () ; state = org.webrtc.Camera1Session.SessionState.STOPPED ; stopInternal () ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( stopTimeMs ) ; } <s> @ java.lang.Override public void stop () { org.webrtc.Logging . d ( org.webrtc.Camera1Session.TAG , ( "Stop camera1 session on camera " + ( cameraId ) ) ) ; checkIsOnCameraThread () ; if ( ( state ) != ( org.webrtc.Camera1Session.SessionState.STOPPED ) ) { final long stopStartTime = java.lang.System . nanoTime () ; state = org.webrtc.Camera1Session.SessionState.STOPPED ; stopInternal () ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( stopTimeMs ) ; } } <s> Camera1Session: Fix camera sometimes getting stopped twice.  Moves setting state as stopped to stopInternal. Checks that state is not stopped in stopInternal.  BUG=webrtc:7015  Review-Url: https://codereview.webrtc.org/2640093003 Cr-Commit-Position: refs/heads/master@{#16182}
bug_after_refactoring: { final long avjkhgupdyfiomzjrwnv = java.lang.System . nanoTime () ; state = org.webrtc.Camera1Session.SessionState.STOPPED ; stopInternal () ; final int wmsejvzgkofdtwpjpawo = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - avjkhgupdyfiomzjrwnv ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( wmsejvzgkofdtwpjpawo ) ; } <s> @ java.lang.Override public void stop () { org.webrtc.Logging . d ( org.webrtc.Camera1Session.TAG , ( "Stop camera1 session on camera " + ( cameraId ) ) ) ; checkIsOnCameraThread () ; if ( ( state ) != ( org.webrtc.Camera1Session.SessionState.STOPPED ) ) { final long avjkhgupdyfiomzjrwnv = java.lang.System . nanoTime () ; state = org.webrtc.Camera1Session.SessionState.STOPPED ; stopInternal () ; final int wmsejvzgkofdtwpjpawo = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - avjkhgupdyfiomzjrwnv ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( wmsejvzgkofdtwpjpawo ) ; } } <s> Camera1Session: Fix camera sometimes getting stopped twice.  Moves setting state as stopped to stopInternal. Checks that state is not stopped in stopInternal.  BUG=webrtc:7015  Review-Url: https://codereview.webrtc.org/2640093003 Cr-Commit-Position: refs/heads/master@{#16182}
fix_before_refactoring: { final long stopStartTime = java.lang.System . nanoTime () ; stopInternal () ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( stopTimeMs ) ; }
fix_after_refactoring: { final long avjkhgupdyfiomzjrwnv = java.lang.System . nanoTime () ; stopInternal () ; final int wmsejvzgkofdtwpjpawo = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - avjkhgupdyfiomzjrwnv ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( wmsejvzgkofdtwpjpawo ) ; }
× fix_prediction_before: { final long stopStartTime = java.lang.System . nanoTime () ; state = org.webrtc.Camera1Session.SessionState.STOPPED ; stopInternal () ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( stopTimeMs ) ; stopStartTime = stopStartTime ; }
√ fix_prediction_after: { final long avjkhgupdyfiomzjrwnv = java.lang.System . nanoTime () ; stopInternal () ; final int wmsejvzgkofdtwpjpawo = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - avjkhgupdyfiomzjrwnv ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( wmsejvzgkofdtwpjpawo ) ; }

line_index: 841
bug_before_refactoring: count = getFragmentManager () . getBackStackEntryCount () <s> @ java.lang.Override public void onBackPressed () { int count = getFragmentManager () . getBackStackEntryCount () ; int currentView = viewStack . pop () ; if ( count == 0 ) { super . onBackPressed () ; } else { getFragmentManager () . popBackStack () ; } java.lang.String title = fragmentMap . get ( currentView ) . getTitleString () ; setTitle ( title ) ; } <s> Potential fix for backpress issues
bug_after_refactoring: twaxrbwlusssueoyjsjs = getFragmentManager () . getBackStackEntryCount () <s> @ java.lang.Override public void onBackPressed () { int twaxrbwlusssueoyjsjs = getFragmentManager () . getBackStackEntryCount () ; int currentView = viewStack . pop () ; if ( count == 0 ) { super . onBackPressed () ; } else { getFragmentManager () . popBackStack () ; } java.lang.String title = fragmentMap . get ( currentView ) . getTitleString () ; setTitle ( title ) ; } <s> Potential fix for backpress issues
fix_before_refactoring: count = ( getFragmentManager () . getBackStackEntryCount () ) - 1
fix_after_refactoring: twaxrbwlusssueoyjsjs = ( getFragmentManager () . getBackStackEntryCount () ) - 1
× fix_prediction_before: count = fragmentManager () . getBackStackEntryCount ()
√ fix_prediction_after: twaxrbwlusssueoyjsjs = ( getFragmentManager () . getBackStackEntryCount () ) - 1

line_index: 858
bug_before_refactoring: { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( id ) ; db . close () ; db = null ; return id ; } <s> public long insert ( io.keepcoding.rgs.everpobre.model.Notebook notebook ) { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( id ) ; db . close () ; db = null ; return id ; } <s> Bug-fixed Front end created notebook height
bug_after_refactoring: { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long teuuewgrorhwturcxgpb = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( teuuewgrorhwturcxgpb ) ; db . close () ; db = null ; return teuuewgrorhwturcxgpb ; } <s> public long insert ( io.keepcoding.rgs.everpobre.model.Notebook notebook ) { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long teuuewgrorhwturcxgpb = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( teuuewgrorhwturcxgpb ) ; db . close () ; db = null ; return teuuewgrorhwturcxgpb ; } <s> Bug-fixed Front end created notebook height
fix_before_refactoring: { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( id ) ; db . close () ; return id ; }
fix_after_refactoring: { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long teuuewgrorhwturcxgpb = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( teuuewgrorhwturcxgpb ) ; db . close () ; return teuuewgrorhwturcxgpb ; }
× fix_prediction_before: { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( id ) ; return id ; }
√ fix_prediction_after: { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long teuuewgrorhwturcxgpb = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( teuuewgrorhwturcxgpb ) ; db . close () ; return teuuewgrorhwturcxgpb ; }

line_index: 863
bug_before_refactoring: public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } <s> public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } <s> #JC-2029 Fixed remarks from QA  Now date for anonymous user displays considering current locale. JCLocaleResolver is used for detection of locale instead of directly reading current user locale  Added "data-" prefix to custom html attribute to prevent w3c validation error
bug_after_refactoring: public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long zkciadvmpougbldpdeux = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( zkciadvmpougbldpdeux + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } <s> public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long zkciadvmpougbldpdeux = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( zkciadvmpougbldpdeux + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } <s> #JC-2029 Fixed remarks from QA  Now date for anonymous user displays considering current locale. JCLocaleResolver is used for detection of locale instead of directly reading current user locale  Added "data-" prefix to custom html attribute to prevent w3c validation error
fix_before_refactoring: public java.lang.String format ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; }
fix_after_refactoring: public java.lang.String format ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long zkciadvmpougbldpdeux = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( zkciadvmpougbldpdeux + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; }
× fix_prediction_before: public java.lang.String format ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () ) ; dateTime = new org.joda.time.DateTime ( (UTCTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; }
√ fix_prediction_after: public java.lang.String format ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long zkciadvmpougbldpdeux = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( zkciadvmpougbldpdeux + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; }

line_index: 873
bug_before_refactoring: public int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } <s> public int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
bug_after_refactoring: public int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int jucjkrfmpojebsgileft = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { jucjkrfmpojebsgileft ++ ; } } return jucjkrfmpojebsgileft ; } <s> public int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int jucjkrfmpojebsgileft = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { jucjkrfmpojebsgileft ++ ; } } return jucjkrfmpojebsgileft ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
fix_before_refactoring: private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; }
fix_after_refactoring: private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int jucjkrfmpojebsgileft = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { jucjkrfmpojebsgileft ++ ; } } return jucjkrfmpojebsgileft ; }
× fix_prediction_before: public int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( board . getFigure ( row , i ) . toString () . equals ( playerFigure ) ) ) { playerRowCount ++ ; } } return playerRowCount ; }
√ fix_prediction_after: private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int jucjkrfmpojebsgileft = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { jucjkrfmpojebsgileft ++ ; } } return jucjkrfmpojebsgileft ; }

