line_index: 2
bug_before_refactoring: { android.content.Intent intent = new android.content.Intent ( this , csci435.csci435_odbr.SnapshotIntentService . class ) ; int index = csci435.csci435_odbr.BugReport . getInstance () . numEvents () ; intent . putExtra ( "index" , index ) ; startService ( intent ) ; } <s> private void startScreenshots () { android.content.Intent intent = new android.content.Intent ( this , csci435.csci435_odbr.SnapshotIntentService . class ) ; int index = csci435.csci435_odbr.BugReport . getInstance () . numEvents () ; intent . putExtra ( "index" , index ) ; startService ( intent ) ; } <s> Minor bug fixes  major bug with widget not posting accessibility events  which wouldn't be bad if we could properly parse the getevent info. Changing widget should fix this  as we change it from a phone widget to an overlay  aka making it focusable. Other fix is matching time stamps.
bug_after_refactoring: { android.content.Intent intent = new android.content.Intent ( this , csci435.csci435_odbr.SnapshotIntentService . class ) ; int iwonwuclfrqudsriwhsw = csci435.csci435_odbr.BugReport . getInstance () . numEvents () ; intent . putExtra ( "iwonwuclfrqudsriwhsw" , iwonwuclfrqudsriwhsw ) ; startService ( intent ) ; } <s> private void startScreenshots () { android.content.Intent intent = new android.content.Intent ( this , csci435.csci435_odbr.SnapshotIntentService . class ) ; int iwonwuclfrqudsriwhsw = csci435.csci435_odbr.BugReport . getInstance () . numEvents () ; intent . putExtra ( "iwonwuclfrqudsriwhsw" , iwonwuclfrqudsriwhsw ) ; startService ( intent ) ; } <s> Minor bug fixes  major bug with widget not posting accessibility events  which wouldn't be bad if we could properly parse the getevent info. Changing widget should fix this  as we change it from a phone widget to an overlay  aka making it focusable. Other fix is matching time stamps.
fix_before_refactoring: { android.content.Intent intent = new android.content.Intent ( this , csci435.csci435_odbr.SnapshotIntentService . class ) ; startService ( intent ) ; }
fix_after_refactoring: { android.content.Intent intent = new android.content.Intent ( this , csci435.csci435_odbr.SnapshotIntentService . class ) ; startService ( intent ) ; }
× fix_prediction_before: { android.content.Intent intent = new android.content.Intent ( this , csci435.csci435_odbr.SnapshotIntentService . class ) ; int index = csci435.csci435_odbr.BugReport . getInstance () . numEvents () ; startActivity ( intent ) ; }
√ fix_prediction_after: { android.content.Intent intent = new android.content.Intent ( this , csci435.csci435_odbr.SnapshotIntentService . class ) ; startService ( intent ) ; }

line_index: 24
bug_before_refactoring: { if ( pilaMovimientos . empty () ) { deshacerPila = false ; return 0 ; } int aux = pilaMovimientos . pop () ; ultimo = opuesta ( aux ) ; return aux ; } <s> private int deshacer () { if ( pilaMovimientos . empty () ) { deshacerPila = false ; return 0 ; } int aux = pilaMovimientos . pop () ; ultimo = opuesta ( aux ) ; return aux ; } <s> fixed some bugs
bug_after_refactoring: { if ( pilaMovimientos . empty () ) { deshacerPila = false ; return 0 ; } int vkssnfzpmqhvjlvrdzzz = pilaMovimientos . pop () ; ultimo = opuesta ( vkssnfzpmqhvjlvrdzzz ) ; return vkssnfzpmqhvjlvrdzzz ; } <s> private int deshacer () { if ( pilaMovimientos . empty () ) { deshacerPila = false ; return 0 ; } int vkssnfzpmqhvjlvrdzzz = pilaMovimientos . pop () ; ultimo = opuesta ( vkssnfzpmqhvjlvrdzzz ) ; return vkssnfzpmqhvjlvrdzzz ; } <s> fixed some bugs
fix_before_refactoring: { if ( pilaMovimientos . empty () ) { deshacerPila = false ; return 0 ; } int aux = pilaMovimientos . pop () ; return aux ; }
fix_after_refactoring: { if ( pilaMovimientos . empty () ) { deshacerPila = false ; return 0 ; } int vkssnfzpmqhvjlvrdzzz = pilaMovimientos . pop () ; return vkssnfzpmqhvjlvrdzzz ; }
× fix_prediction_before: { if ( pilaMovimientos . empty () ) { deshacerPila = false ; return 0 ; } return pilaMovimientos . pop () ; }
√ fix_prediction_after: { if ( pilaMovimientos . empty () ) { deshacerPila = false ; return 0 ; } int vkssnfzpmqhvjlvrdzzz = pilaMovimientos . pop () ; return vkssnfzpmqhvjlvrdzzz ; }

line_index: 35
bug_before_refactoring: { super . readFromNBT ( par1 ) ; int [] measurements = par1 . getIntArray ( com.minespaceships.mod.overhead.ChatRegisterEntity.recoverSpaceshipMeasures ) ; if ( measurements != null ) { ship = new com.minespaceships.mod.spaceship.Spaceship ( measurements ) ; } setRemoteWorld () ; } <s> @ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound par1 ) { super . readFromNBT ( par1 ) ; int [] measurements = par1 . getIntArray ( com.minespaceships.mod.overhead.ChatRegisterEntity.recoverSpaceshipMeasures ) ; if ( measurements != null ) { ship = new com.minespaceships.mod.spaceship.Spaceship ( measurements ) ; } setRemoteWorld () ; } <s> Revert "Tried fixind the reload bug. Didn't worked."  This reverts commit 758e25c8de6b8ec63d318df8489002834cd78b47.
bug_after_refactoring: { super . readFromNBT ( par1 ) ; int [] epalchezomikldchvzki = par1 . getIntArray ( com.minespaceships.mod.overhead.ChatRegisterEntity.recoverSpaceshipMeasures ) ; if ( epalchezomikldchvzki != null ) { ship = new com.minespaceships.mod.spaceship.Spaceship ( epalchezomikldchvzki ) ; } setRemoteWorld () ; } <s> @ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound par1 ) { super . readFromNBT ( par1 ) ; int [] epalchezomikldchvzki = par1 . getIntArray ( com.minespaceships.mod.overhead.ChatRegisterEntity.recoverSpaceshipMeasures ) ; if ( epalchezomikldchvzki != null ) { ship = new com.minespaceships.mod.spaceship.Spaceship ( epalchezomikldchvzki ) ; } setRemoteWorld () ; } <s> Revert "Tried fixind the reload bug. Didn't worked."  This reverts commit 758e25c8de6b8ec63d318df8489002834cd78b47.
fix_before_refactoring: { super . readFromNBT ( par1 ) ; int [] measurements = par1 . getIntArray ( com.minespaceships.mod.overhead.ChatRegisterEntity.recoverSpaceshipMeasures ) ; if ( measurements != null ) { ship = new com.minespaceships.mod.spaceship.Spaceship ( measurements ) ; } }
fix_after_refactoring: { super . readFromNBT ( par1 ) ; int [] epalchezomikldchvzki = par1 . getIntArray ( com.minespaceships.mod.overhead.ChatRegisterEntity.recoverSpaceshipMeasures ) ; if ( epalchezomikldchvzki != null ) { ship = new com.minespaceships.mod.spaceship.Spaceship ( epalchezomikldchvzki ) ; } }
× fix_prediction_before: { super . readFromNBT ( par1 ) ; int [] measurements = par1 . getIntArray ( com.minespaceships.mod.overhead.ChatRegisterEntity.recoverSpaceshipMeasures ) ; ship = new com.minespaceships.mod.spaceship.Spaceship ( measurements ) ; setRemoteWorld () ; }
√ fix_prediction_after: { super . readFromNBT ( par1 ) ; int [] epalchezomikldchvzki = par1 . getIntArray ( com.minespaceships.mod.overhead.ChatRegisterEntity.recoverSpaceshipMeasures ) ; if ( epalchezomikldchvzki != null ) { ship = new com.minespaceships.mod.spaceship.Spaceship ( epalchezomikldchvzki ) ; } }

line_index: 42
bug_before_refactoring: id = ( com.weibo.api.motan.util.RequestIdGenerator . getRequestId () ) > > ( RequestIdGenerator.BITS ) <s> @ java.lang.Override public java.lang.Boolean call ( ) throws java.lang.Exception { cyclicBarrier . await () ; long id = ( com.weibo.api.motan.util.RequestIdGenerator . getRequestId () ) > > ( RequestIdGenerator.BITS ) ; boolean result = ( memory . putIfAbsent ( id , "" ) ) == null ; return result ; } <s> fix error in getReqeustId condition check
bug_after_refactoring: pezwnejclrlehncbidmp = ( com.weibo.api.motan.util.RequestIdGenerator . getRequestId () ) > > ( RequestIdGenerator.BITS ) <s> @ java.lang.Override public java.lang.Boolean call ( ) throws java.lang.Exception { cyclicBarrier . await () ; long pezwnejclrlehncbidmp = ( com.weibo.api.motan.util.RequestIdGenerator . getRequestId () ) > > ( RequestIdGenerator.BITS ) ; boolean result = ( memory . putIfAbsent ( id , "" ) ) == null ; return result ; } <s> fix error in getReqeustId condition check
fix_before_refactoring: id = com.weibo.api.motan.util.RequestIdGenerator . getRequestId ()
fix_after_refactoring: pezwnejclrlehncbidmp = com.weibo.api.motan.util.RequestIdGenerator . getRequestId ()
× fix_prediction_before: id = - ( RequestIdGenerator.BITS )
√ fix_prediction_after: pezwnejclrlehncbidmp = com.weibo.api.motan.util.RequestIdGenerator . getRequestId ()

line_index: 102
bug_before_refactoring: { boolean res = utillities.Mouse.releasedButtons [ keycode ] ; utillities.Mouse.releasedButtons [ keycode ] = false ; return res ; } <s> public static boolean isButtonReleased ( int keycode ) { boolean res = utillities.Mouse.releasedButtons [ keycode ] ; utillities.Mouse.releasedButtons [ keycode ] = false ; return res ; } <s> Fixed a bug in the main menu when only the play button was clickable. Sometimes when multiple objects checked if the mouse was released only on the first time the mouse would actually be released. Caused in the main menu that only the play button worked. <bug
bug_after_refactoring: { boolean iknlhumhvibniaixlpkv = utillities.Mouse.releasedButtons [ keycode ] ; utillities.Mouse.releasedButtons [ keycode ] = false ; return iknlhumhvibniaixlpkv ; } <s> public static boolean isButtonReleased ( int keycode ) { boolean iknlhumhvibniaixlpkv = utillities.Mouse.releasedButtons [ keycode ] ; utillities.Mouse.releasedButtons [ keycode ] = false ; return iknlhumhvibniaixlpkv ; } <s> Fixed a bug in the main menu when only the play button was clickable. Sometimes when multiple objects checked if the mouse was released only on the first time the mouse would actually be released. Caused in the main menu that only the play button worked. <bug
fix_before_refactoring: { boolean res = utillities.Mouse.releasedButtons [ keycode ] ; return res ; }
fix_after_refactoring: { boolean iknlhumhvibniaixlpkv = utillities.Mouse.releasedButtons [ keycode ] ; return iknlhumhvibniaixlpkv ; }
× fix_prediction_before: { boolean res = utillities.Mouse.releasedButtons [ keycode ] ; if ( res ) utillities.Mouse.releasedButtons [ keycode ] = false ; return res ; }
√ fix_prediction_after: { boolean iknlhumhvibniaixlpkv = utillities.Mouse.releasedButtons [ keycode ] ; return iknlhumhvibniaixlpkv ; }

line_index: 116
bug_before_refactoring: if ( gold != 0 ) { playerModel . setMoney ( ( ( playerModel . getMoney () ) + gold ) ) ; } <s> public void monsterClicked () { int gold ; gold = mapPres . damageMonster ( playerModel . getDamage () ) ; if ( gold != 0 ) { playerModel . setMoney ( ( ( playerModel . getMoney () ) + gold ) ) ; } } <s> Fixed negative gold  bgref error
bug_after_refactoring: if ( tumcqhbmembeknoynnmm != 0 ) { playerModel . setMoney ( ( ( playerModel . getMoney () ) + tumcqhbmembeknoynnmm ) ) ; } <s> public void monsterClicked () { int gold ; gold = mapPres . damageMonster ( playerModel . getDamage () ) ; if ( tumcqhbmembeknoynnmm != 0 ) { playerModel . setMoney ( ( ( playerModel . getMoney () ) + tumcqhbmembeknoynnmm ) ) ; } } <s> Fixed negative gold  bgref error
fix_before_refactoring: if ( gold > 0 ) { playerModel . setMoney ( ( ( playerModel . getMoney () ) + gold ) ) ; }
fix_after_refactoring: if ( tumcqhbmembeknoynnmm > 0 ) { playerModel . setMoney ( ( ( playerModel . getMoney () ) + tumcqhbmembeknoynnmm ) ) ; }
× fix_prediction_before: if ( gold != 0 ) { playerModel . setMoney ( ( ( playerModel . getMoney () ) - gold ) ) ; }
√ fix_prediction_after: if ( tumcqhbmembeknoynnmm > 0 ) { playerModel . setMoney ( ( ( playerModel . getMoney () ) + tumcqhbmembeknoynnmm ) ) ; }

line_index: 130
bug_before_refactoring: { android.os.Handler clientHandler = new android.os.Handler () ; com.smartmanageragent.exteriorcomm.ClientConnection clientConnection = new com.smartmanageragent.exteriorcomm.ClientConnection ( ipAd , com.smartmanageragent.exteriorcomm.CommunicationService.portNumber , clientHandler , jsmessage ) ; boolean success = clientConnection . connection () ; return success ; } <s> private boolean connexion2Client ( com.smartmanageragent.smartagent.message.JSONMessage jsmessage , java.lang.String ipAd ) { android.os.Handler clientHandler = new android.os.Handler () ; com.smartmanageragent.exteriorcomm.ClientConnection clientConnection = new com.smartmanageragent.exteriorcomm.ClientConnection ( ipAd , com.smartmanageragent.exteriorcomm.CommunicationService.portNumber , clientHandler , jsmessage ) ; boolean success = clientConnection . connection () ; return success ; } <s> Fix issues
bug_after_refactoring: { android.os.Handler clientHandler = new android.os.Handler () ; com.smartmanageragent.exteriorcomm.ClientConnection clientConnection = new com.smartmanageragent.exteriorcomm.ClientConnection ( ipAd , com.smartmanageragent.exteriorcomm.CommunicationService.portNumber , clientHandler , jsmessage ) ; boolean uzmqwlyetkgbvwruiknc = clientConnection . connection () ; return uzmqwlyetkgbvwruiknc ; } <s> private boolean connexion2Client ( com.smartmanageragent.smartagent.message.JSONMessage jsmessage , java.lang.String ipAd ) { android.os.Handler clientHandler = new android.os.Handler () ; com.smartmanageragent.exteriorcomm.ClientConnection clientConnection = new com.smartmanageragent.exteriorcomm.ClientConnection ( ipAd , com.smartmanageragent.exteriorcomm.CommunicationService.portNumber , clientHandler , jsmessage ) ; boolean uzmqwlyetkgbvwruiknc = clientConnection . connection () ; return uzmqwlyetkgbvwruiknc ; } <s> Fix issues
fix_before_refactoring: { android.os.Handler clientHandler = new android.os.Handler () ; com.smartmanageragent.exteriorcomm.ClientConnection clientConnection = new com.smartmanageragent.exteriorcomm.ClientConnection ( ipAd , com.smartmanageragent.exteriorcomm.CommunicationService.portNumber , clientHandler , jsmessage ) ; return clientConnection . connection () ; }
fix_after_refactoring: { android.os.Handler clientHandler = new android.os.Handler () ; com.smartmanageragent.exteriorcomm.ClientConnection clientConnection = new com.smartmanageragent.exteriorcomm.ClientConnection ( ipAd , com.smartmanageragent.exteriorcomm.CommunicationService.portNumber , clientHandler , jsmessage ) ; return clientConnection . connection () ; }
× fix_prediction_before: { com.smartmanageragent.exteriorcomm.ClientConnection clientConnection = new com.smartmanageragent.exteriorcomm.ClientConnection ( ipAd , com.smartmanageragent.exteriorcomm.CommunicationService.portNumber , clientHandler , jsmessage ) ; boolean success = clientConnection . connection () ; return success ; }
√ fix_prediction_after: { android.os.Handler clientHandler = new android.os.Handler () ; com.smartmanageragent.exteriorcomm.ClientConnection clientConnection = new com.smartmanageragent.exteriorcomm.ClientConnection ( ipAd , com.smartmanageragent.exteriorcomm.CommunicationService.portNumber , clientHandler , jsmessage ) ; return clientConnection . connection () ; }

line_index: 147
bug_before_refactoring: { int i = categoryList . getSelectedIndex () ; categoryList . clearSelection () ; catArr . get ( i ) . setVisible ( false ) ; validate () ; repaint () ; change = true ; } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int i = categoryList . getSelectedIndex () ; categoryList . clearSelection () ; catArr . get ( i ) . setVisible ( false ) ; validate () ; repaint () ; change = true ; } <s> fixat väldigt många buggar
bug_after_refactoring: { int mibhmpcimjucwhlrpeng = categoryList . getSelectedIndex () ; categoryList . clearSelection () ; catArr . get ( mibhmpcimjucwhlrpeng ) . setVisible ( false ) ; validate () ; repaint () ; change = true ; } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int mibhmpcimjucwhlrpeng = categoryList . getSelectedIndex () ; categoryList . clearSelection () ; catArr . get ( mibhmpcimjucwhlrpeng ) . setVisible ( false ) ; validate () ; repaint () ; change = true ; } <s> fixat väldigt många buggar
fix_before_refactoring: { int i = categoryList . getSelectedIndex () ; catArr . get ( i ) . setVisible ( false ) ; validate () ; repaint () ; change = true ; }
fix_after_refactoring: { int mibhmpcimjucwhlrpeng = categoryList . getSelectedIndex () ; catArr . get ( mibhmpcimjucwhlrpeng ) . setVisible ( false ) ; validate () ; repaint () ; change = true ; }
× fix_prediction_before: { int i = categoryList . getSelectedIndex () ; categoryList . clearSelection () ; catArr . get ( i ) . setVisible ( false ) ; validate () ; repaint () ; change = true ; }
√ fix_prediction_after: { int mibhmpcimjucwhlrpeng = categoryList . getSelectedIndex () ; catArr . get ( mibhmpcimjucwhlrpeng ) . setVisible ( false ) ; validate () ; repaint () ; change = true ; }

line_index: 173
bug_before_refactoring: hours = ( ( ( ( float ) ( this . toMillis () ) ) * 1000.0F ) * 60.0F ) * 60.0F <s> public float toHours () { float hours = ( ( ( ( float ) ( this . toMillis () ) ) * 1000.0F ) * 60.0F ) * 60.0F ; return hours ; } <s> Fix error in TimeUnit conversion logic
bug_after_refactoring: nsngeuhqzkjvkoeuegok = ( ( ( ( float ) ( this . toMillis () ) ) * 1000.0F ) * 60.0F ) * 60.0F <s> public float toHours () { float nsngeuhqzkjvkoeuegok = ( ( ( ( float ) ( this . toMillis () ) ) * 1000.0F ) * 60.0F ) * 60.0F ; return hours ; } <s> Fix error in TimeUnit conversion logic
fix_before_refactoring: hours = ( ( ( ( float ) ( this . toMillis () ) ) / 1000.0F ) / 60.0F ) / 60.0F
fix_after_refactoring: nsngeuhqzkjvkoeuegok = ( ( ( ( float ) ( this . toMillis () ) ) / 1000.0F ) / 60.0F ) / 60.0F
× fix_prediction_before: hours = ( ( ( float ) ( this . toMillis () ) ) / 1000.0F ) / 60.0F
√ fix_prediction_after: nsngeuhqzkjvkoeuegok = ( ( ( ( float ) ( this . toMillis () ) ) / 1000.0F ) / 60.0F ) / 60.0F

line_index: 192
bug_before_refactoring: numTransitionActions = numTransitionActions = mActions . get ( direction ) . getLeft () <s> public int numTransitionActionsTaken ( java.lang.String direction ) { int numTransitionActions = numTransitionActions = mActions . get ( direction ) . getLeft () ; return numTransitionActions ; } <s> Bug fix
bug_after_refactoring: qfkillliesaiwshomnoz = qfkillliesaiwshomnoz = mActions . get ( direction ) . getLeft () <s> public int numTransitionActionsTaken ( java.lang.String direction ) { int qfkillliesaiwshomnoz = qfkillliesaiwshomnoz = mActions . get ( direction ) . getLeft () ; return numTransitionActions ; } <s> Bug fix
fix_before_refactoring: numTransitionActions = mActions . get ( direction ) . getLeft ()
fix_after_refactoring: qfkillliesaiwshomnoz = mActions . get ( direction ) . getLeft ()
× fix_prediction_before: numTransitionActions = numTransitionActions . get ( direction )
√ fix_prediction_after: qfkillliesaiwshomnoz = mActions . get ( direction ) . getLeft ()

