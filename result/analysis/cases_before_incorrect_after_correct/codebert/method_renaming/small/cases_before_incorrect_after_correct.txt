line_index: 47
bug_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
bug_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
fix_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < java.lang.String > fetchMoviesPopular ( ) ;
√ fix_prediction_after: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( ) ;

line_index: 134
bug_before_refactoring: protected void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> protected void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> fixed bug when searching for empty string
bug_after_refactoring: protected void dswxgeoyiinlbawudzns ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> protected void dswxgeoyiinlbawudzns ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> fixed bug when searching for empty string
fix_before_refactoring: private void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( index ) ; }
fix_after_refactoring: private void dswxgeoyiinlbawudzns ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( index ) ; }
× fix_prediction_before: private void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; }
√ fix_prediction_after: private void dswxgeoyiinlbawudzns ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( index ) ; }

line_index: 138
bug_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
bug_after_refactoring: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
fix_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;
fix_after_refactoring: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;
× fix_prediction_before: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ;
√ fix_prediction_after: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;

line_index: 140
bug_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
fix_after_refactoring: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
× fix_prediction_before: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; }
√ fix_prediction_after: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}

line_index: 180
bug_before_refactoring: @ java.lang.Override public void run () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> @ java.lang.Override public void run () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> - Added Exporting functionality. - Improved button UI. - Bug fixed in scanning automatically.
bug_after_refactoring: @ java.lang.Override public void kzefaghtldtymbheykia () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> @ java.lang.Override public void kzefaghtldtymbheykia () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> - Added Exporting functionality. - Improved button UI. - Bug fixed in scanning automatically.
fix_before_refactoring: @ java.lang.Override public void run () { enterBarcode . requestFocus () ; }
fix_after_refactoring: @ java.lang.Override public void kzefaghtldtymbheykia () { enterBarcode . requestFocus () ; }
× fix_prediction_before: private void run () { enterBarcode . requestFocus () ; }
√ fix_prediction_after: @ java.lang.Override public void kzefaghtldtymbheykia () { enterBarcode . requestFocus () ; }

line_index: 181
bug_before_refactoring: protected org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> protected org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> Fix blended terms for non-strings  It had some funky errors  like lenient:true not working and queries with two integer fields blowing up if there was no analyzer defined on the query. This throws a bunch more tests at it and rejiggers how non-strings are handled so they don't wander off into scary QueryBuilder-land unless they have a nice strong analyzer to protect them.  Closes #15860
bug_after_refactoring: protected org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> protected org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> Fix blended terms for non-strings  It had some funky errors  like lenient:true not working and queries with two integer fields blowing up if there was no analyzer defined on the query. This throws a bunch more tests at it and rejiggers how non-strings are handled so they don't wander off into scary QueryBuilder-land unless they have a nice strong analyzer to protect them.  Closes #15860
fix_before_refactoring: public org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }
fix_after_refactoring: public org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }
× fix_prediction_before: private org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( index , indexedValueForSearch ( value ) ) ; }
√ fix_prediction_after: public org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }

line_index: 189
bug_before_refactoring: public void fill () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> public void fill () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> fixed problems with thread speed
bug_after_refactoring: public void befswazqieeusrehhuyz () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> public void befswazqieeusrehhuyz () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> fixed problems with thread speed
fix_before_refactoring: public void fill () { while ( addSample () ) {} }
fix_after_refactoring: public void befswazqieeusrehhuyz () { while ( addSample () ) {} }
× fix_prediction_before: public void fill () { try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} }
√ fix_prediction_after: public void befswazqieeusrehhuyz () { while ( addSample () ) {} }

line_index: 200
bug_before_refactoring: public void getTime () { RobotMap.time . get () ; } <s> public void getTime () { RobotMap.time . get () ; } <s> Fixed" all of the errors. This code  as it is right now  is able to run on Lowrider. That does not mean it functions  there are just not a billion null pointers anymore. However there are some flaws in RobotMap concerning the Timer and HallEffect so they need to be fixed.
bug_after_refactoring: public void xipzjzyuwnkswyaewowa () { RobotMap.time . get () ; } <s> public void xipzjzyuwnkswyaewowa () { RobotMap.time . get () ; } <s> Fixed" all of the errors. This code  as it is right now  is able to run on Lowrider. That does not mean it functions  there are just not a billion null pointers anymore. However there are some flaws in RobotMap concerning the Timer and HallEffect so they need to be fixed.
fix_before_refactoring: public void getTime () {}
fix_after_refactoring: public void xipzjzyuwnkswyaewowa () {}
× fix_prediction_before: public long getTime () { return RobotMap.time . get () ; }
√ fix_prediction_after: public void xipzjzyuwnkswyaewowa () {}

line_index: 342
bug_before_refactoring: void loadImage ( android.widget.ImageView imageView , java.lang.String url , int index ) ; <s> void loadImage ( android.widget.ImageView imageView , java.lang.String url , int index ) ; <s> fix https://github.com/A-W-C-J/GridImageView/issues/1
bug_after_refactoring: void vlnyralgpvqzzbanednx ( android.widget.ImageView imageView , java.lang.String url , int index ) ; <s> void vlnyralgpvqzzbanednx ( android.widget.ImageView imageView , java.lang.String url , int index ) ; <s> fix https://github.com/A-W-C-J/GridImageView/issues/1
fix_before_refactoring: void loadImage ( android.widget.ImageView imageView , int index ) ;
fix_after_refactoring: void vlnyralgpvqzzbanednx ( android.widget.ImageView imageView , int index ) ;
× fix_prediction_before: void loadImage ( android.widget.ImageView imageView , int index , java.lang.String url ) ;
√ fix_prediction_after: void vlnyralgpvqzzbanednx ( android.widget.ImageView imageView , int index ) ;

line_index: 371
bug_before_refactoring: @ java.lang.Override public void onTabSelected ( int position ) { SameActionTab ( position ) ; } <s> @ java.lang.Override public void onTabSelected ( int position ) { SameActionTab ( position ) ; } <s> bugs fixed
bug_after_refactoring: @ java.lang.Override public void xaymsiuqnqnervdpiubv ( int position ) { SameActionTab ( position ) ; } <s> @ java.lang.Override public void xaymsiuqnqnervdpiubv ( int position ) { SameActionTab ( position ) ; } <s> bugs fixed
fix_before_refactoring: @ java.lang.Override public void onTabSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void xaymsiuqnqnervdpiubv ( int position ) {}
× fix_prediction_before: @ java.lang.Override public void onTabSelected ( int position ) { if ( ( type ) != 0 ) { SameActionTab ( position ) ; } }
√ fix_prediction_after: @ java.lang.Override public void xaymsiuqnqnervdpiubv ( int position ) {}

line_index: 404
bug_before_refactoring: @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> [FLINK-4543] [network] Fix potential deadlock in SpilledSubpartitionViewAsyncIO.  The deadlock could occur in cases where the SpilledSubpartitionViewAsyncIO would simultaneously try to release a buffer and encounter an error in another thread.  The field of congestion was the listener  which is now replaced by an AtomicReference  removing the necessity to lock in the case of reporting the error.
bug_after_refactoring: @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> [FLINK-4543] [network] Fix potential deadlock in SpilledSubpartitionViewAsyncIO.  The deadlock could occur in cases where the SpilledSubpartitionViewAsyncIO would simultaneously try to release a buffer and encounter an error in another thread.  The field of congestion was the listener  which is now replaced by an AtomicReference  removing the necessity to lock in the case of reporting the error.
fix_before_refactoring: @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; }
fix_after_refactoring: @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; }
× fix_prediction_before: @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; }
√ fix_prediction_after: @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; }

line_index: 431
bug_before_refactoring: public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
bug_after_refactoring: public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) { this . to = arg ; } <s> public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) { this . to = arg ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
fix_before_refactoring: public void setTo ( java.lang.String arg ) { to = arg ; }
fix_after_refactoring: public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) { to = arg ; }
× fix_prediction_before: public void setTo ( java.lang.String to ) { this . to = to ; }
√ fix_prediction_after: public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) { to = arg ; }

line_index: 445
bug_before_refactoring: private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
bug_after_refactoring: private boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> private boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
fix_before_refactoring: public boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
fix_after_refactoring: public boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
× fix_prediction_before: private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
√ fix_prediction_after: public boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }

line_index: 447
bug_before_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> Fix/Ignore some sonar issues
bug_after_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult ehpcbjnvzsgidtglmfxe ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> @ java.lang.Override public java.nio.file.FileVisitResult ehpcbjnvzsgidtglmfxe ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> Fix/Ignore some sonar issues
fix_before_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; }
fix_after_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult ehpcbjnvzsgidtglmfxe ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; }
× fix_prediction_before: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.io.File fileFile = file . toFile () ; pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.SKIP_SUBTREE ; }
√ fix_prediction_after: @ java.lang.Override public java.nio.file.FileVisitResult ehpcbjnvzsgidtglmfxe ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; }

line_index: 455
bug_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
bug_after_refactoring: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
fix_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
fix_after_refactoring: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) {}
× fix_prediction_before: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; }
√ fix_prediction_after: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) {}

line_index: 504
bug_before_refactoring: private double travelledHorizontalDistance ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> private double travelledHorizontalDistance ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> slime movement and slime vs slime school exchange added. fixed movement from mazub (very small bugg that allowed to move too fast)
bug_after_refactoring: private double msyphsmvwnkgwzehiiak ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> private double msyphsmvwnkgwzehiiak ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> slime movement and slime vs slime school exchange added. fixed movement from mazub (very small bugg that allowed to move too fast)
fix_before_refactoring: private double travelledHorizontalDistance ( double dt ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; }
fix_after_refactoring: private double msyphsmvwnkgwzehiiak ( double dt ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; }
× fix_prediction_before: public double dispatchedHorizontalDistance ( double dt ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) ; }
√ fix_prediction_after: private double msyphsmvwnkgwzehiiak ( double dt ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; }

line_index: 535
bug_before_refactoring: public void setName ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> public void setName ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> Refresh button added and rotation bug fixed. Closes #22 Closes #6
bug_after_refactoring: public void elqneuorsyiympsufqad ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> public void elqneuorsyiympsufqad ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> Refresh button added and rotation bug fixed. Closes #22 Closes #6
fix_before_refactoring: public void setName ( java.lang.String newName ) { name = newName ; }
fix_after_refactoring: public void elqneuorsyiympsufqad ( java.lang.String newName ) { name = newName ; }
× fix_prediction_before: public void setName ( java.lang.String newName ) { this . name = newName ; }
√ fix_prediction_after: public void elqneuorsyiympsufqad ( java.lang.String newName ) { name = newName ; }

line_index: 551
bug_before_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> Fixed permission bug with wifimanager
bug_after_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> Fixed permission bug with wifimanager
fix_before_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }
fix_after_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }
× fix_prediction_before: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { return wifiScannerImpl ; }
√ fix_prediction_after: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }

line_index: 558
bug_before_refactoring: public void stopBackgroundMusic () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> public void stopBackgroundMusic () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> Fixed the bug with the sound starting back up when the app closes. It was a problem in BaseService  and actually all background services were restarting.
bug_after_refactoring: public void uuehdctfvqutpqahsvxc () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> public void uuehdctfvqutpqahsvxc () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> Fixed the bug with the sound starting back up when the app closes. It was a problem in BaseService  and actually all background services were restarting.
fix_before_refactoring: public void stopBackgroundMusic () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
fix_after_refactoring: public void uuehdctfvqutpqahsvxc () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
× fix_prediction_before: private void stopBackgroundMusic () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
√ fix_prediction_after: public void uuehdctfvqutpqahsvxc () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }

line_index: 584
bug_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> fixed url error.
bug_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name , pwd ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name , pwd ) ; } <s> fixed url error.
fix_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name ) ; }
fix_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name ) ; }
× fix_prediction_before: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , null , name ) ; }
√ fix_prediction_after: public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name ) ; }

line_index: 600
bug_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
bug_after_refactoring: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , true ) ; } <s> public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
fix_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , false ) ; }
fix_after_refactoring: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , false ) ; }
× fix_prediction_before: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; }
√ fix_prediction_after: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , false ) ; }

line_index: 624
bug_before_refactoring: @ java.lang.Override public void onNext ( T v ) { onNext ( v , innerScheduler . now () ) ; } <s> @ java.lang.Override public void onNext ( T v ) { onNext ( v , innerScheduler . now () ) ; } <s> Fixed TestSubject bug in onNext
bug_after_refactoring: @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , innerScheduler . now () ) ; } <s> @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , innerScheduler . now () ) ; } <s> Fixed TestSubject bug in onNext
fix_before_refactoring: @ java.lang.Override public void onNext ( T v ) { onNext ( v , 0 ) ; }
fix_after_refactoring: @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , 0 ) ; }
× fix_prediction_before: @ java.lang.Override public void onNext ( T v ) { if ( ( onNext ( v ) ) != null ) { onNext ( v , innerScheduler . now () ) ; } }
√ fix_prediction_after: @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , 0 ) ; }

line_index: 635
bug_before_refactoring: protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
fix_after_refactoring: private boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
× fix_prediction_before: private static boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' + ch ) && ( ch <= 'z' ) ) ; }
√ fix_prediction_after: private boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }

line_index: 645
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> bug fixes
bug_after_refactoring: @ java.lang.Override public void xbegwfmgyekjfpkuxibf ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> @ java.lang.Override public void xbegwfmgyekjfpkuxibf ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { addNewPOI () ; }
fix_after_refactoring: @ java.lang.Override public void xbegwfmgyekjfpkuxibf ( android.view.View v ) { addNewPOI () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { checkPathField () ; }
√ fix_prediction_after: @ java.lang.Override public void xbegwfmgyekjfpkuxibf ( android.view.View v ) { addNewPOI () ; }

line_index: 690
bug_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
fix_after_refactoring: private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
× fix_prediction_before: public void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
√ fix_prediction_after: private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }

line_index: 763
bug_before_refactoring: private int getWantToBuyTotal () {} <s> private int getWantToBuyTotal () {} <s> Adding more error support and unit tests. A strange edit made to Trader was solved.
bug_after_refactoring: private int jkjjbfonydwbisstpztg () {} <s> private int jkjjbfonydwbisstpztg () {} <s> Adding more error support and unit tests. A strange edit made to Trader was solved.
fix_before_refactoring: private int getWantToBuyTotal () { return 0 ; }
fix_after_refactoring: private int jkjjbfonydwbisstpztg () { return 0 ; }
× fix_prediction_before: public int getWantToBuyTotal () { return 0 ; }
√ fix_prediction_after: private int jkjjbfonydwbisstpztg () { return 0 ; }

line_index: 776
bug_before_refactoring: protected boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> protected boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> Fixed god class. Added javadoc. Removed checkstyle. Removed unrelevant methods from document and column containers. Added new errors to give specific messages.
bug_after_refactoring: protected boolean xcknveogpjdgjaakuajx ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> protected boolean xcknveogpjdgjaakuajx ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> Fixed god class. Added javadoc. Removed checkstyle. Removed unrelevant methods from document and column containers. Added new errors to give specific messages.
fix_before_refactoring: private boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; }
fix_after_refactoring: private boolean xcknveogpjdgjaakuajx ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; }
× fix_prediction_before: private boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } return true ; }
√ fix_prediction_after: private boolean xcknveogpjdgjaakuajx ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; }

line_index: 777
bug_before_refactoring: public boolean isEmpty () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public boolean isEmpty () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
bug_after_refactoring: public boolean oidsahmpczfctgqkmizm () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public boolean oidsahmpczfctgqkmizm () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
fix_before_refactoring: public boolean isEmpty () { return false ; }
fix_after_refactoring: public boolean oidsahmpczfctgqkmizm () { return false ; }
× fix_prediction_before: public boolean isEmpty () { return 0 ; }
√ fix_prediction_after: public boolean oidsahmpczfctgqkmizm () { return false ; }

line_index: 921
bug_before_refactoring: public java.lang.String [] getTools () {} <s> public java.lang.String [] getTools () {} <s> errors "fixed
bug_after_refactoring: public java.lang.String [] aishltpocwtrddejyong () {} <s> public java.lang.String [] aishltpocwtrddejyong () {} <s> errors "fixed
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: public java.lang.String [] getTools () { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 961
bug_before_refactoring: @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> Fix for #305: Ceylond: disable debug log
bug_after_refactoring: @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> Fix for #305: Ceylond: disable debug log
fix_before_refactoring: @ java.lang.Override public void debug ( java.lang.String str ) {}
fix_after_refactoring: @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) {}
× fix_prediction_before: @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; }
√ fix_prediction_after: @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) {}

line_index: 1100
bug_before_refactoring: private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
bug_after_refactoring: private double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> private double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
fix_before_refactoring: public double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
fix_after_refactoring: public double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
× fix_prediction_before: private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
√ fix_prediction_after: public double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }

line_index: 1106
bug_before_refactoring: public void tearDown () { clear () ; if ( false ) try {} catch ( java.lang.RuntimeException e ) { com.google.common.base.Throwables . propagate ( e ) ; } } <s> public void tearDown () { clear () ; if ( false ) try {} catch ( java.lang.RuntimeException e ) { com.google.common.base.Throwables . propagate ( e ) ; } } <s> Add some javadoc and fix single key factory issue.
bug_after_refactoring: public void kyikucisjwngijvbosnf () { clear () ; if ( false ) try {} catch ( java.lang.RuntimeException e ) { com.google.common.base.Throwables . propagate ( e ) ; } } <s> public void kyikucisjwngijvbosnf () { clear () ; if ( false ) try {} catch ( java.lang.RuntimeException e ) { com.google.common.base.Throwables . propagate ( e ) ; } } <s> Add some javadoc and fix single key factory issue.
fix_before_refactoring: public void tearDown () { clear () ; }
fix_after_refactoring: public void kyikucisjwngijvbosnf () { clear () ; }
× fix_prediction_before: @ java.lang.Override public void tearDown () { try { catch ( java.lang.RuntimeException e ) { com.google.common.base.Throwables . propagate ( e ) ; } }
√ fix_prediction_after: public void kyikucisjwngijvbosnf () { clear () ; }

line_index: 1115
bug_before_refactoring: @ java.lang.Override public boolean performLongClick () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> @ java.lang.Override public boolean performLongClick () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
bug_after_refactoring: @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
fix_before_refactoring: @ java.lang.Override public boolean performLongClick () { return ( ( mLongListener ) != null ) && ( mLongListener . onLongClick ( this ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { return ( ( mLongListener ) != null ) && ( mLongListener . onLongClick ( this ) ) ; }
× fix_prediction_before: @ java.lang.Override public boolean performLongClick () { return mLongListener . onLongClick ( this ) ; }
√ fix_prediction_after: @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { return ( ( mLongListener ) != null ) && ( mLongListener . onLongClick ( this ) ) ; }

line_index: 1128
bug_before_refactoring: public void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> public void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> Fix extremely small bug in Receive class
bug_after_refactoring: public void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> public void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> Fix extremely small bug in Receive class
fix_before_refactoring: private void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }
fix_after_refactoring: private void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }
× fix_prediction_before: private void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; } acknowledgePacket ( packet ) ; }
√ fix_prediction_after: private void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }

line_index: 1145
bug_before_refactoring: @ java.lang.Override protected void onNfcStateEnabled () { nfcAvalability = org.kemerelab.rsmcontrol.NFCWriteActivity.NFCAvalability.AVAILABLE_ENABLED ; } <s> @ java.lang.Override protected void onNfcStateEnabled () { nfcAvalability = org.kemerelab.rsmcontrol.NFCWriteActivity.NFCAvalability.AVAILABLE_ENABLED ; } <s> Added jitter to firmware (now version 5) and updated android app. also fixed some bugs  such as up/back issue
bug_after_refactoring: @ java.lang.Override protected void dyonzbvomisgjhpijjux () { nfcAvalability = org.kemerelab.rsmcontrol.NFCWriteActivity.NFCAvalability.AVAILABLE_ENABLED ; } <s> @ java.lang.Override protected void dyonzbvomisgjhpijjux () { nfcAvalability = org.kemerelab.rsmcontrol.NFCWriteActivity.NFCAvalability.AVAILABLE_ENABLED ; } <s> Added jitter to firmware (now version 5) and updated android app. also fixed some bugs  such as up/back issue
fix_before_refactoring: @ java.lang.Override protected void onNfcStateEnabled () {}
fix_after_refactoring: @ java.lang.Override protected void dyonzbvomisgjhpijjux () {}
× fix_prediction_before: @ java.lang.Override protected void onNfcStateEnabled () { nfcAvalability = org.kemerelab.rsmcontrol.NFCWriteActivity.NFCAvalability.AVAILABLE_ENABLED ; }
√ fix_prediction_after: @ java.lang.Override protected void dyonzbvomisgjhpijjux () {}

line_index: 1176
bug_before_refactoring: protected void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> protected void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> fix context menu btn bug + style  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@56301 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
bug_after_refactoring: protected void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> protected void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> fix context menu btn bug + style  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@56301 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
fix_before_refactoring: public void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; }
fix_after_refactoring: public void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; }
× fix_prediction_before: protected void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; }
√ fix_prediction_after: public void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; }

line_index: 1186
bug_before_refactoring: public void testMissingDependencySimple ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" , "a/A$Inner.class" ) ; } <s> public void testMissingDependencySimple ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" , "a/A$Inner.class" ) ; } <s> Report error if some deserialized classes are missing in dependencies  Technically we often can compile code which uses missing classes (as long as nothing is called on them) but it seems better to let the user know something's wrong in their setup before the error manifests itself at runtime. Also the Java compiler does the same   #KT-4328 Fixed
bug_after_refactoring: public void jnkztziljtoufjzuqvqs ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" , "a/A$Inner.class" ) ; } <s> public void jnkztziljtoufjzuqvqs ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" , "a/A$Inner.class" ) ; } <s> Report error if some deserialized classes are missing in dependencies  Technically we often can compile code which uses missing classes (as long as nothing is called on them) but it seems better to let the user know something's wrong in their setup before the error manifests itself at runtime. Also the Java compiler does the same   #KT-4328 Fixed
fix_before_refactoring: public void testMissingDependencySimple ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" ) ; }
fix_after_refactoring: public void jnkztziljtoufjzuqvqs ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" ) ; }
× fix_prediction_before: public void testMissingDependencySimple ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" , "a/A$Inner.class" ) ; }
√ fix_prediction_after: public void jnkztziljtoufjzuqvqs ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" ) ; }

line_index: 1201
bug_before_refactoring: public void deleteMarkers ( ) throws org.eclipse.core.runtime.CoreException { file . deleteMarkers ( IRascalResources.ID_RASCAL_MARKER , false , IFile.DEPTH_ZERO ) ; } <s> public void deleteMarkers ( ) throws org.eclipse.core.runtime.CoreException { file . deleteMarkers ( IRascalResources.ID_RASCAL_MARKER , false , IFile.DEPTH_ZERO ) ; } <s> fixed bug in error handling
bug_after_refactoring: public void lqeufqdwqkhagqjxndkv ( ) throws org.eclipse.core.runtime.CoreException { file . lqeufqdwqkhagqjxndkv ( IRascalResources.ID_RASCAL_MARKER , false , IFile.DEPTH_ZERO ) ; } <s> public void lqeufqdwqkhagqjxndkv ( ) throws org.eclipse.core.runtime.CoreException { file . lqeufqdwqkhagqjxndkv ( IRascalResources.ID_RASCAL_MARKER , false , IFile.DEPTH_ZERO ) ; } <s> fixed bug in error handling
fix_before_refactoring: public void deleteMarkers ( ) throws org.eclipse.core.runtime.CoreException { file . deleteMarkers ( IRascalResources.ID_RASCAL_MARKER , true , IFile.DEPTH_ZERO ) ; }
fix_after_refactoring: public void lqeufqdwqkhagqjxndkv ( ) throws org.eclipse.core.runtime.CoreException { file . lqeufqdwqkhagqjxndkv ( IRascalResources.ID_RASCAL_MARKER , true , IFile.DEPTH_ZERO ) ; }
× fix_prediction_before: public void deleteMarkers ( ) throws org.eclipse.core.runtime.CoreException { file . deleteMarkers ( IRascalResources.ID_RASCAL_MARKER , false , IFile.DEPTH_ZERO ) ; }
√ fix_prediction_after: public void lqeufqdwqkhagqjxndkv ( ) throws org.eclipse.core.runtime.CoreException { file . lqeufqdwqkhagqjxndkv ( IRascalResources.ID_RASCAL_MARKER , true , IFile.DEPTH_ZERO ) ; }

line_index: 1208
bug_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> fixed interrupt bug
bug_after_refactoring: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; } } <s> public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; } } <s> fixed interrupt bug
fix_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
fix_after_refactoring: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; }
× fix_prediction_before: public void attack ( kru.codefight.fighter. attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
√ fix_prediction_after: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; }

line_index: 1231
bug_before_refactoring: @ java.lang.Override public void dispose () { this . view . dispose () ; } <s> @ java.lang.Override public void dispose () { this . view . dispose () ; } <s> Fixed compile issue.
bug_after_refactoring: @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () { this . view . ilpbkfrmzrugxsmvqpdt () ; } <s> @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () { this . view . ilpbkfrmzrugxsmvqpdt () ; } <s> Fixed compile issue.
fix_before_refactoring: @ java.lang.Override public void dispose () {}
fix_after_refactoring: @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () {}
× fix_prediction_before: @ java.lang.Override public void dispose () { super . dispose () ; }
√ fix_prediction_after: @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () {}

line_index: 1334
bug_before_refactoring: private void clickOnce () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> private void clickOnce () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> fix zoom in issue
bug_after_refactoring: private void ottaiqqyljwcffedzvha () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> private void ottaiqqyljwcffedzvha () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> fix zoom in issue
fix_before_refactoring: private void clickOnce () { aRobot . click () ; }
fix_after_refactoring: private void ottaiqqyljwcffedzvha () { aRobot . click () ; }
× fix_prediction_before: public void clickOnce () { aRobot . click () ; }
√ fix_prediction_after: private void ottaiqqyljwcffedzvha () { aRobot . click () ; }

line_index: 1367
bug_before_refactoring: private void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; } <s> private void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; } <s> [MVC] fixed bug in MainActivity
bug_after_refactoring: private void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; } <s> private void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; } <s> [MVC] fixed bug in MainActivity
fix_before_refactoring: public void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; }
fix_after_refactoring: public void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; }
× fix_prediction_before: private void getCustomerInfo ( int customerId ) { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this . customerId ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; }
√ fix_prediction_after: public void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; }

line_index: 1370
bug_before_refactoring: @ java.lang.Override public void run () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> @ java.lang.Override public void run () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> refactoring  removed isinterrupted check fixed performance issue removed try block
bug_after_refactoring: @ java.lang.Override public void fplddvhdsxpouqtohstf () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> @ java.lang.Override public void fplddvhdsxpouqtohstf () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> refactoring  removed isinterrupted check fixed performance issue removed try block
fix_before_refactoring: @ java.lang.Override public void run () { onUSBDataReceive ( buffer ) ; }
fix_after_refactoring: @ java.lang.Override public void fplddvhdsxpouqtohstf () { onUSBDataReceive ( buffer ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } }
√ fix_prediction_after: @ java.lang.Override public void fplddvhdsxpouqtohstf () { onUSBDataReceive ( buffer ) ; }

line_index: 1409
bug_before_refactoring: public void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> public void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> bug fixes for AstroPi
bug_after_refactoring: public void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> public void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> bug fixes for AstroPi
fix_before_refactoring: private void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } }
fix_after_refactoring: private void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } }
× fix_prediction_before: public void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } }
√ fix_prediction_after: private void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } }

line_index: 1418
bug_before_refactoring: public V remove ( K key ) {} <s> public V remove ( K key ) {} <s> fixing bugs in BSTMap
bug_after_refactoring: public V qrecbofbrghxzdqtefky ( K key ) {} <s> public V qrecbofbrghxzdqtefky ( K key ) {} <s> fixing bugs in BSTMap
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: public boolean remove ( K key ) { return false ; }
√ fix_prediction_after: { return null ; }

line_index: 1419
bug_before_refactoring: private boolean getIOFlag () { return IOFlag ; } <s> private boolean getIOFlag () { return IOFlag ; } <s> Update Job.java  fixed logic error
bug_after_refactoring: private boolean cvthdikjphipyjdagrxy () { return IOFlag ; } <s> private boolean cvthdikjphipyjdagrxy () { return IOFlag ; } <s> Update Job.java  fixed logic error
fix_before_refactoring: public boolean getIOFlag () { return IOFlag ; }
fix_after_refactoring: public boolean cvthdikjphipyjdagrxy () { return IOFlag ; }
× fix_prediction_before: protected boolean getIOFlag () { return IOFlag ; }
√ fix_prediction_after: public boolean cvthdikjphipyjdagrxy () { return IOFlag ; }

line_index: 1426
bug_before_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; } <s> @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; } <s> Fixed some Codacy error reports
bug_after_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; } <s> @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; } <s> Fixed some Codacy error reports
fix_before_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String handleErrorPage ( { return errorController . displayErrorPage ( "error.server" ) ; }
√ fix_prediction_after: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; }

line_index: 1459
bug_before_refactoring: public boolean hasNext ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( it ) == null ? false : it . hasNext () ; } <s> public boolean hasNext ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( it ) == null ? false : it . hasNext () ; } <s> bug fixed
bug_after_refactoring: public boolean idzvojaqifycfgditssc ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( it ) == null ? false : it . idzvojaqifycfgditssc () ; } <s> public boolean idzvojaqifycfgditssc ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( it ) == null ? false : it . idzvojaqifycfgditssc () ; } <s> bug fixed
fix_before_refactoring: public boolean hasNext ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( this . it ) == null ? false : it . hasNext () ; }
fix_after_refactoring: public boolean idzvojaqifycfgditssc ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( this . it ) == null ? false : it . idzvojaqifycfgditssc () ; }
× fix_prediction_before: public boolean hasNext ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( this . iterator ) == null ? false : this . it . hasNext () ; }
√ fix_prediction_after: public boolean idzvojaqifycfgditssc ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( this . it ) == null ? false : it . idzvojaqifycfgditssc () ; }

line_index: 1461
bug_before_refactoring: static org.thegalactic.context.constraint.categorical.CategoricalModel create () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> static org.thegalactic.context.constraint.categorical.CategoricalModel create () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> Fixes https://www.codacy.com/app/chdemko_2840/java-lattices/file/2806456264/issues/source?bid=3369455&fileBranchId=3369455
bug_after_refactoring: static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> Fixes https://www.codacy.com/app/chdemko_2840/java-lattices/file/2806456264/issues/source?bid=3369455&fileBranchId=3369455
fix_before_refactoring: public static org.thegalactic.context.constraint.categorical.CategoricalModel create () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; }
fix_after_refactoring: public static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; }
× fix_prediction_before: public static org.thegalactic.context.constraint.categorical.CategoricalModel create ( int index ) { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; }
√ fix_prediction_after: public static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; }

line_index: 1465
bug_before_refactoring: public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> o [fixed] synchronization issue which can cause a dead lock / crash
bug_after_refactoring: public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> o [fixed] synchronization issue which can cause a dead lock / crash
fix_before_refactoring: public java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { synchronized ( elements ) { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } }
fix_after_refactoring: public java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { synchronized ( elements ) { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } }
× fix_prediction_before: public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { return new java.util.Vector ( elements ) ; }
√ fix_prediction_after: public java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { synchronized ( elements ) { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } }

line_index: 1552
bug_before_refactoring: private jason.asSemantics.AffectiveCircumstance getAffectiveC () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; } <s> private jason.asSemantics.AffectiveCircumstance getAffectiveC () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; } <s> Fixed Bugs in reasoning cycle which deleted PEM  SEM and M each cycle.
bug_after_refactoring: private jason.asSemantics.AffectiveCircumstance wrtkxdsmitnpsytzwdst () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; } <s> private jason.asSemantics.AffectiveCircumstance wrtkxdsmitnpsytzwdst () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; } <s> Fixed Bugs in reasoning cycle which deleted PEM  SEM and M each cycle.
fix_before_refactoring: protected jason.asSemantics.AffectiveCircumstance getAffectiveC () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; }
fix_after_refactoring: protected jason.asSemantics.AffectiveCircumstance wrtkxdsmitnpsytzwdst () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; }
× fix_prediction_before: public jason.asSemantics.AffectiveCircumstance getAffectiveC () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; }
√ fix_prediction_after: protected jason.asSemantics.AffectiveCircumstance wrtkxdsmitnpsytzwdst () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; }

line_index: 1561
bug_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> Fixing some in-game errors
bug_after_refactoring: public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> Fixing some in-game errors
fix_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
fix_after_refactoring: public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
× fix_prediction_before: public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
√ fix_prediction_after: public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }

line_index: 1578
bug_before_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> Fixed issue related to the wrong number of active connections.
bug_after_refactoring: void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> Fixed issue related to the wrong number of active connections.
fix_before_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }
fix_after_refactoring: void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }
× fix_prediction_before: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; }
√ fix_prediction_after: void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }

line_index: 1595
bug_before_refactoring: public void onStart () { super . onStart () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> public void onStart () { super . onStart () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> fix timestamp error
bug_after_refactoring: public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> fix timestamp error
fix_before_refactoring: public void onStart () { super . onStart () ; }
fix_after_refactoring: public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; }
× fix_prediction_before: @ java.lang.Override public void onStart () { super . onStart () ; }
√ fix_prediction_after: public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; }

line_index: 1720
bug_before_refactoring: public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( name ) . getDefaultValue () ) ) ) ; } <s> public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( name ) . getDefaultValue () ) ) ) ; } <s> Resolved some more bugs and issues.
bug_after_refactoring: public java.lang.String rsnhcbzryxgwrycivmur ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( name ) . getDefaultValue () ) ) ) ; } <s> public java.lang.String rsnhcbzryxgwrycivmur ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( name ) . getDefaultValue () ) ) ) ; } <s> Resolved some more bugs and issues.
fix_before_refactoring: public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , null ) ) ) ; }
fix_after_refactoring: public java.lang.String rsnhcbzryxgwrycivmur ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , null ) ) ) ; }
× fix_prediction_before: public java.lang.String getString ( java.lang.String name ) { return getString ( name , null ) ; }
√ fix_prediction_after: public java.lang.String rsnhcbzryxgwrycivmur ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , null ) ) ) ; }

line_index: 1721
bug_before_refactoring: public static void main ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> public static void main ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> create file view anda fix some error issues
bug_after_refactoring: public static void xgnzkikbzxdagmociwca ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> public static void xgnzkikbzxdagmociwca ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> create file view anda fix some error issues
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void xgnzkikbzxdagmociwca ( java.lang.String [] args ) {}
× fix_prediction_before: public static void main ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; }
√ fix_prediction_after: public static void xgnzkikbzxdagmociwca ( java.lang.String [] args ) {}

line_index: 1745
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S aacikibqdrcjnmcmjkpr ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S aacikibqdrcjnmcmjkpr ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E aacikibqdrcjnmcmjkpr ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { entity = save ( entity ) ; return entity ; }
√ fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E aacikibqdrcjnmcmjkpr ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }

line_index: 1772
bug_before_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( note ) ; } <s> @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( note ) ; } <s> Solved some bugs in Login and createNote
bug_after_refactoring: @ java.lang.Override public void tiqhezffjonkskkvbyrw ( com.evernote.edam.type.Note result ) { callback . tiqhezffjonkskkvbyrw ( note ) ; } <s> @ java.lang.Override public void tiqhezffjonkskkvbyrw ( com.evernote.edam.type.Note result ) { callback . tiqhezffjonkskkvbyrw ( note ) ; } <s> Solved some bugs in Login and createNote
fix_before_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( result ) ; }
fix_after_refactoring: @ java.lang.Override public void tiqhezffjonkskkvbyrw ( com.evernote.edam.type.Note result ) { callback . tiqhezffjonkskkvbyrw ( result ) ; }
× fix_prediction_before: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { if ( callback != null ) { callback . onSucces ( note ) ; } }
√ fix_prediction_after: @ java.lang.Override public void tiqhezffjonkskkvbyrw ( com.evernote.edam.type.Note result ) { callback . tiqhezffjonkskkvbyrw ( result ) ; }

line_index: 1807
bug_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
bug_after_refactoring: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , b.length ) ; } <s> public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
fix_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , 0 , b.length ) ; }
fix_after_refactoring: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , 0 , b.length ) ; }
× fix_prediction_before: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; }
√ fix_prediction_after: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , 0 , b.length ) ; }

line_index: 1833
bug_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { if ( this . apply ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( argument ) ; } } <s> @ java.lang.Override public java.lang.Boolean apply ( A argument ) { if ( this . apply ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( argument ) ; } } <s> bugs fixed
bug_after_refactoring: @ java.lang.Override public java.lang.Boolean beafynwtvhukhylwnqbj ( A argument ) { if ( this . beafynwtvhukhylwnqbj ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . beafynwtvhukhylwnqbj ( argument ) ; } } <s> @ java.lang.Override public java.lang.Boolean beafynwtvhukhylwnqbj ( A argument ) { if ( this . beafynwtvhukhylwnqbj ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . beafynwtvhukhylwnqbj ( argument ) ; } } <s> bugs fixed
fix_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { return ( this . apply ( argument ) ) || ( predicate . apply ( argument ) ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Boolean beafynwtvhukhylwnqbj ( A argument ) { return ( this . beafynwtvhukhylwnqbj ( argument ) ) || ( predicate . beafynwtvhukhylwnqbj ( argument ) ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { return ( this . apply ( argument ) ) && ( predicate . apply ( argument ) ) ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.Boolean beafynwtvhukhylwnqbj ( A argument ) { return ( this . beafynwtvhukhylwnqbj ( argument ) ) || ( predicate . beafynwtvhukhylwnqbj ( argument ) ) ; }

line_index: 1881
bug_before_refactoring: @ java.lang.Override public void run () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> @ java.lang.Override public void run () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> Fixed some compile errors  still WIP
bug_after_refactoring: @ java.lang.Override public void qzwocnfyjeeixgwweotx () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> @ java.lang.Override public void qzwocnfyjeeixgwweotx () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> Fixed some compile errors  still WIP
fix_before_refactoring: @ java.lang.Override public void run () {}
fix_after_refactoring: @ java.lang.Override public void qzwocnfyjeeixgwweotx () {}
× fix_prediction_before: @ java.lang.Override public void run () { if ( ( org.owntracks.android.support.Preferences . getEnableWidget () ) == null ) { org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } }
√ fix_prediction_after: @ java.lang.Override public void qzwocnfyjeeixgwweotx () {}

line_index: 1918
bug_before_refactoring: public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
bug_after_refactoring: public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
fix_before_refactoring: public void setProgressText ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
fix_after_refactoring: public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
× fix_prediction_before: public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } }
√ fix_prediction_after: public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }

line_index: 1919
bug_before_refactoring: public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public void oqthbmxlrzihkjknsuep ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> public void oqthbmxlrzihkjknsuep ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
fix_after_refactoring: @ java.lang.Override public void oqthbmxlrzihkjknsuep ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
× fix_prediction_before: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
√ fix_prediction_after: @ java.lang.Override public void oqthbmxlrzihkjknsuep ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}

line_index: 1968
bug_before_refactoring: public void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> public void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> bug fixed in phone message special
bug_after_refactoring: public void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> public void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> bug fixed in phone message special
fix_before_refactoring: private void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } }
fix_after_refactoring: private void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } }
× fix_prediction_before: public void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } }
√ fix_prediction_after: private void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } }

line_index: 2050
bug_before_refactoring: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> Update no. 11  Reading and writing process has been sped up by about 20% and also potentially works in so-called online mode. However  the online mode is not yet implemented. Improvements. Various bug fixes.
bug_after_refactoring: public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> Update no. 11  Reading and writing process has been sped up by about 20% and also potentially works in so-called online mode. However  the online mode is not yet implemented. Improvements. Various bug fixes.
fix_before_refactoring: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }
fix_after_refactoring: public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return toString ( 1 , compress , false , false , true ) ; }
√ fix_prediction_after: public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }

