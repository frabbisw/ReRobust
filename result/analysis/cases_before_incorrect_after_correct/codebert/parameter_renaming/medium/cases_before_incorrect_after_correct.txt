line_index: 23
bug_before_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
bug_after_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } } return null ; } <s> public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } } return null ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
fix_before_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
fix_after_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } return null ; }
× fix_prediction_before: private static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
√ fix_prediction_after: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } return null ; }

line_index: 95
bug_before_refactoring: public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> EWOK-87 #code-review BUGFIX #comment  zoomFitAll custom zoom value is converted to the closest available in our possible zoom levels
bug_after_refactoring: public float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> public float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> EWOK-87 #code-review BUGFIX #comment  zoomFitAll custom zoom value is converted to the closest available in our possible zoom levels
fix_before_refactoring: private float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
fix_after_refactoring: private float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
× fix_prediction_before: public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
√ fix_prediction_after: private float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }

line_index: 192
bug_before_refactoring: public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> Bugfix: language should get through and stick
bug_after_refactoring: public void removeUserSession ( java.lang.String oysyzcabbbqowcwuaaos , java.lang.String vhorrmtkaadvpbchofas ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( oysyzcabbbqowcwuaaos ) ) && ( oThis.sessionId . equals ( vhorrmtkaadvpbchofas ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> public void removeUserSession ( java.lang.String oysyzcabbbqowcwuaaos , java.lang.String vhorrmtkaadvpbchofas ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( oysyzcabbbqowcwuaaos ) ) && ( oThis.sessionId . equals ( vhorrmtkaadvpbchofas ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> Bugfix: language should get through and stick
fix_before_refactoring: public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } }
fix_after_refactoring: public void removeUserSession ( java.lang.String oysyzcabbbqowcwuaaos , java.lang.String vhorrmtkaadvpbchofas ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( oysyzcabbbqowcwuaaos ) ) && ( oThis.sessionId . equals ( vhorrmtkaadvpbchofas ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } }
× fix_prediction_before: public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { if ( sUserId != null ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } }
√ fix_prediction_after: public void removeUserSession ( java.lang.String oysyzcabbbqowcwuaaos , java.lang.String vhorrmtkaadvpbchofas ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( oysyzcabbbqowcwuaaos ) ) && ( oThis.sessionId . equals ( vhorrmtkaadvpbchofas ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } }

line_index: 280
bug_before_refactoring: public void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } <s> public void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } <s> Fix  Fixed a bug where first layout wasn't laid correctly
bug_after_refactoring: public void haukbdqphgxojhlmryro ( boolean haukbdqphgxojhlmryro ) { int color ; if ( haukbdqphgxojhlmryro ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } <s> public void haukbdqphgxojhlmryro ( boolean haukbdqphgxojhlmryro ) { int color ; if ( haukbdqphgxojhlmryro ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } <s> Fix  Fixed a bug where first layout wasn't laid correctly
fix_before_refactoring: private void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; }
fix_after_refactoring: private void haukbdqphgxojhlmryro ( boolean haukbdqphgxojhlmryro ) { int color ; if ( haukbdqphgxojhlmryro ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; }
× fix_prediction_before: public void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } }
√ fix_prediction_after: private void haukbdqphgxojhlmryro ( boolean haukbdqphgxojhlmryro ) { int color ; if ( haukbdqphgxojhlmryro ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; }

line_index: 304
bug_before_refactoring: protected static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> protected static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> Fixed error naming bug
bug_after_refactoring: protected static java.lang.String parseVersion ( java.lang.String evbiaumkhnvroluipfam ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( evbiaumkhnvroluipfam ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> protected static java.lang.String parseVersion ( java.lang.String evbiaumkhnvroluipfam ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( evbiaumkhnvroluipfam ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> Fixed error naming bug
fix_before_refactoring: public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; }
fix_after_refactoring: public static java.lang.String parseVersion ( java.lang.String evbiaumkhnvroluipfam ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( evbiaumkhnvroluipfam ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; }
× fix_prediction_before: public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1" ; }
√ fix_prediction_after: public static java.lang.String parseVersion ( java.lang.String evbiaumkhnvroluipfam ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( evbiaumkhnvroluipfam ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; }

line_index: 415
bug_before_refactoring: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> [Bugfix] Fix several concurrency issues  OSGi services might come and go in an uncoordinated way. Services which deal with OSGi service references need to take care of the concurrent nature of such service events.
bug_after_refactoring: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle wtxhioozfhfhidtfeovu ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( wtxhioozfhfhidtfeovu . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle wtxhioozfhfhidtfeovu ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( wtxhioozfhfhidtfeovu . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> [Bugfix] Fix several concurrency issues  OSGi services might come and go in an uncoordinated way. Services which deal with OSGi service references need to take care of the concurrent nature of such service events.
fix_before_refactoring: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } return null ; }
fix_after_refactoring: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle wtxhioozfhfhidtfeovu ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( wtxhioozfhfhidtfeovu . equals ( entry . getValue () ) ) return entry . getKey () ; } return null ; }
× fix_prediction_before: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) { return entry . getKey () ; } } return null ; }
√ fix_prediction_after: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle wtxhioozfhfhidtfeovu ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( wtxhioozfhfhidtfeovu . equals ( entry . getValue () ) ) return entry . getKey () ; } return null ; }

line_index: 582
bug_before_refactoring: private static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } <s> private static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } <s> Fixing a bug (validate time stamp  check for future data)
bug_after_refactoring: private static boolean validatePriority ( java.lang.String tnjfpfipdakqfgxototh ) { if ( tnjfpfipdakqfgxototh == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( tnjfpfipdakqfgxototh ) ) return true ; } return false ; } <s> private static boolean validatePriority ( java.lang.String tnjfpfipdakqfgxototh ) { if ( tnjfpfipdakqfgxototh == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( tnjfpfipdakqfgxototh ) ) return true ; } return false ; } <s> Fixing a bug (validate time stamp  check for future data)
fix_before_refactoring: public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; }
fix_after_refactoring: public static boolean validatePriority ( java.lang.String tnjfpfipdakqfgxototh ) { if ( tnjfpfipdakqfgxototh == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( tnjfpfipdakqfgxototh ) ) return true ; } return false ; }
× fix_prediction_before: public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) { return true ; } } return false ; }
√ fix_prediction_after: public static boolean validatePriority ( java.lang.String tnjfpfipdakqfgxototh ) { if ( tnjfpfipdakqfgxototh == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( tnjfpfipdakqfgxototh ) ) return true ; } return false ; }

line_index: 615
bug_before_refactoring: private void collapseViews ( android.view.View fab , final android.view.View cardview , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> private void collapseViews ( android.view.View fab , final android.view.View cardview , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> minor lib update - mv export feat on actionBar - bug fix: rm anchor on recView from fab
bug_after_refactoring: private void collapseViews ( android.view.View aavhfwklzovgdahmwuuh , final android.view.View rjclxmrjxesbwlsobjvm , final boolean okqsbrarsyunqhnyijgk ) { android.animation.Animator aavhfwklzovgdahmwuuhAnimator = ( okqsbrarsyunqhnyijgk ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( aavhfwklzovgdahmwuuh , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( aavhfwklzovgdahmwuuh , false ) ; aavhfwklzovgdahmwuuhAnimator . start () ; rjclxmrjxesbwlsobjvm . setVisibility ( ( okqsbrarsyunqhnyijgk ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> private void collapseViews ( android.view.View aavhfwklzovgdahmwuuh , final android.view.View rjclxmrjxesbwlsobjvm , final boolean okqsbrarsyunqhnyijgk ) { android.animation.Animator aavhfwklzovgdahmwuuhAnimator = ( okqsbrarsyunqhnyijgk ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( aavhfwklzovgdahmwuuh , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( aavhfwklzovgdahmwuuh , false ) ; aavhfwklzovgdahmwuuhAnimator . start () ; rjclxmrjxesbwlsobjvm . setVisibility ( ( okqsbrarsyunqhnyijgk ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> minor lib update - mv export feat on actionBar - bug fix: rm anchor on recView from fab
fix_before_refactoring: private void collapseViews ( android.view.View fab , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; }
fix_after_refactoring: private void collapseViews ( android.view.View aavhfwklzovgdahmwuuh , final boolean okqsbrarsyunqhnyijgk ) { android.animation.Animator aavhfwklzovgdahmwuuhAnimator = ( okqsbrarsyunqhnyijgk ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( aavhfwklzovgdahmwuuh , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( aavhfwklzovgdahmwuuh , false ) ; aavhfwklzovgdahmwuuhAnimator . start () ; }
× fix_prediction_before: private void collapseViews ( android.view.View fab , final android.view.View cardview , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; }
√ fix_prediction_after: private void collapseViews ( android.view.View aavhfwklzovgdahmwuuh , final boolean okqsbrarsyunqhnyijgk ) { android.animation.Animator aavhfwklzovgdahmwuuhAnimator = ( okqsbrarsyunqhnyijgk ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( aavhfwklzovgdahmwuuh , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( aavhfwklzovgdahmwuuh , false ) ; aavhfwklzovgdahmwuuhAnimator . start () ; }

