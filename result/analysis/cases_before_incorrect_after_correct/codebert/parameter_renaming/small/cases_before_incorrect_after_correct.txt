line_index: 30
bug_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> fix decode bug
bug_after_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( bdagrpiuplneymrsmvnj + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( bdagrpiuplneymrsmvnj + 1 ) ) ; } <s> fix decode bug
fix_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
fix_after_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , bdagrpiuplneymrsmvnj ) ; }
× fix_prediction_before: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber - 1 ) ) ; }
√ fix_prediction_after: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , bdagrpiuplneymrsmvnj ) ; }

line_index: 33
bug_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
bug_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_nwaacbyoewuhqvtolrah" ) java.lang.String nwaacbyoewuhqvtolrah ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_nwaacbyoewuhqvtolrah" ) java.lang.String nwaacbyoewuhqvtolrah ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
fix_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < java.lang.String > fetchMoviesPopular ( ) ;
√ fix_prediction_after: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;

line_index: 55
bug_before_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; } <s> @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent qkxekuquuankbwhcpqfi ) { mCondom . proceedBroadcast ( qkxekuquuankbwhcpqfi , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent qkxekuquuankbwhcpqfi ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; } <s> @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent qkxekuquuankbwhcpqfi ) { mCondom . proceedBroadcast ( qkxekuquuankbwhcpqfi , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent qkxekuquuankbwhcpqfi ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; }
fix_after_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent qkxekuquuankbwhcpqfi ) { mCondom . proceedBroadcast ( qkxekuquuankbwhcpqfi , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; }
× fix_prediction_before: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; }
√ fix_prediction_after: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent qkxekuquuankbwhcpqfi ) { mCondom . proceedBroadcast ( qkxekuquuankbwhcpqfi , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; }

line_index: 94
bug_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
fix_after_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) {}
× fix_prediction_before: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; }
√ fix_prediction_after: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) {}

line_index: 194
bug_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
bug_after_refactoring: @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
fix_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
fix_after_refactoring: @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { return this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; }
× fix_prediction_before: @ java.lang.Override public T load ( java.lang.Long id ) { return boFacade . getEntityManager () . find ( this . boType , id ) ; }
√ fix_prediction_after: @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { return this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; }

line_index: 220
bug_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , lwclpjbpdhgmmbilnmfh ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , lwclpjbpdhgmmbilnmfh ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) {}
fix_after_refactoring: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) {}
× fix_prediction_before: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } }
√ fix_prediction_after: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) {}

line_index: 233
bug_before_refactoring: @ java.lang.Override public void onTabSelected ( int position ) { SameActionTab ( position ) ; } <s> @ java.lang.Override public void onTabSelected ( int position ) { SameActionTab ( position ) ; } <s> bugs fixed
bug_after_refactoring: @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) { SameActionTab ( pkxfhbjpttfhtevakryj ) ; } <s> @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) { SameActionTab ( pkxfhbjpttfhtevakryj ) ; } <s> bugs fixed
fix_before_refactoring: @ java.lang.Override public void onTabSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) {}
× fix_prediction_before: @ java.lang.Override public void onTabSelected ( int position ) { if ( ( type ) != 0 ) { SameActionTab ( position ) ; } }
√ fix_prediction_after: @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) {}

line_index: 245
bug_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
bug_after_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { if ( ! ( kbubqqnmrzidbpmprobs . isArray () ) ) { return kbubqqnmrzidbpmprobs ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( kbubqqnmrzidbpmprobs . getComponentType () ) ; } <s> public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { if ( ! ( kbubqqnmrzidbpmprobs . isArray () ) ) { return kbubqqnmrzidbpmprobs ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( kbubqqnmrzidbpmprobs . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
fix_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { return type ; }
fix_after_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { return kbubqqnmrzidbpmprobs ; }
× fix_prediction_before: private static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { return type ; }
√ fix_prediction_after: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { return kbubqqnmrzidbpmprobs ; }

line_index: 398
bug_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
bug_after_refactoring: public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } <s> public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
fix_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
fix_after_refactoring: public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { synchronized ( this . mtyjzdjxpejyderjqyozs ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } }
× fix_prediction_before: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } }
√ fix_prediction_after: public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { synchronized ( this . mtyjzdjxpejyderjqyozs ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } }

line_index: 438
bug_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { if ( pzwbbmagmiytpiywuqul != ( - 1 ) ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; } } <s> private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { if ( pzwbbmagmiytpiywuqul != ( - 1 ) ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
fix_after_refactoring: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; }
× fix_prediction_before: public void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
√ fix_prediction_after: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; }

line_index: 441
bug_before_refactoring: private native void write ( int [] buffer ) ; <s> private native void write ( int [] buffer ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
bug_after_refactoring: private native void write ( int [] odbzwhegpzyauzvnbchh ) ; <s> private native void write ( int [] odbzwhegpzyauzvnbchh ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
fix_before_refactoring: public native void write ( int [] buffer ) ;
fix_after_refactoring: public native void write ( int [] odbzwhegpzyauzvnbchh ) ;
× fix_prediction_before: public native void write ( int [] buffer , int offset ) ;
√ fix_prediction_after: public native void write ( int [] odbzwhegpzyauzvnbchh ) ;

line_index: 477
bug_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> bug fix etape 1
bug_after_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( exjbrxlelbqawyhcvccs + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( exjbrxlelbqawyhcvccs + 1 ) ) ; } <s> bug fix etape 1
fix_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
fix_after_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( exjbrxlelbqawyhcvccs ) ; }
× fix_prediction_before: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance () ; }
√ fix_prediction_after: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( exjbrxlelbqawyhcvccs ) ; }

line_index: 484
bug_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) {}
× fix_prediction_before: private void version () { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; }
√ fix_prediction_after: private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) {}

line_index: 553
bug_before_refactoring: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> Bug fixes for Double
bug_after_refactoring: public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , ( onzlysafcgaekixljpfo == null ? - 99.99 : onzlysafcgaekixljpfo ) ) ; } <s> public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , ( onzlysafcgaekixljpfo == null ? - 99.99 : onzlysafcgaekixljpfo ) ) ; } <s> Bug fixes for Double
fix_before_refactoring: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , tm ) ; }
fix_after_refactoring: public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , onzlysafcgaekixljpfo ) ; }
× fix_prediction_before: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( ( tm == null ? - 99.99 : tm ) ) ; }
√ fix_prediction_after: public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , onzlysafcgaekixljpfo ) ; }

line_index: 566
bug_before_refactoring: public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
bug_after_refactoring: public void setRadii ( byte emvksywonwiqbrublbhp ) { byte before = this . emvksywonwiqbrublbhp ; this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; if ( before != ( this . emvksywonwiqbrublbhp ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void setRadii ( byte emvksywonwiqbrublbhp ) { byte before = this . emvksywonwiqbrublbhp ; this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; if ( before != ( this . emvksywonwiqbrublbhp ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
fix_before_refactoring: public void setRadii ( byte radii ) { this . radii = radii ; }
fix_after_refactoring: public void setRadii ( byte emvksywonwiqbrublbhp ) { this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; }
× fix_prediction_before: public void setRadii ( byte radii ) { this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } }
√ fix_prediction_after: public void setRadii ( byte emvksywonwiqbrublbhp ) { this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; }

line_index: 593
bug_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
bug_after_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc . clone () ; } <s> public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
fix_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points ; }
fix_after_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc ; }
× fix_prediction_before: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; }
√ fix_prediction_after: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc ; }

line_index: 594
bug_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
bug_after_refactoring: @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { if ( uzugjucrzfqnpifetaxq . isHasuzugjucrzfqnpifetaxqs () ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; } } <s> @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { if ( uzugjucrzfqnpifetaxq . isHasuzugjucrzfqnpifetaxqs () ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
fix_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
fix_after_refactoring: @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; }
× fix_prediction_before: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } }
√ fix_prediction_after: @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; }

line_index: 596
bug_before_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> Green Light | Fixed multi commit window opening issue
bug_after_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String fvaxmgpbcipgyjzejctx ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String fvaxmgpbcipgyjzejctx ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> Green Light | Fixed multi commit window opening issue
fix_before_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) {}
fix_after_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String fvaxmgpbcipgyjzejctx ) {}
× fix_prediction_before: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; }
√ fix_prediction_after: @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String fvaxmgpbcipgyjzejctx ) {}

line_index: 625
bug_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , vwtklvtspqevajaqosqj.trailing ) ; } <s> private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , vwtklvtspqevajaqosqj.trailing ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) {}
× fix_prediction_before: private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; }
√ fix_prediction_after: private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) {}

line_index: 693
bug_before_refactoring: static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> Cleanup + cover art overhaul  Ability to add flags  "a"  "l"  and "hq" for special searches as well as fixed some bugs related to the cover art
bug_after_refactoring: static void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> static void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> Cleanup + cover art overhaul  Ability to add flags  "a"  "l"  and "hq" for special searches as well as fixed some bugs related to the cover art
fix_before_refactoring: public static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }
fix_after_refactoring: public static void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }
× fix_prediction_before: public static void downloadSong ( ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle ,youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }
√ fix_prediction_after: public static void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }

line_index: 751
bug_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> fixed interrupt bug
bug_after_refactoring: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; } } <s> public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; } } <s> fixed interrupt bug
fix_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
fix_after_refactoring: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; }
× fix_prediction_before: public void attack ( kru.codefight.fighter. attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
√ fix_prediction_after: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; }

line_index: 803
bug_before_refactoring: private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> parser bug fix  gui fixed
bug_after_refactoring: private void man ( java.lang.String purvbtbibseaedhlzkts ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> private void man ( java.lang.String purvbtbibseaedhlzkts ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> parser bug fix  gui fixed
fix_before_refactoring: private void man () { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
fix_after_refactoring: private void man () { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
× fix_prediction_before: private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
√ fix_prediction_after: private void man () { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }

line_index: 858
bug_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
bug_after_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi , 0 ) ; } <s> @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
fix_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName ) ; }
fix_after_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi ) ; }
× fix_prediction_before: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; }
√ fix_prediction_after: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi ) ; }

line_index: 939
bug_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
bug_after_refactoring: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
fix_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
fix_after_refactoring: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) {}
× fix_prediction_before: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; }
√ fix_prediction_after: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) {}

line_index: 960
bug_before_refactoring: public java.lang.String getString ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> public java.lang.String getString ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> Merge pull request #959 from scesbron/bugfix-ws-getstring  [#2035] Fix regression in WS.getString between 1.2.x and 1.4.x
bug_after_refactoring: public java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) { return play.libs.IO . readContentAsString ( getStream () , tjaxwqnkilzuokmdmqjm ) ; } <s> public java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) { return play.libs.IO . readContentAsString ( getStream () , tjaxwqnkilzuokmdmqjm ) ; } <s> Merge pull request #959 from scesbron/bugfix-ws-getstring  [#2035] Fix regression in WS.getString between 1.2.x and 1.4.x
fix_before_refactoring: public abstract java.lang.String getString ( java.lang.String encoding ) ;
fix_after_refactoring: public abstract java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) ;
× fix_prediction_before: public abstract java.lang.String getString ( ) ;
√ fix_prediction_after: public abstract java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) ;

line_index: 999
bug_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
bug_after_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
fix_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
fix_after_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) {}
× fix_prediction_before: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } }
√ fix_prediction_after: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) {}

line_index: 1002
bug_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
bug_after_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
fix_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}
fix_after_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) {}
× fix_prediction_before: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( ( ) - > textArea . requestFocusInWindow () ) ; }
√ fix_prediction_after: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) {}

line_index: 1110
bug_before_refactoring: public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ; <s> public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ; <s> Fixed network problems! (Grab Moneychanger too.)  Signed-off-by: FellowTraveler <F3llowTraveler@gmail.com>
bug_after_refactoring: public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba , java.lang.String xbfneuxbfglynwbepzqg ) ; <s> public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba , java.lang.String xbfneuxbfglynwbepzqg ) ; <s> Fixed network problems! (Grab Moneychanger too.)  Signed-off-by: FellowTraveler <F3llowTraveler@gmail.com>
fix_before_refactoring: public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 ) ;
fix_after_refactoring: public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba ) ;
× fix_prediction_before: public static native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ;
√ fix_prediction_after: public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba ) ;

line_index: 1188
bug_before_refactoring: public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
bug_after_refactoring: public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { if ( mShowProgressText ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { if ( mShowProgressText ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
fix_before_refactoring: public void setProgressText ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
fix_after_refactoring: public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
× fix_prediction_before: public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } }
√ fix_prediction_after: public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }

line_index: 1222
bug_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
bug_after_refactoring: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } <s> @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
fix_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
fix_after_refactoring: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } }
× fix_prediction_before: @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; }
√ fix_prediction_after: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } }

