line_index: 12
bug_before_refactoring: private int getRecommendationCount () { return this . recs ; } <s> private int getRecommendationCount () { return this . recs ; } <s> Fixes for no errors in master or PR
bug_after_refactoring: private int gfqgplegtmehxrnjggge () { return this . recs ; } <s> private int gfqgplegtmehxrnjggge () { return this . recs ; } <s> Fixes for no errors in master or PR
fix_before_refactoring: public int getRecommendationCount () { return this . recs ; }
fix_after_refactoring: public int gfqgplegtmehxrnjggge () { return this . recs ; }
× fix_prediction_before: protected int getRecommendationCount () { return this . recs ; }
√ fix_prediction_after: public int gfqgplegtmehxrnjggge () { return this . recs ; }

line_index: 39
bug_before_refactoring: public void unregisterNSDService () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> public void unregisterNSDService () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> Fix issues with Android activity lifecycle handling. Ensure restoration of app from saved instance state.
bug_after_refactoring: public void gjewqhjmncmchmevhiex () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> public void gjewqhjmncmchmevhiex () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> Fix issues with Android activity lifecycle handling. Ensure restoration of app from saved instance state.
fix_before_refactoring: public void unregisterNSDService () { if ( ( networkRegistrationListener ) != null ) { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } }
fix_after_refactoring: public void gjewqhjmncmchmevhiex () { if ( ( networkRegistrationListener ) != null ) { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } }
× fix_prediction_before: public void unregisterNSDService () { networkRegistrationListener = null ; }
√ fix_prediction_after: public void gjewqhjmncmchmevhiex () { if ( ( networkRegistrationListener ) != null ) { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } }

line_index: 115
bug_before_refactoring: java.lang.String get1 () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> java.lang.String get1 () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> Many fixes: Correct assembly of uber-jar with all required dependencies (PrimitivIO error). Slightly different meaning of -g option in align. This fixes #97 Export reads on the go.
bug_after_refactoring: java.lang.String qsifjyyaytqtpxpsegjv () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> java.lang.String qsifjyyaytqtpxpsegjv () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> Many fixes: Correct assembly of uber-jar with all required dependencies (PrimitivIO error). Slightly different meaning of -g option in align. This fixes #97 Export reads on the go.
fix_before_refactoring: java.lang.String get1 () { return parameters . get ( 0 ) ; }
fix_after_refactoring: java.lang.String qsifjyyaytqtpxpsegjv () { return parameters . get ( 0 ) ; }
× fix_prediction_before: java.lang.String get1 () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; }
√ fix_prediction_after: java.lang.String qsifjyyaytqtpxpsegjv () { return parameters . get ( 0 ) ; }

line_index: 138
bug_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
bug_after_refactoring: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
fix_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;
fix_after_refactoring: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;
× fix_prediction_before: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ;
√ fix_prediction_after: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;

line_index: 146
bug_before_refactoring: public java.lang.Object removeProxy ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> public java.lang.Object removeProxy ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> Update to 1.1.1  bug fixes  and robustness improvements
bug_after_refactoring: public java.lang.Object iezgggudjakbgkrrlxzb ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> public java.lang.Object iezgggudjakbgkrrlxzb ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> Update to 1.1.1  bug fixes  and robustness improvements
fix_before_refactoring: public java.lang.Object removeProxy ( java.lang.String objectId ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( objectId ) ; } }
fix_after_refactoring: public java.lang.Object iezgggudjakbgkrrlxzb ( java.lang.String objectId ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( objectId ) ; } }
× fix_prediction_before: public void removeProxy ( java.lang.String objectId ) { proxyIdToProxyMap . remove ( objectId ) ; }
√ fix_prediction_after: public java.lang.Object iezgggudjakbgkrrlxzb ( java.lang.String objectId ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( objectId ) ; } }

line_index: 271
bug_before_refactoring: public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public void hlwwaedqhjwxcvcxvije ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> public void hlwwaedqhjwxcvcxvije ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {}
fix_after_refactoring: @ java.lang.Override public void hlwwaedqhjwxcvcxvije ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {}
× fix_prediction_before: @ java.lang.Override public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles ) {}
√ fix_prediction_after: @ java.lang.Override public void hlwwaedqhjwxcvcxvije ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {}

line_index: 331
bug_before_refactoring: public java.util.List < double [] > getPath ( int index ) { return getPaths () . get ( index ) ; } <s> public java.util.List < double [] > getPath ( int index ) { return getPaths () . get ( index ) ; } <s> Fixed null issues caused by 4d coordinates and hull path size mismatch.
bug_after_refactoring: public java.util.List < double [] > oeahohnfmczroukjxrza ( int index ) { return oeahohnfmczroukjxrzas () . get ( index ) ; } <s> public java.util.List < double [] > oeahohnfmczroukjxrza ( int index ) { return oeahohnfmczroukjxrzas () . get ( index ) ; } <s> Fixed null issues caused by 4d coordinates and hull path size mismatch.
fix_before_refactoring: public java.util.List < double [] > getPath ( int index ) { if ( index < ( getPaths () . size () ) ) { return getPaths () . get ( index ) ; } else { return null ; } }
fix_after_refactoring: public java.util.List < double [] > oeahohnfmczroukjxrza ( int index ) { if ( index < ( oeahohnfmczroukjxrzas () . size () ) ) { return oeahohnfmczroukjxrzas () . get ( index ) ; } else { return null ; } }
× fix_prediction_before: public java.util.List < double [] > getPath () { if ( ( path ) == null ) { path = new java.util.ArrayList < double [] > () ; } return getPaths () . get ( index ) ; }
√ fix_prediction_after: public java.util.List < double [] > oeahohnfmczroukjxrza ( int index ) { if ( index < ( oeahohnfmczroukjxrzas () . size () ) ) { return oeahohnfmczroukjxrzas () . get ( index ) ; } else { return null ; } }

line_index: 341
bug_before_refactoring: public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> fix bug
bug_after_refactoring: public void glbmzkfnqwdltwbpunpb ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> public void glbmzkfnqwdltwbpunpb ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> fix bug
fix_before_refactoring: public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 1 ) ; } }
fix_after_refactoring: public void glbmzkfnqwdltwbpunpb ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 1 ) ; } }
× fix_prediction_before: public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; }
√ fix_prediction_after: public void glbmzkfnqwdltwbpunpb ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 1 ) ; } }

line_index: 365
bug_before_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> Add student management system frontend part and fix bug in REST API
bug_after_refactoring: com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> Add student management system frontend part and fix bug in REST API
fix_before_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;
fix_after_refactoring: com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;
× fix_prediction_before: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ;
√ fix_prediction_after: com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;

line_index: 373
bug_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
bug_after_refactoring: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
fix_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
fix_after_refactoring: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
× fix_prediction_before: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return mEqualityLiterals . containsKey ( termPair ) ; }
√ fix_prediction_after: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }

line_index: 438
bug_before_refactoring: public void c57run () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . c57run () ; } else { noteEditor = null ; } } <s> public void c57run () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . c57run () ; } else { noteEditor = null ; } } <s> Fix bug in c57note64.CInfoPanel
bug_after_refactoring: public void qtnvlracrhgzquamxpgf () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } <s> public void qtnvlracrhgzquamxpgf () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } <s> Fix bug in c57note64.CInfoPanel
fix_before_refactoring: public void c57run () { if ( ( noteEditor ) != null ) { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . c57run () ; } else { noteEditor = null ; } } }
fix_after_refactoring: public void qtnvlracrhgzquamxpgf () { if ( ( noteEditor ) != null ) { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } }
× fix_prediction_before: public void c57run () { noteEditor = null ; }
√ fix_prediction_after: public void qtnvlracrhgzquamxpgf () { if ( ( noteEditor ) != null ) { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } }

line_index: 489
bug_before_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> Fix Executor queue bugs and fix save point method signatures
bug_after_refactoring: public void orwaxdsstlffwhdgtinf ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> public void orwaxdsstlffwhdgtinf ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> Fix Executor queue bugs and fix save point method signatures
fix_before_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; }
fix_after_refactoring: public void orwaxdsstlffwhdgtinf ( java.lang.String tableId , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; }
× fix_prediction_before: public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; }
√ fix_prediction_after: public void orwaxdsstlffwhdgtinf ( java.lang.String tableId , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; }

line_index: 501
bug_before_refactoring: public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> fixing return null bug
bug_after_refactoring: public java.util.Set < TermCounter > ahvyqoompcnudfbdddpt ( java.lang.String term ) {} <s> public java.util.Set < TermCounter > ahvyqoompcnudfbdddpt ( java.lang.String term ) {} <s> fixing return null bug
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: { return new java.util.HashSet < TermCounter > () ; }
√ fix_prediction_after: { return null ; }

line_index: 568
bug_before_refactoring: public java.lang.String reverseString1 ( java.lang.String str ) {} <s> public java.lang.String reverseString1 ( java.lang.String str ) {} <s> Adding return statements to fix the compile errors - please write code
bug_after_refactoring: public java.lang.String fgzntznuyeboeoqebmrv ( java.lang.String str ) {} <s> public java.lang.String fgzntznuyeboeoqebmrv ( java.lang.String str ) {} <s> Adding return statements to fix the compile errors - please write code
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: { return str ; }
√ fix_prediction_after: { return null ; }

line_index: 609
bug_before_refactoring: public void stopResizing () { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } <s> public void stopResizing () { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } <s> Fix small bug where things would be null  I just noticed an exception that sometimes came up in the output and fixed it with a small null check.
bug_after_refactoring: public void lufoczozlfkpczwneodo () { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } <s> public void lufoczozlfkpczwneodo () { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } <s> Fix small bug where things would be null  I just noticed an exception that sometimes came up in the output and fixed it with a small null check.
fix_before_refactoring: public void stopResizing () { if ( ( moveTool ) != null ) { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } }
fix_after_refactoring: public void lufoczozlfkpczwneodo () { if ( ( moveTool ) != null ) { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } }
× fix_prediction_before: private void stopResizing () { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; }
√ fix_prediction_after: public void lufoczozlfkpczwneodo () { if ( ( moveTool ) != null ) { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } }

line_index: 625
bug_before_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> fix bug in main worker
bug_after_refactoring: java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> fix bug in main worker
fix_before_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer limit , java.lang.Integer offset ) ;
fix_after_refactoring: java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer limit , java.lang.Integer offset ) ;
× fix_prediction_before: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer limit ) ;
√ fix_prediction_after: java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer limit , java.lang.Integer offset ) ;

line_index: 636
bug_before_refactoring: private void actionButtonEditForToolBar ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> private void actionButtonEditForToolBar ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
bug_after_refactoring: private void rsxfabapscutqopzccps ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> private void rsxfabapscutqopzccps ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
fix_before_refactoring: private void actionButtonEditForToolBar () { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; }
fix_after_refactoring: private void rsxfabapscutqopzccps () { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; }
× fix_prediction_before: private void actionButtonEditForToolBar ( java.awt.event.ActionEvent evt ) { if ( ( noteEditFrame ) != null ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } }
√ fix_prediction_after: private void rsxfabapscutqopzccps () { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; }

line_index: 667
bug_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
fix_after_refactoring: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ index ] ; }
× fix_prediction_before: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks . get ( index ) ; }
√ fix_prediction_after: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ index ] ; }

line_index: 727
bug_before_refactoring: public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
bug_after_refactoring: public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
fix_before_refactoring: public void setDescription ( java.lang.String string ) {}
fix_after_refactoring: public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) {}
× fix_prediction_before: public void setDescription ( java.lang.String description ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; }
√ fix_prediction_after: public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) {}

line_index: 763
bug_before_refactoring: private int getWantToBuyTotal () {} <s> private int getWantToBuyTotal () {} <s> Adding more error support and unit tests. A strange edit made to Trader was solved.
bug_after_refactoring: private int jkjjbfonydwbisstpztg () {} <s> private int jkjjbfonydwbisstpztg () {} <s> Adding more error support and unit tests. A strange edit made to Trader was solved.
fix_before_refactoring: private int getWantToBuyTotal () { return 0 ; }
fix_after_refactoring: private int jkjjbfonydwbisstpztg () { return 0 ; }
× fix_prediction_before: public int getWantToBuyTotal () { return 1 ; }
√ fix_prediction_after: private int jkjjbfonydwbisstpztg () { return 0 ; }

line_index: 768
bug_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
bug_after_refactoring: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
fix_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
fix_after_refactoring: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder ) ; }
× fix_prediction_before: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , null , modelBuilder ) ; }
√ fix_prediction_after: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder ) ; }

line_index: 777
bug_before_refactoring: public boolean isEmpty () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public boolean isEmpty () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
bug_after_refactoring: public boolean oidsahmpczfctgqkmizm () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public boolean oidsahmpczfctgqkmizm () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
fix_before_refactoring: public boolean isEmpty () { return false ; }
fix_after_refactoring: public boolean oidsahmpczfctgqkmizm () { return false ; }
× fix_prediction_before: public boolean isEmpty () { return ( size ) == 0 ; }
√ fix_prediction_after: public boolean oidsahmpczfctgqkmizm () { return false ; }

line_index: 784
bug_before_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> NC 2.6  Fix problem with booked tickets Change seance date Fix exception when changing booking form from one seance to another
bug_after_refactoring: @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> NC 2.6  Fix problem with booked tickets Change seance date Fix exception when changing booking form from one seance to another
fix_before_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }
fix_after_refactoring: @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }
× fix_prediction_before: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { return ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ; }
√ fix_prediction_after: @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }

line_index: 818
bug_before_refactoring: public static java.lang.String createSelectAllQueryName () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName ( java.util.Collections . < java.lang.String > emptyList () ) ; } <s> public static java.lang.String createSelectAllQueryName () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName ( java.util.Collections . < java.lang.String > emptyList () ) ; } <s> Merge branch 'master' into 'MasterBugFixing'
bug_after_refactoring: public static java.lang.String rltwddafczfjhugcdfgd () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName ( java.util.Collections . < java.lang.String > emptyList () ) ; } <s> public static java.lang.String rltwddafczfjhugcdfgd () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName ( java.util.Collections . < java.lang.String > emptyList () ) ; } <s> Merge branch 'master' into 'MasterBugFixing'
fix_before_refactoring: public static java.lang.String createSelectAllQueryName () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName () ; }
fix_after_refactoring: public static java.lang.String rltwddafczfjhugcdfgd () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName () ; }
× fix_prediction_before: public static java.lang.String createSelectAllQueryName () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName ( emptyList () ) ; }
√ fix_prediction_after: public static java.lang.String rltwddafczfjhugcdfgd () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName () ; }

line_index: 920
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> Fix bug #57 - ctrl-delete keyboard shortcut not responsive
bug_after_refactoring: public void ohphnmsuoxfijpasnshi ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> public void ohphnmsuoxfijpasnshi ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> Fix bug #57 - ctrl-delete keyboard shortcut not responsive
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear () ; }
fix_after_refactoring: public void ohphnmsuoxfijpasnshi ( java.awt.event.ActionEvent ae ) { insertYear () ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , true ) ; }
√ fix_prediction_after: public void ohphnmsuoxfijpasnshi ( java.awt.event.ActionEvent ae ) { insertYear () ; }

line_index: 938
bug_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
fix_after_refactoring: private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
× fix_prediction_before: private void onUnchoke () { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
√ fix_prediction_after: private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }

line_index: 947
bug_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
bug_after_refactoring: @ java.lang.Override public void xbnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> @ java.lang.Override public void xbnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
fix_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
fix_after_refactoring: @ java.lang.Override public void xbnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
× fix_prediction_before: @ java.lang.Override public boolean onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; return true ; } return false ; }
√ fix_prediction_after: @ java.lang.Override public void xbnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }

line_index: 1014
bug_before_refactoring: public void afterBurnin () { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } <s> public void afterBurnin () { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } <s> Fixed StructAlign bug causing global sigma mode to fail after the burnin.
bug_after_refactoring: public void oosgfwtuizsnxdxmreeb () { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } <s> public void oosgfwtuizsnxdxmreeb () { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } <s> Fixed StructAlign bug causing global sigma mode to fail after the burnin.
fix_before_refactoring: public void afterBurnin () { if ( ( nuMove ) != null ) { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } }
fix_after_refactoring: public void oosgfwtuizsnxdxmreeb () { if ( ( nuMove ) != null ) { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } }
× fix_prediction_before: public void afterBurnin () {}
√ fix_prediction_after: public void oosgfwtuizsnxdxmreeb () { if ( ( nuMove ) != null ) { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } }

line_index: 1068
bug_before_refactoring: public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> Fixed the stupid bug
bug_after_refactoring: public void jyniwipdogvxnzkjduub ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> public void jyniwipdogvxnzkjduub ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> Fixed the stupid bug
fix_before_refactoring: public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) ) ; }
fix_after_refactoring: public void jyniwipdogvxnzkjduub ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) ) ; }
× fix_prediction_before: public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) ) ; }
√ fix_prediction_after: public void jyniwipdogvxnzkjduub ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) ) ; }

line_index: 1119
bug_before_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
fix_after_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; }
× fix_prediction_before: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( new io.hekate.messaging.internal.DefaultMessagingChannel < T > ( policy ) ) ; }
√ fix_prediction_after: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; }

line_index: 1265
bug_before_refactoring: @ java.lang.Override public void onBackPressed () { if ( ! ( backgroundPrefValue . equals ( pref_background . getValue () ) ) ) { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; } else { super . onBackPressed () ; } } <s> @ java.lang.Override public void onBackPressed () { if ( ! ( backgroundPrefValue . equals ( pref_background . getValue () ) ) ) { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; } else { super . onBackPressed () ; } } <s> Fixed some bugs ALONE
bug_after_refactoring: @ java.lang.Override public void xyvwgcshjxnmxsviecnm () { if ( ! ( backgroundPrefValue . equals ( pref_background . getValue () ) ) ) { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; } else { super . xyvwgcshjxnmxsviecnm () ; } } <s> @ java.lang.Override public void xyvwgcshjxnmxsviecnm () { if ( ! ( backgroundPrefValue . equals ( pref_background . getValue () ) ) ) { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; } else { super . xyvwgcshjxnmxsviecnm () ; } } <s> Fixed some bugs ALONE
fix_before_refactoring: @ java.lang.Override public void onBackPressed () { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; }
fix_after_refactoring: @ java.lang.Override public void xyvwgcshjxnmxsviecnm () { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onBackPressed () { super . onBackPressed () ; }
√ fix_prediction_after: @ java.lang.Override public void xyvwgcshjxnmxsviecnm () { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; }

line_index: 1279
bug_before_refactoring: public void tick () { ( tickCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( tickCount ) ; } } <s> public void tick () { ( tickCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( tickCount ) ; } } <s> Created Screen  -Created Screen (So background is visible) -Fixed Variable Naming (Height was spelled Heigth) -Cleaned up some debug code
bug_after_refactoring: public void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( zryxgggyzwypqulmnoquCount ) ; } } <s> public void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( zryxgggyzwypqulmnoquCount ) ; } } <s> Created Screen  -Created Screen (So background is visible) -Fixed Variable Naming (Height was spelled Heigth) -Cleaned up some debug code
fix_before_refactoring: public void tick () { ( tickCount ) ++ ; }
fix_after_refactoring: public void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; }
× fix_prediction_before: private void tick () { ( tickCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( tickCount ) ; } }
√ fix_prediction_after: public void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; }

line_index: 1382
bug_before_refactoring: public com.unimelb.swen30006.metromadness.tracks.Line getRandomLine () { com.unimelb.swen30006.metromadness.tracks.Line l = lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; return l ; } <s> public com.unimelb.swen30006.metromadness.tracks.Line getRandomLine () { com.unimelb.swen30006.metromadness.tracks.Line l = lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; return l ; } <s> resolve some massive bugs again
bug_after_refactoring: public com.unimelb.swen30006.metromadness.tracks.Line kykyxfgoiaoavmcfeobw () { com.unimelb.swen30006.metromadness.tracks.Line l = lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; return l ; } <s> public com.unimelb.swen30006.metromadness.tracks.Line kykyxfgoiaoavmcfeobw () { com.unimelb.swen30006.metromadness.tracks.Line l = lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; return l ; } <s> resolve some massive bugs again
fix_before_refactoring: public com.unimelb.swen30006.metromadness.tracks.Line getRandomLine () { return lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; }
fix_after_refactoring: public com.unimelb.swen30006.metromadness.tracks.Line kykyxfgoiaoavmcfeobw () { return lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; }
× fix_prediction_before: public com.unimelb.swen30006.metromadness.tracks.Line getRandomLine () { return lines . get ( 0 ) ; }
√ fix_prediction_after: public com.unimelb.swen30006.metromadness.tracks.Line kykyxfgoiaoavmcfeobw () { return lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; }

line_index: 1429
bug_before_refactoring: private com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> private com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> gps fix bug
bug_after_refactoring: private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> gps fix bug
fix_before_refactoring: private com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 0 ] ; }
fix_after_refactoring: private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 0 ] ; }
× fix_prediction_before: public com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; }
√ fix_prediction_after: private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 0 ] ; }

line_index: 1433
bug_before_refactoring: private synchronized boolean canSend () { return this . canSend_synch_lock ; } <s> private synchronized boolean canSend () { return this . canSend_synch_lock ; } <s> Added a reference to the connection thread in the Client class. Added a method to allow the Client object to send a message via the referenced Clientside method. Fixed an error in client connect() method.
bug_after_refactoring: private synchronized boolean ultcxeuucaeflpjplisg () { return this . ultcxeuucaeflpjplisg_synch_lock ; } <s> private synchronized boolean ultcxeuucaeflpjplisg () { return this . ultcxeuucaeflpjplisg_synch_lock ; } <s> Added a reference to the connection thread in the Client class. Added a method to allow the Client object to send a message via the referenced Clientside method. Fixed an error in client connect() method.
fix_before_refactoring: public synchronized boolean canSend () { return this . canSend_synch_lock ; }
fix_after_refactoring: public synchronized boolean ultcxeuucaeflpjplisg () { return this . ultcxeuucaeflpjplisg_synch_lock ; }
× fix_prediction_before: public boolean canSend () { return this . canSend_synch_lock ; }
√ fix_prediction_after: public synchronized boolean ultcxeuucaeflpjplisg () { return this . ultcxeuucaeflpjplisg_synch_lock ; }

line_index: 1473
bug_before_refactoring: public void doJob () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> public void doJob () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> Fixed Internal Error while registering new users
bug_after_refactoring: public void gmbscvhanenymfmouyyn () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> public void gmbscvhanenymfmouyyn () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> Fixed Internal Error while registering new users
fix_before_refactoring: public void doJob () {}
fix_after_refactoring: public void gmbscvhanenymfmouyyn () {}
× fix_prediction_before: public void doJob () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( socialUser ) ; messageCenter . save () ; } }
√ fix_prediction_after: public void gmbscvhanenymfmouyyn () {}

line_index: 1499
bug_before_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> some for upwork  bugfix but i was not hired
bug_after_refactoring: @ java.lang.Override void fmqztxyeyzhjynzylbic ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> @ java.lang.Override void fmqztxyeyzhjynzylbic ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> some for upwork  bugfix but i was not hired
fix_before_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { synchronized ( this ) { this . mZoom = zoom ; } }
fix_after_refactoring: @ java.lang.Override void fmqztxyeyzhjynzylbic ( @ com.flurgle.camerakit.Zoom int zoom ) { synchronized ( this ) { this . mZoom = zoom ; } }
× fix_prediction_before: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { synchronized ( this ) { mZoom = zoom ; } }
√ fix_prediction_after: @ java.lang.Override void fmqztxyeyzhjynzylbic ( @ com.flurgle.camerakit.Zoom int zoom ) { synchronized ( this ) { this . mZoom = zoom ; } }

line_index: 1557
bug_before_refactoring: public java.lang.String showNewQuestion () { newPost = postService . getNewPost () ; java.lang.System.out . println ( ( "Size:" + ( newPost . size () ) ) ) ; java.lang.System.out . println ( newPost . get ( 0 ) . getBody () ) ; return "showNewQuestion_success" ; } <s> public java.lang.String showNewQuestion () { newPost = postService . getNewPost () ; java.lang.System.out . println ( ( "Size:" + ( newPost . size () ) ) ) ; java.lang.System.out . println ( newPost . get ( 0 ) . getBody () ) ; return "showNewQuestion_success" ; } <s> solve home.jsp data show problem and Chinese display problem
bug_after_refactoring: public java.lang.String aterxhwceqmdhkmpmekc () { newPost = postService . getNewPost () ; java.lang.System.out . println ( ( "Size:" + ( newPost . size () ) ) ) ; java.lang.System.out . println ( newPost . get ( 0 ) . getBody () ) ; return "aterxhwceqmdhkmpmekc_success" ; } <s> public java.lang.String aterxhwceqmdhkmpmekc () { newPost = postService . getNewPost () ; java.lang.System.out . println ( ( "Size:" + ( newPost . size () ) ) ) ; java.lang.System.out . println ( newPost . get ( 0 ) . getBody () ) ; return "aterxhwceqmdhkmpmekc_success" ; } <s> solve home.jsp data show problem and Chinese display problem
fix_before_refactoring: public java.lang.String showNewQuestion () { newPost = postService . getNewPost () ; return "showNewQuestion_success" ; }
fix_after_refactoring: public java.lang.String aterxhwceqmdhkmpmekc () { newPost = postService . getNewPost () ; return "aterxhwceqmdhkmpmekc_success" ; }
× fix_prediction_before: public java.lang.String showNewQuestion () { return "showNewQuestion_success" ; }
√ fix_prediction_after: public java.lang.String aterxhwceqmdhkmpmekc () { newPost = postService . getNewPost () ; return "aterxhwceqmdhkmpmekc_success" ; }

line_index: 1560
bug_before_refactoring: public void visit () { this . visited += 1 ; } <s> public void visit () { this . visited += 1 ; } <s> bugfixes / improvements
bug_after_refactoring: public void xznxdhpqcqyclkteeyfw () { this . xznxdhpqcqyclkteeyfwed += 1 ; } <s> public void xznxdhpqcqyclkteeyfw () { this . xznxdhpqcqyclkteeyfwed += 1 ; } <s> bugfixes / improvements
fix_before_refactoring: public void visit () { visited += 1 ; }
fix_after_refactoring: public void xznxdhpqcqyclkteeyfw () { xznxdhpqcqyclkteeyfwed += 1 ; }
× fix_prediction_before: public void visit () {}
√ fix_prediction_after: public void xznxdhpqcqyclkteeyfw () { xznxdhpqcqyclkteeyfwed += 1 ; }

line_index: 1665
bug_before_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> Fix compatibility problems between Chrome configurations #68153
bug_after_refactoring: public org.openqa.selenium.WebDriver qintydjymgryndxsbhss ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> public org.openqa.selenium.WebDriver qintydjymgryndxsbhss ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> Fix compatibility problems between Chrome configurations #68153
fix_before_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties ) throws java.io.IOException { return webDriverFactory . create ( webDriverProperties ) ; }
fix_after_refactoring: public org.openqa.selenium.WebDriver qintydjymgryndxsbhss ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties ) throws java.io.IOException { return webDriverFactory . create ( webDriverProperties ) ; }
× fix_prediction_before: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriverFactory . create ( webDriverProperties ) ; }
√ fix_prediction_after: public org.openqa.selenium.WebDriver qintydjymgryndxsbhss ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties ) throws java.io.IOException { return webDriverFactory . create ( webDriverProperties ) ; }

line_index: 1715
bug_before_refactoring: public void tick () { for ( int i = 0 ; i < 1000 ; i ++ ) isYellow = ! ( isYellow ) ; } <s> public void tick () { for ( int i = 0 ; i < 1000 ; i ++ ) isYellow = ! ( isYellow ) ; } <s> More bug fixes.  Fixed bugs regarding spawning and T1Kill.
bug_after_refactoring: public void dqspjcrfgzearwvlwsnu () { for ( int i = 0 ; i < 1000 ; i ++ ) isYellow = ! ( isYellow ) ; } <s> public void dqspjcrfgzearwvlwsnu () { for ( int i = 0 ; i < 1000 ; i ++ ) isYellow = ! ( isYellow ) ; } <s> More bug fixes.  Fixed bugs regarding spawning and T1Kill.
fix_before_refactoring: public void tick () {}
fix_after_refactoring: public void dqspjcrfgzearwvlwsnu () {}
× fix_prediction_before: public void tick () { isYellow = ! ( isYellow ) ; }
√ fix_prediction_after: public void dqspjcrfgzearwvlwsnu () {}

line_index: 1745
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S aacikibqdrcjnmcmjkpr ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S aacikibqdrcjnmcmjkpr ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E aacikibqdrcjnmcmjkpr ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { return entity ; }
√ fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E aacikibqdrcjnmcmjkpr ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }

line_index: 1747
bug_before_refactoring: public void closeConnection ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; in . close () ; out . close () ; socket . close () ; } <s> public void closeConnection ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; in . close () ; out . close () ; socket . close () ; } <s> fixar exit-buggar
bug_after_refactoring: public void etdxnoqsykoynwhkccpv ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; in . close () ; out . close () ; socket . close () ; } <s> public void etdxnoqsykoynwhkccpv ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; in . close () ; out . close () ; socket . close () ; } <s> fixar exit-buggar
fix_before_refactoring: public void closeConnection ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; }
fix_after_refactoring: public void etdxnoqsykoynwhkccpv ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; }
× fix_prediction_before: public void closeConnection () { out . writeObject ( Client.END ) ; in . close () ; out . close () ; socket . close () ; }
√ fix_prediction_after: public void etdxnoqsykoynwhkccpv ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; }

line_index: 1817
bug_before_refactoring: @ java.lang.Override public void run () { node . close () ; } <s> @ java.lang.Override public void run () { node . close () ; } <s> Improve path management on init: * Properly support symlinks (e.g. /tmp -> /mnt/tmp) * Check all configured paths up front and deliver the best exception we can when things are wrong * Initialize securitymanager earlier * Fix too-loud error logging of Natives root check
bug_after_refactoring: @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { node . close () ; } <s> @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { node . close () ; } <s> Improve path management on init: * Properly support symlinks (e.g. /tmp -> /mnt/tmp) * Check all configured paths up front and deliver the best exception we can when things are wrong * Initialize securitymanager earlier * Fix too-loud error logging of Natives root check
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( node ) != null ) { node . close () ; } }
fix_after_refactoring: @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { if ( ( node ) != null ) { node . close () ; } }
× fix_prediction_before: @ java.lang.Override public void run () { close () ; }
√ fix_prediction_after: @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { if ( ( node ) != null ) { node . close () ; } }

line_index: 1888
bug_before_refactoring: public algorithms.heap.HeapTreeNode clone () { try { super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> public algorithms.heap.HeapTreeNode clone () { try { super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> solved bugs on dictionary still to do in heap
bug_after_refactoring: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { try { super . pllvlwjcejedhpijfhls () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { try { super . pllvlwjcejedhpijfhls () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> solved bugs on dictionary still to do in heap
fix_before_refactoring: public algorithms.heap.HeapTreeNode clone () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }
fix_after_refactoring: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }
× fix_prediction_before: public algorithms.heap.HeapTreeNode clone () { return new algorithms.heap.HeapTreeNode ( this ) ; }
√ fix_prediction_after: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }

line_index: 2000
bug_before_refactoring: public static void updatePilot ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } <s> public static void updatePilot ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } <s> bugfix: null checks in sdk methods
bug_after_refactoring: public static void ysqrbhfbvmhsjpgtezww ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } <s> public static void ysqrbhfbvmhsjpgtezww ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } <s> bugfix: null checks in sdk methods
fix_before_refactoring: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } }
fix_after_refactoring: public static void ysqrbhfbvmhsjpgtezww ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } }
× fix_prediction_before: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } }
√ fix_prediction_after: public static void ysqrbhfbvmhsjpgtezww ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } }

line_index: 2008
bug_before_refactoring: public void requestNewSender () { ServerThread thread = queue . remove () ; thread . setToSender () ; } <s> public void requestNewSender () { ServerThread thread = queue . remove () ; thread . setToSender () ; } <s> Fixed a bug that occured when the queue was empty.
bug_after_refactoring: public void awxxfsvdifpmuyxerhov () { ServerThread thread = queue . remove () ; thread . setToSender () ; } <s> public void awxxfsvdifpmuyxerhov () { ServerThread thread = queue . remove () ; thread . setToSender () ; } <s> Fixed a bug that occured when the queue was empty.
fix_before_refactoring: public void requestNewSender () { if ( ( queue . size () ) > 0 ) { ServerThread thread = queue . remove () ; thread . setToSender () ; } }
fix_after_refactoring: public void awxxfsvdifpmuyxerhov () { if ( ( queue . size () ) > 0 ) { ServerThread thread = queue . remove () ; thread . setToSender () ; } }
× fix_prediction_before: public void requestNewSender () { ServerThread thread = new ServerThread () ; thread . start () ; }
√ fix_prediction_after: public void awxxfsvdifpmuyxerhov () { if ( ( queue . size () ) > 0 ) { ServerThread thread = queue . remove () ; thread . setToSender () ; } }

line_index: 2037
bug_before_refactoring: public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
bug_after_refactoring: public static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
fix_before_refactoring: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
fix_after_refactoring: private static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
× fix_prediction_before: public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) {}
√ fix_prediction_after: private static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }

