line_index: 27
bug_before_refactoring: protected void replacementHandler ( int victimFrameNum , Frame incomingFrame ) {} <s> protected void replacementHandler ( int victimFrameNum , Frame incomingFrame ) {} <s> fixed compiler errors in memmanager from previous commit
bug_after_refactoring: protected void replacementHandler ( int mljyslucuchxfftdkjcb , Frame orcxvpqnnahaftxorwrk ) {} <s> protected void replacementHandler ( int mljyslucuchxfftdkjcb , Frame orcxvpqnnahaftxorwrk ) {} <s> fixed compiler errors in memmanager from previous commit
fix_before_refactoring: protected abstract void replacementHandler ( int victimFrameNum , Frame incomingFrame ) ;
fix_after_refactoring: protected abstract void replacementHandler ( int mljyslucuchxfftdkjcb , Frame orcxvpqnnahaftxorwrk ) ;
× fix_prediction_before: protected void replacementHandler ( int victimFrameNum , Frame incomingFrame ) {}
√ fix_prediction_after: protected abstract void replacementHandler ( int mljyslucuchxfftdkjcb , Frame orcxvpqnnahaftxorwrk ) ;

line_index: 46
bug_before_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , comment ) ; } <s> public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , comment ) ; } <s> + hope I've now fixed every bug I introduced in #12
bug_after_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , comment ) ; } <s> public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , comment ) ; } <s> + hope I've now fixed every bug I introduced in #12
fix_before_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , null ) ; }
fix_after_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , null ) ; }
× fix_prediction_before: public static void autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , comment ) ; }
√ fix_prediction_after: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , null ) ; }

line_index: 94
bug_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
fix_after_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) {}
× fix_prediction_before: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { if ( ( buttonStartPage ) != null ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } }
√ fix_prediction_after: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) {}

line_index: 130
bug_before_refactoring: protected void add ( java.util.List list , net.minecraft.block.Block block ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } <s> protected void add ( java.util.List list , net.minecraft.block.Block block ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } <s> Fixed casting error in multi-block code  Added NPE to creative tab add(item) and add(block)
bug_after_refactoring: protected void add ( java.util.List jxlhceqykkpnarcbajwm , net.minecraft.tnztwunbvlvtndigsoct.Block tnztwunbvlvtndigsoct ) { tnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( tnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; } <s> protected void add ( java.util.List jxlhceqykkpnarcbajwm , net.minecraft.tnztwunbvlvtndigsoct.Block tnztwunbvlvtndigsoct ) { tnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( tnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; } <s> Fixed casting error in multi-block code  Added NPE to creative tab add(item) and add(block)
fix_before_refactoring: protected void add ( java.util.List list , net.minecraft.block.Block block ) { if ( block != null ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } }
fix_after_refactoring: protected void add ( java.util.List jxlhceqykkpnarcbajwm , net.minecraft.tnztwunbvlvtndigsoct.Block tnztwunbvlvtndigsoct ) { if ( tnztwunbvlvtndigsoct != null ) { tnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( tnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; } }
× fix_prediction_before: protected void add ( java.util.List list , net.minecraft.block.Block block ) { if ( ( block != null ) && ( ( block . getSubBlocks () ) != null ) ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } }
√ fix_prediction_after: protected void add ( java.util.List jxlhceqykkpnarcbajwm , net.minecraft.tnztwunbvlvtndigsoct.Block tnztwunbvlvtndigsoct ) { if ( tnztwunbvlvtndigsoct != null ) { tnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( tnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; } }

line_index: 235
bug_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
bug_after_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { if ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) { if ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { if ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) { if ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
fix_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
fix_after_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { return ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) && ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) ; }
× fix_prediction_before: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return mEqualityLiterals . containsKey ( termPair ) ; }
√ fix_prediction_after: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { return ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) && ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) ; }

line_index: 270
bug_before_refactoring: private void actionButtonAddForToolBar ( java.awt.event.ActionEvent evt ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> private void actionButtonAddForToolBar ( java.awt.event.ActionEvent evt ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
bug_after_refactoring: private void actionButtonAddForToolBar ( java.awt.event.ActionEvent igngvkzhqfnipbvshwnf ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> private void actionButtonAddForToolBar ( java.awt.event.ActionEvent igngvkzhqfnipbvshwnf ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
fix_before_refactoring: private void actionButtonAddForToolBar () { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }
fix_after_refactoring: private void actionButtonAddForToolBar () { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }
× fix_prediction_before: private void actionButtonAddForToolBar ( java.awt.event.ActionEvent evt ) { noteAddFrame . setVisible ( false ) ; noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }
√ fix_prediction_after: private void actionButtonAddForToolBar () { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }

line_index: 311
bug_before_refactoring: public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> fixing return null bug
bug_after_refactoring: public java.util.Set < TermCounter > get ( java.lang.String navaiwqxzjwcfzfbanil ) {} <s> public java.util.Set < TermCounter > get ( java.lang.String navaiwqxzjwcfzfbanil ) {} <s> fixing return null bug
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: { return new java.util.HashSet < TermCounter > () ; }
√ fix_prediction_after: { return null ; }

line_index: 353
bug_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
bug_after_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) { try { emzwhrzjcdijgeyluvsl . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) { try { emzwhrzjcdijgeyluvsl . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
fix_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
fix_after_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) {}
× fix_prediction_before: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; }
√ fix_prediction_after: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) {}

line_index: 361
bug_before_refactoring: public java.lang.String reverseString1 ( java.lang.String str ) {} <s> public java.lang.String reverseString1 ( java.lang.String str ) {} <s> Adding return statements to fix the compile errors - please write code
bug_after_refactoring: public java.lang.String reverseString1 ( java.lang.String sygxxkhkndguoermlqlh ) {} <s> public java.lang.String reverseString1 ( java.lang.String sygxxkhkndguoermlqlh ) {} <s> Adding return statements to fix the compile errors - please write code
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: { return str ; }
√ fix_prediction_after: { return null ; }

line_index: 424
bug_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ( ypidopmnywqvwbdfhnbj + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ( ypidopmnywqvwbdfhnbj + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
fix_after_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ypidopmnywqvwbdfhnbj ] ; }
× fix_prediction_before: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks . get ( index ) ; }
√ fix_prediction_after: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ypidopmnywqvwbdfhnbj ] ; }

line_index: 463
bug_before_refactoring: public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
bug_after_refactoring: public void setDescription ( java.lang.String qulnigowcughxizqrroc ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void setDescription ( java.lang.String qulnigowcughxizqrroc ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
fix_before_refactoring: public void setDescription ( java.lang.String string ) {}
fix_after_refactoring: public void setDescription ( java.lang.String qulnigowcughxizqrroc ) {}
× fix_prediction_before: public void setDescription ( java.lang.String description ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; }
√ fix_prediction_after: public void setDescription ( java.lang.String qulnigowcughxizqrroc ) {}

line_index: 510
bug_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
bug_after_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
fix_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
fix_after_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; }
× fix_prediction_before: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return null ; }
√ fix_prediction_after: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; }

line_index: 525
bug_before_refactoring: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> WINDOW SDK Release version 3.3.1 - Edk libs. 32bit  64bit. - C#  Java wrapper. - C++ header files. - Fixed some bugs example with new edk libs.
bug_after_refactoring: boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd , java.lang.String qhpgivqvwhwjkcxeevaa ) ; <s> boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd , java.lang.String qhpgivqvwhwjkcxeevaa ) ; <s> WINDOW SDK Release version 3.3.1 - Edk libs. 32bit  64bit. - C#  Java wrapper. - C++ header files. - Fixed some bugs example with new edk libs.
fix_before_refactoring: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId ) ;
fix_after_refactoring: boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd ) ;
× fix_prediction_before: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ;
√ fix_prediction_after: boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd ) ;

line_index: 529
bug_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> Add pay shortcut  change move strategy and fix bug
bug_after_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { if ( ccetjvzhfypqncqdsxob ) { leftflag = true ; } else { leftflag = false ; } } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { if ( ccetjvzhfypqncqdsxob ) { leftflag = true ; } else { leftflag = false ; } } <s> Add pay shortcut  change move strategy and fix bug
fix_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = isChecked ; }
fix_after_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { leftflag = ccetjvzhfypqncqdsxob ; }
× fix_prediction_before: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = ( leftflag ) != isChecked ; }
√ fix_prediction_after: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { leftflag = ccetjvzhfypqncqdsxob ; }

line_index: 593
bug_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
bug_after_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc . clone () ; } <s> public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
fix_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points ; }
fix_after_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc ; }
× fix_prediction_before: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = new com.jme3.math.Vector3f [ points . length ] ; }
√ fix_prediction_after: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc ; }

line_index: 664
bug_before_refactoring: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index ) ; } <s> @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index ) ; } <s> Add ExpandableTextView  fix a bug of measuring actual height when collasped
bug_after_refactoring: @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( jfhvbklgolqtfycbopli ) ; } <s> @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( jfhvbklgolqtfycbopli ) ; } <s> Add ExpandableTextView  fix a bug of measuring actual height when collasped
fix_before_refactoring: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index , false ) ; }
fix_after_refactoring: @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( jfhvbklgolqtfycbopli , false ) ; }
× fix_prediction_before: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index , true ) ; }
√ fix_prediction_after: @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( jfhvbklgolqtfycbopli , false ) ; }

line_index: 674
bug_before_refactoring: private static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; } <s> private static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; } <s> fixed some issues & added tcs
bug_after_refactoring: private static void assertPrime ( boolean stwerokertllgafszbro ) { org.junit.Assert . assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; } <s> private static void assertPrime ( boolean stwerokertllgafszbro ) { org.junit.Assert . assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; } <s> fixed some issues & added tcs
fix_before_refactoring: private static void assertPrime ( boolean condition ) { assertTrue ( "Should be prime" , condition ) ; }
fix_after_refactoring: private static void assertPrime ( boolean stwerokertllgafszbro ) { assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; }
× fix_prediction_before: private static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; }
√ fix_prediction_after: private static void assertPrime ( boolean stwerokertllgafszbro ) { assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; }

line_index: 683
bug_before_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } <s> org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } <s> Bugfix: Poss. race condition setting up terrain. Affects #78.
bug_after_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; } <s> org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; } <s> Bugfix: Poss. race condition setting up terrain. Affects #78.
fix_before_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { synchronized ( tunnelPortals ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } }
fix_after_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { synchronized ( tunnelPortals ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; } }
× fix_prediction_before: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { synchronized ( this ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } }
√ fix_prediction_after: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { synchronized ( tunnelPortals ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; } }

line_index: 701
bug_before_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
fix_after_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; }
× fix_prediction_before: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( new io.hekate.messaging.internal.DefaultMessagingChannel < T > ( policy ) ) ; }
√ fix_prediction_after: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; }

line_index: 712
bug_before_refactoring: boolean contents ( T item ) ; <s> boolean contents ( T item ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
bug_after_refactoring: boolean contents ( T iistltgpbpraaeotswec ) ; <s> boolean contents ( T iistltgpbpraaeotswec ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
fix_before_refactoring: boolean contains ( T item ) ;
fix_after_refactoring: boolean contains ( T iistltgpbpraaeotswec ) ;
× fix_prediction_before: boolean contents ( T item ) ;
√ fix_prediction_after: boolean contains ( T iistltgpbpraaeotswec ) ;

line_index: 819
bug_before_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; } <s> @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; } <s> Testing and bug fixes.  Removed unnecessary 'flag' methods from IRepositoryManager.
bug_after_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int rsapxohpajevbvspkzeq ) { return getArtifactRepositories ( null , rsapxohpajevbvspkzeq ) ; } <s> @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int rsapxohpajevbvspkzeq ) { return getArtifactRepositories ( null , rsapxohpajevbvspkzeq ) ; } <s> Testing and bug fixes.  Removed unnecessary 'flag' methods from IRepositoryManager.
fix_before_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }
fix_after_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }
× fix_prediction_before: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; }
√ fix_prediction_after: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }

line_index: 841
bug_before_refactoring: public void addUser ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> public void addUser ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> Fix Server bugs
bug_after_refactoring: public void addUser ( customclass.User pxhsncylhcjdbnmirwmm ) { pxhsncylhcjdbnmirwmmList . add ( ( ( server.customclass.HandleUser ) ( pxhsncylhcjdbnmirwmm ) ) ) ; } <s> public void addUser ( customclass.User pxhsncylhcjdbnmirwmm ) { pxhsncylhcjdbnmirwmmList . add ( ( ( server.customclass.HandleUser ) ( pxhsncylhcjdbnmirwmm ) ) ) ; } <s> Fix Server bugs
fix_before_refactoring: public void addUser ( customclass.User user ) { userList . add ( user ) ; }
fix_after_refactoring: public void addUser ( customclass.User pxhsncylhcjdbnmirwmm ) { pxhsncylhcjdbnmirwmmList . add ( pxhsncylhcjdbnmirwmm ) ; }
× fix_prediction_before: public void addUser ( customclass.User user ) { if ( ! ( userList . contains ( user ) ) ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } }
√ fix_prediction_after: public void addUser ( customclass.User pxhsncylhcjdbnmirwmm ) { pxhsncylhcjdbnmirwmmList . add ( pxhsncylhcjdbnmirwmm ) ; }

line_index: 854
bug_before_refactoring: public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> money changes + bugfixes
bug_after_refactoring: public void addBank ( int dzhmnlhypqnlmyrybnyz ) { if ( ( ( ( Cards ) ( hand . get ( dzhmnlhypqnlmyrybnyz ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; } } <s> public void addBank ( int dzhmnlhypqnlmyrybnyz ) { if ( ( ( ( Cards ) ( hand . get ( dzhmnlhypqnlmyrybnyz ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; } } <s> money changes + bugfixes
fix_before_refactoring: public void addBank ( int index ) { bank . add ( hand . remove ( index ) ) ; }
fix_after_refactoring: public void addBank ( int dzhmnlhypqnlmyrybnyz ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; }
× fix_prediction_before: public void addBank ( int index ) { if ( ( ( Cards ) ( hand . get ( index ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } }
√ fix_prediction_after: public void addBank ( int dzhmnlhypqnlmyrybnyz ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; }

line_index: 883
bug_before_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> turn auto drop-create back on; fix schema.sql inserts; fix references to actor_types; general debug
bug_after_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > tpsbupqueerwoxtpddar ) { this . allowedActorTypes = tpsbupqueerwoxtpddar ; } <s> public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > tpsbupqueerwoxtpddar ) { this . allowedActorTypes = tpsbupqueerwoxtpddar ; } <s> turn auto drop-create back on; fix schema.sql inserts; fix references to actor_types; general debug
fix_before_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
fix_after_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
× fix_prediction_before: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { if ( allowedActors != null ) { this . allowedActorTypes = allowedActors ; } }
√ fix_prediction_after: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }

line_index: 900
bug_before_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
bug_after_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { return this . delete ( dkcvygybsnboqbdzeqnu , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { return this . delete ( dkcvygybsnboqbdzeqnu , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
fix_before_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
fix_after_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { this . delete ( dkcvygybsnboqbdzeqnu , null ) ; }
× fix_prediction_before: public void delete ( final java.lang.String id ) { this . delete ( options , id ) ; }
√ fix_prediction_after: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { this . delete ( dkcvygybsnboqbdzeqnu , null ) ; }

line_index: 904
bug_before_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
bug_after_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession ginngbvakarzvhhspeoc ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession ginngbvakarzvhhspeoc ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
fix_before_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
fix_after_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
× fix_prediction_before: public ninja.Result listUsers () { return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , identityManagerService . getAllUsers () ) ; }
√ fix_prediction_after: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }

line_index: 929
bug_before_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> some for upwork  bugfix but i was not hired
bug_after_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zvtxflairmrtgnbzeiqw ) { this . mZoom = zvtxflairmrtgnbzeiqw ; } <s> @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zvtxflairmrtgnbzeiqw ) { this . mZoom = zvtxflairmrtgnbzeiqw ; } <s> some for upwork  bugfix but i was not hired
fix_before_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { synchronized ( this ) { this . mZoom = zoom ; } }
fix_after_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zvtxflairmrtgnbzeiqw ) { synchronized ( this ) { this . mZoom = zvtxflairmrtgnbzeiqw ; } }
× fix_prediction_before: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { synchronized ( this ) { mZoom = zoom ; } }
√ fix_prediction_after: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zvtxflairmrtgnbzeiqw ) { synchronized ( this ) { this . mZoom = zvtxflairmrtgnbzeiqw ; } }

line_index: 1019
bug_before_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics ) ; } <s> public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics ) ; } <s> #4 - Fixed tests and bug shown up by tests where watched topics were not being stored correctly
bug_after_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics ) ; } <s> public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics ) ; } <s> #4 - Fixed tests and bug shown up by tests where watched topics were not being stored correctly
fix_before_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics . values () ) ; }
fix_after_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics . values () ) ; }
× fix_prediction_before: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { if ( view != null ) { view . populateTopicList ( watchedTopics ) ; } }
√ fix_prediction_after: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics . values () ) ; }

line_index: 1022
bug_before_refactoring: private int getPosition ( int position ) { if ( position > 4 ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; } else { return position ; } } <s> private int getPosition ( int position ) { if ( position > 4 ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; } else { return position ; } } <s> 1.1.1  release  changes Bug Fixes
bug_after_refactoring: private int getPosition ( int suarvqjjbcbznjplrtkc ) { if ( suarvqjjbcbznjplrtkc > 4 ) { return suarvqjjbcbznjplrtkc - ( ( int ) ( java.lang.Math . ceil ( ( suarvqjjbcbznjplrtkc / 4 ) ) ) ) ; } else { return suarvqjjbcbznjplrtkc ; } } <s> private int getPosition ( int suarvqjjbcbznjplrtkc ) { if ( suarvqjjbcbznjplrtkc > 4 ) { return suarvqjjbcbznjplrtkc - ( ( int ) ( java.lang.Math . ceil ( ( suarvqjjbcbznjplrtkc / 4 ) ) ) ) ; } else { return suarvqjjbcbznjplrtkc ; } } <s> 1.1.1  release  changes Bug Fixes
fix_before_refactoring: private int getPosition ( int position ) { return position ; }
fix_after_refactoring: private int getPosition ( int suarvqjjbcbznjplrtkc ) { return suarvqjjbcbznjplrtkc ; }
× fix_prediction_before: private int getPosition ( int position ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; }
√ fix_prediction_after: private int getPosition ( int suarvqjjbcbznjplrtkc ) { return suarvqjjbcbznjplrtkc ; }

line_index: 1028
bug_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
bug_after_refactoring: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
fix_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
fix_after_refactoring: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { lock . openAll () ; }
× fix_prediction_before: @ java.lang.Override public void onCompleted ( boolean success , java.lang.Throwable throwable ) { lock . openAll () ; }
√ fix_prediction_after: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { lock . openAll () ; }

line_index: 1071
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S gfujyqsyofuwrgkoythq ) { gfujyqsyofuwrgkoythq = save ( gfujyqsyofuwrgkoythq ) ; repository . flush () ; return gfujyqsyofuwrgkoythq ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S gfujyqsyofuwrgkoythq ) { gfujyqsyofuwrgkoythq = save ( gfujyqsyofuwrgkoythq ) ; repository . flush () ; return gfujyqsyofuwrgkoythq ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E gfujyqsyofuwrgkoythq ) { gfujyqsyofuwrgkoythq = save ( gfujyqsyofuwrgkoythq ) ; repository . flush () ; return gfujyqsyofuwrgkoythq ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { return entity ; }
√ fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E gfujyqsyofuwrgkoythq ) { gfujyqsyofuwrgkoythq = save ( gfujyqsyofuwrgkoythq ) ; repository . flush () ; return gfujyqsyofuwrgkoythq ; }

line_index: 1082
bug_before_refactoring: void toArrayElement ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; } <s> void toArrayElement ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; } <s> Fixed problem with a[0]=x  a[1]=y. But code is crap.
bug_after_refactoring: void toArrayElement ( int pqilzawakneatbcfoqui , java.lang.String ptnfkxwccnyzhyfxgwrg , int bvqyysdcuxafedgqyqmq ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , bvqyysdcuxafedgqyqmq ) ; } <s> void toArrayElement ( int pqilzawakneatbcfoqui , java.lang.String ptnfkxwccnyzhyfxgwrg , int bvqyysdcuxafedgqyqmq ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , bvqyysdcuxafedgqyqmq ) ; } <s> Fixed problem with a[0]=x  a[1]=y. But code is crap.
fix_before_refactoring: void toArrayElement ( java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; }
fix_after_refactoring: void toArrayElement ( java.lang.String ptnfkxwccnyzhyfxgwrg , int bvqyysdcuxafedgqyqmq ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , bvqyysdcuxafedgqyqmq ) ; }
× fix_prediction_before: void toArrayElement ( int level , java.lang.String arrayName ) throws java.io.IOException { addEntity ( arrayName , level ) ; }
√ fix_prediction_after: void toArrayElement ( java.lang.String ptnfkxwccnyzhyfxgwrg , int bvqyysdcuxafedgqyqmq ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , bvqyysdcuxafedgqyqmq ) ; }

line_index: 1099
bug_before_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } <s> @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } <s> Changed applicability of module using references  Application of a module to a dataset where the reference is the same data is not really useful  but possible. Solves problems in case of applying a Toolchain
bug_after_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfyembktcqzlbifl ) { return ( ( yqdbkfyembktcqzlbifl . getNext () ) != null ) || ( ( yqdbkfyembktcqzlbifl . getPrevious () ) != null ) ; } <s> @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfyembktcqzlbifl ) { return ( ( yqdbkfyembktcqzlbifl . getNext () ) != null ) || ( ( yqdbkfyembktcqzlbifl . getPrevious () ) != null ) ; } <s> Changed applicability of module using references  Application of a module to a dataset where the reference is the same data is not really useful  but possible. Solves problems in case of applying a Toolchain
fix_before_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfyembktcqzlbifl ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return ( getPrevious () ) != null ; }
√ fix_prediction_after: @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfyembktcqzlbifl ) { return true ; }

line_index: 1139
bug_before_refactoring: public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> handful of bug fixes
bug_after_refactoring: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { if ( ! ( kyetvxcacckehxgkcdqy . startsWith ( "\u00a7" ) ) ) this . kyetvxcacckehxgkcdqy = ( org.bukkit.ChatColor.BLACK ) + kyetvxcacckehxgkcdqy ; else this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; } <s> public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { if ( ! ( kyetvxcacckehxgkcdqy . startsWith ( "\u00a7" ) ) ) this . kyetvxcacckehxgkcdqy = ( org.bukkit.ChatColor.BLACK ) + kyetvxcacckehxgkcdqy ; else this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; } <s> handful of bug fixes
fix_before_refactoring: public void setText ( java.lang.String text ) { this . text = text ; }
fix_after_refactoring: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; }
× fix_prediction_before: public void setText ( java.lang.String text ) { this . text = ( org.bukkit.ChatColor.BLACK ) + text ; }
√ fix_prediction_after: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; }

line_index: 1165
bug_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> Bugfix
bug_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle lmxhhzrxyxgnhztyvyat ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle lmxhhzrxyxgnhztyvyat ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> Bugfix
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( mPairsSpinner ) != null ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }
fix_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle lmxhhzrxyxgnhztyvyat ) { if ( ( mPairsSpinner ) != null ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) {}
√ fix_prediction_after: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle lmxhhzrxyxgnhztyvyat ) { if ( ( mPairsSpinner ) != null ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }

line_index: 1241
bug_before_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean increment ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; } <s> protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean increment ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; } <s> More improvements to this implementation  Bug fixes  performance improvements  and missing features/details implemented
bug_after_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean gvhhopycgyzwtgddkkwx ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( gvhhopycgyzwtgddkkwx ) { currentPoolSize . gvhhopycgyzwtgddkkwxAndGet () ; } w . start () ; return w ; } <s> protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean gvhhopycgyzwtgddkkwx ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( gvhhopycgyzwtgddkkwx ) { currentPoolSize . gvhhopycgyzwtgddkkwxAndGet () ; } w . start () ; return w ; } <s> More improvements to this implementation  Bug fixes  performance improvements  and missing features/details implemented
fix_before_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; w . start () ; return w ; }
fix_after_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; w . start () ; return w ; }
× fix_prediction_before: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; }
√ fix_prediction_after: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; w . start () ; return w ; }

