line_index: 4
bug_before_refactoring: private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
bug_after_refactoring: private static boolean uxsuqrdgqkowfbjeocrq ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean uxsuqrdgqkowfbjeocrq ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
fix_before_refactoring: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
fix_after_refactoring: private static boolean uxsuqrdgqkowfbjeocrq ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
√ fix_prediction_before: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
√ fix_prediction_after: private static boolean uxsuqrdgqkowfbjeocrq ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }

line_index: 12
bug_before_refactoring: private int getRecommendationCount () { return this . recs ; } <s> private int getRecommendationCount () { return this . recs ; } <s> Fixes for no errors in master or PR
bug_after_refactoring: private int gfqgplegtmehxrnjggge () { return this . recs ; } <s> private int gfqgplegtmehxrnjggge () { return this . recs ; } <s> Fixes for no errors in master or PR
fix_before_refactoring: public int getRecommendationCount () { return this . recs ; }
fix_after_refactoring: public int gfqgplegtmehxrnjggge () { return this . recs ; }
√ fix_prediction_before: public int getRecommendationCount () { return this . recs ; }
√ fix_prediction_after: public int gfqgplegtmehxrnjggge () { return this . recs ; }

line_index: 34
bug_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
bug_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
fix_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
fix_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
√ fix_prediction_before: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
√ fix_prediction_after: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }

line_index: 70
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
bug_after_refactoring: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
fix_after_refactoring: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
√ fix_prediction_after: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }

line_index: 77
bug_before_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> fixed javac compilation problem
bug_after_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends MT > clazz ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends MT > clazz ) ; <s> fixed javac compilation problem
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
√ fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
√ fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;

line_index: 81
bug_before_refactoring: protected double getBlue () { return this . blue . get () ; } <s> protected double getBlue () { return this . blue . get () ; } <s> Fixed potential bug
bug_after_refactoring: protected double nzxabwirvggwmhnqehyl () { return this . blue . get () ; } <s> protected double nzxabwirvggwmhnqehyl () { return this . blue . get () ; } <s> Fixed potential bug
fix_before_refactoring: public double getBlue () { return this . blue . get () ; }
fix_after_refactoring: public double nzxabwirvggwmhnqehyl () { return this . blue . get () ; }
√ fix_prediction_before: public double getBlue () { return this . blue . get () ; }
√ fix_prediction_after: public double nzxabwirvggwmhnqehyl () { return this . blue . get () ; }

line_index: 107
bug_before_refactoring: public void setTasks ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> public void setTasks ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> see #11591  see #11355 - Splash screen: attempt to fix synchronisation/deadlock issue  git-svn-id: http://josm.openstreetmap.de/svn/trunk@8524 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: public void ozphtpgdyopvmjypleak ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> public void ozphtpgdyopvmjypleak ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> see #11591  see #11355 - Splash screen: attempt to fix synchronisation/deadlock issue  git-svn-id: http://josm.openstreetmap.de/svn/trunk@8524 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: public void setTasks ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
fix_after_refactoring: public void ozphtpgdyopvmjypleak ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
√ fix_prediction_before: public void setTasks ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
√ fix_prediction_after: public void ozphtpgdyopvmjypleak ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }

line_index: 136
bug_before_refactoring: public java.lang.String getAirCode () { android.util.Log . i ( model.SingleFlightResult.TAG , "getAirCode: " ) ; return airCode ; } <s> public java.lang.String getAirCode () { android.util.Log . i ( model.SingleFlightResult.TAG , "getAirCode: " ) ; return airCode ; } <s> added all flight logo  loads airline logo dynamically  solved negative total flight duration time issue  added recycler view animation
bug_after_refactoring: public java.lang.String xtjpfkkvkrwebbfqxcgv () { android.util.Log . i ( model.SingleFlightResult.TAG , "xtjpfkkvkrwebbfqxcgv: " ) ; return airCode ; } <s> public java.lang.String xtjpfkkvkrwebbfqxcgv () { android.util.Log . i ( model.SingleFlightResult.TAG , "xtjpfkkvkrwebbfqxcgv: " ) ; return airCode ; } <s> added all flight logo  loads airline logo dynamically  solved negative total flight duration time issue  added recycler view animation
fix_before_refactoring: public java.lang.String getAirCode () { return airCode ; }
fix_after_refactoring: public java.lang.String xtjpfkkvkrwebbfqxcgv () { return airCode ; }
√ fix_prediction_before: public java.lang.String getAirCode () { return airCode ; }
√ fix_prediction_after: public java.lang.String xtjpfkkvkrwebbfqxcgv () { return airCode ; }

line_index: 142
bug_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
bug_after_refactoring: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
fix_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
fix_after_refactoring: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
√ fix_prediction_before: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
√ fix_prediction_after: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }

line_index: 158
bug_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
bug_after_refactoring: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
fix_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
fix_after_refactoring: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
√ fix_prediction_before: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
√ fix_prediction_after: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }

line_index: 162
bug_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
bug_after_refactoring: @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
fix_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { return false ; }
√ fix_prediction_before: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
√ fix_prediction_after: @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { return false ; }

line_index: 163
bug_before_refactoring: private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
fix_after_refactoring: private static long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
√ fix_prediction_before: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
√ fix_prediction_after: private static long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }

line_index: 184
bug_before_refactoring: @ java.lang.Override public java.lang.Integer getAdminPort () { java.lang.Integer adminPort = settings . getAdminPort () ; if ( adminPort == null ) { return 8000 ; } return settings . getAdminPort () ; } <s> @ java.lang.Override public java.lang.Integer getAdminPort () { java.lang.Integer adminPort = settings . getAdminPort () ; if ( adminPort == null ) { return 8000 ; } return settings . getAdminPort () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
bug_after_refactoring: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { java.lang.Integer adminPort = settings . ycukcaaosuqpvexrtdef () ; if ( adminPort == null ) { return 8000 ; } return settings . ycukcaaosuqpvexrtdef () ; } <s> @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { java.lang.Integer adminPort = settings . ycukcaaosuqpvexrtdef () ; if ( adminPort == null ) { return 8000 ; } return settings . ycukcaaosuqpvexrtdef () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
fix_before_refactoring: @ java.lang.Override public java.lang.Integer getAdminPort () { return settings . getAdminPort () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { return settings . ycukcaaosuqpvexrtdef () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.Integer getAdminPort () { return settings . getAdminPort () ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { return settings . ycukcaaosuqpvexrtdef () ; }

line_index: 187
bug_before_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
bug_after_refactoring: private void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
fix_before_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
fix_after_refactoring: public void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
√ fix_prediction_before: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
√ fix_prediction_after: public void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }

line_index: 197
bug_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
bug_after_refactoring: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
fix_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
fix_after_refactoring: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
√ fix_prediction_before: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
√ fix_prediction_after: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }

line_index: 220
bug_before_refactoring: protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
fix_after_refactoring: private void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; }
√ fix_prediction_before: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
√ fix_prediction_after: private void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; }

line_index: 231
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
bug_after_refactoring: @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mplayer . play ( originalFile ) ; }
fix_after_refactoring: @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { mplayer . play ( originalFile ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mplayer . play ( originalFile ) ; }
√ fix_prediction_after: @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { mplayer . play ( originalFile ) ; }

line_index: 256
bug_before_refactoring: public java.util.List < com.wotf.game.classes.Team > getTeams () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> public java.util.List < com.wotf.game.classes.Team > getTeams () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> Bug fixes #1
bug_after_refactoring: public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> Bug fixes #1
fix_before_refactoring: public java.util.List < com.wotf.game.classes.Team > getTeams () { return teams ; }
fix_after_refactoring: public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { return teams ; }
√ fix_prediction_before: public java.util.List < com.wotf.game.classes.Team > getTeams () { return teams ; }
√ fix_prediction_after: public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { return teams ; }

line_index: 296
bug_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> Fixed merge problems
bug_after_refactoring: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) {} <s> Fixed merge problems
fix_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
fix_after_refactoring: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) ;
√ fix_prediction_before: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
√ fix_prediction_after: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) ;

line_index: 305
bug_before_refactoring: protected double getValue () { return mValue ; } <s> protected double getValue () { return mValue ; } <s> Fixed problems with Satoshi: not updating properly  JSON errors  and update time
bug_after_refactoring: protected double yynkwebevvxvivugzjra () { return mValue ; } <s> protected double yynkwebevvxvivugzjra () { return mValue ; } <s> Fixed problems with Satoshi: not updating properly  JSON errors  and update time
fix_before_refactoring: public double getValue () { return mValue ; }
fix_after_refactoring: public double yynkwebevvxvivugzjra () { return mValue ; }
√ fix_prediction_before: public double getValue () { return mValue ; }
√ fix_prediction_after: public double yynkwebevvxvivugzjra () { return mValue ; }

line_index: 316
bug_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
bug_after_refactoring: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . formatDouble ( value ) ) ; } <s> public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
fix_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
fix_after_refactoring: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . format ( value ) ) ; }
√ fix_prediction_before: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
√ fix_prediction_after: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . format ( value ) ) ; }

line_index: 319
bug_before_refactoring: @ java.lang.Override public boolean isUpdateInProgress () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> @ java.lang.Override public boolean isUpdateInProgress () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> Clean up txState when scan is closed      Fixes some issues with old row beind read but not implementing some methods     For foreign key check  read from the table rather than snapshot
bug_after_refactoring: @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> Clean up txState when scan is closed      Fixes some issues with old row beind read but not implementing some methods     For foreign key check  read from the table rather than snapshot
fix_before_refactoring: @ java.lang.Override public boolean isUpdateInProgress () { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { return false ; }
√ fix_prediction_before: @ java.lang.Override public boolean isUpdateInProgress () { return false ; }
√ fix_prediction_after: @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { return false ; }

line_index: 358
bug_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
fix_after_refactoring: @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
√ fix_prediction_before: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
√ fix_prediction_after: @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}

line_index: 369
bug_before_refactoring: @ java.lang.Override public void run () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> @ java.lang.Override public void run () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> bugfix  git-svn-id: svn+ssh://solsvn.oma.be/home/sidc/ssr/SWHV_repos/trunk/client/jhv-3d-wcs@7390 b4e469a2-07ce-4b26-9273-4d7d95a670c7
bug_after_refactoring: @ java.lang.Override public void svfczewzlxxzuioktibs () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> @ java.lang.Override public void svfczewzlxxzuioktibs () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> bugfix  git-svn-id: svn+ssh://solsvn.oma.be/home/sidc/ssr/SWHV_repos/trunk/client/jhv-3d-wcs@7390 b4e469a2-07ce-4b26-9273-4d7d95a670c7
fix_before_refactoring: @ java.lang.Override public void run () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
fix_after_refactoring: @ java.lang.Override public void svfczewzlxxzuioktibs () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
√ fix_prediction_after: @ java.lang.Override public void svfczewzlxxzuioktibs () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }

line_index: 372
bug_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
bug_after_refactoring: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
fix_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
fix_after_refactoring: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; }
√ fix_prediction_before: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
√ fix_prediction_after: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; }

line_index: 376
bug_before_refactoring: @ java.lang.Override public final boolean repOK () { return java.lang.Double . isFinite ( fitness ) ; } <s> @ java.lang.Override public final boolean repOK () { return java.lang.Double . isFinite ( fitness ) ; } <s> Fix issues with the previous commit that broke some tests.
bug_after_refactoring: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return java.lang.Double . isFinite ( fitness ) ; } <s> @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return java.lang.Double . isFinite ( fitness ) ; } <s> Fix issues with the previous commit that broke some tests.
fix_before_refactoring: @ java.lang.Override public final boolean repOK () { return true ; }
fix_after_refactoring: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return true ; }
√ fix_prediction_before: @ java.lang.Override public final boolean repOK () { return true ; }
√ fix_prediction_after: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return true ; }

line_index: 415
bug_before_refactoring: protected javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; } <s> protected javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; } <s> Fixed potential bug
bug_after_refactoring: protected javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; } <s> protected javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; } <s> Fixed potential bug
fix_before_refactoring: public javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; }
fix_after_refactoring: public javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; }
√ fix_prediction_before: public javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; }
√ fix_prediction_after: public javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; }

line_index: 434
bug_before_refactoring: public ffk27.mapviewer2.GeoDataSource getDataSource () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> public ffk27.mapviewer2.GeoDataSource getDataSource () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> bugfixes
bug_after_refactoring: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> bugfixes
fix_before_refactoring: public ffk27.mapviewer2.GeoDataSource getDataSource () { return dataSource ; }
fix_after_refactoring: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { return dataSource ; }
√ fix_prediction_before: public ffk27.mapviewer2.GeoDataSource getDataSource () { return dataSource ; }
√ fix_prediction_after: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { return dataSource ; }

line_index: 436
bug_before_refactoring: @ java.lang.Override public void setupProperties () { super . setupProperties () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> @ java.lang.Override public void setupProperties () { super . setupProperties () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> feat(TDI-39295): fix minor issues  added display names for properties
bug_after_refactoring: @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> feat(TDI-39295): fix minor issues  added display names for properties
fix_before_refactoring: @ java.lang.Override public void setupProperties () { super . setupProperties () ; }
fix_after_refactoring: @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; }
√ fix_prediction_before: @ java.lang.Override public void setupProperties () { super . setupProperties () ; }
√ fix_prediction_after: @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; }

line_index: 465
bug_before_refactoring: @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> minorBugFix
bug_after_refactoring: @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> minorBugFix
fix_before_refactoring: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
fix_after_refactoring: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
√ fix_prediction_before: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
√ fix_prediction_after: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }

line_index: 476
bug_before_refactoring: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> kloudless: adding custom headers support  and non-https support pom: fixing compilation errors tests: updating tests
bug_after_refactoring: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> kloudless: adding custom headers support  and non-https support pom: fixing compilation errors tests: updating tests
fix_before_refactoring: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException {}
fix_after_refactoring: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException {}
√ fix_prediction_before: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException {}
√ fix_prediction_after: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException {}

line_index: 488
bug_before_refactoring: protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
bug_after_refactoring: protected void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
fix_before_refactoring: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
fix_after_refactoring: public void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_before: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_after: public void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }

line_index: 501
bug_before_refactoring: public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> fixing return null bug
bug_after_refactoring: public java.util.Set < TermCounter > ahvyqoompcnudfbdddpt ( java.lang.String term ) {} <s> public java.util.Set < TermCounter > ahvyqoompcnudfbdddpt ( java.lang.String term ) {} <s> fixing return null bug
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 502
bug_before_refactoring: protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
fix_after_refactoring: public net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
√ fix_prediction_before: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
√ fix_prediction_after: public net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }

line_index: 524
bug_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
fix_after_refactoring: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
√ fix_prediction_before: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
√ fix_prediction_after: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }

line_index: 536
bug_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
bug_after_refactoring: @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
fix_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
fix_after_refactoring: @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
√ fix_prediction_before: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
√ fix_prediction_after: @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }

line_index: 559
bug_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
bug_after_refactoring: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
fix_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
fix_after_refactoring: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) {}
√ fix_prediction_before: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
√ fix_prediction_after: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) {}

line_index: 562
bug_before_refactoring: @ java.lang.Override public int getItemCount () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> @ java.lang.Override public int getItemCount () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> Fixed recyclerview issue
bug_after_refactoring: @ java.lang.Override public int cawbzdpufstbqsesozfo () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> @ java.lang.Override public int cawbzdpufstbqsesozfo () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> Fixed recyclerview issue
fix_before_refactoring: @ java.lang.Override public int getItemCount () { return mMoviePosters . size () ; }
fix_after_refactoring: @ java.lang.Override public int cawbzdpufstbqsesozfo () { return mMoviePosters . size () ; }
√ fix_prediction_before: @ java.lang.Override public int getItemCount () { return mMoviePosters . size () ; }
√ fix_prediction_after: @ java.lang.Override public int cawbzdpufstbqsesozfo () { return mMoviePosters . size () ; }

line_index: 568
bug_before_refactoring: public java.lang.String reverseString1 ( java.lang.String str ) {} <s> public java.lang.String reverseString1 ( java.lang.String str ) {} <s> Adding return statements to fix the compile errors - please write code
bug_after_refactoring: public java.lang.String fgzntznuyeboeoqebmrv ( java.lang.String str ) {} <s> public java.lang.String fgzntznuyeboeoqebmrv ( java.lang.String str ) {} <s> Adding return statements to fix the compile errors - please write code
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 574
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT , int idTour ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT , int idTour ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
√ fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT ) ; }

line_index: 614
bug_before_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return type ; } <s> public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return type ; } <s> Sonar Issues fix  Change-Id: I1af7e2a6926b6d8717e862382f5540beab2df3a0 Signed-off-by: Iveta Halanova <iveta.halanova@pantheon.sk>
bug_after_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return type ; } <s> public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return type ; } <s> Sonar Issues fix  Change-Id: I1af7e2a6926b6d8717e862382f5540beab2df3a0 Signed-off-by: Iveta Halanova <iveta.halanova@pantheon.sk>
fix_before_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return this . type ; }
fix_after_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return this . type ; }
√ fix_prediction_before: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return this . type ; }
√ fix_prediction_after: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return this . type ; }

line_index: 638
bug_before_refactoring: public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
fix_after_refactoring: private void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_before: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_after: private void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }

line_index: 649
bug_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
bug_after_refactoring: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
fix_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
fix_after_refactoring: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
√ fix_prediction_before: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
√ fix_prediction_after: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }

line_index: 657
bug_before_refactoring: @ java.lang.Override protected void buildShape () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> @ java.lang.Override protected void buildShape () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> Fixed a bug in rigidbody after refactoring collider code
bug_after_refactoring: @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> Fixed a bug in rigidbody after refactoring collider code
fix_before_refactoring: @ java.lang.Override protected void buildShape () {}
fix_after_refactoring: @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () {}
√ fix_prediction_before: @ java.lang.Override protected void buildShape () {}
√ fix_prediction_after: @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () {}

line_index: 666
bug_before_refactoring: private double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> private double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> Fixed large bug in monitor was using an air algorithm for everything
bug_after_refactoring: private double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> private double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> Fixed large bug in monitor was using an air algorithm for everything
fix_before_refactoring: public double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; }
fix_after_refactoring: public double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; }
√ fix_prediction_before: public double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; }
√ fix_prediction_after: public double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; }

line_index: 669
bug_before_refactoring: private T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> private T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> fixed some of deque. lastremove still buggy
bug_after_refactoring: private T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> private T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> fixed some of deque. lastremove still buggy
fix_before_refactoring: public T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }
fix_after_refactoring: public T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }
√ fix_prediction_before: public T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }
√ fix_prediction_after: public T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }

line_index: 703
bug_before_refactoring: public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> Fix Merging Errors
bug_after_refactoring: public static edugame.Level kqhtcvuocfqsyfjgmrjf ( java.util.List < edugame.Level > levels ) {} <s> public static edugame.Level kqhtcvuocfqsyfjgmrjf ( java.util.List < edugame.Level > levels ) {} <s> Fix Merging Errors
fix_before_refactoring: { return new edugame.Level () ; }
fix_after_refactoring: { return new edugame.Level () ; }
√ fix_prediction_before: { return new edugame.Level () ; }
√ fix_prediction_after: { return new edugame.Level () ; }

line_index: 717
bug_before_refactoring: @ org.junit.Before public void setUp ( ) throws java.lang.Exception { options . put ( Constants.OPT_COLLECTION_NAME , "govdocs" ) ; options . put ( Constants.CNF_DROOLS_PATH , "/Users/artur/rnd/git/c3po/c3po-core/src/main/resources/rules" ) ; com.petpet.c3po.utils.Configurator . getDefaultConfigurator () . configure () ; ctrl = new com.petpet.c3po.controller.Controller ( com.petpet.c3po.utils.Configurator . getDefaultConfigurator () ) ; } <s> @ org.junit.Before public void setUp ( ) throws java.lang.Exception { options . put ( Constants.OPT_COLLECTION_NAME , "govdocs" ) ; options . put ( Constants.CNF_DROOLS_PATH , "/Users/artur/rnd/git/c3po/c3po-core/src/main/resources/rules" ) ; com.petpet.c3po.utils.Configurator . getDefaultConfigurator () . configure () ; ctrl = new com.petpet.c3po.controller.Controller ( com.petpet.c3po.utils.Configurator . getDefaultConfigurator () ) ; } <s> fixed a bug when identifying an unknown content type
bug_after_refactoring: @ org.junit.Before public void ezorndyldaalcfqzhnas ( ) throws java.lang.Exception { options . put ( Constants.OPT_COLLECTION_NAME , "govdocs" ) ; options . put ( Constants.CNF_DROOLS_PATH , "/Users/artur/rnd/git/c3po/c3po-core/src/main/resources/rules" ) ; com.petpet.c3po.utils.Configurator . getDefaultConfigurator () . configure () ; ctrl = new com.petpet.c3po.controller.Controller ( com.petpet.c3po.utils.Configurator . getDefaultConfigurator () ) ; } <s> @ org.junit.Before public void ezorndyldaalcfqzhnas ( ) throws java.lang.Exception { options . put ( Constants.OPT_COLLECTION_NAME , "govdocs" ) ; options . put ( Constants.CNF_DROOLS_PATH , "/Users/artur/rnd/git/c3po/c3po-core/src/main/resources/rules" ) ; com.petpet.c3po.utils.Configurator . getDefaultConfigurator () . configure () ; ctrl = new com.petpet.c3po.controller.Controller ( com.petpet.c3po.utils.Configurator . getDefaultConfigurator () ) ; } <s> fixed a bug when identifying an unknown content type
fix_before_refactoring: @ org.junit.Before public void setUp ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.Before public void ezorndyldaalcfqzhnas ( ) throws java.lang.Exception {}
√ fix_prediction_before: @ org.junit.Before public void setUp ( ) throws java.lang.Exception {}
√ fix_prediction_after: @ org.junit.Before public void ezorndyldaalcfqzhnas ( ) throws java.lang.Exception {}

line_index: 718
bug_before_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { synchronized ( eventList ) { return eventList ; } } <s> public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { synchronized ( eventList ) { return eventList ; } } <s> Revert "Revert "Bug fixes""  This reverts commit 9d13d58e901a7522d91246984c7577a5a8532eba.
bug_after_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { synchronized ( eventList ) { return eventList ; } } <s> public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { synchronized ( eventList ) { return eventList ; } } <s> Revert "Revert "Bug fixes""  This reverts commit 9d13d58e901a7522d91246984c7577a5a8532eba.
fix_before_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { return eventList ; }
fix_after_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { return eventList ; }
√ fix_prediction_before: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { return eventList ; }
√ fix_prediction_after: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { return eventList ; }

line_index: 744
bug_before_refactoring: public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> Solved a problem with the cache nodes
bug_after_refactoring: public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> Solved a problem with the cache nodes
fix_before_refactoring: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
fix_after_refactoring: public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { clusterList . add ( cluster ) ; }
√ fix_prediction_before: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
√ fix_prediction_after: public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { clusterList . add ( cluster ) ; }

line_index: 754
bug_before_refactoring: private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> Fixing bugs
bug_after_refactoring: private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ; <s> private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ; <s> Fixing bugs
fix_before_refactoring: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
fix_after_refactoring: private static int mvetzezobhpextblpwyq ( long roi , long annulus ) { return 0 ; }
√ fix_prediction_before: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
√ fix_prediction_after: private static int mvetzezobhpextblpwyq ( long roi , long annulus ) { return 0 ; }

line_index: 755
bug_before_refactoring: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> Fixed errors in OpenstackKeyPairServiceTest and an error in the class
bug_after_refactoring: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> Fixed errors in OpenstackKeyPairServiceTest and an error in the class
fix_before_refactoring: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
fix_after_refactoring: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
√ fix_prediction_before: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
√ fix_prediction_after: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }

line_index: 758
bug_before_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> PropertyMutationMaster not saving issue fix [PHOENIX-350]
bug_after_refactoring: @ java.lang.Override public boolean dalpnabyzmaajviqoyez ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> @ java.lang.Override public boolean dalpnabyzmaajviqoyez ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> PropertyMutationMaster not saving issue fix [PHOENIX-350]
fix_before_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( relations . containsKey ( paramName ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean dalpnabyzmaajviqoyez ( final java.lang.String paramName ) { return ! ( relations . containsKey ( paramName ) ) ; }
√ fix_prediction_before: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( relations . containsKey ( paramName ) ) ; }
√ fix_prediction_after: @ java.lang.Override public boolean dalpnabyzmaajviqoyez ( final java.lang.String paramName ) { return ! ( relations . containsKey ( paramName ) ) ; }

line_index: 771
bug_before_refactoring: public rheat.GUI.Helix getSelectedHelix () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . getSelectedHelix () ; } return result ; } <s> public rheat.GUI.Helix getSelectedHelix () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . getSelectedHelix () ; } return result ; } <s> Fixed issue with zoom reset after constraints.  The zoom level now stays the same after constraints are applied.  The internal object for managing the RNA image is no longer replaced; it just updates state each time. Also  updated Issues.txt and ToDo.txt to reflect this fix and some other recent changes.
bug_after_refactoring: public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . ayderbuqkqjrygkqaxqu () ; } return result ; } <s> public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . ayderbuqkqjrygkqaxqu () ; } return result ; } <s> Fixed issue with zoom reset after constraints.  The zoom level now stays the same after constraints are applied.  The internal object for managing the RNA image is no longer replaced; it just updates state each time. Also  updated Issues.txt and ToDo.txt to reflect this fix and some other recent changes.
fix_before_refactoring: public rheat.GUI.Helix getSelectedHelix () { return helixImgGen . getSelectedHelix () ; }
fix_after_refactoring: public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { return helixImgGen . ayderbuqkqjrygkqaxqu () ; }
√ fix_prediction_before: public rheat.GUI.Helix getSelectedHelix () { return helixImgGen . getSelectedHelix () ; }
√ fix_prediction_after: public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { return helixImgGen . ayderbuqkqjrygkqaxqu () ; }

line_index: 787
bug_before_refactoring: public void Pause () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> public void Pause () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> Fixed crash bugs
bug_after_refactoring: public void qzzklfxetrjallyishyg () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> public void qzzklfxetrjallyishyg () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> Fixed crash bugs
fix_before_refactoring: public void Pause () { isRecording = false ; }
fix_after_refactoring: public void qzzklfxetrjallyishyg () { isRecording = false ; }
√ fix_prediction_before: public void Pause () { isRecording = false ; }
√ fix_prediction_after: public void qzzklfxetrjallyishyg () { isRecording = false ; }

line_index: 796
bug_before_refactoring: public java.util.Set < java.lang.String > getFavorites () { return prefs . getStringSet ( "list" , null ) ; } <s> public java.util.Set < java.lang.String > getFavorites () { return prefs . getStringSet ( "list" , null ) ; } <s> fixed set bug for favorites
bug_after_refactoring: public java.util.Set < java.lang.String > qpxheyozqfsxahitteim () { return prefs . getStringSet ( "list" , null ) ; } <s> public java.util.Set < java.lang.String > qpxheyozqfsxahitteim () { return prefs . getStringSet ( "list" , null ) ; } <s> fixed set bug for favorites
fix_before_refactoring: public java.util.Set < java.lang.String > getFavorites () { return prefs . getStringSet ( "list" , new java.util.HashSet < java.lang.String > () ) ; }
fix_after_refactoring: public java.util.Set < java.lang.String > qpxheyozqfsxahitteim () { return prefs . getStringSet ( "list" , new java.util.HashSet < java.lang.String > () ) ; }
√ fix_prediction_before: public java.util.Set < java.lang.String > getFavorites () { return prefs . getStringSet ( "list" , new java.util.HashSet < java.lang.String > () ) ; }
√ fix_prediction_after: public java.util.Set < java.lang.String > qpxheyozqfsxahitteim () { return prefs . getStringSet ( "list" , new java.util.HashSet < java.lang.String > () ) ; }

line_index: 799
bug_before_refactoring: public void run () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> public void run () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> fixed lidar code error
bug_after_refactoring: public void dmnvfyikekaqehfixxdu () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> public void dmnvfyikekaqehfixxdu () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> fixed lidar code error
fix_before_refactoring: public void run () { update () ; }
fix_after_refactoring: public void dmnvfyikekaqehfixxdu () { update () ; }
√ fix_prediction_before: public void run () { update () ; }
√ fix_prediction_after: public void dmnvfyikekaqehfixxdu () { update () ; }

line_index: 802
bug_before_refactoring: @ java.lang.Override public void run () { listenForDevices ( aListener , true ) ; } <s> @ java.lang.Override public void run () { listenForDevices ( aListener , true ) ; } <s> #93: Fixxed issue by removing old threads when necessary.
bug_after_refactoring: @ java.lang.Override public void qwhluhvqsvsngmdwpqxy () { listenForDevices ( aListener , true ) ; } <s> @ java.lang.Override public void qwhluhvqsvsngmdwpqxy () { listenForDevices ( aListener , true ) ; } <s> #93: Fixxed issue by removing old threads when necessary.
fix_before_refactoring: @ java.lang.Override public void run () { listenForDevices ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void qwhluhvqsvsngmdwpqxy () { listenForDevices ( true ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { listenForDevices ( true ) ; }
√ fix_prediction_after: @ java.lang.Override public void qwhluhvqsvsngmdwpqxy () { listenForDevices ( true ) ; }

line_index: 803
bug_before_refactoring: public void choose () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> public void choose () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> Fixed issue with doors again GDI
bug_after_refactoring: public void ndpvlpkbywampzlqznja () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> public void ndpvlpkbywampzlqznja () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> Fixed issue with doors again GDI
fix_before_refactoring: public void choose () { this . chosen = true ; }
fix_after_refactoring: public void ndpvlpkbywampzlqznja () { this . chosen = true ; }
√ fix_prediction_before: public void choose () { this . chosen = true ; }
√ fix_prediction_after: public void ndpvlpkbywampzlqznja () { this . chosen = true ; }

line_index: 806
bug_before_refactoring: public java.util.GregorianCalendar getStartTime () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> public java.util.GregorianCalendar getStartTime () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> remove unnecessary methods and fix bugs
bug_after_refactoring: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> remove unnecessary methods and fix bugs
fix_before_refactoring: public java.util.GregorianCalendar getStartTime () { return startTime ; }
fix_after_refactoring: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return startTime ; }
√ fix_prediction_before: public java.util.GregorianCalendar getStartTime () { return startTime ; }
√ fix_prediction_after: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return startTime ; }

line_index: 810
bug_before_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> fix stockroom search issue #inv-250 Fixed
bug_after_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> fix stockroom search issue #inv-250 Fixed
fix_before_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null , null ) ; }
fix_after_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null , null ) ; }
√ fix_prediction_before: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null , null ) ; }
√ fix_prediction_after: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null , null ) ; }

line_index: 816
bug_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
bug_after_refactoring: public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
fix_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
fix_after_refactoring: public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
√ fix_prediction_before: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
√ fix_prediction_after: public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }

line_index: 824
bug_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; } <s> @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
fix_after_refactoring: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; }
√ fix_prediction_before: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
√ fix_prediction_after: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; }

line_index: 834
bug_before_refactoring: void onSuccess ( T response , int type ) ; <s> void onSuccess ( T response , int type ) ; <s> fixed bug with markers removed unused code
bug_after_refactoring: void dpbaeneqcfatsrimryrd ( T response , int type ) ; <s> void dpbaeneqcfatsrimryrd ( T response , int type ) ; <s> fixed bug with markers removed unused code
fix_before_refactoring: void onSuccess ( T response ) ;
fix_after_refactoring: void dpbaeneqcfatsrimryrd ( T response ) ;
√ fix_prediction_before: void onSuccess ( T response ) ;
√ fix_prediction_after: void dpbaeneqcfatsrimryrd ( T response ) ;

line_index: 842
bug_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
bug_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
fix_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
fix_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( java.lang.String property , java.lang.String value ) ;
√ fix_prediction_before: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
√ fix_prediction_after: com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( java.lang.String property , java.lang.String value ) ;

line_index: 847
bug_before_refactoring: public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> Tests added and tons of bug fixes
bug_after_refactoring: public void nyncsljrcztthcrdccte ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> public void nyncsljrcztthcrdccte ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> Tests added and tons of bug fixes
fix_before_refactoring: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
fix_after_refactoring: public void nyncsljrcztthcrdccte ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
√ fix_prediction_before: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
√ fix_prediction_after: public void nyncsljrcztthcrdccte ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }

line_index: 853
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) {}
fix_after_refactoring: @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) {}
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
√ fix_prediction_after: @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) {}

line_index: 856
bug_before_refactoring: @ org.junit.After public void tearDown ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.After public void tearDown ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Solved ArrayList decleration bug  some mockito tests on bets
bug_after_refactoring: @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Solved ArrayList decleration bug  some mockito tests on bets
fix_before_refactoring: @ org.junit.After public void tearDown ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception {}
√ fix_prediction_before: @ org.junit.After public void tearDown ( ) throws java.lang.Exception {}
√ fix_prediction_after: @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception {}

line_index: 864
bug_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> @ java.lang.Override protected void onStop () { super . onStop () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> Fix some bugs to make the code work.
bug_after_refactoring: @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> Fix some bugs to make the code work.
fix_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; }
fix_after_refactoring: @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; }
√ fix_prediction_before: @ java.lang.Override protected void onStop () { super . onStop () ; }
√ fix_prediction_after: @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; }

line_index: 868
bug_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
bug_after_refactoring: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
fix_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
fix_after_refactoring: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
√ fix_prediction_before: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
√ fix_prediction_after: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}

line_index: 876
bug_before_refactoring: @ java.lang.Override public boolean celAllapot () { return ( a [ 1 ] ) == 4 ; } <s> @ java.lang.Override public boolean celAllapot () { return ( a [ 1 ] ) == 4 ; } <s> HaromKorso problem updated and gitignore fixed
bug_after_refactoring: @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 1 ] ) == 4 ; } <s> @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 1 ] ) == 4 ; } <s> HaromKorso problem updated and gitignore fixed
fix_before_refactoring: @ java.lang.Override public boolean celAllapot () { return ( a [ 0 ] ) == 4 ; }
fix_after_refactoring: @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 0 ] ) == 4 ; }
√ fix_prediction_before: @ java.lang.Override public boolean celAllapot () { return ( a [ 0 ] ) == 4 ; }
√ fix_prediction_after: @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 0 ] ) == 4 ; }

line_index: 880
bug_before_refactoring: protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> protected native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
fix_after_refactoring: private native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
√ fix_prediction_before: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
√ fix_prediction_after: private native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;

line_index: 881
bug_before_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> ARUHA-765: fixed the problem with nulls;
bug_after_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> ARUHA-765: fixed the problem with nulls;
fix_before_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return admins ; }
fix_after_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { return admins ; }
√ fix_prediction_before: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return admins ; }
√ fix_prediction_after: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { return admins ; }

line_index: 888
bug_before_refactoring: public int getLastNumber () { return ( mLastPuzzleId ) + 1 ; } <s> public int getLastNumber () { return ( mLastPuzzleId ) + 1 ; } <s> moved statistics logic into StatisticsUtils fixed bug with total puzzle count
bug_after_refactoring: public int sydmduifcfoqqsoujfdc () { return ( mLastPuzzleId ) + 1 ; } <s> public int sydmduifcfoqqsoujfdc () { return ( mLastPuzzleId ) + 1 ; } <s> moved statistics logic into StatisticsUtils fixed bug with total puzzle count
fix_before_refactoring: public int getLastNumber () { return mLastPuzzleId ; }
fix_after_refactoring: public int sydmduifcfoqqsoujfdc () { return mLastPuzzleId ; }
√ fix_prediction_before: public int getLastNumber () { return mLastPuzzleId ; }
√ fix_prediction_after: public int sydmduifcfoqqsoujfdc () { return mLastPuzzleId ; }

line_index: 900
bug_before_refactoring: void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> versuch serverbug zu fixen
bug_after_refactoring: void lescaebabwlbszfcqtxy ( java.lang.String id , java.lang.String client ) ; <s> void lescaebabwlbszfcqtxy ( java.lang.String id , java.lang.String client ) ; <s> versuch serverbug zu fixen
fix_before_refactoring: void sendImageToServer ( java.lang.String id ) ;
fix_after_refactoring: void lescaebabwlbszfcqtxy ( java.lang.String id ) ;
√ fix_prediction_before: void sendImageToServer ( java.lang.String id ) ;
√ fix_prediction_after: void lescaebabwlbszfcqtxy ( java.lang.String id ) ;

line_index: 911
bug_before_refactoring: public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
bug_after_refactoring: public void dhlssmwraulgwtnbcyvk ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void dhlssmwraulgwtnbcyvk ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
fix_before_refactoring: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
fix_after_refactoring: public void dhlssmwraulgwtnbcyvk ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
√ fix_prediction_before: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
√ fix_prediction_after: public void dhlssmwraulgwtnbcyvk ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }

line_index: 919
bug_before_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> Fix dash line problem due to incorrect caching
bug_after_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> Fix dash line problem due to incorrect caching
fix_before_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { return intersectionCache ; }
fix_after_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { return intersectionCache ; }
√ fix_prediction_before: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { return intersectionCache ; }
√ fix_prediction_after: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { return intersectionCache ; }

line_index: 938
bug_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
fix_after_refactoring: private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
√ fix_prediction_before: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
√ fix_prediction_after: private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }

line_index: 951
bug_before_refactoring: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> Fixed bugs in CoffeeMaker.java and Recipe.java.
bug_after_refactoring: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> Fixed bugs in CoffeeMaker.java and Recipe.java.
fix_before_refactoring: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
√ fix_prediction_before: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
√ fix_prediction_after: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }

line_index: 959
bug_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> @ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> fixing some bugs
bug_after_refactoring: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> fixing some bugs
fix_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; }
√ fix_prediction_before: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
√ fix_prediction_after: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; }

line_index: 965
bug_before_refactoring: protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
fix_after_refactoring: public void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_before: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_after: public void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }

line_index: 970
bug_before_refactoring: public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > pullItemsFromDB () {} <s> public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > pullItemsFromDB () {} <s> Fixed compilation errors
bug_after_refactoring: public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > vuldhqehhyytmumqvucp () {} <s> public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > vuldhqehhyytmumqvucp () {} <s> Fixed compilation errors
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 982
bug_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; android.support.v7.app.ActionBar ab = ( ( android.support.v7.app.ActionBarActivity ) ( context ) ) . getSupportActionBar () ; ab . setTitle ( "Topical Bible" ) ; setHasOptionsMenu ( true ) ; } <s> @ java.lang.Override public void onResume () { super . onResume () ; android.support.v7.app.ActionBar ab = ( ( android.support.v7.app.ActionBarActivity ) ( context ) ) . getSupportActionBar () ; ab . setTitle ( "Topical Bible" ) ; setHasOptionsMenu ( true ) ; } <s> Fixed bugs. Update for V1.1.0
bug_after_refactoring: @ java.lang.Override public void gnzyzjouaemnbfbojqtr () { super . gnzyzjouaemnbfbojqtr () ; android.support.v7.app.ActionBar ab = ( ( android.support.v7.app.ActionBarActivity ) ( context ) ) . getSupportActionBar () ; ab . setTitle ( "Topical Bible" ) ; setHasOptionsMenu ( true ) ; } <s> @ java.lang.Override public void gnzyzjouaemnbfbojqtr () { super . gnzyzjouaemnbfbojqtr () ; android.support.v7.app.ActionBar ab = ( ( android.support.v7.app.ActionBarActivity ) ( context ) ) . getSupportActionBar () ; ab . setTitle ( "Topical Bible" ) ; setHasOptionsMenu ( true ) ; } <s> Fixed bugs. Update for V1.1.0
fix_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; }
fix_after_refactoring: @ java.lang.Override public void gnzyzjouaemnbfbojqtr () { super . gnzyzjouaemnbfbojqtr () ; }
√ fix_prediction_before: @ java.lang.Override public void onResume () { super . onResume () ; }
√ fix_prediction_after: @ java.lang.Override public void gnzyzjouaemnbfbojqtr () { super . gnzyzjouaemnbfbojqtr () ; }

line_index: 984
bug_before_refactoring: public void press () { cmds . remove ( 0 ) ; } <s> public void press () { cmds . remove ( 0 ) ; } <s> Fixed command ordering issue by adding ArrayList. Reintroduced colors.
bug_after_refactoring: public void bdybycheqpyovbyjvupj () { cmds . remove ( 0 ) ; } <s> public void bdybycheqpyovbyjvupj () { cmds . remove ( 0 ) ; } <s> Fixed command ordering issue by adding ArrayList. Reintroduced colors.
fix_before_refactoring: public void press () { if ( ! ( cmds . isEmpty () ) ) { cmds . remove ( 0 ) ; } }
fix_after_refactoring: public void bdybycheqpyovbyjvupj () { if ( ! ( cmds . isEmpty () ) ) { cmds . remove ( 0 ) ; } }
√ fix_prediction_before: public void press () { if ( ! ( cmds . isEmpty () ) ) { cmds . remove ( 0 ) ; } }
√ fix_prediction_after: public void bdybycheqpyovbyjvupj () { if ( ! ( cmds . isEmpty () ) ) { cmds . remove ( 0 ) ; } }

line_index: 992
bug_before_refactoring: @ java.lang.Override public java.lang.String getFormula () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> @ java.lang.Override public java.lang.String getFormula () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> -added FindBugs to build.gradle -fixed the first few issues reported by FindBugs
bug_after_refactoring: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> -added FindBugs to build.gradle -fixed the first few issues reported by FindBugs
fix_before_refactoring: @ java.lang.Override public java.lang.String getFormula () { return poiCell . getCellFormula () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { return poiCell . getCellFormula () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getFormula () { return poiCell . getCellFormula () ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { return poiCell . getCellFormula () ; }

line_index: 994
bug_before_refactoring: public java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> public java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> Fixed an issue in four passes negotiation case between client and kdc
bug_after_refactoring: public java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> public java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> Fixed an issue in four passes negotiation case between client and kdc
fix_before_refactoring: protected java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
fix_after_refactoring: protected java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
√ fix_prediction_before: protected java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
√ fix_prediction_after: protected java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }

line_index: 1000
bug_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
bug_after_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
fix_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
fix_after_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
√ fix_prediction_before: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
√ fix_prediction_after: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }

line_index: 1001
bug_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> fix some bugs.
bug_after_refactoring: public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> fix some bugs.
fix_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
fix_after_refactoring: public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
√ fix_prediction_before: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
√ fix_prediction_after: public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }

line_index: 1012
bug_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
bug_after_refactoring: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " xovhwyaunqoolyqbmtfe" ) ) ; } <s> @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " xovhwyaunqoolyqbmtfe" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
fix_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
fix_after_refactoring: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) {}
√ fix_prediction_before: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
√ fix_prediction_after: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) {}

line_index: 1019
bug_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
bug_after_refactoring: @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
fix_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
√ fix_prediction_after: @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }

line_index: 1052
bug_before_refactoring: protected javafx.beans.property.DoubleProperty greenProperty () { return this . green ; } <s> protected javafx.beans.property.DoubleProperty greenProperty () { return this . green ; } <s> Fixed potential bug
bug_after_refactoring: protected javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; } <s> protected javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; } <s> Fixed potential bug
fix_before_refactoring: public javafx.beans.property.DoubleProperty greenProperty () { return this . green ; }
fix_after_refactoring: public javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; }
√ fix_prediction_before: public javafx.beans.property.DoubleProperty greenProperty () { return this . green ; }
√ fix_prediction_after: public javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; }

line_index: 1058
bug_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
bug_after_refactoring: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
fix_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
fix_after_refactoring: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_before: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_after: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) {}

line_index: 1071
bug_before_refactoring: @ java.lang.Override public void run () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> @ java.lang.Override public void run () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> Merge pull request #29 from shimohq/2.0.0  Fix some bugs on Android
bug_after_refactoring: @ java.lang.Override public void vzbycclxqvuxebxyqveh () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> @ java.lang.Override public void vzbycclxqvuxebxyqveh () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> Merge pull request #29 from shimohq/2.0.0  Fix some bugs on Android
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( mCoverView ) != null ) { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } }
fix_after_refactoring: @ java.lang.Override public void vzbycclxqvuxebxyqveh () { if ( ( mCoverView ) != null ) { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } }
√ fix_prediction_before: @ java.lang.Override public void run () { if ( ( mCoverView ) != null ) { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } }
√ fix_prediction_after: @ java.lang.Override public void vzbycclxqvuxebxyqveh () { if ( ( mCoverView ) != null ) { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } }

line_index: 1088
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
bug_after_refactoring: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
fix_after_refactoring: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_after: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }

line_index: 1098
bug_before_refactoring: public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
bug_after_refactoring: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void xkzpshaprhzncmjygbsh ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
fix_before_refactoring: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
fix_after_refactoring: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
√ fix_prediction_before: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
√ fix_prediction_after: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }

line_index: 1099
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S lyputbeedspziuxhzxxg ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S lyputbeedspziuxhzxxg ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E lyputbeedspziuxhzxxg ( E entity ) { return saveAndFlush ( entity ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
√ fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E lyputbeedspziuxhzxxg ( E entity ) { return saveAndFlush ( entity ) ; }

line_index: 1102
bug_before_refactoring: public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
bug_after_refactoring: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
fix_before_refactoring: public void setUsername ( java.lang.String username ) { this . username = username ; }
fix_after_refactoring: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { this . username = username ; }
√ fix_prediction_before: public void setUsername ( java.lang.String username ) { this . username = username ; }
√ fix_prediction_after: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { this . username = username ; }

line_index: 1119
bug_before_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
fix_after_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; }
√ fix_prediction_before: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
√ fix_prediction_after: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; }

line_index: 1134
bug_before_refactoring: public static boolean isPreview () { return true ; } <s> public static boolean isPreview () { return true ; } <s> bug fix
bug_after_refactoring: public static boolean dlrinimmfxnapcisexjt () { return true ; } <s> public static boolean dlrinimmfxnapcisexjt () { return true ; } <s> bug fix
fix_before_refactoring: public static boolean isPreview () { return false ; }
fix_after_refactoring: public static boolean dlrinimmfxnapcisexjt () { return false ; }
√ fix_prediction_before: public static boolean isPreview () { return false ; }
√ fix_prediction_after: public static boolean dlrinimmfxnapcisexjt () { return false ; }

line_index: 1140
bug_before_refactoring: private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> Fixing bugs
bug_after_refactoring: private static native long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) ; <s> private static native long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
fix_after_refactoring: private static long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) { return 0 ; }
√ fix_prediction_before: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
√ fix_prediction_after: private static long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) { return 0 ; }

line_index: 1166
bug_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> fix null bug in okhttp request
bug_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { mHeaders = shuwjysdutzejbqkgmrw ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { mHeaders = shuwjysdutzejbqkgmrw ; return this ; } <s> fix null bug in okhttp request
fix_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
fix_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { if ( shuwjysdutzejbqkgmrw != null ) { mHeaders = shuwjysdutzejbqkgmrw ; } return this ; }
√ fix_prediction_before: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
√ fix_prediction_after: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { if ( shuwjysdutzejbqkgmrw != null ) { mHeaders = shuwjysdutzejbqkgmrw ; } return this ; }

line_index: 1187
bug_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> fixed a bug loook at the commit under this one
bug_after_refactoring: public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> fixed a bug loook at the commit under this one
fix_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
fix_after_refactoring: public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
√ fix_prediction_before: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
√ fix_prediction_after: public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}

line_index: 1191
bug_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
bug_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
fix_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
fix_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
√ fix_prediction_before: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
√ fix_prediction_after: public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }

line_index: 1197
bug_before_refactoring: @ java.lang.Override public void afterPropertiesSet ( ) throws java.lang.Exception { setSegmentStatus () ; modifyCodeUsage () ; } <s> @ java.lang.Override public void afterPropertiesSet ( ) throws java.lang.Exception { setSegmentStatus () ; modifyCodeUsage () ; } <s> fix errors details
bug_after_refactoring: @ java.lang.Override public void otqlbbaqdlafmzrakgkg ( ) throws java.lang.Exception { setSegmentStatus () ; modifyCodeUsage () ; } <s> @ java.lang.Override public void otqlbbaqdlafmzrakgkg ( ) throws java.lang.Exception { setSegmentStatus () ; modifyCodeUsage () ; } <s> fix errors details
fix_before_refactoring: @ java.lang.Override public void afterPropertiesSet ( ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void otqlbbaqdlafmzrakgkg ( ) throws java.lang.Exception {}
√ fix_prediction_before: @ java.lang.Override public void afterPropertiesSet ( ) throws java.lang.Exception {}
√ fix_prediction_after: @ java.lang.Override public void otqlbbaqdlafmzrakgkg ( ) throws java.lang.Exception {}

line_index: 1217
bug_before_refactoring: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> Added Circular progress animation Added Transitions Beautified Display Result Switched Spreadsheets and folder to official folder Modified bitmap title minor bug fix
bug_after_refactoring: @ java.lang.Override public void jatiktxqpevfqvoypirn ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - jatiktxqpevfqvoypirn" ) ; } <s> @ java.lang.Override public void jatiktxqpevfqvoypirn ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - jatiktxqpevfqvoypirn" ) ; } <s> Added Circular progress animation Added Transitions Beautified Display Result Switched Spreadsheets and folder to official folder Modified bitmap title minor bug fix
fix_before_refactoring: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) {}
fix_after_refactoring: @ java.lang.Override public void jatiktxqpevfqvoypirn ( java.lang.String utteranceId ) {}
√ fix_prediction_before: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) {}
√ fix_prediction_after: @ java.lang.Override public void jatiktxqpevfqvoypirn ( java.lang.String utteranceId ) {}

line_index: 1222
bug_before_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( false ) ; } <s> public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( false ) ; } <s> fix(test-bed): don't log debug output for functional test
bug_after_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( false ) ; } <s> public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( false ) ; } <s> fix(test-bed): don't log debug output for functional test
fix_before_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( true ) ; }
fix_after_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( true ) ; }
√ fix_prediction_before: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( true ) ; }
√ fix_prediction_after: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( true ) ; }

line_index: 1241
bug_before_refactoring: protected com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; } <s> protected com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; } <s> Fixed small bug when game type is not displayed on the selection screen just after exiting a game
bug_after_refactoring: protected com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; } <s> protected com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; } <s> Fixed small bug when game type is not displayed on the selection screen just after exiting a game
fix_before_refactoring: public com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; }
fix_after_refactoring: public com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; }
√ fix_prediction_before: public com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; }
√ fix_prediction_after: public com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; }

line_index: 1253
bug_before_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> BugFixed FileToTranslate builder
bug_after_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; } <s> BugFixed FileToTranslate builder
fix_before_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
fix_after_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; }
√ fix_prediction_before: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
√ fix_prediction_after: public com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; }

line_index: 1259
bug_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
bug_after_refactoring: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
fix_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_before: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_after: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) {}

line_index: 1260
bug_before_refactoring: public void clearRegisteredAuthenticationListener () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "clearRegisteredAuthenticationListener" ) ; mAuthListener = null ; } <s> public void clearRegisteredAuthenticationListener () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "clearRegisteredAuthenticationListener" ) ; mAuthListener = null ; } <s> This issue of logging in via email forces two login(s) is an FirebaseUI library bug I cannot fix (its emulator only though)
bug_after_refactoring: public void pmesykyvowsixsaoyutl () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "pmesykyvowsixsaoyutl" ) ; mAuthListener = null ; } <s> public void pmesykyvowsixsaoyutl () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "pmesykyvowsixsaoyutl" ) ; mAuthListener = null ; } <s> This issue of logging in via email forces two login(s) is an FirebaseUI library bug I cannot fix (its emulator only though)
fix_before_refactoring: public void clearRegisteredAuthenticationListener () { mAuthListener = null ; }
fix_after_refactoring: public void pmesykyvowsixsaoyutl () { mAuthListener = null ; }
√ fix_prediction_before: public void clearRegisteredAuthenticationListener () { mAuthListener = null ; }
√ fix_prediction_after: public void pmesykyvowsixsaoyutl () { mAuthListener = null ; }

line_index: 1272
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
√ fix_prediction_before: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
√ fix_prediction_after: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }

line_index: 1291
bug_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
bug_after_refactoring: private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
fix_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_before: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_after: private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) {}

line_index: 1296
bug_before_refactoring: public void testDbFileExists ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> public void testDbFileExists ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> fixed DictionaryDB EofSensorInputStream bug
bug_after_refactoring: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> fixed DictionaryDB EofSensorInputStream bug
fix_before_refactoring: public void testDbFileExists ( ) throws java.lang.Exception {}
fix_after_refactoring: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception {}
√ fix_prediction_before: public void testDbFileExists ( ) throws java.lang.Exception {}
√ fix_prediction_after: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception {}

line_index: 1306
bug_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
bug_after_refactoring: @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
fix_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
√ fix_prediction_before: @ java.lang.Override public void onMessage ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
√ fix_prediction_after: @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { cP . setEnabled ( true ) ; }

line_index: 1324
bug_before_refactoring: @ java.lang.Override protected boolean isFinished () { if ( ( ( leftFollower.error ) < 0.1 ) && ( ( rightFollower.error ) < 0.1 ) ) { return true ; } return false ; } <s> @ java.lang.Override protected boolean isFinished () { if ( ( ( leftFollower.error ) < 0.1 ) && ( ( rightFollower.error ) < 0.1 ) ) { return true ; } return false ; } <s> Miscellaneous bugfixes
bug_after_refactoring: @ java.lang.Override protected boolean yldwuklolfnagamihpgs () { if ( ( ( leftFollower.error ) < 0.1 ) && ( ( rightFollower.error ) < 0.1 ) ) { return true ; } return false ; } <s> @ java.lang.Override protected boolean yldwuklolfnagamihpgs () { if ( ( ( leftFollower.error ) < 0.1 ) && ( ( rightFollower.error ) < 0.1 ) ) { return true ; } return false ; } <s> Miscellaneous bugfixes
fix_before_refactoring: @ java.lang.Override protected boolean isFinished () { return false ; }
fix_after_refactoring: @ java.lang.Override protected boolean yldwuklolfnagamihpgs () { return false ; }
√ fix_prediction_before: @ java.lang.Override protected boolean isFinished () { return false ; }
√ fix_prediction_after: @ java.lang.Override protected boolean yldwuklolfnagamihpgs () { return false ; }

line_index: 1329
bug_before_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> many things; problems to be solved
bug_after_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> many things; problems to be solved
fix_before_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { return tags ; }
fix_after_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { return tags ; }
√ fix_prediction_before: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { return tags ; }
√ fix_prediction_after: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { return tags ; }

line_index: 1330
bug_before_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
bug_after_refactoring: private void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
fix_before_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
fix_after_refactoring: protected void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
√ fix_prediction_before: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
√ fix_prediction_after: protected void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }

line_index: 1343
bug_before_refactoring: public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
bug_after_refactoring: public void sbzyzyqwbzmbdsrfbjgs ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void sbzyzyqwbzmbdsrfbjgs ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
fix_before_refactoring: public void enqueue ( Item item ) {}
fix_after_refactoring: public void sbzyzyqwbzmbdsrfbjgs ( Item item ) {}
√ fix_prediction_before: public void enqueue ( Item item ) {}
√ fix_prediction_after: public void sbzyzyqwbzmbdsrfbjgs ( Item item ) {}

line_index: 1357
bug_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
bug_after_refactoring: long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
fix_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
fix_after_refactoring: long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
√ fix_prediction_before: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
√ fix_prediction_after: long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;

line_index: 1405
bug_before_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
fix_after_refactoring: public net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
√ fix_prediction_before: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
√ fix_prediction_after: public net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }

line_index: 1406
bug_before_refactoring: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> Add build operation listener and fix html append problem
bug_after_refactoring: @ java.lang.Override public void zmbbfuevwnkbqpdopici ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> @ java.lang.Override public void zmbbfuevwnkbqpdopici ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> Add build operation listener and fix html append problem
fix_before_refactoring: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
fix_after_refactoring: @ java.lang.Override public void zmbbfuevwnkbqpdopici ( org.gradle.api.invocation.Gradle gradle ) { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
√ fix_prediction_before: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
√ fix_prediction_after: @ java.lang.Override public void zmbbfuevwnkbqpdopici ( org.gradle.api.invocation.Gradle gradle ) { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }

line_index: 1422
bug_before_refactoring: public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> public void fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
fix_after_refactoring: public boolean fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
√ fix_prediction_before: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
√ fix_prediction_after: public boolean fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }

line_index: 1427
bug_before_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
fix_after_refactoring: public void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
√ fix_prediction_before: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
√ fix_prediction_after: public void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }

line_index: 1429
bug_before_refactoring: private com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> private com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> gps fix bug
bug_after_refactoring: private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> gps fix bug
fix_before_refactoring: private com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 0 ] ; }
fix_after_refactoring: private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 0 ] ; }
√ fix_prediction_before: private com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 0 ] ; }
√ fix_prediction_after: private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 0 ] ; }

line_index: 1450
bug_before_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
bug_after_refactoring: @ java.lang.Override public io.makerplayground.device.Processor oxczldtilynhskryyyme ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor oxczldtilynhskryyyme ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 1457
bug_before_refactoring: public java.lang.Integer getTimerange () { return timerange . intValue () ; } <s> public java.lang.Integer getTimerange () { return timerange . intValue () ; } <s> - email template is used for closing mails - fixed some bugs
bug_after_refactoring: public java.lang.Integer yukrjyjqmbmaoqjyoglg () { return timerange . intValue () ; } <s> public java.lang.Integer yukrjyjqmbmaoqjyoglg () { return timerange . intValue () ; } <s> - email template is used for closing mails - fixed some bugs
fix_before_refactoring: public java.lang.Integer getTimerange () { return timerange ; }
fix_after_refactoring: public java.lang.Integer yukrjyjqmbmaoqjyoglg () { return timerange ; }
√ fix_prediction_before: public java.lang.Integer getTimerange () { return timerange ; }
√ fix_prediction_after: public java.lang.Integer yukrjyjqmbmaoqjyoglg () { return timerange ; }

line_index: 1462
bug_before_refactoring: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fix class errors
bug_after_refactoring: @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fix class errors
fix_before_refactoring: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
fix_after_refactoring: @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
√ fix_prediction_before: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
√ fix_prediction_after: @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }

line_index: 1476
bug_before_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> API restructuring  bugfixes
bug_after_refactoring: public boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; } <s> public boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; } <s> API restructuring  bugfixes
fix_before_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
fix_after_refactoring: private boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; }
√ fix_prediction_before: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
√ fix_prediction_after: private boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; }

line_index: 1493
bug_before_refactoring: private java.lang.Object getData () { return data ; } <s> private java.lang.Object getData () { return data ; } <s> fix error
bug_after_refactoring: private java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; } <s> private java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; } <s> fix error
fix_before_refactoring: public java.lang.Object getData () { return data ; }
fix_after_refactoring: public java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; }
√ fix_prediction_before: public java.lang.Object getData () { return data ; }
√ fix_prediction_after: public java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; }

line_index: 1500
bug_before_refactoring: private java.lang.String getEmail () { return email ; } <s> private java.lang.String getEmail () { return email ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private java.lang.String dgokvbxdbdeoknycyqlj () { return email ; } <s> private java.lang.String dgokvbxdbdeoknycyqlj () { return email ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public java.lang.String getEmail () { return email ; }
fix_after_refactoring: public java.lang.String dgokvbxdbdeoknycyqlj () { return email ; }
√ fix_prediction_before: public java.lang.String getEmail () { return email ; }
√ fix_prediction_after: public java.lang.String dgokvbxdbdeoknycyqlj () { return email ; }

line_index: 1505
bug_before_refactoring: public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> public void zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
fix_after_refactoring: public boolean zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
√ fix_prediction_before: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
√ fix_prediction_after: public boolean zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }

line_index: 1539
bug_before_refactoring: public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
bug_after_refactoring: public static void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> public static void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
fix_before_refactoring: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
fix_after_refactoring: public void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
√ fix_prediction_before: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
√ fix_prediction_after: public void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }

line_index: 1540
bug_before_refactoring: @ java.lang.Override public void onApiFinished () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> @ java.lang.Override public void onApiFinished () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> Merge pull request #50 from malaonline/AN-503  AN-503 fix the buy-course-button’s event error
bug_after_refactoring: @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> Merge pull request #50 from malaonline/AN-503  AN-503 fix the buy-course-button’s event error
fix_before_refactoring: @ java.lang.Override public void onApiFinished () {}
fix_after_refactoring: @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () {}
√ fix_prediction_before: @ java.lang.Override public void onApiFinished () {}
√ fix_prediction_after: @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () {}

line_index: 1548
bug_before_refactoring: private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> Fixed bug in binary operation application
bug_after_refactoring: private boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> private boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
fix_after_refactoring: protected boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
√ fix_prediction_before: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
√ fix_prediction_after: protected boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }

line_index: 1549
bug_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
bug_after_refactoring: public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
fix_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
fix_after_refactoring: public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
√ fix_prediction_before: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
√ fix_prediction_after: public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }

line_index: 1551
bug_before_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fixed some merge errors with c.close.
bug_after_refactoring: public boolean ndqqerywbslricwgcjvh ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> public boolean ndqqerywbslricwgcjvh ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fixed some merge errors with c.close.
fix_before_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { finish () ; return true ; }
fix_after_refactoring: public boolean ndqqerywbslricwgcjvh ( android.view.MenuItem item ) { finish () ; return true ; }
√ fix_prediction_before: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { finish () ; return true ; }
√ fix_prediction_after: public boolean ndqqerywbslricwgcjvh ( android.view.MenuItem item ) { finish () ; return true ; }

line_index: 1570
bug_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
bug_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
fix_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
fix_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
√ fix_prediction_before: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
√ fix_prediction_after: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }

line_index: 1571
bug_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
bug_after_refactoring: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
fix_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
fix_after_refactoring: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
√ fix_prediction_before: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
√ fix_prediction_after: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; }

line_index: 1582
bug_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
bug_after_refactoring: @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
fix_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) {}
fix_after_refactoring: @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) {}
√ fix_prediction_before: @ java.lang.Override public void newClient ( Airport.Client client ) {}
√ fix_prediction_after: @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) {}

line_index: 1600
bug_before_refactoring: @ java.lang.Override public long getId () { return this . id ; } <s> @ java.lang.Override public long getId () { return this . id ; } <s> Fixing PriceImpl style issues
bug_after_refactoring: @ java.lang.Override public long awlswirklztucviayagc () { return this . id ; } <s> @ java.lang.Override public long awlswirklztucviayagc () { return this . id ; } <s> Fixing PriceImpl style issues
fix_before_refactoring: @ java.lang.Override public long getId () { return id ; }
fix_after_refactoring: @ java.lang.Override public long awlswirklztucviayagc () { return id ; }
√ fix_prediction_before: @ java.lang.Override public long getId () { return id ; }
√ fix_prediction_after: @ java.lang.Override public long awlswirklztucviayagc () { return id ; }

line_index: 1607
bug_before_refactoring: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> Changed join message  fixed bugs
bug_after_refactoring: @ org.bukkit.event.EventHandler public void tiqfzbacwovwbzicooir ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> @ org.bukkit.event.EventHandler public void tiqfzbacwovwbzicooir ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> Changed join message  fixed bugs
fix_before_refactoring: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } }
fix_after_refactoring: @ org.bukkit.event.EventHandler public void tiqfzbacwovwbzicooir ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } }
√ fix_prediction_before: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } }
√ fix_prediction_after: @ org.bukkit.event.EventHandler public void tiqfzbacwovwbzicooir ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } }

line_index: 1610
bug_before_refactoring: @ java.lang.Override public int getPoints () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> @ java.lang.Override public int getPoints () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> fix bug with toolbar
bug_after_refactoring: @ java.lang.Override public int kkdmlownvgicxyxegjqm () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> @ java.lang.Override public int kkdmlownvgicxyxegjqm () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> fix bug with toolbar
fix_before_refactoring: @ java.lang.Override public int getPoints () { return points ; }
fix_after_refactoring: @ java.lang.Override public int kkdmlownvgicxyxegjqm () { return points ; }
√ fix_prediction_before: @ java.lang.Override public int getPoints () { return points ; }
√ fix_prediction_after: @ java.lang.Override public int kkdmlownvgicxyxegjqm () { return points ; }

line_index: 1618
bug_before_refactoring: protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> fixed errors  finally
bug_after_refactoring: protected intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; } <s> protected intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; } <s> fixed errors  finally
fix_before_refactoring: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; }
fix_after_refactoring: public intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; }
√ fix_prediction_before: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; }
√ fix_prediction_after: public intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; }

line_index: 1649
bug_before_refactoring: @ java.lang.Override protected void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; } <s> @ java.lang.Override protected void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; } <s> Fix a few style errors.
bug_after_refactoring: @ java.lang.Override protected void auqxyenpimkjpbgxdwor ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . auqxyenpimkjpbgxdwor ( size , dst , src ) ; } <s> @ java.lang.Override protected void auqxyenpimkjpbgxdwor ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . auqxyenpimkjpbgxdwor ( size , dst , src ) ; } <s> Fix a few style errors.
fix_before_refactoring: @ java.lang.Override public void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; }
fix_after_refactoring: @ java.lang.Override public void auqxyenpimkjpbgxdwor ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . auqxyenpimkjpbgxdwor ( size , dst , src ) ; }
√ fix_prediction_before: @ java.lang.Override public void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; }
√ fix_prediction_after: @ java.lang.Override public void auqxyenpimkjpbgxdwor ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . auqxyenpimkjpbgxdwor ( size , dst , src ) ; }

line_index: 1667
bug_before_refactoring: @ java.lang.Override public void onHandle () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> @ java.lang.Override public void onHandle () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> bug fixed
bug_after_refactoring: @ java.lang.Override public void juahkikoyxazywbqowgg () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> @ java.lang.Override public void juahkikoyxazywbqowgg () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> bug fixed
fix_before_refactoring: @ java.lang.Override public void onHandle () {}
fix_after_refactoring: @ java.lang.Override public void juahkikoyxazywbqowgg () {}
√ fix_prediction_before: @ java.lang.Override public void onHandle () {}
√ fix_prediction_after: @ java.lang.Override public void juahkikoyxazywbqowgg () {}

line_index: 1671
bug_before_refactoring: public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; } <s> public void umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
fix_after_refactoring: public boolean umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { return this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; }
√ fix_prediction_before: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
√ fix_prediction_after: public boolean umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { return this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; }

line_index: 1692
bug_before_refactoring: public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
bug_after_refactoring: public mainPackage.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
fix_before_refactoring: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
fix_after_refactoring: public java.util.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
√ fix_prediction_before: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
√ fix_prediction_after: public java.util.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }

line_index: 1693
bug_before_refactoring: @ java.lang.Override public void noWhatsPopularData () { java.lang.System.out . println () ; } <s> @ java.lang.Override public void noWhatsPopularData () { java.lang.System.out . println () ; } <s> Fixed several bugs in StartActivity
bug_after_refactoring: @ java.lang.Override public void zltagvwjdmipbzznhqqt () { java.lang.System.out . println () ; } <s> @ java.lang.Override public void zltagvwjdmipbzznhqqt () { java.lang.System.out . println () ; } <s> Fixed several bugs in StartActivity
fix_before_refactoring: @ java.lang.Override public void noWhatsPopularData () {}
fix_after_refactoring: @ java.lang.Override public void zltagvwjdmipbzznhqqt () {}
√ fix_prediction_before: @ java.lang.Override public void noWhatsPopularData () {}
√ fix_prediction_after: @ java.lang.Override public void zltagvwjdmipbzznhqqt () {}

line_index: 1712
bug_before_refactoring: public boolean canResume () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> public boolean canResume () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> - fixed a launching bug that could delete existing configurations
bug_after_refactoring: public boolean xjzgsyaigvrnxwmsgnno () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> public boolean xjzgsyaigvrnxwmsgnno () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> - fixed a launching bug that could delete existing configurations
fix_before_refactoring: public boolean canResume () { return false ; }
fix_after_refactoring: public boolean xjzgsyaigvrnxwmsgnno () { return false ; }
√ fix_prediction_before: public boolean canResume () { return false ; }
√ fix_prediction_after: public boolean xjzgsyaigvrnxwmsgnno () { return false ; }

line_index: 1728
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
bug_after_refactoring: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) {}
√ fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) {}
√ fix_prediction_after: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) {}

line_index: 1734
bug_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> @ java.lang.Override public void onPause () { super . onPause () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> Fixed print preview bug
bug_after_refactoring: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> Fixed print preview bug
fix_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; }
√ fix_prediction_before: @ java.lang.Override public void onPause () { super . onPause () ; }
√ fix_prediction_after: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; }

line_index: 1735
bug_before_refactoring: protected java.lang.String getVolumeListJson () { return this . volumeListJson ; } <s> protected java.lang.String getVolumeListJson () { return this . volumeListJson ; } <s> Fixed a bug where inventory persistence wasn't held  Changed from protected to public members so storage works as intended
bug_after_refactoring: protected java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; } <s> protected java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; } <s> Fixed a bug where inventory persistence wasn't held  Changed from protected to public members so storage works as intended
fix_before_refactoring: public java.lang.String getVolumeListJson () { return this . volumeListJson ; }
fix_after_refactoring: public java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; }
√ fix_prediction_before: public java.lang.String getVolumeListJson () { return this . volumeListJson ; }
√ fix_prediction_after: public java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; }

line_index: 1744
bug_before_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> Fixed issue #4273
bug_after_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ; <s> Fixed issue #4273
fix_before_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
fix_after_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ;
√ fix_prediction_before: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
√ fix_prediction_after: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ;

line_index: 1749
bug_before_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
fix_after_refactoring: io.hekate.messaging.MessagingChannel < T > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ;
√ fix_prediction_before: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
√ fix_prediction_after: io.hekate.messaging.MessagingChannel < T > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ;

line_index: 1768
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
bug_after_refactoring: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
√ fix_prediction_after: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }

line_index: 1770
bug_before_refactoring: private void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> private void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> fix bugs
bug_after_refactoring: private void tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> private void tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> fix bugs
fix_before_refactoring: public void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } }
fix_after_refactoring: public void tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } }
√ fix_prediction_before: public void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } }
√ fix_prediction_after: public void tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } }

line_index: 1771
bug_before_refactoring: @ java.lang.Override public int getCount () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . getCount () ) ) + " getCount" ) ) ; return mCS . getCount () ; } <s> @ java.lang.Override public int getCount () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . getCount () ) ) + " getCount" ) ) ; return mCS . getCount () ; } <s> Fixed bug with the back button behavior
bug_after_refactoring: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . mfhdcgrobephvsvlzkoi () ) ) + " mfhdcgrobephvsvlzkoi" ) ) ; return mCS . mfhdcgrobephvsvlzkoi () ; } <s> @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . mfhdcgrobephvsvlzkoi () ) ) + " mfhdcgrobephvsvlzkoi" ) ) ; return mCS . mfhdcgrobephvsvlzkoi () ; } <s> Fixed bug with the back button behavior
fix_before_refactoring: @ java.lang.Override public int getCount () { return mCS . getCount () ; }
fix_after_refactoring: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { return mCS . mfhdcgrobephvsvlzkoi () ; }
√ fix_prediction_before: @ java.lang.Override public int getCount () { return mCS . getCount () ; }
√ fix_prediction_after: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { return mCS . mfhdcgrobephvsvlzkoi () ; }

line_index: 1777
bug_before_refactoring: public java.lang.String getUrl () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> public java.lang.String getUrl () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> Bug fixes
bug_after_refactoring: public java.lang.String apongfesugekougokqjd () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> public java.lang.String apongfesugekougokqjd () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> Bug fixes
fix_before_refactoring: public java.lang.String getUrl () { return url ; }
fix_after_refactoring: public java.lang.String apongfesugekougokqjd () { return url ; }
√ fix_prediction_before: public java.lang.String getUrl () { return url ; }
√ fix_prediction_after: public java.lang.String apongfesugekougokqjd () { return url ; }

line_index: 1779
bug_before_refactoring: public void setRange ( final java.lang.Long min , final java.lang.Long max ) { setRange ( min , max , null ) ; } <s> public void setRange ( final java.lang.Long min , final java.lang.Long max ) { setRange ( min , max , null ) ; } <s> Added Colors type. Minor bugfixes.
bug_after_refactoring: public void iwfoqricwzpmitohrkgo ( final java.lang.Long min , final java.lang.Long max ) { iwfoqricwzpmitohrkgo ( min , max , null ) ; } <s> public void iwfoqricwzpmitohrkgo ( final java.lang.Long min , final java.lang.Long max ) { iwfoqricwzpmitohrkgo ( min , max , null ) ; } <s> Added Colors type. Minor bugfixes.
fix_before_refactoring: public void setRange ( final java.lang.Double min , final java.lang.Double max ) { setRange ( min , max , null ) ; }
fix_after_refactoring: public void iwfoqricwzpmitohrkgo ( final java.lang.Double min , final java.lang.Double max ) { iwfoqricwzpmitohrkgo ( min , max , null ) ; }
√ fix_prediction_before: public void setRange ( final java.lang.Double min , final java.lang.Double max ) { setRange ( min , max , null ) ; }
√ fix_prediction_after: public void iwfoqricwzpmitohrkgo ( final java.lang.Double min , final java.lang.Double max ) { iwfoqricwzpmitohrkgo ( min , max , null ) ; }

line_index: 1787
bug_before_refactoring: public com.svnavigatoru600.domain.users.UserBuilder enabled ( boolean enabled ) { this . user . setEnabled ( enabled ) ; return this ; } <s> public com.svnavigatoru600.domain.users.UserBuilder enabled ( boolean enabled ) { this . user . setEnabled ( enabled ) ; return this ; } <s> bugfix: default value of SMTP port column did not work since smtpPort in User was int  not Integer
bug_after_refactoring: public com.svnavigatoru600.domain.users.UserBuilder lhgenapdhllqoxfhspnt ( boolean lhgenapdhllqoxfhspnt ) { this . user . setEnabled ( lhgenapdhllqoxfhspnt ) ; return this ; } <s> public com.svnavigatoru600.domain.users.UserBuilder lhgenapdhllqoxfhspnt ( boolean lhgenapdhllqoxfhspnt ) { this . user . setEnabled ( lhgenapdhllqoxfhspnt ) ; return this ; } <s> bugfix: default value of SMTP port column did not work since smtpPort in User was int  not Integer
fix_before_refactoring: public com.svnavigatoru600.domain.users.UserBuilder enabled ( final boolean enabled ) { user . setEnabled ( enabled ) ; return this ; }
fix_after_refactoring: public com.svnavigatoru600.domain.users.UserBuilder lhgenapdhllqoxfhspnt ( final boolean lhgenapdhllqoxfhspnt ) { user . setEnabled ( lhgenapdhllqoxfhspnt ) ; return this ; }
√ fix_prediction_before: public com.svnavigatoru600.domain.users.UserBuilder enabled ( final boolean enabled ) { user . setEnabled ( enabled ) ; return this ; }
√ fix_prediction_after: public com.svnavigatoru600.domain.users.UserBuilder lhgenapdhllqoxfhspnt ( final boolean lhgenapdhllqoxfhspnt ) { user . setEnabled ( lhgenapdhllqoxfhspnt ) ; return this ; }

line_index: 1789
bug_before_refactoring: private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
bug_after_refactoring: private static native long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
fix_after_refactoring: private static long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
√ fix_prediction_before: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
√ fix_prediction_after: private static long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) { return 0 ; }

line_index: 1790
bug_before_refactoring: public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> Organization id issue resolved.
bug_after_refactoring: public void wkjwzfydqvhnugowypnq ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> public void wkjwzfydqvhnugowypnq ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> Organization id issue resolved.
fix_before_refactoring: public void setId ( long id ) { this . id = id ; }
fix_after_refactoring: public void wkjwzfydqvhnugowypnq ( long id ) { this . id = id ; }
√ fix_prediction_before: public void setId ( long id ) { this . id = id ; }
√ fix_prediction_after: public void wkjwzfydqvhnugowypnq ( long id ) { this . id = id ; }

line_index: 1793
bug_before_refactoring: private static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> private static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> Fix axis2Server.bat file does not start issue  This is to reverting the fix in PR #147. Set startServer  stopServer methods as public
bug_after_refactoring: private static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> private static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> Fix axis2Server.bat file does not start issue  This is to reverting the fix in PR #147. Set startServer  stopServer methods as public
fix_before_refactoring: public static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
fix_after_refactoring: public static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
√ fix_prediction_before: public static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
√ fix_prediction_after: public static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }

line_index: 1800
bug_before_refactoring: public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
bug_after_refactoring: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_before: public void setName ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_after: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = name ; }

line_index: 1817
bug_before_refactoring: @ java.lang.Override public void run () { node . close () ; } <s> @ java.lang.Override public void run () { node . close () ; } <s> Improve path management on init: * Properly support symlinks (e.g. /tmp -> /mnt/tmp) * Check all configured paths up front and deliver the best exception we can when things are wrong * Initialize securitymanager earlier * Fix too-loud error logging of Natives root check
bug_after_refactoring: @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { node . close () ; } <s> @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { node . close () ; } <s> Improve path management on init: * Properly support symlinks (e.g. /tmp -> /mnt/tmp) * Check all configured paths up front and deliver the best exception we can when things are wrong * Initialize securitymanager earlier * Fix too-loud error logging of Natives root check
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( node ) != null ) { node . close () ; } }
fix_after_refactoring: @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { if ( ( node ) != null ) { node . close () ; } }
√ fix_prediction_before: @ java.lang.Override public void run () { if ( ( node ) != null ) { node . close () ; } }
√ fix_prediction_after: @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { if ( ( node ) != null ) { node . close () ; } }

line_index: 1825
bug_before_refactoring: public void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; } <s> public void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; } <s> GroceryList bug fixed. Arraylist copy
bug_after_refactoring: public void cdibgxstptwmhdwabwzq ( int position ) { groceryList . remove ( position ) ; } <s> public void cdibgxstptwmhdwabwzq ( int position ) { groceryList . remove ( position ) ; } <s> GroceryList bug fixed. Arraylist copy
fix_before_refactoring: private void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; }
fix_after_refactoring: private void cdibgxstptwmhdwabwzq ( int position ) { groceryList . remove ( position ) ; }
√ fix_prediction_before: private void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; }
√ fix_prediction_after: private void cdibgxstptwmhdwabwzq ( int position ) { groceryList . remove ( position ) ; }

line_index: 1826
bug_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> Bugs fixed
bug_after_refactoring: @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> Bugs fixed
fix_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
fix_after_refactoring: @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
√ fix_prediction_before: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
√ fix_prediction_after: @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}

line_index: 1839
bug_before_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> Add "to top"  bug fix  etc.
bug_after_refactoring: @ java.lang.Override public void hlnxkgotsncwwrybvxvv ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "hlnxkgotsncwwrybvxvv" ) ; } <s> @ java.lang.Override public void hlnxkgotsncwwrybvxvv ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "hlnxkgotsncwwrybvxvv" ) ; } <s> Add "to top"  bug fix  etc.
fix_before_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) {}
fix_after_refactoring: @ java.lang.Override public void hlnxkgotsncwwrybvxvv ( retrofit.RetrofitError error ) {}
√ fix_prediction_before: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) {}
√ fix_prediction_after: @ java.lang.Override public void hlnxkgotsncwwrybvxvv ( retrofit.RetrofitError error ) {}

line_index: 1848
bug_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
bug_after_refactoring: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; } <s> public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
fix_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
fix_after_refactoring: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; }
√ fix_prediction_before: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
√ fix_prediction_after: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; }

line_index: 1855
bug_before_refactoring: protected void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> protected void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
bug_after_refactoring: protected void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> protected void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
fix_before_refactoring: public void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; }
fix_after_refactoring: public void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; }
√ fix_prediction_before: public void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; }
√ fix_prediction_after: public void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; }

line_index: 1883
bug_before_refactoring: public long getGymOffense () { return gymOffense . get () ; } <s> public long getGymOffense () { return gymOffense . get () ; } <s> Fixing Merge Errors with double column
bug_after_refactoring: public long pomzkztncxhxobqcwbnm () { return gymOffense . get () ; } <s> public long pomzkztncxhxobqcwbnm () { return gymOffense . get () ; } <s> Fixing Merge Errors with double column
fix_before_refactoring: public double getGymOffense () { return gymOffense . get () ; }
fix_after_refactoring: public double pomzkztncxhxobqcwbnm () { return gymOffense . get () ; }
√ fix_prediction_before: public double getGymOffense () { return gymOffense . get () ; }
√ fix_prediction_after: public double pomzkztncxhxobqcwbnm () { return gymOffense . get () ; }

line_index: 1888
bug_before_refactoring: public algorithms.heap.HeapTreeNode clone () { try { super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> public algorithms.heap.HeapTreeNode clone () { try { super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> solved bugs on dictionary still to do in heap
bug_after_refactoring: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { try { super . pllvlwjcejedhpijfhls () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { try { super . pllvlwjcejedhpijfhls () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> solved bugs on dictionary still to do in heap
fix_before_refactoring: public algorithms.heap.HeapTreeNode clone () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }
fix_after_refactoring: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }
√ fix_prediction_before: public algorithms.heap.HeapTreeNode clone () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }
√ fix_prediction_after: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }

line_index: 1913
bug_before_refactoring: public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
bug_after_refactoring: public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) {}

line_index: 1920
bug_before_refactoring: @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
bug_after_refactoring: @ org.spine3.server.aggregate.Apply public void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
fix_before_refactoring: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
fix_after_refactoring: @ org.spine3.server.aggregate.Apply private void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; }
√ fix_prediction_before: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
√ fix_prediction_after: @ org.spine3.server.aggregate.Apply private void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; }

line_index: 1921
bug_before_refactoring: @ org.junit.Test public final void testLoadDefaultConfiguration () { fail ( "Not yet implemented" ) ; } <s> @ org.junit.Test public final void testLoadDefaultConfiguration () { fail ( "Not yet implemented" ) ; } <s> Error fixed:  es.eurohelp.opendata.aldapa.api.configuration.test does not exist
bug_after_refactoring: @ org.junit.Test public final void ympxjezrmbipwxsakqzg () { fail ( "Not yet implemented" ) ; } <s> @ org.junit.Test public final void ympxjezrmbipwxsakqzg () { fail ( "Not yet implemented" ) ; } <s> Error fixed:  es.eurohelp.opendata.aldapa.api.configuration.test does not exist
fix_before_refactoring: @ org.junit.Test public final void testLoadDefaultConfiguration () {}
fix_after_refactoring: @ org.junit.Test public final void ympxjezrmbipwxsakqzg () {}
√ fix_prediction_before: @ org.junit.Test public final void testLoadDefaultConfiguration () {}
√ fix_prediction_after: @ org.junit.Test public final void ympxjezrmbipwxsakqzg () {}

line_index: 1923
bug_before_refactoring: protected final int getRetryMaxAttempts () { return retryMaxAttempts ; } <s> protected final int getRetryMaxAttempts () { return retryMaxAttempts ; } <s> Fixed Freemarker template issue accessing NodeDetails object
bug_after_refactoring: protected final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; } <s> protected final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; } <s> Fixed Freemarker template issue accessing NodeDetails object
fix_before_refactoring: public final int getRetryMaxAttempts () { return retryMaxAttempts ; }
fix_after_refactoring: public final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; }
√ fix_prediction_before: public final int getRetryMaxAttempts () { return retryMaxAttempts ; }
√ fix_prediction_after: public final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; }

line_index: 1930
bug_before_refactoring: @ java.lang.Override public void run () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> @ java.lang.Override public void run () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> Fixed bug that could not fetch transaction history from in-memory
bug_after_refactoring: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> Fixed bug that could not fetch transaction history from in-memory
fix_before_refactoring: @ java.lang.Override public void run () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
fix_after_refactoring: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
√ fix_prediction_after: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }

line_index: 1931
bug_before_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> Fixed rotation issues and ship loading issues
bug_after_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> Fixed rotation issues and ship loading issues
fix_before_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return theShipWorldServer . OriginWorld () . playerEntities ; }
fix_after_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return theShipWorldServer . OriginWorld () . playerEntities ; }
√ fix_prediction_before: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return theShipWorldServer . OriginWorld () . playerEntities ; }
√ fix_prediction_after: public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return theShipWorldServer . OriginWorld () . playerEntities ; }

line_index: 1942
bug_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> fixed problem with sender in profile
bug_after_refactoring: public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> fixed problem with sender in profile
fix_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
fix_after_refactoring: public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
√ fix_prediction_before: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
√ fix_prediction_after: public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;

line_index: 1951
bug_before_refactoring: public java.lang.String getPath () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> public java.lang.String getPath () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> Fix LookupPath parsing  Issue: SPR-15397
bug_after_refactoring: public java.lang.String ynnmlkqlapaknebykdxj () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> public java.lang.String ynnmlkqlapaknebykdxj () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> Fix LookupPath parsing  Issue: SPR-15397
fix_before_refactoring: public java.lang.String getPath () { return this . path ; }
fix_after_refactoring: public java.lang.String ynnmlkqlapaknebykdxj () { return this . path ; }
√ fix_prediction_before: public java.lang.String getPath () { return this . path ; }
√ fix_prediction_after: public java.lang.String ynnmlkqlapaknebykdxj () { return this . path ; }

line_index: 1975
bug_before_refactoring: protected void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> protected void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
bug_after_refactoring: protected void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> protected void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
fix_before_refactoring: public void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; }
fix_after_refactoring: public void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; }
√ fix_prediction_before: public void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; }
√ fix_prediction_after: public void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; }

line_index: 1998
bug_before_refactoring: public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
bug_after_refactoring: public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) {}

line_index: 2009
bug_before_refactoring: protected void emptyCheckedUserNames () { checkedUsernames . clear () ; if ( checkedUsernames . isEmpty () ) java.lang.System.out . println ( "2. emptying checked user names..." ) ; } <s> protected void emptyCheckedUserNames () { checkedUsernames . clear () ; if ( checkedUsernames . isEmpty () ) java.lang.System.out . println ( "2. emptying checked user names..." ) ; } <s> Time Simulation bug fixed
bug_after_refactoring: protected void skiydauyjukoswddbzup () { checkedUsernames . clear () ; if ( checkedUsernames . isEmpty () ) java.lang.System.out . println ( "2. emptying checked user names..." ) ; } <s> protected void skiydauyjukoswddbzup () { checkedUsernames . clear () ; if ( checkedUsernames . isEmpty () ) java.lang.System.out . println ( "2. emptying checked user names..." ) ; } <s> Time Simulation bug fixed
fix_before_refactoring: protected void emptyCheckedUserNames () { checkedUsernames . clear () ; }
fix_after_refactoring: protected void skiydauyjukoswddbzup () { checkedUsernames . clear () ; }
√ fix_prediction_before: protected void emptyCheckedUserNames () { checkedUsernames . clear () ; }
√ fix_prediction_after: protected void skiydauyjukoswddbzup () { checkedUsernames . clear () ; }

line_index: 2020
bug_before_refactoring: @ java.lang.Override public java.lang.String getAdminHost () { java.lang.String adminHost = settings . getAdminHost () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . getAdminHost () ; } <s> @ java.lang.Override public java.lang.String getAdminHost () { java.lang.String adminHost = settings . getAdminHost () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . getAdminHost () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
bug_after_refactoring: @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { java.lang.String adminHost = settings . uwvuiormpiioilawojfh () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . uwvuiormpiioilawojfh () ; } <s> @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { java.lang.String adminHost = settings . uwvuiormpiioilawojfh () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . uwvuiormpiioilawojfh () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
fix_before_refactoring: @ java.lang.Override public java.lang.String getAdminHost () { return settings . getAdminHost () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { return settings . uwvuiormpiioilawojfh () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getAdminHost () { return settings . getAdminHost () ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { return settings . uwvuiormpiioilawojfh () ; }

line_index: 2033
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
bug_after_refactoring: public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
fix_after_refactoring: public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
√ fix_prediction_after: public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }

line_index: 2061
bug_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> fix bug due to section null for about tab
bug_after_refactoring: public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> fix bug due to section null for about tab
fix_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
fix_after_refactoring: public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
√ fix_prediction_before: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
√ fix_prediction_after: public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }

