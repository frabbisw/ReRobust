line_index: 2
bug_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
bug_after_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus hgenarsmgumfcmxewruq ) { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus hgenarsmgumfcmxewruq ) { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; } <s> fixed test bug. fixed tyle error.
fix_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
fix_after_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; }
√ fix_prediction_before: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
√ fix_prediction_after: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; }

line_index: 5
bug_before_refactoring: private static native void _imaqGetCharCount ( long set ) ; <s> private static native void _imaqGetCharCount ( long set ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) ; <s> private static native void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetCharCount ( long set ) {}
fix_after_refactoring: private static void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) {}
√ fix_prediction_before: private static void _imaqGetCharCount ( long set ) {}
√ fix_prediction_after: private static void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) {}

line_index: 7
bug_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
bug_after_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + sleleopwbmitfiplioyz ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + sleleopwbmitfiplioyz ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
fix_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
fix_after_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) {}
√ fix_prediction_before: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
√ fix_prediction_after: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) {}

line_index: 18
bug_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
bug_after_refactoring: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
fix_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
fix_after_refactoring: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { this . preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; }
√ fix_prediction_before: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
√ fix_prediction_after: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { this . preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; }

line_index: 45
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
bug_after_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( nbiqgmtvyfnciysqgwfs . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( nbiqgmtvyfnciysqgwfs . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
fix_after_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { finish () ; }
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
√ fix_prediction_after: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { finish () ; }

line_index: 48
bug_before_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> fixed javac compilation problem
bug_after_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > ivorrqnkquahnphupozj ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > ivorrqnkquahnphupozj ) ; <s> fixed javac compilation problem
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > ivorrqnkquahnphupozj ) ;
√ fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
√ fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > ivorrqnkquahnphupozj ) ;

line_index: 78
bug_before_refactoring: private static native void _imaqGetImageType ( long image , long type ) ; <s> private static native void _imaqGetImageType ( long image , long type ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) ; <s> private static native void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetImageType ( long image , long type ) {}
fix_after_refactoring: private static void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) {}
√ fix_prediction_before: private static void _imaqGetImageType ( long image , long type ) {}
√ fix_prediction_after: private static void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) {}

line_index: 108
bug_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
bug_after_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
fix_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { return false ; }
√ fix_prediction_before: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
√ fix_prediction_after: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { return false ; }

line_index: 123
bug_before_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
bug_after_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; } <s> Bug fixes: tests plus removed deprecated imports
fix_before_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
fix_after_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; }
√ fix_prediction_before: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
√ fix_prediction_after: public void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; }

line_index: 128
bug_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
bug_after_refactoring: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } <s> public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } <s> Fixing arraylist issues found in testing.
fix_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
fix_after_refactoring: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } }
√ fix_prediction_before: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
√ fix_prediction_after: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } }

line_index: 135
bug_before_refactoring: private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) ; <s> private static native void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqUnflatten ( long image , long data , int size ) {}
fix_after_refactoring: private static void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) {}
√ fix_prediction_before: private static void _imaqUnflatten ( long image , long data , int size ) {}
√ fix_prediction_after: private static void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) {}

line_index: 142
bug_before_refactoring: protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; } <s> protected void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
fix_after_refactoring: private void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; }
√ fix_prediction_before: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
√ fix_prediction_after: private void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; }

line_index: 155
bug_before_refactoring: public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> fixes network model bugs
bug_after_refactoring: public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzvvkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzvvkvnjxspjbcRemoved ( jzxedbkzvvkvnjxspjbc ) ; } } <s> public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzvvkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzvvkvnjxspjbcRemoved ( jzxedbkzvvkvnjxspjbc ) ; } } <s> fixes network model bugs
fix_before_refactoring: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } }
fix_after_refactoring: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzvvkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzvvkvnjxspjbcRemoved ( jzxedbkzvvkvnjxspjbc ) ; } }
√ fix_prediction_before: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } }
√ fix_prediction_after: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzvvkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzvvkvnjxspjbcRemoved ( jzxedbkzvvkvnjxspjbc ) ; } }

line_index: 158
bug_before_refactoring: public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> Updated RootShell  Fixed some bugs related to re-using commands (disallowed command re-use)
bug_after_refactoring: public static void runRootCommand ( com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; } <s> public static void runRootCommand ( com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; } <s> Updated RootShell  Fixed some bugs related to re-using commands (disallowed command re-use)
fix_before_refactoring: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; }
fix_after_refactoring: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; }
√ fix_prediction_before: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; }
√ fix_prediction_after: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; }

line_index: 178
bug_before_refactoring: public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
bug_after_refactoring: public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) {}

line_index: 186
bug_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> Fixed merge problems
bug_after_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) {} <s> Fixed merge problems
fix_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
fix_after_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) ;
√ fix_prediction_before: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
√ fix_prediction_after: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) ;

line_index: 198
bug_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
bug_after_refactoring: public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . formatDouble ( inqbvugyseznxavcnfcp ) ) ; } <s> public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . formatDouble ( inqbvugyseznxavcnfcp ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
fix_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
fix_after_refactoring: public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . format ( inqbvugyseznxavcnfcp ) ) ; }
√ fix_prediction_before: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
√ fix_prediction_after: public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . format ( inqbvugyseznxavcnfcp ) ) ; }

line_index: 201
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; } <s> protected void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
fix_after_refactoring: public void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
√ fix_prediction_after: public void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; }

line_index: 222
bug_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) { if ( bqdzlejorfdimatcjrjf == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) { if ( bqdzlejorfdimatcjrjf == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
fix_after_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) {}
√ fix_prediction_before: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
√ fix_prediction_after: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) {}

line_index: 234
bug_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
bug_after_refactoring: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
fix_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
fix_after_refactoring: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; }
√ fix_prediction_before: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
√ fix_prediction_after: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; }

line_index: 261
bug_before_refactoring: public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
bug_after_refactoring: public void outputNames ( java.io.File naqzvqjssmsagvhpeoqe ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void outputNames ( java.io.File naqzvqjssmsagvhpeoqe ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
fix_before_refactoring: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
fix_after_refactoring: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
√ fix_prediction_before: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
√ fix_prediction_after: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }

line_index: 303
bug_before_refactoring: protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
bug_after_refactoring: protected void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
fix_before_refactoring: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
fix_after_refactoring: public void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_before: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_after: public void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }

line_index: 311
bug_before_refactoring: public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> fixing return null bug
bug_after_refactoring: public java.util.Set < TermCounter > get ( java.lang.String navaiwqxzjwcfzfbanil ) {} <s> public java.util.Set < TermCounter > get ( java.lang.String navaiwqxzjwcfzfbanil ) {} <s> fixing return null bug
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 312
bug_before_refactoring: protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
fix_after_refactoring: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
√ fix_prediction_before: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
√ fix_prediction_after: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }

line_index: 330
bug_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { if ( hzryalaqdzwapwwmkrev != ( - 1 ) ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; } } <s> private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { if ( hzryalaqdzwapwwmkrev != ( - 1 ) ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
fix_after_refactoring: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; }
√ fix_prediction_before: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
√ fix_prediction_after: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; }

line_index: 339
bug_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
bug_after_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer , boolean rrhjgyziemjtnstekyxc ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer , boolean rrhjgyziemjtnstekyxc ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
fix_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
fix_after_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer , boolean rrhjgyziemjtnstekyxc ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; setSaturation ( 254 ) ; }
√ fix_prediction_before: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
√ fix_prediction_after: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer , boolean rrhjgyziemjtnstekyxc ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; setSaturation ( 254 ) ; }

line_index: 353
bug_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
bug_after_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) { try { emzwhrzjcdijgeyluvsl . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) { try { emzwhrzjcdijgeyluvsl . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
fix_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
fix_after_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) {}
√ fix_prediction_before: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
√ fix_prediction_after: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) {}

line_index: 361
bug_before_refactoring: public java.lang.String reverseString1 ( java.lang.String str ) {} <s> public java.lang.String reverseString1 ( java.lang.String str ) {} <s> Adding return statements to fix the compile errors - please write code
bug_after_refactoring: public java.lang.String reverseString1 ( java.lang.String sygxxkhkndguoermlqlh ) {} <s> public java.lang.String reverseString1 ( java.lang.String sygxxkhkndguoermlqlh ) {} <s> Adding return statements to fix the compile errors - please write code
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 392
bug_before_refactoring: public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> fixed dumb bug
bug_after_refactoring: public void add ( int vnsyefleifqxkxoeswuq ) { if ( vnsyefleifqxkxoeswuq >= 0 ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; } } <s> public void add ( int vnsyefleifqxkxoeswuq ) { if ( vnsyefleifqxkxoeswuq >= 0 ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; } } <s> fixed dumb bug
fix_before_refactoring: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
fix_after_refactoring: public void add ( int vnsyefleifqxkxoeswuq ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; }
√ fix_prediction_before: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
√ fix_prediction_after: public void add ( int vnsyefleifqxkxoeswuq ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; }

line_index: 463
bug_before_refactoring: public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
bug_after_refactoring: public void setDescription ( java.lang.String qulnigowcughxizqrroc ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void setDescription ( java.lang.String qulnigowcughxizqrroc ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
fix_before_refactoring: public void setDescription ( java.lang.String string ) {}
fix_after_refactoring: public void setDescription ( java.lang.String qulnigowcughxizqrroc ) {}
√ fix_prediction_before: public void setDescription ( java.lang.String string ) {}
√ fix_prediction_after: public void setDescription ( java.lang.String qulnigowcughxizqrroc ) {}

line_index: 473
bug_before_refactoring: public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> Solved a problem with the cache nodes
bug_after_refactoring: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( sdkarkvcmyytkqhqlcqf ) ) ) ) ; sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; } <s> public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( sdkarkvcmyytkqhqlcqf ) ) ) ) ; sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; } <s> Solved a problem with the cache nodes
fix_before_refactoring: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
fix_after_refactoring: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; }
√ fix_prediction_before: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
√ fix_prediction_after: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; }

line_index: 480
bug_before_refactoring: private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> Fixing bugs
bug_after_refactoring: private static native int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) ; <s> private static native int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) ; <s> Fixing bugs
fix_before_refactoring: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
fix_after_refactoring: private static int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) { return 0 ; }
√ fix_prediction_before: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
√ fix_prediction_after: private static int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) { return 0 ; }

line_index: 483
bug_before_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> PropertyMutationMaster not saving issue fix [PHOENIX-350]
bug_after_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( this . relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; } <s> @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( this . relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; } <s> PropertyMutationMaster not saving issue fix [PHOENIX-350]
fix_before_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( relations . containsKey ( paramName ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; }
√ fix_prediction_before: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( relations . containsKey ( paramName ) ) ; }
√ fix_prediction_after: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; }

line_index: 510
bug_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
bug_after_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
fix_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
fix_after_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; }
√ fix_prediction_before: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
√ fix_prediction_after: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; }

line_index: 515
bug_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { synchronized ( parameters ) { parameters . remove ( oiltndmspgsnungdcgep ) ; } fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { synchronized ( parameters ) { parameters . remove ( oiltndmspgsnungdcgep ) ; } fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
fix_after_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { parameters . remove ( oiltndmspgsnungdcgep ) ; fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; }
√ fix_prediction_before: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
√ fix_prediction_after: @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { parameters . remove ( oiltndmspgsnungdcgep ) ; fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; }

line_index: 523
bug_before_refactoring: void onSuccess ( T response , int type ) ; <s> void onSuccess ( T response , int type ) ; <s> fixed bug with markers removed unused code
bug_after_refactoring: void onSuccess ( T xhyvquoehwrmjtiducoh , int mlbplzkxfjzzgmgvzdml ) ; <s> void onSuccess ( T xhyvquoehwrmjtiducoh , int mlbplzkxfjzzgmgvzdml ) ; <s> fixed bug with markers removed unused code
fix_before_refactoring: void onSuccess ( T response ) ;
fix_after_refactoring: void onSuccess ( T xhyvquoehwrmjtiducoh ) ;
√ fix_prediction_before: void onSuccess ( T response ) ;
√ fix_prediction_after: void onSuccess ( T xhyvquoehwrmjtiducoh ) ;

line_index: 536
bug_before_refactoring: private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) ; <s> private static native void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetMaskOffset ( long image , long offset ) {}
fix_after_refactoring: private static void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) {}
√ fix_prediction_before: private static void _imaqSetMaskOffset ( long image , long offset ) {}
√ fix_prediction_after: private static void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) {}

line_index: 544
bug_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
bug_after_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) { android.util.Log . d ( "Ludens" , ( "vjnxlokcnjmdoczmadjy: " + ( vjnxlokcnjmdoczmadjy . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) { android.util.Log . d ( "Ludens" , ( "vjnxlokcnjmdoczmadjy: " + ( vjnxlokcnjmdoczmadjy . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
fix_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
fix_after_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) {}
√ fix_prediction_before: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
√ fix_prediction_after: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) {}

line_index: 552
bug_before_refactoring: protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ; <s> protected native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
fix_after_refactoring: private native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ;
√ fix_prediction_before: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
√ fix_prediction_after: private native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ;

line_index: 564
bug_before_refactoring: void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> versuch serverbug zu fixen
bug_after_refactoring: vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz , java.lang.String yyoffuujlaoyjfkcscbh ) ; <s> vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz , java.lang.String yyoffuujlaoyjfkcscbh ) ; <s> versuch serverbug zu fixen
fix_before_refactoring: void sendImageToServer ( java.lang.String id ) ;
fix_after_refactoring: vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz ) ;
√ fix_prediction_before: void sendImageToServer ( java.lang.String id ) ;
√ fix_prediction_after: vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz ) ;

line_index: 567
bug_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
fix_after_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) {}
√ fix_prediction_before: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
√ fix_prediction_after: @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) {}

line_index: 573
bug_before_refactoring: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> Fix #28: Moved ITopologyEventCollector client callsites to channel methods  -this avoids the problem where the events would also be called for the replicated information  on the passive -we can also now re-enable the assertions to verify event call symmetry in ManagementTopologyEventCollector
bug_after_refactoring: @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( bdzruxfyxrptjgqupvuh ) ) ; } this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; } <s> @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( bdzruxfyxrptjgqupvuh ) ) ; } this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; } <s> Fix #28: Moved ITopologyEventCollector client callsites to channel methods  -this avoids the problem where the events would also be called for the replicated information  on the passive -we can also now re-enable the assertions to verify event call symmetry in ManagementTopologyEventCollector
fix_before_refactoring: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; this . connectedClients . remove ( client ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( bdzruxfyxrptjgqupvuh ) ) ; this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; }
√ fix_prediction_before: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; this . connectedClients . remove ( client ) ; }
√ fix_prediction_after: @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( bdzruxfyxrptjgqupvuh ) ) ; this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; }

line_index: 603
bug_before_refactoring: protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
fix_after_refactoring: public void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_before: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_after: public void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; }

line_index: 605
bug_before_refactoring: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
bug_after_refactoring: public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) {}

line_index: 611
bug_before_refactoring: private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> resolved file name issues
bug_after_refactoring: private void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } } <s> private void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } } <s> resolved file name issues
fix_before_refactoring: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
fix_after_refactoring: public void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } }
√ fix_prediction_before: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
√ fix_prediction_after: public void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } }

line_index: 629
bug_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
bug_after_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
fix_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
fix_after_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) {}
√ fix_prediction_before: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
√ fix_prediction_after: @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) {}

line_index: 655
bug_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
bug_after_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
fix_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
fix_after_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) {}
√ fix_prediction_before: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_after: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) {}

line_index: 676
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
bug_after_refactoring: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_after: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }

line_index: 685
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
√ fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; }

line_index: 688
bug_before_refactoring: public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
bug_after_refactoring: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { if ( ( max_Char ( jygsacqlnzzfdmpjojkv , 20 ) ) && ( ( jygsacqlnzzfdmpjojkv . length () ) >= 1 ) ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { if ( ( max_Char ( jygsacqlnzzfdmpjojkv , 20 ) ) && ( ( jygsacqlnzzfdmpjojkv . length () ) >= 1 ) ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
fix_before_refactoring: public void setUsername ( java.lang.String username ) { this . username = username ; }
fix_after_refactoring: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; }
√ fix_prediction_before: public void setUsername ( java.lang.String username ) { this . username = username ; }
√ fix_prediction_after: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; }

line_index: 701
bug_before_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
fix_after_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; }
√ fix_prediction_before: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
√ fix_prediction_after: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; }

line_index: 712
bug_before_refactoring: boolean contents ( T item ) ; <s> boolean contents ( T item ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
bug_after_refactoring: boolean contents ( T iistltgpbpraaeotswec ) ; <s> boolean contents ( T iistltgpbpraaeotswec ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
fix_before_refactoring: boolean contains ( T item ) ;
fix_after_refactoring: boolean contains ( T iistltgpbpraaeotswec ) ;
√ fix_prediction_before: boolean contains ( T item ) ;
√ fix_prediction_after: boolean contains ( T iistltgpbpraaeotswec ) ;

line_index: 780
bug_before_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> BugFixed FileToTranslate builder
bug_after_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; } <s> BugFixed FileToTranslate builder
fix_before_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
fix_after_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; }
√ fix_prediction_before: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
√ fix_prediction_after: public com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; }

line_index: 782
bug_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
bug_after_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
fix_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) {}
√ fix_prediction_before: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_after: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) {}

line_index: 789
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka , javax.servlet.http.HttpServletRequest mfvmfvlznlohataxmbvb ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka , javax.servlet.http.HttpServletRequest mfvmfvlznlohataxmbvb ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; }
√ fix_prediction_before: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
√ fix_prediction_after: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; }

line_index: 801
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; } <s> protected void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
fix_after_refactoring: public void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
√ fix_prediction_after: public void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; }

line_index: 828
bug_before_refactoring: private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) ; <s> private static native void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
fix_after_refactoring: private static void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) {}
√ fix_prediction_before: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
√ fix_prediction_after: private static void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) {}

line_index: 829
bug_before_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
bug_after_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
fix_before_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
fix_after_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; }
√ fix_prediction_before: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
√ fix_prediction_after: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; }

line_index: 852
bug_before_refactoring: private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
bug_after_refactoring: private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
fix_before_refactoring: private void setHeight ( final int height ) { this . height = height ; }
fix_after_refactoring: private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz ; }
√ fix_prediction_before: private void setHeight ( final int height ) { this . height = height ; }
√ fix_prediction_after: private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz ; }

line_index: 854
bug_before_refactoring: public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> money changes + bugfixes
bug_after_refactoring: public void addBank ( int dzhmnlhypqnlmyrybnyz ) { if ( ( ( ( Cards ) ( hand . get ( dzhmnlhypqnlmyrybnyz ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; } } <s> public void addBank ( int dzhmnlhypqnlmyrybnyz ) { if ( ( ( ( Cards ) ( hand . get ( dzhmnlhypqnlmyrybnyz ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; } } <s> money changes + bugfixes
fix_before_refactoring: public void addBank ( int index ) { bank . add ( hand . remove ( index ) ) ; }
fix_after_refactoring: public void addBank ( int dzhmnlhypqnlmyrybnyz ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; }
√ fix_prediction_before: public void addBank ( int index ) { bank . add ( hand . remove ( index ) ) ; }
√ fix_prediction_after: public void addBank ( int dzhmnlhypqnlmyrybnyz ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; }

line_index: 860
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
bug_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
√ fix_prediction_after: @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; }

line_index: 875
bug_before_refactoring: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> Add build operation listener and fix html append problem
bug_after_refactoring: @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { started ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { started ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> Add build operation listener and fix html append problem
fix_before_refactoring: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
fix_after_refactoring: @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { start ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
√ fix_prediction_before: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
√ fix_prediction_after: @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { start ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }

line_index: 894
bug_before_refactoring: public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
bug_after_refactoring: public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { if ( baksotirdwxigbnsgism == null ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; } else { java.lang.Sybaksotirdwxigbnsgismem.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { if ( baksotirdwxigbnsgism == null ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; } else { java.lang.Sybaksotirdwxigbnsgismem.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
fix_before_refactoring: public void setST ( main.java.DisplayST st ) { this . st = st ; }
fix_after_refactoring: public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; }
√ fix_prediction_before: public void setST ( main.java.DisplayST st ) { this . st = st ; }
√ fix_prediction_after: public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; }

line_index: 902
bug_before_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
bug_after_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsmkbjynghqsytiuarji , com.fasterxml.jackson.databind.DeserializationContext zqlrqcxizcrextdamfsm ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsmkbjynghqsytiuarji , com.fasterxml.jackson.databind.DeserializationContext zqlrqcxizcrextdamfsm ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 913
bug_before_refactoring: private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
fix_after_refactoring: private static long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) { return 0 ; }
√ fix_prediction_before: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
√ fix_prediction_after: private static long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) { return 0 ; }

line_index: 933
bug_before_refactoring: public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; } <s> public void error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
fix_after_refactoring: public boolean error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; }
√ fix_prediction_before: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
√ fix_prediction_after: public boolean error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; }

line_index: 936
bug_before_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
bug_after_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; } <s> Fix test error
fix_before_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
fix_after_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; }
√ fix_prediction_before: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
√ fix_prediction_after: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; }

line_index: 954
bug_before_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
bug_after_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; return this ; } <s> Bug fixing...
fix_before_refactoring: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
fix_after_refactoring: public void setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; }
√ fix_prediction_before: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
√ fix_prediction_after: public void setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; }

line_index: 961
bug_before_refactoring: private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> Fixed bug in binary operation application
bug_after_refactoring: private boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; } <s> private boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
fix_after_refactoring: protected boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; }
√ fix_prediction_before: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
√ fix_prediction_after: protected boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; }

line_index: 963
bug_before_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fixed some merge errors with c.close.
bug_after_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fixed some merge errors with c.close.
fix_before_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { finish () ; return true ; }
fix_after_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { finish () ; return true ; }
√ fix_prediction_before: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { finish () ; return true ; }
√ fix_prediction_after: public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { finish () ; return true ; }

line_index: 974
bug_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
bug_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int otbesrsybznighnxlkdl ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int otbesrsybznighnxlkdl ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
fix_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
fix_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
√ fix_prediction_before: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
√ fix_prediction_after: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }

line_index: 982
bug_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
bug_after_refactoring: @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( esurufaiadiaxshzrvqv . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( esurufaiadiaxshzrvqv . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
fix_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) {}
fix_after_refactoring: @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) {}
√ fix_prediction_before: @ java.lang.Override public void newClient ( Airport.Client client ) {}
√ fix_prediction_after: @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) {}

line_index: 983
bug_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
bug_after_refactoring: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) { java.lang.System.err . println ( ( "something something uerwpgezlnfeozjrqgwm from " + ( uerwpgezlnfeozjrqgwm . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) { java.lang.System.err . println ( ( "something something uerwpgezlnfeozjrqgwm from " + ( uerwpgezlnfeozjrqgwm . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
fix_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
fix_after_refactoring: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) {}
√ fix_prediction_before: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
√ fix_prediction_after: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) {}

line_index: 1007
bug_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
bug_after_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) { this . dataListenings . remove ( mjytjnqkgszwtjdayjtw ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) { this . dataListenings . remove ( mjytjnqkgszwtjdayjtw ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
fix_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
fix_after_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) {}
√ fix_prediction_before: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
√ fix_prediction_after: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) {}

line_index: 1012
bug_before_refactoring: private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) ; <s> private static native long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
fix_after_refactoring: private static long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) { return 0 ; }
√ fix_prediction_before: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
√ fix_prediction_after: private static long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) { return 0 ; }

line_index: 1037
bug_before_refactoring: public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; } <s> public void replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
fix_after_refactoring: public boolean replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { return this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; }
√ fix_prediction_before: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
√ fix_prediction_after: public boolean replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { return this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; }

line_index: 1063
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
bug_after_refactoring: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) { if ( ( texzewlgbbrtbeaenjzz == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) { if ( ( texzewlgbbrtbeaenjzz == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) {}
√ fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) {}
√ fix_prediction_after: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) {}

line_index: 1070
bug_before_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> Fixed issue #4273
bug_after_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ; <s> Fixed issue #4273
fix_before_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
fix_after_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ;
√ fix_prediction_before: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
√ fix_prediction_after: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ;

line_index: 1073
bug_before_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ; <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
fix_after_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ;
√ fix_prediction_before: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
√ fix_prediction_after: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ;

line_index: 1100
bug_before_refactoring: public com.svnavigatoru600.domain.users.UserBuilder enabled ( boolean enabled ) { this . user . setEnabled ( enabled ) ; return this ; } <s> public com.svnavigatoru600.domain.users.UserBuilder enabled ( boolean enabled ) { this . user . setEnabled ( enabled ) ; return this ; } <s> bugfix: default value of SMTP port column did not work since smtpPort in User was int  not Integer
bug_after_refactoring: public com.svnavigatoru600.domain.users.UserBuilder brttactddmwnrfxvmumc ( boolean brttactddmwnrfxvmumc ) { this . user . setEnabled ( brttactddmwnrfxvmumc ) ; return this ; } <s> public com.svnavigatoru600.domain.users.UserBuilder brttactddmwnrfxvmumc ( boolean brttactddmwnrfxvmumc ) { this . user . setEnabled ( brttactddmwnrfxvmumc ) ; return this ; } <s> bugfix: default value of SMTP port column did not work since smtpPort in User was int  not Integer
fix_before_refactoring: public com.svnavigatoru600.domain.users.UserBuilder enabled ( final boolean enabled ) { user . setEnabled ( enabled ) ; return this ; }
fix_after_refactoring: public com.svnavigatoru600.domain.users.UserBuilder brttactddmwnrfxvmumc ( final boolean brttactddmwnrfxvmumc ) { user . setEnabled ( brttactddmwnrfxvmumc ) ; return this ; }
√ fix_prediction_before: public com.svnavigatoru600.domain.users.UserBuilder enabled ( final boolean enabled ) { user . setEnabled ( enabled ) ; return this ; }
√ fix_prediction_after: public com.svnavigatoru600.domain.users.UserBuilder brttactddmwnrfxvmumc ( final boolean brttactddmwnrfxvmumc ) { user . setEnabled ( brttactddmwnrfxvmumc ) ; return this ; }

line_index: 1102
bug_before_refactoring: private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) ; <s> private static native long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
fix_after_refactoring: private static long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) { return 0 ; }
√ fix_prediction_before: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
√ fix_prediction_after: private static long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) { return 0 ; }

line_index: 1109
bug_before_refactoring: public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
bug_after_refactoring: public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . xulmfiapnlotpdcnwfda = ( xulmfiapnlotpdcnwfda == null ) ? null : xulmfiapnlotpdcnwfda . trim () ; } <s> public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . xulmfiapnlotpdcnwfda = ( xulmfiapnlotpdcnwfda == null ) ? null : xulmfiapnlotpdcnwfda . trim () ; } <s> Fixed an issue with names of saved searches
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . xulmfiapnlotpdcnwfda = xulmfiapnlotpdcnwfda ; }
√ fix_prediction_before: public void setName ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_after: public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . xulmfiapnlotpdcnwfda = xulmfiapnlotpdcnwfda ; }

line_index: 1129
bug_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> Bugs fixed
bug_after_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) { if ( ( ( mediaPlayer ) != null ) && iihifkbpypnivevpfrpo ) { mediaPlayer . seekTo ( qqwqscshymbqrifdqrpf ) ; } } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) { if ( ( ( mediaPlayer ) != null ) && iihifkbpypnivevpfrpo ) { mediaPlayer . seekTo ( qqwqscshymbqrifdqrpf ) ; } } <s> Bugs fixed
fix_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
fix_after_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) {}
√ fix_prediction_before: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
√ fix_prediction_after: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) {}

line_index: 1138
bug_before_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> Add "to top"  bug fix  etc.
bug_after_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> Add "to top"  bug fix  etc.
fix_before_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) {}
fix_after_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) {}
√ fix_prediction_before: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) {}
√ fix_prediction_after: @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) {}

line_index: 1183
bug_before_refactoring: public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
bug_after_refactoring: public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) {}

line_index: 1201
bug_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> fixed problem with sender in profile
bug_after_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts , net.sharksystem.sharknet.api.Contact vdusgxgjkuojctwifsav ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts , net.sharksystem.sharknet.api.Contact vdusgxgjkuojctwifsav ) ; <s> fixed problem with sender in profile
fix_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
fix_after_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts ) ;
√ fix_prediction_before: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
√ fix_prediction_after: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts ) ;

line_index: 1205
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
bug_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_after: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) {}

line_index: 1211
bug_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
bug_after_refactoring: public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( points -= pjcbueyqwuykoozesdcj ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( points -= pjcbueyqwuykoozesdcj ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
fix_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
fix_after_refactoring: public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( ( points ) - pjcbueyqwuykoozesdcj ) ) ; }
√ fix_prediction_before: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
√ fix_prediction_after: public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( ( points ) - pjcbueyqwuykoozesdcj ) ) ; }

line_index: 1225
bug_before_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
bug_after_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
fix_before_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
fix_after_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; }
√ fix_prediction_before: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
√ fix_prediction_after: public void destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; }

line_index: 1233
bug_before_refactoring: public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
bug_after_refactoring: public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) {}

line_index: 1244
bug_before_refactoring: private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) ; <s> private static native void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
fix_after_refactoring: private static void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) {}
√ fix_prediction_before: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
√ fix_prediction_after: private static void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) {}

line_index: 1261
bug_before_refactoring: protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ; <s> protected native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
fix_after_refactoring: private native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ;
√ fix_prediction_before: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
√ fix_prediction_after: private native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ;

line_index: 1271
bug_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> fix bug due to section null for about tab
bug_after_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( emyykcuzmwtiuibixyud . getItemCount () ) ) ) ; this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( emyykcuzmwtiuibixyud . getItemCount () ) ) ) ; this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; } <s> fix bug due to section null for about tab
fix_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
fix_after_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; }
√ fix_prediction_before: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
√ fix_prediction_after: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; }

