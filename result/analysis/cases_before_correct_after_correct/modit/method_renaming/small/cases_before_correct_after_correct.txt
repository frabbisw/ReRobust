line_index: 4
bug_before_refactoring: private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
bug_after_refactoring: private static boolean uxsuqrdgqkowfbjeocrq ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean uxsuqrdgqkowfbjeocrq ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
fix_before_refactoring: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
fix_after_refactoring: private static boolean uxsuqrdgqkowfbjeocrq ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
√ fix_prediction_before: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
√ fix_prediction_after: private static boolean uxsuqrdgqkowfbjeocrq ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }

line_index: 6
bug_before_refactoring: private static native void _imaqGetCharCount ( long set ) ; <s> private static native void _imaqGetCharCount ( long set ) ; <s> Fixing bugs
bug_after_refactoring: private static native void zywhutbswxvyfuvnchzv ( long set ) ; <s> private static native void zywhutbswxvyfuvnchzv ( long set ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetCharCount ( long set ) {}
fix_after_refactoring: private static void zywhutbswxvyfuvnchzv ( long set ) {}
√ fix_prediction_before: private static void _imaqGetCharCount ( long set ) {}
√ fix_prediction_after: private static void zywhutbswxvyfuvnchzv ( long set ) {}

line_index: 12
bug_before_refactoring: private int getRecommendationCount () { return this . recs ; } <s> private int getRecommendationCount () { return this . recs ; } <s> Fixes for no errors in master or PR
bug_after_refactoring: private int gfqgplegtmehxrnjggge () { return this . recs ; } <s> private int gfqgplegtmehxrnjggge () { return this . recs ; } <s> Fixes for no errors in master or PR
fix_before_refactoring: public int getRecommendationCount () { return this . recs ; }
fix_after_refactoring: public int gfqgplegtmehxrnjggge () { return this . recs ; }
√ fix_prediction_before: public int getRecommendationCount () { return this . recs ; }
√ fix_prediction_after: public int gfqgplegtmehxrnjggge () { return this . recs ; }

line_index: 13
bug_before_refactoring: public int getId () { return se.edette.ordermatcher.Order.id ; } <s> public int getId () { return se.edette.ordermatcher.Order.id ; } <s> Added debug feature. More comments. Minor locale fixes. Fixed Order id not incrementing. Reverse sorting of buy orders.
bug_after_refactoring: public int ibtrpxqsphlonnmbzpey () { return se.edette.ordermatcher.Order.id ; } <s> public int ibtrpxqsphlonnmbzpey () { return se.edette.ordermatcher.Order.id ; } <s> Added debug feature. More comments. Minor locale fixes. Fixed Order id not incrementing. Reverse sorting of buy orders.
fix_before_refactoring: public int getId () { return id ; }
fix_after_refactoring: public int ibtrpxqsphlonnmbzpey () { return id ; }
√ fix_prediction_before: public int getId () { return id ; }
√ fix_prediction_after: public int ibtrpxqsphlonnmbzpey () { return id ; }

line_index: 15
bug_before_refactoring: private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
bug_after_refactoring: private static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> private static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
fix_before_refactoring: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
fix_after_refactoring: public static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
√ fix_prediction_before: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
√ fix_prediction_after: public static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }

line_index: 25
bug_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
bug_after_refactoring: public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; } <s> public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
fix_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
fix_after_refactoring: public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { this . preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; }
√ fix_prediction_before: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
√ fix_prediction_after: public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { this . preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; }

line_index: 34
bug_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
bug_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
fix_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
fix_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
√ fix_prediction_before: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
√ fix_prediction_after: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }

line_index: 39
bug_before_refactoring: public void unregisterNSDService () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> public void unregisterNSDService () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> Fix issues with Android activity lifecycle handling. Ensure restoration of app from saved instance state.
bug_after_refactoring: public void gjewqhjmncmchmevhiex () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> public void gjewqhjmncmchmevhiex () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> Fix issues with Android activity lifecycle handling. Ensure restoration of app from saved instance state.
fix_before_refactoring: public void unregisterNSDService () { if ( ( networkRegistrationListener ) != null ) { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } }
fix_after_refactoring: public void gjewqhjmncmchmevhiex () { if ( ( networkRegistrationListener ) != null ) { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } }
√ fix_prediction_before: public void unregisterNSDService () { if ( ( networkRegistrationListener ) != null ) { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } }
√ fix_prediction_after: public void gjewqhjmncmchmevhiex () { if ( ( networkRegistrationListener ) != null ) { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } }

line_index: 64
bug_before_refactoring: public java.lang.String [] getText () { return text ; } <s> public java.lang.String [] getText () { return text ; } <s> Fixed error (temporary)
bug_after_refactoring: public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return text ; } <s> public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return text ; } <s> Fixed error (temporary)
fix_before_refactoring: public java.lang.String [] getText () { return this . text ; }
fix_after_refactoring: public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return this . text ; }
√ fix_prediction_before: public java.lang.String [] getText () { return this . text ; }
√ fix_prediction_after: public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return this . text ; }

line_index: 77
bug_before_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> fixed javac compilation problem
bug_after_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends MT > clazz ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends MT > clazz ) ; <s> fixed javac compilation problem
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
√ fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
√ fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;

line_index: 80
bug_before_refactoring: private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
fix_after_refactoring: protected boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
√ fix_prediction_before: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
√ fix_prediction_after: protected boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }

line_index: 81
bug_before_refactoring: protected double getBlue () { return this . blue . get () ; } <s> protected double getBlue () { return this . blue . get () ; } <s> Fixed potential bug
bug_after_refactoring: protected double nzxabwirvggwmhnqehyl () { return this . blue . get () ; } <s> protected double nzxabwirvggwmhnqehyl () { return this . blue . get () ; } <s> Fixed potential bug
fix_before_refactoring: public double getBlue () { return this . blue . get () ; }
fix_after_refactoring: public double nzxabwirvggwmhnqehyl () { return this . blue . get () ; }
√ fix_prediction_before: public double getBlue () { return this . blue . get () ; }
√ fix_prediction_after: public double nzxabwirvggwmhnqehyl () { return this . blue . get () ; }

line_index: 85
bug_before_refactoring: protected boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> protected boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean scysdwqdwcbaeaxnazgo ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> protected boolean scysdwqdwcbaeaxnazgo ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; }
fix_after_refactoring: private boolean scysdwqdwcbaeaxnazgo ( java.lang.String name ) { return reserved . containsKey ( name ) ; }
√ fix_prediction_before: private boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; }
√ fix_prediction_after: private boolean scysdwqdwcbaeaxnazgo ( java.lang.String name ) { return reserved . containsKey ( name ) ; }

line_index: 93
bug_before_refactoring: public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
bug_after_refactoring: public synchronized void vlwhihhydrycrgfaiici ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> public synchronized void vlwhihhydrycrgfaiici ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
fix_before_refactoring: protected synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; }
fix_after_refactoring: protected synchronized void vlwhihhydrycrgfaiici ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; }
√ fix_prediction_before: protected synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; }
√ fix_prediction_after: protected synchronized void vlwhihhydrycrgfaiici ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; }

line_index: 117
bug_before_refactoring: private static native void _imaqGetImageType ( long image , long type ) ; <s> private static native void _imaqGetImageType ( long image , long type ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hptuiyfhadqagvywwsjy ( long image , long type ) ; <s> private static native void hptuiyfhadqagvywwsjy ( long image , long type ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetImageType ( long image , long type ) {}
fix_after_refactoring: private static void hptuiyfhadqagvywwsjy ( long image , long type ) {}
√ fix_prediction_before: private static void _imaqGetImageType ( long image , long type ) {}
√ fix_prediction_after: private static void hptuiyfhadqagvywwsjy ( long image , long type ) {}

line_index: 118
bug_before_refactoring: public java.lang.String getAlias () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> public java.lang.String getAlias () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> fix use DS error
bug_after_refactoring: public java.lang.String malebshofokvmeuegubk () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> public java.lang.String malebshofokvmeuegubk () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> fix use DS error
fix_before_refactoring: public java.lang.String getAlias () { return alias ; }
fix_after_refactoring: public java.lang.String malebshofokvmeuegubk () { return alias ; }
√ fix_prediction_before: public java.lang.String getAlias () { return alias ; }
√ fix_prediction_after: public java.lang.String malebshofokvmeuegubk () { return alias ; }

line_index: 123
bug_before_refactoring: protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> protected void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
fix_after_refactoring: public void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
√ fix_prediction_before: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
√ fix_prediction_after: public void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }

line_index: 140
bug_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
fix_after_refactoring: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
√ fix_prediction_before: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
√ fix_prediction_after: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}

line_index: 142
bug_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
bug_after_refactoring: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
fix_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
fix_after_refactoring: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
√ fix_prediction_before: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
√ fix_prediction_after: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }

line_index: 155
bug_before_refactoring: public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
bug_after_refactoring: public void ftoyyhqjaoqnmtcciddu ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void ftoyyhqjaoqnmtcciddu ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
fix_before_refactoring: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
fix_after_refactoring: public void ftoyyhqjaoqnmtcciddu ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
√ fix_prediction_before: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
√ fix_prediction_after: public void ftoyyhqjaoqnmtcciddu ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }

line_index: 166
bug_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
bug_after_refactoring: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
fix_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
fix_after_refactoring: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
√ fix_prediction_before: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
√ fix_prediction_after: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }

line_index: 184
bug_before_refactoring: @ java.lang.Override public java.lang.Integer getAdminPort () { java.lang.Integer adminPort = settings . getAdminPort () ; if ( adminPort == null ) { return 8000 ; } return settings . getAdminPort () ; } <s> @ java.lang.Override public java.lang.Integer getAdminPort () { java.lang.Integer adminPort = settings . getAdminPort () ; if ( adminPort == null ) { return 8000 ; } return settings . getAdminPort () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
bug_after_refactoring: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { java.lang.Integer adminPort = settings . ycukcaaosuqpvexrtdef () ; if ( adminPort == null ) { return 8000 ; } return settings . ycukcaaosuqpvexrtdef () ; } <s> @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { java.lang.Integer adminPort = settings . ycukcaaosuqpvexrtdef () ; if ( adminPort == null ) { return 8000 ; } return settings . ycukcaaosuqpvexrtdef () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
fix_before_refactoring: @ java.lang.Override public java.lang.Integer getAdminPort () { return settings . getAdminPort () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { return settings . ycukcaaosuqpvexrtdef () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.Integer getAdminPort () { return settings . getAdminPort () ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { return settings . ycukcaaosuqpvexrtdef () ; }

line_index: 187
bug_before_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
bug_after_refactoring: private void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
fix_before_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
fix_after_refactoring: public void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
√ fix_prediction_before: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
√ fix_prediction_after: public void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }

line_index: 189
bug_before_refactoring: public void fill () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> public void fill () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> fixed problems with thread speed
bug_after_refactoring: public void befswazqieeusrehhuyz () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> public void befswazqieeusrehhuyz () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> fixed problems with thread speed
fix_before_refactoring: public void fill () { while ( addSample () ) {} }
fix_after_refactoring: public void befswazqieeusrehhuyz () { while ( addSample () ) {} }
√ fix_prediction_before: public void fill () { while ( addSample () ) {} }
√ fix_prediction_after: public void befswazqieeusrehhuyz () { while ( addSample () ) {} }

line_index: 214
bug_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
bug_after_refactoring: public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = ! status ; } <s> public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
fix_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
fix_after_refactoring: public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = status ; }
√ fix_prediction_before: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
√ fix_prediction_after: public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = status ; }

line_index: 220
bug_before_refactoring: protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
fix_after_refactoring: private void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; }
√ fix_prediction_before: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
√ fix_prediction_after: private void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; }

line_index: 231
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
bug_after_refactoring: @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mplayer . play ( originalFile ) ; }
fix_after_refactoring: @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { mplayer . play ( originalFile ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mplayer . play ( originalFile ) ; }
√ fix_prediction_after: @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { mplayer . play ( originalFile ) ; }

line_index: 246
bug_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
bug_after_refactoring: public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
fix_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
fix_after_refactoring: public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = isExported ; }
√ fix_prediction_before: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
√ fix_prediction_after: public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = isExported ; }

line_index: 281
bug_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
bug_after_refactoring: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
fix_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
fix_after_refactoring: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
√ fix_prediction_before: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
√ fix_prediction_after: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }

line_index: 296
bug_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> Fixed merge problems
bug_after_refactoring: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) {} <s> Fixed merge problems
fix_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
fix_after_refactoring: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) ;
√ fix_prediction_before: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
√ fix_prediction_after: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) ;

line_index: 297
bug_before_refactoring: private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> Fixed bug in binary operation application
bug_after_refactoring: private boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; } <s> private boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
fix_after_refactoring: protected boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; }
√ fix_prediction_before: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
√ fix_prediction_after: protected boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; }

line_index: 301
bug_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> @ java.lang.Override protected void onResume () { super . onResume () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> profile tracker bug detected & fixed
bug_after_refactoring: @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> profile tracker bug detected & fixed
fix_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; }
fix_after_refactoring: @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; }
√ fix_prediction_before: @ java.lang.Override protected void onResume () { super . onResume () ; }
√ fix_prediction_after: @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; }

line_index: 305
bug_before_refactoring: protected double getValue () { return mValue ; } <s> protected double getValue () { return mValue ; } <s> Fixed problems with Satoshi: not updating properly  JSON errors  and update time
bug_after_refactoring: protected double yynkwebevvxvivugzjra () { return mValue ; } <s> protected double yynkwebevvxvivugzjra () { return mValue ; } <s> Fixed problems with Satoshi: not updating properly  JSON errors  and update time
fix_before_refactoring: public double getValue () { return mValue ; }
fix_after_refactoring: public double yynkwebevvxvivugzjra () { return mValue ; }
√ fix_prediction_before: public double getValue () { return mValue ; }
√ fix_prediction_after: public double yynkwebevvxvivugzjra () { return mValue ; }

line_index: 307
bug_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
bug_after_refactoring: @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
fix_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
fix_after_refactoring: @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
√ fix_prediction_before: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
√ fix_prediction_after: @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }

line_index: 312
bug_before_refactoring: public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
bug_after_refactoring: public void nvmftlehrguxdafpvgtu ( int i ) { if ( i > 10000 ) { this . player . nvmftlehrguxdafpvgtu ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> public void nvmftlehrguxdafpvgtu ( int i ) { if ( i > 10000 ) { this . player . nvmftlehrguxdafpvgtu ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
fix_before_refactoring: public void seekToPosition ( int i ) { this . player . seekToPosition ( i ) ; }
fix_after_refactoring: public void nvmftlehrguxdafpvgtu ( int i ) { this . player . nvmftlehrguxdafpvgtu ( i ) ; }
√ fix_prediction_before: public void seekToPosition ( int i ) { this . player . seekToPosition ( i ) ; }
√ fix_prediction_after: public void nvmftlehrguxdafpvgtu ( int i ) { this . player . nvmftlehrguxdafpvgtu ( i ) ; }

line_index: 314
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return original_title ; } <s> @ java.lang.Override public java.lang.String toString () { return original_title ; } <s> - New Design for List Implementation (Bind Movie Lists to GUI Lists) - Bugfixing
bug_after_refactoring: @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return original_title ; } <s> @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return original_title ; } <s> - New Design for List Implementation (Bind Movie Lists to GUI Lists) - Bugfixing
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return title ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return title ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return title ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return title ; }

line_index: 316
bug_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
bug_after_refactoring: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . formatDouble ( value ) ) ; } <s> public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
fix_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
fix_after_refactoring: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . format ( value ) ) ; }
√ fix_prediction_before: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
√ fix_prediction_after: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . format ( value ) ) ; }

line_index: 322
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
fix_after_refactoring: public void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
√ fix_prediction_after: public void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }

line_index: 346
bug_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> fixed some bugs in the script generator
bug_after_refactoring: public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> fixed some bugs in the script generator
fix_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
fix_after_refactoring: public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
√ fix_prediction_before: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
√ fix_prediction_after: public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }

line_index: 358
bug_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
fix_after_refactoring: @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
√ fix_prediction_before: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
√ fix_prediction_after: @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}

line_index: 369
bug_before_refactoring: @ java.lang.Override public void run () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> @ java.lang.Override public void run () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> bugfix  git-svn-id: svn+ssh://solsvn.oma.be/home/sidc/ssr/SWHV_repos/trunk/client/jhv-3d-wcs@7390 b4e469a2-07ce-4b26-9273-4d7d95a670c7
bug_after_refactoring: @ java.lang.Override public void svfczewzlxxzuioktibs () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> @ java.lang.Override public void svfczewzlxxzuioktibs () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> bugfix  git-svn-id: svn+ssh://solsvn.oma.be/home/sidc/ssr/SWHV_repos/trunk/client/jhv-3d-wcs@7390 b4e469a2-07ce-4b26-9273-4d7d95a670c7
fix_before_refactoring: @ java.lang.Override public void run () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
fix_after_refactoring: @ java.lang.Override public void svfczewzlxxzuioktibs () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
√ fix_prediction_after: @ java.lang.Override public void svfczewzlxxzuioktibs () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }

line_index: 380
bug_before_refactoring: @ java.lang.Override public int size () { return values . count () ; } <s> @ java.lang.Override public int size () { return values . count () ; } <s> Fixes compile errors in ScriptDovValues
bug_after_refactoring: @ java.lang.Override public int xoizfwidkycrizewpyvt () { return values . count () ; } <s> @ java.lang.Override public int xoizfwidkycrizewpyvt () { return values . count () ; } <s> Fixes compile errors in ScriptDovValues
fix_before_refactoring: @ java.lang.Override public int size () { return count ; }
fix_after_refactoring: @ java.lang.Override public int xoizfwidkycrizewpyvt () { return count ; }
√ fix_prediction_before: @ java.lang.Override public int size () { return count ; }
√ fix_prediction_after: @ java.lang.Override public int xoizfwidkycrizewpyvt () { return count ; }

line_index: 414
bug_before_refactoring: public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
bug_after_refactoring: public void jividfzbanbookykjgdp ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void jividfzbanbookykjgdp ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
fix_before_refactoring: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
fix_after_refactoring: public void jividfzbanbookykjgdp () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
√ fix_prediction_before: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
√ fix_prediction_after: public void jividfzbanbookykjgdp () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }

line_index: 426
bug_before_refactoring: private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> bug fix
bug_after_refactoring: private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > hpndzvfjscnvkcubvtli ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > hpndzvfjscnvkcubvtli ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> bug fix
fix_before_refactoring: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }
fix_after_refactoring: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > hpndzvfjscnvkcubvtli ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }
√ fix_prediction_before: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }
√ fix_prediction_after: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > hpndzvfjscnvkcubvtli ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }

line_index: 436
bug_before_refactoring: @ java.lang.Override public void setupProperties () { super . setupProperties () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> @ java.lang.Override public void setupProperties () { super . setupProperties () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> feat(TDI-39295): fix minor issues  added display names for properties
bug_after_refactoring: @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> feat(TDI-39295): fix minor issues  added display names for properties
fix_before_refactoring: @ java.lang.Override public void setupProperties () { super . setupProperties () ; }
fix_after_refactoring: @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; }
√ fix_prediction_before: @ java.lang.Override public void setupProperties () { super . setupProperties () ; }
√ fix_prediction_after: @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; }

line_index: 455
bug_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
bug_after_refactoring: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
fix_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
fix_after_refactoring: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) {}
√ fix_prediction_before: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
√ fix_prediction_after: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) {}

line_index: 463
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { if ( ( length ) == null ) { return "SP(•)" ; } else { return ( "SP(" + ( length ) ) + ')' ; } } <s> @ java.lang.Override public java.lang.String toString () { if ( ( length ) == null ) { return "SP(•)" ; } else { return ( "SP(" + ( length ) ) + ')' ; } } <s> reimplemented the ShortestPathAttribute to fix its test errors removed tests that are now unnecessary
bug_after_refactoring: @ java.lang.Override public java.lang.String zpvwevkpnnndjzmbvcez () { if ( ( length ) == null ) { return "SP(•)" ; } else { return ( "SP(" + ( length ) ) + ')' ; } } <s> @ java.lang.Override public java.lang.String zpvwevkpnnndjzmbvcez () { if ( ( length ) == null ) { return "SP(•)" ; } else { return ( "SP(" + ( length ) ) + ')' ; } } <s> reimplemented the ShortestPathAttribute to fix its test errors removed tests that are now unnecessary
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( "SP(" + ( length ) ) + ')' ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String zpvwevkpnnndjzmbvcez () { return ( "SP(" + ( length ) ) + ')' ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return ( "SP(" + ( length ) ) + ')' ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.String zpvwevkpnnndjzmbvcez () { return ( "SP(" + ( length ) ) + ')' ; }

line_index: 465
bug_before_refactoring: @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> minorBugFix
bug_after_refactoring: @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> minorBugFix
fix_before_refactoring: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
fix_after_refactoring: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
√ fix_prediction_before: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
√ fix_prediction_after: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }

line_index: 475
bug_before_refactoring: public static void main ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> public static void main ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> fixed buidl errors
bug_after_refactoring: public static void lyouoxwmpfashfapfnvc ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> public static void lyouoxwmpfashfapfnvc ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> fixed buidl errors
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void lyouoxwmpfashfapfnvc ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void lyouoxwmpfashfapfnvc ( java.lang.String [] args ) {}

line_index: 476
bug_before_refactoring: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> kloudless: adding custom headers support  and non-https support pom: fixing compilation errors tests: updating tests
bug_after_refactoring: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> kloudless: adding custom headers support  and non-https support pom: fixing compilation errors tests: updating tests
fix_before_refactoring: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException {}
fix_after_refactoring: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException {}
√ fix_prediction_before: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException {}
√ fix_prediction_after: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException {}

line_index: 488
bug_before_refactoring: protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
bug_after_refactoring: protected void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
fix_before_refactoring: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
fix_after_refactoring: public void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_before: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_after: public void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }

line_index: 502
bug_before_refactoring: protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
fix_after_refactoring: public net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
√ fix_prediction_before: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
√ fix_prediction_after: public net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }

line_index: 511
bug_before_refactoring: public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
bug_after_refactoring: public static int aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> public static int aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
fix_before_refactoring: public static void ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
fix_after_refactoring: public static void aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
√ fix_prediction_before: public static void ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
√ fix_prediction_after: public static void aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }

line_index: 519
bug_before_refactoring: private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
bug_after_refactoring: private double todadhffavxwbzquvzdx ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double todadhffavxwbzquvzdx ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
fix_before_refactoring: private double convertUnit ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
fix_after_refactoring: private double todadhffavxwbzquvzdx ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
√ fix_prediction_before: private double convertUnit ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
√ fix_prediction_after: private double todadhffavxwbzquvzdx ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }

line_index: 524
bug_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
fix_after_refactoring: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
√ fix_prediction_before: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
√ fix_prediction_after: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }

line_index: 549
bug_before_refactoring: public void closeDrawer () { mDrawer . closeDrawer ( mDrawerListView ) ; drawerOpen = false ; } <s> public void closeDrawer () { mDrawer . closeDrawer ( mDrawerListView ) ; drawerOpen = false ; } <s> Fixed some issues with Android's back button
bug_after_refactoring: public void clpklgbmuzpjycsfsytj () { mDrawer . clpklgbmuzpjycsfsytj ( mDrawerListView ) ; drawerOpen = false ; } <s> public void clpklgbmuzpjycsfsytj () { mDrawer . clpklgbmuzpjycsfsytj ( mDrawerListView ) ; drawerOpen = false ; } <s> Fixed some issues with Android's back button
fix_before_refactoring: private void closeDrawer () { mDrawer . closeDrawer ( mDrawerListView ) ; drawerOpen = false ; }
fix_after_refactoring: private void clpklgbmuzpjycsfsytj () { mDrawer . clpklgbmuzpjycsfsytj ( mDrawerListView ) ; drawerOpen = false ; }
√ fix_prediction_before: private void closeDrawer () { mDrawer . closeDrawer ( mDrawerListView ) ; drawerOpen = false ; }
√ fix_prediction_after: private void clpklgbmuzpjycsfsytj () { mDrawer . clpklgbmuzpjycsfsytj ( mDrawerListView ) ; drawerOpen = false ; }

line_index: 556
bug_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
bug_after_refactoring: @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
fix_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
fix_after_refactoring: @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) {}
√ fix_prediction_before: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
√ fix_prediction_after: @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) {}

line_index: 558
bug_before_refactoring: public void stopBackgroundMusic () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> public void stopBackgroundMusic () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> Fixed the bug with the sound starting back up when the app closes. It was a problem in BaseService  and actually all background services were restarting.
bug_after_refactoring: public void uuehdctfvqutpqahsvxc () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> public void uuehdctfvqutpqahsvxc () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> Fixed the bug with the sound starting back up when the app closes. It was a problem in BaseService  and actually all background services were restarting.
fix_before_refactoring: public void stopBackgroundMusic () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
fix_after_refactoring: public void uuehdctfvqutpqahsvxc () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
√ fix_prediction_before: public void stopBackgroundMusic () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
√ fix_prediction_after: public void uuehdctfvqutpqahsvxc () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }

line_index: 559
bug_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
bug_after_refactoring: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
fix_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
fix_after_refactoring: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) {}
√ fix_prediction_before: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
√ fix_prediction_after: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) {}

line_index: 560
bug_before_refactoring: public boolean contains ( java.lang.Object o ) { synchronized ( map ) { return map . containsKey ( 0 ) ; } } <s> public boolean contains ( java.lang.Object o ) { synchronized ( map ) { return map . containsKey ( 0 ) ; } } <s> Marhlder: Fixed bug/typo in lookupable queue and added test for Frontier
bug_after_refactoring: public boolean fsxkpzckrhicfizrtmfi ( java.lang.Object o ) { synchronized ( map ) { return map . fsxkpzckrhicfizrtmfiKey ( 0 ) ; } } <s> public boolean fsxkpzckrhicfizrtmfi ( java.lang.Object o ) { synchronized ( map ) { return map . fsxkpzckrhicfizrtmfiKey ( 0 ) ; } } <s> Marhlder: Fixed bug/typo in lookupable queue and added test for Frontier
fix_before_refactoring: public boolean contains ( java.lang.Object o ) { synchronized ( map ) { return map . containsKey ( o ) ; } }
fix_after_refactoring: public boolean fsxkpzckrhicfizrtmfi ( java.lang.Object o ) { synchronized ( map ) { return map . fsxkpzckrhicfizrtmfiKey ( o ) ; } }
√ fix_prediction_before: public boolean contains ( java.lang.Object o ) { synchronized ( map ) { return map . containsKey ( o ) ; } }
√ fix_prediction_after: public boolean fsxkpzckrhicfizrtmfi ( java.lang.Object o ) { synchronized ( map ) { return map . fsxkpzckrhicfizrtmfiKey ( o ) ; } }

line_index: 562
bug_before_refactoring: @ java.lang.Override public int getItemCount () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> @ java.lang.Override public int getItemCount () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> Fixed recyclerview issue
bug_after_refactoring: @ java.lang.Override public int cawbzdpufstbqsesozfo () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> @ java.lang.Override public int cawbzdpufstbqsesozfo () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> Fixed recyclerview issue
fix_before_refactoring: @ java.lang.Override public int getItemCount () { return mMoviePosters . size () ; }
fix_after_refactoring: @ java.lang.Override public int cawbzdpufstbqsesozfo () { return mMoviePosters . size () ; }
√ fix_prediction_before: @ java.lang.Override public int getItemCount () { return mMoviePosters . size () ; }
√ fix_prediction_after: @ java.lang.Override public int cawbzdpufstbqsesozfo () { return mMoviePosters . size () ; }

line_index: 574
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT , int idTour ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT , int idTour ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
√ fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT ) ; }

line_index: 583
bug_before_refactoring: private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
bug_after_refactoring: private static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
fix_before_refactoring: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
fix_after_refactoring: protected static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
√ fix_prediction_before: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
√ fix_prediction_after: protected static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }

line_index: 591
bug_before_refactoring: @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException { java.lang.System.out . println ( "_closeInput" ) ; } <s> @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException { java.lang.System.out . println ( "_closeInput" ) ; } <s> Fix the bug on nested Object/Array
bug_after_refactoring: @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException { java.lang.System.out . println ( "bbmyggoqenrikjdskssv" ) ; } <s> @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException { java.lang.System.out . println ( "bbmyggoqenrikjdskssv" ) ; } <s> Fix the bug on nested Object/Array
fix_before_refactoring: @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException {}
fix_after_refactoring: @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException {}
√ fix_prediction_before: @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException {}
√ fix_prediction_after: @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException {}

line_index: 598
bug_before_refactoring: public static java.lang.String getDate () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> public static java.lang.String getDate () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> fixed issue where repeat block session appears
bug_after_refactoring: public static java.lang.String vyzhnboytqbsljqqmuxc () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> public static java.lang.String vyzhnboytqbsljqqmuxc () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> fixed issue where repeat block session appears
fix_before_refactoring: public java.lang.String getDate () { return date ; }
fix_after_refactoring: public java.lang.String vyzhnboytqbsljqqmuxc () { return date ; }
√ fix_prediction_before: public java.lang.String getDate () { return date ; }
√ fix_prediction_after: public java.lang.String vyzhnboytqbsljqqmuxc () { return date ; }

line_index: 620
bug_before_refactoring: public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> fixed dumb bug
bug_after_refactoring: public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { if ( lmgegdzpghfpqhajcajsable >= 0 ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; } } <s> public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { if ( lmgegdzpghfpqhajcajsable >= 0 ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; } } <s> fixed dumb bug
fix_before_refactoring: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
fix_after_refactoring: public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; }
√ fix_prediction_before: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
√ fix_prediction_after: public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; }

line_index: 624
bug_before_refactoring: @ java.lang.Override public void onNext ( T v ) { onNext ( v , innerScheduler . now () ) ; } <s> @ java.lang.Override public void onNext ( T v ) { onNext ( v , innerScheduler . now () ) ; } <s> Fixed TestSubject bug in onNext
bug_after_refactoring: @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , innerScheduler . now () ) ; } <s> @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , innerScheduler . now () ) ; } <s> Fixed TestSubject bug in onNext
fix_before_refactoring: @ java.lang.Override public void onNext ( T v ) { onNext ( v , 0 ) ; }
fix_after_refactoring: @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , 0 ) ; }
√ fix_prediction_before: @ java.lang.Override public void onNext ( T v ) { onNext ( v , 0 ) ; }
√ fix_prediction_after: @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , 0 ) ; }

line_index: 635
bug_before_refactoring: protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
fix_after_refactoring: private boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
√ fix_prediction_before: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
√ fix_prediction_after: private boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }

line_index: 638
bug_before_refactoring: public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
fix_after_refactoring: private void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_before: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_after: private void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }

line_index: 657
bug_before_refactoring: @ java.lang.Override protected void buildShape () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> @ java.lang.Override protected void buildShape () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> Fixed a bug in rigidbody after refactoring collider code
bug_after_refactoring: @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> Fixed a bug in rigidbody after refactoring collider code
fix_before_refactoring: @ java.lang.Override protected void buildShape () {}
fix_after_refactoring: @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () {}
√ fix_prediction_before: @ java.lang.Override protected void buildShape () {}
√ fix_prediction_after: @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () {}

line_index: 662
bug_before_refactoring: @ java.lang.Override public void onChage () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> @ java.lang.Override public void onChage () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> Fixed issue with code-mirror for headers change event. Now headers are send when they are needed
bug_after_refactoring: @ java.lang.Override public void rmimtkdjfpplioypatwz () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> @ java.lang.Override public void rmimtkdjfpplioypatwz () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> Fixed issue with code-mirror for headers change event. Now headers are send when they are needed
fix_before_refactoring: @ java.lang.Override public void onChage () {}
fix_after_refactoring: @ java.lang.Override public void rmimtkdjfpplioypatwz () {}
√ fix_prediction_before: @ java.lang.Override public void onChage () {}
√ fix_prediction_after: @ java.lang.Override public void rmimtkdjfpplioypatwz () {}

line_index: 668
bug_before_refactoring: public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> bugfix
bug_after_refactoring: public boolean nqhnevtsrdokuhhrkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> public boolean nqhnevtsrdokuhhrkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> bugfix
fix_before_refactoring: public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( this ) ) ; }
fix_after_refactoring: public boolean nqhnevtsrdokuhhrkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( this ) ) ; }
√ fix_prediction_before: public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( this ) ) ; }
√ fix_prediction_after: public boolean nqhnevtsrdokuhhrkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( this ) ) ; }

line_index: 693
bug_before_refactoring: private native void write ( int [] buffer ) ; <s> private native void write ( int [] buffer ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
bug_after_refactoring: private native void rporelqncmbxxgtecdly ( int [] buffer ) ; <s> private native void rporelqncmbxxgtecdly ( int [] buffer ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
fix_before_refactoring: public native void write ( int [] buffer ) ;
fix_after_refactoring: public native void rporelqncmbxxgtecdly ( int [] buffer ) ;
√ fix_prediction_before: public native void write ( int [] buffer ) ;
√ fix_prediction_after: public native void rporelqncmbxxgtecdly ( int [] buffer ) ;

line_index: 697
bug_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
bug_after_refactoring: protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
fix_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
fix_after_refactoring: protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
√ fix_prediction_before: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
√ fix_prediction_after: protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }

line_index: 716
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
bug_after_refactoring: public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
fix_after_refactoring: public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
√ fix_prediction_after: public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }

line_index: 719
bug_before_refactoring: private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> Fixed issue where the table cell was no editable  Now if the cell isn't a CellComponent  is not editable
bug_after_refactoring: private javax.swing.ImageIcon xbobvcqdcapjbvezkzdd ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> private javax.swing.ImageIcon xbobvcqdcapjbvezkzdd ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> Fixed issue where the table cell was no editable  Now if the cell isn't a CellComponent  is not editable
fix_before_refactoring: public javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }
fix_after_refactoring: public javax.swing.ImageIcon xbobvcqdcapjbvezkzdd ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }
√ fix_prediction_before: public javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }
√ fix_prediction_after: public javax.swing.ImageIcon xbobvcqdcapjbvezkzdd ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }

line_index: 722
bug_before_refactoring: public void stop () { started = false ; mixer . cancel () ; } <s> public void stop () { started = false ; mixer . cancel () ; } <s> Merge pull request #216 from RestComm/issue215  Fixes #215 - Concurrency issue in OOBMixer
bug_after_refactoring: public void ianhhwcvcwnatilytmmm () { started = false ; mixer . cancel () ; } <s> public void ianhhwcvcwnatilytmmm () { started = false ; mixer . cancel () ; } <s> Merge pull request #216 from RestComm/issue215  Fixes #215 - Concurrency issue in OOBMixer
fix_before_refactoring: public void stop () { if ( this . started . get () ) { started . set ( false ) ; mixer . cancel () ; } }
fix_after_refactoring: public void ianhhwcvcwnatilytmmm () { if ( this . started . get () ) { started . set ( false ) ; mixer . cancel () ; } }
√ fix_prediction_before: public void stop () { if ( this . started . get () ) { started . set ( false ) ; mixer . cancel () ; } }
√ fix_prediction_after: public void ianhhwcvcwnatilytmmm () { if ( this . started . get () ) { started . set ( false ) ; mixer . cancel () ; } }

line_index: 727
bug_before_refactoring: public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
bug_after_refactoring: public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
fix_before_refactoring: public void setDescription ( java.lang.String string ) {}
fix_after_refactoring: public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) {}
√ fix_prediction_before: public void setDescription ( java.lang.String string ) {}
√ fix_prediction_after: public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) {}

line_index: 736
bug_before_refactoring: public void setName () { this . name = name ; } <s> public void setName () { this . name = name ; } <s> fix syntax error and format code
bug_after_refactoring: public void tcqhguvfmrmgfbipdbcv () { this . name = name ; } <s> public void tcqhguvfmrmgfbipdbcv () { this . name = name ; } <s> fix syntax error and format code
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void tcqhguvfmrmgfbipdbcv ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_before: public void setName ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_after: public void tcqhguvfmrmgfbipdbcv ( java.lang.String name ) { this . name = name ; }

line_index: 751
bug_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> bug fix etape 1
bug_after_refactoring: @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> bug fix etape 1
fix_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
fix_after_refactoring: @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
√ fix_prediction_before: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
√ fix_prediction_after: @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }

line_index: 773
bug_before_refactoring: private void startWrittenTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } } <s> private void startWrittenTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } } <s> Merge pull request #23 from tkomiya24/cleanup  Fixes issue 22
bug_after_refactoring: private void mykruhyusilshqfpjaxr () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } } <s> private void mykruhyusilshqfpjaxr () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } } <s> Merge pull request #23 from tkomiya24/cleanup  Fixes issue 22
fix_before_refactoring: public void startWrittenTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } }
fix_after_refactoring: public void mykruhyusilshqfpjaxr () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } }
√ fix_prediction_before: public void startWrittenTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } }
√ fix_prediction_after: public void mykruhyusilshqfpjaxr () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } }

line_index: 777
bug_before_refactoring: public boolean isEmpty () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public boolean isEmpty () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
bug_after_refactoring: public boolean oidsahmpczfctgqkmizm () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public boolean oidsahmpczfctgqkmizm () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
fix_before_refactoring: public boolean isEmpty () { return false ; }
fix_after_refactoring: public boolean oidsahmpczfctgqkmizm () { return false ; }
√ fix_prediction_before: public boolean isEmpty () { return false ; }
√ fix_prediction_after: public boolean oidsahmpczfctgqkmizm () { return false ; }

line_index: 782
bug_before_refactoring: public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> icon and minor error fixes
bug_after_refactoring: public void drpkoiffcmtrqeewowhg ( java.lang.String message ) { _ws . send ( message ) ; } <s> public void drpkoiffcmtrqeewowhg ( java.lang.String message ) { _ws . send ( message ) ; } <s> icon and minor error fixes
fix_before_refactoring: public void sendMessage ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
fix_after_refactoring: public void drpkoiffcmtrqeewowhg ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
√ fix_prediction_before: public void sendMessage ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
√ fix_prediction_after: public void drpkoiffcmtrqeewowhg ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }

line_index: 787
bug_before_refactoring: public void Pause () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> public void Pause () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> Fixed crash bugs
bug_after_refactoring: public void qzzklfxetrjallyishyg () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> public void qzzklfxetrjallyishyg () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> Fixed crash bugs
fix_before_refactoring: public void Pause () { isRecording = false ; }
fix_after_refactoring: public void qzzklfxetrjallyishyg () { isRecording = false ; }
√ fix_prediction_before: public void Pause () { isRecording = false ; }
√ fix_prediction_after: public void qzzklfxetrjallyishyg () { isRecording = false ; }

line_index: 791
bug_before_refactoring: @ java.lang.Override protected void end () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> @ java.lang.Override protected void end () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> Version 3.0 of the MecDrive  Fixed a bug where the wheels did not go the way they were suppose to go. Check the comments below the code for the specific instructions.
bug_after_refactoring: @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> Version 3.0 of the MecDrive  Fixed a bug where the wheels did not go the way they were suppose to go. Check the comments below the code for the specific instructions.
fix_before_refactoring: @ java.lang.Override protected void end () {}
fix_after_refactoring: @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () {}
√ fix_prediction_before: @ java.lang.Override protected void end () {}
√ fix_prediction_after: @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () {}

line_index: 806
bug_before_refactoring: public java.util.GregorianCalendar getStartTime () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> public java.util.GregorianCalendar getStartTime () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> remove unnecessary methods and fix bugs
bug_after_refactoring: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> remove unnecessary methods and fix bugs
fix_before_refactoring: public java.util.GregorianCalendar getStartTime () { return startTime ; }
fix_after_refactoring: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return startTime ; }
√ fix_prediction_before: public java.util.GregorianCalendar getStartTime () { return startTime ; }
√ fix_prediction_after: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return startTime ; }

line_index: 815
bug_before_refactoring: @ org.junit.Test public void testEqualsSameInstance () { org.junit.Assert . assertTrue ( object . equals ( object ) ) ; } <s> @ org.junit.Test public void testEqualsSameInstance () { org.junit.Assert . assertTrue ( object . equals ( object ) ) ; } <s> Fix PMD errors.  Fixed errors reported by the PMD plugin.
bug_after_refactoring: @ org.junit.Test public void fjbehyaggjfwlngfdrsh () { org.junit.Assert . assertTrue ( object . equals ( object ) ) ; } <s> @ org.junit.Test public void fjbehyaggjfwlngfdrsh () { org.junit.Assert . assertTrue ( object . equals ( object ) ) ; } <s> Fix PMD errors.  Fixed errors reported by the PMD plugin.
fix_before_refactoring: @ org.junit.Test public void testEqualsSameInstance () { org.junit.Assert . assertEquals ( object , object ) ; }
fix_after_refactoring: @ org.junit.Test public void fjbehyaggjfwlngfdrsh () { org.junit.Assert . assertEquals ( object , object ) ; }
√ fix_prediction_before: @ org.junit.Test public void testEqualsSameInstance () { org.junit.Assert . assertEquals ( object , object ) ; }
√ fix_prediction_after: @ org.junit.Test public void fjbehyaggjfwlngfdrsh () { org.junit.Assert . assertEquals ( object , object ) ; }

line_index: 816
bug_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
bug_after_refactoring: public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
fix_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
fix_after_refactoring: public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
√ fix_prediction_before: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
√ fix_prediction_after: public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }

line_index: 819
bug_before_refactoring: private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
bug_after_refactoring: private void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
fix_before_refactoring: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
fix_after_refactoring: public void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
√ fix_prediction_before: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
√ fix_prediction_after: public void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }

line_index: 824
bug_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; } <s> @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
fix_after_refactoring: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; }
√ fix_prediction_before: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
√ fix_prediction_after: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; }

line_index: 834
bug_before_refactoring: void onSuccess ( T response , int type ) ; <s> void onSuccess ( T response , int type ) ; <s> fixed bug with markers removed unused code
bug_after_refactoring: void dpbaeneqcfatsrimryrd ( T response , int type ) ; <s> void dpbaeneqcfatsrimryrd ( T response , int type ) ; <s> fixed bug with markers removed unused code
fix_before_refactoring: void onSuccess ( T response ) ;
fix_after_refactoring: void dpbaeneqcfatsrimryrd ( T response ) ;
√ fix_prediction_before: void onSuccess ( T response ) ;
√ fix_prediction_after: void dpbaeneqcfatsrimryrd ( T response ) ;

line_index: 838
bug_before_refactoring: @ java.lang.Override public org.w3c.dom.Node getParentNode () { final int parent = document.attrParent [ nodeNumber ] ; if ( parent > 0 ) { return document . getNode ( parent ) ; } return null ; } <s> @ java.lang.Override public org.w3c.dom.Node getParentNode () { final int parent = document.attrParent [ nodeNumber ] ; if ( parent > 0 ) { return document . getNode ( parent ) ; } return null ; } <s> [bugfix] Attr#getParentNode must return null
bug_after_refactoring: @ java.lang.Override public org.w3c.dom.Node kkbqmfmeicllikzzfjfm () { final int parent = document.attrParent [ nodeNumber ] ; if ( parent > 0 ) { return document . getNode ( parent ) ; } return null ; } <s> @ java.lang.Override public org.w3c.dom.Node kkbqmfmeicllikzzfjfm () { final int parent = document.attrParent [ nodeNumber ] ; if ( parent > 0 ) { return document . getNode ( parent ) ; } return null ; } <s> [bugfix] Attr#getParentNode must return null
fix_before_refactoring: @ java.lang.Override public org.w3c.dom.Node getParentNode () { return null ; }
fix_after_refactoring: @ java.lang.Override public org.w3c.dom.Node kkbqmfmeicllikzzfjfm () { return null ; }
√ fix_prediction_before: @ java.lang.Override public org.w3c.dom.Node getParentNode () { return null ; }
√ fix_prediction_after: @ java.lang.Override public org.w3c.dom.Node kkbqmfmeicllikzzfjfm () { return null ; }

line_index: 844
bug_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> Add pay shortcut  change move strategy and fix bug
bug_after_refactoring: @ java.lang.Override public void yhuzowrhnxeyajyafeqm ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> @ java.lang.Override public void yhuzowrhnxeyajyafeqm ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> Add pay shortcut  change move strategy and fix bug
fix_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = isChecked ; }
fix_after_refactoring: @ java.lang.Override public void yhuzowrhnxeyajyafeqm ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = isChecked ; }
√ fix_prediction_before: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = isChecked ; }
√ fix_prediction_after: @ java.lang.Override public void yhuzowrhnxeyajyafeqm ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = isChecked ; }

line_index: 847
bug_before_refactoring: public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> Tests added and tons of bug fixes
bug_after_refactoring: public void nyncsljrcztthcrdccte ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> public void nyncsljrcztthcrdccte ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> Tests added and tons of bug fixes
fix_before_refactoring: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
fix_after_refactoring: public void nyncsljrcztthcrdccte ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
√ fix_prediction_before: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
√ fix_prediction_after: public void nyncsljrcztthcrdccte ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }

line_index: 853
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) {}
fix_after_refactoring: @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) {}
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
√ fix_prediction_after: @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) {}

line_index: 856
bug_before_refactoring: @ org.junit.After public void tearDown ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.After public void tearDown ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Solved ArrayList decleration bug  some mockito tests on bets
bug_after_refactoring: @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Solved ArrayList decleration bug  some mockito tests on bets
fix_before_refactoring: @ org.junit.After public void tearDown ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception {}
√ fix_prediction_before: @ org.junit.After public void tearDown ( ) throws java.lang.Exception {}
√ fix_prediction_after: @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception {}

line_index: 864
bug_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> @ java.lang.Override protected void onStop () { super . onStop () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> Fix some bugs to make the code work.
bug_after_refactoring: @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> Fix some bugs to make the code work.
fix_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; }
fix_after_refactoring: @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; }
√ fix_prediction_before: @ java.lang.Override protected void onStop () { super . onStop () ; }
√ fix_prediction_after: @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; }

line_index: 868
bug_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
bug_after_refactoring: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
fix_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
fix_after_refactoring: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
√ fix_prediction_before: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
√ fix_prediction_after: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}

line_index: 876
bug_before_refactoring: @ java.lang.Override public boolean celAllapot () { return ( a [ 1 ] ) == 4 ; } <s> @ java.lang.Override public boolean celAllapot () { return ( a [ 1 ] ) == 4 ; } <s> HaromKorso problem updated and gitignore fixed
bug_after_refactoring: @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 1 ] ) == 4 ; } <s> @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 1 ] ) == 4 ; } <s> HaromKorso problem updated and gitignore fixed
fix_before_refactoring: @ java.lang.Override public boolean celAllapot () { return ( a [ 0 ] ) == 4 ; }
fix_after_refactoring: @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 0 ] ) == 4 ; }
√ fix_prediction_before: @ java.lang.Override public boolean celAllapot () { return ( a [ 0 ] ) == 4 ; }
√ fix_prediction_after: @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 0 ] ) == 4 ; }

line_index: 878
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> @ java.lang.Override protected void onPause () { super . onPause () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> bug fix when on the custom keyboard screen going in the background crahes the app
bug_after_refactoring: @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> bug fix when on the custom keyboard screen going in the background crahes the app
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
√ fix_prediction_after: @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; }

line_index: 880
bug_before_refactoring: protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> protected native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
fix_after_refactoring: private native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
√ fix_prediction_before: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
√ fix_prediction_after: private native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;

line_index: 882
bug_before_refactoring: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> Bug fixes for Double
bug_after_refactoring: public void edsgtdrtitfdyowuidxf ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> public void edsgtdrtitfdyowuidxf ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> Bug fixes for Double
fix_before_refactoring: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , tm ) ; }
fix_after_refactoring: public void edsgtdrtitfdyowuidxf ( java.lang.Double tm ) { data . put ( "tmin" , tm ) ; }
√ fix_prediction_before: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , tm ) ; }
√ fix_prediction_after: public void edsgtdrtitfdyowuidxf ( java.lang.Double tm ) { data . put ( "tmin" , tm ) ; }

line_index: 888
bug_before_refactoring: public int getLastNumber () { return ( mLastPuzzleId ) + 1 ; } <s> public int getLastNumber () { return ( mLastPuzzleId ) + 1 ; } <s> moved statistics logic into StatisticsUtils fixed bug with total puzzle count
bug_after_refactoring: public int sydmduifcfoqqsoujfdc () { return ( mLastPuzzleId ) + 1 ; } <s> public int sydmduifcfoqqsoujfdc () { return ( mLastPuzzleId ) + 1 ; } <s> moved statistics logic into StatisticsUtils fixed bug with total puzzle count
fix_before_refactoring: public int getLastNumber () { return mLastPuzzleId ; }
fix_after_refactoring: public int sydmduifcfoqqsoujfdc () { return mLastPuzzleId ; }
√ fix_prediction_before: public int getLastNumber () { return mLastPuzzleId ; }
√ fix_prediction_after: public int sydmduifcfoqqsoujfdc () { return mLastPuzzleId ; }

line_index: 896
bug_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> Fix bugs
bug_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void bzmlrqnbjisjiagjvxdu ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void bzmlrqnbjisjiagjvxdu ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> Fix bugs
fix_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; }
fix_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void bzmlrqnbjisjiagjvxdu ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; }
√ fix_prediction_before: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; }
√ fix_prediction_after: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void bzmlrqnbjisjiagjvxdu ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; }

line_index: 897
bug_before_refactoring: private void privateConstructor ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> private void privateConstructor ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
bug_after_refactoring: private void hsnqgumpwprpguypihko ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> private void hsnqgumpwprpguypihko ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
fix_before_refactoring: private void privateConstructor () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
fix_after_refactoring: private void hsnqgumpwprpguypihko () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
√ fix_prediction_before: private void privateConstructor () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
√ fix_prediction_after: private void hsnqgumpwprpguypihko () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }

line_index: 900
bug_before_refactoring: void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> versuch serverbug zu fixen
bug_after_refactoring: void lescaebabwlbszfcqtxy ( java.lang.String id , java.lang.String client ) ; <s> void lescaebabwlbszfcqtxy ( java.lang.String id , java.lang.String client ) ; <s> versuch serverbug zu fixen
fix_before_refactoring: void sendImageToServer ( java.lang.String id ) ;
fix_after_refactoring: void lescaebabwlbszfcqtxy ( java.lang.String id ) ;
√ fix_prediction_before: void sendImageToServer ( java.lang.String id ) ;
√ fix_prediction_after: void lescaebabwlbszfcqtxy ( java.lang.String id ) ;

line_index: 905
bug_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
fix_after_refactoring: @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) {}
√ fix_prediction_before: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
√ fix_prediction_after: @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) {}

line_index: 909
bug_before_refactoring: public static void recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> public static void recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> Bug fixes.
bug_after_refactoring: public static void hemiqdewgeqzczpylkji ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> public static void hemiqdewgeqzczpylkji ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> Bug fixes.
fix_before_refactoring: public static java.lang.String recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; }
fix_after_refactoring: public static java.lang.String hemiqdewgeqzczpylkji ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; }
√ fix_prediction_before: public static java.lang.String recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; }
√ fix_prediction_after: public static java.lang.String hemiqdewgeqzczpylkji ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; }

line_index: 911
bug_before_refactoring: public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
bug_after_refactoring: public void dhlssmwraulgwtnbcyvk ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void dhlssmwraulgwtnbcyvk ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
fix_before_refactoring: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
fix_after_refactoring: public void dhlssmwraulgwtnbcyvk ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
√ fix_prediction_before: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
√ fix_prediction_after: public void dhlssmwraulgwtnbcyvk ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }

line_index: 912
bug_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
bug_after_refactoring: private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
fix_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_before: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_after: private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) {}

line_index: 919
bug_before_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> Fix dash line problem due to incorrect caching
bug_after_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> Fix dash line problem due to incorrect caching
fix_before_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { return intersectionCache ; }
fix_after_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { return intersectionCache ; }
√ fix_prediction_before: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { return intersectionCache ; }
√ fix_prediction_after: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { return intersectionCache ; }

line_index: 941
bug_before_refactoring: public synchronized java.lang.String getAuthToken () { com.salesforce.androidsdk.util.SalesforceSDKLogger . i ( com.salesforce.androidsdk.rest.RestClient.TAG , ( "Found account -- get token " + ( authToken ) ) ) ; return authToken ; } <s> public synchronized java.lang.String getAuthToken () { com.salesforce.androidsdk.util.SalesforceSDKLogger . i ( com.salesforce.androidsdk.rest.RestClient.TAG , ( "Found account -- get token " + ( authToken ) ) ) ; return authToken ; } <s> Fixing issues with RestClient caches - no point building a fresh oauth refresh interceptor if a cached ok http client ends up being used - cleaning cache on logout
bug_after_refactoring: public synchronized java.lang.String eyayvmtehaolvkoeclsf () { com.salesforce.androidsdk.util.SalesforceSDKLogger . i ( com.salesforce.androidsdk.rest.RestClient.TAG , ( "Found account -- get token " + ( authToken ) ) ) ; return authToken ; } <s> public synchronized java.lang.String eyayvmtehaolvkoeclsf () { com.salesforce.androidsdk.util.SalesforceSDKLogger . i ( com.salesforce.androidsdk.rest.RestClient.TAG , ( "Found account -- get token " + ( authToken ) ) ) ; return authToken ; } <s> Fixing issues with RestClient caches - no point building a fresh oauth refresh interceptor if a cached ok http client ends up being used - cleaning cache on logout
fix_before_refactoring: public synchronized java.lang.String getAuthToken () { return authToken ; }
fix_after_refactoring: public synchronized java.lang.String eyayvmtehaolvkoeclsf () { return authToken ; }
√ fix_prediction_before: public synchronized java.lang.String getAuthToken () { return authToken ; }
√ fix_prediction_after: public synchronized java.lang.String eyayvmtehaolvkoeclsf () { return authToken ; }

line_index: 950
bug_before_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> Green Light | Fixed multi commit window opening issue
bug_after_refactoring: @ java.lang.Override public void trypsseirievonbymlfz ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void mfaitalesmfuzozrjuol () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> @ java.lang.Override public void trypsseirievonbymlfz ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void mfaitalesmfuzozrjuol () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> Green Light | Fixed multi commit window opening issue
fix_before_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) {}
fix_after_refactoring: @ java.lang.Override public void trypsseirievonbymlfz ( java.lang.String location , java.lang.String test ) {}
√ fix_prediction_before: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) {}
√ fix_prediction_after: @ java.lang.Override public void trypsseirievonbymlfz ( java.lang.String location , java.lang.String test ) {}

line_index: 951
bug_before_refactoring: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> Fixed bugs in CoffeeMaker.java and Recipe.java.
bug_after_refactoring: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> Fixed bugs in CoffeeMaker.java and Recipe.java.
fix_before_refactoring: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
√ fix_prediction_before: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
√ fix_prediction_after: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }

line_index: 959
bug_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> @ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> fixing some bugs
bug_after_refactoring: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> fixing some bugs
fix_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; }
√ fix_prediction_before: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
√ fix_prediction_after: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; }

line_index: 960
bug_before_refactoring: @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> solved a bug that would cause sales not to be increased when Firebase returned a Long value
bug_after_refactoring: @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> solved a bug that would cause sales not to be increased when Firebase returned a Long value
fix_before_refactoring: @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; }
fix_after_refactoring: @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; }
√ fix_prediction_after: @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; }

line_index: 961
bug_before_refactoring: @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> Fix for #305: Ceylond: disable debug log
bug_after_refactoring: @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> Fix for #305: Ceylond: disable debug log
fix_before_refactoring: @ java.lang.Override public void debug ( java.lang.String str ) {}
fix_after_refactoring: @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) {}
√ fix_prediction_before: @ java.lang.Override public void debug ( java.lang.String str ) {}
√ fix_prediction_after: @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) {}

line_index: 965
bug_before_refactoring: protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
fix_after_refactoring: public void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_before: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_after: public void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }

line_index: 971
bug_before_refactoring: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
bug_after_refactoring: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) {}

line_index: 979
bug_before_refactoring: public void onButton1Click ( int imageViewID , int position ) ; <s> public void onButton1Click ( int imageViewID , int position ) ; <s> Merge branch 'hotfix_image_id' into develop. Massive refactoring.  Button-click now correctly detects text from the image. Was earlier detecting text from wrong image due to bugs in the way the image-id was being passed to MainActivity.
bug_after_refactoring: public void reiaafwexcbgfdebmsvd ( int imageViewID , int position ) ; <s> public void reiaafwexcbgfdebmsvd ( int imageViewID , int position ) ; <s> Merge branch 'hotfix_image_id' into develop. Massive refactoring.  Button-click now correctly detects text from the image. Was earlier detecting text from wrong image due to bugs in the way the image-id was being passed to MainActivity.
fix_before_refactoring: public void onButton1Click ( int position ) ;
fix_after_refactoring: public void reiaafwexcbgfdebmsvd ( int position ) ;
√ fix_prediction_before: public void onButton1Click ( int position ) ;
√ fix_prediction_after: public void reiaafwexcbgfdebmsvd ( int position ) ;

line_index: 982
bug_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; android.support.v7.app.ActionBar ab = ( ( android.support.v7.app.ActionBarActivity ) ( context ) ) . getSupportActionBar () ; ab . setTitle ( "Topical Bible" ) ; setHasOptionsMenu ( true ) ; } <s> @ java.lang.Override public void onResume () { super . onResume () ; android.support.v7.app.ActionBar ab = ( ( android.support.v7.app.ActionBarActivity ) ( context ) ) . getSupportActionBar () ; ab . setTitle ( "Topical Bible" ) ; setHasOptionsMenu ( true ) ; } <s> Fixed bugs. Update for V1.1.0
bug_after_refactoring: @ java.lang.Override public void gnzyzjouaemnbfbojqtr () { super . gnzyzjouaemnbfbojqtr () ; android.support.v7.app.ActionBar ab = ( ( android.support.v7.app.ActionBarActivity ) ( context ) ) . getSupportActionBar () ; ab . setTitle ( "Topical Bible" ) ; setHasOptionsMenu ( true ) ; } <s> @ java.lang.Override public void gnzyzjouaemnbfbojqtr () { super . gnzyzjouaemnbfbojqtr () ; android.support.v7.app.ActionBar ab = ( ( android.support.v7.app.ActionBarActivity ) ( context ) ) . getSupportActionBar () ; ab . setTitle ( "Topical Bible" ) ; setHasOptionsMenu ( true ) ; } <s> Fixed bugs. Update for V1.1.0
fix_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; }
fix_after_refactoring: @ java.lang.Override public void gnzyzjouaemnbfbojqtr () { super . gnzyzjouaemnbfbojqtr () ; }
√ fix_prediction_before: @ java.lang.Override public void onResume () { super . onResume () ; }
√ fix_prediction_after: @ java.lang.Override public void gnzyzjouaemnbfbojqtr () { super . gnzyzjouaemnbfbojqtr () ; }

line_index: 995
bug_before_refactoring: public boolean hasGrandParent () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> public boolean hasGrandParent () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> Fix the bug on root parent
bug_after_refactoring: public boolean wftxwuyexssbopwfjomi () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> public boolean wftxwuyexssbopwfjomi () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> Fix the bug on root parent
fix_before_refactoring: public boolean hasGrandParent () { return ( this . hasParent () ) && ( this . getParent () . hasParent () ) ; }
fix_after_refactoring: public boolean wftxwuyexssbopwfjomi () { return ( this . hasParent () ) && ( this . getParent () . hasParent () ) ; }
√ fix_prediction_before: public boolean hasGrandParent () { return ( this . hasParent () ) && ( this . getParent () . hasParent () ) ; }
√ fix_prediction_after: public boolean wftxwuyexssbopwfjomi () { return ( this . hasParent () ) && ( this . getParent () . hasParent () ) ; }

line_index: 998
bug_before_refactoring: public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > getDevices () { if ( ( devices ) == null ) { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } } else { return devices ; } } <s> public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > getDevices () { if ( ( devices ) == null ) { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } } else { return devices ; } } <s> Fixed a bug where the offline device list under Settings was not properly updated on connection state change
bug_after_refactoring: public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > zizajeekmrvgouezwmlj () { if ( ( devices ) == null ) { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } } else { return devices ; } } <s> public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > zizajeekmrvgouezwmlj () { if ( ( devices ) == null ) { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } } else { return devices ; } } <s> Fixed a bug where the offline device list under Settings was not properly updated on connection state change
fix_before_refactoring: public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > getDevices () { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } }
fix_after_refactoring: public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > zizajeekmrvgouezwmlj () { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } }
√ fix_prediction_before: public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > getDevices () { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } }
√ fix_prediction_after: public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > zizajeekmrvgouezwmlj () { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } }

line_index: 1000
bug_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
bug_after_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
fix_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
fix_after_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
√ fix_prediction_before: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
√ fix_prediction_after: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }

line_index: 1001
bug_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> fix some bugs.
bug_after_refactoring: public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> fix some bugs.
fix_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
fix_after_refactoring: public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
√ fix_prediction_before: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
√ fix_prediction_after: public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }

line_index: 1016
bug_before_refactoring: public java.lang.Integer getType () { return ( type ) == 0 ? null : type ; } <s> public java.lang.Integer getType () { return ( type ) == 0 ? null : type ; } <s> fixed bad enum error
bug_after_refactoring: public java.lang.Integer vofeguspfxvbqteilkte () { return ( type ) == 0 ? null : type ; } <s> public java.lang.Integer vofeguspfxvbqteilkte () { return ( type ) == 0 ? null : type ; } <s> fixed bad enum error
fix_before_refactoring: public java.lang.Integer getType () { return type ; }
fix_after_refactoring: public java.lang.Integer vofeguspfxvbqteilkte () { return type ; }
√ fix_prediction_before: public java.lang.Integer getType () { return type ; }
√ fix_prediction_after: public java.lang.Integer vofeguspfxvbqteilkte () { return type ; }

line_index: 1027
bug_before_refactoring: private void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> private void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> Word Game  Solve the issues in phase 2.
bug_after_refactoring: private void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> private void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> Word Game  Solve the issues in phase 2.
fix_before_refactoring: public void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } }
fix_after_refactoring: public void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } }
√ fix_prediction_before: public void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } }
√ fix_prediction_after: public void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } }

line_index: 1036
bug_before_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> public static void log ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> Fix error when no log channel is set
bug_after_refactoring: public static void fytecbliuivjgzcdqzuj ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> public static void fytecbliuivjgzcdqzuj ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> Fix error when no log channel is set
fix_before_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( com.tisawesomeness.minecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } }
fix_after_refactoring: public static void fytecbliuivjgzcdqzuj ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( com.tisawesomeness.minecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } }
√ fix_prediction_before: public static void log ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( com.tisawesomeness.minecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } }
√ fix_prediction_after: public static void fytecbliuivjgzcdqzuj ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( com.tisawesomeness.minecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } }

line_index: 1052
bug_before_refactoring: protected javafx.beans.property.DoubleProperty greenProperty () { return this . green ; } <s> protected javafx.beans.property.DoubleProperty greenProperty () { return this . green ; } <s> Fixed potential bug
bug_after_refactoring: protected javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; } <s> protected javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; } <s> Fixed potential bug
fix_before_refactoring: public javafx.beans.property.DoubleProperty greenProperty () { return this . green ; }
fix_after_refactoring: public javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; }
√ fix_prediction_before: public javafx.beans.property.DoubleProperty greenProperty () { return this . green ; }
√ fix_prediction_after: public javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; }

line_index: 1058
bug_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
bug_after_refactoring: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
fix_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
fix_after_refactoring: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_before: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_after: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) {}

line_index: 1067
bug_before_refactoring: public void onSwipeUp () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> public void onSwipeUp () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> Fix bugs on classicSnake
bug_after_refactoring: public void sqnwwrpckgaudomggylb () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> public void sqnwwrpckgaudomggylb () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> Fix bugs on classicSnake
fix_before_refactoring: private void onSwipeUp () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } }
fix_after_refactoring: private void sqnwwrpckgaudomggylb () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } }
√ fix_prediction_before: private void onSwipeUp () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } }
√ fix_prediction_after: private void sqnwwrpckgaudomggylb () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } }

line_index: 1069
bug_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
fix_after_refactoring: @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
√ fix_prediction_before: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
√ fix_prediction_after: @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { mPlayer . start () ; }

line_index: 1079
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
bug_after_refactoring: public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
fix_after_refactoring: public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
√ fix_prediction_after: public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }

line_index: 1082
bug_before_refactoring: @ java.lang.Override public int getType () { return shieldcommander.Ball.type ; } <s> @ java.lang.Override public int getType () { return shieldcommander.Ball.type ; } <s> Fix error that had every shot identified as largeBlueShot
bug_after_refactoring: @ java.lang.Override public int mvtlldgqkvgnpylnjzzx () { return shieldcommander.Ball.type ; } <s> @ java.lang.Override public int mvtlldgqkvgnpylnjzzx () { return shieldcommander.Ball.type ; } <s> Fix error that had every shot identified as largeBlueShot
fix_before_refactoring: @ java.lang.Override public int getType () { return type ; }
fix_after_refactoring: @ java.lang.Override public int mvtlldgqkvgnpylnjzzx () { return type ; }
√ fix_prediction_before: @ java.lang.Override public int getType () { return type ; }
√ fix_prediction_after: @ java.lang.Override public int mvtlldgqkvgnpylnjzzx () { return type ; }

line_index: 1083
bug_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> fix sshutil bug
bug_after_refactoring: public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return false ; } <s> public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return false ; } <s> fix sshutil bug
fix_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return true ; }
fix_after_refactoring: public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return true ; }
√ fix_prediction_before: public boolean promptYesNo ( java.lang.String str ) { return true ; }
√ fix_prediction_after: public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return true ; }

line_index: 1088
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
bug_after_refactoring: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
fix_after_refactoring: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_after: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }

line_index: 1090
bug_before_refactoring: private static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> private static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> Fix compilation problems
bug_after_refactoring: private static void dhpevczsiyrlyqroapex ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> private static void dhpevczsiyrlyqroapex ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> Fix compilation problems
fix_before_refactoring: public static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }
fix_after_refactoring: public static void dhpevczsiyrlyqroapex ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }
√ fix_prediction_before: public static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }
√ fix_prediction_after: public static void dhpevczsiyrlyqroapex ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }

line_index: 1094
bug_before_refactoring: private void setListViewAdapter () { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } <s> private void setListViewAdapter () { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } <s> Fixed #65: [bug] retrieving the KB blocks the loading of bbs under bad network coverage  https://github.com/asksven/BetterBatteryStats/issues/issue/65
bug_after_refactoring: private void tctxthaujuaagtgklyrl () { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } <s> private void tctxthaujuaagtgklyrl () { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } <s> Fixed #65: [bug] retrieving the KB blocks the loading of bbs under bad network coverage  https://github.com/asksven/BetterBatteryStats/issues/issue/65
fix_before_refactoring: private void setListViewAdapter () { if ( ( m_listViewAdapter ) == null ) { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } }
fix_after_refactoring: private void tctxthaujuaagtgklyrl () { if ( ( m_listViewAdapter ) == null ) { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } }
√ fix_prediction_before: private void setListViewAdapter () { if ( ( m_listViewAdapter ) == null ) { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } }
√ fix_prediction_after: private void tctxthaujuaagtgklyrl () { if ( ( m_listViewAdapter ) == null ) { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } }

line_index: 1095
bug_before_refactoring: public static void main ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> public static void main ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> fixed error in DBManager
bug_after_refactoring: public static void jbqaxzlhntzduqrnhdmv ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> public static void jbqaxzlhntzduqrnhdmv ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> fixed error in DBManager
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void jbqaxzlhntzduqrnhdmv ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void jbqaxzlhntzduqrnhdmv ( java.lang.String [] args ) {}

line_index: 1102
bug_before_refactoring: public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
bug_after_refactoring: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
fix_before_refactoring: public void setUsername ( java.lang.String username ) { this . username = username ; }
fix_after_refactoring: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { this . username = username ; }
√ fix_prediction_before: public void setUsername ( java.lang.String username ) { this . username = username ; }
√ fix_prediction_after: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { this . username = username ; }

line_index: 1110
bug_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
bug_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
fix_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
fix_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
√ fix_prediction_before: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
√ fix_prediction_after: public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }

line_index: 1115
bug_before_refactoring: @ java.lang.Override public boolean performLongClick () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> @ java.lang.Override public boolean performLongClick () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
bug_after_refactoring: @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
fix_before_refactoring: @ java.lang.Override public boolean performLongClick () { return ( ( mLongListener ) != null ) && ( mLongListener . onLongClick ( this ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { return ( ( mLongListener ) != null ) && ( mLongListener . onLongClick ( this ) ) ; }
√ fix_prediction_before: @ java.lang.Override public boolean performLongClick () { return ( ( mLongListener ) != null ) && ( mLongListener . onLongClick ( this ) ) ; }
√ fix_prediction_after: @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { return ( ( mLongListener ) != null ) && ( mLongListener . onLongClick ( this ) ) ; }

line_index: 1119
bug_before_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
fix_after_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; }
√ fix_prediction_before: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
√ fix_prediction_after: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; }

line_index: 1134
bug_before_refactoring: public static boolean isPreview () { return true ; } <s> public static boolean isPreview () { return true ; } <s> bug fix
bug_after_refactoring: public static boolean dlrinimmfxnapcisexjt () { return true ; } <s> public static boolean dlrinimmfxnapcisexjt () { return true ; } <s> bug fix
fix_before_refactoring: public static boolean isPreview () { return false ; }
fix_after_refactoring: public static boolean dlrinimmfxnapcisexjt () { return false ; }
√ fix_prediction_before: public static boolean isPreview () { return false ; }
√ fix_prediction_after: public static boolean dlrinimmfxnapcisexjt () { return false ; }

line_index: 1136
bug_before_refactoring: public static long getActiveSessions () { return org.exist.http.SessionCountListener.activeSessions ; } <s> public static long getActiveSessions () { return org.exist.http.SessionCountListener.activeSessions ; } <s> [bugfix] Avoid write to static field as identified by static analysis
bug_after_refactoring: public static long mpjvdbdqokauzbwvoewx () { return org.exist.http.SessionCountListener.activeSessions ; } <s> public static long mpjvdbdqokauzbwvoewx () { return org.exist.http.SessionCountListener.activeSessions ; } <s> [bugfix] Avoid write to static field as identified by static analysis
fix_before_refactoring: public static long getActiveSessions () { return org.exist.http.SessionCountListener.activeSessions . get () ; }
fix_after_refactoring: public static long mpjvdbdqokauzbwvoewx () { return org.exist.http.SessionCountListener.activeSessions . get () ; }
√ fix_prediction_before: public static long getActiveSessions () { return org.exist.http.SessionCountListener.activeSessions . get () ; }
√ fix_prediction_after: public static long mpjvdbdqokauzbwvoewx () { return org.exist.http.SessionCountListener.activeSessions . get () ; }

line_index: 1138
bug_before_refactoring: public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; } <s> public void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
fix_after_refactoring: private void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; }
√ fix_prediction_before: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
√ fix_prediction_after: private void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; }

line_index: 1161
bug_before_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> orgnize methods in ArisExecutor  move some to ArisUtil fix car extractor bug  take care space
bug_after_refactoring: public java.util.List < java.lang.String > hdjuqozytyezpijfnrjd ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> public java.util.List < java.lang.String > hdjuqozytyezpijfnrjd ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> orgnize methods in ArisExecutor  move some to ArisUtil fix car extractor bug  take care space
fix_before_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; return process () ; }
fix_after_refactoring: public java.util.List < java.lang.String > hdjuqozytyezpijfnrjd ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; return process () ; }
√ fix_prediction_before: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; return process () ; }
√ fix_prediction_after: public java.util.List < java.lang.String > hdjuqozytyezpijfnrjd ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; return process () ; }

line_index: 1171
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson iodzcldczymbofkxzjia ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson iodzcldczymbofkxzjia ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson iodzcldczymbofkxzjia ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
√ fix_prediction_before: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
√ fix_prediction_after: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson iodzcldczymbofkxzjia ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }

line_index: 1193
bug_before_refactoring: private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
bug_after_refactoring: private void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
fix_before_refactoring: protected void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
fix_after_refactoring: protected void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
√ fix_prediction_before: protected void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
√ fix_prediction_after: protected void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }

line_index: 1204
bug_before_refactoring: public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; } <s> public void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
fix_after_refactoring: private void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; }
√ fix_prediction_before: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
√ fix_prediction_after: private void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; }

line_index: 1228
bug_before_refactoring: @ asteroids.model.Basic public double getRadius () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> @ asteroids.model.Basic public double getRadius () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> fixed bug in radius reduction procedure in Planetoid
bug_after_refactoring: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> fixed bug in radius reduction procedure in Planetoid
fix_before_refactoring: @ asteroids.model.Basic public double getRadius () { return radius ; }
fix_after_refactoring: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return radius ; }
√ fix_prediction_before: @ asteroids.model.Basic public double getRadius () { return radius ; }
√ fix_prediction_after: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return radius ; }

line_index: 1233
bug_before_refactoring: public void showPopupWindow () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> public void showPopupWindow () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> added new method in exerciseTable manager tofix bug in viewExercisesPopup
bug_after_refactoring: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> added new method in exerciseTable manager tofix bug in viewExercisesPopup
fix_before_refactoring: public void showPopupWindow () { displayPopupWindow () ; setListView () ; }
fix_after_refactoring: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; setListView () ; }
√ fix_prediction_before: public void showPopupWindow () { displayPopupWindow () ; setListView () ; }
√ fix_prediction_after: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; setListView () ; }

line_index: 1239
bug_before_refactoring: public org.ops4j.pax.exam.Option getLoggingOption () { org.ops4j.pax.exam.Option option = org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; return option ; } <s> public org.ops4j.pax.exam.Option getLoggingOption () { org.ops4j.pax.exam.Option option = org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; return option ; } <s> Fix checkstyle issues to enforce it  Fix checkstyle issues to enforce it.  Change-Id: I0657beb7831e81b1d24adcd41dc9bf23d0701d64 Signed-off-by: David Suarez <david.suarez.fuentes@gmail.com>
bug_after_refactoring: public org.ops4j.pax.exam.Option evwtmddlhuobklkjtfzh () { org.ops4j.pax.exam.Option option = org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; return option ; } <s> public org.ops4j.pax.exam.Option evwtmddlhuobklkjtfzh () { org.ops4j.pax.exam.Option option = org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; return option ; } <s> Fix checkstyle issues to enforce it  Fix checkstyle issues to enforce it.  Change-Id: I0657beb7831e81b1d24adcd41dc9bf23d0701d64 Signed-off-by: David Suarez <david.suarez.fuentes@gmail.com>
fix_before_refactoring: public org.ops4j.pax.exam.Option getLoggingOption () { return org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; }
fix_after_refactoring: public org.ops4j.pax.exam.Option evwtmddlhuobklkjtfzh () { return org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; }
√ fix_prediction_before: public org.ops4j.pax.exam.Option getLoggingOption () { return org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; }
√ fix_prediction_after: public org.ops4j.pax.exam.Option evwtmddlhuobklkjtfzh () { return org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; }

line_index: 1243
bug_before_refactoring: void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> Back again. FIxed TeachingPolicy realated error in QLearning.java
bug_after_refactoring: void qafzrgkzjsdkqzknptpj ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> void qafzrgkzjsdkqzknptpj ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> Back again. FIxed TeachingPolicy realated error in QLearning.java
fix_before_refactoring: void ApplyWeights ( ) ;
fix_after_refactoring: void qafzrgkzjsdkqzknptpj ( ) ;
√ fix_prediction_before: void ApplyWeights ( ) ;
√ fix_prediction_after: void qafzrgkzjsdkqzknptpj ( ) ;

line_index: 1253
bug_before_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> BugFixed FileToTranslate builder
bug_after_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; } <s> BugFixed FileToTranslate builder
fix_before_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
fix_after_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; }
√ fix_prediction_before: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
√ fix_prediction_after: public com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; }

line_index: 1256
bug_before_refactoring: public boolean isIncludeUnloadedJS () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> public boolean isIncludeUnloadedJS () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> Support 'include-unloaded-js' in proxy mode (https://github.com/tntim96/JSCover/issues/93)  Bump version  Fix typo
bug_after_refactoring: public boolean lwyzkmytuzqxuinoxzzi () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> public boolean lwyzkmytuzqxuinoxzzi () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> Support 'include-unloaded-js' in proxy mode (https://github.com/tntim96/JSCover/issues/93)  Bump version  Fix typo
fix_before_refactoring: public boolean isIncludeUnloadedJS () { return includeUnloadedJS ; }
fix_after_refactoring: public boolean lwyzkmytuzqxuinoxzzi () { return includeUnloadedJS ; }
√ fix_prediction_before: public boolean isIncludeUnloadedJS () { return includeUnloadedJS ; }
√ fix_prediction_after: public boolean lwyzkmytuzqxuinoxzzi () { return includeUnloadedJS ; }

line_index: 1259
bug_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
bug_after_refactoring: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
fix_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_before: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_after: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) {}

line_index: 1262
bug_before_refactoring: public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> fix stupid division error (forgot to return for that case)
bug_after_refactoring: public java.lang.String oyjdrmvnpqtlxhmbqnlj ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> public java.lang.String oyjdrmvnpqtlxhmbqnlj ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> fix stupid division error (forgot to return for that case)
fix_before_refactoring: public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ row ] [ col ] ) ; }
fix_after_refactoring: public java.lang.String oyjdrmvnpqtlxhmbqnlj ( int row , int col ) { return java.lang.Integer . toString ( solution [ row ] [ col ] ) ; }
√ fix_prediction_before: public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ row ] [ col ] ) ; }
√ fix_prediction_after: public java.lang.String oyjdrmvnpqtlxhmbqnlj ( int row , int col ) { return java.lang.Integer . toString ( solution [ row ] [ col ] ) ; }

line_index: 1292
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
fix_after_refactoring: public void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
√ fix_prediction_after: public void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }

line_index: 1296
bug_before_refactoring: public void testDbFileExists ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> public void testDbFileExists ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> fixed DictionaryDB EofSensorInputStream bug
bug_after_refactoring: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> fixed DictionaryDB EofSensorInputStream bug
fix_before_refactoring: public void testDbFileExists ( ) throws java.lang.Exception {}
fix_after_refactoring: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception {}
√ fix_prediction_before: public void testDbFileExists ( ) throws java.lang.Exception {}
√ fix_prediction_after: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception {}

line_index: 1306
bug_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
bug_after_refactoring: @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
fix_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
√ fix_prediction_before: @ java.lang.Override public void onMessage ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
√ fix_prediction_after: @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { cP . setEnabled ( true ) ; }

line_index: 1316
bug_before_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; } <s> @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; } <s> Testing and bug fixes.  Removed unnecessary 'flag' methods from IRepositoryManager.
bug_after_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] hapnrpruaiznsaqvrrph ( int flags ) { return hapnrpruaiznsaqvrrph ( null , flags ) ; } <s> @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] hapnrpruaiznsaqvrrph ( int flags ) { return hapnrpruaiznsaqvrrph ( null , flags ) ; } <s> Testing and bug fixes.  Removed unnecessary 'flag' methods from IRepositoryManager.
fix_before_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }
fix_after_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] hapnrpruaiznsaqvrrph () { return hapnrpruaiznsaqvrrph ( null ) ; }
√ fix_prediction_before: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }
√ fix_prediction_after: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] hapnrpruaiznsaqvrrph () { return hapnrpruaiznsaqvrrph ( null ) ; }

line_index: 1329
bug_before_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> many things; problems to be solved
bug_after_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> many things; problems to be solved
fix_before_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { return tags ; }
fix_after_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { return tags ; }
√ fix_prediction_before: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { return tags ; }
√ fix_prediction_after: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { return tags ; }

line_index: 1330
bug_before_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
bug_after_refactoring: private void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
fix_before_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
fix_after_refactoring: protected void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
√ fix_prediction_before: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
√ fix_prediction_after: protected void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }

line_index: 1336
bug_before_refactoring: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> fixed cs issues  added adfs changes
bug_after_refactoring: private void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> private void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> fixed cs issues  added adfs changes
fix_before_refactoring: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
fix_after_refactoring: private static void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
√ fix_prediction_before: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
√ fix_prediction_after: private static void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }

line_index: 1339
bug_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
bug_after_refactoring: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
fix_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
fix_after_refactoring: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
√ fix_prediction_before: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
√ fix_prediction_after: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }

line_index: 1343
bug_before_refactoring: public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
bug_after_refactoring: public void sbzyzyqwbzmbdsrfbjgs ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void sbzyzyqwbzmbdsrfbjgs ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
fix_before_refactoring: public void enqueue ( Item item ) {}
fix_after_refactoring: public void sbzyzyqwbzmbdsrfbjgs ( Item item ) {}
√ fix_prediction_before: public void enqueue ( Item item ) {}
√ fix_prediction_after: public void sbzyzyqwbzmbdsrfbjgs ( Item item ) {}

line_index: 1357
bug_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
bug_after_refactoring: long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
fix_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
fix_after_refactoring: long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
√ fix_prediction_before: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
√ fix_prediction_after: long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;

line_index: 1362
bug_before_refactoring: private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
bug_after_refactoring: private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
fix_before_refactoring: private void setHeight ( final int height ) { this . height = height ; }
fix_after_refactoring: private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height ; }
√ fix_prediction_before: private void setHeight ( final int height ) { this . height = height ; }
√ fix_prediction_after: private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height ; }

line_index: 1368
bug_before_refactoring: @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> fix auto focus issue
bug_after_refactoring: @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> fix auto focus issue
fix_before_refactoring: @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , false ) ; }
fix_after_refactoring: @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , false ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , false ) ; }
√ fix_prediction_after: @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , false ) ; }

line_index: 1370
bug_before_refactoring: @ java.lang.Override public void run () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> @ java.lang.Override public void run () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> refactoring  removed isinterrupted check fixed performance issue removed try block
bug_after_refactoring: @ java.lang.Override public void fplddvhdsxpouqtohstf () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> @ java.lang.Override public void fplddvhdsxpouqtohstf () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> refactoring  removed isinterrupted check fixed performance issue removed try block
fix_before_refactoring: @ java.lang.Override public void run () { onUSBDataReceive ( buffer ) ; }
fix_after_refactoring: @ java.lang.Override public void fplddvhdsxpouqtohstf () { onUSBDataReceive ( buffer ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { onUSBDataReceive ( buffer ) ; }
√ fix_prediction_after: @ java.lang.Override public void fplddvhdsxpouqtohstf () { onUSBDataReceive ( buffer ) ; }

line_index: 1371
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
bug_after_refactoring: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
fix_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
√ fix_prediction_after: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; }

line_index: 1378
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
bug_after_refactoring: @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
√ fix_prediction_after: @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; }

line_index: 1392
bug_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> @ java.lang.Override protected void onStop () { super . onStop () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> change configuration bug fixed
bug_after_refactoring: @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> change configuration bug fixed
fix_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; }
fix_after_refactoring: @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; }
√ fix_prediction_before: @ java.lang.Override protected void onStop () { super . onStop () ; }
√ fix_prediction_after: @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; }

line_index: 1409
bug_before_refactoring: public void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> public void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> bug fixes for AstroPi
bug_after_refactoring: public void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> public void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> bug fixes for AstroPi
fix_before_refactoring: private void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } }
fix_after_refactoring: private void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } }
√ fix_prediction_before: private void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } }
√ fix_prediction_after: private void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } }

line_index: 1420
bug_before_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> turn auto drop-create back on; fix schema.sql inserts; fix references to actor_types; general debug
bug_after_refactoring: public void fjokwoozunkvauisqkty ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> public void fjokwoozunkvauisqkty ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> turn auto drop-create back on; fix schema.sql inserts; fix references to actor_types; general debug
fix_before_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
fix_after_refactoring: public void fjokwoozunkvauisqkty ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
√ fix_prediction_before: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
√ fix_prediction_after: public void fjokwoozunkvauisqkty ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }

line_index: 1421
bug_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
bug_after_refactoring: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
fix_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
fix_after_refactoring: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { failureHandler ( error_code ) ; }
√ fix_prediction_before: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
√ fix_prediction_after: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { failureHandler ( error_code ) ; }

line_index: 1422
bug_before_refactoring: public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> public void fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
fix_after_refactoring: public boolean fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
√ fix_prediction_before: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
√ fix_prediction_after: public boolean fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }

line_index: 1424
bug_before_refactoring: @ java.lang.Override public void onConnectionSuspended ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> @ java.lang.Override public void onConnectionSuspended ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> Fix bug while disconnecting the ActivityRecognition
bug_after_refactoring: @ java.lang.Override public void ksklmrccrqopfhivdbzz ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> @ java.lang.Override public void ksklmrccrqopfhivdbzz ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> Fix bug while disconnecting the ActivityRecognition
fix_before_refactoring: @ java.lang.Override public void onConnectionSuspended ( int i ) {}
fix_after_refactoring: @ java.lang.Override public void ksklmrccrqopfhivdbzz ( int i ) {}
√ fix_prediction_before: @ java.lang.Override public void onConnectionSuspended ( int i ) {}
√ fix_prediction_after: @ java.lang.Override public void ksklmrccrqopfhivdbzz ( int i ) {}

line_index: 1426
bug_before_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; } <s> @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; } <s> Fixed some Codacy error reports
bug_after_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; } <s> @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; } <s> Fixed some Codacy error reports
fix_before_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; }
√ fix_prediction_after: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; }

line_index: 1427
bug_before_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
fix_after_refactoring: public void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
√ fix_prediction_before: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
√ fix_prediction_after: public void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }

line_index: 1434
bug_before_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
bug_after_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
fix_before_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
fix_after_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
√ fix_prediction_before: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
√ fix_prediction_after: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }

line_index: 1452
bug_before_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
bug_after_refactoring: public ninja.Result ruluatkjxiiwsdcvarfa ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result ruluatkjxiiwsdcvarfa ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
fix_before_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
fix_after_refactoring: public ninja.Result ruluatkjxiiwsdcvarfa () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
√ fix_prediction_before: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
√ fix_prediction_after: public ninja.Result ruluatkjxiiwsdcvarfa () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }

line_index: 1473
bug_before_refactoring: public void doJob () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> public void doJob () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> Fixed Internal Error while registering new users
bug_after_refactoring: public void gmbscvhanenymfmouyyn () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> public void gmbscvhanenymfmouyyn () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> Fixed Internal Error while registering new users
fix_before_refactoring: public void doJob () {}
fix_after_refactoring: public void gmbscvhanenymfmouyyn () {}
√ fix_prediction_before: public void doJob () {}
√ fix_prediction_after: public void gmbscvhanenymfmouyyn () {}

line_index: 1474
bug_before_refactoring: private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> Fixing bugs
bug_after_refactoring: private static native long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) ; <s> private static native long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
fix_after_refactoring: private static long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) { return 0 ; }
√ fix_prediction_before: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
√ fix_prediction_after: private static long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) { return 0 ; }

line_index: 1476
bug_before_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> API restructuring  bugfixes
bug_after_refactoring: public boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; } <s> public boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; } <s> API restructuring  bugfixes
fix_before_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
fix_after_refactoring: private boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; }
√ fix_prediction_before: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
√ fix_prediction_after: private boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; }

line_index: 1493
bug_before_refactoring: private java.lang.Object getData () { return data ; } <s> private java.lang.Object getData () { return data ; } <s> fix error
bug_after_refactoring: private java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; } <s> private java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; } <s> fix error
fix_before_refactoring: public java.lang.Object getData () { return data ; }
fix_after_refactoring: public java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; }
√ fix_prediction_before: public java.lang.Object getData () { return data ; }
√ fix_prediction_after: public java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; }

line_index: 1494
bug_before_refactoring: public int poll () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . poll () ; } <s> public int poll () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . poll () ; } <s> 1 bug resolved and other things
bug_after_refactoring: public int pyqfgwfjqpbuwzfhfpmy () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . pyqfgwfjqpbuwzfhfpmy () ; } <s> public int pyqfgwfjqpbuwzfhfpmy () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . pyqfgwfjqpbuwzfhfpmy () ; } <s> 1 bug resolved and other things
fix_before_refactoring: public int poll () { return this . queue . poll () ; }
fix_after_refactoring: public int pyqfgwfjqpbuwzfhfpmy () { return this . queue . pyqfgwfjqpbuwzfhfpmy () ; }
√ fix_prediction_before: public int poll () { return this . queue . poll () ; }
√ fix_prediction_after: public int pyqfgwfjqpbuwzfhfpmy () { return this . queue . pyqfgwfjqpbuwzfhfpmy () ; }

line_index: 1497
bug_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
bug_after_refactoring: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
fix_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
fix_after_refactoring: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; }
√ fix_prediction_before: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
√ fix_prediction_after: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; }

line_index: 1505
bug_before_refactoring: public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> public void zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
fix_after_refactoring: public boolean zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
√ fix_prediction_before: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
√ fix_prediction_after: public boolean zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }

line_index: 1517
bug_before_refactoring: private boolean emptyUnitBoard () { unitBoard . removeAll () ; return false ; } <s> private boolean emptyUnitBoard () { unitBoard . removeAll () ; return false ; } <s> Bug fix : button use stopped the reponse from the keys
bug_after_refactoring: private boolean kjbezlzagnszkegqndcz () { unitBoard . removeAll () ; return false ; } <s> private boolean kjbezlzagnszkegqndcz () { unitBoard . removeAll () ; return false ; } <s> Bug fix : button use stopped the reponse from the keys
fix_before_refactoring: public boolean emptyUnitBoard () { unitBoard . removeAll () ; return false ; }
fix_after_refactoring: public boolean kjbezlzagnszkegqndcz () { unitBoard . removeAll () ; return false ; }
√ fix_prediction_before: public boolean emptyUnitBoard () { unitBoard . removeAll () ; return false ; }
√ fix_prediction_after: public boolean kjbezlzagnszkegqndcz () { unitBoard . removeAll () ; return false ; }

line_index: 1520
bug_before_refactoring: @ java.lang.Override public int getTo () { java.lang.System.out . println ( to ) ; return to ; } <s> @ java.lang.Override public int getTo () { java.lang.System.out . println ( to ) ; return to ; } <s> Final bug fix
bug_after_refactoring: @ java.lang.Override public int jxvagzftqopmsggruvkd () { java.lang.System.out . println ( to ) ; return to ; } <s> @ java.lang.Override public int jxvagzftqopmsggruvkd () { java.lang.System.out . println ( to ) ; return to ; } <s> Final bug fix
fix_before_refactoring: @ java.lang.Override public int getTo () { return to ; }
fix_after_refactoring: @ java.lang.Override public int jxvagzftqopmsggruvkd () { return to ; }
√ fix_prediction_before: @ java.lang.Override public int getTo () { return to ; }
√ fix_prediction_after: @ java.lang.Override public int jxvagzftqopmsggruvkd () { return to ; }

line_index: 1526
bug_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> bugfix for filter
bug_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> bugfix for filter
fix_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd ) ; }
√ fix_prediction_before: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd ) ; }
√ fix_prediction_after: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd ) ; }

line_index: 1533
bug_before_refactoring: @ java.lang.Override public < S extends E > boolean exists ( org.springframework.data.domain.Example < S > example ) { return repository . exists ( example ) ; } <s> @ java.lang.Override public < S extends E > boolean exists ( org.springframework.data.domain.Example < S > example ) { return repository . exists ( example ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override public < S extends E > boolean zkbrhwumcpsbydixoglt ( org.springframework.data.domain.Example < S > example ) { return repository . zkbrhwumcpsbydixoglt ( example ) ; } <s> @ java.lang.Override public < S extends E > boolean zkbrhwumcpsbydixoglt ( org.springframework.data.domain.Example < S > example ) { return repository . zkbrhwumcpsbydixoglt ( example ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override public boolean exists ( org.springframework.data.domain.Example < E > example ) { return repository . exists ( example ) ; }
fix_after_refactoring: @ java.lang.Override public boolean zkbrhwumcpsbydixoglt ( org.springframework.data.domain.Example < E > example ) { return repository . zkbrhwumcpsbydixoglt ( example ) ; }
√ fix_prediction_before: @ java.lang.Override public boolean exists ( org.springframework.data.domain.Example < E > example ) { return repository . exists ( example ) ; }
√ fix_prediction_after: @ java.lang.Override public boolean zkbrhwumcpsbydixoglt ( org.springframework.data.domain.Example < E > example ) { return repository . zkbrhwumcpsbydixoglt ( example ) ; }

line_index: 1537
bug_before_refactoring: public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_after: private void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }

line_index: 1540
bug_before_refactoring: @ java.lang.Override public void onApiFinished () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> @ java.lang.Override public void onApiFinished () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> Merge pull request #50 from malaonline/AN-503  AN-503 fix the buy-course-button’s event error
bug_after_refactoring: @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> Merge pull request #50 from malaonline/AN-503  AN-503 fix the buy-course-button’s event error
fix_before_refactoring: @ java.lang.Override public void onApiFinished () {}
fix_after_refactoring: @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () {}
√ fix_prediction_before: @ java.lang.Override public void onApiFinished () {}
√ fix_prediction_after: @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () {}

line_index: 1542
bug_before_refactoring: private void setEmail ( java.lang.String val ) { email = val ; } <s> private void setEmail ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; } <s> private void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public void setEmail ( java.lang.String val ) { email = val ; }
fix_after_refactoring: public void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; }
√ fix_prediction_before: public void setEmail ( java.lang.String val ) { email = val ; }
√ fix_prediction_after: public void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; }

line_index: 1547
bug_before_refactoring: public java.lang.String getString ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> public java.lang.String getString ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> Merge pull request #959 from scesbron/bugfix-ws-getstring  [#2035] Fix regression in WS.getString between 1.2.x and 1.4.x
bug_after_refactoring: public java.lang.String zslxsklqueoapyqctsfo ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> public java.lang.String zslxsklqueoapyqctsfo ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> Merge pull request #959 from scesbron/bugfix-ws-getstring  [#2035] Fix regression in WS.getString between 1.2.x and 1.4.x
fix_before_refactoring: public abstract java.lang.String getString ( java.lang.String encoding ) ;
fix_after_refactoring: public abstract java.lang.String zslxsklqueoapyqctsfo ( java.lang.String encoding ) ;
√ fix_prediction_before: public abstract java.lang.String getString ( java.lang.String encoding ) ;
√ fix_prediction_after: public abstract java.lang.String zslxsklqueoapyqctsfo ( java.lang.String encoding ) ;

line_index: 1568
bug_before_refactoring: private static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> private static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> Added call to make overlay active when the OverlayAssembler is used to 'ready' the page.  Fixed problem with history valueChangeHandler that prevented the home page from loading when the user refreshes.
bug_after_refactoring: private static void xpjdwuicvbiitmfhyjyt ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> private static void xpjdwuicvbiitmfhyjyt ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> Added call to make overlay active when the OverlayAssembler is used to 'ready' the page.  Fixed problem with history valueChangeHandler that prevented the home page from loading when the user refreshes.
fix_before_refactoring: public static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }
fix_after_refactoring: public static void xpjdwuicvbiitmfhyjyt ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }
√ fix_prediction_before: public static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }
√ fix_prediction_after: public static void xpjdwuicvbiitmfhyjyt ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }

line_index: 1579
bug_before_refactoring: @ java.lang.Override public void run () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> @ java.lang.Override public void run () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> Fix bug
bug_after_refactoring: @ java.lang.Override public void pnvcjytgmfruiwkitlda () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> @ java.lang.Override public void pnvcjytgmfruiwkitlda () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> Fix bug
fix_before_refactoring: @ java.lang.Override public void run () { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; }
fix_after_refactoring: @ java.lang.Override public void pnvcjytgmfruiwkitlda () { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; }
√ fix_prediction_after: @ java.lang.Override public void pnvcjytgmfruiwkitlda () { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; }

line_index: 1581
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> Bug Fixed  修正泛化获取类型错误
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter nsycublauupgtxrzakwx ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter nsycublauupgtxrzakwx ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> Bug Fixed  修正泛化获取类型错误
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter nsycublauupgtxrzakwx ( java.lang.Object source ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; }
√ fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; }
√ fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter nsycublauupgtxrzakwx ( java.lang.Object source ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; }

line_index: 1584
bug_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
bug_after_refactoring: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
fix_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
fix_after_refactoring: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) {}
√ fix_prediction_before: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
√ fix_prediction_after: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) {}

line_index: 1600
bug_before_refactoring: @ java.lang.Override public long getId () { return this . id ; } <s> @ java.lang.Override public long getId () { return this . id ; } <s> Fixing PriceImpl style issues
bug_after_refactoring: @ java.lang.Override public long awlswirklztucviayagc () { return this . id ; } <s> @ java.lang.Override public long awlswirklztucviayagc () { return this . id ; } <s> Fixing PriceImpl style issues
fix_before_refactoring: @ java.lang.Override public long getId () { return id ; }
fix_after_refactoring: @ java.lang.Override public long awlswirklztucviayagc () { return id ; }
√ fix_prediction_before: @ java.lang.Override public long getId () { return id ; }
√ fix_prediction_after: @ java.lang.Override public long awlswirklztucviayagc () { return id ; }

line_index: 1610
bug_before_refactoring: @ java.lang.Override public int getPoints () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> @ java.lang.Override public int getPoints () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> fix bug with toolbar
bug_after_refactoring: @ java.lang.Override public int kkdmlownvgicxyxegjqm () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> @ java.lang.Override public int kkdmlownvgicxyxegjqm () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> fix bug with toolbar
fix_before_refactoring: @ java.lang.Override public int getPoints () { return points ; }
fix_after_refactoring: @ java.lang.Override public int kkdmlownvgicxyxegjqm () { return points ; }
√ fix_prediction_before: @ java.lang.Override public int getPoints () { return points ; }
√ fix_prediction_after: @ java.lang.Override public int kkdmlownvgicxyxegjqm () { return points ; }

line_index: 1615
bug_before_refactoring: private void refresh () { data . clear () ; loadData () ; } <s> private void refresh () { data . clear () ; loadData () ; } <s> bugfix refresh tabelle
bug_after_refactoring: private void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; } <s> private void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; } <s> bugfix refresh tabelle
fix_before_refactoring: public void refresh () { data . clear () ; loadData () ; }
fix_after_refactoring: public void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; }
√ fix_prediction_before: public void refresh () { data . clear () ; loadData () ; }
√ fix_prediction_after: public void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; }

line_index: 1616
bug_before_refactoring: public static void onClosingAndriodorIpaddiv () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> public static void onClosingAndriodorIpaddiv () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> Player header div placed in the middle - Issue resolved for ipad and other devices
bug_after_refactoring: public static void wvigxbcnrwdegwhrtijw () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> public static void wvigxbcnrwdegwhrtijw () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> Player header div placed in the middle - Issue resolved for ipad and other devices
fix_before_refactoring: public static void onClosingAndriodorIpaddiv () {}
fix_after_refactoring: public static void wvigxbcnrwdegwhrtijw () {}
√ fix_prediction_before: public static void onClosingAndriodorIpaddiv () {}
√ fix_prediction_after: public static void wvigxbcnrwdegwhrtijw () {}

line_index: 1618
bug_before_refactoring: protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> fixed errors  finally
bug_after_refactoring: protected intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; } <s> protected intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; } <s> fixed errors  finally
fix_before_refactoring: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; }
fix_after_refactoring: public intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; }
√ fix_prediction_before: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; }
√ fix_prediction_after: public intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; }

line_index: 1625
bug_before_refactoring: protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; } <s> protected void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void answerCorrect ( android.view.View view ) { answerCorrect () ; }
fix_after_refactoring: public void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; }
√ fix_prediction_before: public void answerCorrect ( android.view.View view ) { answerCorrect () ; }
√ fix_prediction_after: public void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; }

line_index: 1629
bug_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
bug_after_refactoring: @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
fix_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
fix_after_refactoring: @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
√ fix_prediction_before: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
√ fix_prediction_after: @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}

line_index: 1653
bug_before_refactoring: public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
bug_after_refactoring: public synchronized void rgbaacxdaecsmkxygmah ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> public synchronized void rgbaacxdaecsmkxygmah ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
fix_before_refactoring: protected synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; }
fix_after_refactoring: protected synchronized void rgbaacxdaecsmkxygmah ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; }
√ fix_prediction_before: protected synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; }
√ fix_prediction_after: protected synchronized void rgbaacxdaecsmkxygmah ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; }

line_index: 1658
bug_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
bug_after_refactoring: @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
fix_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
fix_after_refactoring: @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
√ fix_prediction_before: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
√ fix_prediction_after: @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }

line_index: 1667
bug_before_refactoring: @ java.lang.Override public void onHandle () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> @ java.lang.Override public void onHandle () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> bug fixed
bug_after_refactoring: @ java.lang.Override public void juahkikoyxazywbqowgg () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> @ java.lang.Override public void juahkikoyxazywbqowgg () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> bug fixed
fix_before_refactoring: @ java.lang.Override public void onHandle () {}
fix_after_refactoring: @ java.lang.Override public void juahkikoyxazywbqowgg () {}
√ fix_prediction_before: @ java.lang.Override public void onHandle () {}
√ fix_prediction_after: @ java.lang.Override public void juahkikoyxazywbqowgg () {}

line_index: 1681
bug_before_refactoring: public void skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> public void skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> Fixed state tracking issues when the queue finishes playing
bug_after_refactoring: public void ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> public void ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> Fixed state tracking issues when the queue finishes playing
fix_before_refactoring: public boolean skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
fix_after_refactoring: public boolean ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
√ fix_prediction_before: public boolean skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
√ fix_prediction_after: public boolean ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }

line_index: 1687
bug_before_refactoring: public Main.Ball getBall () { assert ( ball ) != null ; return ball ; } <s> public Main.Ball getBall () { assert ( ball ) != null ; return ball ; } <s> Fixed 'self-tackling' issues
bug_after_refactoring: public Main.Ball voniliqxzycfnrmiiwig () { assert ( ball ) != null ; return ball ; } <s> public Main.Ball voniliqxzycfnrmiiwig () { assert ( ball ) != null ; return ball ; } <s> Fixed 'self-tackling' issues
fix_before_refactoring: public Main.Ball getBall () { return ball ; }
fix_after_refactoring: public Main.Ball voniliqxzycfnrmiiwig () { return ball ; }
√ fix_prediction_before: public Main.Ball getBall () { return ball ; }
√ fix_prediction_after: public Main.Ball voniliqxzycfnrmiiwig () { return ball ; }

line_index: 1690
bug_before_refactoring: private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
bug_after_refactoring: private void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; } <s> private void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
fix_before_refactoring: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
fix_after_refactoring: public void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; }
√ fix_prediction_before: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
√ fix_prediction_after: public void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; }

line_index: 1694
bug_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> Fixed bug introduced during slight refactor
bug_after_refactoring: public void gtlshbqgkkodzsvyrqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> public void gtlshbqgkkodzsvyrqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> Fixed bug introduced during slight refactor
fix_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
fix_after_refactoring: public void gtlshbqgkkodzsvyrqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
√ fix_prediction_before: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
√ fix_prediction_after: public void gtlshbqgkkodzsvyrqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }

line_index: 1698
bug_before_refactoring: @ java.lang.Override public void init () { try { javafx.scene.text.Font . loadFont ( com.jfxbe.MemeMaker . class . getClassLoader () . getResource ( "Oswald-Bold.ttf" ) . openStream () , 80 ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void init () { try { javafx.scene.text.Font . loadFont ( com.jfxbe.MemeMaker . class . getClassLoader () . getResource ( "Oswald-Bold.ttf" ) . openStream () , 80 ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Changed out a font that works when using loadFont(). Fixed a bug in loading an image from the filechooser
bug_after_refactoring: @ java.lang.Override public void mtikwulsqmiwpcyamywe () { try { javafx.scene.text.Font . loadFont ( com.jfxbe.MemeMaker . class . getClassLoader () . getResource ( "Oswald-Bold.ttf" ) . openStream () , 80 ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void mtikwulsqmiwpcyamywe () { try { javafx.scene.text.Font . loadFont ( com.jfxbe.MemeMaker . class . getClassLoader () . getResource ( "Oswald-Bold.ttf" ) . openStream () , 80 ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Changed out a font that works when using loadFont(). Fixed a bug in loading an image from the filechooser
fix_before_refactoring: @ java.lang.Override public void init () {}
fix_after_refactoring: @ java.lang.Override public void mtikwulsqmiwpcyamywe () {}
√ fix_prediction_before: @ java.lang.Override public void init () {}
√ fix_prediction_after: @ java.lang.Override public void mtikwulsqmiwpcyamywe () {}

line_index: 1706
bug_before_refactoring: @ java.lang.Override protected void execute () { org.usfirst.frc4904.standard.LogKitten . wtf ( ( ( motor . get () ) + "" ) ) ; } <s> @ java.lang.Override protected void execute () { org.usfirst.frc4904.standard.LogKitten . wtf ( ( ( motor . get () ) + "" ) ) ; } <s> Fixed issues with timer tasks
bug_after_refactoring: @ java.lang.Override protected void fwjqqcrcoolrkahcdbob () { org.usfirst.frc4904.standard.LogKitten . wtf ( ( ( motor . get () ) + "" ) ) ; } <s> @ java.lang.Override protected void fwjqqcrcoolrkahcdbob () { org.usfirst.frc4904.standard.LogKitten . wtf ( ( ( motor . get () ) + "" ) ) ; } <s> Fixed issues with timer tasks
fix_before_refactoring: @ java.lang.Override protected void execute () {}
fix_after_refactoring: @ java.lang.Override protected void fwjqqcrcoolrkahcdbob () {}
√ fix_prediction_before: @ java.lang.Override protected void execute () {}
√ fix_prediction_after: @ java.lang.Override protected void fwjqqcrcoolrkahcdbob () {}

line_index: 1720
bug_before_refactoring: public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( name ) . getDefaultValue () ) ) ) ; } <s> public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( name ) . getDefaultValue () ) ) ) ; } <s> Resolved some more bugs and issues.
bug_after_refactoring: public java.lang.String rsnhcbzryxgwrycivmur ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( name ) . getDefaultValue () ) ) ) ; } <s> public java.lang.String rsnhcbzryxgwrycivmur ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( name ) . getDefaultValue () ) ) ) ; } <s> Resolved some more bugs and issues.
fix_before_refactoring: public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , null ) ) ) ; }
fix_after_refactoring: public java.lang.String rsnhcbzryxgwrycivmur ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , null ) ) ) ; }
√ fix_prediction_before: public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , null ) ) ) ; }
√ fix_prediction_after: public java.lang.String rsnhcbzryxgwrycivmur ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , null ) ) ) ; }

line_index: 1732
bug_before_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> fix bug of RecyclerViewAdapterWrapper
bug_after_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration ibgyjikjtcwdkjjevfyk ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> public com.x91tec.appshelf.v7.XDividerDecoration ibgyjikjtcwdkjjevfyk ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> fix bug of RecyclerViewAdapterWrapper
fix_before_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }
fix_after_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration ibgyjikjtcwdkjjevfyk () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }
√ fix_prediction_before: public com.x91tec.appshelf.v7.XDividerDecoration build () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }
√ fix_prediction_after: public com.x91tec.appshelf.v7.XDividerDecoration ibgyjikjtcwdkjjevfyk () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }

line_index: 1734
bug_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> @ java.lang.Override public void onPause () { super . onPause () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> Fixed print preview bug
bug_after_refactoring: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> Fixed print preview bug
fix_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; }
√ fix_prediction_before: @ java.lang.Override public void onPause () { super . onPause () ; }
√ fix_prediction_after: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; }

line_index: 1736
bug_before_refactoring: protected void gotoPage () { browser . gotoPage ( location ) ; } <s> protected void gotoPage () { browser . gotoPage ( location ) ; } <s> Bugfix
bug_after_refactoring: protected void vbenqanxzzlrpwmvsycw () { browser . vbenqanxzzlrpwmvsycw ( location ) ; } <s> protected void vbenqanxzzlrpwmvsycw () { browser . vbenqanxzzlrpwmvsycw ( location ) ; } <s> Bugfix
fix_before_refactoring: public void gotoPage () { browser . gotoPage ( location ) ; }
fix_after_refactoring: public void vbenqanxzzlrpwmvsycw () { browser . vbenqanxzzlrpwmvsycw ( location ) ; }
√ fix_prediction_before: public void gotoPage () { browser . gotoPage ( location ) ; }
√ fix_prediction_after: public void vbenqanxzzlrpwmvsycw () { browser . vbenqanxzzlrpwmvsycw ( location ) ; }

line_index: 1738
bug_before_refactoring: public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; } <s> public void sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
fix_after_refactoring: public boolean sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { return this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; }
√ fix_prediction_before: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
√ fix_prediction_after: public boolean sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { return this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; }

line_index: 1749
bug_before_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
fix_after_refactoring: io.hekate.messaging.MessagingChannel < T > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ;
√ fix_prediction_before: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
√ fix_prediction_after: io.hekate.messaging.MessagingChannel < T > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ;

line_index: 1755
bug_before_refactoring: @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> fix merge problems  adapt to new api
bug_after_refactoring: @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> fix merge problems  adapt to new api
fix_before_refactoring: @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { return fullDataset ; }
fix_after_refactoring: @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { return fullDataset ; }
√ fix_prediction_before: @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { return fullDataset ; }
√ fix_prediction_after: @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { return fullDataset ; }

line_index: 1765
bug_before_refactoring: public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> public void gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
fix_after_refactoring: public boolean gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { return this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
√ fix_prediction_before: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
√ fix_prediction_after: public boolean gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { return this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }

line_index: 1793
bug_before_refactoring: private static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> private static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> Fix axis2Server.bat file does not start issue  This is to reverting the fix in PR #147. Set startServer  stopServer methods as public
bug_after_refactoring: private static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> private static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> Fix axis2Server.bat file does not start issue  This is to reverting the fix in PR #147. Set startServer  stopServer methods as public
fix_before_refactoring: public static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
fix_after_refactoring: public static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
√ fix_prediction_before: public static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
√ fix_prediction_after: public static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }

line_index: 1800
bug_before_refactoring: public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
bug_after_refactoring: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_before: public void setName ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_after: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = name ; }

line_index: 1804
bug_before_refactoring: @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
bug_after_refactoring: @ android.support.annotation.NonNull private static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
fix_before_refactoring: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
fix_after_refactoring: @ android.support.annotation.NonNull public static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
√ fix_prediction_before: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
√ fix_prediction_after: @ android.support.annotation.NonNull public static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }

line_index: 1826
bug_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> Bugs fixed
bug_after_refactoring: @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> Bugs fixed
fix_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
fix_after_refactoring: @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
√ fix_prediction_before: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
√ fix_prediction_after: @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}

line_index: 1840
bug_before_refactoring: public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> handful of bug fixes
bug_after_refactoring: public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> handful of bug fixes
fix_before_refactoring: public void setText ( java.lang.String text ) { this . text = text ; }
fix_after_refactoring: public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { this . text = text ; }
√ fix_prediction_before: public void setText ( java.lang.String text ) { this . text = text ; }
√ fix_prediction_after: public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { this . text = text ; }

line_index: 1868
bug_before_refactoring: public java.lang.String getSerialNumber () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> public java.lang.String getSerialNumber () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> Change encoding from x-windows to UTF-8  Change layout and fix the bug of sending redundant reply.  Change dialog dismiss() to cancel() because of extra dialog showing on screen if onStop() is invoked.
bug_after_refactoring: public java.lang.String psqxhmrgahhxqaowsopu () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> public java.lang.String psqxhmrgahhxqaowsopu () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> Change encoding from x-windows to UTF-8  Change layout and fix the bug of sending redundant reply.  Change dialog dismiss() to cancel() because of extra dialog showing on screen if onStop() is invoked.
fix_before_refactoring: public java.lang.String getSerialNumber () { return serialNum ; }
fix_after_refactoring: public java.lang.String psqxhmrgahhxqaowsopu () { return serialNum ; }
√ fix_prediction_before: public java.lang.String getSerialNumber () { return serialNum ; }
√ fix_prediction_after: public java.lang.String psqxhmrgahhxqaowsopu () { return serialNum ; }

line_index: 1881
bug_before_refactoring: @ java.lang.Override public void run () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> @ java.lang.Override public void run () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> Fixed some compile errors  still WIP
bug_after_refactoring: @ java.lang.Override public void qzwocnfyjeeixgwweotx () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> @ java.lang.Override public void qzwocnfyjeeixgwweotx () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> Fixed some compile errors  still WIP
fix_before_refactoring: @ java.lang.Override public void run () {}
fix_after_refactoring: @ java.lang.Override public void qzwocnfyjeeixgwweotx () {}
√ fix_prediction_before: @ java.lang.Override public void run () {}
√ fix_prediction_after: @ java.lang.Override public void qzwocnfyjeeixgwweotx () {}

line_index: 1883
bug_before_refactoring: public long getGymOffense () { return gymOffense . get () ; } <s> public long getGymOffense () { return gymOffense . get () ; } <s> Fixing Merge Errors with double column
bug_after_refactoring: public long pomzkztncxhxobqcwbnm () { return gymOffense . get () ; } <s> public long pomzkztncxhxobqcwbnm () { return gymOffense . get () ; } <s> Fixing Merge Errors with double column
fix_before_refactoring: public double getGymOffense () { return gymOffense . get () ; }
fix_after_refactoring: public double pomzkztncxhxobqcwbnm () { return gymOffense . get () ; }
√ fix_prediction_before: public double getGymOffense () { return gymOffense . get () ; }
√ fix_prediction_after: public double pomzkztncxhxobqcwbnm () { return gymOffense . get () ; }

line_index: 1888
bug_before_refactoring: public algorithms.heap.HeapTreeNode clone () { try { super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> public algorithms.heap.HeapTreeNode clone () { try { super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> solved bugs on dictionary still to do in heap
bug_after_refactoring: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { try { super . pllvlwjcejedhpijfhls () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { try { super . pllvlwjcejedhpijfhls () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> solved bugs on dictionary still to do in heap
fix_before_refactoring: public algorithms.heap.HeapTreeNode clone () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }
fix_after_refactoring: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }
√ fix_prediction_before: public algorithms.heap.HeapTreeNode clone () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }
√ fix_prediction_after: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }

line_index: 1913
bug_before_refactoring: public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
bug_after_refactoring: public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) {}

line_index: 1920
bug_before_refactoring: @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
bug_after_refactoring: @ org.spine3.server.aggregate.Apply public void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
fix_before_refactoring: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
fix_after_refactoring: @ org.spine3.server.aggregate.Apply private void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; }
√ fix_prediction_before: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
√ fix_prediction_after: @ org.spine3.server.aggregate.Apply private void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; }

line_index: 1929
bug_before_refactoring: public void close () { stopBgTask () ; xmlsocket . close () ; xmlsocket = null ; } <s> public void close () { stopBgTask () ; xmlsocket . close () ; xmlsocket = null ; } <s> Fix: exception after socket error
bug_after_refactoring: public void fcrbrhqijxmfqqeyojvk () { stopBgTask () ; xmlsocket . fcrbrhqijxmfqqeyojvk () ; xmlsocket = null ; } <s> public void fcrbrhqijxmfqqeyojvk () { stopBgTask () ; xmlsocket . fcrbrhqijxmfqqeyojvk () ; xmlsocket = null ; } <s> Fix: exception after socket error
fix_before_refactoring: public void close () { stopBgTask () ; if ( ( xmlsocket ) != null ) { xmlsocket . close () ; xmlsocket = null ; } }
fix_after_refactoring: public void fcrbrhqijxmfqqeyojvk () { stopBgTask () ; if ( ( xmlsocket ) != null ) { xmlsocket . fcrbrhqijxmfqqeyojvk () ; xmlsocket = null ; } }
√ fix_prediction_before: public void close () { stopBgTask () ; if ( ( xmlsocket ) != null ) { xmlsocket . close () ; xmlsocket = null ; } }
√ fix_prediction_after: public void fcrbrhqijxmfqqeyojvk () { stopBgTask () ; if ( ( xmlsocket ) != null ) { xmlsocket . fcrbrhqijxmfqqeyojvk () ; xmlsocket = null ; } }

line_index: 1930
bug_before_refactoring: @ java.lang.Override public void run () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> @ java.lang.Override public void run () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> Fixed bug that could not fetch transaction history from in-memory
bug_after_refactoring: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> Fixed bug that could not fetch transaction history from in-memory
fix_before_refactoring: @ java.lang.Override public void run () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
fix_after_refactoring: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
√ fix_prediction_after: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }

line_index: 1931
bug_before_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> Fixed rotation issues and ship loading issues
bug_after_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> Fixed rotation issues and ship loading issues
fix_before_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return theShipWorldServer . OriginWorld () . playerEntities ; }
fix_after_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return theShipWorldServer . OriginWorld () . playerEntities ; }
√ fix_prediction_before: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return theShipWorldServer . OriginWorld () . playerEntities ; }
√ fix_prediction_after: public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return theShipWorldServer . OriginWorld () . playerEntities ; }

line_index: 1934
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
bug_after_refactoring: @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) {}
fix_after_refactoring: @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) {}
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) {}
√ fix_prediction_after: @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) {}

line_index: 1938
bug_before_refactoring: @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> Move model registry to the appropriate event  - Fixes various issues and conflicts caused with others mods
bug_after_refactoring: @ java.lang.Override public void mluddbjbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> @ java.lang.Override public void mluddbjbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> Move model registry to the appropriate event  - Fixes various issues and conflicts caused with others mods
fix_before_refactoring: @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; }
fix_after_refactoring: @ java.lang.Override public void mluddbjbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; }
√ fix_prediction_before: @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; }
√ fix_prediction_after: @ java.lang.Override public void mluddbjbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; }

line_index: 1949
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
bug_after_refactoring: @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_after: @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) {}

line_index: 1951
bug_before_refactoring: public java.lang.String getPath () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> public java.lang.String getPath () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> Fix LookupPath parsing  Issue: SPR-15397
bug_after_refactoring: public java.lang.String ynnmlkqlapaknebykdxj () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> public java.lang.String ynnmlkqlapaknebykdxj () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> Fix LookupPath parsing  Issue: SPR-15397
fix_before_refactoring: public java.lang.String getPath () { return this . path ; }
fix_after_refactoring: public java.lang.String ynnmlkqlapaknebykdxj () { return this . path ; }
√ fix_prediction_before: public java.lang.String getPath () { return this . path ; }
√ fix_prediction_after: public java.lang.String ynnmlkqlapaknebykdxj () { return this . path ; }

line_index: 1956
bug_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
bug_after_refactoring: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
fix_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
fix_after_refactoring: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
√ fix_prediction_before: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
√ fix_prediction_after: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }

line_index: 1975
bug_before_refactoring: protected void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> protected void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
bug_after_refactoring: protected void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> protected void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
fix_before_refactoring: public void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; }
fix_after_refactoring: public void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; }
√ fix_prediction_before: public void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; }
√ fix_prediction_after: public void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; }

line_index: 1977
bug_before_refactoring: @ java.lang.Override public boolean has ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> @ java.lang.Override public boolean has ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> Possible fix for Thread Safety issue.
bug_after_refactoring: @ java.lang.Override public boolean zcyzoxgubkbsmqmtldoc ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> @ java.lang.Override public boolean zcyzoxgubkbsmqmtldoc ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> Possible fix for Thread Safety issue.
fix_before_refactoring: @ java.lang.Override public boolean has ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }
fix_after_refactoring: @ java.lang.Override public boolean zcyzoxgubkbsmqmtldoc ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }
√ fix_prediction_before: @ java.lang.Override public boolean has ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }
√ fix_prediction_after: @ java.lang.Override public boolean zcyzoxgubkbsmqmtldoc ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }

line_index: 1982
bug_before_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
bug_after_refactoring: public boolean akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
fix_before_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
fix_after_refactoring: public void akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
√ fix_prediction_before: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
√ fix_prediction_after: public void akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }

line_index: 1995
bug_before_refactoring: public java.lang.String getPerformativeName () { return data . getPerformativeName () ; } <s> public java.lang.String getPerformativeName () { return data . getPerformativeName () ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
bug_after_refactoring: public java.lang.String hpeclfxxcehahjlmxpnw () { return data . hpeclfxxcehahjlmxpnw () ; } <s> public java.lang.String hpeclfxxcehahjlmxpnw () { return data . hpeclfxxcehahjlmxpnw () ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
fix_before_refactoring: public java.lang.String getPerformativeName () { return getData () . getPerformativeName () ; }
fix_after_refactoring: public java.lang.String hpeclfxxcehahjlmxpnw () { return getData () . hpeclfxxcehahjlmxpnw () ; }
√ fix_prediction_before: public java.lang.String getPerformativeName () { return getData () . getPerformativeName () ; }
√ fix_prediction_after: public java.lang.String hpeclfxxcehahjlmxpnw () { return getData () . hpeclfxxcehahjlmxpnw () ; }

line_index: 1996
bug_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; loadItems ( BUNDLE_QUERY_REVIEW , getString ( mMovie . getId () ) ) ; loadItems ( BUNDLE_QUERY_VIDEO , getString ( mMovie . getId () ) ) ; } <s> @ java.lang.Override protected void onResume () { super . onResume () ; loadItems ( BUNDLE_QUERY_REVIEW , getString ( mMovie . getId () ) ) ; loadItems ( BUNDLE_QUERY_VIDEO , getString ( mMovie . getId () ) ) ; } <s> fixed issues
bug_after_refactoring: @ java.lang.Override protected void ujsanxsyewomqcaxryqc () { super . ujsanxsyewomqcaxryqc () ; loadItems ( BUNDLE_QUERY_REVIEW , getString ( mMovie . getId () ) ) ; loadItems ( BUNDLE_QUERY_VIDEO , getString ( mMovie . getId () ) ) ; } <s> @ java.lang.Override protected void ujsanxsyewomqcaxryqc () { super . ujsanxsyewomqcaxryqc () ; loadItems ( BUNDLE_QUERY_REVIEW , getString ( mMovie . getId () ) ) ; loadItems ( BUNDLE_QUERY_VIDEO , getString ( mMovie . getId () ) ) ; } <s> fixed issues
fix_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; }
fix_after_refactoring: @ java.lang.Override protected void ujsanxsyewomqcaxryqc () { super . ujsanxsyewomqcaxryqc () ; }
√ fix_prediction_before: @ java.lang.Override protected void onResume () { super . onResume () ; }
√ fix_prediction_after: @ java.lang.Override protected void ujsanxsyewomqcaxryqc () { super . ujsanxsyewomqcaxryqc () ; }

line_index: 2000
bug_before_refactoring: public static void updatePilot ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } <s> public static void updatePilot ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } <s> bugfix: null checks in sdk methods
bug_after_refactoring: public static void ysqrbhfbvmhsjpgtezww ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } <s> public static void ysqrbhfbvmhsjpgtezww ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } <s> bugfix: null checks in sdk methods
fix_before_refactoring: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } }
fix_after_refactoring: public static void ysqrbhfbvmhsjpgtezww ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } }
√ fix_prediction_before: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } }
√ fix_prediction_after: public static void ysqrbhfbvmhsjpgtezww ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } }

line_index: 2020
bug_before_refactoring: @ java.lang.Override public java.lang.String getAdminHost () { java.lang.String adminHost = settings . getAdminHost () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . getAdminHost () ; } <s> @ java.lang.Override public java.lang.String getAdminHost () { java.lang.String adminHost = settings . getAdminHost () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . getAdminHost () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
bug_after_refactoring: @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { java.lang.String adminHost = settings . uwvuiormpiioilawojfh () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . uwvuiormpiioilawojfh () ; } <s> @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { java.lang.String adminHost = settings . uwvuiormpiioilawojfh () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . uwvuiormpiioilawojfh () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
fix_before_refactoring: @ java.lang.Override public java.lang.String getAdminHost () { return settings . getAdminHost () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { return settings . uwvuiormpiioilawojfh () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getAdminHost () { return settings . getAdminHost () ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { return settings . uwvuiormpiioilawojfh () ; }

line_index: 2033
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
bug_after_refactoring: public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
fix_after_refactoring: public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
√ fix_prediction_after: public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }

line_index: 2037
bug_before_refactoring: public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
bug_after_refactoring: public static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
fix_before_refactoring: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
fix_after_refactoring: private static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
√ fix_prediction_before: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
√ fix_prediction_after: private static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }

line_index: 2044
bug_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
bug_after_refactoring: @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
fix_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
fix_after_refactoring: @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
√ fix_prediction_before: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
√ fix_prediction_after: @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}

line_index: 2050
bug_before_refactoring: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> Update no. 11  Reading and writing process has been sped up by about 20% and also potentially works in so-called online mode. However  the online mode is not yet implemented. Improvements. Various bug fixes.
bug_after_refactoring: public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> Update no. 11  Reading and writing process has been sped up by about 20% and also potentially works in so-called online mode. However  the online mode is not yet implemented. Improvements. Various bug fixes.
fix_before_refactoring: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }
fix_after_refactoring: public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }
√ fix_prediction_before: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }
√ fix_prediction_after: public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }

line_index: 2054
bug_before_refactoring: public java.lang.Object getDisplayValue ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> public java.lang.Object getDisplayValue ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> Fix compiler errors/warnings in o.g.w.d.l.CoverageView*
bug_after_refactoring: public java.lang.Object sedcbirvqskhqmugbjbi ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> public java.lang.Object sedcbirvqskhqmugbjbi ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> Fix compiler errors/warnings in o.g.w.d.l.CoverageView*
fix_before_refactoring: public java.lang.Object getDisplayValue ( org.geoserver.catalog.CoverageView.CompositionType object ) { return object . displayValue () ; }
fix_after_refactoring: public java.lang.Object sedcbirvqskhqmugbjbi ( org.geoserver.catalog.CoverageView.CompositionType object ) { return object . displayValue () ; }
√ fix_prediction_before: public java.lang.Object getDisplayValue ( org.geoserver.catalog.CoverageView.CompositionType object ) { return object . displayValue () ; }
√ fix_prediction_after: public java.lang.Object sedcbirvqskhqmugbjbi ( org.geoserver.catalog.CoverageView.CompositionType object ) { return object . displayValue () ; }

