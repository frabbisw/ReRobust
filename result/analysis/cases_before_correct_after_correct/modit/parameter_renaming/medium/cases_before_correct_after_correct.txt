line_index: 6
bug_before_refactoring: private static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } } <s> private static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } } <s> Fixed strange bug where classes were loading with outdated info. Fixed bug where clicking save while editing a section without actually changing anything would cause a crash. Fixed a bug where schedules wouldn't update properly after changing a class's priority.
bug_after_refactoring: private static void releaseColor ( int ndeqeitbqvcptrvpksap , int mribfziqdrnbjcxjablx ) { switch ( mribfziqdrnbjcxjablx ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; } } <s> private static void releaseColor ( int ndeqeitbqvcptrvpksap , int mribfziqdrnbjcxjablx ) { switch ( mribfziqdrnbjcxjablx ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; } } <s> Fixed strange bug where classes were loading with outdated info. Fixed bug where clicking save while editing a section without actually changing anything would cause a crash. Fixed a bug where schedules wouldn't update properly after changing a class's priority.
fix_before_refactoring: public static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } }
fix_after_refactoring: public static void releaseColor ( int ndeqeitbqvcptrvpksap , int mribfziqdrnbjcxjablx ) { switch ( mribfziqdrnbjcxjablx ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; } }
√ fix_prediction_before: public static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } }
√ fix_prediction_after: public static void releaseColor ( int ndeqeitbqvcptrvpksap , int mribfziqdrnbjcxjablx ) { switch ( mribfziqdrnbjcxjablx ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; } }

line_index: 12
bug_before_refactoring: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> fix bugy: FileID will not set if file is empty
bug_after_refactoring: private void upload ( com.webessay.model.Orders rmsrjpqridfrnrsvsdum , org.springframework.web.multipart.MultipartFile bpfzlhjlibziqdjifxtd ) throws java.lang.Exception { com.webessay.model.Uploadbpfzlhjlibziqdjifxtd entity = new com.webessay.model.Uploadbpfzlhjlibziqdjifxtd () ; entity . setFileContentType ( bpfzlhjlibziqdjifxtd . getContentType () ) ; entity . setFileName ( bpfzlhjlibziqdjifxtd . getOriginalFilename () ) ; entity . setFileSize ( bpfzlhjlibziqdjifxtd . getSize () ) ; entity . setFile ( bpfzlhjlibziqdjifxtd . getBytes () ) ; uploadrepo . save ( entity ) ; rmsrjpqridfrnrsvsdum . setFileId ( entity . getId () ) ; } <s> private void upload ( com.webessay.model.Orders rmsrjpqridfrnrsvsdum , org.springframework.web.multipart.MultipartFile bpfzlhjlibziqdjifxtd ) throws java.lang.Exception { com.webessay.model.Uploadbpfzlhjlibziqdjifxtd entity = new com.webessay.model.Uploadbpfzlhjlibziqdjifxtd () ; entity . setFileContentType ( bpfzlhjlibziqdjifxtd . getContentType () ) ; entity . setFileName ( bpfzlhjlibziqdjifxtd . getOriginalFilename () ) ; entity . setFileSize ( bpfzlhjlibziqdjifxtd . getSize () ) ; entity . setFile ( bpfzlhjlibziqdjifxtd . getBytes () ) ; uploadrepo . save ( entity ) ; rmsrjpqridfrnrsvsdum . setFileId ( entity . getId () ) ; } <s> fix bugy: FileID will not set if file is empty
fix_before_refactoring: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } }
fix_after_refactoring: private void upload ( com.webessay.model.Orders rmsrjpqridfrnrsvsdum , org.springframework.web.multipart.MultipartFile bpfzlhjlibziqdjifxtd ) throws java.lang.Exception { if ( ( bpfzlhjlibziqdjifxtd . getSize () ) > 0 ) { com.webessay.model.Uploadbpfzlhjlibziqdjifxtd entity = new com.webessay.model.Uploadbpfzlhjlibziqdjifxtd () ; entity . setFileContentType ( bpfzlhjlibziqdjifxtd . getContentType () ) ; entity . setFileName ( bpfzlhjlibziqdjifxtd . getOriginalFilename () ) ; entity . setFileSize ( bpfzlhjlibziqdjifxtd . getSize () ) ; entity . setFile ( bpfzlhjlibziqdjifxtd . getBytes () ) ; uploadrepo . save ( entity ) ; rmsrjpqridfrnrsvsdum . setFileId ( entity . getId () ) ; } }
√ fix_prediction_before: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } }
√ fix_prediction_after: private void upload ( com.webessay.model.Orders rmsrjpqridfrnrsvsdum , org.springframework.web.multipart.MultipartFile bpfzlhjlibziqdjifxtd ) throws java.lang.Exception { if ( ( bpfzlhjlibziqdjifxtd . getSize () ) > 0 ) { com.webessay.model.Uploadbpfzlhjlibziqdjifxtd entity = new com.webessay.model.Uploadbpfzlhjlibziqdjifxtd () ; entity . setFileContentType ( bpfzlhjlibziqdjifxtd . getContentType () ) ; entity . setFileName ( bpfzlhjlibziqdjifxtd . getOriginalFilename () ) ; entity . setFileSize ( bpfzlhjlibziqdjifxtd . getSize () ) ; entity . setFile ( bpfzlhjlibziqdjifxtd . getBytes () ) ; uploadrepo . save ( entity ) ; rmsrjpqridfrnrsvsdum . setFileId ( entity . getId () ) ; } }

line_index: 23
bug_before_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
bug_after_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } } return null ; } <s> public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } } return null ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
fix_before_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
fix_after_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } return null ; }
√ fix_prediction_before: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
√ fix_prediction_after: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } return null ; }

line_index: 47
bug_before_refactoring: private static void put ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> private static void put ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> fix a bug
bug_after_refactoring: private static void put ( java.lang.String fkpctoqmfkophaziiihw , java.lang.String kfwjqrqsawestvhdcrgy , com.chinamobile.iot.onenet.OneNetApiCallback oizxbiwfhydrswplwkfc ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , kfwjqrqsawestvhdcrgy ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( fkpctoqmfkophaziiihw , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( oizxbiwfhydrswplwkfc ) ) ; } <s> private static void put ( java.lang.String fkpctoqmfkophaziiihw , java.lang.String kfwjqrqsawestvhdcrgy , com.chinamobile.iot.onenet.OneNetApiCallback oizxbiwfhydrswplwkfc ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , kfwjqrqsawestvhdcrgy ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( fkpctoqmfkophaziiihw , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( oizxbiwfhydrswplwkfc ) ) ; } <s> fix a bug
fix_before_refactoring: public static void put ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
fix_after_refactoring: public static void put ( java.lang.String fkpctoqmfkophaziiihw , java.lang.String kfwjqrqsawestvhdcrgy , com.chinamobile.iot.onenet.OneNetApiCallback oizxbiwfhydrswplwkfc ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , kfwjqrqsawestvhdcrgy ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( fkpctoqmfkophaziiihw , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( oizxbiwfhydrswplwkfc ) ) ; }
√ fix_prediction_before: public static void put ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
√ fix_prediction_after: public static void put ( java.lang.String fkpctoqmfkophaziiihw , java.lang.String kfwjqrqsawestvhdcrgy , com.chinamobile.iot.onenet.OneNetApiCallback oizxbiwfhydrswplwkfc ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , kfwjqrqsawestvhdcrgy ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( fkpctoqmfkophaziiihw , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( oizxbiwfhydrswplwkfc ) ) ; }

line_index: 71
bug_before_refactoring: private static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> private static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> Fixing AttributeNormalizerTest to use real 'user.home'  + Removing many debug lines + Resolving System.getProperty("user.home") to real system path   before using it in the test case
bug_after_refactoring: private static java.lang.String toSystemPath ( java.lang.String xjztawvxtiuxfqddhneg ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( xjztawvxtiuxfqddhneg ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> private static java.lang.String toSystemPath ( java.lang.String xjztawvxtiuxfqddhneg ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( xjztawvxtiuxfqddhneg ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> Fixing AttributeNormalizerTest to use real 'user.home'  + Removing many debug lines + Resolving System.getProperty("user.home") to real system path   before using it in the test case
fix_before_refactoring: public static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }
fix_after_refactoring: public static java.lang.String toSystemPath ( java.lang.String xjztawvxtiuxfqddhneg ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( xjztawvxtiuxfqddhneg ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }
√ fix_prediction_before: public static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }
√ fix_prediction_after: public static java.lang.String toSystemPath ( java.lang.String xjztawvxtiuxfqddhneg ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( xjztawvxtiuxfqddhneg ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }

line_index: 82
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> @ java.lang.Override public void onClick ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void onClick ( android.seodjknqvhdheoxykyqy.View seodjknqvhdheoxykyqy ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> @ java.lang.Override public void onClick ( android.seodjknqvhdheoxykyqy.View seodjknqvhdheoxykyqy ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.seodjknqvhdheoxykyqy.View seodjknqvhdheoxykyqy ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } }
√ fix_prediction_after: @ java.lang.Override public void onClick ( android.seodjknqvhdheoxykyqy.View seodjknqvhdheoxykyqy ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } }

line_index: 113
bug_before_refactoring: public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } <s> public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } <s> Fixed deadlock issue. Came from Java synchronization.
bug_after_refactoring: public void payForMeal ( core.agent.Message slxwjejavrrkgmndeamq ) { core.restaurant.agent.Customer customer = slxwjejavrrkgmndeamq . get ( 0 ) ; float amountPaid = slxwjejavrrkgmndeamq . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } <s> public void payForMeal ( core.agent.Message slxwjejavrrkgmndeamq ) { core.restaurant.agent.Customer customer = slxwjejavrrkgmndeamq . get ( 0 ) ; float amountPaid = slxwjejavrrkgmndeamq . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } <s> Fixed deadlock issue. Came from Java synchronization.
fix_before_refactoring: public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; }
fix_after_refactoring: public void payForMeal ( core.agent.Message slxwjejavrrkgmndeamq ) { core.restaurant.agent.Customer customer = slxwjejavrrkgmndeamq . get ( 0 ) ; float amountPaid = slxwjejavrrkgmndeamq . get ( 1 ) ; float cost = 0 ; for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; }
√ fix_prediction_before: public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; }
√ fix_prediction_after: public void payForMeal ( core.agent.Message slxwjejavrrkgmndeamq ) { core.restaurant.agent.Customer customer = slxwjejavrrkgmndeamq . get ( 0 ) ; float amountPaid = slxwjejavrrkgmndeamq . get ( 1 ) ; float cost = 0 ; for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; }

line_index: 117
bug_before_refactoring: private void openChat ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; } <s> private void openChat ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; } <s> Merge pull request #5 from Herzy/master  Fixed problem with chat opening
bug_after_refactoring: private void openChat ( android.suyliffmacxfydlfunym.View suyliffmacxfydlfunym ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; } <s> private void openChat ( android.suyliffmacxfydlfunym.View suyliffmacxfydlfunym ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; } <s> Merge pull request #5 from Herzy/master  Fixed problem with chat opening
fix_before_refactoring: public void openChat ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void openChat ( android.suyliffmacxfydlfunym.View suyliffmacxfydlfunym ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }
√ fix_prediction_before: public void openChat ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }
√ fix_prediction_after: public void openChat ( android.suyliffmacxfydlfunym.View suyliffmacxfydlfunym ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }

line_index: 166
bug_before_refactoring: private org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } <s> private org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } <s> Merge pull request #767 from eclipse/sz/bugfixes  Make JdtTypeProvider easier to customize
bug_after_refactoring: private org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String xmkepwxdasqgmfnzxnze , java.lang.String qijiongazncpgkqittsu ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( qijiongazncpgkqittsu , xmkepwxdasqgmfnzxnze , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } <s> private org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String xmkepwxdasqgmfnzxnze , java.lang.String qijiongazncpgkqittsu ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( qijiongazncpgkqittsu , xmkepwxdasqgmfnzxnze , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } <s> Merge pull request #767 from eclipse/sz/bugfixes  Make JdtTypeProvider easier to customize
fix_before_refactoring: protected org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; }
fix_after_refactoring: protected org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String xmkepwxdasqgmfnzxnze , java.lang.String qijiongazncpgkqittsu ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( qijiongazncpgkqittsu , xmkepwxdasqgmfnzxnze , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; }
√ fix_prediction_before: protected org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; }
√ fix_prediction_after: protected org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String xmkepwxdasqgmfnzxnze , java.lang.String qijiongazncpgkqittsu ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( qijiongazncpgkqittsu , xmkepwxdasqgmfnzxnze , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; }

line_index: 168
bug_before_refactoring: public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
bug_after_refactoring: public static boolean deletePhSensor ( final java.lang.String pmoitibchtutujqvjybs ) { java.lang.String realName = pmoitibchtutujqvjybs . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> public static boolean deletePhSensor ( final java.lang.String pmoitibchtutujqvjybs ) { java.lang.String realName = pmoitibchtutujqvjybs . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
fix_before_refactoring: public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; }
fix_after_refactoring: public static boolean deletePhSensor ( final java.lang.String pmoitibchtutujqvjybs ) { java.lang.String realName = pmoitibchtutujqvjybs . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; }
√ fix_prediction_before: public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; }
√ fix_prediction_after: public static boolean deletePhSensor ( final java.lang.String pmoitibchtutujqvjybs ) { java.lang.String realName = pmoitibchtutujqvjybs . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; }

line_index: 190
bug_before_refactoring: private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } <s> private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } <s> Bug fixes and JUnit testing
bug_after_refactoring: private java.lang.String [] removeEmptyEntries ( java.lang.String [] zjgginsgeypkqgwwaywy ) { int emptyCount = 0 ; for ( java.lang.String queryPart : zjgginsgeypkqgwwaywy ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( zjgginsgeypkqgwwaywy.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : zjgginsgeypkqgwwaywy ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } <s> private java.lang.String [] removeEmptyEntries ( java.lang.String [] zjgginsgeypkqgwwaywy ) { int emptyCount = 0 ; for ( java.lang.String queryPart : zjgginsgeypkqgwwaywy ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( zjgginsgeypkqgwwaywy.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : zjgginsgeypkqgwwaywy ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } <s> Bug fixes and JUnit testing
fix_before_refactoring: protected java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; }
fix_after_refactoring: protected java.lang.String [] removeEmptyEntries ( java.lang.String [] zjgginsgeypkqgwwaywy ) { int emptyCount = 0 ; for ( java.lang.String queryPart : zjgginsgeypkqgwwaywy ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( zjgginsgeypkqgwwaywy.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : zjgginsgeypkqgwwaywy ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; }
√ fix_prediction_before: protected java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; }
√ fix_prediction_after: protected java.lang.String [] removeEmptyEntries ( java.lang.String [] zjgginsgeypkqgwwaywy ) { int emptyCount = 0 ; for ( java.lang.String queryPart : zjgginsgeypkqgwwaywy ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( zjgginsgeypkqgwwaywy.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : zjgginsgeypkqgwwaywy ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; }

line_index: 196
bug_before_refactoring: @ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( position > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } } <s> @ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( position > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } } <s> fix bugs
bug_after_refactoring: @ java.lang.Override public void onPageScrolled ( int aswoxmzamfdbfnhrrgkn , float aswoxmzamfdbfnhrrgknOffset , int aswoxmzamfdbfnhrrgknOffsetPixels ) { if ( aswoxmzamfdbfnhrrgkn > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( aswoxmzamfdbfnhrrgknOffset + aswoxmzamfdbfnhrrgkn ) ; setTranslationX ( translationX ) ; } } <s> @ java.lang.Override public void onPageScrolled ( int aswoxmzamfdbfnhrrgkn , float aswoxmzamfdbfnhrrgknOffset , int aswoxmzamfdbfnhrrgknOffsetPixels ) { if ( aswoxmzamfdbfnhrrgkn > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( aswoxmzamfdbfnhrrgknOffset + aswoxmzamfdbfnhrrgkn ) ; setTranslationX ( translationX ) ; } } <s> fix bugs
fix_before_refactoring: @ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; }
fix_after_refactoring: @ java.lang.Override public void onPageScrolled ( int aswoxmzamfdbfnhrrgkn , float aswoxmzamfdbfnhrrgknOffset , int aswoxmzamfdbfnhrrgknOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( aswoxmzamfdbfnhrrgknOffset + aswoxmzamfdbfnhrrgkn ) ; setTranslationX ( translationX ) ; }
√ fix_prediction_before: @ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; }
√ fix_prediction_after: @ java.lang.Override public void onPageScrolled ( int aswoxmzamfdbfnhrrgkn , float aswoxmzamfdbfnhrrgknOffset , int aswoxmzamfdbfnhrrgknOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( aswoxmzamfdbfnhrrgknOffset + aswoxmzamfdbfnhrrgkn ) ; setTranslationX ( translationX ) ; }

line_index: 210
bug_before_refactoring: private static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; } <s> private static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; } <s> Added Hungarian unit tests and fixed a minor line matrix bug
bug_after_refactoring: private static int calculateScore ( java.util.ArrayList < PairTime > zjaiubpzvzepqmaiyfju ) { int score = 0 ; for ( int i = 0 ; i < ( zjaiubpzvzepqmaiyfju . size () ) ; i ++ ) { score += zjaiubpzvzepqmaiyfju . get ( i ) . getPair () . getScore () ; } return score ; } <s> private static int calculateScore ( java.util.ArrayList < PairTime > zjaiubpzvzepqmaiyfju ) { int score = 0 ; for ( int i = 0 ; i < ( zjaiubpzvzepqmaiyfju . size () ) ; i ++ ) { score += zjaiubpzvzepqmaiyfju . get ( i ) . getPair () . getScore () ; } return score ; } <s> Added Hungarian unit tests and fixed a minor line matrix bug
fix_before_refactoring: public static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; }
fix_after_refactoring: public static int calculateScore ( java.util.ArrayList < PairTime > zjaiubpzvzepqmaiyfju ) { int score = 0 ; for ( int i = 0 ; i < ( zjaiubpzvzepqmaiyfju . size () ) ; i ++ ) { score += zjaiubpzvzepqmaiyfju . get ( i ) . getPair () . getScore () ; } return score ; }
√ fix_prediction_before: public static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; }
√ fix_prediction_after: public static int calculateScore ( java.util.ArrayList < PairTime > zjaiubpzvzepqmaiyfju ) { int score = 0 ; for ( int i = 0 ; i < ( zjaiubpzvzepqmaiyfju . size () ) ; i ++ ) { score += zjaiubpzvzepqmaiyfju . get ( i ) . getPair () . getScore () ; } return score ; }

line_index: 214
bug_before_refactoring: public static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> public static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> #330 Removed unused code/added comments  Because the MIDI issue is solved  I removed all code not being used (except for MIDIData() method which I moved over to SoundUtilExamples). Also added some clarifying comments and cleaned everything up. close #330
bug_after_refactoring: public static double noteToFreq ( int lmxnxtctorimbsazyost ) { int note = lmxnxtctorimbsazyost % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( lmxnxtctorimbsazyost / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> public static double noteToFreq ( int lmxnxtctorimbsazyost ) { int note = lmxnxtctorimbsazyost % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( lmxnxtctorimbsazyost / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> #330 Removed unused code/added comments  Because the MIDI issue is solved  I removed all code not being used (except for MIDIData() method which I moved over to SoundUtilExamples). Also added some clarifying comments and cleaned everything up. close #330
fix_before_refactoring: private static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
fix_after_refactoring: private static double noteToFreq ( int lmxnxtctorimbsazyost ) { int note = lmxnxtctorimbsazyost % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( lmxnxtctorimbsazyost / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
√ fix_prediction_before: private static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
√ fix_prediction_after: private static double noteToFreq ( int lmxnxtctorimbsazyost ) { int note = lmxnxtctorimbsazyost % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( lmxnxtctorimbsazyost / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }

line_index: 216
bug_before_refactoring: private static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> private static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> - adding a commands to help test traits (create_test  spawn_test) - fixed some bugs in allergy  and added level support
bug_after_refactoring: private static java.lang.String getUniqueTitle ( net.minecraft.wmpcrhaxzywsmyipbnsm.World wmpcrhaxzywsmyipbnsm ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( wmpcrhaxzywsmyipbnsm ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> private static java.lang.String getUniqueTitle ( net.minecraft.wmpcrhaxzywsmyipbnsm.World wmpcrhaxzywsmyipbnsm ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( wmpcrhaxzywsmyipbnsm ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> - adding a commands to help test traits (create_test  spawn_test) - fixed some bugs in allergy  and added level support
fix_before_refactoring: public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }
fix_after_refactoring: public static java.lang.String getUniqueTitle ( net.minecraft.wmpcrhaxzywsmyipbnsm.World wmpcrhaxzywsmyipbnsm ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( wmpcrhaxzywsmyipbnsm ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }
√ fix_prediction_before: public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }
√ fix_prediction_after: public static java.lang.String getUniqueTitle ( net.minecraft.wmpcrhaxzywsmyipbnsm.World wmpcrhaxzywsmyipbnsm ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( wmpcrhaxzywsmyipbnsm ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }

line_index: 261
bug_before_refactoring: public void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } <s> public void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } <s> fixed issue with item padding in MainActivity + some fixes
bug_after_refactoring: public void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult bibzjowsjjpaxqzlaycs ) { if ( ! ( bibzjowsjjpaxqzlaycs . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + bibzjowsjjpaxqzlaycs ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } <s> public void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult bibzjowsjjpaxqzlaycs ) { if ( ! ( bibzjowsjjpaxqzlaycs . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + bibzjowsjjpaxqzlaycs ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } <s> fixed issue with item padding in MainActivity + some fixes
fix_before_refactoring: private void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; }
fix_after_refactoring: private void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult bibzjowsjjpaxqzlaycs ) { if ( ! ( bibzjowsjjpaxqzlaycs . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + bibzjowsjjpaxqzlaycs ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; }
√ fix_prediction_before: private void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; }
√ fix_prediction_after: private void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult bibzjowsjjpaxqzlaycs ) { if ( ! ( bibzjowsjjpaxqzlaycs . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + bibzjowsjjpaxqzlaycs ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; }

line_index: 275
bug_before_refactoring: protected void onPostExecute ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } } <s> protected void onPostExecute ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } } <s> BUG FIXES
bug_after_refactoring: protected void onPostExecute ( java.lang.Integer odlhqqwdgvjzfggtdofg ) { if ( odlhqqwdgvjzfggtdofg < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } } <s> protected void onPostExecute ( java.lang.Integer odlhqqwdgvjzfggtdofg ) { if ( odlhqqwdgvjzfggtdofg < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } } <s> BUG FIXES
fix_before_refactoring: protected void onPostExecute ( java.lang.Integer result ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; }
fix_after_refactoring: protected void onPostExecute ( java.lang.Integer odlhqqwdgvjzfggtdofg ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; }
√ fix_prediction_before: protected void onPostExecute ( java.lang.Integer result ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; }
√ fix_prediction_after: protected void onPostExecute ( java.lang.Integer odlhqqwdgvjzfggtdofg ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; }

line_index: 278
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( permissions . getPermission () ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( permissions . getPermission () ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } } <s> Fixed birthday checkbox bug.  Checkbox would not remember position but is now fixed with SharedPreferences.
bug_after_refactoring: @ java.lang.Override public void onClick ( android.mzmzseevieggralnvacu.View mzmzseevieggralnvacu ) { if ( permissions . getPermission () ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } } <s> @ java.lang.Override public void onClick ( android.mzmzseevieggralnvacu.View mzmzseevieggralnvacu ) { if ( permissions . getPermission () ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } } <s> Fixed birthday checkbox bug.  Checkbox would not remember position but is now fixed with SharedPreferences.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.mzmzseevieggralnvacu.View mzmzseevieggralnvacu ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; }
√ fix_prediction_after: @ java.lang.Override public void onClick ( android.mzmzseevieggralnvacu.View mzmzseevieggralnvacu ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; }

line_index: 389
bug_before_refactoring: protected android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> protected android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> Clear PMD issues  and fix members visibility.
bug_after_refactoring: protected android.graphics.Bitmap setBitmapSize ( int uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl , int koyearwqsodbtxmsybox ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl ) ; float s = ( koyearwqsodbtxmsybox * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> protected android.graphics.Bitmap setBitmapSize ( int uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl , int koyearwqsodbtxmsybox ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl ) ; float s = ( koyearwqsodbtxmsybox * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> Clear PMD issues  and fix members visibility.
fix_before_refactoring: private android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
fix_after_refactoring: private android.graphics.Bitmap setBitmapSize ( int uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl , int koyearwqsodbtxmsybox ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl ) ; float s = ( koyearwqsodbtxmsybox * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
√ fix_prediction_before: private android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
√ fix_prediction_after: private android.graphics.Bitmap setBitmapSize ( int uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl , int koyearwqsodbtxmsybox ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl ) ; float s = ( koyearwqsodbtxmsybox * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }

line_index: 402
bug_before_refactoring: private static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } <s> private static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } <s> Fixed a bug in the misclassifications gadget.
bug_after_refactoring: private static int getIndex ( edu.cmu.tetrad.graph.Endpoint vdklaqweknitogrhxyza ) { if ( vdklaqweknitogrhxyza == ( Endpoint.CIRCLE ) ) return 0 ; if ( vdklaqweknitogrhxyza == ( Endpoint.ARROW ) ) return 1 ; if ( vdklaqweknitogrhxyza == ( Endpoint.TAIL ) ) return 2 ; if ( vdklaqweknitogrhxyza == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } <s> private static int getIndex ( edu.cmu.tetrad.graph.Endpoint vdklaqweknitogrhxyza ) { if ( vdklaqweknitogrhxyza == ( Endpoint.CIRCLE ) ) return 0 ; if ( vdklaqweknitogrhxyza == ( Endpoint.ARROW ) ) return 1 ; if ( vdklaqweknitogrhxyza == ( Endpoint.TAIL ) ) return 2 ; if ( vdklaqweknitogrhxyza == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } <s> Fixed a bug in the misclassifications gadget.
fix_before_refactoring: public static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; }
fix_after_refactoring: public static int getIndex ( edu.cmu.tetrad.graph.Endpoint vdklaqweknitogrhxyza ) { if ( vdklaqweknitogrhxyza == ( Endpoint.CIRCLE ) ) return 0 ; if ( vdklaqweknitogrhxyza == ( Endpoint.ARROW ) ) return 1 ; if ( vdklaqweknitogrhxyza == ( Endpoint.TAIL ) ) return 2 ; if ( vdklaqweknitogrhxyza == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; }
√ fix_prediction_before: public static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; }
√ fix_prediction_after: public static int getIndex ( edu.cmu.tetrad.graph.Endpoint vdklaqweknitogrhxyza ) { if ( vdklaqweknitogrhxyza == ( Endpoint.CIRCLE ) ) return 0 ; if ( vdklaqweknitogrhxyza == ( Endpoint.ARROW ) ) return 1 ; if ( vdklaqweknitogrhxyza == ( Endpoint.TAIL ) ) return 2 ; if ( vdklaqweknitogrhxyza == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; }

line_index: 432
bug_before_refactoring: public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> Handle Permission request and Fixed bug
bug_after_refactoring: public jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; } <s> public jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; } <s> Handle Permission request and Fixed bug
fix_before_refactoring: private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
fix_after_refactoring: private jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; }
√ fix_prediction_before: private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
√ fix_prediction_after: private jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; }

line_index: 443
bug_before_refactoring: public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( contains ( toAdd ) ) { if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList . add ( toAdd ) ; } <s> public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( contains ( toAdd ) ) { if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList . add ( toAdd ) ; } <s> Fix codacy issues
bug_after_refactoring: public void add ( seedu.taskboss.model.task.Task wnvnowltdphnrrxfibut ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert wnvnowltdphnrrxfibut != null ; if ( contains ( wnvnowltdphnrrxfibut ) ) { if ( ! ( wnvnowltdphnrrxfibut . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList . add ( wnvnowltdphnrrxfibut ) ; } <s> public void add ( seedu.taskboss.model.task.Task wnvnowltdphnrrxfibut ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert wnvnowltdphnrrxfibut != null ; if ( contains ( wnvnowltdphnrrxfibut ) ) { if ( ! ( wnvnowltdphnrrxfibut . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList . add ( wnvnowltdphnrrxfibut ) ; } <s> Fix codacy issues
fix_before_refactoring: public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( ( contains ( toAdd ) ) && ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . add ( toAdd ) ; }
fix_after_refactoring: public void add ( seedu.taskboss.model.task.Task wnvnowltdphnrrxfibut ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert wnvnowltdphnrrxfibut != null ; if ( ( contains ( wnvnowltdphnrrxfibut ) ) && ( ! ( wnvnowltdphnrrxfibut . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . add ( wnvnowltdphnrrxfibut ) ; }
√ fix_prediction_before: public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( ( contains ( toAdd ) ) && ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . add ( toAdd ) ; }
√ fix_prediction_after: public void add ( seedu.taskboss.model.task.Task wnvnowltdphnrrxfibut ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert wnvnowltdphnrrxfibut != null ; if ( ( contains ( wnvnowltdphnrrxfibut ) ) && ( ! ( wnvnowltdphnrrxfibut . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . add ( wnvnowltdphnrrxfibut ) ; }

line_index: 457
bug_before_refactoring: public org.json.JSONObject toJson ( org.json.JSONObject attrToFilterJsonObject ) { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; } <s> public org.json.JSONObject toJson ( org.json.JSONObject attrToFilterJsonObject ) { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; } <s> Testing json format and fixing bugs
bug_after_refactoring: public org.json.JSONObject toJson ( org.json.JSONObject iscqdbmysqxhtszvpopu ) { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; } <s> public org.json.JSONObject toJson ( org.json.JSONObject iscqdbmysqxhtszvpopu ) { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; } <s> Testing json format and fixing bugs
fix_before_refactoring: public org.json.JSONObject toJson () { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; }
fix_after_refactoring: public org.json.JSONObject toJson () { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; }
√ fix_prediction_before: public org.json.JSONObject toJson () { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; }
√ fix_prediction_after: public org.json.JSONObject toJson () { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; }

line_index: 472
bug_before_refactoring: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> fixed bugs
bug_after_refactoring: public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> fixed bugs
fix_before_refactoring: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
fix_after_refactoring: public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true ) ; } }
√ fix_prediction_before: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
√ fix_prediction_after: public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true ) ; } }

line_index: 474
bug_before_refactoring: @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; } <s> @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; } <s> :bug: 修改 BeanComparatorUtil.propertyComparator(String  V...)和 BeanComparatorUtil.propertyComparator(String  List<V>)泛型的顺序 fix #618
bug_after_refactoring: @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String nllvrgswkinnzfcrhfvd , V . . . hgqczoyrruabedgiehoz ) { org.apache.commons.lang3.Validate . notBlank ( nllvrgswkinnzfcrhfvd , "nllvrgswkinnzfcrhfvd can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( hgqczoyrruabedgiehoz , "hgqczoyrruabedgiehoz can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( nllvrgswkinnzfcrhfvd , com.feilong.core.bean.ConvertUtil . toList ( hgqczoyrruabedgiehoz ) ) ; } <s> @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String nllvrgswkinnzfcrhfvd , V . . . hgqczoyrruabedgiehoz ) { org.apache.commons.lang3.Validate . notBlank ( nllvrgswkinnzfcrhfvd , "nllvrgswkinnzfcrhfvd can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( hgqczoyrruabedgiehoz , "hgqczoyrruabedgiehoz can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( nllvrgswkinnzfcrhfvd , com.feilong.core.bean.ConvertUtil . toList ( hgqczoyrruabedgiehoz ) ) ; } <s> :bug: 修改 BeanComparatorUtil.propertyComparator(String  V...)和 BeanComparatorUtil.propertyComparator(String  List<V>)泛型的顺序 fix #618
fix_before_refactoring: @ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; }
fix_after_refactoring: @ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyComparator ( java.lang.String nllvrgswkinnzfcrhfvd , V . . . hgqczoyrruabedgiehoz ) { org.apache.commons.lang3.Validate . notBlank ( nllvrgswkinnzfcrhfvd , "nllvrgswkinnzfcrhfvd can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( hgqczoyrruabedgiehoz , "hgqczoyrruabedgiehoz can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( nllvrgswkinnzfcrhfvd , com.feilong.core.bean.ConvertUtil . toList ( hgqczoyrruabedgiehoz ) ) ; }
√ fix_prediction_before: @ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; }
√ fix_prediction_after: @ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyComparator ( java.lang.String nllvrgswkinnzfcrhfvd , V . . . hgqczoyrruabedgiehoz ) { org.apache.commons.lang3.Validate . notBlank ( nllvrgswkinnzfcrhfvd , "nllvrgswkinnzfcrhfvd can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( hgqczoyrruabedgiehoz , "hgqczoyrruabedgiehoz can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( nllvrgswkinnzfcrhfvd , com.feilong.core.bean.ConvertUtil . toList ( hgqczoyrruabedgiehoz ) ) ; }

line_index: 489
bug_before_refactoring: public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } return null ; } <s> public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } return null ; } <s> [481025] Fix a NullPointException  Bug: 481025 Change-Id: Ifc4154bd288b7656fdf5c2456987d7f6dc9d69da Signed-off-by: Steve Monnier <steve.monnier@obeo.fr>
bug_after_refactoring: public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement ikhcrkpjzhcdzlvmhbte , java.lang.String cklhydkjaulqbaajluhv ) { for ( org.eclipse.core.runtime.IConfigurationElement ikhcrkpjzhcdzlvmhbteChild : ikhcrkpjzhcdzlvmhbte . getChildren ( cklhydkjaulqbaajluhv ) ) { if ( ( ikhcrkpjzhcdzlvmhbteChild . getAttribute ( cklhydkjaulqbaajluhv ) ) != null ) { return ikhcrkpjzhcdzlvmhbteChild . getAttribute ( cklhydkjaulqbaajluhv ) ; } } return null ; } <s> public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement ikhcrkpjzhcdzlvmhbte , java.lang.String cklhydkjaulqbaajluhv ) { for ( org.eclipse.core.runtime.IConfigurationElement ikhcrkpjzhcdzlvmhbteChild : ikhcrkpjzhcdzlvmhbte . getChildren ( cklhydkjaulqbaajluhv ) ) { if ( ( ikhcrkpjzhcdzlvmhbteChild . getAttribute ( cklhydkjaulqbaajluhv ) ) != null ) { return ikhcrkpjzhcdzlvmhbteChild . getAttribute ( cklhydkjaulqbaajluhv ) ; } } return null ; } <s> [481025] Fix a NullPointException  Bug: 481025 Change-Id: Ifc4154bd288b7656fdf5c2456987d7f6dc9d69da Signed-off-by: Steve Monnier <steve.monnier@obeo.fr>
fix_before_refactoring: public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { if ( configurationElement != null ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } } return null ; }
fix_after_refactoring: public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement ikhcrkpjzhcdzlvmhbte , java.lang.String cklhydkjaulqbaajluhv ) { if ( ikhcrkpjzhcdzlvmhbte != null ) { for ( org.eclipse.core.runtime.IConfigurationElement ikhcrkpjzhcdzlvmhbteChild : ikhcrkpjzhcdzlvmhbte . getChildren ( cklhydkjaulqbaajluhv ) ) { if ( ( ikhcrkpjzhcdzlvmhbteChild . getAttribute ( cklhydkjaulqbaajluhv ) ) != null ) { return ikhcrkpjzhcdzlvmhbteChild . getAttribute ( cklhydkjaulqbaajluhv ) ; } } } return null ; }
√ fix_prediction_before: public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { if ( configurationElement != null ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } } return null ; }
√ fix_prediction_after: public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement ikhcrkpjzhcdzlvmhbte , java.lang.String cklhydkjaulqbaajluhv ) { if ( ikhcrkpjzhcdzlvmhbte != null ) { for ( org.eclipse.core.runtime.IConfigurationElement ikhcrkpjzhcdzlvmhbteChild : ikhcrkpjzhcdzlvmhbte . getChildren ( cklhydkjaulqbaajluhv ) ) { if ( ( ikhcrkpjzhcdzlvmhbteChild . getAttribute ( cklhydkjaulqbaajluhv ) ) != null ) { return ikhcrkpjzhcdzlvmhbteChild . getAttribute ( cklhydkjaulqbaajluhv ) ; } } } return null ; }

line_index: 492
bug_before_refactoring: private boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; } <s> private boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; } <s> bug fix // sine and changes type a functions using ans might be wrong when used thus type check is re run at run time to ensure that all types are ok
bug_after_refactoring: private boolean checkBlock ( org.w3c.dom.Node yooszxnsywbdjnunowvq ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( yooszxnsywbdjnunowvq . getChildNodes () ) ; stackFrames . pop () ; return ok ; } <s> private boolean checkBlock ( org.w3c.dom.Node yooszxnsywbdjnunowvq ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( yooszxnsywbdjnunowvq . getChildNodes () ) ; stackFrames . pop () ; return ok ; } <s> bug fix // sine and changes type a functions using ans might be wrong when used thus type check is re run at run time to ensure that all types are ok
fix_before_refactoring: protected boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; }
fix_after_refactoring: protected boolean checkBlock ( org.w3c.dom.Node yooszxnsywbdjnunowvq ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( yooszxnsywbdjnunowvq . getChildNodes () ) ; stackFrames . pop () ; return ok ; }
√ fix_prediction_before: protected boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; }
√ fix_prediction_after: protected boolean checkBlock ( org.w3c.dom.Node yooszxnsywbdjnunowvq ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( yooszxnsywbdjnunowvq . getChildNodes () ) ; stackFrames . pop () ; return ok ; }

line_index: 498
bug_before_refactoring: private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> fixed some bugs
bug_after_refactoring: private boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; } <s> private boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; } <s> fixed some bugs
fix_before_refactoring: public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
fix_after_refactoring: public boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; }
√ fix_prediction_before: public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
√ fix_prediction_after: public boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; }

line_index: 514
bug_before_refactoring: public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> eclipse import bug fix
bug_after_refactoring: public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint qoxceqzzipmbvrkiiqve ) { java.lang.String className = null ; try { className = qoxceqzzipmbvrkiiqve . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint qoxceqzzipmbvrkiiqve ) { java.lang.String className = null ; try { className = qoxceqzzipmbvrkiiqve . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> eclipse import bug fix
fix_before_refactoring: private java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }
fix_after_refactoring: private java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint qoxceqzzipmbvrkiiqve ) { java.lang.String className = null ; try { className = qoxceqzzipmbvrkiiqve . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }
√ fix_prediction_before: private java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }
√ fix_prediction_after: private java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint qoxceqzzipmbvrkiiqve ) { java.lang.String className = null ; try { className = qoxceqzzipmbvrkiiqve . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }

line_index: 544
bug_before_refactoring: public void onClick ( android.view.View v ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> public void onClick ( android.view.View v ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> bugfix
bug_after_refactoring: public iycqmlvhwgmppparibleoid onClick ( android.iycqmlvhwgmppparibleiew.View iycqmlvhwgmppparible ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.deiycqmlvhwgmppparibleAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.deiycqmlvhwgmppparibleAddress ) . remoiycqmlvhwgmppparibleeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> public iycqmlvhwgmppparibleoid onClick ( android.iycqmlvhwgmppparibleiew.View iycqmlvhwgmppparible ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.deiycqmlvhwgmppparibleAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.deiycqmlvhwgmppparibleAddress ) . remoiycqmlvhwgmppparibleeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> bugfix
fix_before_refactoring: public void onClick ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; }
fix_after_refactoring: public iycqmlvhwgmppparibleoid onClick ( android.iycqmlvhwgmppparibleiew.View iycqmlvhwgmppparible ) { mDatabase . getReference ( ( ( "beacon/" + ( item.deiycqmlvhwgmppparibleAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.deiycqmlvhwgmppparibleAddress ) . remoiycqmlvhwgmppparibleeValue () ; item.isLost = false ; }
√ fix_prediction_before: public void onClick ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; }
√ fix_prediction_after: public iycqmlvhwgmppparibleoid onClick ( android.iycqmlvhwgmppparibleiew.View iycqmlvhwgmppparible ) { mDatabase . getReference ( ( ( "beacon/" + ( item.deiycqmlvhwgmppparibleAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.deiycqmlvhwgmppparibleAddress ) . remoiycqmlvhwgmppparibleeValue () ; item.isLost = false ; }

line_index: 582
bug_before_refactoring: private static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } <s> private static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } <s> Fixing a bug (validate time stamp  check for future data)
bug_after_refactoring: private static boolean validatePriority ( java.lang.String tnjfpfipdakqfgxototh ) { if ( tnjfpfipdakqfgxototh == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( tnjfpfipdakqfgxototh ) ) return true ; } return false ; } <s> private static boolean validatePriority ( java.lang.String tnjfpfipdakqfgxototh ) { if ( tnjfpfipdakqfgxototh == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( tnjfpfipdakqfgxototh ) ) return true ; } return false ; } <s> Fixing a bug (validate time stamp  check for future data)
fix_before_refactoring: public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; }
fix_after_refactoring: public static boolean validatePriority ( java.lang.String tnjfpfipdakqfgxototh ) { if ( tnjfpfipdakqfgxototh == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( tnjfpfipdakqfgxototh ) ) return true ; } return false ; }
√ fix_prediction_before: public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; }
√ fix_prediction_after: public static boolean validatePriority ( java.lang.String tnjfpfipdakqfgxototh ) { if ( tnjfpfipdakqfgxototh == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( tnjfpfipdakqfgxototh ) ) return true ; } return false ; }

line_index: 588
bug_before_refactoring: public static void deleteTimer ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.timerLock ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } } } <s> public static void deleteTimer ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.timerLock ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } } } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
bug_after_refactoring: public static void deleteTimer ( final java.lang.String xovopqorauaqkrhfzcxx ) { synchronized ( com.sb.elsinore.LaunchControl.timerLock ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( xovopqorauaqkrhfzcxx ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } } } <s> public static void deleteTimer ( final java.lang.String xovopqorauaqkrhfzcxx ) { synchronized ( com.sb.elsinore.LaunchControl.timerLock ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( xovopqorauaqkrhfzcxx ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } } } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
fix_before_refactoring: public static void deleteTimer ( final java.lang.String name ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }
fix_after_refactoring: public static void deleteTimer ( final java.lang.String xovopqorauaqkrhfzcxx ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( xovopqorauaqkrhfzcxx ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }
√ fix_prediction_before: public static void deleteTimer ( final java.lang.String name ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }
√ fix_prediction_after: public static void deleteTimer ( final java.lang.String xovopqorauaqkrhfzcxx ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( xovopqorauaqkrhfzcxx ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }

line_index: 598
bug_before_refactoring: public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
bug_after_refactoring: public static int getSequenceNumber ( byte [] vtwrdybmdppgpfrasoli ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( vtwrdybmdppgpfrasoli , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> public static int getSequenceNumber ( byte [] vtwrdybmdppgpfrasoli ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( vtwrdybmdppgpfrasoli , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
fix_before_refactoring: private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
fix_after_refactoring: private static int getSequenceNumber ( byte [] vtwrdybmdppgpfrasoli ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( vtwrdybmdppgpfrasoli , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
√ fix_prediction_before: private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
√ fix_prediction_after: private static int getSequenceNumber ( byte [] vtwrdybmdppgpfrasoli ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( vtwrdybmdppgpfrasoli , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }

line_index: 601
bug_before_refactoring: private void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; } <s> private void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; } <s> fix async load UI issue
bug_after_refactoring: private void setupEventListeners () { setOnSearchClickedListener ( new android.zlkbzbyeorladbrtrdkw.View.OnClickListener () { @ java.lang.Override public void onClick ( android.zlkbzbyeorladbrtrdkw.View zlkbzbyeorladbrtrdkw ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; } <s> private void setupEventListeners () { setOnSearchClickedListener ( new android.zlkbzbyeorladbrtrdkw.View.OnClickListener () { @ java.lang.Override public void onClick ( android.zlkbzbyeorladbrtrdkw.View zlkbzbyeorladbrtrdkw ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; } <s> fix async load UI issue
fix_before_refactoring: public void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; }
fix_after_refactoring: public void setupEventListeners () { setOnSearchClickedListener ( new android.zlkbzbyeorladbrtrdkw.View.OnClickListener () { @ java.lang.Override public void onClick ( android.zlkbzbyeorladbrtrdkw.View zlkbzbyeorladbrtrdkw ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; }
√ fix_prediction_before: public void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; }
√ fix_prediction_after: public void setupEventListeners () { setOnSearchClickedListener ( new android.zlkbzbyeorladbrtrdkw.View.OnClickListener () { @ java.lang.Override public void onClick ( android.zlkbzbyeorladbrtrdkw.View zlkbzbyeorladbrtrdkw ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; }

line_index: 603
bug_before_refactoring: private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> Fix thread sync issues.
bug_after_refactoring: private void resize ( int gbhfmxcyxrughgyzbhli ) { assert gbhfmxcyxrughgyzbhli >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ gbhfmxcyxrughgyzbhli ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> private void resize ( int gbhfmxcyxrughgyzbhli ) { assert gbhfmxcyxrughgyzbhli >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ gbhfmxcyxrughgyzbhli ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> Fix thread sync issues.
fix_before_refactoring: private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; }
fix_after_refactoring: private void resize ( int gbhfmxcyxrughgyzbhli ) { assert gbhfmxcyxrughgyzbhli >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ gbhfmxcyxrughgyzbhli ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; }
√ fix_prediction_before: private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; }
√ fix_prediction_after: private void resize ( int gbhfmxcyxrughgyzbhli ) { assert gbhfmxcyxrughgyzbhli >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ gbhfmxcyxrughgyzbhli ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; }

line_index: 604
bug_before_refactoring: public static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> public static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
bug_after_refactoring: public static int getReceiverID ( byte [] jbczghnkhsewcqmykbur ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> public static int getReceiverID ( byte [] jbczghnkhsewcqmykbur ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
fix_before_refactoring: private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
fix_after_refactoring: private static int getReceiverID ( byte [] jbczghnkhsewcqmykbur ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
√ fix_prediction_before: private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
√ fix_prediction_after: private static int getReceiverID ( byte [] jbczghnkhsewcqmykbur ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }

line_index: 627
bug_before_refactoring: private org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; } <s> private org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; } <s> Show a snackbar message with troubleshooting problem resolved.
bug_after_refactoring: private org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int thfbbcwmaqfynqigsnhg ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.thfbbcwmaqfynqigsnhg ) == thfbbcwmaqfynqigsnhg ) { theMessage = value ; } } return theMessage ; } <s> private org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int thfbbcwmaqfynqigsnhg ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.thfbbcwmaqfynqigsnhg ) == thfbbcwmaqfynqigsnhg ) { theMessage = value ; } } return theMessage ; } <s> Show a snackbar message with troubleshooting problem resolved.
fix_before_refactoring: public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; }
fix_after_refactoring: public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int thfbbcwmaqfynqigsnhg ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.thfbbcwmaqfynqigsnhg ) == thfbbcwmaqfynqigsnhg ) { theMessage = value ; } } return theMessage ; }
√ fix_prediction_before: public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; }
√ fix_prediction_after: public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int thfbbcwmaqfynqigsnhg ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.thfbbcwmaqfynqigsnhg ) == thfbbcwmaqfynqigsnhg ) { theMessage = value ; } } return theMessage ; }

line_index: 632
bug_before_refactoring: private boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; } <s> private boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; } <s> jspresso-ce-256 Startup errors management should be overridable in RemoteStartup subclasses fixes #256
bug_after_refactoring: private boolean isClientVersionCompatible ( java.lang.String rvokhcxlxqcqiomhswtf ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( rvokhcxlxqcqiomhswtf ) ) ; } <s> private boolean isClientVersionCompatible ( java.lang.String rvokhcxlxqcqiomhswtf ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( rvokhcxlxqcqiomhswtf ) ) ; } <s> jspresso-ce-256 Startup errors management should be overridable in RemoteStartup subclasses fixes #256
fix_before_refactoring: protected boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; }
fix_after_refactoring: protected boolean isClientVersionCompatible ( java.lang.String rvokhcxlxqcqiomhswtf ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( rvokhcxlxqcqiomhswtf ) ) ; }
√ fix_prediction_before: protected boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; }
√ fix_prediction_after: protected boolean isClientVersionCompatible ( java.lang.String rvokhcxlxqcqiomhswtf ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( rvokhcxlxqcqiomhswtf ) ) ; }

line_index: 635
bug_before_refactoring: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; if ( ( sbn . getNotification () . number ) == 0 ) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } } <s> @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; if ( ( sbn . getNotification () . number ) == 0 ) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } } <s> Fix: Removed double-check for number == 0.  This solves the problem described in 2ab7dfe that SETTING_NONE did nothing.  Sadly  this commit messes a lot with indentation.
bug_after_refactoring: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam cijjirbveubtsjqczcjy ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( cijjirbveubtsjqczcjy.args [ 0 ] ) ) ; if ( ( sbn . getNotification () . number ) == 0 ) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } } <s> @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam cijjirbveubtsjqczcjy ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( cijjirbveubtsjqczcjy.args [ 0 ] ) ) ; if ( ( sbn . getNotification () . number ) == 0 ) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } } <s> Fix: Removed double-check for number == 0.  This solves the problem described in 2ab7dfe that SETTING_NONE did nothing.  Sadly  this commit messes a lot with indentation.
fix_before_refactoring: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; }
fix_after_refactoring: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam cijjirbveubtsjqczcjy ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( cijjirbveubtsjqczcjy.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; }
√ fix_prediction_before: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; }
√ fix_prediction_after: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam cijjirbveubtsjqczcjy ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( cijjirbveubtsjqczcjy.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; }

line_index: 648
bug_before_refactoring: public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } <s> public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } <s> Fixed bugs in the methods "add()"  "subtract()" and "compareTo()".
bug_after_refactoring: public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber pxzvfdrwaxlrzltqdjtd ) { int zaehlerTemp = ( ( zaehler ) * ( pxzvfdrwaxlrzltqdjtd.nenner ) ) + ( ( pxzvfdrwaxlrzltqdjtd.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( pxzvfdrwaxlrzltqdjtd.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } <s> public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber pxzvfdrwaxlrzltqdjtd ) { int zaehlerTemp = ( ( zaehler ) * ( pxzvfdrwaxlrzltqdjtd.nenner ) ) + ( ( pxzvfdrwaxlrzltqdjtd.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( pxzvfdrwaxlrzltqdjtd.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } <s> Fixed bugs in the methods "add()"  "subtract()" and "compareTo()".
fix_before_refactoring: public de.marsetex.lab2.task3.RationalNumber add ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; }
fix_after_refactoring: public de.marsetex.lab2.task3.RationalNumber add ( de.marsetex.lab2.task3.RationalNumber pxzvfdrwaxlrzltqdjtd ) { int zaehlerTemp = ( ( zaehler ) * ( pxzvfdrwaxlrzltqdjtd.nenner ) ) + ( ( pxzvfdrwaxlrzltqdjtd.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( pxzvfdrwaxlrzltqdjtd.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; }
√ fix_prediction_before: public de.marsetex.lab2.task3.RationalNumber add ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; }
√ fix_prediction_after: public de.marsetex.lab2.task3.RationalNumber add ( de.marsetex.lab2.task3.RationalNumber pxzvfdrwaxlrzltqdjtd ) { int zaehlerTemp = ( ( zaehler ) * ( pxzvfdrwaxlrzltqdjtd.nenner ) ) + ( ( pxzvfdrwaxlrzltqdjtd.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( pxzvfdrwaxlrzltqdjtd.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; }

