line_index: 2
bug_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
bug_after_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus hgenarsmgumfcmxewruq ) { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus hgenarsmgumfcmxewruq ) { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; } <s> fixed test bug. fixed tyle error.
fix_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
fix_after_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; }
√ fix_prediction_before: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
√ fix_prediction_after: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; }

line_index: 5
bug_before_refactoring: private static native void _imaqGetCharCount ( long set ) ; <s> private static native void _imaqGetCharCount ( long set ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) ; <s> private static native void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetCharCount ( long set ) {}
fix_after_refactoring: private static void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) {}
√ fix_prediction_before: private static void _imaqGetCharCount ( long set ) {}
√ fix_prediction_after: private static void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) {}

line_index: 7
bug_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
bug_after_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + sleleopwbmitfiplioyz ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + sleleopwbmitfiplioyz ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
fix_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
fix_after_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) {}
√ fix_prediction_before: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
√ fix_prediction_after: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) {}

line_index: 16
bug_before_refactoring: public int indexOf ( java.lang.Object o ) { return 0 ; } <s> public int indexOf ( java.lang.Object o ) { return 0 ; } <s> fix list bug
bug_after_refactoring: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return 0 ; } <s> public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return 0 ; } <s> fix list bug
fix_before_refactoring: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
fix_after_refactoring: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return list . indexOf ( bdimyslwzcbbrrorkevj ) ; }
√ fix_prediction_before: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
√ fix_prediction_after: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return list . indexOf ( bdimyslwzcbbrrorkevj ) ; }

line_index: 18
bug_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
bug_after_refactoring: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
fix_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
fix_after_refactoring: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { this . preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; }
√ fix_prediction_before: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
√ fix_prediction_after: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { this . preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; }

line_index: 19
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> 2 more issues resolved
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean xhyxjnzefixuokqzdiia , org.springframework.ui.Model axcfbcztsysyvdzwrfmm ) { return "views/dataBinding" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean xhyxjnzefixuokqzdiia , org.springframework.ui.Model axcfbcztsysyvdzwrfmm ) { return "views/dataBinding" ; } <s> 2 more issues resolved
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
√ fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }

line_index: 48
bug_before_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> fixed javac compilation problem
bug_after_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > ivorrqnkquahnphupozj ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > ivorrqnkquahnphupozj ) ; <s> fixed javac compilation problem
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > ivorrqnkquahnphupozj ) ;
√ fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
√ fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > ivorrqnkquahnphupozj ) ;

line_index: 51
bug_before_refactoring: private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; } <s> private boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
fix_after_refactoring: protected boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; }
√ fix_prediction_before: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
√ fix_prediction_after: protected boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; }

line_index: 54
bug_before_refactoring: protected boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> protected boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean isReserved ( java.lang.String qgzadygmfcfrrqsmjikb ) { return reserved . containsKey ( qgzadygmfcfrrqsmjikb ) ; } <s> protected boolean isReserved ( java.lang.String qgzadygmfcfrrqsmjikb ) { return reserved . containsKey ( qgzadygmfcfrrqsmjikb ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; }
fix_after_refactoring: private boolean isReserved ( java.lang.String qgzadygmfcfrrqsmjikb ) { return reserved . containsKey ( qgzadygmfcfrrqsmjikb ) ; }
√ fix_prediction_before: private boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; }
√ fix_prediction_after: private boolean isReserved ( java.lang.String qgzadygmfcfrrqsmjikb ) { return reserved . containsKey ( qgzadygmfcfrrqsmjikb ) ; }

line_index: 61
bug_before_refactoring: public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
bug_after_refactoring: public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject wtelxyrhzhcxjeutiomf ) { wtelxyrhzhcxjeutiomfects . put ( wtelxyrhzhcxjeutiomf . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( wtelxyrhzhcxjeutiomf ) ) ; } <s> public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject wtelxyrhzhcxjeutiomf ) { wtelxyrhzhcxjeutiomfects . put ( wtelxyrhzhcxjeutiomf . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( wtelxyrhzhcxjeutiomf ) ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
fix_before_refactoring: protected synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; }
fix_after_refactoring: protected synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject wtelxyrhzhcxjeutiomf ) { wtelxyrhzhcxjeutiomfects . put ( wtelxyrhzhcxjeutiomf . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( wtelxyrhzhcxjeutiomf ) ) ; }
√ fix_prediction_before: protected synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; }
√ fix_prediction_after: protected synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject wtelxyrhzhcxjeutiomf ) { wtelxyrhzhcxjeutiomfects . put ( wtelxyrhzhcxjeutiomf . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( wtelxyrhzhcxjeutiomf ) ) ; }

line_index: 78
bug_before_refactoring: private static native void _imaqGetImageType ( long image , long type ) ; <s> private static native void _imaqGetImageType ( long image , long type ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) ; <s> private static native void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetImageType ( long image , long type ) {}
fix_after_refactoring: private static void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) {}
√ fix_prediction_before: private static void _imaqGetImageType ( long image , long type ) {}
√ fix_prediction_after: private static void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) {}

line_index: 82
bug_before_refactoring: protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) { if ( aoveazijxlutbntbddhm == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( kvozwfuybwjxufygcszb == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; aoveazijxlutbntbddhmVitalityMap . put ( aoveazijxlutbntbddhm , kvozwfuybwjxufygcszb ) ; } <s> protected void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) { if ( aoveazijxlutbntbddhm == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( kvozwfuybwjxufygcszb == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; aoveazijxlutbntbddhmVitalityMap . put ( aoveazijxlutbntbddhm , kvozwfuybwjxufygcszb ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
fix_after_refactoring: public void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) { if ( aoveazijxlutbntbddhm == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( kvozwfuybwjxufygcszb == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; aoveazijxlutbntbddhmVitalityMap . put ( aoveazijxlutbntbddhm , kvozwfuybwjxufygcszb ) ; }
√ fix_prediction_before: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
√ fix_prediction_after: public void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) { if ( aoveazijxlutbntbddhm == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( kvozwfuybwjxufygcszb == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; aoveazijxlutbntbddhmVitalityMap . put ( aoveazijxlutbntbddhm , kvozwfuybwjxufygcszb ) ; }

line_index: 94
bug_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
fix_after_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) {}
√ fix_prediction_before: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
√ fix_prediction_after: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) {}

line_index: 103
bug_before_refactoring: public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
bug_after_refactoring: public void push ( E kwmorypgeostwuqlqjvm ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; } } <s> public void push ( E kwmorypgeostwuqlqjvm ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; } } <s> Bug fixes.
fix_before_refactoring: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
fix_after_refactoring: public void push ( E kwmorypgeostwuqlqjvm ) { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; }
√ fix_prediction_before: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
√ fix_prediction_after: public void push ( E kwmorypgeostwuqlqjvm ) { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; }

line_index: 110
bug_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
bug_after_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { try { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { try { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
fix_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
fix_after_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; }
√ fix_prediction_before: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
√ fix_prediction_after: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; }

line_index: 123
bug_before_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
bug_after_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; } <s> Bug fixes: tests plus removed deprecated imports
fix_before_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
fix_after_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; }
√ fix_prediction_before: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
√ fix_prediction_after: public void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; }

line_index: 135
bug_before_refactoring: private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) ; <s> private static native void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqUnflatten ( long image , long data , int size ) {}
fix_after_refactoring: private static void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) {}
√ fix_prediction_before: private static void _imaqUnflatten ( long image , long data , int size ) {}
√ fix_prediction_after: private static void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) {}

line_index: 142
bug_before_refactoring: protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; } <s> protected void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
fix_after_refactoring: private void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; }
√ fix_prediction_before: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
√ fix_prediction_after: private void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; }

line_index: 147
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
bug_after_refactoring: @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mplayer . play ( originalFile ) ; }
fix_after_refactoring: @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { mplayer . play ( originalFile ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mplayer . play ( originalFile ) ; }
√ fix_prediction_after: @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { mplayer . play ( originalFile ) ; }

line_index: 153
bug_before_refactoring: @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
bug_after_refactoring: @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { return tktnqtqmccjkmhnlnlsf . getName () ; } <s> @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { return tktnqtqmccjkmhnlnlsf . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
fix_before_refactoring: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { if ( tktnqtqmccjkmhnlnlsf == null ) { return null ; } return tktnqtqmccjkmhnlnlsf . getName () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { if ( tktnqtqmccjkmhnlnlsf == null ) { return null ; } return tktnqtqmccjkmhnlnlsf . getName () ; }

line_index: 157
bug_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
bug_after_refactoring: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = ( laoedilvdscrklrnpybn ) ? 1 : 0 ; } <s> public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = ( laoedilvdscrklrnpybn ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
fix_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
fix_after_refactoring: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = laoedilvdscrklrnpybn ; }
√ fix_prediction_before: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
√ fix_prediction_after: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = laoedilvdscrklrnpybn ; }

line_index: 166
bug_before_refactoring: protected javax.swing.JTextField makeTextField ( java.lang.String name ) { return makeTextField ( name , 30 ) ; } <s> protected javax.swing.JTextField makeTextField ( java.lang.String name ) { return makeTextField ( name , 30 ) ; } <s> Added rename dialog and fixed bugs
bug_after_refactoring: protected javax.swing.JTextField makeTextField ( java.lang.String dlycohoczakelyvxuofg ) { return makeTextField ( dlycohoczakelyvxuofg , 30 ) ; } <s> protected javax.swing.JTextField makeTextField ( java.lang.String dlycohoczakelyvxuofg ) { return makeTextField ( dlycohoczakelyvxuofg , 30 ) ; } <s> Added rename dialog and fixed bugs
fix_before_refactoring: private javax.swing.JTextField makeTextField ( java.lang.String name ) { return makeTextField ( name , 30 ) ; }
fix_after_refactoring: private javax.swing.JTextField makeTextField ( java.lang.String dlycohoczakelyvxuofg ) { return makeTextField ( dlycohoczakelyvxuofg , 30 ) ; }
√ fix_prediction_before: private javax.swing.JTextField makeTextField ( java.lang.String name ) { return makeTextField ( name , 30 ) ; }
√ fix_prediction_after: private javax.swing.JTextField makeTextField ( java.lang.String dlycohoczakelyvxuofg ) { return makeTextField ( dlycohoczakelyvxuofg , 30 ) ; }

line_index: 173
bug_before_refactoring: private void setRedBorder ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> private void setRedBorder ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> Fixed PMD error in RedShapeDecorator
bug_after_refactoring: private void setRedBorder ( final structural.decorator.Shape ahbotkkhlpotvzqwgusc ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> private void setRedBorder ( final structural.decorator.Shape ahbotkkhlpotvzqwgusc ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> Fixed PMD error in RedShapeDecorator
fix_before_refactoring: private void setRedBorder () { java.lang.System.out . println ( "Border Color: Red" ) ; }
fix_after_refactoring: private void setRedBorder () { java.lang.System.out . println ( "Border Color: Red" ) ; }
√ fix_prediction_before: private void setRedBorder () { java.lang.System.out . println ( "Border Color: Red" ) ; }
√ fix_prediction_after: private void setRedBorder () { java.lang.System.out . println ( "Border Color: Red" ) ; }

line_index: 176
bug_before_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> TMI-40: Fixed subsampling offset bug (and removed the slow  stepwise reading + simplified the code  at the cost of higher memory consumption).
bug_after_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader bnpqpqmintcplfgbznir ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader bnpqpqmintcplfgbznir ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> TMI-40: Fixed subsampling offset bug (and removed the slow  stepwise reading + simplified the code  at the cost of higher memory consumption).
fix_before_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { processImageComplete () ; }
fix_after_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader bnpqpqmintcplfgbznir ) { processImageComplete () ; }
√ fix_prediction_before: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { processImageComplete () ; }
√ fix_prediction_after: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader bnpqpqmintcplfgbznir ) { processImageComplete () ; }

line_index: 178
bug_before_refactoring: public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
bug_after_refactoring: public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) {}

line_index: 186
bug_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> Fixed merge problems
bug_after_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) {} <s> Fixed merge problems
fix_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
fix_after_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) ;
√ fix_prediction_before: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
√ fix_prediction_after: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) ;

line_index: 192
bug_before_refactoring: public void stopMainService ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> public void stopMainService ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> Errors solved for crashing DB load
bug_after_refactoring: public void stopMainService ( android.ywejdgpulrpmlxugwaxt.View ywejdgpulrpmlxugwaxt ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> public void stopMainService ( android.ywejdgpulrpmlxugwaxt.View ywejdgpulrpmlxugwaxt ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> Errors solved for crashing DB load
fix_before_refactoring: public void stopMainService () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }
fix_after_refactoring: public void stopMainService () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }
√ fix_prediction_before: public void stopMainService () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }
√ fix_prediction_after: public void stopMainService () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }

line_index: 194
bug_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
bug_after_refactoring: @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
fix_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
fix_after_refactoring: @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { return this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; }
√ fix_prediction_before: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
√ fix_prediction_after: @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { return this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; }

line_index: 198
bug_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
bug_after_refactoring: public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . formatDouble ( inqbvugyseznxavcnfcp ) ) ; } <s> public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . formatDouble ( inqbvugyseznxavcnfcp ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
fix_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
fix_after_refactoring: public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . format ( inqbvugyseznxavcnfcp ) ) ; }
√ fix_prediction_before: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
√ fix_prediction_after: public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . format ( inqbvugyseznxavcnfcp ) ) ; }

line_index: 222
bug_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) { if ( bqdzlejorfdimatcjrjf == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) { if ( bqdzlejorfdimatcjrjf == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
fix_after_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) {}
√ fix_prediction_before: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
√ fix_prediction_after: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) {}

line_index: 228
bug_before_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> Add student management system frontend part and fix bug in REST API
bug_after_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO skxmvbikfjpebsfaeajz , com.sampathsl.sms.dto.StudentDTO duneyfpitforbhkfjkpt ) throws java.lang.Exception ; <s> com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO skxmvbikfjpebsfaeajz , com.sampathsl.sms.dto.StudentDTO duneyfpitforbhkfjkpt ) throws java.lang.Exception ; <s> Add student management system frontend part and fix bug in REST API
fix_before_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;
fix_after_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO skxmvbikfjpebsfaeajz ) throws java.lang.Exception ;
√ fix_prediction_before: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;
√ fix_prediction_after: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO skxmvbikfjpebsfaeajz ) throws java.lang.Exception ;

line_index: 243
bug_before_refactoring: private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
bug_after_refactoring: private carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( yroemouwyfevhszcztuv . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( yroemouwyfevhszcztuv . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
fix_before_refactoring: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
fix_after_refactoring: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( yroemouwyfevhszcztuv . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
√ fix_prediction_before: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
√ fix_prediction_after: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( yroemouwyfevhszcztuv . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }

line_index: 255
bug_before_refactoring: private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) ; <s> private static native void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
fix_after_refactoring: private static void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) {}
√ fix_prediction_before: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
√ fix_prediction_after: private static void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) {}

line_index: 261
bug_before_refactoring: public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
bug_after_refactoring: public void outputNames ( java.io.File naqzvqjssmsagvhpeoqe ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void outputNames ( java.io.File naqzvqjssmsagvhpeoqe ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
fix_before_refactoring: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
fix_after_refactoring: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
√ fix_prediction_before: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
√ fix_prediction_after: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }

line_index: 267
bug_before_refactoring: private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> bug fix
bug_after_refactoring: private com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.WrapperObserver < T > wrqgmqyhipegipupapor , com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableController ofhsjzmfsrshqvajneie ) { return connect ( wrqgmqyhipegipupapor , ofhsjzmfsrshqvajneie , true ) ; } <s> private com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.WrapperObserver < T > wrqgmqyhipegipupapor , com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableController ofhsjzmfsrshqvajneie ) { return connect ( wrqgmqyhipegipupapor , ofhsjzmfsrshqvajneie , true ) ; } <s> bug fix
fix_before_refactoring: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }
fix_after_refactoring: public com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.WrapperObserver < T > wrqgmqyhipegipupapor , com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableController ofhsjzmfsrshqvajneie ) { return connect ( wrqgmqyhipegipupapor , ofhsjzmfsrshqvajneie , true ) ; }
√ fix_prediction_before: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }
√ fix_prediction_after: public com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.WrapperObserver < T > wrqgmqyhipegipupapor , com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableController ofhsjzmfsrshqvajneie ) { return connect ( wrqgmqyhipegipupapor , ofhsjzmfsrshqvajneie , true ) ; }

line_index: 293
bug_before_refactoring: public static void main ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> public static void main ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> fixed buidl errors
bug_after_refactoring: public static void main ( java.lang.String [] nijmnbxbzkvcjffjrtym ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> public static void main ( java.lang.String [] nijmnbxbzkvcjffjrtym ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> fixed buidl errors
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] nijmnbxbzkvcjffjrtym ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] nijmnbxbzkvcjffjrtym ) {}

line_index: 303
bug_before_refactoring: protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
bug_after_refactoring: protected void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
fix_before_refactoring: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
fix_after_refactoring: public void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_before: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_after: public void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }

line_index: 305
bug_before_refactoring: public void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> public void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> fix many bug
bug_after_refactoring: public void savePref ( java.lang.String nvvkylytegiwqeeodnrn , boolean efzvztwfrlhttwcmsdkc ) { me.wizos.loread.data.WithSet.editor . putBoolean ( nvvkylytegiwqeeodnrn , efzvztwfrlhttwcmsdkc ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> public void savePref ( java.lang.String nvvkylytegiwqeeodnrn , boolean efzvztwfrlhttwcmsdkc ) { me.wizos.loread.data.WithSet.editor . putBoolean ( nvvkylytegiwqeeodnrn , efzvztwfrlhttwcmsdkc ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> fix many bug
fix_before_refactoring: private void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
fix_after_refactoring: private void savePref ( java.lang.String nvvkylytegiwqeeodnrn , boolean efzvztwfrlhttwcmsdkc ) { me.wizos.loread.data.WithSet.editor . putBoolean ( nvvkylytegiwqeeodnrn , efzvztwfrlhttwcmsdkc ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
√ fix_prediction_before: private void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
√ fix_prediction_after: private void savePref ( java.lang.String nvvkylytegiwqeeodnrn , boolean efzvztwfrlhttwcmsdkc ) { me.wizos.loread.data.WithSet.editor . putBoolean ( nvvkylytegiwqeeodnrn , efzvztwfrlhttwcmsdkc ) ; me.wizos.loread.data.WithSet.editor . apply () ; }

line_index: 312
bug_before_refactoring: protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
fix_after_refactoring: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
√ fix_prediction_before: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
√ fix_prediction_after: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }

line_index: 319
bug_before_refactoring: public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
bug_after_refactoring: public static int iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , blzwvxpdynvdjdtnphjs , kccdhvsqqmabdxcmtvlx ) ; return android.util.Log . i ( qtrsmstuojacrgvlgdkg , msg ) ; } return 0 ; } <s> public static int iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , blzwvxpdynvdjdtnphjs , kccdhvsqqmabdxcmtvlx ) ; return android.util.Log . i ( qtrsmstuojacrgvlgdkg , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
fix_before_refactoring: public static void ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
fix_after_refactoring: public static void iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , blzwvxpdynvdjdtnphjs , kccdhvsqqmabdxcmtvlx ) ; android.util.Log . i ( qtrsmstuojacrgvlgdkg , msg ) ; } }
√ fix_prediction_before: public static void ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
√ fix_prediction_after: public static void iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , blzwvxpdynvdjdtnphjs , kccdhvsqqmabdxcmtvlx ) ; android.util.Log . i ( qtrsmstuojacrgvlgdkg , msg ) ; } }

line_index: 330
bug_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { if ( hzryalaqdzwapwwmkrev != ( - 1 ) ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; } } <s> private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { if ( hzryalaqdzwapwwmkrev != ( - 1 ) ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
fix_after_refactoring: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; }
√ fix_prediction_before: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
√ fix_prediction_after: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; }

line_index: 353
bug_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
bug_after_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) { try { emzwhrzjcdijgeyluvsl . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) { try { emzwhrzjcdijgeyluvsl . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
fix_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
fix_after_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) {}
√ fix_prediction_before: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
√ fix_prediction_after: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) {}

line_index: 376
bug_before_refactoring: private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> Fixing issue where the atomic reader contet did not have the correct parent information and therfore was not reporting the correct docids.
bug_after_refactoring: private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader loeyydqcrytcubomcafl ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , loeyydqcrytcubomcafl , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader loeyydqcrytcubomcafl ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , loeyydqcrytcubomcafl , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> Fixing issue where the atomic reader contet did not have the correct parent information and therfore was not reporting the correct docids.
fix_before_refactoring: protected org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }
fix_after_refactoring: protected org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader loeyydqcrytcubomcafl ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , loeyydqcrytcubomcafl , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }
√ fix_prediction_before: protected org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }
√ fix_prediction_after: protected org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader loeyydqcrytcubomcafl ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , loeyydqcrytcubomcafl , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }

line_index: 392
bug_before_refactoring: public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> fixed dumb bug
bug_after_refactoring: public void add ( int vnsyefleifqxkxoeswuq ) { if ( vnsyefleifqxkxoeswuq >= 0 ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; } } <s> public void add ( int vnsyefleifqxkxoeswuq ) { if ( vnsyefleifqxkxoeswuq >= 0 ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; } } <s> fixed dumb bug
fix_before_refactoring: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
fix_after_refactoring: public void add ( int vnsyefleifqxkxoeswuq ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; }
√ fix_prediction_before: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
√ fix_prediction_after: public void add ( int vnsyefleifqxkxoeswuq ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; }

line_index: 403
bug_before_refactoring: public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
fix_after_refactoring: private void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_before: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_after: private void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; }

line_index: 407
bug_before_refactoring: private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> fixed some issues with implementation
bug_after_refactoring: private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue eofaewxuxidfbvdigcdk ) { return ( ( eofaewxuxidfbvdigcdk . has ( "code" ) ) && ( ( eofaewxuxidfbvdigcdk . getInt ( "code" ) ) == 200 ) ) && ( eofaewxuxidfbvdigcdk . has ( "body" ) ) ; } <s> private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue eofaewxuxidfbvdigcdk ) { return ( ( eofaewxuxidfbvdigcdk . has ( "code" ) ) && ( ( eofaewxuxidfbvdigcdk . getInt ( "code" ) ) == 200 ) ) && ( eofaewxuxidfbvdigcdk . has ( "body" ) ) ; } <s> fixed some issues with implementation
fix_before_refactoring: protected boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; }
fix_after_refactoring: protected boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue eofaewxuxidfbvdigcdk ) { return ( ( eofaewxuxidfbvdigcdk . has ( "code" ) ) && ( ( eofaewxuxidfbvdigcdk . getInt ( "code" ) ) == 200 ) ) && ( eofaewxuxidfbvdigcdk . has ( "body" ) ) ; }
√ fix_prediction_before: protected boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; }
√ fix_prediction_after: protected boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue eofaewxuxidfbvdigcdk ) { return ( ( eofaewxuxidfbvdigcdk . has ( "code" ) ) && ( ( eofaewxuxidfbvdigcdk . getInt ( "code" ) ) == 200 ) ) && ( eofaewxuxidfbvdigcdk . has ( "body" ) ) ; }

line_index: 424
bug_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ( ypidopmnywqvwbdfhnbj + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ( ypidopmnywqvwbdfhnbj + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
fix_after_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ypidopmnywqvwbdfhnbj ] ; }
√ fix_prediction_before: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
√ fix_prediction_after: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ypidopmnywqvwbdfhnbj ] ; }

line_index: 441
bug_before_refactoring: private native void write ( int [] buffer ) ; <s> private native void write ( int [] buffer ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
bug_after_refactoring: private native void write ( int [] odbzwhegpzyauzvnbchh ) ; <s> private native void write ( int [] odbzwhegpzyauzvnbchh ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
fix_before_refactoring: public native void write ( int [] buffer ) ;
fix_after_refactoring: public native void write ( int [] odbzwhegpzyauzvnbchh ) ;
√ fix_prediction_before: public native void write ( int [] buffer ) ;
√ fix_prediction_after: public native void write ( int [] odbzwhegpzyauzvnbchh ) ;

line_index: 444
bug_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
bug_after_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa , org.apache.lucene.util.BytesRef bwfeoczhccmfjmzfunfz , int skskavguasqjvmqjcuba ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa , org.apache.lucene.util.BytesRef bwfeoczhccmfjmzfunfz , int skskavguasqjvmqjcuba ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
fix_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
fix_after_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
√ fix_prediction_before: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
√ fix_prediction_after: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }

line_index: 457
bug_before_refactoring: private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> Fixed issue where the table cell was no editable  Now if the cell isn't a CellComponent  is not editable
bug_after_refactoring: private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage byetszkbaixjajkssfid ) { return new javax.swing.ImageIcon ( byetszkbaixjajkssfid . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage byetszkbaixjajkssfid ) { return new javax.swing.ImageIcon ( byetszkbaixjajkssfid . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> Fixed issue where the table cell was no editable  Now if the cell isn't a CellComponent  is not editable
fix_before_refactoring: public javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }
fix_after_refactoring: public javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage byetszkbaixjajkssfid ) { return new javax.swing.ImageIcon ( byetszkbaixjajkssfid . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }
√ fix_prediction_before: public javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }
√ fix_prediction_after: public javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage byetszkbaixjajkssfid ) { return new javax.swing.ImageIcon ( byetszkbaixjajkssfid . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }

line_index: 463
bug_before_refactoring: public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
bug_after_refactoring: public void setDescription ( java.lang.String qulnigowcughxizqrroc ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void setDescription ( java.lang.String qulnigowcughxizqrroc ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
fix_before_refactoring: public void setDescription ( java.lang.String string ) {}
fix_after_refactoring: public void setDescription ( java.lang.String qulnigowcughxizqrroc ) {}
√ fix_prediction_before: public void setDescription ( java.lang.String string ) {}
√ fix_prediction_after: public void setDescription ( java.lang.String qulnigowcughxizqrroc ) {}

line_index: 478
bug_before_refactoring: private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) ; <s> private static native long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
fix_after_refactoring: private static long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) { return 0 ; }
√ fix_prediction_before: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
√ fix_prediction_after: private static long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) { return 0 ; }

line_index: 480
bug_before_refactoring: private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> Fixing bugs
bug_after_refactoring: private static native int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) ; <s> private static native int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) ; <s> Fixing bugs
fix_before_refactoring: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
fix_after_refactoring: private static int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) { return 0 ; }
√ fix_prediction_before: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
√ fix_prediction_after: private static int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) { return 0 ; }

line_index: 510
bug_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
bug_after_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
fix_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
fix_after_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; }
√ fix_prediction_before: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
√ fix_prediction_after: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; }

line_index: 514
bug_before_refactoring: public static int [] binarySearch ( int [] list , int checkNum ) {} <s> public static int [] binarySearch ( int [] list , int checkNum ) {} <s> Fix misc. bugs
bug_after_refactoring: public static int [] binarySearch ( int [] ghihfoukiakecroabjoa , int ckstnygienejbaatlqkt ) {} <s> public static int [] binarySearch ( int [] ghihfoukiakecroabjoa , int ckstnygienejbaatlqkt ) {} <s> Fix misc. bugs
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 536
bug_before_refactoring: private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) ; <s> private static native void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetMaskOffset ( long image , long offset ) {}
fix_after_refactoring: private static void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) {}
√ fix_prediction_before: private static void _imaqSetMaskOffset ( long image , long offset ) {}
√ fix_prediction_after: private static void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) {}

line_index: 548
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
bug_after_refactoring: @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username . get () , password . get () ) ; } <s> @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username , password ) ; }
fix_after_refactoring: @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username , password ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username , password ) ; }
√ fix_prediction_after: @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username , password ) ; }

line_index: 552
bug_before_refactoring: protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ; <s> protected native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
fix_after_refactoring: private native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ;
√ fix_prediction_before: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
√ fix_prediction_after: private native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ;

line_index: 553
bug_before_refactoring: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> Bug fixes for Double
bug_after_refactoring: public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , ( onzlysafcgaekixljpfo == null ? - 99.99 : onzlysafcgaekixljpfo ) ) ; } <s> public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , ( onzlysafcgaekixljpfo == null ? - 99.99 : onzlysafcgaekixljpfo ) ) ; } <s> Bug fixes for Double
fix_before_refactoring: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , tm ) ; }
fix_after_refactoring: public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , onzlysafcgaekixljpfo ) ; }
√ fix_prediction_before: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , tm ) ; }
√ fix_prediction_after: public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , onzlysafcgaekixljpfo ) ; }

line_index: 562
bug_before_refactoring: private void privateConstructor ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> private void privateConstructor ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
bug_after_refactoring: private void privateConstructor ( android.content.Context xlyfzijvvzvewaroseqm ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> private void privateConstructor ( android.content.Context xlyfzijvvzvewaroseqm ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
fix_before_refactoring: private void privateConstructor () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
fix_after_refactoring: private void privateConstructor () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
√ fix_prediction_before: private void privateConstructor () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
√ fix_prediction_after: private void privateConstructor () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }

line_index: 564
bug_before_refactoring: void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> versuch serverbug zu fixen
bug_after_refactoring: vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz , java.lang.String yyoffuujlaoyjfkcscbh ) ; <s> vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz , java.lang.String yyoffuujlaoyjfkcscbh ) ; <s> versuch serverbug zu fixen
fix_before_refactoring: void sendImageToServer ( java.lang.String id ) ;
fix_after_refactoring: vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz ) ;
√ fix_prediction_before: void sendImageToServer ( java.lang.String id ) ;
√ fix_prediction_after: vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz ) ;

line_index: 578
bug_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> fix bug
bug_after_refactoring: protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + jdfdsmegvfxdidbqxasx ) + " " ) + goymhlwsxzxvrruphpgw ) + " " ) + elnowdvuhktelbebcwen ) ) ; } <s> protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + jdfdsmegvfxdidbqxasx ) + " " ) + goymhlwsxzxvrruphpgw ) + " " ) + elnowdvuhktelbebcwen ) ) ; } <s> fix bug
fix_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) {}
fix_after_refactoring: protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) {}
√ fix_prediction_before: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) {}
√ fix_prediction_after: protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) {}

line_index: 593
bug_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
bug_after_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc . clone () ; } <s> public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
fix_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points ; }
fix_after_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc ; }
√ fix_prediction_before: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points ; }
√ fix_prediction_after: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc ; }

line_index: 594
bug_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
bug_after_refactoring: @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { if ( uzugjucrzfqnpifetaxq . isHasuzugjucrzfqnpifetaxqs () ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; } } <s> @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { if ( uzugjucrzfqnpifetaxq . isHasuzugjucrzfqnpifetaxqs () ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
fix_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
fix_after_refactoring: @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; }
√ fix_prediction_before: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
√ fix_prediction_after: @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; }

line_index: 603
bug_before_refactoring: protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
fix_after_refactoring: public void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_before: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_after: public void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; }

line_index: 629
bug_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
bug_after_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
fix_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
fix_after_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) {}
√ fix_prediction_before: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
√ fix_prediction_after: @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) {}

line_index: 655
bug_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
bug_after_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
fix_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
fix_after_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) {}
√ fix_prediction_before: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_after: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) {}

line_index: 659
bug_before_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> BUG-6616: BGP synchronization can happen after the session was closed  Fix by handle message only when session is up. -Handle exception in synchronation mode. -Sort close of the session  removal of the peer and send close reason message.  Change-Id: I21328f9a63d5360603f219cd3699b08874da318b Signed-off-by: Claudio D. Gasparini <cgaspari@cisco.com>
bug_after_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext voyjniokyppzdanmkrfp , final org.opendaylight.yangtools.yang.binding.Notification pjyxrimbmxzpyjruxzys ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , pjyxrimbmxzpyjruxzys ) ; try { this . handleMessage ( pjyxrimbmxzpyjruxzys ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext voyjniokyppzdanmkrfp , final org.opendaylight.yangtools.yang.binding.Notification pjyxrimbmxzpyjruxzys ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , pjyxrimbmxzpyjruxzys ) ; try { this . handleMessage ( pjyxrimbmxzpyjruxzys ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> BUG-6616: BGP synchronization can happen after the session was closed  Fix by handle message only when session is up. -Handle exception in synchronation mode. -Sort close of the session  removal of the peer and send close reason message.  Change-Id: I21328f9a63d5360603f219cd3699b08874da318b Signed-off-by: Claudio D. Gasparini <cgaspari@cisco.com>
fix_before_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; this . handleMessage ( msg ) ; }
fix_after_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext voyjniokyppzdanmkrfp , final org.opendaylight.yangtools.yang.binding.Notification pjyxrimbmxzpyjruxzys ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , pjyxrimbmxzpyjruxzys ) ; this . handleMessage ( pjyxrimbmxzpyjruxzys ) ; }
√ fix_prediction_before: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; this . handleMessage ( msg ) ; }
√ fix_prediction_after: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext voyjniokyppzdanmkrfp , final org.opendaylight.yangtools.yang.binding.Notification pjyxrimbmxzpyjruxzys ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , pjyxrimbmxzpyjruxzys ) ; this . handleMessage ( pjyxrimbmxzpyjruxzys ) ; }

line_index: 662
bug_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { if ( gasselrwtqgommbgzpwc == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { if ( gasselrwtqgommbgzpwc == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
fix_after_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { mPlayer . start () ; }
√ fix_prediction_before: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
√ fix_prediction_after: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { mPlayer . start () ; }

line_index: 668
bug_before_refactoring: private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
bug_after_refactoring: private static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; } <s> private static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
fix_before_refactoring: public static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
fix_after_refactoring: public static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; }
√ fix_prediction_before: public static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
√ fix_prediction_after: public static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; }

line_index: 671
bug_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> fix sshutil bug
bug_after_refactoring: public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return false ; } <s> public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return false ; } <s> fix sshutil bug
fix_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return true ; }
fix_after_refactoring: public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return true ; }
√ fix_prediction_before: public boolean promptYesNo ( java.lang.String str ) { return true ; }
√ fix_prediction_after: public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return true ; }

line_index: 678
bug_before_refactoring: private static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> private static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> Fix compilation problems
bug_after_refactoring: private static void toast ( android.content.Context ttsejemshhstxmuugbxa , final java.lang.String rldgxebevmuybhzcnqyd , final int jzshgjlrebntnnefyase ) { android.widget.Toast . makeText ( ttsejemshhstxmuugbxa , rldgxebevmuybhzcnqyd , jzshgjlrebntnnefyase ) . show () ; } <s> private static void toast ( android.content.Context ttsejemshhstxmuugbxa , final java.lang.String rldgxebevmuybhzcnqyd , final int jzshgjlrebntnnefyase ) { android.widget.Toast . makeText ( ttsejemshhstxmuugbxa , rldgxebevmuybhzcnqyd , jzshgjlrebntnnefyase ) . show () ; } <s> Fix compilation problems
fix_before_refactoring: public static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }
fix_after_refactoring: public static void toast ( android.content.Context ttsejemshhstxmuugbxa , final java.lang.String rldgxebevmuybhzcnqyd , final int jzshgjlrebntnnefyase ) { android.widget.Toast . makeText ( ttsejemshhstxmuugbxa , rldgxebevmuybhzcnqyd , jzshgjlrebntnnefyase ) . show () ; }
√ fix_prediction_before: public static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }
√ fix_prediction_after: public static void toast ( android.content.Context ttsejemshhstxmuugbxa , final java.lang.String rldgxebevmuybhzcnqyd , final int jzshgjlrebntnnefyase ) { android.widget.Toast . makeText ( ttsejemshhstxmuugbxa , rldgxebevmuybhzcnqyd , jzshgjlrebntnnefyase ) . show () ; }

line_index: 682
bug_before_refactoring: public static void main ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> public static void main ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> fixed error in DBManager
bug_after_refactoring: public static void main ( java.lang.String [] kilczozsewzaunbbjqml ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> public static void main ( java.lang.String [] kilczozsewzaunbbjqml ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> fixed error in DBManager
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] kilczozsewzaunbbjqml ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] kilczozsewzaunbbjqml ) {}

line_index: 685
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
√ fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; }

line_index: 688
bug_before_refactoring: public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
bug_after_refactoring: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { if ( ( max_Char ( jygsacqlnzzfdmpjojkv , 20 ) ) && ( ( jygsacqlnzzfdmpjojkv . length () ) >= 1 ) ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { if ( ( max_Char ( jygsacqlnzzfdmpjojkv , 20 ) ) && ( ( jygsacqlnzzfdmpjojkv . length () ) >= 1 ) ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
fix_before_refactoring: public void setUsername ( java.lang.String username ) { this . username = username ; }
fix_after_refactoring: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; }
√ fix_prediction_before: public void setUsername ( java.lang.String username ) { this . username = username ; }
√ fix_prediction_after: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; }

line_index: 690
bug_before_refactoring: private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) ; <s> private static native void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
fix_after_refactoring: private static void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) {}
√ fix_prediction_before: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
√ fix_prediction_after: private static void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) {}

line_index: 694
bug_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
bug_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
fix_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
fix_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; }
√ fix_prediction_before: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
√ fix_prediction_after: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; }

line_index: 701
bug_before_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
fix_after_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; }
√ fix_prediction_before: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
√ fix_prediction_after: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; }

line_index: 704
bug_before_refactoring: public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> Possible fix for errors on shutdown
bug_after_refactoring: public abstract void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr , org.bukkit.GameMode ihdtnnxkzogaunxigopw , me.gnat008.perworldinventory.data.ywgkzyqhohdeyynhqhmzs.PWIPlayer ywgkzyqhohdeyynhqhmz ) ; <s> public abstract void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr , org.bukkit.GameMode ihdtnnxkzogaunxigopw , me.gnat008.perworldinventory.data.ywgkzyqhohdeyynhqhmzs.PWIPlayer ywgkzyqhohdeyynhqhmz ) ; <s> Possible fix for errors on shutdown
fix_before_refactoring: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
fix_after_refactoring: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr , org.bukkit.GameMode ihdtnnxkzogaunxigopw , me.gnat008.perworldinventory.data.ywgkzyqhohdeyynhqhmzs.PWIPlayer ywgkzyqhohdeyynhqhmz ) ;
√ fix_prediction_before: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
√ fix_prediction_after: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr , org.bukkit.GameMode ihdtnnxkzogaunxigopw , me.gnat008.perworldinventory.data.ywgkzyqhohdeyynhqhmzs.PWIPlayer ywgkzyqhohdeyynhqhmz ) ;

line_index: 710
bug_before_refactoring: public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; } <s> public void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
fix_after_refactoring: private void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; }
√ fix_prediction_before: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
√ fix_prediction_after: private void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; }

line_index: 711
bug_before_refactoring: private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) ; <s> private static native long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
fix_after_refactoring: private static long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) { return 0 ; }
√ fix_prediction_before: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
√ fix_prediction_after: private static long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) { return 0 ; }

line_index: 742
bug_before_refactoring: private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
bug_after_refactoring: private void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
fix_before_refactoring: protected void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
fix_after_refactoring: protected void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } }
√ fix_prediction_before: protected void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
√ fix_prediction_after: protected void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } }

line_index: 747
bug_before_refactoring: public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; } <s> public void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
fix_after_refactoring: private void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; }
√ fix_prediction_before: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
√ fix_prediction_after: private void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; }

line_index: 773
bug_before_refactoring: void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> Back again. FIxed TeachingPolicy realated error in QLearning.java
bug_after_refactoring: void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy ocfvmpqioxsflwjthurs ) ; <s> void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy ocfvmpqioxsflwjthurs ) ; <s> Back again. FIxed TeachingPolicy realated error in QLearning.java
fix_before_refactoring: void ApplyWeights ( ) ;
fix_after_refactoring: void ApplyWeights ( ) ;
√ fix_prediction_before: void ApplyWeights ( ) ;
√ fix_prediction_after: void ApplyWeights ( ) ;

line_index: 780
bug_before_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> BugFixed FileToTranslate builder
bug_after_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; } <s> BugFixed FileToTranslate builder
fix_before_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
fix_after_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; }
√ fix_prediction_before: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
√ fix_prediction_after: public com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; }

line_index: 782
bug_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
bug_after_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
fix_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) {}
√ fix_prediction_before: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_after: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) {}

line_index: 801
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; } <s> protected void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
fix_after_refactoring: public void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
√ fix_prediction_after: public void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; }

line_index: 828
bug_before_refactoring: private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) ; <s> private static native void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
fix_after_refactoring: private static void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) {}
√ fix_prediction_before: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
√ fix_prediction_after: private static void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) {}

line_index: 829
bug_before_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
bug_after_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
fix_before_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
fix_after_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; }
√ fix_prediction_before: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
√ fix_prediction_after: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; }

line_index: 838
bug_before_refactoring: public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
bug_after_refactoring: public void enqueue ( Item eupucixqojmdrwsemxsm ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void enqueue ( Item eupucixqojmdrwsemxsm ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
fix_before_refactoring: public void enqueue ( Item item ) {}
fix_after_refactoring: public void enqueue ( Item eupucixqojmdrwsemxsm ) {}
√ fix_prediction_before: public void enqueue ( Item item ) {}
√ fix_prediction_after: public void enqueue ( Item eupucixqojmdrwsemxsm ) {}

line_index: 856
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
bug_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( ksxqplrtmqmrfoanidea . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( ksxqplrtmqmrfoanidea . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
fix_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
√ fix_prediction_after: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; }

line_index: 864
bug_before_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . onAuthCreated ( info ) ; authLatch . countDown () ; } <s> @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . onAuthCreated ( info ) ; authLatch . countDown () ; } <s> Merge pull request #234 from doncung/FixAuthIssues  Fix issue where auth is being called multiple times in sample and fix…
bug_after_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo feneaizxzghyuelwhobb ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , feneaizxzghyuelwhobb ) ; mSession . setUserId ( feneaizxzghyuelwhobb . getUser () . getId () ) ; mSession . onAuthCreated ( feneaizxzghyuelwhobb ) ; authLatch . countDown () ; } <s> @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo feneaizxzghyuelwhobb ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , feneaizxzghyuelwhobb ) ; mSession . setUserId ( feneaizxzghyuelwhobb . getUser () . getId () ) ; mSession . onAuthCreated ( feneaizxzghyuelwhobb ) ; authLatch . countDown () ; } <s> Merge pull request #234 from doncung/FixAuthIssues  Fix issue where auth is being called multiple times in sample and fix…
fix_before_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { authLatch . countDown () ; }
fix_after_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo feneaizxzghyuelwhobb ) { authLatch . countDown () ; }
√ fix_prediction_before: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { authLatch . countDown () ; }
√ fix_prediction_after: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo feneaizxzghyuelwhobb ) { authLatch . countDown () ; }

line_index: 870
bug_before_refactoring: private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> fix bug
bug_after_refactoring: private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto ttpiogvgaevvaxwszzpi ) { ttpiogvgaevvaxwszzpi . setAvatar ( cn.momia.image.api.ImageFile . url ( ttpiogvgaevvaxwszzpi . getAvatar () ) ) ; return ttpiogvgaevvaxwszzpi ; } <s> private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto ttpiogvgaevvaxwszzpi ) { ttpiogvgaevvaxwszzpi . setAvatar ( cn.momia.image.api.ImageFile . url ( ttpiogvgaevvaxwszzpi . getAvatar () ) ) ; return ttpiogvgaevvaxwszzpi ; } <s> fix bug
fix_before_refactoring: protected cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; }
fix_after_refactoring: protected cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto ttpiogvgaevvaxwszzpi ) { ttpiogvgaevvaxwszzpi . setAvatar ( cn.momia.image.api.ImageFile . url ( ttpiogvgaevvaxwszzpi . getAvatar () ) ) ; return ttpiogvgaevvaxwszzpi ; }
√ fix_prediction_before: protected cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; }
√ fix_prediction_after: protected cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto ttpiogvgaevvaxwszzpi ) { ttpiogvgaevvaxwszzpi . setAvatar ( cn.momia.image.api.ImageFile . url ( ttpiogvgaevvaxwszzpi . getAvatar () ) ) ; return ttpiogvgaevvaxwszzpi ; }

line_index: 883
bug_before_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> turn auto drop-create back on; fix schema.sql inserts; fix references to actor_types; general debug
bug_after_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > tpsbupqueerwoxtpddar ) { this . allowedActorTypes = tpsbupqueerwoxtpddar ; } <s> public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > tpsbupqueerwoxtpddar ) { this . allowedActorTypes = tpsbupqueerwoxtpddar ; } <s> turn auto drop-create back on; fix schema.sql inserts; fix references to actor_types; general debug
fix_before_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
fix_after_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
√ fix_prediction_before: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
√ fix_prediction_after: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }

line_index: 884
bug_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
bug_after_refactoring: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( fzkdeiyizmbeezjtevyf ) ; } <s> @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( fzkdeiyizmbeezjtevyf ) ; } <s> New dialog fragments on rotate device fixed + some bugs
fix_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
fix_after_refactoring: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { failureHandler ( fzkdeiyizmbeezjtevyf ) ; }
√ fix_prediction_before: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
√ fix_prediction_after: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { failureHandler ( fzkdeiyizmbeezjtevyf ) ; }

line_index: 885
bug_before_refactoring: public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; } <s> public void warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
fix_after_refactoring: public boolean warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; }
√ fix_prediction_before: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
√ fix_prediction_after: public boolean warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; }

line_index: 887
bug_before_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
fix_after_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; }
√ fix_prediction_before: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
√ fix_prediction_after: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; }

line_index: 889
bug_before_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
bug_after_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
fix_before_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
fix_after_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } }
√ fix_prediction_before: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
√ fix_prediction_after: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } }

line_index: 894
bug_before_refactoring: public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
bug_after_refactoring: public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { if ( baksotirdwxigbnsgism == null ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; } else { java.lang.Sybaksotirdwxigbnsgismem.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { if ( baksotirdwxigbnsgism == null ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; } else { java.lang.Sybaksotirdwxigbnsgismem.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
fix_before_refactoring: public void setST ( main.java.DisplayST st ) { this . st = st ; }
fix_after_refactoring: public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; }
√ fix_prediction_before: public void setST ( main.java.DisplayST st ) { this . st = st ; }
√ fix_prediction_after: public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; }

line_index: 900
bug_before_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
bug_after_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { return this . delete ( dkcvygybsnboqbdzeqnu , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { return this . delete ( dkcvygybsnboqbdzeqnu , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
fix_before_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
fix_after_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { this . delete ( dkcvygybsnboqbdzeqnu , null ) ; }
√ fix_prediction_before: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
√ fix_prediction_after: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { this . delete ( dkcvygybsnboqbdzeqnu , null ) ; }

line_index: 904
bug_before_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
bug_after_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession ginngbvakarzvhhspeoc ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession ginngbvakarzvhhspeoc ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
fix_before_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
fix_after_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
√ fix_prediction_before: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
√ fix_prediction_after: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }

line_index: 913
bug_before_refactoring: private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
fix_after_refactoring: private static long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) { return 0 ; }
√ fix_prediction_before: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
√ fix_prediction_after: private static long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) { return 0 ; }

line_index: 917
bug_before_refactoring: private synchronized void addInsert ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> private synchronized void addInsert ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> fixed minor problems that could cause crash
bug_after_refactoring: private synchronized void addInsert ( android.content.ContentValues lsfjepnoxgwfgkugghxw ) { mDataInsertList . add ( lsfjepnoxgwfgkugghxw ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { lsfjepnoxgwfgkugghxw ( mDataInsertList ) ; } } <s> private synchronized void addInsert ( android.content.ContentValues lsfjepnoxgwfgkugghxw ) { mDataInsertList . add ( lsfjepnoxgwfgkugghxw ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { lsfjepnoxgwfgkugghxw ( mDataInsertList ) ; } } <s> fixed minor problems that could cause crash
fix_before_refactoring: private synchronized void addInsert ( android.content.ContentValues insert ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }
fix_after_refactoring: private synchronized void addInsert ( android.content.ContentValues lsfjepnoxgwfgkugghxw ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( lsfjepnoxgwfgkugghxw ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { lsfjepnoxgwfgkugghxw ( mDataInsertList ) ; } } }
√ fix_prediction_before: private synchronized void addInsert ( android.content.ContentValues insert ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }
√ fix_prediction_after: private synchronized void addInsert ( android.content.ContentValues lsfjepnoxgwfgkugghxw ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( lsfjepnoxgwfgkugghxw ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { lsfjepnoxgwfgkugghxw ( mDataInsertList ) ; } } }

line_index: 928
bug_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
bug_after_refactoring: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; java.lang.Systbbczqtiwgqwlskhwcetpm.out . println ( ( "DEBUG: 'Add Points' chbbczqtiwgqwlskhwcetpckbbczqtiwgqwlskhwcetpd statbbczqtiwgqwlskhwcetp is " + ( addRadioButton . isSbbczqtiwgqwlskhwcetplbbczqtiwgqwlskhwcetpctbbczqtiwgqwlskhwcetpd () ) ) ) ; } <s> public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; java.lang.Systbbczqtiwgqwlskhwcetpm.out . println ( ( "DEBUG: 'Add Points' chbbczqtiwgqwlskhwcetpckbbczqtiwgqwlskhwcetpd statbbczqtiwgqwlskhwcetp is " + ( addRadioButton . isSbbczqtiwgqwlskhwcetplbbczqtiwgqwlskhwcetpctbbczqtiwgqwlskhwcetpd () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
fix_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
fix_after_refactoring: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; }
√ fix_prediction_before: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
√ fix_prediction_after: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; }

line_index: 930
bug_before_refactoring: protected void paintComponent ( java.awt.Graphics g ) {} <s> protected void paintComponent ( java.awt.Graphics g ) {} <s> Fixed refresh problem
bug_after_refactoring: protected void paintComponent ( java.awt.Graphics aigjveggloauxzzbmrja ) {} <s> protected void paintComponent ( java.awt.Graphics aigjveggloauxzzbmrja ) {} <s> Fixed refresh problem
fix_before_refactoring: protected void paintComponent ( java.awt.Graphics g ) { super . paintComponent ( g ) ; }
fix_after_refactoring: protected void paintComponent ( java.awt.Graphics aigjveggloauxzzbmrja ) { super . paintComponent ( aigjveggloauxzzbmrja ) ; }
√ fix_prediction_before: protected void paintComponent ( java.awt.Graphics g ) { super . paintComponent ( g ) ; }
√ fix_prediction_after: protected void paintComponent ( java.awt.Graphics aigjveggloauxzzbmrja ) { super . paintComponent ( aigjveggloauxzzbmrja ) ; }

line_index: 933
bug_before_refactoring: public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; } <s> public void error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
fix_after_refactoring: public boolean error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; }
√ fix_prediction_before: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
√ fix_prediction_after: public boolean error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; }

line_index: 936
bug_before_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
bug_after_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; } <s> Fix test error
fix_before_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
fix_after_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; }
√ fix_prediction_before: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
√ fix_prediction_after: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; }

line_index: 939
bug_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
bug_after_refactoring: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
fix_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
fix_after_refactoring: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) {}
√ fix_prediction_before: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
√ fix_prediction_after: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) {}

line_index: 941
bug_before_refactoring: private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) ; <s> private static native void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
fix_after_refactoring: private static void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) {}
√ fix_prediction_before: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
√ fix_prediction_after: private static void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) {}

line_index: 953
bug_before_refactoring: @ java.lang.Override public < S extends E > boolean exists ( org.springframework.data.domain.Example < S > example ) { return repository . exists ( example ) ; } <s> @ java.lang.Override public < S extends E > boolean exists ( org.springframework.data.domain.Example < S > example ) { return repository . exists ( example ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override public < S extends E > boolean exists ( org.springframework.data.domain.Example < S > kzowasceyhikohpizomi ) { return repository . exists ( kzowasceyhikohpizomi ) ; } <s> @ java.lang.Override public < S extends E > boolean exists ( org.springframework.data.domain.Example < S > kzowasceyhikohpizomi ) { return repository . exists ( kzowasceyhikohpizomi ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override public boolean exists ( org.springframework.data.domain.Example < E > example ) { return repository . exists ( example ) ; }
fix_after_refactoring: @ java.lang.Override public boolean exists ( org.springframework.data.domain.Example < E > kzowasceyhikohpizomi ) { return repository . exists ( kzowasceyhikohpizomi ) ; }
√ fix_prediction_before: @ java.lang.Override public boolean exists ( org.springframework.data.domain.Example < E > example ) { return repository . exists ( example ) ; }
√ fix_prediction_after: @ java.lang.Override public boolean exists ( org.springframework.data.domain.Example < E > kzowasceyhikohpizomi ) { return repository . exists ( kzowasceyhikohpizomi ) ; }

line_index: 958
bug_before_refactoring: private void setEmail ( java.lang.String val ) { email = val ; } <s> private void setEmail ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; } <s> private void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public void setEmail ( java.lang.String val ) { email = val ; }
fix_after_refactoring: public void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; }
√ fix_prediction_before: public void setEmail ( java.lang.String val ) { email = val ; }
√ fix_prediction_after: public void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; }

line_index: 961
bug_before_refactoring: private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> Fixed bug in binary operation application
bug_after_refactoring: private boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; } <s> private boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
fix_after_refactoring: protected boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; }
√ fix_prediction_before: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
√ fix_prediction_after: protected boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; }

line_index: 971
bug_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
bug_after_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
fix_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
fix_after_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { deletePerson () ; }
√ fix_prediction_before: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
√ fix_prediction_after: private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { deletePerson () ; }

line_index: 972
bug_before_refactoring: private static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> private static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> Added call to make overlay active when the OverlayAssembler is used to 'ready' the page.  Fixed problem with history valueChangeHandler that prevented the home page from loading when the user refreshes.
bug_after_refactoring: private static void setContainer ( java.lang.String dezlmtencfpmcdbcdsgo ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = dezlmtencfpmcdbcdsgo ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> private static void setContainer ( java.lang.String dezlmtencfpmcdbcdsgo ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = dezlmtencfpmcdbcdsgo ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> Added call to make overlay active when the OverlayAssembler is used to 'ready' the page.  Fixed problem with history valueChangeHandler that prevented the home page from loading when the user refreshes.
fix_before_refactoring: public static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }
fix_after_refactoring: public static void setContainer ( java.lang.String dezlmtencfpmcdbcdsgo ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = dezlmtencfpmcdbcdsgo ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }
√ fix_prediction_before: public static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }
√ fix_prediction_after: public static void setContainer ( java.lang.String dezlmtencfpmcdbcdsgo ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = dezlmtencfpmcdbcdsgo ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }

line_index: 973
bug_before_refactoring: private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) ; <s> private static native void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
fix_after_refactoring: private static void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) {}
√ fix_prediction_before: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
√ fix_prediction_after: private static void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) {}

line_index: 999
bug_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
bug_after_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
fix_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
fix_after_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) {}
√ fix_prediction_before: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
√ fix_prediction_after: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) {}

line_index: 1000
bug_before_refactoring: protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> fixed errors  finally
bug_after_refactoring: protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String murmqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( murmqdyxvrnxxbrdqjdu ) ; return res ; } <s> protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String murmqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( murmqdyxvrnxxbrdqjdu ) ; return res ; } <s> fixed errors  finally
fix_before_refactoring: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; }
fix_after_refactoring: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String murmqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( murmqdyxvrnxxbrdqjdu ) ; return res ; }
√ fix_prediction_before: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; }
√ fix_prediction_after: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String murmqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( murmqdyxvrnxxbrdqjdu ) ; return res ; }

line_index: 1003
bug_before_refactoring: protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void answerCorrect ( android.howrjmorjfcdmyhkbwtq.View howrjmorjfcdmyhkbwtq ) { answerCorrect () ; } <s> protected void answerCorrect ( android.howrjmorjfcdmyhkbwtq.View howrjmorjfcdmyhkbwtq ) { answerCorrect () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void answerCorrect ( android.view.View view ) { answerCorrect () ; }
fix_after_refactoring: public void answerCorrect ( android.howrjmorjfcdmyhkbwtq.View howrjmorjfcdmyhkbwtq ) { answerCorrect () ; }
√ fix_prediction_before: public void answerCorrect ( android.view.View view ) { answerCorrect () ; }
√ fix_prediction_after: public void answerCorrect ( android.howrjmorjfcdmyhkbwtq.View howrjmorjfcdmyhkbwtq ) { answerCorrect () ; }

line_index: 1007
bug_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
bug_after_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) { this . dataListenings . remove ( mjytjnqkgszwtjdayjtw ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) { this . dataListenings . remove ( mjytjnqkgszwtjdayjtw ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
fix_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
fix_after_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) {}
√ fix_prediction_before: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
√ fix_prediction_after: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) {}

line_index: 1019
bug_before_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics ) ; } <s> public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics ) ; } <s> #4 - Fixed tests and bug shown up by tests where watched topics were not being stored correctly
bug_after_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics ) ; } <s> public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics ) ; } <s> #4 - Fixed tests and bug shown up by tests where watched topics were not being stored correctly
fix_before_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics . values () ) ; }
fix_after_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics . values () ) ; }
√ fix_prediction_before: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics . values () ) ; }
√ fix_prediction_after: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics . values () ) ; }

line_index: 1024
bug_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
bug_after_refactoring: public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( ocjunfoorbxlnlfypmcf ) ) + ocjunfoorbxlnlfypmcf ) ) ; } <s> public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( ocjunfoorbxlnlfypmcf ) ) + ocjunfoorbxlnlfypmcf ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
fix_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
fix_after_refactoring: public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( ocjunfoorbxlnlfypmcf ) ; }
√ fix_prediction_before: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
√ fix_prediction_after: public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( ocjunfoorbxlnlfypmcf ) ; }

line_index: 1025
bug_before_refactoring: public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
bug_after_refactoring: public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject kjrtydgllsxingfhljxy ) { kjrtydgllsxingfhljxyects . remove ( kjrtydgllsxingfhljxy . valueRef () ) ; } <s> public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject kjrtydgllsxingfhljxy ) { kjrtydgllsxingfhljxyects . remove ( kjrtydgllsxingfhljxy . valueRef () ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
fix_before_refactoring: protected synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; }
fix_after_refactoring: protected synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject kjrtydgllsxingfhljxy ) { kjrtydgllsxingfhljxyects . remove ( kjrtydgllsxingfhljxy . valueRef () ) ; }
√ fix_prediction_before: protected synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; }
√ fix_prediction_after: protected synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject kjrtydgllsxingfhljxy ) { kjrtydgllsxingfhljxyects . remove ( kjrtydgllsxingfhljxy . valueRef () ) ; }

line_index: 1100
bug_before_refactoring: public com.svnavigatoru600.domain.users.UserBuilder enabled ( boolean enabled ) { this . user . setEnabled ( enabled ) ; return this ; } <s> public com.svnavigatoru600.domain.users.UserBuilder enabled ( boolean enabled ) { this . user . setEnabled ( enabled ) ; return this ; } <s> bugfix: default value of SMTP port column did not work since smtpPort in User was int  not Integer
bug_after_refactoring: public com.svnavigatoru600.domain.users.UserBuilder brttactddmwnrfxvmumc ( boolean brttactddmwnrfxvmumc ) { this . user . setEnabled ( brttactddmwnrfxvmumc ) ; return this ; } <s> public com.svnavigatoru600.domain.users.UserBuilder brttactddmwnrfxvmumc ( boolean brttactddmwnrfxvmumc ) { this . user . setEnabled ( brttactddmwnrfxvmumc ) ; return this ; } <s> bugfix: default value of SMTP port column did not work since smtpPort in User was int  not Integer
fix_before_refactoring: public com.svnavigatoru600.domain.users.UserBuilder enabled ( final boolean enabled ) { user . setEnabled ( enabled ) ; return this ; }
fix_after_refactoring: public com.svnavigatoru600.domain.users.UserBuilder brttactddmwnrfxvmumc ( final boolean brttactddmwnrfxvmumc ) { user . setEnabled ( brttactddmwnrfxvmumc ) ; return this ; }
√ fix_prediction_before: public com.svnavigatoru600.domain.users.UserBuilder enabled ( final boolean enabled ) { user . setEnabled ( enabled ) ; return this ; }
√ fix_prediction_after: public com.svnavigatoru600.domain.users.UserBuilder brttactddmwnrfxvmumc ( final boolean brttactddmwnrfxvmumc ) { user . setEnabled ( brttactddmwnrfxvmumc ) ; return this ; }

line_index: 1113
bug_before_refactoring: @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
bug_after_refactoring: @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
fix_before_refactoring: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
fix_after_refactoring: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
√ fix_prediction_before: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
√ fix_prediction_after: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }

line_index: 1142
bug_before_refactoring: public static int attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> public static int attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> media attachments handling bugfix
bug_after_refactoring: public static int attachMedia ( java.io.File tlegdtyxlzyiwvnwijgh ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( tlegdtyxlzyiwvnwijgh ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> public static int attachMedia ( java.io.File tlegdtyxlzyiwvnwijgh ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( tlegdtyxlzyiwvnwijgh ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> media attachments handling bugfix
fix_before_refactoring: public static void attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; }
fix_after_refactoring: public static void attachMedia ( java.io.File tlegdtyxlzyiwvnwijgh ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( tlegdtyxlzyiwvnwijgh ) ; }
√ fix_prediction_before: public static void attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; }
√ fix_prediction_after: public static void attachMedia ( java.io.File tlegdtyxlzyiwvnwijgh ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( tlegdtyxlzyiwvnwijgh ) ; }

line_index: 1157
bug_before_refactoring: private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) ; <s> private static native void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
fix_after_refactoring: private static void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) {}
√ fix_prediction_before: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
√ fix_prediction_after: private static void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) {}

line_index: 1183
bug_before_refactoring: public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
bug_after_refactoring: public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) {}

line_index: 1190
bug_before_refactoring: @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
bug_after_refactoring: @ org.spine3.server.aggregate.Apply public void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
fix_before_refactoring: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
fix_after_refactoring: @ org.spine3.server.aggregate.Apply private void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; }
√ fix_prediction_before: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
√ fix_prediction_after: @ org.spine3.server.aggregate.Apply private void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; }

line_index: 1205
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
bug_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_after: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) {}

line_index: 1222
bug_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
bug_after_refactoring: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } <s> @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
fix_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
fix_after_refactoring: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } }
√ fix_prediction_before: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
√ fix_prediction_after: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } }

line_index: 1225
bug_before_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
bug_after_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
fix_before_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
fix_after_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; }
√ fix_prediction_before: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
√ fix_prediction_after: public void destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; }

line_index: 1256
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
bug_after_refactoring: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
fix_after_refactoring: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( true ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
√ fix_prediction_after: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( true ) ; }

line_index: 1260
bug_before_refactoring: public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
bug_after_refactoring: public static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
fix_before_refactoring: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
fix_after_refactoring: private static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
√ fix_prediction_before: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
√ fix_prediction_after: private static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }

