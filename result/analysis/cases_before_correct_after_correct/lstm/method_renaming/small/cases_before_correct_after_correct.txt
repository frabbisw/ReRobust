line_index: 1
bug_before_refactoring: private void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> private void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> + Add ScrollView for several Views   - Views: Main  SalesOrder  SalesOrderItem  Settings   + Bug fixes
bug_after_refactoring: private void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> private void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> + Add ScrollView for several Views   - Views: Main  SalesOrder  SalesOrderItem  Settings   + Bug fixes
fix_before_refactoring: public void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
√ fix_prediction_before: public void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
√ fix_prediction_after: public void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }

line_index: 6
bug_before_refactoring: private static native void _imaqGetCharCount ( long set ) ; <s> private static native void _imaqGetCharCount ( long set ) ; <s> Fixing bugs
bug_after_refactoring: private static native void zywhutbswxvyfuvnchzv ( long set ) ; <s> private static native void zywhutbswxvyfuvnchzv ( long set ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetCharCount ( long set ) {}
fix_after_refactoring: private static void zywhutbswxvyfuvnchzv ( long set ) {}
√ fix_prediction_before: private static void _imaqGetCharCount ( long set ) {}
√ fix_prediction_after: private static void zywhutbswxvyfuvnchzv ( long set ) {}

line_index: 70
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
bug_after_refactoring: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
fix_after_refactoring: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
√ fix_prediction_after: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }

line_index: 80
bug_before_refactoring: private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
fix_after_refactoring: protected boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
√ fix_prediction_before: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
√ fix_prediction_after: protected boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }

line_index: 81
bug_before_refactoring: protected double getBlue () { return this . blue . get () ; } <s> protected double getBlue () { return this . blue . get () ; } <s> Fixed potential bug
bug_after_refactoring: protected double nzxabwirvggwmhnqehyl () { return this . blue . get () ; } <s> protected double nzxabwirvggwmhnqehyl () { return this . blue . get () ; } <s> Fixed potential bug
fix_before_refactoring: public double getBlue () { return this . blue . get () ; }
fix_after_refactoring: public double nzxabwirvggwmhnqehyl () { return this . blue . get () ; }
√ fix_prediction_before: public double getBlue () { return this . blue . get () ; }
√ fix_prediction_after: public double nzxabwirvggwmhnqehyl () { return this . blue . get () ; }

line_index: 117
bug_before_refactoring: private static native void _imaqGetImageType ( long image , long type ) ; <s> private static native void _imaqGetImageType ( long image , long type ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hptuiyfhadqagvywwsjy ( long image , long type ) ; <s> private static native void hptuiyfhadqagvywwsjy ( long image , long type ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetImageType ( long image , long type ) {}
fix_after_refactoring: private static void hptuiyfhadqagvywwsjy ( long image , long type ) {}
√ fix_prediction_before: private static void _imaqGetImageType ( long image , long type ) {}
√ fix_prediction_after: private static void hptuiyfhadqagvywwsjy ( long image , long type ) {}

line_index: 140
bug_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
fix_after_refactoring: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
√ fix_prediction_before: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
√ fix_prediction_after: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}

line_index: 142
bug_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
bug_after_refactoring: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
fix_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
fix_after_refactoring: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
√ fix_prediction_before: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
√ fix_prediction_after: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }

line_index: 155
bug_before_refactoring: public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
bug_after_refactoring: public void ftoyyhqjaoqnmtcciddu ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void ftoyyhqjaoqnmtcciddu ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
fix_before_refactoring: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
fix_after_refactoring: public void ftoyyhqjaoqnmtcciddu ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
√ fix_prediction_before: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
√ fix_prediction_after: public void ftoyyhqjaoqnmtcciddu ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }

line_index: 253
bug_before_refactoring: @ java.lang.Override public void onPause () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . onPause () ; } <s> @ java.lang.Override public void onPause () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . onPause () ; } <s> Added sync hashmap; Refactor fragment and fixed small bug with frag argument loading;
bug_after_refactoring: @ java.lang.Override public void jojhkgeaecmqeynpghlw () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . jojhkgeaecmqeynpghlw () ; } <s> @ java.lang.Override public void jojhkgeaecmqeynpghlw () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . jojhkgeaecmqeynpghlw () ; } <s> Added sync hashmap; Refactor fragment and fixed small bug with frag argument loading;
fix_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override public void jojhkgeaecmqeynpghlw () { super . jojhkgeaecmqeynpghlw () ; }
√ fix_prediction_before: @ java.lang.Override public void onPause () { super . onPause () ; }
√ fix_prediction_after: @ java.lang.Override public void jojhkgeaecmqeynpghlw () { super . jojhkgeaecmqeynpghlw () ; }

line_index: 305
bug_before_refactoring: protected double getValue () { return mValue ; } <s> protected double getValue () { return mValue ; } <s> Fixed problems with Satoshi: not updating properly  JSON errors  and update time
bug_after_refactoring: protected double yynkwebevvxvivugzjra () { return mValue ; } <s> protected double yynkwebevvxvivugzjra () { return mValue ; } <s> Fixed problems with Satoshi: not updating properly  JSON errors  and update time
fix_before_refactoring: public double getValue () { return mValue ; }
fix_after_refactoring: public double yynkwebevvxvivugzjra () { return mValue ; }
√ fix_prediction_before: public double getValue () { return mValue ; }
√ fix_prediction_after: public double yynkwebevvxvivugzjra () { return mValue ; }

line_index: 322
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
fix_after_refactoring: public void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
√ fix_prediction_after: public void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }

line_index: 372
bug_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
bug_after_refactoring: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
fix_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
fix_after_refactoring: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; }
√ fix_prediction_before: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
√ fix_prediction_after: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; }

line_index: 394
bug_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> removed pane from start of application to solve travis issues
bug_after_refactoring: @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> removed pane from start of application to solve travis issues
fix_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception {}
√ fix_prediction_before: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception {}
√ fix_prediction_after: @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception {}

line_index: 428
bug_before_refactoring: @ java.lang.Override protected void setHistoryValue ( net.ssehub.easy.varModel.model.values.Value value , net.ssehub.easy.varModel.confModel.IAssignmentState state ) throws net.ssehub.easy.varModel.confModel.ConfigurationException {} <s> @ java.lang.Override protected void setHistoryValue ( net.ssehub.easy.varModel.model.values.Value value , net.ssehub.easy.varModel.confModel.IAssignmentState state ) throws net.ssehub.easy.varModel.confModel.ConfigurationException {} <s> Bug fix for container variables when performing an Undo freezeAll  However  one bug remains: Newly created container slots may loose their value during freezing them references #64
bug_after_refactoring: @ java.lang.Override protected void qfpooawedmnqwgemotyo ( net.ssehub.easy.varModel.model.values.Value value , net.ssehub.easy.varModel.confModel.IAssignmentState state ) throws net.ssehub.easy.varModel.confModel.ConfigurationException {} <s> @ java.lang.Override protected void qfpooawedmnqwgemotyo ( net.ssehub.easy.varModel.model.values.Value value , net.ssehub.easy.varModel.confModel.IAssignmentState state ) throws net.ssehub.easy.varModel.confModel.ConfigurationException {} <s> Bug fix for container variables when performing an Undo freezeAll  However  one bug remains: Newly created container slots may loose their value during freezing them references #64
fix_before_refactoring: { this . state = state ; }
fix_after_refactoring: { this . state = state ; }
√ fix_prediction_before: { this . state = state ; }
√ fix_prediction_after: { this . state = state ; }

line_index: 430
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> fixed bug of ble-led  fixed bug of send message of ble-led and bel-voice
bug_after_refactoring: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> fixed bug of ble-led  fixed bug of send message of ble-led and bel-voice
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
√ fix_prediction_after: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; }

line_index: 556
bug_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
bug_after_refactoring: @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
fix_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
fix_after_refactoring: @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) {}
√ fix_prediction_before: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
√ fix_prediction_after: @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) {}

line_index: 597
bug_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
bug_after_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
fix_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
fix_after_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
√ fix_prediction_before: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
√ fix_prediction_after: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}

line_index: 613
bug_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
bug_after_refactoring: @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
fix_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) {}
fix_after_refactoring: @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) {}
√ fix_prediction_before: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) {}
√ fix_prediction_after: @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) {}

line_index: 641
bug_before_refactoring: public void run () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> public void run () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> Fixed the bug. Code crashes sometimes in Test5 - throws NullPointerException
bug_after_refactoring: public void idwpgxdfvduedrgmwdip () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> public void idwpgxdfvduedrgmwdip () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> Fixed the bug. Code crashes sometimes in Test5 - throws NullPointerException
fix_before_refactoring: public void run () { output = f . apply ( this , this . listInteger ) ; }
fix_after_refactoring: public void idwpgxdfvduedrgmwdip () { output = f . apply ( this , this . listInteger ) ; }
√ fix_prediction_before: public void run () { output = f . apply ( this , this . listInteger ) ; }
√ fix_prediction_after: public void idwpgxdfvduedrgmwdip () { output = f . apply ( this , this . listInteger ) ; }

line_index: 693
bug_before_refactoring: private native void write ( int [] buffer ) ; <s> private native void write ( int [] buffer ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
bug_after_refactoring: private native void rporelqncmbxxgtecdly ( int [] buffer ) ; <s> private native void rporelqncmbxxgtecdly ( int [] buffer ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
fix_before_refactoring: public native void write ( int [] buffer ) ;
fix_after_refactoring: public native void rporelqncmbxxgtecdly ( int [] buffer ) ;
√ fix_prediction_before: public native void write ( int [] buffer ) ;
√ fix_prediction_after: public native void rporelqncmbxxgtecdly ( int [] buffer ) ;

line_index: 717
bug_before_refactoring: @ org.junit.Before public void setUp ( ) throws java.lang.Exception { options . put ( Constants.OPT_COLLECTION_NAME , "govdocs" ) ; options . put ( Constants.CNF_DROOLS_PATH , "/Users/artur/rnd/git/c3po/c3po-core/src/main/resources/rules" ) ; com.petpet.c3po.utils.Configurator . getDefaultConfigurator () . configure () ; ctrl = new com.petpet.c3po.controller.Controller ( com.petpet.c3po.utils.Configurator . getDefaultConfigurator () ) ; } <s> @ org.junit.Before public void setUp ( ) throws java.lang.Exception { options . put ( Constants.OPT_COLLECTION_NAME , "govdocs" ) ; options . put ( Constants.CNF_DROOLS_PATH , "/Users/artur/rnd/git/c3po/c3po-core/src/main/resources/rules" ) ; com.petpet.c3po.utils.Configurator . getDefaultConfigurator () . configure () ; ctrl = new com.petpet.c3po.controller.Controller ( com.petpet.c3po.utils.Configurator . getDefaultConfigurator () ) ; } <s> fixed a bug when identifying an unknown content type
bug_after_refactoring: @ org.junit.Before public void ezorndyldaalcfqzhnas ( ) throws java.lang.Exception { options . put ( Constants.OPT_COLLECTION_NAME , "govdocs" ) ; options . put ( Constants.CNF_DROOLS_PATH , "/Users/artur/rnd/git/c3po/c3po-core/src/main/resources/rules" ) ; com.petpet.c3po.utils.Configurator . getDefaultConfigurator () . configure () ; ctrl = new com.petpet.c3po.controller.Controller ( com.petpet.c3po.utils.Configurator . getDefaultConfigurator () ) ; } <s> @ org.junit.Before public void ezorndyldaalcfqzhnas ( ) throws java.lang.Exception { options . put ( Constants.OPT_COLLECTION_NAME , "govdocs" ) ; options . put ( Constants.CNF_DROOLS_PATH , "/Users/artur/rnd/git/c3po/c3po-core/src/main/resources/rules" ) ; com.petpet.c3po.utils.Configurator . getDefaultConfigurator () . configure () ; ctrl = new com.petpet.c3po.controller.Controller ( com.petpet.c3po.utils.Configurator . getDefaultConfigurator () ) ; } <s> fixed a bug when identifying an unknown content type
fix_before_refactoring: @ org.junit.Before public void setUp ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.Before public void ezorndyldaalcfqzhnas ( ) throws java.lang.Exception {}
√ fix_prediction_before: @ org.junit.Before public void setUp ( ) throws java.lang.Exception {}
√ fix_prediction_after: @ org.junit.Before public void ezorndyldaalcfqzhnas ( ) throws java.lang.Exception {}

line_index: 754
bug_before_refactoring: private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> Fixing bugs
bug_after_refactoring: private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ; <s> private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ; <s> Fixing bugs
fix_before_refactoring: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
fix_after_refactoring: private static int mvetzezobhpextblpwyq ( long roi , long annulus ) { return 0 ; }
√ fix_prediction_before: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
√ fix_prediction_after: private static int mvetzezobhpextblpwyq ( long roi , long annulus ) { return 0 ; }

line_index: 959
bug_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> @ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> fixing some bugs
bug_after_refactoring: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> fixing some bugs
fix_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; }
√ fix_prediction_before: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
√ fix_prediction_after: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; }

line_index: 971
bug_before_refactoring: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
bug_after_refactoring: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) {}

line_index: 999
bug_before_refactoring: public static void main ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Partial implementation. TODO: FIx classpath issue
bug_after_refactoring: public static void nysufazrqcjouvlabvkj ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> public static void nysufazrqcjouvlabvkj ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Partial implementation. TODO: FIx classpath issue
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void nysufazrqcjouvlabvkj ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void nysufazrqcjouvlabvkj ( java.lang.String [] args ) {}

line_index: 1012
bug_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
bug_after_refactoring: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " xovhwyaunqoolyqbmtfe" ) ) ; } <s> @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " xovhwyaunqoolyqbmtfe" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
fix_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
fix_after_refactoring: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) {}
√ fix_prediction_before: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
√ fix_prediction_after: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) {}

line_index: 1052
bug_before_refactoring: protected javafx.beans.property.DoubleProperty greenProperty () { return this . green ; } <s> protected javafx.beans.property.DoubleProperty greenProperty () { return this . green ; } <s> Fixed potential bug
bug_after_refactoring: protected javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; } <s> protected javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; } <s> Fixed potential bug
fix_before_refactoring: public javafx.beans.property.DoubleProperty greenProperty () { return this . green ; }
fix_after_refactoring: public javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; }
√ fix_prediction_before: public javafx.beans.property.DoubleProperty greenProperty () { return this . green ; }
√ fix_prediction_after: public javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; }

line_index: 1058
bug_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
bug_after_refactoring: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
fix_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
fix_after_refactoring: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_before: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_after: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) {}

line_index: 1066
bug_before_refactoring: public static void main ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> public static void main ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> fixed bug in diagonal mask generation
bug_after_refactoring: public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> fixed bug in diagonal mask generation
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) {}

line_index: 1098
bug_before_refactoring: public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
bug_after_refactoring: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void xkzpshaprhzncmjygbsh ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
fix_before_refactoring: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
fix_after_refactoring: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
√ fix_prediction_before: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
√ fix_prediction_after: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }

line_index: 1140
bug_before_refactoring: private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> Fixing bugs
bug_after_refactoring: private static native long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) ; <s> private static native long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
fix_after_refactoring: private static long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) { return 0 ; }
√ fix_prediction_before: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
√ fix_prediction_after: private static long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) { return 0 ; }

line_index: 1212
bug_before_refactoring: protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
fix_after_refactoring: private native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ;
√ fix_prediction_before: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
√ fix_prediction_after: private native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ;

line_index: 1214
bug_before_refactoring: @ java.lang.Override public void update () { if ( ! ( getStats () . isAlive () ) ) { emptyPack () ; getStats () . revive () ; } else { getStats () . update () ; } } <s> @ java.lang.Override public void update () { if ( ! ( getStats () . isAlive () ) ) { emptyPack () ; getStats () . revive () ; } else { getStats () . update () ; } } <s> Bug fixes
bug_after_refactoring: @ java.lang.Override public void khtdowxgjslewvbgzdmj () { if ( ! ( getStats () . isAlive () ) ) { emptyPack () ; getStats () . revive () ; } else { getStats () . khtdowxgjslewvbgzdmj () ; } } <s> @ java.lang.Override public void khtdowxgjslewvbgzdmj () { if ( ! ( getStats () . isAlive () ) ) { emptyPack () ; getStats () . revive () ; } else { getStats () . khtdowxgjslewvbgzdmj () ; } } <s> Bug fixes
fix_before_refactoring: @ java.lang.Override public void update () {}
fix_after_refactoring: @ java.lang.Override public void khtdowxgjslewvbgzdmj () {}
√ fix_prediction_before: @ java.lang.Override public void update () {}
√ fix_prediction_after: @ java.lang.Override public void khtdowxgjslewvbgzdmj () {}

line_index: 1253
bug_before_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> BugFixed FileToTranslate builder
bug_after_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; } <s> BugFixed FileToTranslate builder
fix_before_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
fix_after_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; }
√ fix_prediction_before: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
√ fix_prediction_after: public com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; }

line_index: 1259
bug_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
bug_after_refactoring: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
fix_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_before: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_after: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) {}

line_index: 1292
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
fix_after_refactoring: public void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
√ fix_prediction_after: public void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }

line_index: 1452
bug_before_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
bug_after_refactoring: public ninja.Result ruluatkjxiiwsdcvarfa ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result ruluatkjxiiwsdcvarfa ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
fix_before_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
fix_after_refactoring: public ninja.Result ruluatkjxiiwsdcvarfa () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
√ fix_prediction_before: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
√ fix_prediction_after: public ninja.Result ruluatkjxiiwsdcvarfa () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }

line_index: 1486
bug_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
bug_after_refactoring: @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
fix_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
√ fix_prediction_before: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
√ fix_prediction_after: @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }

line_index: 1497
bug_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
bug_after_refactoring: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
fix_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
fix_after_refactoring: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; }
√ fix_prediction_before: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
√ fix_prediction_after: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; }

line_index: 1520
bug_before_refactoring: @ java.lang.Override public int getTo () { java.lang.System.out . println ( to ) ; return to ; } <s> @ java.lang.Override public int getTo () { java.lang.System.out . println ( to ) ; return to ; } <s> Final bug fix
bug_after_refactoring: @ java.lang.Override public int jxvagzftqopmsggruvkd () { java.lang.System.out . println ( to ) ; return to ; } <s> @ java.lang.Override public int jxvagzftqopmsggruvkd () { java.lang.System.out . println ( to ) ; return to ; } <s> Final bug fix
fix_before_refactoring: @ java.lang.Override public int getTo () { return to ; }
fix_after_refactoring: @ java.lang.Override public int jxvagzftqopmsggruvkd () { return to ; }
√ fix_prediction_before: @ java.lang.Override public int getTo () { return to ; }
√ fix_prediction_after: @ java.lang.Override public int jxvagzftqopmsggruvkd () { return to ; }

line_index: 1571
bug_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
bug_after_refactoring: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
fix_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
fix_after_refactoring: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
√ fix_prediction_before: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
√ fix_prediction_after: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; }

line_index: 1584
bug_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
bug_after_refactoring: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
fix_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
fix_after_refactoring: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) {}
√ fix_prediction_before: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
√ fix_prediction_after: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) {}

line_index: 1592
bug_before_refactoring: public boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> public boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> Fixed screen issue for now. Started refactoring codebase
bug_after_refactoring: public boolean aqeahhcarzqxfxouwqhp () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> public boolean aqeahhcarzqxfxouwqhp () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> Fixed screen issue for now. Started refactoring codebase
fix_before_refactoring: private boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; }
fix_after_refactoring: private boolean aqeahhcarzqxfxouwqhp () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; }
√ fix_prediction_before: private boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; }
√ fix_prediction_after: private boolean aqeahhcarzqxfxouwqhp () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; }

line_index: 1704
bug_before_refactoring: private void initSource ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> private void initSource ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> Fixed error with playing. I added line play(0  2000); it plays 0 Hz for 2 seconds to avoid sounds overlapping.
bug_after_refactoring: private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> Fixed error with playing. I added line play(0  2000); it plays 0 Hz for 2 seconds to avoid sounds overlapping.
fix_before_refactoring: private void initSource ( ) throws java.lang.Exception { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; }
fix_after_refactoring: private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; }
√ fix_prediction_before: private void initSource ( ) throws java.lang.Exception { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; }
√ fix_prediction_after: private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; }

line_index: 1734
bug_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> @ java.lang.Override public void onPause () { super . onPause () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> Fixed print preview bug
bug_after_refactoring: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> Fixed print preview bug
fix_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; }
√ fix_prediction_before: @ java.lang.Override public void onPause () { super . onPause () ; }
√ fix_prediction_after: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; }

line_index: 1800
bug_before_refactoring: public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
bug_after_refactoring: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_before: public void setName ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_after: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = name ; }

line_index: 1806
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_after: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) {}

line_index: 1848
bug_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
bug_after_refactoring: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; } <s> public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
fix_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
fix_after_refactoring: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; }
√ fix_prediction_before: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
√ fix_prediction_after: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; }

line_index: 1921
bug_before_refactoring: @ org.junit.Test public final void testLoadDefaultConfiguration () { fail ( "Not yet implemented" ) ; } <s> @ org.junit.Test public final void testLoadDefaultConfiguration () { fail ( "Not yet implemented" ) ; } <s> Error fixed:  es.eurohelp.opendata.aldapa.api.configuration.test does not exist
bug_after_refactoring: @ org.junit.Test public final void ympxjezrmbipwxsakqzg () { fail ( "Not yet implemented" ) ; } <s> @ org.junit.Test public final void ympxjezrmbipwxsakqzg () { fail ( "Not yet implemented" ) ; } <s> Error fixed:  es.eurohelp.opendata.aldapa.api.configuration.test does not exist
fix_before_refactoring: @ org.junit.Test public final void testLoadDefaultConfiguration () {}
fix_after_refactoring: @ org.junit.Test public final void ympxjezrmbipwxsakqzg () {}
√ fix_prediction_before: @ org.junit.Test public final void testLoadDefaultConfiguration () {}
√ fix_prediction_after: @ org.junit.Test public final void ympxjezrmbipwxsakqzg () {}

line_index: 1996
bug_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; loadItems ( BUNDLE_QUERY_REVIEW , getString ( mMovie . getId () ) ) ; loadItems ( BUNDLE_QUERY_VIDEO , getString ( mMovie . getId () ) ) ; } <s> @ java.lang.Override protected void onResume () { super . onResume () ; loadItems ( BUNDLE_QUERY_REVIEW , getString ( mMovie . getId () ) ) ; loadItems ( BUNDLE_QUERY_VIDEO , getString ( mMovie . getId () ) ) ; } <s> fixed issues
bug_after_refactoring: @ java.lang.Override protected void ujsanxsyewomqcaxryqc () { super . ujsanxsyewomqcaxryqc () ; loadItems ( BUNDLE_QUERY_REVIEW , getString ( mMovie . getId () ) ) ; loadItems ( BUNDLE_QUERY_VIDEO , getString ( mMovie . getId () ) ) ; } <s> @ java.lang.Override protected void ujsanxsyewomqcaxryqc () { super . ujsanxsyewomqcaxryqc () ; loadItems ( BUNDLE_QUERY_REVIEW , getString ( mMovie . getId () ) ) ; loadItems ( BUNDLE_QUERY_VIDEO , getString ( mMovie . getId () ) ) ; } <s> fixed issues
fix_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; }
fix_after_refactoring: @ java.lang.Override protected void ujsanxsyewomqcaxryqc () { super . ujsanxsyewomqcaxryqc () ; }
√ fix_prediction_before: @ java.lang.Override protected void onResume () { super . onResume () ; }
√ fix_prediction_after: @ java.lang.Override protected void ujsanxsyewomqcaxryqc () { super . ujsanxsyewomqcaxryqc () ; }

line_index: 1997
bug_before_refactoring: @ java.lang.Override public int hashCode () { return ( ( m_identifier . hashCode () ) ^ ( m_properties . hashCode () ) ) ^ ( m_value . hashCode () ) ; } <s> @ java.lang.Override public int hashCode () { return ( ( m_identifier . hashCode () ) ^ ( m_properties . hashCode () ) ) ^ ( m_value . hashCode () ) ; } <s> Clean up Reference class a bit.  * Fix some documentation errors. * refactor Format function to avoid copying strings repeatedly with .Replace
bug_after_refactoring: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return ( ( m_identifier . eutbbmjcaxsetohodszy () ) ^ ( m_properties . eutbbmjcaxsetohodszy () ) ) ^ ( m_value . eutbbmjcaxsetohodszy () ) ; } <s> @ java.lang.Override public int eutbbmjcaxsetohodszy () { return ( ( m_identifier . eutbbmjcaxsetohodszy () ) ^ ( m_properties . eutbbmjcaxsetohodszy () ) ) ^ ( m_value . eutbbmjcaxsetohodszy () ) ; } <s> Clean up Reference class a bit.  * Fix some documentation errors. * refactor Format function to avoid copying strings repeatedly with .Replace
fix_before_refactoring: @ java.lang.Override public int hashCode () { return m_value . hashCode () ; }
fix_after_refactoring: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return m_value . eutbbmjcaxsetohodszy () ; }
√ fix_prediction_before: @ java.lang.Override public int hashCode () { return m_value . hashCode () ; }
√ fix_prediction_after: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return m_value . eutbbmjcaxsetohodszy () ; }

