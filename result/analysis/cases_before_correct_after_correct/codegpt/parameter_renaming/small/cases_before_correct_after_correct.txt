line_index: 2
bug_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
bug_after_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus hgenarsmgumfcmxewruq ) { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus hgenarsmgumfcmxewruq ) { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; } <s> fixed test bug. fixed tyle error.
fix_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
fix_after_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; }
√ fix_prediction_before: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
√ fix_prediction_after: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; }

line_index: 5
bug_before_refactoring: private static native void _imaqGetCharCount ( long set ) ; <s> private static native void _imaqGetCharCount ( long set ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) ; <s> private static native void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetCharCount ( long set ) {}
fix_after_refactoring: private static void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) {}
√ fix_prediction_before: private static void _imaqGetCharCount ( long set ) {}
√ fix_prediction_after: private static void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) {}

line_index: 7
bug_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
bug_after_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + sleleopwbmitfiplioyz ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + sleleopwbmitfiplioyz ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
fix_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
fix_after_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) {}
√ fix_prediction_before: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
√ fix_prediction_after: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) {}

line_index: 11
bug_before_refactoring: private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
bug_after_refactoring: private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnydaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnydaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; } <s> private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnydaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnydaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
fix_before_refactoring: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
fix_after_refactoring: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnydaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnydaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; }
√ fix_prediction_before: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
√ fix_prediction_after: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnydaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnydaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; }

line_index: 16
bug_before_refactoring: public int indexOf ( java.lang.Object o ) { return 0 ; } <s> public int indexOf ( java.lang.Object o ) { return 0 ; } <s> fix list bug
bug_after_refactoring: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return 0 ; } <s> public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return 0 ; } <s> fix list bug
fix_before_refactoring: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
fix_after_refactoring: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return list . indexOf ( bdimyslwzcbbrrorkevj ) ; }
√ fix_prediction_before: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
√ fix_prediction_after: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return list . indexOf ( bdimyslwzcbbrrorkevj ) ; }

line_index: 18
bug_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
bug_after_refactoring: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
fix_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
fix_after_refactoring: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { this . preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; }
√ fix_prediction_before: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
√ fix_prediction_after: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { this . preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; }

line_index: 26
bug_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
bug_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo , boolean xyzxyhdrpkcwtsxdoonh ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) , xyzxyhdrpkcwtsxdoonh ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo , boolean xyzxyhdrpkcwtsxdoonh ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) , xyzxyhdrpkcwtsxdoonh ) ; } <s> Fixed bug
fix_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
fix_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) ) ; }
√ fix_prediction_before: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
√ fix_prediction_after: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) ) ; }

line_index: 30
bug_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> fix decode bug
bug_after_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( bdagrpiuplneymrsmvnj + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( bdagrpiuplneymrsmvnj + 1 ) ) ; } <s> fix decode bug
fix_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
fix_after_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , bdagrpiuplneymrsmvnj ) ; }
√ fix_prediction_before: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
√ fix_prediction_after: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , bdagrpiuplneymrsmvnj ) ; }

line_index: 45
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
bug_after_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( nbiqgmtvyfnciysqgwfs . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( nbiqgmtvyfnciysqgwfs . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
fix_after_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { finish () ; }
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
√ fix_prediction_after: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { finish () ; }

line_index: 48
bug_before_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> fixed javac compilation problem
bug_after_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > ivorrqnkquahnphupozj ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > ivorrqnkquahnphupozj ) ; <s> fixed javac compilation problem
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > ivorrqnkquahnphupozj ) ;
√ fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
√ fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > ivorrqnkquahnphupozj ) ;

line_index: 51
bug_before_refactoring: private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; } <s> private boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
fix_after_refactoring: protected boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; }
√ fix_prediction_before: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
√ fix_prediction_after: protected boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; }

line_index: 54
bug_before_refactoring: protected boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> protected boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean isReserved ( java.lang.String qgzadygmfcfrrqsmjikb ) { return reserved . containsKey ( qgzadygmfcfrrqsmjikb ) ; } <s> protected boolean isReserved ( java.lang.String qgzadygmfcfrrqsmjikb ) { return reserved . containsKey ( qgzadygmfcfrrqsmjikb ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; }
fix_after_refactoring: private boolean isReserved ( java.lang.String qgzadygmfcfrrqsmjikb ) { return reserved . containsKey ( qgzadygmfcfrrqsmjikb ) ; }
√ fix_prediction_before: private boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; }
√ fix_prediction_after: private boolean isReserved ( java.lang.String qgzadygmfcfrrqsmjikb ) { return reserved . containsKey ( qgzadygmfcfrrqsmjikb ) ; }

line_index: 79
bug_before_refactoring: public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; } <s> public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; } <s> fixed some issues with average method. Also added labels to everything
bug_after_refactoring: public void addToSignal ( int lnpktigzrqjpaysdamhv ) { signalStrength . add ( lnpktigzrqjpaysdamhv ) ; } <s> public void addToSignal ( int lnpktigzrqjpaysdamhv ) { signalStrength . add ( lnpktigzrqjpaysdamhv ) ; } <s> fixed some issues with average method. Also added labels to everything
fix_before_refactoring: public void addToSignal ( int rssi ) { this . signalStrength . add ( rssi ) ; }
fix_after_refactoring: public void addToSignal ( int lnpktigzrqjpaysdamhv ) { this . signalStrength . add ( lnpktigzrqjpaysdamhv ) ; }
√ fix_prediction_before: public void addToSignal ( int rssi ) { this . signalStrength . add ( rssi ) ; }
√ fix_prediction_after: public void addToSignal ( int lnpktigzrqjpaysdamhv ) { this . signalStrength . add ( lnpktigzrqjpaysdamhv ) ; }

line_index: 96
bug_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
bug_after_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + byultgvpwgccifoqwjrl ) ) ; herdfyqrucaxytwdsini.byultgvpwgccifoqwjrl = byultgvpwgccifoqwjrl ; return true ; } <s> public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + byultgvpwgccifoqwjrl ) ) ; herdfyqrucaxytwdsini.byultgvpwgccifoqwjrl = byultgvpwgccifoqwjrl ; return true ; } <s> fix bugs in JSONController
fix_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
fix_after_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { return true ; }
√ fix_prediction_before: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
√ fix_prediction_after: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { return true ; }

line_index: 103
bug_before_refactoring: public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
bug_after_refactoring: public void push ( E kwmorypgeostwuqlqjvm ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; } } <s> public void push ( E kwmorypgeostwuqlqjvm ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; } } <s> Bug fixes.
fix_before_refactoring: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
fix_after_refactoring: public void push ( E kwmorypgeostwuqlqjvm ) { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; }
√ fix_prediction_before: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
√ fix_prediction_after: public void push ( E kwmorypgeostwuqlqjvm ) { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; }

line_index: 108
bug_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
bug_after_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
fix_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { return false ; }
√ fix_prediction_before: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
√ fix_prediction_after: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { return false ; }

line_index: 123
bug_before_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
bug_after_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; } <s> Bug fixes: tests plus removed deprecated imports
fix_before_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
fix_after_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; }
√ fix_prediction_before: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
√ fix_prediction_after: public void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; }

line_index: 128
bug_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
bug_after_refactoring: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } <s> public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } <s> Fixing arraylist issues found in testing.
fix_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
fix_after_refactoring: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } }
√ fix_prediction_before: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
√ fix_prediction_after: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } }

line_index: 135
bug_before_refactoring: private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) ; <s> private static native void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqUnflatten ( long image , long data , int size ) {}
fix_after_refactoring: private static void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) {}
√ fix_prediction_before: private static void _imaqUnflatten ( long image , long data , int size ) {}
√ fix_prediction_after: private static void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) {}

line_index: 142
bug_before_refactoring: protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; } <s> protected void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
fix_after_refactoring: private void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; }
√ fix_prediction_before: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
√ fix_prediction_after: private void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; }

line_index: 143
bug_before_refactoring: public void setX ( int x ) { this . x = x ; } <s> public void setX ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; } <s> public void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void setX ( int x ) { this . x = x ; }
fix_after_refactoring: private void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; }
√ fix_prediction_before: private void setX ( int x ) { this . x = x ; }
√ fix_prediction_after: private void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; }

line_index: 156
bug_before_refactoring: private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstvvtkjdjctiqfdkfy ) ; <s> private static native void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstvvtkjdjctiqfdkfy ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
fix_after_refactoring: private static void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstvvtkjdjctiqfdkfy ) {}
√ fix_prediction_before: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
√ fix_prediction_after: private static void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstvvtkjdjctiqfdkfy ) {}

line_index: 157
bug_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
bug_after_refactoring: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = ( laoedilvdscrklrnpybn ) ? 1 : 0 ; } <s> public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = ( laoedilvdscrklrnpybn ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
fix_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
fix_after_refactoring: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = laoedilvdscrklrnpybn ; }
√ fix_prediction_before: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
√ fix_prediction_after: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = laoedilvdscrklrnpybn ; }

line_index: 176
bug_before_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> TMI-40: Fixed subsampling offset bug (and removed the slow  stepwise reading + simplified the code  at the cost of higher memory consumption).
bug_after_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader bnpqpqmintcplfgbznir ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader bnpqpqmintcplfgbznir ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> TMI-40: Fixed subsampling offset bug (and removed the slow  stepwise reading + simplified the code  at the cost of higher memory consumption).
fix_before_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { processImageComplete () ; }
fix_after_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader bnpqpqmintcplfgbznir ) { processImageComplete () ; }
√ fix_prediction_before: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { processImageComplete () ; }
√ fix_prediction_after: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader bnpqpqmintcplfgbznir ) { processImageComplete () ; }

line_index: 177
bug_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
bug_after_refactoring: public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { if ( ( this . tuogektyslideximhbmts ) == null ) { this . tuogektyslideximhbmts = new java.util.LinkedList <> () ; } this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; } <s> public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { if ( ( this . tuogektyslideximhbmts ) == null ) { this . tuogektyslideximhbmts = new java.util.LinkedList <> () ; } this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; } <s> fixed bug in ShowEventPageCommand
fix_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
fix_after_refactoring: public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; }
√ fix_prediction_before: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
√ fix_prediction_after: public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; }

line_index: 178
bug_before_refactoring: public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
bug_after_refactoring: public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] houbutjzroifscjzuvkb ) {}

line_index: 185
bug_before_refactoring: private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
fix_after_refactoring: protected boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; }
√ fix_prediction_before: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
√ fix_prediction_after: protected boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; }

line_index: 186
bug_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> Fixed merge problems
bug_after_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) {} <s> Fixed merge problems
fix_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
fix_after_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) ;
√ fix_prediction_before: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
√ fix_prediction_after: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) ;

line_index: 199
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> fix bug lifecycle profil  fix design profil
bug_after_refactoring: @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaousverride public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActilwkhsooqjebjihwaousvity . class ) ; this . startActilwkhsooqjebjihwaousvity ( Carnetintent ) ; this . finish () ; } <s> @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaousverride public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActilwkhsooqjebjihwaousvity . class ) ; this . startActilwkhsooqjebjihwaousvity ( Carnetintent ) ; this . finish () ; } <s> fix bug lifecycle profil  fix design profil
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { this . finish () ; }
fix_after_refactoring: @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaousverride public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { this . finish () ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { this . finish () ; }
√ fix_prediction_after: @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaousverride public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { this . finish () ; }

line_index: 201
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; } <s> protected void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
fix_after_refactoring: public void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
√ fix_prediction_after: public void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; }

line_index: 220
bug_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , lwclpjbpdhgmmbilnmfh ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , lwclpjbpdhgmmbilnmfh ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) {}
fix_after_refactoring: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) {}
√ fix_prediction_before: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) {}
√ fix_prediction_after: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) {}

line_index: 222
bug_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) { if ( bqdzlejorfdimatcjrjf == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) { if ( bqdzlejorfdimatcjrjf == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
fix_after_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) {}
√ fix_prediction_before: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
√ fix_prediction_after: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > bqdzlejorfdimatcjrjf ) {}

line_index: 233
bug_before_refactoring: @ java.lang.Override public void onTabSelected ( int position ) { SameActionTab ( position ) ; } <s> @ java.lang.Override public void onTabSelected ( int position ) { SameActionTab ( position ) ; } <s> bugs fixed
bug_after_refactoring: @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) { SameActionTab ( pkxfhbjpttfhtevakryj ) ; } <s> @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) { SameActionTab ( pkxfhbjpttfhtevakryj ) ; } <s> bugs fixed
fix_before_refactoring: @ java.lang.Override public void onTabSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) {}
√ fix_prediction_before: @ java.lang.Override public void onTabSelected ( int position ) {}
√ fix_prediction_after: @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) {}

line_index: 234
bug_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
bug_after_refactoring: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
fix_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
fix_after_refactoring: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; }
√ fix_prediction_before: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
√ fix_prediction_after: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; }

line_index: 245
bug_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
bug_after_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { if ( ! ( kbubqqnmrzidbpmprobs . isArray () ) ) { return kbubqqnmrzidbpmprobs ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( kbubqqnmrzidbpmprobs . getComponentType () ) ; } <s> public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { if ( ! ( kbubqqnmrzidbpmprobs . isArray () ) ) { return kbubqqnmrzidbpmprobs ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( kbubqqnmrzidbpmprobs . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
fix_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { return type ; }
fix_after_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { return kbubqqnmrzidbpmprobs ; }
√ fix_prediction_before: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { return type ; }
√ fix_prediction_after: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { return kbubqqnmrzidbpmprobs ; }

line_index: 248
bug_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> removed pane from start of application to solve travis issues
bug_after_refactoring: @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; wjtblosmbcumvelhhhqa . setScene ( scene ) ; wjtblosmbcumvelhhhqa . show () ; } <s> @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; wjtblosmbcumvelhhhqa . setScene ( scene ) ; wjtblosmbcumvelhhhqa . show () ; } <s> removed pane from start of application to solve travis issues
fix_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception {}
√ fix_prediction_before: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception {}
√ fix_prediction_after: @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception {}

line_index: 269
bug_before_refactoring: public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
bug_after_refactoring: public void setTo ( java.lang.String wofzkswfmmfgsifjmwzi ) { this . to = wofzkswfmmfgsifjmwzi ; } <s> public void setTo ( java.lang.String wofzkswfmmfgsifjmwzi ) { this . to = wofzkswfmmfgsifjmwzi ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
fix_before_refactoring: public void setTo ( java.lang.String arg ) { to = arg ; }
fix_after_refactoring: public void setTo ( java.lang.String wofzkswfmmfgsifjmwzi ) { to = wofzkswfmmfgsifjmwzi ; }
√ fix_prediction_before: public void setTo ( java.lang.String arg ) { to = arg ; }
√ fix_prediction_after: public void setTo ( java.lang.String wofzkswfmmfgsifjmwzi ) { to = wofzkswfmmfgsifjmwzi ; }

line_index: 275
bug_before_refactoring: private void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> private void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> Fixed issue with selection
bug_after_refactoring: private void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; } <s> private void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; } <s> Fixed issue with selection
fix_before_refactoring: public void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; }
fix_after_refactoring: public void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; }
√ fix_prediction_before: public void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; }
√ fix_prediction_after: public void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; }

line_index: 277
bug_before_refactoring: private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
bug_after_refactoring: private boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) { return false ; } return true ; } <s> private boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
fix_before_refactoring: public boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
fix_after_refactoring: public boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) { return false ; } return true ; }
√ fix_prediction_before: public boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
√ fix_prediction_after: public boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) { return false ; } return true ; }

line_index: 293
bug_before_refactoring: public static void main ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> public static void main ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> fixed buidl errors
bug_after_refactoring: public static void main ( java.lang.String [] nijmnbxbzkvcjffjrtym ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> public static void main ( java.lang.String [] nijmnbxbzkvcjffjrtym ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> fixed buidl errors
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] nijmnbxbzkvcjffjrtym ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] nijmnbxbzkvcjffjrtym ) {}

line_index: 297
bug_before_refactoring: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> Fix saved page status bugs  Change-Id: I595a19b722ad7a7764a3fe865bf232e91351f4df
bug_after_refactoring: public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> Fix saved page status bugs  Change-Id: I595a19b722ad7a7764a3fe865bf232e91351f4df
fix_before_refactoring: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; }
fix_after_refactoring: public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; }
√ fix_prediction_before: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; }
√ fix_prediction_after: public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; }

line_index: 303
bug_before_refactoring: protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
bug_after_refactoring: protected void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
fix_before_refactoring: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
fix_after_refactoring: public void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_before: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_after: public void setFloat ( java.lang.String nrklsdtxyysjlkemiwyl ) { this . argument . put ( nrklsdtxyysjlkemiwyl , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }

line_index: 338
bug_before_refactoring: public void setName ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> public void setName ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> Refresh button added and rotation bug fixed. Closes #22 Closes #6
bug_after_refactoring: public void setName ( java.lang.String agewffiwytcbgyioeawx ) { if ( ! ( agewffiwytcbgyioeawx . equals ( name ) ) ) { name = agewffiwytcbgyioeawx ; commitChanges () ; } } <s> public void setName ( java.lang.String agewffiwytcbgyioeawx ) { if ( ! ( agewffiwytcbgyioeawx . equals ( name ) ) ) { name = agewffiwytcbgyioeawx ; commitChanges () ; } } <s> Refresh button added and rotation bug fixed. Closes #22 Closes #6
fix_before_refactoring: public void setName ( java.lang.String newName ) { name = newName ; }
fix_after_refactoring: public void setName ( java.lang.String agewffiwytcbgyioeawx ) { name = agewffiwytcbgyioeawx ; }
√ fix_prediction_before: public void setName ( java.lang.String newName ) { name = newName ; }
√ fix_prediction_after: public void setName ( java.lang.String agewffiwytcbgyioeawx ) { name = agewffiwytcbgyioeawx ; }

line_index: 379
bug_before_refactoring: public static final void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; } <s> public static final void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; } <s> Bug fixed  if the bot didn't have perms it would do the action
bug_after_refactoring: public static final void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx , java.lang.String mjjohtlhtmvmzzsujhlb ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx , mjjohtlhtmvmzzsujhlb ) ; } <s> public static final void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx , java.lang.String mjjohtlhtmvmzzsujhlb ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx , mjjohtlhtmvmzzsujhlb ) ; } <s> Bug fixed  if the bot didn't have perms it would do the action
fix_before_refactoring: public static void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; }
fix_after_refactoring: public static void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx , java.lang.String mjjohtlhtmvmzzsujhlb ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx , mjjohtlhtmvmzzsujhlb ) ; }
√ fix_prediction_before: public static void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; }
√ fix_prediction_after: public static void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx , java.lang.String mjjohtlhtmvmzzsujhlb ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx , mjjohtlhtmvmzzsujhlb ) ; }

line_index: 392
bug_before_refactoring: public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> fixed dumb bug
bug_after_refactoring: public void add ( int vnsyefleifqxkxoeswuq ) { if ( vnsyefleifqxkxoeswuq >= 0 ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; } } <s> public void add ( int vnsyefleifqxkxoeswuq ) { if ( vnsyefleifqxkxoeswuq >= 0 ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; } } <s> fixed dumb bug
fix_before_refactoring: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
fix_after_refactoring: public void add ( int vnsyefleifqxkxoeswuq ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; }
√ fix_prediction_before: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
√ fix_prediction_after: public void add ( int vnsyefleifqxkxoeswuq ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; }

line_index: 401
bug_before_refactoring: protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; } <s> protected boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
fix_after_refactoring: private boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; }
√ fix_prediction_before: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
√ fix_prediction_after: private boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; }

line_index: 403
bug_before_refactoring: public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
fix_after_refactoring: private void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_before: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_after: private void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; }

line_index: 412
bug_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
bug_after_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
fix_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
fix_after_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { if ( ocaeaishwbbvgpvrtzwp != null ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; } return this ; }
√ fix_prediction_before: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
√ fix_prediction_after: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { if ( ocaeaishwbbvgpvrtzwp != null ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; } return this ; }

line_index: 433
bug_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> Load of bug fixes.
bug_after_refactoring: @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { if ( ! gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = false ; java.lang.System.out . println ( this . gmsyfiyxzedigrqrizwi ) ; invalidate () ; } } <s> @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { if ( ! gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = false ; java.lang.System.out . println ( this . gmsyfiyxzedigrqrizwi ) ; invalidate () ; } } <s> Load of bug fixes.
fix_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
fix_after_refactoring: @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = gmsyfiyxzedigrqrizwi ; invalidate () ; }
√ fix_prediction_before: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
√ fix_prediction_after: @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = gmsyfiyxzedigrqrizwi ; invalidate () ; }

line_index: 438
bug_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { if ( pzwbbmagmiytpiywuqul != ( - 1 ) ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; } } <s> private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { if ( pzwbbmagmiytpiywuqul != ( - 1 ) ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
fix_after_refactoring: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; }
√ fix_prediction_before: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
√ fix_prediction_after: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; }

line_index: 441
bug_before_refactoring: private native void write ( int [] buffer ) ; <s> private native void write ( int [] buffer ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
bug_after_refactoring: private native void write ( int [] odbzwhegpzyauzvnbchh ) ; <s> private native void write ( int [] odbzwhegpzyauzvnbchh ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
fix_before_refactoring: public native void write ( int [] buffer ) ;
fix_after_refactoring: public native void write ( int [] odbzwhegpzyauzvnbchh ) ;
√ fix_prediction_before: public native void write ( int [] buffer ) ;
√ fix_prediction_after: public native void write ( int [] odbzwhegpzyauzvnbchh ) ;

line_index: 473
bug_before_refactoring: public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> Solved a problem with the cache nodes
bug_after_refactoring: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( sdkarkvcmyytkqhqlcqf ) ) ) ) ; sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; } <s> public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( sdkarkvcmyytkqhqlcqf ) ) ) ) ; sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; } <s> Solved a problem with the cache nodes
fix_before_refactoring: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
fix_after_refactoring: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; }
√ fix_prediction_before: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
√ fix_prediction_after: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; }

line_index: 477
bug_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> bug fix etape 1
bug_after_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( exjbrxlelbqawyhcvccs + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( exjbrxlelbqawyhcvccs + 1 ) ) ; } <s> bug fix etape 1
fix_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
fix_after_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( exjbrxlelbqawyhcvccs ) ; }
√ fix_prediction_before: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
√ fix_prediction_after: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( exjbrxlelbqawyhcvccs ) ; }

line_index: 480
bug_before_refactoring: private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> Fixing bugs
bug_after_refactoring: private static native int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) ; <s> private static native int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) ; <s> Fixing bugs
fix_before_refactoring: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
fix_after_refactoring: private static int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) { return 0 ; }
√ fix_prediction_before: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
√ fix_prediction_after: private static int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) { return 0 ; }

line_index: 484
bug_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) {}
√ fix_prediction_before: private void version ( com.adam4.irc.ParsedMessage parsed ) {}
√ fix_prediction_after: private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) {}

line_index: 495
bug_before_refactoring: public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> icon and minor error fixes
bug_after_refactoring: public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; } <s> public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; } <s> icon and minor error fixes
fix_before_refactoring: public void sendMessage ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
fix_after_refactoring: public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { if ( ( _ws ) != null ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; } }
√ fix_prediction_before: public void sendMessage ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
√ fix_prediction_after: public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { if ( ( _ws ) != null ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; } }

line_index: 514
bug_before_refactoring: public static int [] binarySearch ( int [] list , int checkNum ) {} <s> public static int [] binarySearch ( int [] list , int checkNum ) {} <s> Fix misc. bugs
bug_after_refactoring: public static int [] binarySearch ( int [] ghihfoukiakecroabjoa , int ckstnygienejbaatlqkt ) {} <s> public static int [] binarySearch ( int [] ghihfoukiakecroabjoa , int ckstnygienejbaatlqkt ) {} <s> Fix misc. bugs
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 515
bug_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { synchronized ( parameters ) { parameters . remove ( oiltndmspgsnungdcgep ) ; } fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { synchronized ( parameters ) { parameters . remove ( oiltndmspgsnungdcgep ) ; } fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
fix_after_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { parameters . remove ( oiltndmspgsnungdcgep ) ; fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; }
√ fix_prediction_before: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
√ fix_prediction_after: @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { parameters . remove ( oiltndmspgsnungdcgep ) ; fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; }

line_index: 527
bug_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
bug_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator jbsvkvahatnqzntgiacl , java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator jbsvkvahatnqzntgiacl , java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ; <s> add:In  NotIn fix:bug
fix_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
fix_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ;
√ fix_prediction_before: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
√ fix_prediction_after: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ;

line_index: 535
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) {}
fix_after_refactoring: @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) {}
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
√ fix_prediction_after: @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) {}

line_index: 536
bug_before_refactoring: private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) ; <s> private static native void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetMaskOffset ( long image , long offset ) {}
fix_after_refactoring: private static void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) {}
√ fix_prediction_before: private static void _imaqSetMaskOffset ( long image , long offset ) {}
√ fix_prediction_after: private static void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) {}

line_index: 544
bug_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
bug_after_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) { android.util.Log . d ( "Ludens" , ( "vjnxlokcnjmdoczmadjy: " + ( vjnxlokcnjmdoczmadjy . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) { android.util.Log . d ( "Ludens" , ( "vjnxlokcnjmdoczmadjy: " + ( vjnxlokcnjmdoczmadjy . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
fix_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
fix_after_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) {}
√ fix_prediction_before: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
√ fix_prediction_after: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) {}

line_index: 546
bug_before_refactoring: public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> Solved Zero Backup issue
bug_after_refactoring: public void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; } <s> public void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; } <s> Solved Zero Backup issue
fix_before_refactoring: private void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
fix_after_refactoring: private void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; }
√ fix_prediction_before: private void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
√ fix_prediction_after: private void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; }

line_index: 552
bug_before_refactoring: protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ; <s> protected native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
fix_after_refactoring: private native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ;
√ fix_prediction_before: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
√ fix_prediction_after: private native void nativeBetween ( long yqtnbehmokytibzoeeqs , long [] iociylkyianzhypdzxgd , float mexubzjlwurcykgxynoc , float pmlrcalsbsmkmicgffiw ) ;

line_index: 567
bug_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
fix_after_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) {}
√ fix_prediction_before: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
√ fix_prediction_after: @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) {}

line_index: 572
bug_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
bug_after_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxaknmwzfmbhzcgvi ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxaknmwzfmbhzcgvi ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
fix_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxaknmwzfmbhzcgvi ) {}
√ fix_prediction_before: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_after: private void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxaknmwzfmbhzcgvi ) {}

line_index: 578
bug_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> fix bug
bug_after_refactoring: protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + jdfdsmegvfxdidbqxasx ) + " " ) + goymhlwsxzxvrruphpgw ) + " " ) + elnowdvuhktelbebcwen ) ) ; } <s> protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + jdfdsmegvfxdidbqxasx ) + " " ) + goymhlwsxzxvrruphpgw ) + " " ) + elnowdvuhktelbebcwen ) ) ; } <s> fix bug
fix_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) {}
fix_after_refactoring: protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) {}
√ fix_prediction_before: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) {}
√ fix_prediction_after: protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) {}

line_index: 602
bug_before_refactoring: @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> Fix for #305: Ceylond: disable debug log
bug_after_refactoring: @ java.lang.Override public void debug ( java.lang.String mdqidblhvjscctrgkjjs ) { java.lang.System.err . println ( ( "Debug: " + mdqidblhvjscctrgkjjs ) ) ; } <s> @ java.lang.Override public void debug ( java.lang.String mdqidblhvjscctrgkjjs ) { java.lang.System.err . println ( ( "Debug: " + mdqidblhvjscctrgkjjs ) ) ; } <s> Fix for #305: Ceylond: disable debug log
fix_before_refactoring: @ java.lang.Override public void debug ( java.lang.String str ) {}
fix_after_refactoring: @ java.lang.Override public void debug ( java.lang.String mdqidblhvjscctrgkjjs ) {}
√ fix_prediction_before: @ java.lang.Override public void debug ( java.lang.String str ) {}
√ fix_prediction_after: @ java.lang.Override public void debug ( java.lang.String mdqidblhvjscctrgkjjs ) {}

line_index: 603
bug_before_refactoring: protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
fix_after_refactoring: public void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_before: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_after: public void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; }

line_index: 605
bug_before_refactoring: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
bug_after_refactoring: public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) {}

line_index: 621
bug_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> fix some bugs.
bug_after_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; } <s> public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; } <s> fix some bugs.
fix_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
fix_after_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { this . roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; }
√ fix_prediction_before: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
√ fix_prediction_after: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { this . roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; }

line_index: 625
bug_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , vwtklvtspqevajaqosqj.trailing ) ; } <s> private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , vwtklvtspqevajaqosqj.trailing ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) {}
√ fix_prediction_before: private void wallops ( com.adam4.irc.ParsedMessage parsed ) {}
√ fix_prediction_after: private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) {}

line_index: 629
bug_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
bug_after_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
fix_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
fix_after_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) {}
√ fix_prediction_before: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
√ fix_prediction_after: @ java.lang.Override public void onPanelExpanded ( android.view.View orprpwstbnkfhzwnwdzu ) {}

line_index: 632
bug_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
bug_after_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
fix_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
√ fix_prediction_after: @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }

line_index: 655
bug_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
bug_after_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
fix_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
fix_after_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) {}
√ fix_prediction_before: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_after: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar jebwyzolgumpwodpdkwg ) {}

line_index: 660
bug_before_refactoring: public static void main ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> public static void main ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> fixed bug in diagonal mask generation
bug_after_refactoring: public static void main ( java.lang.String [] eesnxhxgickjptabjnux ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> public static void main ( java.lang.String [] eesnxhxgickjptabjnux ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> fixed bug in diagonal mask generation
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] eesnxhxgickjptabjnux ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] eesnxhxgickjptabjnux ) {}

line_index: 662
bug_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { if ( gasselrwtqgommbgzpwc == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { if ( gasselrwtqgommbgzpwc == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
fix_after_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { mPlayer . start () ; }
√ fix_prediction_before: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
√ fix_prediction_after: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { mPlayer . start () ; }

line_index: 668
bug_before_refactoring: private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
bug_after_refactoring: private static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; } <s> private static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
fix_before_refactoring: public static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
fix_after_refactoring: public static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; }
√ fix_prediction_before: public static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
√ fix_prediction_after: public static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; }

line_index: 671
bug_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> fix sshutil bug
bug_after_refactoring: public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return false ; } <s> public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return false ; } <s> fix sshutil bug
fix_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return true ; }
fix_after_refactoring: public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return true ; }
√ fix_prediction_before: public boolean promptYesNo ( java.lang.String str ) { return true ; }
√ fix_prediction_after: public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return true ; }

line_index: 676
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
bug_after_refactoring: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_after: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }

line_index: 682
bug_before_refactoring: public static void main ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> public static void main ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> fixed error in DBManager
bug_after_refactoring: public static void main ( java.lang.String [] kilczozsewzaunbbjqml ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> public static void main ( java.lang.String [] kilczozsewzaunbbjqml ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> fixed error in DBManager
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] kilczozsewzaunbbjqml ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] kilczozsewzaunbbjqml ) {}

line_index: 685
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
√ fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; }

line_index: 705
bug_before_refactoring: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
bug_after_refactoring: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice vctuhfrbbuqbovrjtmps ) { mStartRecordingAudio = false ; return true ; } <s> public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice vctuhfrbbuqbovrjtmps ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
fix_before_refactoring: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
fix_after_refactoring: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
√ fix_prediction_before: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
√ fix_prediction_after: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }

line_index: 710
bug_before_refactoring: public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; } <s> public void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
fix_after_refactoring: private void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; }
√ fix_prediction_before: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
√ fix_prediction_after: private void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; }

line_index: 711
bug_before_refactoring: private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) ; <s> private static native long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
fix_after_refactoring: private static long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) { return 0 ; }
√ fix_prediction_before: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
√ fix_prediction_after: private static long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) { return 0 ; }

line_index: 724
bug_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> fix null bug in okhttp request
bug_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { mHeaders = tgeeqpqatjkollqkntrw ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { mHeaders = tgeeqpqatjkollqkntrw ; return this ; } <s> fix null bug in okhttp request
fix_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
fix_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { if ( tgeeqpqatjkollqkntrw != null ) { mHeaders = tgeeqpqatjkollqkntrw ; } return this ; }
√ fix_prediction_before: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
√ fix_prediction_after: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { if ( tgeeqpqatjkollqkntrw != null ) { mHeaders = tgeeqpqatjkollqkntrw ; } return this ; }

line_index: 742
bug_before_refactoring: private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
bug_after_refactoring: private void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
fix_before_refactoring: protected void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
fix_after_refactoring: protected void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } }
√ fix_prediction_before: protected void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
√ fix_prediction_after: protected void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } }

line_index: 747
bug_before_refactoring: public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; } <s> public void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
fix_after_refactoring: private void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; }
√ fix_prediction_before: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
√ fix_prediction_after: private void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; }

line_index: 751
bug_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> fixed interrupt bug
bug_after_refactoring: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; } } <s> public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; } } <s> fixed interrupt bug
fix_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
fix_after_refactoring: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; }
√ fix_prediction_before: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
√ fix_prediction_after: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; }

line_index: 754
bug_before_refactoring: protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ; <s> protected native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
fix_after_refactoring: private native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ;
√ fix_prediction_before: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
√ fix_prediction_after: private native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ;

line_index: 757
bug_before_refactoring: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> Added Circular progress animation Added Transitions Beautified Display Result Switched Spreadsheets and folder to official folder Modified bitmap title minor bug fix
bug_after_refactoring: @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> Added Circular progress animation Added Transitions Beautified Display Result Switched Spreadsheets and folder to official folder Modified bitmap title minor bug fix
fix_before_refactoring: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) {}
fix_after_refactoring: @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) {}
√ fix_prediction_before: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) {}
√ fix_prediction_after: @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) {}

line_index: 766
bug_before_refactoring: private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
bug_after_refactoring: private void launchThread ( ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdicreads.QueuableThread hyrtvjfyepzcefslfdic ) { hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } } <s> private void launchThread ( ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdicreads.QueuableThread hyrtvjfyepzcefslfdic ) { hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
fix_before_refactoring: protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
fix_after_refactoring: protected void launchThread ( ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdicreads.QueuableThread hyrtvjfyepzcefslfdic ) { hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } }
√ fix_prediction_before: protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
√ fix_prediction_after: protected void launchThread ( ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdicreads.QueuableThread hyrtvjfyepzcefslfdic ) { hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } }

line_index: 780
bug_before_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> BugFixed FileToTranslate builder
bug_after_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; } <s> BugFixed FileToTranslate builder
fix_before_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
fix_after_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; }
√ fix_prediction_before: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
√ fix_prediction_after: public com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; }

line_index: 782
bug_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
bug_after_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
fix_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) {}
√ fix_prediction_before: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_after: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent byfwndamqzuobprcylfb ) {}

line_index: 800
bug_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
bug_after_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
fix_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) {}
√ fix_prediction_before: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_after: private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) {}

line_index: 801
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; } <s> protected void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
fix_after_refactoring: public void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
√ fix_prediction_after: public void overrideArgument ( java.lang.String yruvrzbuthtfotuucnxs , long jbyxvdqygyzdhncnuyrq ) { getArguments () . putLong ( yruvrzbuthtfotuucnxs , jbyxvdqygyzdhncnuyrq ) ; }

line_index: 818
bug_before_refactoring: private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) ; <s> private static native void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
fix_after_refactoring: private static void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) {}
√ fix_prediction_before: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
√ fix_prediction_after: private static void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) {}

line_index: 828
bug_before_refactoring: private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) ; <s> private static native void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
fix_after_refactoring: private static void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) {}
√ fix_prediction_before: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
√ fix_prediction_after: private static void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) {}

line_index: 829
bug_before_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
bug_after_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
fix_before_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
fix_after_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; }
√ fix_prediction_before: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
√ fix_prediction_after: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; }

line_index: 856
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
bug_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( ksxqplrtmqmrfoanidea . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( ksxqplrtmqmrfoanidea . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
fix_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
√ fix_prediction_after: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; }

line_index: 858
bug_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
bug_after_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi , 0 ) ; } <s> @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
fix_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName ) ; }
fix_after_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi ) ; }
√ fix_prediction_before: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName ) ; }
√ fix_prediction_after: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi ) ; }

line_index: 860
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
bug_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
√ fix_prediction_after: @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; }

line_index: 862
bug_before_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> fix bug
bug_after_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { return clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { return clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; } <s> fix bug
fix_before_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
fix_after_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; }
√ fix_prediction_before: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
√ fix_prediction_after: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; }

line_index: 874
bug_before_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
fix_after_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
√ fix_prediction_before: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
√ fix_prediction_after: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }

line_index: 882
bug_before_refactoring: public V remove ( K key ) {} <s> public V remove ( K key ) {} <s> fixing bugs in BSTMap
bug_after_refactoring: public V remove ( K ezrgjzkrxzutuyvcoyyh ) {} <s> public V remove ( K ezrgjzkrxzutuyvcoyyh ) {} <s> fixing bugs in BSTMap
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 884
bug_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
bug_after_refactoring: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( fzkdeiyizmbeezjtevyf ) ; } <s> @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( fzkdeiyizmbeezjtevyf ) ; } <s> New dialog fragments on rotate device fixed + some bugs
fix_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
fix_after_refactoring: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { failureHandler ( fzkdeiyizmbeezjtevyf ) ; }
√ fix_prediction_before: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
√ fix_prediction_after: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { failureHandler ( fzkdeiyizmbeezjtevyf ) ; }

line_index: 885
bug_before_refactoring: public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; } <s> public void warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
fix_after_refactoring: public boolean warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; }
√ fix_prediction_before: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
√ fix_prediction_after: public boolean warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; }

line_index: 889
bug_before_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
bug_after_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
fix_before_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
fix_after_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } }
√ fix_prediction_before: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
√ fix_prediction_after: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } }

line_index: 902
bug_before_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
bug_after_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsmkbjynghqsytiuarji , com.fasterxml.jackson.databind.DeserializationContext zqlrqcxizcrextdamfsm ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsmkbjynghqsytiuarji , com.fasterxml.jackson.databind.DeserializationContext zqlrqcxizcrextdamfsm ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 912
bug_before_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> Fixed AbstractAsyncWorkerTest which stopped the TestContext instead of an individual worker thread  which sometimes caused the test to fail. Removed debug logging.
bug_after_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + wqjztsfmtixbteazieof ) + ")" ) ) ; wqjztsfmtixbteazieofLatch . countDown () ; } <s> @ java.lang.Override protected void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + wqjztsfmtixbteazieof ) + ")" ) ) ; wqjztsfmtixbteazieofLatch . countDown () ; } <s> Fixed AbstractAsyncWorkerTest which stopped the TestContext instead of an individual worker thread  which sometimes caused the test to fail. Removed debug logging.
fix_before_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { responseLatch . countDown () ; }
fix_after_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { wqjztsfmtixbteazieofLatch . countDown () ; }
√ fix_prediction_before: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { responseLatch . countDown () ; }
√ fix_prediction_after: @ java.lang.Override protected void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { wqjztsfmtixbteazieofLatch . countDown () ; }

line_index: 913
bug_before_refactoring: private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
fix_after_refactoring: private static long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) { return 0 ; }
√ fix_prediction_before: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
√ fix_prediction_after: private static long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) { return 0 ; }

line_index: 921
bug_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
bug_after_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { if ( ( oacjdzlfpupajccoafcl . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( oacjdzlfpupajccoafcl . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { if ( ( oacjdzlfpupajccoafcl . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( oacjdzlfpupajccoafcl . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
fix_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { doDrawerMenuAction ( oacjdzlfpupajccoafcl . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
√ fix_prediction_before: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
√ fix_prediction_after: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { doDrawerMenuAction ( oacjdzlfpupajccoafcl . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }

line_index: 936
bug_before_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
bug_after_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; } <s> Fix test error
fix_before_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
fix_after_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; }
√ fix_prediction_before: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
√ fix_prediction_after: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; }

line_index: 939
bug_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
bug_after_refactoring: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
fix_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
fix_after_refactoring: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) {}
√ fix_prediction_before: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
√ fix_prediction_after: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) {}

line_index: 941
bug_before_refactoring: private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) ; <s> private static native void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
fix_after_refactoring: private static void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) {}
√ fix_prediction_before: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
√ fix_prediction_after: private static void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) {}

line_index: 954
bug_before_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
bug_after_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; return this ; } <s> Bug fixing...
fix_before_refactoring: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
fix_after_refactoring: public void setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; }
√ fix_prediction_before: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
√ fix_prediction_after: public void setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; }

line_index: 956
bug_before_refactoring: public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_after: private void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; }

line_index: 957
bug_before_refactoring: public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
bug_after_refactoring: public static void Disconnect ( java.sql.Connection mgipvsyxsvvvatnemqbf ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( mgipvsyxsvvvatnemqbf ) ; } <s> public static void Disconnect ( java.sql.Connection mgipvsyxsvvvatnemqbf ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( mgipvsyxsvvvatnemqbf ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
fix_before_refactoring: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
fix_after_refactoring: public void Disconnect ( java.sql.Connection mgipvsyxsvvvatnemqbf ) { closeQuietly ( mgipvsyxsvvvatnemqbf ) ; }
√ fix_prediction_before: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
√ fix_prediction_after: public void Disconnect ( java.sql.Connection mgipvsyxsvvvatnemqbf ) { closeQuietly ( mgipvsyxsvvvatnemqbf ) ; }

line_index: 958
bug_before_refactoring: private void setEmail ( java.lang.String val ) { email = val ; } <s> private void setEmail ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; } <s> private void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public void setEmail ( java.lang.String val ) { email = val ; }
fix_after_refactoring: public void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; }
√ fix_prediction_before: public void setEmail ( java.lang.String val ) { email = val ; }
√ fix_prediction_after: public void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; }

line_index: 961
bug_before_refactoring: private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> Fixed bug in binary operation application
bug_after_refactoring: private boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; } <s> private boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
fix_after_refactoring: protected boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; }
√ fix_prediction_before: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
√ fix_prediction_after: protected boolean objOp ( java.lang.Object twzgnskiwypfzgbargiu , java.lang.Object rfrpklkbltwfrouqsetl ) { return ! ( twzgnskiwypfzgbargiu . equals ( rfrpklkbltwfrouqsetl ) ) ; }

line_index: 963
bug_before_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fixed some merge errors with c.close.
bug_after_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fixed some merge errors with c.close.
fix_before_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { finish () ; return true ; }
fix_after_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { finish () ; return true ; }
√ fix_prediction_before: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { finish () ; return true ; }
√ fix_prediction_after: public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { finish () ; return true ; }

line_index: 971
bug_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
bug_after_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
fix_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
fix_after_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { deletePerson () ; }
√ fix_prediction_before: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
√ fix_prediction_after: private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { deletePerson () ; }

line_index: 973
bug_before_refactoring: private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) ; <s> private static native void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
fix_after_refactoring: private static void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) {}
√ fix_prediction_before: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
√ fix_prediction_after: private static void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) {}

line_index: 974
bug_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
bug_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int otbesrsybznighnxlkdl ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int otbesrsybznighnxlkdl ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
fix_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
fix_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
√ fix_prediction_before: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
√ fix_prediction_after: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }

line_index: 975
bug_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
bug_after_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
fix_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
fix_after_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; }
√ fix_prediction_before: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
√ fix_prediction_after: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; }

line_index: 982
bug_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
bug_after_refactoring: @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( esurufaiadiaxshzrvqv . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( esurufaiadiaxshzrvqv . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
fix_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) {}
fix_after_refactoring: @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) {}
√ fix_prediction_before: @ java.lang.Override public void newClient ( Airport.Client client ) {}
√ fix_prediction_after: @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) {}

line_index: 983
bug_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
bug_after_refactoring: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) { java.lang.System.err . println ( ( "something something uerwpgezlnfeozjrqgwm from " + ( uerwpgezlnfeozjrqgwm . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) { java.lang.System.err . println ( ( "something something uerwpgezlnfeozjrqgwm from " + ( uerwpgezlnfeozjrqgwm . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
fix_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
fix_after_refactoring: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) {}
√ fix_prediction_before: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
√ fix_prediction_after: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) {}

line_index: 999
bug_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
bug_after_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
fix_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
fix_after_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) {}
√ fix_prediction_before: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
√ fix_prediction_after: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) {}

line_index: 1001
bug_before_refactoring: private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) ; <s> private static native long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
fix_after_refactoring: private static long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) { return 0 ; }
√ fix_prediction_before: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
√ fix_prediction_after: private static long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) { return 0 ; }

line_index: 1002
bug_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
bug_after_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
fix_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}
fix_after_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) {}
√ fix_prediction_before: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}
√ fix_prediction_after: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) {}

line_index: 1005
bug_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
bug_after_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . set ( joeisnuhretzrvllacnj ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . set ( joeisnuhretzrvllacnj ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
fix_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
fix_after_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( joeisnuhretzrvllacnj ) ; }
√ fix_prediction_before: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
√ fix_prediction_after: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( joeisnuhretzrvllacnj ) ; }

line_index: 1007
bug_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
bug_after_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) { this . dataListenings . remove ( mjytjnqkgszwtjdayjtw ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) { this . dataListenings . remove ( mjytjnqkgszwtjdayjtw ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
fix_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
fix_after_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) {}
√ fix_prediction_before: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
√ fix_prediction_after: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) {}

line_index: 1012
bug_before_refactoring: private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) ; <s> private static native long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
fix_after_refactoring: private static long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) { return 0 ; }
√ fix_prediction_before: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
√ fix_prediction_after: private static long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) { return 0 ; }

line_index: 1032
bug_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
bug_after_refactoring: public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
fix_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
fix_after_refactoring: public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; }
√ fix_prediction_before: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
√ fix_prediction_after: public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; }

line_index: 1037
bug_before_refactoring: public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; } <s> public void replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
fix_after_refactoring: public boolean replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { return this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; }
√ fix_prediction_before: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
√ fix_prediction_after: public boolean replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { return this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; }

line_index: 1044
bug_before_refactoring: private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
bug_after_refactoring: private void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; } <s> private void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; } <s> Fixed some thread flexibility issues.
fix_before_refactoring: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
fix_after_refactoring: public void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; }
√ fix_prediction_before: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
√ fix_prediction_after: public void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; }

line_index: 1057
bug_before_refactoring: public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> Try to fix bug
bug_after_refactoring: public static boolean hasAccessToken ( android.content.Context sibiurgrutljoyphclqw ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( sibiurgrutljoyphclqw ) ) != null ; } <s> public static boolean hasAccessToken ( android.content.Context sibiurgrutljoyphclqw ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( sibiurgrutljoyphclqw ) ) != null ; } <s> Try to fix bug
fix_before_refactoring: public static boolean hasAccessToken ( android.content.Context context ) { return true ; }
fix_after_refactoring: public static boolean hasAccessToken ( android.content.Context sibiurgrutljoyphclqw ) { return true ; }
√ fix_prediction_before: public static boolean hasAccessToken ( android.content.Context context ) { return true ; }
√ fix_prediction_after: public static boolean hasAccessToken ( android.content.Context sibiurgrutljoyphclqw ) { return true ; }

line_index: 1063
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
bug_after_refactoring: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) { if ( ( texzewlgbbrtbeaenjzz == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) { if ( ( texzewlgbbrtbeaenjzz == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) {}
√ fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) {}
√ fix_prediction_after: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) {}

line_index: 1066
bug_before_refactoring: public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; } <s> public void replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
fix_after_refactoring: public boolean replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { return this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; }
√ fix_prediction_before: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
√ fix_prediction_after: public boolean replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { return this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; }

line_index: 1070
bug_before_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> Fixed issue #4273
bug_after_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ; <s> Fixed issue #4273
fix_before_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
fix_after_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ;
√ fix_prediction_before: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
√ fix_prediction_after: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ;

line_index: 1086
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
bug_after_refactoring: @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; } } <s> @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
fix_after_refactoring: @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
√ fix_prediction_after: @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; }

line_index: 1101
bug_before_refactoring: @ java.lang.Override public static void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; } <s> @ java.lang.Override public static void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; } <s> temp bug fixes
bug_after_refactoring: @ java.lang.Override public static void remove ( com.managed.zjoiwcnabwicrqmytmbatracker.to.Revenue zjoiwcnabwicrqmytmba ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( zjoiwcnabwicrqmytmba ) ; notifyDataSetChanged () ; super . remove ( zjoiwcnabwicrqmytmba ) ; } <s> @ java.lang.Override public static void remove ( com.managed.zjoiwcnabwicrqmytmbatracker.to.Revenue zjoiwcnabwicrqmytmba ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( zjoiwcnabwicrqmytmba ) ; notifyDataSetChanged () ; super . remove ( zjoiwcnabwicrqmytmba ) ; } <s> temp bug fixes
fix_before_refactoring: @ java.lang.Override public void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; }
fix_after_refactoring: @ java.lang.Override public void remove ( com.managed.zjoiwcnabwicrqmytmbatracker.to.Revenue zjoiwcnabwicrqmytmba ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( zjoiwcnabwicrqmytmba ) ; notifyDataSetChanged () ; super . remove ( zjoiwcnabwicrqmytmba ) ; }
√ fix_prediction_before: @ java.lang.Override public void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; }
√ fix_prediction_after: @ java.lang.Override public void remove ( com.managed.zjoiwcnabwicrqmytmbatracker.to.Revenue zjoiwcnabwicrqmytmba ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( zjoiwcnabwicrqmytmba ) ; notifyDataSetChanged () ; super . remove ( zjoiwcnabwicrqmytmba ) ; }

line_index: 1102
bug_before_refactoring: private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) ; <s> private static native long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
fix_after_refactoring: private static long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) { return 0 ; }
√ fix_prediction_before: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
√ fix_prediction_after: private static long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) { return 0 ; }

line_index: 1113
bug_before_refactoring: @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
bug_after_refactoring: @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
fix_before_refactoring: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
fix_after_refactoring: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
√ fix_prediction_before: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
√ fix_prediction_after: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }

line_index: 1115
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_after: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) {}

line_index: 1129
bug_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> Bugs fixed
bug_after_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) { if ( ( ( mediaPlayer ) != null ) && iihifkbpypnivevpfrpo ) { mediaPlayer . seekTo ( qqwqscshymbqrifdqrpf ) ; } } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) { if ( ( ( mediaPlayer ) != null ) && iihifkbpypnivevpfrpo ) { mediaPlayer . seekTo ( qqwqscshymbqrifdqrpf ) ; } } <s> Bugs fixed
fix_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
fix_after_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) {}
√ fix_prediction_before: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
√ fix_prediction_after: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) {}

line_index: 1138
bug_before_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> Add "to top"  bug fix  etc.
bug_after_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> Add "to top"  bug fix  etc.
fix_before_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) {}
fix_after_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) {}
√ fix_prediction_before: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) {}
√ fix_prediction_after: @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) {}

line_index: 1147
bug_before_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> Fixed bug at UCreativeTab
bug_after_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent wqarztpwotciquyirfgq ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent wqarztpwotciquyirfgq ) {} <s> Fixed bug at UCreativeTab
fix_before_refactoring: { super . postinit ( event ) ; }
fix_after_refactoring: { super . postinit ( wqarztpwotciquyirfgq ) ; }
√ fix_prediction_before: { super . postinit ( event ) ; }
√ fix_prediction_after: { super . postinit ( wqarztpwotciquyirfgq ) ; }

line_index: 1183
bug_before_refactoring: public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
bug_after_refactoring: public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] mjxlisirrtzycbhymezj ) {}

line_index: 1190
bug_before_refactoring: @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
bug_after_refactoring: @ org.spine3.server.aggregate.Apply public void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
fix_before_refactoring: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
fix_after_refactoring: @ org.spine3.server.aggregate.Apply private void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; }
√ fix_prediction_before: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
√ fix_prediction_after: @ org.spine3.server.aggregate.Apply private void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; }

line_index: 1195
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
bug_after_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) { com.facebook.AccessToken accessToken = azhlykanwannafzxpbay . getAccessToken () ; } <s> @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) { com.facebook.AccessToken accessToken = azhlykanwannafzxpbay . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) {}
fix_after_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) {}
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) {}
√ fix_prediction_after: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) {}

line_index: 1205
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
bug_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_after: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > ivzzxirwxzopaurpzcnc ) {}

line_index: 1217
bug_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
bug_after_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
fix_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { return null ; }
fix_after_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { return null ; }
√ fix_prediction_before: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { return null ; }
√ fix_prediction_after: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { return null ; }

line_index: 1221
bug_before_refactoring: @ java.lang.Override public boolean has ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> @ java.lang.Override public boolean has ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> Possible fix for Thread Safety issue.
bug_after_refactoring: @ java.lang.Override public boolean has ( java.lang.String pmmwixfywuuphjicazqn ) { return varFileConfig . contains ( pmmwixfywuuphjicazqn ) ; } <s> @ java.lang.Override public boolean has ( java.lang.String pmmwixfywuuphjicazqn ) { return varFileConfig . contains ( pmmwixfywuuphjicazqn ) ; } <s> Possible fix for Thread Safety issue.
fix_before_refactoring: @ java.lang.Override public boolean has ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }
fix_after_refactoring: @ java.lang.Override public boolean has ( java.lang.String pmmwixfywuuphjicazqn ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( pmmwixfywuuphjicazqn ) ; } }
√ fix_prediction_before: @ java.lang.Override public boolean has ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }
√ fix_prediction_after: @ java.lang.Override public boolean has ( java.lang.String pmmwixfywuuphjicazqn ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( pmmwixfywuuphjicazqn ) ; } }

line_index: 1222
bug_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
bug_after_refactoring: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } <s> @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
fix_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
fix_after_refactoring: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } }
√ fix_prediction_before: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
√ fix_prediction_after: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } }

line_index: 1225
bug_before_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
bug_after_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
fix_before_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
fix_after_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; }
√ fix_prediction_before: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
√ fix_prediction_after: public void destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; }

line_index: 1230
bug_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
bug_after_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
fix_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) {}
√ fix_prediction_before: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_after: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) {}

line_index: 1233
bug_before_refactoring: public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
bug_after_refactoring: public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) {}

line_index: 1244
bug_before_refactoring: private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) ; <s> private static native void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
fix_after_refactoring: private static void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) {}
√ fix_prediction_before: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
√ fix_prediction_after: private static void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) {}

line_index: 1247
bug_before_refactoring: public double getSubTotalPrice ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> public double getSubTotalPrice ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> fixe quelques bugs mineurs
bug_after_refactoring: public double getSubTotalPrice ( int hugftxzxqscmywovkbpq ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( hugftxzxqscmywovkbpq ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> public double getSubTotalPrice ( int hugftxzxqscmywovkbpq ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( hugftxzxqscmywovkbpq ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> fixe quelques bugs mineurs
fix_before_refactoring: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
fix_after_refactoring: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
√ fix_prediction_before: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
√ fix_prediction_after: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }

line_index: 1261
bug_before_refactoring: protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ; <s> protected native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
fix_after_refactoring: private native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ;
√ fix_prediction_before: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
√ fix_prediction_after: private native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ;

line_index: 1271
bug_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> fix bug due to section null for about tab
bug_after_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( emyykcuzmwtiuibixyud . getItemCount () ) ) ) ; this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( emyykcuzmwtiuibixyud . getItemCount () ) ) ) ; this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; } <s> fix bug due to section null for about tab
fix_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
fix_after_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; }
√ fix_prediction_before: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
√ fix_prediction_after: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; }

