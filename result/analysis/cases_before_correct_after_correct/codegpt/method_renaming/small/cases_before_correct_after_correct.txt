line_index: 4
bug_before_refactoring: private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
bug_after_refactoring: private static boolean uxsuqrdgqkowfbjeocrq ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean uxsuqrdgqkowfbjeocrq ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
fix_before_refactoring: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
fix_after_refactoring: private static boolean uxsuqrdgqkowfbjeocrq ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
√ fix_prediction_before: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
√ fix_prediction_after: private static boolean uxsuqrdgqkowfbjeocrq ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }

line_index: 6
bug_before_refactoring: private static native void _imaqGetCharCount ( long set ) ; <s> private static native void _imaqGetCharCount ( long set ) ; <s> Fixing bugs
bug_after_refactoring: private static native void zywhutbswxvyfuvnchzv ( long set ) ; <s> private static native void zywhutbswxvyfuvnchzv ( long set ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetCharCount ( long set ) {}
fix_after_refactoring: private static void zywhutbswxvyfuvnchzv ( long set ) {}
√ fix_prediction_before: private static void _imaqGetCharCount ( long set ) {}
√ fix_prediction_after: private static void zywhutbswxvyfuvnchzv ( long set ) {}

line_index: 8
bug_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
bug_after_refactoring: @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "giepvfzjbyxfpnvviuso:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "giepvfzjbyxfpnvviuso:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
fix_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
fix_after_refactoring: @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
√ fix_prediction_before: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
√ fix_prediction_after: @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}

line_index: 23
bug_before_refactoring: public int indexOf ( java.lang.Object o ) { return 0 ; } <s> public int indexOf ( java.lang.Object o ) { return 0 ; } <s> fix list bug
bug_after_refactoring: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return 0 ; } <s> public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return 0 ; } <s> fix list bug
fix_before_refactoring: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
fix_after_refactoring: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return list . irphpjfjmppecvexmgxd ( o ) ; }
√ fix_prediction_before: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
√ fix_prediction_after: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return list . irphpjfjmppecvexmgxd ( o ) ; }

line_index: 25
bug_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
bug_after_refactoring: public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; } <s> public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
fix_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
fix_after_refactoring: public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { this . preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; }
√ fix_prediction_before: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
√ fix_prediction_after: public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { this . preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; }

line_index: 34
bug_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
bug_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
fix_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
fix_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
√ fix_prediction_before: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
√ fix_prediction_after: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }

line_index: 42
bug_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> fix decode bug
bug_after_refactoring: public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> fix decode bug
fix_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
fix_after_refactoring: public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
√ fix_prediction_before: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
√ fix_prediction_after: public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }

line_index: 48
bug_before_refactoring: @ java.lang.Override public void run () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> @ java.lang.Override public void run () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> code cleaned + showing inactive beacons problem is fixed
bug_after_refactoring: @ java.lang.Override public void fntdtgxvhgozayzlktkr () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> @ java.lang.Override public void fntdtgxvhgozayzlktkr () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> code cleaned + showing inactive beacons problem is fixed
fix_before_refactoring: @ java.lang.Override public void run () { mLEScanner . stopScan ( mScanCallback ) ; }
fix_after_refactoring: @ java.lang.Override public void fntdtgxvhgozayzlktkr () { mLEScanner . stopScan ( mScanCallback ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { mLEScanner . stopScan ( mScanCallback ) ; }
√ fix_prediction_after: @ java.lang.Override public void fntdtgxvhgozayzlktkr () { mLEScanner . stopScan ( mScanCallback ) ; }

line_index: 66
bug_before_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> fix bug
bug_after_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> fix bug
fix_before_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
fix_after_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
√ fix_prediction_before: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
√ fix_prediction_after: protected final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }

line_index: 70
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
bug_after_refactoring: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
fix_after_refactoring: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
√ fix_prediction_after: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }

line_index: 77
bug_before_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends MT > clazz ) ; <s> fixed javac compilation problem
bug_after_refactoring: public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends MT > clazz ) ; <s> public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends MT > clazz ) ; <s> fixed javac compilation problem
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
√ fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > getAsync ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;
√ fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public < MT extends org.epics.ca.data.Metadata < T > > java.util.concurrent.CompletableFuture < MT > egmrlsolxxwippkcrpod ( java.lang.Class < ? extends org.epics.ca.data.Metadata > clazz ) ;

line_index: 80
bug_before_refactoring: private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
fix_after_refactoring: protected boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
√ fix_prediction_before: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
√ fix_prediction_after: protected boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }

line_index: 85
bug_before_refactoring: protected boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> protected boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean scysdwqdwcbaeaxnazgo ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> protected boolean scysdwqdwcbaeaxnazgo ( java.lang.String name ) { return reserved . containsKey ( name ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; }
fix_after_refactoring: private boolean scysdwqdwcbaeaxnazgo ( java.lang.String name ) { return reserved . containsKey ( name ) ; }
√ fix_prediction_before: private boolean isReserved ( java.lang.String name ) { return reserved . containsKey ( name ) ; }
√ fix_prediction_after: private boolean scysdwqdwcbaeaxnazgo ( java.lang.String name ) { return reserved . containsKey ( name ) ; }

line_index: 117
bug_before_refactoring: private static native void _imaqGetImageType ( long image , long type ) ; <s> private static native void _imaqGetImageType ( long image , long type ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hptuiyfhadqagvywwsjy ( long image , long type ) ; <s> private static native void hptuiyfhadqagvywwsjy ( long image , long type ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetImageType ( long image , long type ) {}
fix_after_refactoring: private static void hptuiyfhadqagvywwsjy ( long image , long type ) {}
√ fix_prediction_before: private static void _imaqGetImageType ( long image , long type ) {}
√ fix_prediction_after: private static void hptuiyfhadqagvywwsjy ( long image , long type ) {}

line_index: 118
bug_before_refactoring: public java.lang.String getAlias () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> public java.lang.String getAlias () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> fix use DS error
bug_after_refactoring: public java.lang.String malebshofokvmeuegubk () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> public java.lang.String malebshofokvmeuegubk () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> fix use DS error
fix_before_refactoring: public java.lang.String getAlias () { return alias ; }
fix_after_refactoring: public java.lang.String malebshofokvmeuegubk () { return alias ; }
√ fix_prediction_before: public java.lang.String getAlias () { return alias ; }
√ fix_prediction_after: public java.lang.String malebshofokvmeuegubk () { return alias ; }

line_index: 123
bug_before_refactoring: protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> protected void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
fix_after_refactoring: public void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
√ fix_prediction_before: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
√ fix_prediction_after: public void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }

line_index: 136
bug_before_refactoring: public java.lang.String getAirCode () { android.util.Log . i ( model.SingleFlightResult.TAG , "getAirCode: " ) ; return airCode ; } <s> public java.lang.String getAirCode () { android.util.Log . i ( model.SingleFlightResult.TAG , "getAirCode: " ) ; return airCode ; } <s> added all flight logo  loads airline logo dynamically  solved negative total flight duration time issue  added recycler view animation
bug_after_refactoring: public java.lang.String xtjpfkkvkrwebbfqxcgv () { android.util.Log . i ( model.SingleFlightResult.TAG , "xtjpfkkvkrwebbfqxcgv: " ) ; return airCode ; } <s> public java.lang.String xtjpfkkvkrwebbfqxcgv () { android.util.Log . i ( model.SingleFlightResult.TAG , "xtjpfkkvkrwebbfqxcgv: " ) ; return airCode ; } <s> added all flight logo  loads airline logo dynamically  solved negative total flight duration time issue  added recycler view animation
fix_before_refactoring: public java.lang.String getAirCode () { return airCode ; }
fix_after_refactoring: public java.lang.String xtjpfkkvkrwebbfqxcgv () { return airCode ; }
√ fix_prediction_before: public java.lang.String getAirCode () { return airCode ; }
√ fix_prediction_after: public java.lang.String xtjpfkkvkrwebbfqxcgv () { return airCode ; }

line_index: 142
bug_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
bug_after_refactoring: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
fix_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
fix_after_refactoring: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
√ fix_prediction_before: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
√ fix_prediction_after: public boolean nlnojcqtlgeqmqeuwqje ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }

line_index: 150
bug_before_refactoring: private java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> private java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> Error fixing  Some basic errors with syntax got saved when I committed previously. I'm just fixing them with this update.
bug_after_refactoring: private java.awt.Color [] fziggaqsoujsxkbfsbhh ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> private java.awt.Color [] fziggaqsoujsxkbfsbhh ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> Error fixing  Some basic errors with syntax got saved when I committed previously. I'm just fixing them with this update.
fix_before_refactoring: public java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }
fix_after_refactoring: public java.awt.Color [] fziggaqsoujsxkbfsbhh ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }
√ fix_prediction_before: public java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }
√ fix_prediction_after: public java.awt.Color [] fziggaqsoujsxkbfsbhh ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }

line_index: 155
bug_before_refactoring: public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
bug_after_refactoring: public void ftoyyhqjaoqnmtcciddu ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void ftoyyhqjaoqnmtcciddu ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
fix_before_refactoring: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
fix_after_refactoring: public void ftoyyhqjaoqnmtcciddu ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
√ fix_prediction_before: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
√ fix_prediction_after: public void ftoyyhqjaoqnmtcciddu ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }

line_index: 158
bug_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
bug_after_refactoring: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
fix_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
fix_after_refactoring: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
√ fix_prediction_before: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
√ fix_prediction_after: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }

line_index: 163
bug_before_refactoring: private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
fix_after_refactoring: private static long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
√ fix_prediction_before: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
√ fix_prediction_after: private static long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }

line_index: 178
bug_before_refactoring: private void showSuggestions () { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getCount () ) > 0 ) ) { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; } } <s> private void showSuggestions () { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getCount () ) > 0 ) ) { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; } } <s> Version 1.0.3. Fixed a small animation bug. Cleanup.
bug_after_refactoring: private void tnacteqnobaofhzugdre () { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getCount () ) > 0 ) ) { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; } } <s> private void tnacteqnobaofhzugdre () { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getCount () ) > 0 ) ) { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; } } <s> Version 1.0.3. Fixed a small animation bug. Cleanup.
fix_before_refactoring: private void showSuggestions () { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; }
fix_after_refactoring: private void tnacteqnobaofhzugdre () { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; }
√ fix_prediction_before: private void showSuggestions () { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; }
√ fix_prediction_after: private void tnacteqnobaofhzugdre () { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; }

line_index: 184
bug_before_refactoring: @ java.lang.Override public java.lang.Integer getAdminPort () { java.lang.Integer adminPort = settings . getAdminPort () ; if ( adminPort == null ) { return 8000 ; } return settings . getAdminPort () ; } <s> @ java.lang.Override public java.lang.Integer getAdminPort () { java.lang.Integer adminPort = settings . getAdminPort () ; if ( adminPort == null ) { return 8000 ; } return settings . getAdminPort () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
bug_after_refactoring: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { java.lang.Integer adminPort = settings . ycukcaaosuqpvexrtdef () ; if ( adminPort == null ) { return 8000 ; } return settings . ycukcaaosuqpvexrtdef () ; } <s> @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { java.lang.Integer adminPort = settings . ycukcaaosuqpvexrtdef () ; if ( adminPort == null ) { return 8000 ; } return settings . ycukcaaosuqpvexrtdef () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
fix_before_refactoring: @ java.lang.Override public java.lang.Integer getAdminPort () { return settings . getAdminPort () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { return settings . ycukcaaosuqpvexrtdef () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.Integer getAdminPort () { return settings . getAdminPort () ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { return settings . ycukcaaosuqpvexrtdef () ; }

line_index: 187
bug_before_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
bug_after_refactoring: private void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
fix_before_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
fix_after_refactoring: public void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
√ fix_prediction_before: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
√ fix_prediction_after: public void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }

line_index: 196
bug_before_refactoring: public org.kemricdc.entities.AppProperties getAppProperties () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> public org.kemricdc.entities.AppProperties getAppProperties () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> Merge pull request #2 from geoff-wasilwa/bugfix-#1  bugfix-#1: Added check for existance of app.properties file
bug_after_refactoring: public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> Merge pull request #2 from geoff-wasilwa/bugfix-#1  bugfix-#1: Added check for existance of app.properties file
fix_before_refactoring: public org.kemricdc.entities.AppProperties getAppProperties () { return appProperties ; }
fix_after_refactoring: public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm () { return appProperties ; }
√ fix_prediction_before: public org.kemricdc.entities.AppProperties getAppProperties () { return appProperties ; }
√ fix_prediction_after: public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm () { return appProperties ; }

line_index: 197
bug_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
bug_after_refactoring: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
fix_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
fix_after_refactoring: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
√ fix_prediction_before: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
√ fix_prediction_after: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }

line_index: 200
bug_before_refactoring: public void getTime () { RobotMap.time . get () ; } <s> public void getTime () { RobotMap.time . get () ; } <s> Fixed" all of the errors. This code  as it is right now  is able to run on Lowrider. That does not mean it functions  there are just not a billion null pointers anymore. However there are some flaws in RobotMap concerning the Timer and HallEffect so they need to be fixed.
bug_after_refactoring: public void xipzjzyuwnkswyaewowa () { RobotMap.time . get () ; } <s> public void xipzjzyuwnkswyaewowa () { RobotMap.time . get () ; } <s> Fixed" all of the errors. This code  as it is right now  is able to run on Lowrider. That does not mean it functions  there are just not a billion null pointers anymore. However there are some flaws in RobotMap concerning the Timer and HallEffect so they need to be fixed.
fix_before_refactoring: public void getTime () {}
fix_after_refactoring: public void xipzjzyuwnkswyaewowa () {}
√ fix_prediction_before: public void getTime () {}
√ fix_prediction_after: public void xipzjzyuwnkswyaewowa () {}

line_index: 208
bug_before_refactoring: private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> Fixing bugs
bug_after_refactoring: private static native void uukratgvnwinwjrtbafd ( long image , long data , int size ) ; <s> private static native void uukratgvnwinwjrtbafd ( long image , long data , int size ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqUnflatten ( long image , long data , int size ) {}
fix_after_refactoring: private static void uukratgvnwinwjrtbafd ( long image , long data , int size ) {}
√ fix_prediction_before: private static void _imaqUnflatten ( long image , long data , int size ) {}
√ fix_prediction_after: private static void uukratgvnwinwjrtbafd ( long image , long data , int size ) {}

line_index: 214
bug_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
bug_after_refactoring: public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = ! status ; } <s> public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
fix_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
fix_after_refactoring: public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = status ; }
√ fix_prediction_before: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
√ fix_prediction_after: public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = status ; }

line_index: 215
bug_before_refactoring: private boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> private boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> bugfix showing flags
bug_after_refactoring: private boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> private boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> bugfix showing flags
fix_before_refactoring: public boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
fix_after_refactoring: public boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
√ fix_prediction_before: public boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
√ fix_prediction_after: public boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }

line_index: 220
bug_before_refactoring: protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
fix_after_refactoring: private void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; }
√ fix_prediction_before: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
√ fix_prediction_after: private void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; }

line_index: 221
bug_before_refactoring: public void setX ( int x ) { this . x = x ; } <s> public void setX ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; } <s> public void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void setX ( int x ) { this . x = x ; }
fix_after_refactoring: private void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; }
√ fix_prediction_before: private void setX ( int x ) { this . x = x ; }
√ fix_prediction_after: private void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; }

line_index: 244
bug_before_refactoring: private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> Fixing bugs
bug_after_refactoring: private static native void nmfpybfhtflzuiauboal ( long image , int bitDepth ) ; <s> private static native void nmfpybfhtflzuiauboal ( long image , int bitDepth ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
fix_after_refactoring: private static void nmfpybfhtflzuiauboal ( long image , int bitDepth ) {}
√ fix_prediction_before: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
√ fix_prediction_after: private static void nmfpybfhtflzuiauboal ( long image , int bitDepth ) {}

line_index: 246
bug_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
bug_after_refactoring: public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
fix_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
fix_after_refactoring: public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = isExported ; }
√ fix_prediction_before: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
√ fix_prediction_after: public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = isExported ; }

line_index: 256
bug_before_refactoring: public java.util.List < com.wotf.game.classes.Team > getTeams () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> public java.util.List < com.wotf.game.classes.Team > getTeams () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> Bug fixes #1
bug_after_refactoring: public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> Bug fixes #1
fix_before_refactoring: public java.util.List < com.wotf.game.classes.Team > getTeams () { return teams ; }
fix_after_refactoring: public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { return teams ; }
√ fix_prediction_before: public java.util.List < com.wotf.game.classes.Team > getTeams () { return teams ; }
√ fix_prediction_after: public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { return teams ; }

line_index: 257
bug_before_refactoring: public boolean isSupport () { return ( isSupport ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> public boolean isSupport () { return ( isSupport ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> Fix open/release camera bug. Now  correct release resources on callback onStop().
bug_after_refactoring: public boolean fjaerwaozqzmyrjnngio () { return ( fjaerwaozqzmyrjnngio ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> public boolean fjaerwaozqzmyrjnngio () { return ( fjaerwaozqzmyrjnngio ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> Fix open/release camera bug. Now  correct release resources on callback onStop().
fix_before_refactoring: public boolean isSupport () { return isSupport ; }
fix_after_refactoring: public boolean fjaerwaozqzmyrjnngio () { return fjaerwaozqzmyrjnngio ; }
√ fix_prediction_before: public boolean isSupport () { return isSupport ; }
√ fix_prediction_after: public boolean fjaerwaozqzmyrjnngio () { return fjaerwaozqzmyrjnngio ; }

line_index: 284
bug_before_refactoring: public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
bug_after_refactoring: public static void qrowfwajxrssnykdyykz ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void qrowfwajxrssnykdyykz ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void qrowfwajxrssnykdyykz ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void qrowfwajxrssnykdyykz ( java.lang.String [] args ) {}

line_index: 295
bug_before_refactoring: private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
fix_after_refactoring: protected boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
√ fix_prediction_before: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
√ fix_prediction_after: protected boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }

line_index: 296
bug_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> Fixed merge problems
bug_after_refactoring: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) {} <s> Fixed merge problems
fix_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
fix_after_refactoring: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) ;
√ fix_prediction_before: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
√ fix_prediction_after: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) ;

line_index: 301
bug_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> @ java.lang.Override protected void onResume () { super . onResume () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> profile tracker bug detected & fixed
bug_after_refactoring: @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> profile tracker bug detected & fixed
fix_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; }
fix_after_refactoring: @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; }
√ fix_prediction_before: @ java.lang.Override protected void onResume () { super . onResume () ; }
√ fix_prediction_after: @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; }

line_index: 316
bug_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
bug_after_refactoring: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . formatDouble ( value ) ) ; } <s> public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
fix_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
fix_after_refactoring: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . format ( value ) ) ; }
√ fix_prediction_before: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
√ fix_prediction_after: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . format ( value ) ) ; }

line_index: 319
bug_before_refactoring: @ java.lang.Override public boolean isUpdateInProgress () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> @ java.lang.Override public boolean isUpdateInProgress () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> Clean up txState when scan is closed      Fixes some issues with old row beind read but not implementing some methods     For foreign key check  read from the table rather than snapshot
bug_after_refactoring: @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> Clean up txState when scan is closed      Fixes some issues with old row beind read but not implementing some methods     For foreign key check  read from the table rather than snapshot
fix_before_refactoring: @ java.lang.Override public boolean isUpdateInProgress () { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { return false ; }
√ fix_prediction_before: @ java.lang.Override public boolean isUpdateInProgress () { return false ; }
√ fix_prediction_after: @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { return false ; }

line_index: 322
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
fix_after_refactoring: public void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
√ fix_prediction_after: public void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }

line_index: 329
bug_before_refactoring: public java.lang.Long getRequestId () { return this . requestId ; } <s> public java.lang.Long getRequestId () { return this . requestId ; } <s> commiting fixes for few runtime issues #64
bug_after_refactoring: public java.lang.Long tcvncxrthdvfobtqmkih () { return this . requestId ; } <s> public java.lang.Long tcvncxrthdvfobtqmkih () { return this . requestId ; } <s> commiting fixes for few runtime issues #64
fix_before_refactoring: public java.lang.Long getRequestId () { return this . id ; }
fix_after_refactoring: public java.lang.Long tcvncxrthdvfobtqmkih () { return this . id ; }
√ fix_prediction_before: public java.lang.Long getRequestId () { return this . id ; }
√ fix_prediction_after: public java.lang.Long tcvncxrthdvfobtqmkih () { return this . id ; }

line_index: 332
bug_before_refactoring: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
bug_after_refactoring: public void mddebxswvbifodyhedfl ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> public void mddebxswvbifodyhedfl ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
fix_before_refactoring: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host ) ; }
fix_after_refactoring: public void mddebxswvbifodyhedfl ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host ) ; }
√ fix_prediction_before: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host ) ; }
√ fix_prediction_after: public void mddebxswvbifodyhedfl ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host ) ; }

line_index: 343
bug_before_refactoring: @ java.lang.Override public void onDestroy () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . onDestroy () ; } <s> @ java.lang.Override public void onDestroy () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . onDestroy () ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void jertipurqujluiwxirab () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . jertipurqujluiwxirab () ; } <s> @ java.lang.Override public void jertipurqujluiwxirab () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . jertipurqujluiwxirab () ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override public void jertipurqujluiwxirab () { super . jertipurqujluiwxirab () ; }
√ fix_prediction_before: @ java.lang.Override public void onDestroy () { super . onDestroy () ; }
√ fix_prediction_after: @ java.lang.Override public void jertipurqujluiwxirab () { super . jertipurqujluiwxirab () ; }

line_index: 345
bug_before_refactoring: @ java.lang.Override public void disposeComponent () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> @ java.lang.Override public void disposeComponent () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> #310 Fix an issue with NP in the disposeComponent.  The component life cycle seems to have changed with this upgrade  and the CamelIdeaService and CamelCatelogService is disposed before the CamelProjectComponent
bug_after_refactoring: @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> #310 Fix an issue with NP in the disposeComponent.  The component life cycle seems to have changed with this upgrade  and the CamelIdeaService and CamelCatelogService is disposed before the CamelProjectComponent
fix_before_refactoring: @ java.lang.Override public void disposeComponent () { runModuleOnStartUp = false ; }
fix_after_refactoring: @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () { runModuleOnStartUp = false ; }
√ fix_prediction_before: @ java.lang.Override public void disposeComponent () { runModuleOnStartUp = false ; }
√ fix_prediction_after: @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () { runModuleOnStartUp = false ; }

line_index: 356
bug_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void oynfirtuhknjeymkhbmg ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void oynfirtuhknjeymkhbmg ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) {}
fix_after_refactoring: @ java.lang.Override public void oynfirtuhknjeymkhbmg ( int requestCode , java.util.List < java.lang.String > perms ) {}
√ fix_prediction_before: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) {}
√ fix_prediction_after: @ java.lang.Override public void oynfirtuhknjeymkhbmg ( int requestCode , java.util.List < java.lang.String > perms ) {}

line_index: 371
bug_before_refactoring: @ java.lang.Override public void onTabSelected ( int position ) { SameActionTab ( position ) ; } <s> @ java.lang.Override public void onTabSelected ( int position ) { SameActionTab ( position ) ; } <s> bugs fixed
bug_after_refactoring: @ java.lang.Override public void xaymsiuqnqnervdpiubv ( int position ) { SameActionTab ( position ) ; } <s> @ java.lang.Override public void xaymsiuqnqnervdpiubv ( int position ) { SameActionTab ( position ) ; } <s> bugs fixed
fix_before_refactoring: @ java.lang.Override public void onTabSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void xaymsiuqnqnervdpiubv ( int position ) {}
√ fix_prediction_before: @ java.lang.Override public void onTabSelected ( int position ) {}
√ fix_prediction_after: @ java.lang.Override public void xaymsiuqnqnervdpiubv ( int position ) {}

line_index: 376
bug_before_refactoring: @ java.lang.Override public final boolean repOK () { return java.lang.Double . isFinite ( fitness ) ; } <s> @ java.lang.Override public final boolean repOK () { return java.lang.Double . isFinite ( fitness ) ; } <s> Fix issues with the previous commit that broke some tests.
bug_after_refactoring: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return java.lang.Double . isFinite ( fitness ) ; } <s> @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return java.lang.Double . isFinite ( fitness ) ; } <s> Fix issues with the previous commit that broke some tests.
fix_before_refactoring: @ java.lang.Override public final boolean repOK () { return true ; }
fix_after_refactoring: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return true ; }
√ fix_prediction_before: @ java.lang.Override public final boolean repOK () { return true ; }
√ fix_prediction_after: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return true ; }

line_index: 387
bug_before_refactoring: private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
bug_after_refactoring: private carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
fix_before_refactoring: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
fix_after_refactoring: protected carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
√ fix_prediction_before: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
√ fix_prediction_after: protected carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }

line_index: 389
bug_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
bug_after_refactoring: public static java.lang.Class < ? > usutbndhnnoxvwnyjprc ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . usutbndhnnoxvwnyjprc ( type . getComponentType () ) ; } <s> public static java.lang.Class < ? > usutbndhnnoxvwnyjprc ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . usutbndhnnoxvwnyjprc ( type . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
fix_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { return type ; }
fix_after_refactoring: public static java.lang.Class < ? > usutbndhnnoxvwnyjprc ( final java.lang.Class < ? > type ) { return type ; }
√ fix_prediction_before: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { return type ; }
√ fix_prediction_after: public static java.lang.Class < ? > usutbndhnnoxvwnyjprc ( final java.lang.Class < ? > type ) { return type ; }

line_index: 394
bug_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> removed pane from start of application to solve travis issues
bug_after_refactoring: @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> removed pane from start of application to solve travis issues
fix_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception {}
√ fix_prediction_before: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception {}
√ fix_prediction_after: @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception {}

line_index: 404
bug_before_refactoring: @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> [FLINK-4543] [network] Fix potential deadlock in SpilledSubpartitionViewAsyncIO.  The deadlock could occur in cases where the SpilledSubpartitionViewAsyncIO would simultaneously try to release a buffer and encounter an error in another thread.  The field of congestion was the listener  which is now replaced by an AtomicReference  removing the necessity to lock in the case of reporting the error.
bug_after_refactoring: @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> [FLINK-4543] [network] Fix potential deadlock in SpilledSubpartitionViewAsyncIO.  The deadlock could occur in cases where the SpilledSubpartitionViewAsyncIO would simultaneously try to release a buffer and encounter an error in another thread.  The field of congestion was the listener  which is now replaced by an AtomicReference  removing the necessity to lock in the case of reporting the error.
fix_before_refactoring: @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; }
fix_after_refactoring: @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; }
√ fix_prediction_before: @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; }
√ fix_prediction_after: @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; }

line_index: 415
bug_before_refactoring: protected javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; } <s> protected javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; } <s> Fixed potential bug
bug_after_refactoring: protected javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; } <s> protected javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; } <s> Fixed potential bug
fix_before_refactoring: public javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; }
fix_after_refactoring: public javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; }
√ fix_prediction_before: public javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; }
√ fix_prediction_after: public javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; }

line_index: 422
bug_before_refactoring: public void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> public void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> Add drag and zoom for Pdf Renderer Fix a bug where pdfActivty started even if the pdf was not downloaded (network error) Add gesture-imageview.jar lib @see github.com/jasonpolites/gesture-imageview Cleaned useless imports
bug_after_refactoring: public void whgeevpuuhdvntkkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> public void whgeevpuuhdvntkkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> Add drag and zoom for Pdf Renderer Fix a bug where pdfActivty started even if the pdf was not downloaded (network error) Add gesture-imageview.jar lib @see github.com/jasonpolites/gesture-imageview Cleaned useless imports
fix_before_refactoring: private void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } }
fix_after_refactoring: private void whgeevpuuhdvntkkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } }
√ fix_prediction_before: private void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } }
√ fix_prediction_after: private void whgeevpuuhdvntkkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } }

line_index: 425
bug_before_refactoring: public java.lang.String getRegexp () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> public java.lang.String getRegexp () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> Added test for Palindrome function. Fixed issue with back-referencing variables.
bug_after_refactoring: public java.lang.String yvbsjywdqfevnxjpjddq () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> public java.lang.String yvbsjywdqfevnxjpjddq () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> Added test for Palindrome function. Fixed issue with back-referencing variables.
fix_before_refactoring: public java.lang.String getRegexp () { return regexp ; }
fix_after_refactoring: public java.lang.String yvbsjywdqfevnxjpjddq () { return regexp ; }
√ fix_prediction_before: public java.lang.String getRegexp () { return regexp ; }
√ fix_prediction_after: public java.lang.String yvbsjywdqfevnxjpjddq () { return regexp ; }

line_index: 436
bug_before_refactoring: @ java.lang.Override public void setupProperties () { super . setupProperties () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> @ java.lang.Override public void setupProperties () { super . setupProperties () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> feat(TDI-39295): fix minor issues  added display names for properties
bug_after_refactoring: @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; table = new org.talend.components.snowflake.SnowflakeTableProperties ( "table" ) ; table.connection = getConnectionProperties () ; } <s> feat(TDI-39295): fix minor issues  added display names for properties
fix_before_refactoring: @ java.lang.Override public void setupProperties () { super . setupProperties () ; }
fix_after_refactoring: @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; }
√ fix_prediction_before: @ java.lang.Override public void setupProperties () { super . setupProperties () ; }
√ fix_prediction_after: @ java.lang.Override public void auwtfbjixvkjpvwyseyn () { super . auwtfbjixvkjpvwyseyn () ; }

line_index: 442
bug_before_refactoring: private void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> private void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> Fixed issue with selection
bug_after_refactoring: private void umragrqbiqahqumpnkxw ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> private void umragrqbiqahqumpnkxw ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> Fixed issue with selection
fix_before_refactoring: public void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; }
fix_after_refactoring: public void umragrqbiqahqumpnkxw ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; }
√ fix_prediction_before: public void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; }
√ fix_prediction_after: public void umragrqbiqahqumpnkxw ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; }

line_index: 445
bug_before_refactoring: private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
bug_after_refactoring: private boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> private boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
fix_before_refactoring: public boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
fix_after_refactoring: public boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
√ fix_prediction_before: public boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
√ fix_prediction_after: public boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }

line_index: 455
bug_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
bug_after_refactoring: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
fix_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
fix_after_refactoring: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) {}
√ fix_prediction_before: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
√ fix_prediction_after: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) {}

line_index: 465
bug_before_refactoring: @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> minorBugFix
bug_after_refactoring: @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> minorBugFix
fix_before_refactoring: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
fix_after_refactoring: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
√ fix_prediction_before: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
√ fix_prediction_after: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }

line_index: 475
bug_before_refactoring: public static void main ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> public static void main ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> fixed buidl errors
bug_after_refactoring: public static void lyouoxwmpfashfapfnvc ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> public static void lyouoxwmpfashfapfnvc ( java.lang.String [] args ) { com.mecasa.Main.A a = new com.mecasa.Main.A () ; a . func ( new java.lang.Object [] { "Hello" , "World" } ) ; } <s> fixed buidl errors
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void lyouoxwmpfashfapfnvc ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void lyouoxwmpfashfapfnvc ( java.lang.String [] args ) {}

line_index: 476
bug_before_refactoring: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> kloudless: adding custom headers support  and non-https support pom: fixing compilation errors tests: updating tests
bug_after_refactoring: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> kloudless: adding custom headers support  and non-https support pom: fixing compilation errors tests: updating tests
fix_before_refactoring: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException {}
fix_after_refactoring: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException {}
√ fix_prediction_before: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException {}
√ fix_prediction_after: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException {}

line_index: 478
bug_before_refactoring: public void onDatabaseResynced () { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } <s> public void onDatabaseResynced () { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } <s> Bugfix: 612 and 606  Need null checks.  606 isn't fixed exactly  just an issue that came from rotation on the source audio page and then continuing (a dialog tries to dismiss but is null)
bug_after_refactoring: public void rnrjyoybnagejpiztwwc () { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } <s> public void rnrjyoybnagejpiztwwc () { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } <s> Bugfix: 612 and 606  Need null checks.  606 isn't fixed exactly  just an issue that came from rotation on the source audio page and then continuing (a dialog tries to dismiss but is null)
fix_before_refactoring: public void onDatabaseResynced () { if ( ( mDatabaseProgressDialog ) != null ) { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } }
fix_after_refactoring: public void rnrjyoybnagejpiztwwc () { if ( ( mDatabaseProgressDialog ) != null ) { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } }
√ fix_prediction_before: public void onDatabaseResynced () { if ( ( mDatabaseProgressDialog ) != null ) { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } }
√ fix_prediction_after: public void rnrjyoybnagejpiztwwc () { if ( ( mDatabaseProgressDialog ) != null ) { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } }

line_index: 479
bug_before_refactoring: @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> Merge pull request #112 from xho22/release/0.4  resolve compile error with cdap version 4.1.0
bug_after_refactoring: @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> Merge pull request #112 from xho22/release/0.4  resolve compile error with cdap version 4.1.0
fix_before_refactoring: @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance ) ; }
fix_after_refactoring: @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance ) ; }
√ fix_prediction_before: @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance ) ; }
√ fix_prediction_after: @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance ) ; }

line_index: 482
bug_before_refactoring: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> Fix saved page status bugs  Change-Id: I595a19b722ad7a7764a3fe865bf232e91351f4df
bug_after_refactoring: public void nkosgesarxmsgjwuwlsu ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> public void nkosgesarxmsgjwuwlsu ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> Fix saved page status bugs  Change-Id: I595a19b722ad7a7764a3fe865bf232e91351f4df
fix_before_refactoring: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; }
fix_after_refactoring: public void nkosgesarxmsgjwuwlsu ( boolean complete ) { savedPageCheckComplete = complete ; }
√ fix_prediction_before: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; }
√ fix_prediction_after: public void nkosgesarxmsgjwuwlsu ( boolean complete ) { savedPageCheckComplete = complete ; }

line_index: 488
bug_before_refactoring: protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
bug_after_refactoring: protected void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> protected void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; } <s> fixed Functionbugs and created Diff64 test
fix_before_refactoring: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
fix_after_refactoring: public void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_before: public void setFloat ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }
√ fix_prediction_after: public void nxhdxepxfhzzzkfkasbc ( java.lang.String var ) { this . argument . put ( var , new org.real2space.neumann.approssi.core.function.Variable < java.lang.Float > () ) ; }

line_index: 503
bug_before_refactoring: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> Modified MultiAsyncToSync class to fix a timing issue.
bug_after_refactoring: private void srczxlhgcgvygrsuuqom ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> private void srczxlhgcgvygrsuuqom ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> Modified MultiAsyncToSync class to fix a timing issue.
fix_before_refactoring: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } }
fix_after_refactoring: private void srczxlhgcgvygrsuuqom ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } }
√ fix_prediction_before: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } }
√ fix_prediction_after: private void srczxlhgcgvygrsuuqom ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } }

line_index: 511
bug_before_refactoring: public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
bug_after_refactoring: public static int aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> public static int aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
fix_before_refactoring: public static void ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
fix_after_refactoring: public static void aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
√ fix_prediction_before: public static void ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
√ fix_prediction_after: public static void aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }

line_index: 533
bug_before_refactoring: public synchronized void stopPeriodicEvent () { stopPeriodicEvent ( null ) ; } <s> public synchronized void stopPeriodicEvent () { stopPeriodicEvent ( null ) ; } <s> Fixed issue that wrong thread tried to close riddle.
bug_after_refactoring: public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null ) ; } <s> public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null ) ; } <s> Fixed issue that wrong thread tried to close riddle.
fix_before_refactoring: public synchronized void stopPeriodicEvent () { stopPeriodicEvent ( null , null ) ; }
fix_after_refactoring: public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null , null ) ; }
√ fix_prediction_before: public synchronized void stopPeriodicEvent () { stopPeriodicEvent ( null , null ) ; }
√ fix_prediction_after: public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null , null ) ; }

line_index: 551
bug_before_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> Fixed permission bug with wifimanager
bug_after_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> Fixed permission bug with wifimanager
fix_before_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }
fix_after_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }
√ fix_prediction_before: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }
√ fix_prediction_after: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }

line_index: 558
bug_before_refactoring: public void stopBackgroundMusic () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> public void stopBackgroundMusic () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> Fixed the bug with the sound starting back up when the app closes. It was a problem in BaseService  and actually all background services were restarting.
bug_after_refactoring: public void uuehdctfvqutpqahsvxc () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> public void uuehdctfvqutpqahsvxc () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> Fixed the bug with the sound starting back up when the app closes. It was a problem in BaseService  and actually all background services were restarting.
fix_before_refactoring: public void stopBackgroundMusic () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
fix_after_refactoring: public void uuehdctfvqutpqahsvxc () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
√ fix_prediction_before: public void stopBackgroundMusic () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
√ fix_prediction_after: public void uuehdctfvqutpqahsvxc () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }

line_index: 559
bug_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
bug_after_refactoring: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
fix_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
fix_after_refactoring: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) {}
√ fix_prediction_before: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
√ fix_prediction_after: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) {}

line_index: 584
bug_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> fixed url error.
bug_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name , pwd ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name , pwd ) ; } <s> fixed url error.
fix_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name ) ; }
fix_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name ) ; }
√ fix_prediction_before: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name ) ; }
√ fix_prediction_after: public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name ) ; }

line_index: 591
bug_before_refactoring: @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException { java.lang.System.out . println ( "_closeInput" ) ; } <s> @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException { java.lang.System.out . println ( "_closeInput" ) ; } <s> Fix the bug on nested Object/Array
bug_after_refactoring: @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException { java.lang.System.out . println ( "bbmyggoqenrikjdskssv" ) ; } <s> @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException { java.lang.System.out . println ( "bbmyggoqenrikjdskssv" ) ; } <s> Fix the bug on nested Object/Array
fix_before_refactoring: @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException {}
fix_after_refactoring: @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException {}
√ fix_prediction_before: @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException {}
√ fix_prediction_after: @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException {}

line_index: 596
bug_before_refactoring: protected void initialize () { sensor1 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 8 ) ; sensor2 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 6 ) ; } <s> protected void initialize () { sensor1 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 8 ) ; sensor2 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 6 ) ; } <s> Fixed Reinitialize bug  robot wouldn't work when teleop reenabled
bug_after_refactoring: protected void jugnyoxsfvsrqktwyjxb () { sensor1 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 8 ) ; sensor2 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 6 ) ; } <s> protected void jugnyoxsfvsrqktwyjxb () { sensor1 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 8 ) ; sensor2 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 6 ) ; } <s> Fixed Reinitialize bug  robot wouldn't work when teleop reenabled
fix_before_refactoring: protected void initialize () {}
fix_after_refactoring: protected void jugnyoxsfvsrqktwyjxb () {}
√ fix_prediction_before: protected void initialize () {}
√ fix_prediction_after: protected void jugnyoxsfvsrqktwyjxb () {}

line_index: 597
bug_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
bug_after_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
fix_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
fix_after_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
√ fix_prediction_before: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
√ fix_prediction_after: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}

line_index: 600
bug_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
bug_after_refactoring: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , true ) ; } <s> public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
fix_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , false ) ; }
fix_after_refactoring: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , false ) ; }
√ fix_prediction_before: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , false ) ; }
√ fix_prediction_after: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , false ) ; }

line_index: 612
bug_before_refactoring: public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
bug_after_refactoring: public static java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
fix_before_refactoring: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
fix_after_refactoring: public java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
√ fix_prediction_before: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
√ fix_prediction_after: public java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }

line_index: 620
bug_before_refactoring: public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> fixed dumb bug
bug_after_refactoring: public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { if ( lmgegdzpghfpqhajcajsable >= 0 ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; } } <s> public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { if ( lmgegdzpghfpqhajcajsable >= 0 ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; } } <s> fixed dumb bug
fix_before_refactoring: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
fix_after_refactoring: public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; }
√ fix_prediction_before: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
√ fix_prediction_after: public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; }

line_index: 629
bug_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
bug_after_refactoring: public final void smdlbgkvcaktswogdilh ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> public final void smdlbgkvcaktswogdilh ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
fix_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
fix_after_refactoring: public final void smdlbgkvcaktswogdilh ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
√ fix_prediction_before: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
√ fix_prediction_after: public final void smdlbgkvcaktswogdilh ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }

line_index: 635
bug_before_refactoring: protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
fix_after_refactoring: private boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
√ fix_prediction_before: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
√ fix_prediction_after: private boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }

line_index: 638
bug_before_refactoring: public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
fix_after_refactoring: private void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_before: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_after: private void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }

line_index: 641
bug_before_refactoring: public void run () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> public void run () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> Fixed the bug. Code crashes sometimes in Test5 - throws NullPointerException
bug_after_refactoring: public void idwpgxdfvduedrgmwdip () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> public void idwpgxdfvduedrgmwdip () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> Fixed the bug. Code crashes sometimes in Test5 - throws NullPointerException
fix_before_refactoring: public void run () { output = f . apply ( this , this . listInteger ) ; }
fix_after_refactoring: public void idwpgxdfvduedrgmwdip () { output = f . apply ( this , this . listInteger ) ; }
√ fix_prediction_before: public void run () { output = f . apply ( this , this . listInteger ) ; }
√ fix_prediction_after: public void idwpgxdfvduedrgmwdip () { output = f . apply ( this , this . listInteger ) ; }

line_index: 644
bug_before_refactoring: protected void skipNextIteration () { if ( ( stepSkipIterationCounter ) == 0 ) { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; } } <s> protected void skipNextIteration () { if ( ( stepSkipIterationCounter ) == 0 ) { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; } } <s> Fix of the time stepping issue - Token and interdependent seem to work. More tests are needed
bug_after_refactoring: protected void idijumjvbucahwrurrsy () { if ( ( stepSkipIterationCounter ) == 0 ) { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; } } <s> protected void idijumjvbucahwrurrsy () { if ( ( stepSkipIterationCounter ) == 0 ) { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; } } <s> Fix of the time stepping issue - Token and interdependent seem to work. More tests are needed
fix_before_refactoring: protected void skipNextIteration () { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; }
fix_after_refactoring: protected void idijumjvbucahwrurrsy () { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; }
√ fix_prediction_before: protected void skipNextIteration () { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; }
√ fix_prediction_after: protected void idijumjvbucahwrurrsy () { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; }

line_index: 649
bug_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
bug_after_refactoring: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
fix_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
fix_after_refactoring: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
√ fix_prediction_before: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
√ fix_prediction_after: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }

line_index: 662
bug_before_refactoring: @ java.lang.Override public void onChage () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> @ java.lang.Override public void onChage () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> Fixed issue with code-mirror for headers change event. Now headers are send when they are needed
bug_after_refactoring: @ java.lang.Override public void rmimtkdjfpplioypatwz () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> @ java.lang.Override public void rmimtkdjfpplioypatwz () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> Fixed issue with code-mirror for headers change event. Now headers are send when they are needed
fix_before_refactoring: @ java.lang.Override public void onChage () {}
fix_after_refactoring: @ java.lang.Override public void rmimtkdjfpplioypatwz () {}
√ fix_prediction_before: @ java.lang.Override public void onChage () {}
√ fix_prediction_after: @ java.lang.Override public void rmimtkdjfpplioypatwz () {}

line_index: 666
bug_before_refactoring: private double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> private double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> Fixed large bug in monitor was using an air algorithm for everything
bug_after_refactoring: private double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> private double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> Fixed large bug in monitor was using an air algorithm for everything
fix_before_refactoring: public double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; }
fix_after_refactoring: public double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; }
√ fix_prediction_before: public double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; }
√ fix_prediction_after: public double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; }

line_index: 669
bug_before_refactoring: private T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> private T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> fixed some of deque. lastremove still buggy
bug_after_refactoring: private T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> private T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> fixed some of deque. lastremove still buggy
fix_before_refactoring: public T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }
fix_after_refactoring: public T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }
√ fix_prediction_before: public T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }
√ fix_prediction_after: public T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }

line_index: 681
bug_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> Load of bug fixes.
bug_after_refactoring: @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> Load of bug fixes.
fix_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
fix_after_refactoring: @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
√ fix_prediction_before: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
√ fix_prediction_after: @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }

line_index: 693
bug_before_refactoring: private native void write ( int [] buffer ) ; <s> private native void write ( int [] buffer ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
bug_after_refactoring: private native void rporelqncmbxxgtecdly ( int [] buffer ) ; <s> private native void rporelqncmbxxgtecdly ( int [] buffer ) ; <s> 13/07/2017 - pi485 0.0.1 - bugfix on opening uart
fix_before_refactoring: public native void write ( int [] buffer ) ;
fix_after_refactoring: public native void rporelqncmbxxgtecdly ( int [] buffer ) ;
√ fix_prediction_before: public native void write ( int [] buffer ) ;
√ fix_prediction_after: public native void rporelqncmbxxgtecdly ( int [] buffer ) ;

line_index: 718
bug_before_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { synchronized ( eventList ) { return eventList ; } } <s> public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { synchronized ( eventList ) { return eventList ; } } <s> Revert "Revert "Bug fixes""  This reverts commit 9d13d58e901a7522d91246984c7577a5a8532eba.
bug_after_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { synchronized ( eventList ) { return eventList ; } } <s> public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { synchronized ( eventList ) { return eventList ; } } <s> Revert "Revert "Bug fixes""  This reverts commit 9d13d58e901a7522d91246984c7577a5a8532eba.
fix_before_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { return eventList ; }
fix_after_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { return eventList ; }
√ fix_prediction_before: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { return eventList ; }
√ fix_prediction_after: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { return eventList ; }

line_index: 720
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
bug_after_refactoring: public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
fix_after_refactoring: public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
√ fix_prediction_after: public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { new InputGrid () ; }

line_index: 743
bug_before_refactoring: @ java.lang.Override public java.lang.String getSavePath () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> @ java.lang.Override public java.lang.String getSavePath () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> Bugfix: A folder with the instance name minus two letters gets generated when a Circuit Database template is saved.
bug_after_refactoring: @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> Bugfix: A folder with the instance name minus two letters gets generated when a Circuit Database template is saved.
fix_before_refactoring: @ java.lang.Override public java.lang.String getSavePath () { return net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { return net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getSavePath () { return net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { return net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; }

line_index: 744
bug_before_refactoring: public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> Solved a problem with the cache nodes
bug_after_refactoring: public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> Solved a problem with the cache nodes
fix_before_refactoring: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
fix_after_refactoring: public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { clusterList . add ( cluster ) ; }
√ fix_prediction_before: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
√ fix_prediction_after: public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { clusterList . add ( cluster ) ; }

line_index: 749
bug_before_refactoring: public java.lang.Boolean getNsIsSDFProject () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> public java.lang.Boolean getNsIsSDFProject () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> Fix sdf bug and added group
bug_after_refactoring: public java.lang.Boolean srlswhdzxpsvcihdvqgr () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> public java.lang.Boolean srlswhdzxpsvcihdvqgr () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> Fix sdf bug and added group
fix_before_refactoring: public java.lang.Boolean getNsIsSDFProject () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }
fix_after_refactoring: public java.lang.Boolean srlswhdzxpsvcihdvqgr () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }
√ fix_prediction_before: public java.lang.Boolean getNsIsSDFProject () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }
√ fix_prediction_after: public java.lang.Boolean srlswhdzxpsvcihdvqgr () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }

line_index: 752
bug_before_refactoring: private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
fix_after_refactoring: private static long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
√ fix_prediction_before: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
√ fix_prediction_after: private static long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }

line_index: 760
bug_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void tjcttrblajimmdforbjh ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage tjcttrblajimmdforbjhMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.tjcttrblajimmdforbjh ) ) ) ; sendIRCMessage ( tjcttrblajimmdforbjhMessage ) ; } <s> private void tjcttrblajimmdforbjh ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage tjcttrblajimmdforbjhMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.tjcttrblajimmdforbjh ) ) ) ; sendIRCMessage ( tjcttrblajimmdforbjhMessage ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void tjcttrblajimmdforbjh ( com.adam4.irc.ParsedMessage parsed ) {}
√ fix_prediction_before: private void version ( com.adam4.irc.ParsedMessage parsed ) {}
√ fix_prediction_after: private void tjcttrblajimmdforbjh ( com.adam4.irc.ParsedMessage parsed ) {}

line_index: 786
bug_before_refactoring: public int getEvent () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> public int getEvent () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> [fix connection bug] fix connection bug
bug_after_refactoring: public int ymqlpjmompvgukhorfre () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> public int ymqlpjmompvgukhorfre () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> [fix connection bug] fix connection bug
fix_before_refactoring: public int getEvent () { return mEvent ; }
fix_after_refactoring: public int ymqlpjmompvgukhorfre () { return mEvent ; }
√ fix_prediction_before: public int getEvent () { return mEvent ; }
√ fix_prediction_after: public int ymqlpjmompvgukhorfre () { return mEvent ; }

line_index: 787
bug_before_refactoring: public void Pause () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> public void Pause () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> Fixed crash bugs
bug_after_refactoring: public void qzzklfxetrjallyishyg () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> public void qzzklfxetrjallyishyg () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> Fixed crash bugs
fix_before_refactoring: public void Pause () { isRecording = false ; }
fix_after_refactoring: public void qzzklfxetrjallyishyg () { isRecording = false ; }
√ fix_prediction_before: public void Pause () { isRecording = false ; }
√ fix_prediction_after: public void qzzklfxetrjallyishyg () { isRecording = false ; }

line_index: 791
bug_before_refactoring: @ java.lang.Override protected void end () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> @ java.lang.Override protected void end () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> Version 3.0 of the MecDrive  Fixed a bug where the wheels did not go the way they were suppose to go. Check the comments below the code for the specific instructions.
bug_after_refactoring: @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> Version 3.0 of the MecDrive  Fixed a bug where the wheels did not go the way they were suppose to go. Check the comments below the code for the specific instructions.
fix_before_refactoring: @ java.lang.Override protected void end () {}
fix_after_refactoring: @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () {}
√ fix_prediction_before: @ java.lang.Override protected void end () {}
√ fix_prediction_after: @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () {}

line_index: 793
bug_before_refactoring: @ java.lang.Override public void onStart () { super . onStart () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> @ java.lang.Override public void onStart () { super . onStart () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> add friend bug fix
bug_after_refactoring: @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> add friend bug fix
fix_before_refactoring: @ java.lang.Override public void onStart () { super . onStart () ; }
fix_after_refactoring: @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; }
√ fix_prediction_before: @ java.lang.Override public void onStart () { super . onStart () ; }
√ fix_prediction_after: @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; }

line_index: 799
bug_before_refactoring: public void run () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> public void run () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> fixed lidar code error
bug_after_refactoring: public void dmnvfyikekaqehfixxdu () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> public void dmnvfyikekaqehfixxdu () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> fixed lidar code error
fix_before_refactoring: public void run () { update () ; }
fix_after_refactoring: public void dmnvfyikekaqehfixxdu () { update () ; }
√ fix_prediction_before: public void run () { update () ; }
√ fix_prediction_after: public void dmnvfyikekaqehfixxdu () { update () ; }

line_index: 800
bug_before_refactoring: public java.lang.String toString () { return ( ( namespace ) + "/" ) + ( name ) ; } <s> public java.lang.String toString () { return ( ( namespace ) + "/" ) + ( name ) ; } <s> Fixing errors to get the compiler to run
bug_after_refactoring: public java.lang.String mrvucovrwzqygwgsggpu () { return ( ( namespace ) + "/" ) + ( name ) ; } <s> public java.lang.String mrvucovrwzqygwgsggpu () { return ( ( namespace ) + "/" ) + ( name ) ; } <s> Fixing errors to get the compiler to run
fix_before_refactoring: public java.lang.String toString () { return name ; }
fix_after_refactoring: public java.lang.String mrvucovrwzqygwgsggpu () { return name ; }
√ fix_prediction_before: public java.lang.String toString () { return name ; }
√ fix_prediction_after: public java.lang.String mrvucovrwzqygwgsggpu () { return name ; }

line_index: 806
bug_before_refactoring: public java.util.GregorianCalendar getStartTime () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> public java.util.GregorianCalendar getStartTime () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> remove unnecessary methods and fix bugs
bug_after_refactoring: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> remove unnecessary methods and fix bugs
fix_before_refactoring: public java.util.GregorianCalendar getStartTime () { return startTime ; }
fix_after_refactoring: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return startTime ; }
√ fix_prediction_before: public java.util.GregorianCalendar getStartTime () { return startTime ; }
√ fix_prediction_after: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return startTime ; }

line_index: 810
bug_before_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> fix stockroom search issue #inv-250 Fixed
bug_after_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> fix stockroom search issue #inv-250 Fixed
fix_before_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null , null ) ; }
fix_after_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null , null ) ; }
√ fix_prediction_before: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null , null ) ; }
√ fix_prediction_after: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null , null ) ; }

line_index: 819
bug_before_refactoring: private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
bug_after_refactoring: private void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
fix_before_refactoring: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
fix_after_refactoring: public void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
√ fix_prediction_before: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
√ fix_prediction_after: public void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }

line_index: 823
bug_before_refactoring: public static int [] binarySearch ( int [] list , int checkNum ) {} <s> public static int [] binarySearch ( int [] list , int checkNum ) {} <s> Fix misc. bugs
bug_after_refactoring: public static int [] wotqrebylworupsvvaqw ( int [] list , int checkNum ) {} <s> public static int [] wotqrebylworupsvvaqw ( int [] list , int checkNum ) {} <s> Fix misc. bugs
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 824
bug_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; } <s> @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
fix_after_refactoring: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; }
√ fix_prediction_before: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
√ fix_prediction_after: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; }

line_index: 834
bug_before_refactoring: void onSuccess ( T response , int type ) ; <s> void onSuccess ( T response , int type ) ; <s> fixed bug with markers removed unused code
bug_after_refactoring: void dpbaeneqcfatsrimryrd ( T response , int type ) ; <s> void dpbaeneqcfatsrimryrd ( T response , int type ) ; <s> fixed bug with markers removed unused code
fix_before_refactoring: void onSuccess ( T response ) ;
fix_after_refactoring: void dpbaeneqcfatsrimryrd ( T response ) ;
√ fix_prediction_before: void onSuccess ( T response ) ;
√ fix_prediction_after: void dpbaeneqcfatsrimryrd ( T response ) ;

line_index: 853
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) {}
fix_after_refactoring: @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) {}
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
√ fix_prediction_after: @ java.lang.Override public void xydakuctcscghnoczudm ( android.view.View v ) {}

line_index: 854
bug_before_refactoring: private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> Fixing bugs
bug_after_refactoring: private static native void lgfliqorxqxmhymekhdy ( long image , long offset ) ; <s> private static native void lgfliqorxqxmhymekhdy ( long image , long offset ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetMaskOffset ( long image , long offset ) {}
fix_after_refactoring: private static void lgfliqorxqxmhymekhdy ( long image , long offset ) {}
√ fix_prediction_before: private static void _imaqSetMaskOffset ( long image , long offset ) {}
√ fix_prediction_after: private static void lgfliqorxqxmhymekhdy ( long image , long offset ) {}

line_index: 856
bug_before_refactoring: @ org.junit.After public void tearDown ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.After public void tearDown ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Solved ArrayList decleration bug  some mockito tests on bets
bug_after_refactoring: @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception { try { DB . ExecuteQuery ( "DELETE from Bets where username=\"bettest\";" ) ; DB . ExecuteQuery ( "DELETE from Players where username=\"bettest\";" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Solved ArrayList decleration bug  some mockito tests on bets
fix_before_refactoring: @ org.junit.After public void tearDown ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception {}
√ fix_prediction_before: @ org.junit.After public void tearDown ( ) throws java.lang.Exception {}
√ fix_prediction_after: @ org.junit.After public void hqmslklrqggunsftczfv ( ) throws java.lang.Exception {}

line_index: 864
bug_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> @ java.lang.Override protected void onStop () { super . onStop () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> Fix some bugs to make the code work.
bug_after_refactoring: @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; if ( org.greenrobot.eventbus.EventBus . getDefault () . isRegistered ( this ) ) { org.greenrobot.eventbus.EventBus . getDefault () . unregister ( this ) ; } } <s> Fix some bugs to make the code work.
fix_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; }
fix_after_refactoring: @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; }
√ fix_prediction_before: @ java.lang.Override protected void onStop () { super . onStop () ; }
√ fix_prediction_after: @ java.lang.Override protected void wngmmzpwxiradwnutevg () { super . wngmmzpwxiradwnutevg () ; }

line_index: 868
bug_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
bug_after_refactoring: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
fix_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
fix_after_refactoring: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
√ fix_prediction_before: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
√ fix_prediction_after: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}

line_index: 880
bug_before_refactoring: protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> protected native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> protected native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
fix_after_refactoring: private native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
√ fix_prediction_before: private native void nativeBetween ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;
√ fix_prediction_after: private native void sjgzypgmkogmlxpgwsci ( long nativeQueryPtr , long [] columnIndex , float value1 , float value2 ) ;

line_index: 884
bug_before_refactoring: public void start () { array.view.BookPanel basePanel = new array.view.BookPanel ( null ) ; setupArray () ; } <s> public void start () { array.view.BookPanel basePanel = new array.view.BookPanel ( null ) ; setupArray () ; } <s> fixed panel error  Put the GUI on display and JTable
bug_after_refactoring: public void hdoyfxiivjpauhzivxuj () { array.view.BookPanel basePanel = new array.view.BookPanel ( null ) ; setupArray () ; } <s> public void hdoyfxiivjpauhzivxuj () { array.view.BookPanel basePanel = new array.view.BookPanel ( null ) ; setupArray () ; } <s> fixed panel error  Put the GUI on display and JTable
fix_before_refactoring: public void start () {}
fix_after_refactoring: public void hdoyfxiivjpauhzivxuj () {}
√ fix_prediction_before: public void start () {}
√ fix_prediction_after: public void hdoyfxiivjpauhzivxuj () {}

line_index: 888
bug_before_refactoring: public int getLastNumber () { return ( mLastPuzzleId ) + 1 ; } <s> public int getLastNumber () { return ( mLastPuzzleId ) + 1 ; } <s> moved statistics logic into StatisticsUtils fixed bug with total puzzle count
bug_after_refactoring: public int sydmduifcfoqqsoujfdc () { return ( mLastPuzzleId ) + 1 ; } <s> public int sydmduifcfoqqsoujfdc () { return ( mLastPuzzleId ) + 1 ; } <s> moved statistics logic into StatisticsUtils fixed bug with total puzzle count
fix_before_refactoring: public int getLastNumber () { return mLastPuzzleId ; }
fix_after_refactoring: public int sydmduifcfoqqsoujfdc () { return mLastPuzzleId ; }
√ fix_prediction_before: public int getLastNumber () { return mLastPuzzleId ; }
√ fix_prediction_after: public int sydmduifcfoqqsoujfdc () { return mLastPuzzleId ; }

line_index: 900
bug_before_refactoring: void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> versuch serverbug zu fixen
bug_after_refactoring: void lescaebabwlbszfcqtxy ( java.lang.String id , java.lang.String client ) ; <s> void lescaebabwlbszfcqtxy ( java.lang.String id , java.lang.String client ) ; <s> versuch serverbug zu fixen
fix_before_refactoring: void sendImageToServer ( java.lang.String id ) ;
fix_after_refactoring: void lescaebabwlbszfcqtxy ( java.lang.String id ) ;
√ fix_prediction_before: void sendImageToServer ( java.lang.String id ) ;
√ fix_prediction_after: void lescaebabwlbszfcqtxy ( java.lang.String id ) ;

line_index: 902
bug_before_refactoring: public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
bug_after_refactoring: public void urdbdmulkzenpsleukpc ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void urdbdmulkzenpsleukpc ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
fix_before_refactoring: public void setRadii ( byte radii ) { this . radii = radii ; }
fix_after_refactoring: public void urdbdmulkzenpsleukpc ( byte radii ) { this . radii = radii ; }
√ fix_prediction_before: public void setRadii ( byte radii ) { this . radii = radii ; }
√ fix_prediction_after: public void urdbdmulkzenpsleukpc ( byte radii ) { this . radii = radii ; }

line_index: 903
bug_before_refactoring: public static void shutdown () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> public static void shutdown () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> More efficient DB access and bug fixed
bug_after_refactoring: public static void qwbbvcezgmmqtmqwggth () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> public static void qwbbvcezgmmqtmqwggth () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> More efficient DB access and bug fixed
fix_before_refactoring: public static void shutdown () { model.DBManager.lock . unlock () ; }
fix_after_refactoring: public static void qwbbvcezgmmqtmqwggth () { model.DBManager.lock . unlock () ; }
√ fix_prediction_before: public static void shutdown () { model.DBManager.lock . unlock () ; }
√ fix_prediction_after: public static void qwbbvcezgmmqtmqwggth () { model.DBManager.lock . unlock () ; }

line_index: 905
bug_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
fix_after_refactoring: @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) {}
√ fix_prediction_before: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
√ fix_prediction_after: @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) {}

line_index: 912
bug_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
bug_after_refactoring: private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
fix_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_before: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_after: private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) {}

line_index: 921
bug_before_refactoring: public java.lang.String [] getTools () {} <s> public java.lang.String [] getTools () {} <s> errors "fixed
bug_after_refactoring: public java.lang.String [] aishltpocwtrddejyong () {} <s> public java.lang.String [] aishltpocwtrddejyong () {} <s> errors "fixed
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 951
bug_before_refactoring: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> Fixed bugs in CoffeeMaker.java and Recipe.java.
bug_after_refactoring: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> Fixed bugs in CoffeeMaker.java and Recipe.java.
fix_before_refactoring: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
√ fix_prediction_before: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
√ fix_prediction_after: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }

line_index: 960
bug_before_refactoring: @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> solved a bug that would cause sales not to be increased when Firebase returned a Long value
bug_after_refactoring: @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> solved a bug that would cause sales not to be increased when Firebase returned a Long value
fix_before_refactoring: @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; }
fix_after_refactoring: @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; }
√ fix_prediction_after: @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; }

line_index: 961
bug_before_refactoring: @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> Fix for #305: Ceylond: disable debug log
bug_after_refactoring: @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> Fix for #305: Ceylond: disable debug log
fix_before_refactoring: @ java.lang.Override public void debug ( java.lang.String str ) {}
fix_after_refactoring: @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) {}
√ fix_prediction_before: @ java.lang.Override public void debug ( java.lang.String str ) {}
√ fix_prediction_after: @ java.lang.Override public void bhgqcufbbqnrbckcyoli ( java.lang.String str ) {}

line_index: 965
bug_before_refactoring: protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
fix_after_refactoring: public void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_before: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
√ fix_prediction_after: public void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }

line_index: 970
bug_before_refactoring: public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > pullItemsFromDB () {} <s> public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > pullItemsFromDB () {} <s> Fixed compilation errors
bug_after_refactoring: public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > vuldhqehhyytmumqvucp () {} <s> public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > vuldhqehhyytmumqvucp () {} <s> Fixed compilation errors
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 971
bug_before_refactoring: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
bug_after_refactoring: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) {}

line_index: 979
bug_before_refactoring: public void onButton1Click ( int imageViewID , int position ) ; <s> public void onButton1Click ( int imageViewID , int position ) ; <s> Merge branch 'hotfix_image_id' into develop. Massive refactoring.  Button-click now correctly detects text from the image. Was earlier detecting text from wrong image due to bugs in the way the image-id was being passed to MainActivity.
bug_after_refactoring: public void reiaafwexcbgfdebmsvd ( int imageViewID , int position ) ; <s> public void reiaafwexcbgfdebmsvd ( int imageViewID , int position ) ; <s> Merge branch 'hotfix_image_id' into develop. Massive refactoring.  Button-click now correctly detects text from the image. Was earlier detecting text from wrong image due to bugs in the way the image-id was being passed to MainActivity.
fix_before_refactoring: public void onButton1Click ( int position ) ;
fix_after_refactoring: public void reiaafwexcbgfdebmsvd ( int position ) ;
√ fix_prediction_before: public void onButton1Click ( int position ) ;
√ fix_prediction_after: public void reiaafwexcbgfdebmsvd ( int position ) ;

line_index: 992
bug_before_refactoring: @ java.lang.Override public java.lang.String getFormula () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> @ java.lang.Override public java.lang.String getFormula () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> -added FindBugs to build.gradle -fixed the first few issues reported by FindBugs
bug_after_refactoring: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> -added FindBugs to build.gradle -fixed the first few issues reported by FindBugs
fix_before_refactoring: @ java.lang.Override public java.lang.String getFormula () { return poiCell . getCellFormula () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { return poiCell . getCellFormula () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getFormula () { return poiCell . getCellFormula () ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { return poiCell . getCellFormula () ; }

line_index: 994
bug_before_refactoring: public java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> public java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> Fixed an issue in four passes negotiation case between client and kdc
bug_after_refactoring: public java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> public java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> Fixed an issue in four passes negotiation case between client and kdc
fix_before_refactoring: protected java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
fix_after_refactoring: protected java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
√ fix_prediction_before: protected java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
√ fix_prediction_after: protected java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }

line_index: 995
bug_before_refactoring: public boolean hasGrandParent () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> public boolean hasGrandParent () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> Fix the bug on root parent
bug_after_refactoring: public boolean wftxwuyexssbopwfjomi () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> public boolean wftxwuyexssbopwfjomi () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> Fix the bug on root parent
fix_before_refactoring: public boolean hasGrandParent () { return ( this . hasParent () ) && ( this . getParent () . hasParent () ) ; }
fix_after_refactoring: public boolean wftxwuyexssbopwfjomi () { return ( this . hasParent () ) && ( this . getParent () . hasParent () ) ; }
√ fix_prediction_before: public boolean hasGrandParent () { return ( this . hasParent () ) && ( this . getParent () . hasParent () ) ; }
√ fix_prediction_after: public boolean wftxwuyexssbopwfjomi () { return ( this . hasParent () ) && ( this . getParent () . hasParent () ) ; }

line_index: 1000
bug_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
bug_after_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
fix_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
fix_after_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
√ fix_prediction_before: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
√ fix_prediction_after: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }

line_index: 1001
bug_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> fix some bugs.
bug_after_refactoring: public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> fix some bugs.
fix_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
fix_after_refactoring: public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
√ fix_prediction_before: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
√ fix_prediction_after: public void cgqafyhwefvdwilrnndj ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }

line_index: 1003
bug_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
bug_after_refactoring: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
fix_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
fix_after_refactoring: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
√ fix_prediction_after: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }

line_index: 1006
bug_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void yekaoooqgovemyjfmdyv ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . yekaoooqgovemyjfmdyv ( userName , parsed.trailing ) ; } <s> private void yekaoooqgovemyjfmdyv ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . yekaoooqgovemyjfmdyv ( userName , parsed.trailing ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void yekaoooqgovemyjfmdyv ( com.adam4.irc.ParsedMessage parsed ) {}
√ fix_prediction_before: private void wallops ( com.adam4.irc.ParsedMessage parsed ) {}
√ fix_prediction_after: private void yekaoooqgovemyjfmdyv ( com.adam4.irc.ParsedMessage parsed ) {}

line_index: 1012
bug_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
bug_after_refactoring: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " xovhwyaunqoolyqbmtfe" ) ) ; } <s> @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " xovhwyaunqoolyqbmtfe" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
fix_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
fix_after_refactoring: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) {}
√ fix_prediction_before: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
√ fix_prediction_after: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) {}

line_index: 1033
bug_before_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (info)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (info)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> Fix Perf Problem
bug_after_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (rxxjfwxluxpycizrwbbr)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (rxxjfwxluxpycizrwbbr)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> Fix Perf Problem
fix_before_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
√ fix_prediction_after: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }

line_index: 1052
bug_before_refactoring: protected javafx.beans.property.DoubleProperty greenProperty () { return this . green ; } <s> protected javafx.beans.property.DoubleProperty greenProperty () { return this . green ; } <s> Fixed potential bug
bug_after_refactoring: protected javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; } <s> protected javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; } <s> Fixed potential bug
fix_before_refactoring: public javafx.beans.property.DoubleProperty greenProperty () { return this . green ; }
fix_after_refactoring: public javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; }
√ fix_prediction_before: public javafx.beans.property.DoubleProperty greenProperty () { return this . green ; }
√ fix_prediction_after: public javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; }

line_index: 1058
bug_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
bug_after_refactoring: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) { android.widget.Toast . makeText ( getApplicationContext () , java.lang.String . valueOf ( thickness ) , Toast.LENGTH_LONG ) . show () ; } <s> Fixed a lot of bugs  deleted old activities  got rid of extra messages  commented features  improved clear image.
fix_before_refactoring: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
fix_after_refactoring: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_before: @ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) {}
√ fix_prediction_after: @ java.lang.Override public void jjjzngfwdpbcvconshce ( android.widget.SeekBar seekBar ) {}

line_index: 1066
bug_before_refactoring: public static void main ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> public static void main ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> fixed bug in diagonal mask generation
bug_after_refactoring: public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> fixed bug in diagonal mask generation
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) {}

line_index: 1069
bug_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
fix_after_refactoring: @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
√ fix_prediction_before: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
√ fix_prediction_after: @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { mPlayer . start () ; }

line_index: 1088
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
bug_after_refactoring: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
fix_after_refactoring: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_after: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }

line_index: 1100
bug_before_refactoring: private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
bug_after_refactoring: private double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> private double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
fix_before_refactoring: public double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
fix_after_refactoring: public double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
√ fix_prediction_before: public double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
√ fix_prediction_after: public double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }

line_index: 1102
bug_before_refactoring: public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
bug_after_refactoring: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
fix_before_refactoring: public void setUsername ( java.lang.String username ) { this . username = username ; }
fix_after_refactoring: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { this . username = username ; }
√ fix_prediction_before: public void setUsername ( java.lang.String username ) { this . username = username ; }
√ fix_prediction_after: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { this . username = username ; }

line_index: 1105
bug_before_refactoring: private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
fix_after_refactoring: private static void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
√ fix_prediction_before: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
√ fix_prediction_after: private static void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}

line_index: 1113
bug_before_refactoring: public void chatUpdate ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> public void chatUpdate ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> some bug fixed
bug_after_refactoring: public void skpxasokfyxdpsotfcnu ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> public void skpxasokfyxdpsotfcnu ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> some bug fixed
fix_before_refactoring: public void chatUpdate ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
fix_after_refactoring: public void skpxasokfyxdpsotfcnu ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
√ fix_prediction_before: public void chatUpdate ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
√ fix_prediction_after: public void skpxasokfyxdpsotfcnu ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }

line_index: 1134
bug_before_refactoring: public static boolean isPreview () { return true ; } <s> public static boolean isPreview () { return true ; } <s> bug fix
bug_after_refactoring: public static boolean dlrinimmfxnapcisexjt () { return true ; } <s> public static boolean dlrinimmfxnapcisexjt () { return true ; } <s> bug fix
fix_before_refactoring: public static boolean isPreview () { return false ; }
fix_after_refactoring: public static boolean dlrinimmfxnapcisexjt () { return false ; }
√ fix_prediction_before: public static boolean isPreview () { return false ; }
√ fix_prediction_after: public static boolean dlrinimmfxnapcisexjt () { return false ; }

line_index: 1138
bug_before_refactoring: public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; } <s> public void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
fix_after_refactoring: private void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; }
√ fix_prediction_before: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
√ fix_prediction_after: private void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; }

line_index: 1140
bug_before_refactoring: private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> Fixing bugs
bug_after_refactoring: private static native long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) ; <s> private static native long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
fix_after_refactoring: private static long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) { return 0 ; }
√ fix_prediction_before: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
√ fix_prediction_after: private static long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) { return 0 ; }

line_index: 1166
bug_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> fix null bug in okhttp request
bug_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { mHeaders = shuwjysdutzejbqkgmrw ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { mHeaders = shuwjysdutzejbqkgmrw ; return this ; } <s> fix null bug in okhttp request
fix_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
fix_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { if ( shuwjysdutzejbqkgmrw != null ) { mHeaders = shuwjysdutzejbqkgmrw ; } return this ; }
√ fix_prediction_before: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
√ fix_prediction_after: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { if ( shuwjysdutzejbqkgmrw != null ) { mHeaders = shuwjysdutzejbqkgmrw ; } return this ; }

line_index: 1173
bug_before_refactoring: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void getNonExistingPoints ( ) throws java.lang.Exception { restPointsMockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isNotFound () ) ; } <s> @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void getNonExistingPoints ( ) throws java.lang.Exception { restPointsMockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isNotFound () ) ; } <s> Fixed problem with MVC Mock security - cleaning a SessionContext before each secured test
bug_after_refactoring: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void kchkzouknbuwcdpidgiv ( ) throws java.lang.Exception { restPointsMockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isNotFound () ) ; } <s> @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void kchkzouknbuwcdpidgiv ( ) throws java.lang.Exception { restPointsMockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isNotFound () ) ; } <s> Fixed problem with MVC Mock security - cleaning a SessionContext before each secured test
fix_before_refactoring: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void getNonExistingPoints ( ) throws java.lang.Exception { restPointsMockMvc . perform ( get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( status () . isNotFound () ) ; }
fix_after_refactoring: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void kchkzouknbuwcdpidgiv ( ) throws java.lang.Exception { restPointsMockMvc . perform ( get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( status () . isNotFound () ) ; }
√ fix_prediction_before: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void getNonExistingPoints ( ) throws java.lang.Exception { restPointsMockMvc . perform ( get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( status () . isNotFound () ) ; }
√ fix_prediction_after: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void kchkzouknbuwcdpidgiv ( ) throws java.lang.Exception { restPointsMockMvc . perform ( get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( status () . isNotFound () ) ; }

line_index: 1177
bug_before_refactoring: private void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> private void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> fix bug edit/delete user
bug_after_refactoring: private void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> private void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> fix bug edit/delete user
fix_before_refactoring: public void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; }
fix_after_refactoring: public void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; }
√ fix_prediction_before: public void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; }
√ fix_prediction_after: public void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; }

line_index: 1179
bug_before_refactoring: public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_after: private void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }

line_index: 1187
bug_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> fixed a bug loook at the commit under this one
bug_after_refactoring: public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> fixed a bug loook at the commit under this one
fix_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
fix_after_refactoring: public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
√ fix_prediction_before: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
√ fix_prediction_after: public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}

line_index: 1189
bug_before_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; } <s> @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; } <s> Fix issue with ApiServerRunner and Java SDK version mismatch.
bug_after_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; } <s> @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; } <s> Fix issue with ApiServerRunner and Java SDK version mismatch.
fix_before_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull public java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; }
fix_after_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull public java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; }
√ fix_prediction_before: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull public java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; }
√ fix_prediction_after: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull public java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; }

line_index: 1204
bug_before_refactoring: public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; } <s> public void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
fix_after_refactoring: private void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; }
√ fix_prediction_before: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
√ fix_prediction_after: private void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; }

line_index: 1208
bug_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> fixed interrupt bug
bug_after_refactoring: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; } } <s> public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; } } <s> fixed interrupt bug
fix_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
fix_after_refactoring: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; }
√ fix_prediction_before: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
√ fix_prediction_after: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; }

line_index: 1212
bug_before_refactoring: protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
fix_after_refactoring: private native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ;
√ fix_prediction_before: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
√ fix_prediction_after: private native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ;

line_index: 1217
bug_before_refactoring: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> Added Circular progress animation Added Transitions Beautified Display Result Switched Spreadsheets and folder to official folder Modified bitmap title minor bug fix
bug_after_refactoring: @ java.lang.Override public void jatiktxqpevfqvoypirn ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - jatiktxqpevfqvoypirn" ) ; } <s> @ java.lang.Override public void jatiktxqpevfqvoypirn ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - jatiktxqpevfqvoypirn" ) ; } <s> Added Circular progress animation Added Transitions Beautified Display Result Switched Spreadsheets and folder to official folder Modified bitmap title minor bug fix
fix_before_refactoring: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) {}
fix_after_refactoring: @ java.lang.Override public void jatiktxqpevfqvoypirn ( java.lang.String utteranceId ) {}
√ fix_prediction_before: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) {}
√ fix_prediction_after: @ java.lang.Override public void jatiktxqpevfqvoypirn ( java.lang.String utteranceId ) {}

line_index: 1231
bug_before_refactoring: @ java.lang.Override public void dispose () { this . view . dispose () ; } <s> @ java.lang.Override public void dispose () { this . view . dispose () ; } <s> Fixed compile issue.
bug_after_refactoring: @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () { this . view . ilpbkfrmzrugxsmvqpdt () ; } <s> @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () { this . view . ilpbkfrmzrugxsmvqpdt () ; } <s> Fixed compile issue.
fix_before_refactoring: @ java.lang.Override public void dispose () {}
fix_after_refactoring: @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () {}
√ fix_prediction_before: @ java.lang.Override public void dispose () {}
√ fix_prediction_after: @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () {}

line_index: 1233
bug_before_refactoring: public void showPopupWindow () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> public void showPopupWindow () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> added new method in exerciseTable manager tofix bug in viewExercisesPopup
bug_after_refactoring: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> added new method in exerciseTable manager tofix bug in viewExercisesPopup
fix_before_refactoring: public void showPopupWindow () { displayPopupWindow () ; setListView () ; }
fix_after_refactoring: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; setListView () ; }
√ fix_prediction_before: public void showPopupWindow () { displayPopupWindow () ; setListView () ; }
√ fix_prediction_after: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; setListView () ; }

line_index: 1235
bug_before_refactoring: private void updateWeather () { java.lang.String location = com.example.krishnadamarla.sunshine.helpers.Utility . getPreferredLocation ( getActivity () ) ; android.widget.Toast . makeText ( getActivity () , location , Toast.LENGTH_SHORT ) . show () ; com.example.krishnadamarla.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> private void updateWeather () { java.lang.String location = com.example.krishnadamarla.sunshine.helpers.Utility . getPreferredLocation ( getActivity () ) ; android.widget.Toast . makeText ( getActivity () , location , Toast.LENGTH_SHORT ) . show () ; com.example.krishnadamarla.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> fixing exception - error unparceling bundle
bug_after_refactoring: private void ldetfkknzyhytiyegoia () { java.lang.String location = com.example.krishnadamarla.sunshine.helpers.Utility . getPreferredLocation ( getActivity () ) ; android.widget.Toast . makeText ( getActivity () , location , Toast.LENGTH_SHORT ) . show () ; com.example.krishnadamarla.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> private void ldetfkknzyhytiyegoia () { java.lang.String location = com.example.krishnadamarla.sunshine.helpers.Utility . getPreferredLocation ( getActivity () ) ; android.widget.Toast . makeText ( getActivity () , location , Toast.LENGTH_SHORT ) . show () ; com.example.krishnadamarla.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> fixing exception - error unparceling bundle
fix_before_refactoring: private void updateWeather () {}
fix_after_refactoring: private void ldetfkknzyhytiyegoia () {}
√ fix_prediction_before: private void updateWeather () {}
√ fix_prediction_after: private void ldetfkknzyhytiyegoia () {}

line_index: 1240
bug_before_refactoring: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> - Fix bug disconnect  đăng nhập với tài khoản facebook  xử lý cộng trừ tiền
bug_after_refactoring: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult jbayovzwgogrdhsnkurh ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult jbayovzwgogrdhsnkurh ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> - Fix bug disconnect  đăng nhập với tài khoản facebook  xử lý cộng trừ tiền
fix_before_refactoring: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; }
fix_after_refactoring: @ java.lang.Override public void jbayovzwgogrdhsnkurh ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; }
√ fix_prediction_before: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; }
√ fix_prediction_after: @ java.lang.Override public void jbayovzwgogrdhsnkurh ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; }

line_index: 1241
bug_before_refactoring: protected com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; } <s> protected com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; } <s> Fixed small bug when game type is not displayed on the selection screen just after exiting a game
bug_after_refactoring: protected com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; } <s> protected com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; } <s> Fixed small bug when game type is not displayed on the selection screen just after exiting a game
fix_before_refactoring: public com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; }
fix_after_refactoring: public com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; }
√ fix_prediction_before: public com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; }
√ fix_prediction_after: public com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; }

line_index: 1253
bug_before_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> BugFixed FileToTranslate builder
bug_after_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; } <s> BugFixed FileToTranslate builder
fix_before_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
fix_after_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; }
√ fix_prediction_before: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
√ fix_prediction_after: public com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; }

line_index: 1259
bug_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
bug_after_refactoring: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) { javax.swing.ImageIcon i = new javax.swing.ImageIcon ( "Board Pictures/Canada/Bra Image.jpg" ) ; makeCard ( java.awt.Color.yellow , i , 0 ) ; } <s> Game Maintanace last update had bugs this fixed it Signed-off-by:KingKP07 <karmit1998@yahoo.com>
fix_before_refactoring: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_before: private void lblHoverB1MouseEntered ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_after: private void ycotlhhqhakknjxbaqcr ( java.awt.event.MouseEvent evt ) {}

line_index: 1291
bug_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
bug_after_refactoring: private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
fix_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_before: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_after: private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) {}

line_index: 1292
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
fix_after_refactoring: public void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
√ fix_prediction_after: public void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }

line_index: 1296
bug_before_refactoring: public void testDbFileExists ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> public void testDbFileExists ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> fixed DictionaryDB EofSensorInputStream bug
bug_after_refactoring: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> fixed DictionaryDB EofSensorInputStream bug
fix_before_refactoring: public void testDbFileExists ( ) throws java.lang.Exception {}
fix_after_refactoring: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception {}
√ fix_prediction_before: public void testDbFileExists ( ) throws java.lang.Exception {}
√ fix_prediction_after: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception {}

line_index: 1301
bug_before_refactoring: @ java.lang.Override public void close () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } <s> @ java.lang.Override public void close () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } <s> Fix a bug - calling disconnect() on null object
bug_after_refactoring: @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; } <s> @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; } <s> Fix a bug - calling disconnect() on null object
fix_before_refactoring: @ java.lang.Override public void close () { if ( ( connection ) != null ) { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } }
fix_after_refactoring: @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { if ( ( connection ) != null ) { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; } }
√ fix_prediction_before: @ java.lang.Override public void close () { if ( ( connection ) != null ) { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } }
√ fix_prediction_after: @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { if ( ( connection ) != null ) { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; } }

line_index: 1315
bug_before_refactoring: private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
bug_after_refactoring: private static native void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) ; <s> private static native void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
fix_after_refactoring: private static void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) {}
√ fix_prediction_before: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
√ fix_prediction_after: private static void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) {}

line_index: 1334
bug_before_refactoring: private void clickOnce () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> private void clickOnce () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> fix zoom in issue
bug_after_refactoring: private void ottaiqqyljwcffedzvha () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> private void ottaiqqyljwcffedzvha () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> fix zoom in issue
fix_before_refactoring: private void clickOnce () { aRobot . click () ; }
fix_after_refactoring: private void ottaiqqyljwcffedzvha () { aRobot . click () ; }
√ fix_prediction_before: private void clickOnce () { aRobot . click () ; }
√ fix_prediction_after: private void ottaiqqyljwcffedzvha () { aRobot . click () ; }

line_index: 1339
bug_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
bug_after_refactoring: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
fix_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
fix_after_refactoring: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
√ fix_prediction_before: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
√ fix_prediction_after: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }

line_index: 1357
bug_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
bug_after_refactoring: long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
fix_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
fix_after_refactoring: long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
√ fix_prediction_before: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
√ fix_prediction_after: long fagpssfttarnqykyhtnd ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;

line_index: 1362
bug_before_refactoring: private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
bug_after_refactoring: private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
fix_before_refactoring: private void setHeight ( final int height ) { this . height = height ; }
fix_after_refactoring: private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height ; }
√ fix_prediction_before: private void setHeight ( final int height ) { this . height = height ; }
√ fix_prediction_after: private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height ; }

line_index: 1368
bug_before_refactoring: @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> fix auto focus issue
bug_after_refactoring: @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> fix auto focus issue
fix_before_refactoring: @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , false ) ; }
fix_after_refactoring: @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , false ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , false ) ; }
√ fix_prediction_after: @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , false ) ; }

line_index: 1371
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
bug_after_refactoring: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
fix_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
√ fix_prediction_after: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; }

line_index: 1378
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
bug_after_refactoring: @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
√ fix_prediction_after: @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; }

line_index: 1383
bug_before_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> fix bug
bug_after_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; } <s> fix bug
fix_before_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
fix_after_refactoring: public void bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; }
√ fix_prediction_before: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
√ fix_prediction_after: public void bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; }

line_index: 1392
bug_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> @ java.lang.Override protected void onStop () { super . onStop () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> change configuration bug fixed
bug_after_refactoring: @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> change configuration bug fixed
fix_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; }
fix_after_refactoring: @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; }
√ fix_prediction_before: @ java.lang.Override protected void onStop () { super . onStop () ; }
√ fix_prediction_after: @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; }

line_index: 1395
bug_before_refactoring: private java.lang.String unsubcribeLink () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> private java.lang.String unsubcribeLink () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> Merge pull request #441 from slipstream/issue_#440-improve-email  Fix SlipstreamServer#440
bug_after_refactoring: private java.lang.String nibqhehetjblojhsqcqi () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> private java.lang.String nibqhehetjblojhsqcqi () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> Merge pull request #441 from slipstream/issue_#440-improve-email  Fix SlipstreamServer#440
fix_before_refactoring: private java.lang.String unsubcribeLink () { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; }
fix_after_refactoring: private java.lang.String nibqhehetjblojhsqcqi () { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; }
√ fix_prediction_before: private java.lang.String unsubcribeLink () { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; }
√ fix_prediction_after: private java.lang.String nibqhehetjblojhsqcqi () { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; }

line_index: 1405
bug_before_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
fix_after_refactoring: public net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
√ fix_prediction_before: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
√ fix_prediction_after: public net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }

line_index: 1418
bug_before_refactoring: public V remove ( K key ) {} <s> public V remove ( K key ) {} <s> fixing bugs in BSTMap
bug_after_refactoring: public V qrecbofbrghxzdqtefky ( K key ) {} <s> public V qrecbofbrghxzdqtefky ( K key ) {} <s> fixing bugs in BSTMap
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 1421
bug_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
bug_after_refactoring: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
fix_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
fix_after_refactoring: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { failureHandler ( error_code ) ; }
√ fix_prediction_before: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
√ fix_prediction_after: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { failureHandler ( error_code ) ; }

line_index: 1422
bug_before_refactoring: public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> public void fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
fix_after_refactoring: public boolean fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
√ fix_prediction_before: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
√ fix_prediction_after: public boolean fkdkildkszyieujlmnjt ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }

line_index: 1424
bug_before_refactoring: @ java.lang.Override public void onConnectionSuspended ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> @ java.lang.Override public void onConnectionSuspended ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> Fix bug while disconnecting the ActivityRecognition
bug_after_refactoring: @ java.lang.Override public void ksklmrccrqopfhivdbzz ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> @ java.lang.Override public void ksklmrccrqopfhivdbzz ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> Fix bug while disconnecting the ActivityRecognition
fix_before_refactoring: @ java.lang.Override public void onConnectionSuspended ( int i ) {}
fix_after_refactoring: @ java.lang.Override public void ksklmrccrqopfhivdbzz ( int i ) {}
√ fix_prediction_before: @ java.lang.Override public void onConnectionSuspended ( int i ) {}
√ fix_prediction_after: @ java.lang.Override public void ksklmrccrqopfhivdbzz ( int i ) {}

line_index: 1426
bug_before_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; } <s> @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; } <s> Fixed some Codacy error reports
bug_after_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; } <s> @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; } <s> Fixed some Codacy error reports
fix_before_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; }
√ fix_prediction_after: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; }

line_index: 1427
bug_before_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
fix_after_refactoring: public void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
√ fix_prediction_before: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
√ fix_prediction_after: public void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }

line_index: 1437
bug_before_refactoring: private void showSettingsFrame () { settingsFrame . setBounds ( ( ( getX () ) + 10 ) , ( ( getY () ) + 10 ) , 457 , 485 ) ; settingsFrame . setVisible ( true ) ; } <s> private void showSettingsFrame () { settingsFrame . setBounds ( ( ( getX () ) + 10 ) , ( ( getY () ) + 10 ) , 457 , 485 ) ; settingsFrame . setVisible ( true ) ; } <s> Cleaned up GUI appearance  fixed a bug where images wouldn't update properly when giving up.
bug_after_refactoring: private void xutyctepybgeervxujvv () { settingsFrame . setBounds ( ( ( getX () ) + 10 ) , ( ( getY () ) + 10 ) , 457 , 485 ) ; settingsFrame . setVisible ( true ) ; } <s> private void xutyctepybgeervxujvv () { settingsFrame . setBounds ( ( ( getX () ) + 10 ) , ( ( getY () ) + 10 ) , 457 , 485 ) ; settingsFrame . setVisible ( true ) ; } <s> Cleaned up GUI appearance  fixed a bug where images wouldn't update properly when giving up.
fix_before_refactoring: private void showSettingsFrame () { settingsFrame . setVisible ( true ) ; }
fix_after_refactoring: private void xutyctepybgeervxujvv () { settingsFrame . setVisible ( true ) ; }
√ fix_prediction_before: private void showSettingsFrame () { settingsFrame . setVisible ( true ) ; }
√ fix_prediction_after: private void xutyctepybgeervxujvv () { settingsFrame . setVisible ( true ) ; }

line_index: 1440
bug_before_refactoring: public static void listProcducts () { getController () . listAllProducts () ; } <s> public static void listProcducts () { getController () . listAllProducts () ; } <s> bugfix
bug_after_refactoring: public static void snvknohsnwwwippudicr () { getController () . listAllProducts () ; } <s> public static void snvknohsnwwwippudicr () { getController () . listAllProducts () ; } <s> bugfix
fix_before_refactoring: public static void listProcducts () {}
fix_after_refactoring: public static void snvknohsnwwwippudicr () {}
√ fix_prediction_before: public static void listProcducts () {}
√ fix_prediction_after: public static void snvknohsnwwwippudicr () {}

line_index: 1443
bug_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> public void onClick ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> - More bug fixes
bug_after_refactoring: public void esckbhaeudildisiflzt ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> public void esckbhaeudildisiflzt ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> - More bug fixes
fix_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) {}
fix_after_refactoring: public void esckbhaeudildisiflzt ( android.content.DialogInterface dialog , int id ) {}
√ fix_prediction_before: public void onClick ( android.content.DialogInterface dialog , int id ) {}
√ fix_prediction_after: public void esckbhaeudildisiflzt ( android.content.DialogInterface dialog , int id ) {}

line_index: 1450
bug_before_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
bug_after_refactoring: @ java.lang.Override public io.makerplayground.device.Processor oxczldtilynhskryyyme ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor oxczldtilynhskryyyme ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
√ fix_prediction_after: { return null ; }

line_index: 1453
bug_before_refactoring: @ java.lang.Override public void close () { port . close () ; port = null ; } <s> @ java.lang.Override public void close () { port . close () ; port = null ; } <s> Fixed some port handling issues. Using the serial device should now be much more robust.
bug_after_refactoring: @ java.lang.Override public void iroauuvskijmfzebenmv () { port . iroauuvskijmfzebenmv () ; port = null ; } <s> @ java.lang.Override public void iroauuvskijmfzebenmv () { port . iroauuvskijmfzebenmv () ; port = null ; } <s> Fixed some port handling issues. Using the serial device should now be much more robust.
fix_before_refactoring: @ java.lang.Override public void close () { if ( ( port ) != null ) { port . close () ; port = null ; } }
fix_after_refactoring: @ java.lang.Override public void iroauuvskijmfzebenmv () { if ( ( port ) != null ) { port . iroauuvskijmfzebenmv () ; port = null ; } }
√ fix_prediction_before: @ java.lang.Override public void close () { if ( ( port ) != null ) { port . close () ; port = null ; } }
√ fix_prediction_after: @ java.lang.Override public void iroauuvskijmfzebenmv () { if ( ( port ) != null ) { port . iroauuvskijmfzebenmv () ; port = null ; } }

line_index: 1461
bug_before_refactoring: static org.thegalactic.context.constraint.categorical.CategoricalModel create () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> static org.thegalactic.context.constraint.categorical.CategoricalModel create () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> Fixes https://www.codacy.com/app/chdemko_2840/java-lattices/file/2806456264/issues/source?bid=3369455&fileBranchId=3369455
bug_after_refactoring: static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> Fixes https://www.codacy.com/app/chdemko_2840/java-lattices/file/2806456264/issues/source?bid=3369455&fileBranchId=3369455
fix_before_refactoring: public static org.thegalactic.context.constraint.categorical.CategoricalModel create () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; }
fix_after_refactoring: public static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; }
√ fix_prediction_before: public static org.thegalactic.context.constraint.categorical.CategoricalModel create () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; }
√ fix_prediction_after: public static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; }

line_index: 1465
bug_before_refactoring: public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> o [fixed] synchronization issue which can cause a dead lock / crash
bug_after_refactoring: public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> o [fixed] synchronization issue which can cause a dead lock / crash
fix_before_refactoring: public java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { synchronized ( elements ) { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } }
fix_after_refactoring: public java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { synchronized ( elements ) { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } }
√ fix_prediction_before: public java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { synchronized ( elements ) { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } }
√ fix_prediction_after: public java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { synchronized ( elements ) { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } }

line_index: 1472
bug_before_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> Fixed AbstractAsyncWorkerTest which stopped the TestContext instead of an individual worker thread  which sometimes caused the test to fail. Removed debug logging.
bug_after_refactoring: @ java.lang.Override protected void etikqkvywpjsckklqfjr ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " etikqkvywpjsckklqfjr(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> @ java.lang.Override protected void etikqkvywpjsckklqfjr ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " etikqkvywpjsckklqfjr(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> Fixed AbstractAsyncWorkerTest which stopped the TestContext instead of an individual worker thread  which sometimes caused the test to fail. Removed debug logging.
fix_before_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { responseLatch . countDown () ; }
fix_after_refactoring: @ java.lang.Override protected void etikqkvywpjsckklqfjr ( java.lang.String response ) { responseLatch . countDown () ; }
√ fix_prediction_before: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { responseLatch . countDown () ; }
√ fix_prediction_after: @ java.lang.Override protected void etikqkvywpjsckklqfjr ( java.lang.String response ) { responseLatch . countDown () ; }

line_index: 1474
bug_before_refactoring: private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> Fixing bugs
bug_after_refactoring: private static native long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) ; <s> private static native long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
fix_after_refactoring: private static long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) { return 0 ; }
√ fix_prediction_before: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
√ fix_prediction_after: private static long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) { return 0 ; }

line_index: 1493
bug_before_refactoring: private java.lang.Object getData () { return data ; } <s> private java.lang.Object getData () { return data ; } <s> fix error
bug_after_refactoring: private java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; } <s> private java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; } <s> fix error
fix_before_refactoring: public java.lang.Object getData () { return data ; }
fix_after_refactoring: public java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; }
√ fix_prediction_before: public java.lang.Object getData () { return data ; }
√ fix_prediction_after: public java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; }

line_index: 1494
bug_before_refactoring: public int poll () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . poll () ; } <s> public int poll () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . poll () ; } <s> 1 bug resolved and other things
bug_after_refactoring: public int pyqfgwfjqpbuwzfhfpmy () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . pyqfgwfjqpbuwzfhfpmy () ; } <s> public int pyqfgwfjqpbuwzfhfpmy () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . pyqfgwfjqpbuwzfhfpmy () ; } <s> 1 bug resolved and other things
fix_before_refactoring: public int poll () { return this . queue . poll () ; }
fix_after_refactoring: public int pyqfgwfjqpbuwzfhfpmy () { return this . queue . pyqfgwfjqpbuwzfhfpmy () ; }
√ fix_prediction_before: public int poll () { return this . queue . poll () ; }
√ fix_prediction_after: public int pyqfgwfjqpbuwzfhfpmy () { return this . queue . pyqfgwfjqpbuwzfhfpmy () ; }

line_index: 1497
bug_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
bug_after_refactoring: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
fix_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
fix_after_refactoring: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; }
√ fix_prediction_before: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
√ fix_prediction_after: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; }

line_index: 1505
bug_before_refactoring: public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> public void zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
fix_after_refactoring: public boolean zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
√ fix_prediction_before: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
√ fix_prediction_after: public boolean zmrcapltgrxmukebsdlj ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }

line_index: 1508
bug_before_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
bug_after_refactoring: @ com.google.common.eventbus.Subscribe private void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
fix_before_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
fix_after_refactoring: @ com.google.common.eventbus.Subscribe public void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
√ fix_prediction_before: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
√ fix_prediction_after: @ com.google.common.eventbus.Subscribe public void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }

line_index: 1513
bug_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
bug_after_refactoring: public void mhbvngqscptnqsrsairm ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void mhbvngqscptnqsrsairm ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
fix_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
fix_after_refactoring: public void mhbvngqscptnqsrsairm ( java.awt.event.WindowEvent windowEvent ) {}
√ fix_prediction_before: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
√ fix_prediction_after: public void mhbvngqscptnqsrsairm ( java.awt.event.WindowEvent windowEvent ) {}

line_index: 1514
bug_before_refactoring: public boolean refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> public boolean refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> fix sliding meun bug in BusStationPre
bug_after_refactoring: public boolean mwqxalxujawemcyrvvmn ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> public boolean mwqxalxujawemcyrvvmn ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> fix sliding meun bug in BusStationPre
fix_before_refactoring: public boolean refreshList ( android.view.MenuItem item ) { return true ; }
fix_after_refactoring: public boolean mwqxalxujawemcyrvvmn ( android.view.MenuItem item ) { return true ; }
√ fix_prediction_before: public boolean refreshList ( android.view.MenuItem item ) { return true ; }
√ fix_prediction_after: public boolean mwqxalxujawemcyrvvmn ( android.view.MenuItem item ) { return true ; }

line_index: 1515
bug_before_refactoring: private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
bug_after_refactoring: private static native void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
fix_after_refactoring: private static void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
√ fix_prediction_before: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
√ fix_prediction_after: private static void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) {}

line_index: 1517
bug_before_refactoring: private boolean emptyUnitBoard () { unitBoard . removeAll () ; return false ; } <s> private boolean emptyUnitBoard () { unitBoard . removeAll () ; return false ; } <s> Bug fix : button use stopped the reponse from the keys
bug_after_refactoring: private boolean kjbezlzagnszkegqndcz () { unitBoard . removeAll () ; return false ; } <s> private boolean kjbezlzagnszkegqndcz () { unitBoard . removeAll () ; return false ; } <s> Bug fix : button use stopped the reponse from the keys
fix_before_refactoring: public boolean emptyUnitBoard () { unitBoard . removeAll () ; return false ; }
fix_after_refactoring: public boolean kjbezlzagnszkegqndcz () { unitBoard . removeAll () ; return false ; }
√ fix_prediction_before: public boolean emptyUnitBoard () { unitBoard . removeAll () ; return false ; }
√ fix_prediction_after: public boolean kjbezlzagnszkegqndcz () { unitBoard . removeAll () ; return false ; }

line_index: 1520
bug_before_refactoring: @ java.lang.Override public int getTo () { java.lang.System.out . println ( to ) ; return to ; } <s> @ java.lang.Override public int getTo () { java.lang.System.out . println ( to ) ; return to ; } <s> Final bug fix
bug_after_refactoring: @ java.lang.Override public int jxvagzftqopmsggruvkd () { java.lang.System.out . println ( to ) ; return to ; } <s> @ java.lang.Override public int jxvagzftqopmsggruvkd () { java.lang.System.out . println ( to ) ; return to ; } <s> Final bug fix
fix_before_refactoring: @ java.lang.Override public int getTo () { return to ; }
fix_after_refactoring: @ java.lang.Override public int jxvagzftqopmsggruvkd () { return to ; }
√ fix_prediction_before: @ java.lang.Override public int getTo () { return to ; }
√ fix_prediction_after: @ java.lang.Override public int jxvagzftqopmsggruvkd () { return to ; }

line_index: 1526
bug_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> bugfix for filter
bug_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> bugfix for filter
fix_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd ) ; }
√ fix_prediction_before: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd ) ; }
√ fix_prediction_after: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd ) ; }

line_index: 1534
bug_before_refactoring: protected void interrupted () { end () ; } <s> protected void interrupted () { end () ; } <s> fix scheduling issues
bug_after_refactoring: protected void nfgbhvcoaeitsedtvgum () { end () ; } <s> protected void nfgbhvcoaeitsedtvgum () { end () ; } <s> fix scheduling issues
fix_before_refactoring: protected void interrupted () {}
fix_after_refactoring: protected void nfgbhvcoaeitsedtvgum () {}
√ fix_prediction_before: protected void interrupted () {}
√ fix_prediction_after: protected void nfgbhvcoaeitsedtvgum () {}

line_index: 1535
bug_before_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
bug_after_refactoring: public org.techm.scheduler.domain.JobAction upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
fix_before_refactoring: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
fix_after_refactoring: public void upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; }
√ fix_prediction_before: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
√ fix_prediction_after: public void upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; }

line_index: 1537
bug_before_refactoring: public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_after: private void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }

line_index: 1539
bug_before_refactoring: public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
bug_after_refactoring: public static void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> public static void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
fix_before_refactoring: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
fix_after_refactoring: public void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
√ fix_prediction_before: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
√ fix_prediction_after: public void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }

line_index: 1540
bug_before_refactoring: @ java.lang.Override public void onApiFinished () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> @ java.lang.Override public void onApiFinished () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> Merge pull request #50 from malaonline/AN-503  AN-503 fix the buy-course-button’s event error
bug_after_refactoring: @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () { get () . tvBuyCourse . setOnClickListener ( get () ) ; } <s> Merge pull request #50 from malaonline/AN-503  AN-503 fix the buy-course-button’s event error
fix_before_refactoring: @ java.lang.Override public void onApiFinished () {}
fix_after_refactoring: @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () {}
√ fix_prediction_before: @ java.lang.Override public void onApiFinished () {}
√ fix_prediction_after: @ java.lang.Override public void rmnqvajlgbltrlmmkwoc () {}

line_index: 1543
bug_before_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: public synchronized boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
fix_after_refactoring: public boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
√ fix_prediction_before: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
√ fix_prediction_after: public boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }

line_index: 1548
bug_before_refactoring: private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> Fixed bug in binary operation application
bug_after_refactoring: private boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> private boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
fix_after_refactoring: protected boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
√ fix_prediction_before: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
√ fix_prediction_after: protected boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }

line_index: 1549
bug_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
bug_after_refactoring: public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
fix_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
fix_after_refactoring: public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
√ fix_prediction_before: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
√ fix_prediction_after: public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }

line_index: 1551
bug_before_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fixed some merge errors with c.close.
bug_after_refactoring: public boolean ndqqerywbslricwgcjvh ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> public boolean ndqqerywbslricwgcjvh ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fixed some merge errors with c.close.
fix_before_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { finish () ; return true ; }
fix_after_refactoring: public boolean ndqqerywbslricwgcjvh ( android.view.MenuItem item ) { finish () ; return true ; }
√ fix_prediction_before: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { finish () ; return true ; }
√ fix_prediction_after: public boolean ndqqerywbslricwgcjvh ( android.view.MenuItem item ) { finish () ; return true ; }

line_index: 1561
bug_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> Fixing some in-game errors
bug_after_refactoring: public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> Fixing some in-game errors
fix_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
fix_after_refactoring: public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
√ fix_prediction_before: public void cmdReload ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
√ fix_prediction_after: public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }

line_index: 1564
bug_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
bug_after_refactoring: private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
fix_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
fix_after_refactoring: private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
√ fix_prediction_before: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
√ fix_prediction_after: private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) { deletePerson () ; }

line_index: 1569
bug_before_refactoring: private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
fix_after_refactoring: private static void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
√ fix_prediction_before: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
√ fix_prediction_after: private static void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}

line_index: 1570
bug_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
bug_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
fix_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
fix_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
√ fix_prediction_before: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
√ fix_prediction_after: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }

line_index: 1571
bug_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
bug_after_refactoring: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
fix_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
fix_after_refactoring: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
√ fix_prediction_before: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
√ fix_prediction_after: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; }

line_index: 1582
bug_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
bug_after_refactoring: @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
fix_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) {}
fix_after_refactoring: @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) {}
√ fix_prediction_before: @ java.lang.Override public void newClient ( Airport.Client client ) {}
√ fix_prediction_after: @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) {}

line_index: 1584
bug_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
bug_after_refactoring: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
fix_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
fix_after_refactoring: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) {}
√ fix_prediction_before: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
√ fix_prediction_after: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) {}

line_index: 1610
bug_before_refactoring: @ java.lang.Override public int getPoints () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> @ java.lang.Override public int getPoints () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> fix bug with toolbar
bug_after_refactoring: @ java.lang.Override public int kkdmlownvgicxyxegjqm () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> @ java.lang.Override public int kkdmlownvgicxyxegjqm () { android.util.Log . d ( "myLog" , ( "points = " + ( points ) ) ) ; return points ; } <s> fix bug with toolbar
fix_before_refactoring: @ java.lang.Override public int getPoints () { return points ; }
fix_after_refactoring: @ java.lang.Override public int kkdmlownvgicxyxegjqm () { return points ; }
√ fix_prediction_before: @ java.lang.Override public int getPoints () { return points ; }
√ fix_prediction_after: @ java.lang.Override public int kkdmlownvgicxyxegjqm () { return points ; }

line_index: 1614
bug_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
bug_after_refactoring: @ java.lang.Override public void fiuqpielcbqfchrwsfbe ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void fiuqpielcbqfchrwsfbe ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
fix_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
fix_after_refactoring: @ java.lang.Override public void fiuqpielcbqfchrwsfbe ( android.view.SurfaceHolder holder ) {}
√ fix_prediction_before: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
√ fix_prediction_after: @ java.lang.Override public void fiuqpielcbqfchrwsfbe ( android.view.SurfaceHolder holder ) {}

line_index: 1616
bug_before_refactoring: public static void onClosingAndriodorIpaddiv () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> public static void onClosingAndriodorIpaddiv () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> Player header div placed in the middle - Issue resolved for ipad and other devices
bug_after_refactoring: public static void wvigxbcnrwdegwhrtijw () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> public static void wvigxbcnrwdegwhrtijw () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> Player header div placed in the middle - Issue resolved for ipad and other devices
fix_before_refactoring: public static void onClosingAndriodorIpaddiv () {}
fix_after_refactoring: public static void wvigxbcnrwdegwhrtijw () {}
√ fix_prediction_before: public static void onClosingAndriodorIpaddiv () {}
√ fix_prediction_after: public static void wvigxbcnrwdegwhrtijw () {}

line_index: 1621
bug_before_refactoring: private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
bug_after_refactoring: private static native long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
fix_after_refactoring: private static long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
√ fix_prediction_before: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
√ fix_prediction_after: private static long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }

line_index: 1623
bug_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
bug_after_refactoring: @ java.lang.Override public void ghuzexpztmchmltdpdpi ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void niumlxfwvcctohjqopph () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void ghuzexpztmchmltdpdpi ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void niumlxfwvcctohjqopph () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
fix_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}
fix_after_refactoring: @ java.lang.Override public void ghuzexpztmchmltdpdpi ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}
√ fix_prediction_before: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}
√ fix_prediction_after: @ java.lang.Override public void ghuzexpztmchmltdpdpi ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}

line_index: 1625
bug_before_refactoring: protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; } <s> protected void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void answerCorrect ( android.view.View view ) { answerCorrect () ; }
fix_after_refactoring: public void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; }
√ fix_prediction_before: public void answerCorrect ( android.view.View view ) { answerCorrect () ; }
√ fix_prediction_after: public void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; }

line_index: 1627
bug_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
bug_after_refactoring: public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
fix_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
fix_after_refactoring: public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
√ fix_prediction_before: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
√ fix_prediction_after: public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }

line_index: 1629
bug_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
bug_after_refactoring: @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
fix_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
fix_after_refactoring: @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
√ fix_prediction_before: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
√ fix_prediction_after: @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}

line_index: 1635
bug_before_refactoring: private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> private static native long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
fix_after_refactoring: private static long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
√ fix_prediction_before: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
√ fix_prediction_after: private static long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }

line_index: 1652
bug_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
bug_after_refactoring: public void cuecriwnntkhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> public void cuecriwnntkhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
fix_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
fix_after_refactoring: public void cuecriwnntkhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
√ fix_prediction_before: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
√ fix_prediction_after: public void cuecriwnntkhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }

line_index: 1667
bug_before_refactoring: @ java.lang.Override public void onHandle () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> @ java.lang.Override public void onHandle () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> bug fixed
bug_after_refactoring: @ java.lang.Override public void juahkikoyxazywbqowgg () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> @ java.lang.Override public void juahkikoyxazywbqowgg () { getActivity () . startActivity ( new android.content.Intent ( getActivity () , com.d.dmusic.mvp.activity.HandleActivity . class ) ) ; } <s> bug fixed
fix_before_refactoring: @ java.lang.Override public void onHandle () {}
fix_after_refactoring: @ java.lang.Override public void juahkikoyxazywbqowgg () {}
√ fix_prediction_before: @ java.lang.Override public void onHandle () {}
√ fix_prediction_after: @ java.lang.Override public void juahkikoyxazywbqowgg () {}

line_index: 1671
bug_before_refactoring: public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; } <s> public void umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
fix_after_refactoring: public boolean umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { return this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; }
√ fix_prediction_before: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
√ fix_prediction_after: public boolean umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { return this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; }

line_index: 1687
bug_before_refactoring: public Main.Ball getBall () { assert ( ball ) != null ; return ball ; } <s> public Main.Ball getBall () { assert ( ball ) != null ; return ball ; } <s> Fixed 'self-tackling' issues
bug_after_refactoring: public Main.Ball voniliqxzycfnrmiiwig () { assert ( ball ) != null ; return ball ; } <s> public Main.Ball voniliqxzycfnrmiiwig () { assert ( ball ) != null ; return ball ; } <s> Fixed 'self-tackling' issues
fix_before_refactoring: public Main.Ball getBall () { return ball ; }
fix_after_refactoring: public Main.Ball voniliqxzycfnrmiiwig () { return ball ; }
√ fix_prediction_before: public Main.Ball getBall () { return ball ; }
√ fix_prediction_after: public Main.Ball voniliqxzycfnrmiiwig () { return ball ; }

line_index: 1689
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
bug_after_refactoring: @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { showKeyboard ( passcode ) ; }
fix_after_refactoring: @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { showKeyboard ( passcode ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { showKeyboard ( passcode ) ; }
√ fix_prediction_after: @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { showKeyboard ( passcode ) ; }

line_index: 1691
bug_before_refactoring: private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> Turn on debugging. Create node descriptors for AssignmentOperator and PrimarySuffix.
bug_after_refactoring: private boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> private boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> Turn on debugging. Create node descriptors for AssignmentOperator and PrimarySuffix.
fix_before_refactoring: private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; return false ; }
fix_after_refactoring: private boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; return false ; }
√ fix_prediction_before: private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; return false ; }
√ fix_prediction_after: private boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; return false ; }

line_index: 1692
bug_before_refactoring: public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
bug_after_refactoring: public mainPackage.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
fix_before_refactoring: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
fix_after_refactoring: public java.util.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
√ fix_prediction_before: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
√ fix_prediction_after: public java.util.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }

line_index: 1693
bug_before_refactoring: @ java.lang.Override public void noWhatsPopularData () { java.lang.System.out . println () ; } <s> @ java.lang.Override public void noWhatsPopularData () { java.lang.System.out . println () ; } <s> Fixed several bugs in StartActivity
bug_after_refactoring: @ java.lang.Override public void zltagvwjdmipbzznhqqt () { java.lang.System.out . println () ; } <s> @ java.lang.Override public void zltagvwjdmipbzznhqqt () { java.lang.System.out . println () ; } <s> Fixed several bugs in StartActivity
fix_before_refactoring: @ java.lang.Override public void noWhatsPopularData () {}
fix_after_refactoring: @ java.lang.Override public void zltagvwjdmipbzznhqqt () {}
√ fix_prediction_before: @ java.lang.Override public void noWhatsPopularData () {}
√ fix_prediction_after: @ java.lang.Override public void zltagvwjdmipbzznhqqt () {}

line_index: 1698
bug_before_refactoring: @ java.lang.Override public void init () { try { javafx.scene.text.Font . loadFont ( com.jfxbe.MemeMaker . class . getClassLoader () . getResource ( "Oswald-Bold.ttf" ) . openStream () , 80 ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void init () { try { javafx.scene.text.Font . loadFont ( com.jfxbe.MemeMaker . class . getClassLoader () . getResource ( "Oswald-Bold.ttf" ) . openStream () , 80 ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Changed out a font that works when using loadFont(). Fixed a bug in loading an image from the filechooser
bug_after_refactoring: @ java.lang.Override public void mtikwulsqmiwpcyamywe () { try { javafx.scene.text.Font . loadFont ( com.jfxbe.MemeMaker . class . getClassLoader () . getResource ( "Oswald-Bold.ttf" ) . openStream () , 80 ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void mtikwulsqmiwpcyamywe () { try { javafx.scene.text.Font . loadFont ( com.jfxbe.MemeMaker . class . getClassLoader () . getResource ( "Oswald-Bold.ttf" ) . openStream () , 80 ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Changed out a font that works when using loadFont(). Fixed a bug in loading an image from the filechooser
fix_before_refactoring: @ java.lang.Override public void init () {}
fix_after_refactoring: @ java.lang.Override public void mtikwulsqmiwpcyamywe () {}
√ fix_prediction_before: @ java.lang.Override public void init () {}
√ fix_prediction_after: @ java.lang.Override public void mtikwulsqmiwpcyamywe () {}

line_index: 1706
bug_before_refactoring: @ java.lang.Override protected void execute () { org.usfirst.frc4904.standard.LogKitten . wtf ( ( ( motor . get () ) + "" ) ) ; } <s> @ java.lang.Override protected void execute () { org.usfirst.frc4904.standard.LogKitten . wtf ( ( ( motor . get () ) + "" ) ) ; } <s> Fixed issues with timer tasks
bug_after_refactoring: @ java.lang.Override protected void fwjqqcrcoolrkahcdbob () { org.usfirst.frc4904.standard.LogKitten . wtf ( ( ( motor . get () ) + "" ) ) ; } <s> @ java.lang.Override protected void fwjqqcrcoolrkahcdbob () { org.usfirst.frc4904.standard.LogKitten . wtf ( ( ( motor . get () ) + "" ) ) ; } <s> Fixed issues with timer tasks
fix_before_refactoring: @ java.lang.Override protected void execute () {}
fix_after_refactoring: @ java.lang.Override protected void fwjqqcrcoolrkahcdbob () {}
√ fix_prediction_before: @ java.lang.Override protected void execute () {}
√ fix_prediction_after: @ java.lang.Override protected void fwjqqcrcoolrkahcdbob () {}

line_index: 1710
bug_before_refactoring: @ org.junit.After public void tearDown ( ) throws java.lang.Exception { httpServer . stop () ; httpServer . destroy () ; } <s> @ org.junit.After public void tearDown ( ) throws java.lang.Exception { httpServer . stop () ; httpServer . destroy () ; } <s> trying to bug fixing jenkins
bug_after_refactoring: @ org.junit.After public void mbflomfvelfaiipvdgtw ( ) throws java.lang.Exception { httpServer . stop () ; httpServer . destroy () ; } <s> @ org.junit.After public void mbflomfvelfaiipvdgtw ( ) throws java.lang.Exception { httpServer . stop () ; httpServer . destroy () ; } <s> trying to bug fixing jenkins
fix_before_refactoring: @ org.junit.After public void tearDown ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.After public void mbflomfvelfaiipvdgtw ( ) throws java.lang.Exception {}
√ fix_prediction_before: @ org.junit.After public void tearDown ( ) throws java.lang.Exception {}
√ fix_prediction_after: @ org.junit.After public void mbflomfvelfaiipvdgtw ( ) throws java.lang.Exception {}

line_index: 1719
bug_before_refactoring: public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> Try to fix bug
bug_after_refactoring: public static boolean sedlnpwoofghwdjaozch ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> public static boolean sedlnpwoofghwdjaozch ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> Try to fix bug
fix_before_refactoring: public static boolean hasAccessToken ( android.content.Context context ) { return true ; }
fix_after_refactoring: public static boolean sedlnpwoofghwdjaozch ( android.content.Context context ) { return true ; }
√ fix_prediction_before: public static boolean hasAccessToken ( android.content.Context context ) { return true ; }
√ fix_prediction_after: public static boolean sedlnpwoofghwdjaozch ( android.content.Context context ) { return true ; }

line_index: 1735
bug_before_refactoring: protected java.lang.String getVolumeListJson () { return this . volumeListJson ; } <s> protected java.lang.String getVolumeListJson () { return this . volumeListJson ; } <s> Fixed a bug where inventory persistence wasn't held  Changed from protected to public members so storage works as intended
bug_after_refactoring: protected java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; } <s> protected java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; } <s> Fixed a bug where inventory persistence wasn't held  Changed from protected to public members so storage works as intended
fix_before_refactoring: public java.lang.String getVolumeListJson () { return this . volumeListJson ; }
fix_after_refactoring: public java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; }
√ fix_prediction_before: public java.lang.String getVolumeListJson () { return this . volumeListJson ; }
√ fix_prediction_after: public java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; }

line_index: 1738
bug_before_refactoring: public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; } <s> public void sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
fix_after_refactoring: public boolean sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { return this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; }
√ fix_prediction_before: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
√ fix_prediction_after: public boolean sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { return this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; }

line_index: 1748
bug_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
bug_after_refactoring: @ java.lang.Override public void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { if ( ! ( dohgetnlktueosrasauw instanceof org.jowidgets.cap.common.api.dohgetnlktueosrasauw.ServiceCanceledException ) ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; } } <s> @ java.lang.Override public void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { if ( ! ( dohgetnlktueosrasauw instanceof org.jowidgets.cap.common.api.dohgetnlktueosrasauw.ServiceCanceledException ) ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
fix_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { invocationCallback . exeption ( exception ) ; }
fix_after_refactoring: @ java.lang.Override public void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; }
√ fix_prediction_before: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { invocationCallback . exeption ( exception ) ; }
√ fix_prediction_after: @ java.lang.Override public void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; }

line_index: 1749
bug_before_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
fix_after_refactoring: io.hekate.messaging.MessagingChannel < T > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ;
√ fix_prediction_before: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
√ fix_prediction_after: io.hekate.messaging.MessagingChannel < T > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ;

line_index: 1765
bug_before_refactoring: public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> public void gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
fix_after_refactoring: public boolean gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { return this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
√ fix_prediction_before: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
√ fix_prediction_after: public boolean gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { return this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }

line_index: 1768
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
bug_after_refactoring: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
√ fix_prediction_after: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }

line_index: 1771
bug_before_refactoring: @ java.lang.Override public int getCount () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . getCount () ) ) + " getCount" ) ) ; return mCS . getCount () ; } <s> @ java.lang.Override public int getCount () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . getCount () ) ) + " getCount" ) ) ; return mCS . getCount () ; } <s> Fixed bug with the back button behavior
bug_after_refactoring: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . mfhdcgrobephvsvlzkoi () ) ) + " mfhdcgrobephvsvlzkoi" ) ) ; return mCS . mfhdcgrobephvsvlzkoi () ; } <s> @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . mfhdcgrobephvsvlzkoi () ) ) + " mfhdcgrobephvsvlzkoi" ) ) ; return mCS . mfhdcgrobephvsvlzkoi () ; } <s> Fixed bug with the back button behavior
fix_before_refactoring: @ java.lang.Override public int getCount () { return mCS . getCount () ; }
fix_after_refactoring: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { return mCS . mfhdcgrobephvsvlzkoi () ; }
√ fix_prediction_before: @ java.lang.Override public int getCount () { return mCS . getCount () ; }
√ fix_prediction_after: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { return mCS . mfhdcgrobephvsvlzkoi () ; }

line_index: 1773
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
bug_after_refactoring: @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
fix_after_refactoring: @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
√ fix_prediction_after: @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }

line_index: 1788
bug_before_refactoring: @ java.lang.Override public static void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; } <s> @ java.lang.Override public static void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; } <s> temp bug fixes
bug_after_refactoring: @ java.lang.Override public static void orycoegrnahlixmjyzxj ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . orycoegrnahlixmjyzxj ( revenue ) ; notifyDataSetChanged () ; super . orycoegrnahlixmjyzxj ( revenue ) ; } <s> @ java.lang.Override public static void orycoegrnahlixmjyzxj ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . orycoegrnahlixmjyzxj ( revenue ) ; notifyDataSetChanged () ; super . orycoegrnahlixmjyzxj ( revenue ) ; } <s> temp bug fixes
fix_before_refactoring: @ java.lang.Override public void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; }
fix_after_refactoring: @ java.lang.Override public void orycoegrnahlixmjyzxj ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . orycoegrnahlixmjyzxj ( revenue ) ; notifyDataSetChanged () ; super . orycoegrnahlixmjyzxj ( revenue ) ; }
√ fix_prediction_before: @ java.lang.Override public void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; }
√ fix_prediction_after: @ java.lang.Override public void orycoegrnahlixmjyzxj ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . orycoegrnahlixmjyzxj ( revenue ) ; notifyDataSetChanged () ; super . orycoegrnahlixmjyzxj ( revenue ) ; }

line_index: 1789
bug_before_refactoring: private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
bug_after_refactoring: private static native long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
fix_after_refactoring: private static long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
√ fix_prediction_before: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
√ fix_prediction_after: private static long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) { return 0 ; }

line_index: 1790
bug_before_refactoring: public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> Organization id issue resolved.
bug_after_refactoring: public void wkjwzfydqvhnugowypnq ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> public void wkjwzfydqvhnugowypnq ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> Organization id issue resolved.
fix_before_refactoring: public void setId ( long id ) { this . id = id ; }
fix_after_refactoring: public void wkjwzfydqvhnugowypnq ( long id ) { this . id = id ; }
√ fix_prediction_before: public void setId ( long id ) { this . id = id ; }
√ fix_prediction_after: public void wkjwzfydqvhnugowypnq ( long id ) { this . id = id ; }

line_index: 1793
bug_before_refactoring: private static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> private static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> Fix axis2Server.bat file does not start issue  This is to reverting the fix in PR #147. Set startServer  stopServer methods as public
bug_after_refactoring: private static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> private static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> Fix axis2Server.bat file does not start issue  This is to reverting the fix in PR #147. Set startServer  stopServer methods as public
fix_before_refactoring: public static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
fix_after_refactoring: public static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
√ fix_prediction_before: public static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
√ fix_prediction_after: public static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }

line_index: 1804
bug_before_refactoring: @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
bug_after_refactoring: @ android.support.annotation.NonNull private static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
fix_before_refactoring: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
fix_after_refactoring: @ android.support.annotation.NonNull public static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
√ fix_prediction_before: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
√ fix_prediction_after: @ android.support.annotation.NonNull public static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }

line_index: 1826
bug_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> Bugs fixed
bug_after_refactoring: @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> Bugs fixed
fix_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
fix_after_refactoring: @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
√ fix_prediction_before: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
√ fix_prediction_after: @ java.lang.Override public void cmilpmsdtejuybvhltpn ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}

line_index: 1838
bug_before_refactoring: private void finish () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> private void finish () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> fix bug with animation
bug_after_refactoring: private void iawttjzhnoojvbkrasce () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> private void iawttjzhnoojvbkrasce () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> fix bug with animation
fix_before_refactoring: private void finish () {}
fix_after_refactoring: private void iawttjzhnoojvbkrasce () {}
√ fix_prediction_before: private void finish () {}
√ fix_prediction_after: private void iawttjzhnoojvbkrasce () {}

line_index: 1839
bug_before_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> Add "to top"  bug fix  etc.
bug_after_refactoring: @ java.lang.Override public void hlnxkgotsncwwrybvxvv ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "hlnxkgotsncwwrybvxvv" ) ; } <s> @ java.lang.Override public void hlnxkgotsncwwrybvxvv ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "hlnxkgotsncwwrybvxvv" ) ; } <s> Add "to top"  bug fix  etc.
fix_before_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) {}
fix_after_refactoring: @ java.lang.Override public void hlnxkgotsncwwrybvxvv ( retrofit.RetrofitError error ) {}
√ fix_prediction_before: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) {}
√ fix_prediction_after: @ java.lang.Override public void hlnxkgotsncwwrybvxvv ( retrofit.RetrofitError error ) {}

line_index: 1844
bug_before_refactoring: public org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties properties () { selectAction ( "Properties" ) ; org.jboss.reddeer.swt.api.Shell shell = new org.jboss.reddeer.swt.impl.shell.DefaultShell ( "Could Not Accept Changes " ) ; if ( shell . isVisible () ) { new org.jboss.reddeer.swt.impl.button.PushButton ( "OK" ) . click () ; } return new org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties () ; } <s> public org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties properties () { selectAction ( "Properties" ) ; org.jboss.reddeer.swt.api.Shell shell = new org.jboss.reddeer.swt.impl.shell.DefaultShell ( "Could Not Accept Changes " ) ; if ( shell . isVisible () ) { new org.jboss.reddeer.swt.impl.button.PushButton ( "OK" ) . click () ; } return new org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties () ; } <s> JBTIS-639: Update kie navigator tests after bugfixes
bug_after_refactoring: public org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties fatcbrxedkkoqojvvkvj () { selectAction ( "Properties" ) ; org.jboss.reddeer.swt.api.Shell shell = new org.jboss.reddeer.swt.impl.shell.DefaultShell ( "Could Not Accept Changes " ) ; if ( shell . isVisible () ) { new org.jboss.reddeer.swt.impl.button.PushButton ( "OK" ) . click () ; } return new org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties () ; } <s> public org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties fatcbrxedkkoqojvvkvj () { selectAction ( "Properties" ) ; org.jboss.reddeer.swt.api.Shell shell = new org.jboss.reddeer.swt.impl.shell.DefaultShell ( "Could Not Accept Changes " ) ; if ( shell . isVisible () ) { new org.jboss.reddeer.swt.impl.button.PushButton ( "OK" ) . click () ; } return new org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties () ; } <s> JBTIS-639: Update kie navigator tests after bugfixes
fix_before_refactoring: public org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties properties () { selectAction ( "Properties" ) ; return new org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties () ; }
fix_after_refactoring: public org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties fatcbrxedkkoqojvvkvj () { selectAction ( "Properties" ) ; return new org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties () ; }
√ fix_prediction_before: public org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties properties () { selectAction ( "Properties" ) ; return new org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties () ; }
√ fix_prediction_after: public org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties fatcbrxedkkoqojvvkvj () { selectAction ( "Properties" ) ; return new org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties () ; }

line_index: 1846
bug_before_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , null ) ; } <s> protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , null ) ; } <s> IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method
bug_after_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller sulsfosxviwlyaioxiet ( ) throws org.apache.ignite.IgniteCheckedException { return sulsfosxviwlyaioxiet ( null , null , null , null ) ; } <s> protected org.apache.ignite.internal.binary.BinaryMarshaller sulsfosxviwlyaioxiet ( ) throws org.apache.ignite.IgniteCheckedException { return sulsfosxviwlyaioxiet ( null , null , null , null ) ; } <s> IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method
fix_before_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , null , null ) ; }
fix_after_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller sulsfosxviwlyaioxiet ( ) throws org.apache.ignite.IgniteCheckedException { return sulsfosxviwlyaioxiet ( null , null , null , null , null ) ; }
√ fix_prediction_before: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , null , null ) ; }
√ fix_prediction_after: protected org.apache.ignite.internal.binary.BinaryMarshaller sulsfosxviwlyaioxiet ( ) throws org.apache.ignite.IgniteCheckedException { return sulsfosxviwlyaioxiet ( null , null , null , null , null ) ; }

line_index: 1848
bug_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
bug_after_refactoring: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; } <s> public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
fix_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
fix_after_refactoring: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; }
√ fix_prediction_before: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
√ fix_prediction_after: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; }

line_index: 1855
bug_before_refactoring: protected void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> protected void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
bug_after_refactoring: protected void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> protected void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
fix_before_refactoring: public void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; }
fix_after_refactoring: public void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; }
√ fix_prediction_before: public void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; }
√ fix_prediction_after: public void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; }

line_index: 1867
bug_before_refactoring: private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
bug_after_refactoring: private static native void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
fix_after_refactoring: private static void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
√ fix_prediction_before: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
√ fix_prediction_after: private static void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}

line_index: 1872
bug_before_refactoring: private void lastItem () { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } <s> private void lastItem () { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } <s> added search result status and fixed searchresult array null error
bug_after_refactoring: private void tcgcopyhjhugojhjmhoz () { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } <s> private void tcgcopyhjhugojhjmhoz () { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } <s> added search result status and fixed searchresult array null error
fix_before_refactoring: private void lastItem () { if ( ( searchResult ) != null ) { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } }
fix_after_refactoring: private void tcgcopyhjhugojhjmhoz () { if ( ( searchResult ) != null ) { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } }
√ fix_prediction_before: private void lastItem () { if ( ( searchResult ) != null ) { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } }
√ fix_prediction_after: private void tcgcopyhjhugojhjmhoz () { if ( ( searchResult ) != null ) { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } }

line_index: 1881
bug_before_refactoring: @ java.lang.Override public void run () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> @ java.lang.Override public void run () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> Fixed some compile errors  still WIP
bug_after_refactoring: @ java.lang.Override public void qzwocnfyjeeixgwweotx () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> @ java.lang.Override public void qzwocnfyjeeixgwweotx () { org.owntracks.android.App.contactsViewModel.items . add ( c ) ; if ( org.owntracks.android.support.Preferences . getEnableWidget () ) org.owntracks.android.services.ServiceProxy . getServiceApplication () . requestWaypoints ( c ) ; } <s> Fixed some compile errors  still WIP
fix_before_refactoring: @ java.lang.Override public void run () {}
fix_after_refactoring: @ java.lang.Override public void qzwocnfyjeeixgwweotx () {}
√ fix_prediction_before: @ java.lang.Override public void run () {}
√ fix_prediction_after: @ java.lang.Override public void qzwocnfyjeeixgwweotx () {}

line_index: 1886
bug_before_refactoring: @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> 1、fix bug <br /> 2、新增自动刷新(autoRefresh) 禁止刷新(canRefresh)
bug_after_refactoring: @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> 1、fix bug <br /> 2、新增自动刷新(autoRefresh) 禁止刷新(canRefresh)
fix_before_refactoring: @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; }
fix_after_refactoring: @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; }
√ fix_prediction_before: @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; }
√ fix_prediction_after: @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; }

line_index: 1911
bug_before_refactoring: public void stopLocationUpdates ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> public void stopLocationUpdates ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> Implemented several bug fixes for stability  including crashing on exit and malformed url problems
bug_after_refactoring: public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> Implemented several bug fixes for stability  including crashing on exit and malformed url problems
fix_before_refactoring: public void stopLocationUpdates ( ) throws java.lang.SecurityException { if ( ( locationManager ) != null ) { locationManager . removeUpdates ( this ) ; } }
fix_after_refactoring: public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { if ( ( locationManager ) != null ) { locationManager . removeUpdates ( this ) ; } }
√ fix_prediction_before: public void stopLocationUpdates ( ) throws java.lang.SecurityException { if ( ( locationManager ) != null ) { locationManager . removeUpdates ( this ) ; } }
√ fix_prediction_after: public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { if ( ( locationManager ) != null ) { locationManager . removeUpdates ( this ) ; } }

line_index: 1913
bug_before_refactoring: public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void main ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
bug_after_refactoring: public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) { long starttime = 0 ; starttime = java.lang.Long . parseLong ( "1253663" ) ; java.lang.System.out . println ( ( starttime * 11 ) ) ; } <s> 可以提交CloudArch jobs  fix bugs
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void yznhvmctkqhvbvrdhquv ( java.lang.String [] args ) {}

line_index: 1920
bug_before_refactoring: @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
bug_after_refactoring: @ org.spine3.server.aggregate.Apply public void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
fix_before_refactoring: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
fix_after_refactoring: @ org.spine3.server.aggregate.Apply private void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; }
√ fix_prediction_before: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
√ fix_prediction_after: @ org.spine3.server.aggregate.Apply private void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; }

line_index: 1923
bug_before_refactoring: protected final int getRetryMaxAttempts () { return retryMaxAttempts ; } <s> protected final int getRetryMaxAttempts () { return retryMaxAttempts ; } <s> Fixed Freemarker template issue accessing NodeDetails object
bug_after_refactoring: protected final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; } <s> protected final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; } <s> Fixed Freemarker template issue accessing NodeDetails object
fix_before_refactoring: public final int getRetryMaxAttempts () { return retryMaxAttempts ; }
fix_after_refactoring: public final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; }
√ fix_prediction_before: public final int getRetryMaxAttempts () { return retryMaxAttempts ; }
√ fix_prediction_after: public final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; }

line_index: 1934
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
bug_after_refactoring: @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) {}
fix_after_refactoring: @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) {}
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) {}
√ fix_prediction_after: @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) {}

line_index: 1942
bug_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> fixed problem with sender in profile
bug_after_refactoring: public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> fixed problem with sender in profile
fix_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
fix_after_refactoring: public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
√ fix_prediction_before: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
√ fix_prediction_after: public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;

line_index: 1949
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
bug_after_refactoring: @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_after: @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) {}

line_index: 1951
bug_before_refactoring: public java.lang.String getPath () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> public java.lang.String getPath () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> Fix LookupPath parsing  Issue: SPR-15397
bug_after_refactoring: public java.lang.String ynnmlkqlapaknebykdxj () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> public java.lang.String ynnmlkqlapaknebykdxj () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> Fix LookupPath parsing  Issue: SPR-15397
fix_before_refactoring: public java.lang.String getPath () { return this . path ; }
fix_after_refactoring: public java.lang.String ynnmlkqlapaknebykdxj () { return this . path ; }
√ fix_prediction_before: public java.lang.String getPath () { return this . path ; }
√ fix_prediction_after: public java.lang.String ynnmlkqlapaknebykdxj () { return this . path ; }

line_index: 1956
bug_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
bug_after_refactoring: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
fix_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
fix_after_refactoring: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
√ fix_prediction_before: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
√ fix_prediction_after: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }

line_index: 1966
bug_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
bug_after_refactoring: public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
fix_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { return null ; }
fix_after_refactoring: public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { return null ; }
√ fix_prediction_before: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { return null ; }
√ fix_prediction_after: public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { return null ; }

line_index: 1975
bug_before_refactoring: protected void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> protected void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
bug_after_refactoring: protected void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> protected void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
fix_before_refactoring: public void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; }
fix_after_refactoring: public void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; }
√ fix_prediction_before: public void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; }
√ fix_prediction_after: public void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; }

line_index: 1977
bug_before_refactoring: @ java.lang.Override public boolean has ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> @ java.lang.Override public boolean has ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> Possible fix for Thread Safety issue.
bug_after_refactoring: @ java.lang.Override public boolean zcyzoxgubkbsmqmtldoc ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> @ java.lang.Override public boolean zcyzoxgubkbsmqmtldoc ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> Possible fix for Thread Safety issue.
fix_before_refactoring: @ java.lang.Override public boolean has ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }
fix_after_refactoring: @ java.lang.Override public boolean zcyzoxgubkbsmqmtldoc ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }
√ fix_prediction_before: @ java.lang.Override public boolean has ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }
√ fix_prediction_after: @ java.lang.Override public boolean zcyzoxgubkbsmqmtldoc ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }

line_index: 1978
bug_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
bug_after_refactoring: @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { this . mdP . tczycslwrqqdbjppkyup ( pos ) ; } <s> @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { this . mdP . tczycslwrqqdbjppkyup ( pos ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
fix_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
fix_after_refactoring: @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . tczycslwrqqdbjppkyup ( pos ) ; } }
√ fix_prediction_before: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
√ fix_prediction_after: @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . tczycslwrqqdbjppkyup ( pos ) ; } }

line_index: 1986
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> Fixed issue in the now playing position
bug_after_refactoring: @ java.lang.Override public void yodgglrwvsycyvdduknk ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> @ java.lang.Override public void yodgglrwvsycyvdduknk ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> Fixed issue in the now playing position
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData , position ) ; }
fix_after_refactoring: @ java.lang.Override public void yodgglrwvsycyvdduknk ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData , position ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData , position ) ; }
√ fix_prediction_after: @ java.lang.Override public void yodgglrwvsycyvdduknk ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData , position ) ; }

line_index: 1991
bug_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
bug_after_refactoring: private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
fix_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_before: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_after: private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) {}

line_index: 1995
bug_before_refactoring: public java.lang.String getPerformativeName () { return data . getPerformativeName () ; } <s> public java.lang.String getPerformativeName () { return data . getPerformativeName () ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
bug_after_refactoring: public java.lang.String hpeclfxxcehahjlmxpnw () { return data . hpeclfxxcehahjlmxpnw () ; } <s> public java.lang.String hpeclfxxcehahjlmxpnw () { return data . hpeclfxxcehahjlmxpnw () ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
fix_before_refactoring: public java.lang.String getPerformativeName () { return getData () . getPerformativeName () ; }
fix_after_refactoring: public java.lang.String hpeclfxxcehahjlmxpnw () { return getData () . hpeclfxxcehahjlmxpnw () ; }
√ fix_prediction_before: public java.lang.String getPerformativeName () { return getData () . getPerformativeName () ; }
√ fix_prediction_after: public java.lang.String hpeclfxxcehahjlmxpnw () { return getData () . hpeclfxxcehahjlmxpnw () ; }

line_index: 1998
bug_before_refactoring: public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
bug_after_refactoring: public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
√ fix_prediction_after: public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) {}

line_index: 2011
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> @ java.lang.Override protected void onPause () { super . onPause () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> fix disconnect delay bug
bug_after_refactoring: @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> fix disconnect delay bug
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
√ fix_prediction_after: @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; }

line_index: 2020
bug_before_refactoring: @ java.lang.Override public java.lang.String getAdminHost () { java.lang.String adminHost = settings . getAdminHost () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . getAdminHost () ; } <s> @ java.lang.Override public java.lang.String getAdminHost () { java.lang.String adminHost = settings . getAdminHost () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . getAdminHost () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
bug_after_refactoring: @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { java.lang.String adminHost = settings . uwvuiormpiioilawojfh () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . uwvuiormpiioilawojfh () ; } <s> @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { java.lang.String adminHost = settings . uwvuiormpiioilawojfh () ; if ( com.intellij.openapi.util.text.StringUtil . isEmpty ( adminHost ) ) { return "localhost" ; } return settings . uwvuiormpiioilawojfh () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
fix_before_refactoring: @ java.lang.Override public java.lang.String getAdminHost () { return settings . getAdminHost () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { return settings . uwvuiormpiioilawojfh () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getAdminHost () { return settings . getAdminHost () ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.String uwvuiormpiioilawojfh () { return settings . uwvuiormpiioilawojfh () ; }

line_index: 2038
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> @ java.lang.Override public java.lang.String toString () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> routes search bugfix
bug_after_refactoring: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> routes search bugfix
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return name ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return name ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return name ; }
√ fix_prediction_after: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return name ; }

line_index: 2042
bug_before_refactoring: protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
fix_after_refactoring: private native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
√ fix_prediction_before: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
√ fix_prediction_after: private native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;

line_index: 2061
bug_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> fix bug due to section null for about tab
bug_after_refactoring: public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> fix bug due to section null for about tab
fix_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
fix_after_refactoring: public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
√ fix_prediction_before: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
√ fix_prediction_after: public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }

