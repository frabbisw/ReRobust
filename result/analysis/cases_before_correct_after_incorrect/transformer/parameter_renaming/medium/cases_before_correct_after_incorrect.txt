line_index: 421
bug_before_refactoring: private boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } <s> private boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } <s> fix bugs
bug_after_refactoring: private boolean verifyPermissions ( int [] yzqcqsidixonpounaewe ) { if ( ( yzqcqsidixonpounaewe.length ) < 1 ) { return false ; } for ( int result : yzqcqsidixonpounaewe ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } <s> private boolean verifyPermissions ( int [] yzqcqsidixonpounaewe ) { if ( ( yzqcqsidixonpounaewe.length ) < 1 ) { return false ; } for ( int result : yzqcqsidixonpounaewe ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } <s> fix bugs
fix_before_refactoring: public boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; }
fix_after_refactoring: public boolean verifyPermissions ( int [] yzqcqsidixonpounaewe ) { if ( ( yzqcqsidixonpounaewe.length ) < 1 ) { return false ; } for ( int result : yzqcqsidixonpounaewe ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; }
√ fix_prediction_before: public boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; }
× fix_prediction_after: public boolean verifyPermissions ( int [] yqidcqsewonpounewaeweid ) { if ( ( yqidcqsewonpounewaeweid.length ) < 1 ) { return false ; } for ( int i = 1 ; i < ( yqidcqsewonpounewaeweid.length ) ; i ++ ) { if ( ( result . get ( i ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; }

line_index: 464
bug_before_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; } <s> protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; } <s> * Fixes rotation scaling and   * Fixed rotation scaling issues * Fixed rotation being additive on some devices
bug_after_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz , @ android.support.annotation.NonNull android.graphics.Matrix xiiyrgqocerhlwhyfyog ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xiiyrgqocerhlwhyfyog , xScale , yScale ) ; } <s> protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz , @ android.support.annotation.NonNull android.graphics.Matrix xiiyrgqocerhlwhyfyog ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xiiyrgqocerhlwhyfyog , xScale , yScale ) ; } <s> * Fixes rotation scaling and   * Fixed rotation scaling issues * Fixed rotation being additive on some devices
fix_before_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
fix_after_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xScale , yScale ) ; }
√ fix_prediction_before: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
× fix_prediction_after: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull android.graphics.TextureView azqfubz.kyjubzucefubq.pyfy.ScaleView apy , @ android.support.annotation.NonNull android.graphics.Matrix xScale , @ android.support.annotation.NonNull float yScale ) { float xScale = ( ( float ) ( ( ( azqfubz.kyjubzucefubq.pyfy.Scaleer . getWidth () ) / (whyScale ) ) * ( scale ) ) ) ; float yScale = ( ( float ) ( ( azqfubz.kyjubzucefubq.pyfy.Scaleer . getHeight () ) / (whyScale ) ) ) ; float scale = scale / xScale ; xScale = scale / yScale ; applytrinsicVideo ( apy , xScale , yScale ) ; xScale = scale / yScale ; }

line_index: 478
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ java.lang.Override public void sendOrderedBroadcast ( final android.content.Intent intent , final java.lang.String receiverPermission , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void run ( final android.content.Intent xvrlprppiebvyyjqxowv ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( xvrlprppiebvyyjqxowv , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ java.lang.Override public void sendOrderedBroadcast ( final android.content.Intent intent , final java.lang.String receiverPermission , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent xvrlprppiebvyyjqxowv ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( xvrlprppiebvyyjqxowv , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
fix_after_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( xvrlprppiebvyyjqxowv , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
× fix_prediction_after: @ java.lang.Override public void run () { super . sendOrderedBroadcast ( x , y , receiverPermission , resultReceiver , scheduler , initialData , initialExtras ) ; }

line_index: 588
bug_before_refactoring: public static void deleteTimer ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.timerLock ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } } } <s> public static void deleteTimer ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.timerLock ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } } } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
bug_after_refactoring: public static void deleteTimer ( final java.lang.String xovopqorauaqkrhfzcxx ) { synchronized ( com.sb.elsinore.LaunchControl.timerLock ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( xovopqorauaqkrhfzcxx ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } } } <s> public static void deleteTimer ( final java.lang.String xovopqorauaqkrhfzcxx ) { synchronized ( com.sb.elsinore.LaunchControl.timerLock ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( xovopqorauaqkrhfzcxx ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } } } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
fix_before_refactoring: public static void deleteTimer ( final java.lang.String name ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }
fix_after_refactoring: public static void deleteTimer ( final java.lang.String xovopqorauaqkrhfzcxx ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( xovopqorauaqkrhfzcxx ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }
√ fix_prediction_before: public static void deleteTimer ( final java.lang.String name ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }
× fix_prediction_after: public static void deleteTimer ( final java.lang.String xopovorqa.krhorqfxxels.LaunchControl.timer ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinzhorqfore.LaunchControl.timerList . iterator () ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( com.sb.elsinzhorqfxxels.LaunchControl.timerList . get ( xopovorqa.krhorqfxxels.LaunchControl.timer ) . getName () . equalsIgnoreCase ( tTimer ) ) { iterator . remove () ; } } }

line_index: 633
bug_before_refactoring: public static void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } } <s> public static void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } } <s> fixed a bug which could cause crash when putting value into shared preferences in a race situation
bug_after_refactoring: public static void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; } } <s> public static void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; } } <s> fixed a bug which could cause crash when putting value into shared preferences in a race situation
fix_before_refactoring: public static synchronized void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } }
fix_after_refactoring: public static synchronized void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; } }
√ fix_prediction_before: public static synchronized void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } }
× fix_prediction_after: public static void putString ( android.content.Contextbdcty.wkbdcty.hwogl.xbgwubl.grr.obo.kwfqlo , java.lang.String y , java.lang.String tfcpm , booleany ) { ds . ensureSettings ( ivcpm ) ; ds . putString ( y , ( ( java.lang.Integer ) ( tfcpm ) ) ) ; if ( ( ds.isSettings ) != null ) { ds.isSettings . put ( tfcpm , ds.isSettings ) ; } if ( ( ds.mSettings ) != null ) { ds.doSettings . put ( tfcpm , ds.mSettings ) ; } }

line_index: 635
bug_before_refactoring: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; if ( ( sbn . getNotification () . number ) == 0 ) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } } <s> @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; if ( ( sbn . getNotification () . number ) == 0 ) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } } <s> Fix: Removed double-check for number == 0.  This solves the problem described in 2ab7dfe that SETTING_NONE did nothing.  Sadly  this commit messes a lot with indentation.
bug_after_refactoring: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam cijjirbveubtsjqczcjy ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( cijjirbveubtsjqczcjy.args [ 0 ] ) ) ; if ( ( sbn . getNotification () . number ) == 0 ) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } } <s> @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam cijjirbveubtsjqczcjy ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( cijjirbveubtsjqczcjy.args [ 0 ] ) ) ; if ( ( sbn . getNotification () . number ) == 0 ) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } } <s> Fix: Removed double-check for number == 0.  This solves the problem described in 2ab7dfe that SETTING_NONE did nothing.  Sadly  this commit messes a lot with indentation.
fix_before_refactoring: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; }
fix_after_refactoring: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam cijjirbveubtsjqczcjy ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( cijjirbveubtsjqczcjy.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; }
√ fix_prediction_before: @ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; }
× fix_prediction_after: @ java.lang.Override protected void beforeHookedMethod ( com.woalkapps.xposed.notifcount.birjts.MethodHookParam cjg ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( cjg . getNotification () [ 0 ] ) ) ; if ( ( sbn . getNotification () . getPackageName () ) == ( com.czalkapps.xposed.notifcount.XposedMod.XposedSetting.NONE ) ) { com.woalkapps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.czalkapps.xposed.notifcount.XposedMod.XposedSetting.NONE ) ; } com.woalkapps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.czalkapps.xposed.notifcount.XposedMod.XposedSetting.NONE ) ; }

