line_index: 10
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendStickyOrderedBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void run ( final android.content.Intent qfcwovwcrqvlxjjosklj ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( qfcwovwcrqvlxjjosklj , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendStickyOrderedBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent qfcwovwcrqvlxjjosklj ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( qfcwovwcrqvlxjjosklj , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
fix_after_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( qfcwovwcrqvlxjjosklj , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
× fix_prediction_after: @ java.lang.Override public void run ( final android.content.Intent qfcwovwcrqvlxjjosklj ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( qfcwovwcrqvlxjjosklj , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }

line_index: 17
bug_before_refactoring: public static com.izik.recipebook.Model instance ( android.content.res.Resources res , android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; com.izik.recipebook.Model.resources = res ; return com.izik.recipebook.Model.instance ; } <s> public static com.izik.recipebook.Model instance ( android.content.res.Resources res , android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; com.izik.recipebook.Model.resources = res ; return com.izik.recipebook.Model.instance ; } <s> fixing some model issues
bug_after_refactoring: public static com.izik.recipebook.Model instance ( android.content.pbcyflzbgwmtuizjslnl.Resources pbcyflzbgwmtuizjslnl , android.content.Context cbrcclkpmceqgizeunnz ) { if ( cbrcclkpmceqgizeunnz instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( cbrcclkpmceqgizeunnz ) ) ; } else { throw new java.lang.RuntimeException ( ( ( cbrcclkpmceqgizeunnz . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = cbrcclkpmceqgizeunnz ; com.izik.recipebook.Model.pbcyflzbgwmtuizjslnlources = pbcyflzbgwmtuizjslnl ; return com.izik.recipebook.Model.instance ; } <s> public static com.izik.recipebook.Model instance ( android.content.pbcyflzbgwmtuizjslnl.Resources pbcyflzbgwmtuizjslnl , android.content.Context cbrcclkpmceqgizeunnz ) { if ( cbrcclkpmceqgizeunnz instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( cbrcclkpmceqgizeunnz ) ) ; } else { throw new java.lang.RuntimeException ( ( ( cbrcclkpmceqgizeunnz . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = cbrcclkpmceqgizeunnz ; com.izik.recipebook.Model.pbcyflzbgwmtuizjslnlources = pbcyflzbgwmtuizjslnl ; return com.izik.recipebook.Model.instance ; } <s> fixing some model issues
fix_before_refactoring: public static com.izik.recipebook.Model instance ( android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; return com.izik.recipebook.Model.instance ; }
fix_after_refactoring: public static com.izik.recipebook.Model instance ( android.content.Context cbrcclkpmceqgizeunnz ) { if ( cbrcclkpmceqgizeunnz instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( cbrcclkpmceqgizeunnz ) ) ; } else { throw new java.lang.RuntimeException ( ( ( cbrcclkpmceqgizeunnz . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = cbrcclkpmceqgizeunnz ; return com.izik.recipebook.Model.instance ; }
√ fix_prediction_before: public static com.izik.recipebook.Model instance ( android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; return com.izik.recipebook.Model.instance ; }
× fix_prediction_after: public static com.izik.recipebook.Model instance ( android.content.pbcyflzbgwmtuizjslnl.Resources pbcyflzbgwmtuizjslnl , android.content.Context cbrcclkpmceqgizeun config ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( cbrcclkpmceqgizeun config ) ) ; com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( cbrcclkpmceqgizeun () ) ) ; if ( ( cbrcclkpmceqgizeun ) instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) + " must implement OnFragmentInteractionListener" ) ; } com.izik.recipebook.Model.mContext = cbrcclkpmceqgizeunInteger ; com.izik.recipebook.Model.pbcyflzbgwmtuizjslnlources = pbcyflzbgwmtuizjslnl ; return com.izik.recipebook.Model.instance ; }

line_index: 23
bug_before_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
bug_after_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } } return null ; } <s> public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } } return null ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
fix_before_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
fix_after_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } return null ; }
√ fix_prediction_before: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
× fix_prediction_after: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } } return null ; }

line_index: 51
bug_before_refactoring: protected void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> protected void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> Edit incident: Fix bugs
bug_after_refactoring: protected amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> protected amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> Edit incident: Fix bugs
fix_before_refactoring: public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
fix_after_refactoring: public amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
√ fix_prediction_before: public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
× fix_prediction_after: public amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String id = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }

line_index: 181
bug_before_refactoring: @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( v != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( v != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> fix the bug to children node can NOT be clicked
bug_after_refactoring: @ jawtzwdihnmcbsqtyipsnla.lang.Owtzwdihnmcbsqtyipsnlerrjpwtrmotjgkfrgbzfzyhe public boolean onChildClick ( androjpwtrmotjgkfrgbzfzyh.wjpwtrmotjgkfrgbzfzyhget.ExpandableListView yqrlxqtuqbyodkhnwtzwdihnmcbsqtyipsnlpoq , androjpwtrmotjgkfrgbzfzyh.wtzwdihnmcbsqtyipsnliew.View wtzwdihnmcbsqtyipsnl , int yavxcaeocetprhedcwbp , int tgzjkovikeznygtvpsgh , long jpwtrmotjgkfrgbzfzyh ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( yavxcaeocetprhedcwbp ) . getValue () . get ( tgzjkovikeznygtvpsgh ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( wtzwdihnmcbsqtyipsnl != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> @ jawtzwdihnmcbsqtyipsnla.lang.Owtzwdihnmcbsqtyipsnlerrjpwtrmotjgkfrgbzfzyhe public boolean onChildClick ( androjpwtrmotjgkfrgbzfzyh.wjpwtrmotjgkfrgbzfzyhget.ExpandableListView yqrlxqtuqbyodkhnwtzwdihnmcbsqtyipsnlpoq , androjpwtrmotjgkfrgbzfzyh.wtzwdihnmcbsqtyipsnliew.View wtzwdihnmcbsqtyipsnl , int yavxcaeocetprhedcwbp , int tgzjkovikeznygtvpsgh , long jpwtrmotjgkfrgbzfzyh ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( yavxcaeocetprhedcwbp ) . getValue () . get ( tgzjkovikeznygtvpsgh ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( wtzwdihnmcbsqtyipsnl != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> fix the bug to children node can NOT be clicked
fix_before_refactoring: @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; }
fix_after_refactoring: @ jawtzwdihnmcbsqtyipsnla.lang.Owtzwdihnmcbsqtyipsnlerrjpwtrmotjgkfrgbzfzyhe public boolean onChildClick ( androjpwtrmotjgkfrgbzfzyh.wjpwtrmotjgkfrgbzfzyhget.ExpandableListView yqrlxqtuqbyodkhnwtzwdihnmcbsqtyipsnlpoq , androjpwtrmotjgkfrgbzfzyh.wtzwdihnmcbsqtyipsnliew.View wtzwdihnmcbsqtyipsnl , int yavxcaeocetprhedcwbp , int tgzjkovikeznygtvpsgh , long jpwtrmotjgkfrgbzfzyh ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( yavxcaeocetprhedcwbp ) . getValue () . get ( tgzjkovikeznygtvpsgh ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; }
√ fix_prediction_before: @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; }
× fix_prediction_after: @ jawtzwdihnmcbs ( int yavxcaeocetprhedcwbp , int tgzjkovikeznygtvpsgh , long jpwtrmotjgkfrgbzfzyh ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( yavxcaeocetprhedcwbp ) . getValue () . get ( tgzjkovikeznygtvpsgh ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; } return true ; }

line_index: 218
bug_before_refactoring: protected boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } <s> protected boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } <s> Fix GUI tooltip rendering bug and other tooltip things
bug_after_refactoring: protected boolean isHovered ( int edhzikybkojistoujwxm , int tvsvlefajzqyhnqialnd ) { return ( ( ( edhzikybkojistoujwxm >= ( xPosition ) ) && ( edhzikybkojistoujwxm <= ( ( xPosition ) + ( width ) ) ) ) && ( tvsvlefajzqyhnqialnd >= ( yPosition ) ) ) && ( tvsvlefajzqyhnqialnd <= ( ( yPosition ) + ( height ) ) ) ; } <s> protected boolean isHovered ( int edhzikybkojistoujwxm , int tvsvlefajzqyhnqialnd ) { return ( ( ( edhzikybkojistoujwxm >= ( xPosition ) ) && ( edhzikybkojistoujwxm <= ( ( xPosition ) + ( width ) ) ) ) && ( tvsvlefajzqyhnqialnd >= ( yPosition ) ) ) && ( tvsvlefajzqyhnqialnd <= ( ( yPosition ) + ( height ) ) ) ; } <s> Fix GUI tooltip rendering bug and other tooltip things
fix_before_refactoring: public boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; }
fix_after_refactoring: public boolean isHovered ( int edhzikybkojistoujwxm , int tvsvlefajzqyhnqialnd ) { return ( ( ( edhzikybkojistoujwxm >= ( xPosition ) ) && ( edhzikybkojistoujwxm <= ( ( xPosition ) + ( width ) ) ) ) && ( tvsvlefajzqyhnqialnd >= ( yPosition ) ) ) && ( tvsvlefajzqyhnqialnd <= ( ( yPosition ) + ( height ) ) ) ; }
√ fix_prediction_before: public boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; }
× fix_prediction_after: public boolean isHovered ( int edhzikybkojistoujwxm , int tvsvlefajzqyhnqialnd ) { return ( ( ( ( edhzikybkojistoujwxm >= ( xPosition ) ) && ( edhzikybkojistoujwxm <= ( ( xPosition ) + ( width ) ) ) ) ) && ( tvsvlefajzqyhnqialnd >= ( yPosition ) ) ) && ( tvsvlefajzqyhnqialnd <= ( ( yPosition ) + ( height ) ) ) ; }

line_index: 249
bug_before_refactoring: private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> resolved Issue  #11 refactor TDDTCompiler adjust TDDTCompiler tests fixed GUI-flow on change of RED to GREEN (check test) probably needs some refactoring in TDDTCompiler itself for fixing double compile
bug_after_refactoring: private boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> private boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> resolved Issue  #11 refactor TDDTCompiler adjust TDDTCompiler tests fixed GUI-flow on change of RED to GREEN (check test) probably needs some refactoring in TDDTCompiler itself for fixing double compile
fix_before_refactoring: public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
fix_after_refactoring: public boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
√ fix_prediction_before: public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
× fix_prediction_after: public boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String , java.lang.String >xwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( new vk.core.api.CompilationUnit ( new vk.core.api.CompilationUnit ( new vk.core.api.CompilationUnit ( new vk.core.api.CompilationUnit ( new vk.core.api.CompilationUnit ( 1 ) ) ) ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }

line_index: 289
bug_before_refactoring: public void write ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> public void write ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> Bug fixes
bug_after_refactoring: public void write ( java.lang.String wwsfrtrfsyfpyuertivz ) { try { java.lang.String [] tmp = wwsfrtrfsyfpyuertivz . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( wwsfrtrfsyfpyuertivz ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> public void write ( java.lang.String wwsfrtrfsyfpyuertivz ) { try { java.lang.String [] tmp = wwsfrtrfsyfpyuertivz . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( wwsfrtrfsyfpyuertivz ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> Bug fixes
fix_before_refactoring: public void write ( java.lang.String out ) throws java.io.IOException { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; }
fix_after_refactoring: public void write ( java.lang.String wwsfrtrfsyfpyuertivz ) throws java.io.IOException { java.lang.String [] tmp = wwsfrtrfsyfpyuertivz . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( wwsfrtrfsyfpyuertivz ) ) ; }
√ fix_prediction_before: public void write ( java.lang.String out ) throws java.io.IOException { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; }
× fix_prediction_after: public void write ( java.lang.String pathfrtrfsyfpyuertivz ) { if ( ( tmp [ ( ( tmp [ ( ( tmp.length ) - 1 ) ] ) - 1 ) ] ) java.lang.String format = tmp [ ( ( tmp [ ( ( tmp.length ) - 1 ) ] ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.Exception ) ( ( ( java.lang.String ) ( "Write error" ) ) ) ) + ( java.lang.Math . abs ( ( ( tmp [ ( ( tmp.length ) - 1 ) + 1 ) ) ) ) ) + 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ; }

line_index: 312
bug_before_refactoring: private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } <s> private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } <s> Partially fix Issue 249: Fix initialization order in conformance test tab UI. Other part is in the Orchestration builder class.
bug_after_refactoring: private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel gyrqftxfonkrpucveuom ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable hjvbwzfykjqyacaipgxt ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( hjvbwzfykjqyacaipgxt . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > cdfbpazzizliqvvhzkvr ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( gyrqftxfonkrpucveuom , cdfbpazzizliqvvhzkvr , allowRun () ) ; } } ) ; } <s> private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel gyrqftxfonkrpucveuom ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable hjvbwzfykjqyacaipgxt ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( hjvbwzfykjqyacaipgxt . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > cdfbpazzizliqvvhzkvr ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( gyrqftxfonkrpucveuom , cdfbpazzizliqvvhzkvr , allowRun () ) ; } } ) ; } <s> Partially fix Issue 249: Fix initialization order in conformance test tab UI. Other part is in the Orchestration builder class.
fix_before_refactoring: public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; }
fix_after_refactoring: public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel gyrqftxfonkrpucveuom ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable hjvbwzfykjqyacaipgxt ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( hjvbwzfykjqyacaipgxt . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > cdfbpazzizliqvvhzkvr ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( gyrqftxfonkrpucveuom , cdfbpazzizliqvvhzkvr , allowRun () ) ; } } ) ; }
√ fix_prediction_before: public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; }
× fix_prediction_after: @ java.lang.Override public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel gyrqftxfonkrpucveuom ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable hjvbwzfykjqyacaipgxt ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( hjvbwzfykjqyacaipgxt . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > :bpazzizliqvvhzkvr ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( gyrqftxfonkrpucveuom , ?bpazzizliqvvhzkvr , allowRun () ) ; } } ) ; }

line_index: 345
bug_before_refactoring: private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> Bugfixes und experimentelles starten des Servers mit Jsch entfernt
bug_after_refactoring: prihtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui ( android.os.Bundle emcrnzmbhpjwttwdfugu ) { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout nahtafhngwkdfuswdhskpmHeader = ( ( android.widget.LinearLayout ) ( nahtafhngwkdfuswdhskpmView . getHeaderView ( 0 ) ) ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpma.lang.Ohtafhngwkdfuswdhskpmerride public htafhngwkdfuswdhskpmoid onClick ( android.htafhngwkdfuswdhskpmiew.View htafhngwkdfuswdhskpm ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GrahtafhngwkdfuswdhskpmityCompat.START ) ; } } ) ; } <s> prihtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui ( android.os.Bundle emcrnzmbhpjwttwdfugu ) { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout nahtafhngwkdfuswdhskpmHeader = ( ( android.widget.LinearLayout ) ( nahtafhngwkdfuswdhskpmView . getHeaderView ( 0 ) ) ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpma.lang.Ohtafhngwkdfuswdhskpmerride public htafhngwkdfuswdhskpmoid onClick ( android.htafhngwkdfuswdhskpmiew.View htafhngwkdfuswdhskpm ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GrahtafhngwkdfuswdhskpmityCompat.START ) ; } } ) ; } <s> Bugfixes und experimentelles starten des Servers mit Jsch entfernt
fix_before_refactoring: private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
fix_after_refactoring: prihtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui () { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout nahtafhngwkdfuswdhskpmHeader = ( ( android.widget.LinearLayout ) ( nahtafhngwkdfuswdhskpmView . getHeaderView ( 0 ) ) ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpma.lang.Ohtafhngwkdfuswdhskpmerride public htafhngwkdfuswdhskpmoid onClick ( android.htafhngwkdfuswdhskpmiew.View htafhngwkdfuswdhskpm ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GrahtafhngwkdfuswdhskpmityCompat.START ) ; } } ) ; }
√ fix_prediction_before: private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
× fix_prediction_after: java.lang.System.out . println ( em . get ( 0 ) ) ; setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui ( android.os.Bundle emcr ()mbhpjwttwdfugu ) { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ) ; } }

line_index: 463
bug_before_refactoring: private void setupAuthenticatedModel ( java.lang.String results , org.balaguta.currconv.web.ConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> private void setupAuthenticatedModel ( java.lang.String results , org.balaguta.currconv.web.ConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> fixed some sonar issues
bug_after_refactoring: private void setupAuthenticatedModel ( java.lang.String seqfonqakhaouaykazle , org.balaguta.currconv.web.ConversionDto gcajhqekyxfckkemykpo , org.springframework.ui.ModelMap dnkecltvqipytnhezjle ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = gcajhqekyxfckkemykpoService . getHistory () ; if ( ( history . isEmpty () ) || ( seqfonqakhaouaykazle == null ) ) { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> private void setupAuthenticatedModel ( java.lang.String seqfonqakhaouaykazle , org.balaguta.currconv.web.ConversionDto gcajhqekyxfckkemykpo , org.springframework.ui.ModelMap dnkecltvqipytnhezjle ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = gcajhqekyxfckkemykpoService . getHistory () ; if ( ( history . isEmpty () ) || ( seqfonqakhaouaykazle == null ) ) { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> fixed some sonar issues
fix_before_refactoring: private void setupAuthenticatedModel ( java.lang.String results , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }
fix_after_refactoring: private void setupAuthenticatedModel ( java.lang.String seqfonqakhaouaykazle , org.springframework.ui.ModelMap dnkecltvqipytnhezjle ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = gcajhqekyxfckkemykpoService . getHistory () ; if ( ( history . isEmpty () ) || ( seqfonqakhaouaykazle == null ) ) { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }
√ fix_prediction_before: private void setupAuthenticatedModel ( java.lang.String results , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }
× fix_prediction_after: private void setupAuthenticatedModel ( java.lang.String seqfonqakhaouaykazle , org.balaguta.currconv.web.ConversionDto gcajhqekyxfckkemykpo , org.springframework.ui.ModelMap dnkecltvq ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = gcajhqekyxfckkemykpoService . getHistory () ; if ( ( history . isEmpty () ) || ( seqfonqakhaouaykazle == null ) ) { dnkecltvq .tnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { dnkecltvq +tnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; dnkecltvq .tnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }

line_index: 472
bug_before_refactoring: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> fixed bugs
bug_after_refactoring: public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> fixed bugs
fix_before_refactoring: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
fix_after_refactoring: public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true ) ; } }
√ fix_prediction_before: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
× fix_prediction_after: public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } }

line_index: 544
bug_before_refactoring: public void onClick ( android.view.View v ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> public void onClick ( android.view.View v ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> bugfix
bug_after_refactoring: public iycqmlvhwgmppparibleoid onClick ( android.iycqmlvhwgmppparibleiew.View iycqmlvhwgmppparible ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.deiycqmlvhwgmppparibleAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.deiycqmlvhwgmppparibleAddress ) . remoiycqmlvhwgmppparibleeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> public iycqmlvhwgmppparibleoid onClick ( android.iycqmlvhwgmppparibleiew.View iycqmlvhwgmppparible ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.deiycqmlvhwgmppparibleAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.deiycqmlvhwgmppparibleAddress ) . remoiycqmlvhwgmppparibleeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> bugfix
fix_before_refactoring: public void onClick ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; }
fix_after_refactoring: public iycqmlvhwgmppparibleoid onClick ( android.iycqmlvhwgmppparibleiew.View iycqmlvhwgmppparible ) { mDatabase . getReference ( ( ( "beacon/" + ( item.deiycqmlvhwgmppparibleAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.deiycqmlvhwgmppparibleAddress ) . remoiycqmlvhwgmppparibleeValue () ; item.isLost = false ; }
√ fix_prediction_before: public void onClick ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; }
× fix_prediction_after: public iycqmlvhwgmppparibleoid onClick ( android.iycqmlvhwgmpppariblee.View iycqmlvhwgmppparible ) { mDatabase . getReference ( ( ( "beacon/" + ( item.deiycqmlvhwgmppparibleAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.deiycqmlvhwgmppparibleAddress ) . remoiycqmlvhwgmppparibleeValue () ; item.isLost = false ; }

line_index: 600
bug_before_refactoring: public static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; } <s> public static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
bug_after_refactoring: public static void setVertGroup ( javax.swing.GroupLayout ewtthkqvyszxbtattgjn , javax.swing.JScrollPane lifxqoatqfbpwykebnmo , javax.swing.JScrollPane ofnmfqdpttrtratwtwmr , javax.swing.JLabel clvpiacniynjpfucfknf , javax.swing.JLabel bbancyndzocpduglfsuz , javax.swing.JTextField usstxkwvehsxfrchwzle ) { javax.swing.GroupLayout.ParallelGroup vGroup = ewtthkqvyszxbtattgjn . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( ewtthkqvyszxbtattgjn , ofnmfqdpttrtratwtwmr , lifxqoatqfbpwykebnmo , bbancyndzocpduglfsuz , clvpiacniynjpfucfknf , usstxkwvehsxfrchwzle ) ; vGroup . addGroup ( v1 ) ; ewtthkqvyszxbtattgjn . setVerticalGroup ( vGroup ) ; } <s> public static void setVertGroup ( javax.swing.GroupLayout ewtthkqvyszxbtattgjn , javax.swing.JScrollPane lifxqoatqfbpwykebnmo , javax.swing.JScrollPane ofnmfqdpttrtratwtwmr , javax.swing.JLabel clvpiacniynjpfucfknf , javax.swing.JLabel bbancyndzocpduglfsuz , javax.swing.JTextField usstxkwvehsxfrchwzle ) { javax.swing.GroupLayout.ParallelGroup vGroup = ewtthkqvyszxbtattgjn . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( ewtthkqvyszxbtattgjn , ofnmfqdpttrtratwtwmr , lifxqoatqfbpwykebnmo , bbancyndzocpduglfsuz , clvpiacniynjpfucfknf , usstxkwvehsxfrchwzle ) ; vGroup . addGroup ( v1 ) ; ewtthkqvyszxbtattgjn . setVerticalGroup ( vGroup ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
fix_before_refactoring: private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; }
fix_after_refactoring: private static void setVertGroup ( javax.swing.GroupLayout ewtthkqvyszxbtattgjn , javax.swing.JScrollPane lifxqoatqfbpwykebnmo , javax.swing.JScrollPane ofnmfqdpttrtratwtwmr , javax.swing.JLabel clvpiacniynjpfucfknf , javax.swing.JLabel bbancyndzocpduglfsuz , javax.swing.JTextField usstxkwvehsxfrchwzle ) { javax.swing.GroupLayout.ParallelGroup vGroup = ewtthkqvyszxbtattgjn . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( ewtthkqvyszxbtattgjn , ofnmfqdpttrtratwtwmr , lifxqoatqfbpwykebnmo , bbancyndzocpduglfsuz , clvpiacniynjpfucfknf , usstxkwvehsxfrchwzle ) ; vGroup . addGroup ( v1 ) ; ewtthkqvyszxbtattgjn . setVerticalGroup ( vGroup ) ; }
√ fix_prediction_before: private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; }
× fix_prediction_after: private static void setVertGroup ( javax.swing.GroupLayout id ) { javax.swing.GroupLayout.ParallelGroup vGroup = null ; if ( ( javax.swing.GroupLayout.Alignment.LEADING ) == null ) { return null ; } javax.swing.JScrollPane ofnmfqdpttrtratwtwmr , javax.swing.JLabel clvpiacniynjpfucLnf , javax.swing.JLabel bbancyndzocpduglfsuz , javax.swing.JTextField usstxkwvehsxfrchwzle ) { javax.swing.GroupLayout.ParallelGroup vGroup = new java.util.ArrayList < java.lang.String > () ; } javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( null , ofnmfqqpttrtratwtwmr , lifxqoatqfbpwykebnmo , bbancyndzocpduglfsuz , clvpiacniynjpfucLnf , usstxkwvehsxfrchwzle ) ; vGroup . addGroup ( v1 ) ; if ( vGroup != null ) { return null ; } }

line_index: 604
bug_before_refactoring: public static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> public static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
bug_after_refactoring: public static int getReceiverID ( byte [] jbczghnkhsewcqmykbur ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> public static int getReceiverID ( byte [] jbczghnkhsewcqmykbur ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
fix_before_refactoring: private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
fix_after_refactoring: private static int getReceiverID ( byte [] jbczghnkhsewcqmykbur ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
√ fix_prediction_before: private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
× fix_prediction_after: private static int getReceiverID ( byte [] jbczghnkhse createqmykbur ) { int start = start + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhse cqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }

