line_index: 6
bug_before_refactoring: private static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } } <s> private static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } } <s> Fixed strange bug where classes were loading with outdated info. Fixed bug where clicking save while editing a section without actually changing anything would cause a crash. Fixed a bug where schedules wouldn't update properly after changing a class's priority.
bug_after_refactoring: private static void releaseColor ( int ndeqeitbqvcptrvpksap , int mribfziqdrnbjcxjablx ) { switch ( mribfziqdrnbjcxjablx ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; } } <s> private static void releaseColor ( int ndeqeitbqvcptrvpksap , int mribfziqdrnbjcxjablx ) { switch ( mribfziqdrnbjcxjablx ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; } } <s> Fixed strange bug where classes were loading with outdated info. Fixed bug where clicking save while editing a section without actually changing anything would cause a crash. Fixed a bug where schedules wouldn't update properly after changing a class's priority.
fix_before_refactoring: public static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } }
fix_after_refactoring: public static void releaseColor ( int ndeqeitbqvcptrvpksap , int mribfziqdrnbjcxjablx ) { switch ( mribfziqdrnbjcxjablx ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; } }
√ fix_prediction_before: public static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } }
× fix_prediction_after: private static void releaseColor ( int ndeqeitbqvcptrvpksap , int mribfziqdrnbjcxjablx ) { switch ( mribfziqdrnbjcxjablx ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( ndeqeitbqvcptrvpksap ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( ndeqeitbqvcptrvpksap ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( ndeqeitbqvcptrvpksap ) ;

line_index: 12
bug_before_refactoring: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> fix bugy: FileID will not set if file is empty
bug_after_refactoring: private void upload ( com.webessay.model.Orders rmsrjpqridfrnrsvsdum , org.springframework.web.multipart.MultipartFile bpfzlhjlibziqdjifxtd ) throws java.lang.Exception { com.webessay.model.Uploadbpfzlhjlibziqdjifxtd entity = new com.webessay.model.Uploadbpfzlhjlibziqdjifxtd () ; entity . setFileContentType ( bpfzlhjlibziqdjifxtd . getContentType () ) ; entity . setFileName ( bpfzlhjlibziqdjifxtd . getOriginalFilename () ) ; entity . setFileSize ( bpfzlhjlibziqdjifxtd . getSize () ) ; entity . setFile ( bpfzlhjlibziqdjifxtd . getBytes () ) ; uploadrepo . save ( entity ) ; rmsrjpqridfrnrsvsdum . setFileId ( entity . getId () ) ; } <s> private void upload ( com.webessay.model.Orders rmsrjpqridfrnrsvsdum , org.springframework.web.multipart.MultipartFile bpfzlhjlibziqdjifxtd ) throws java.lang.Exception { com.webessay.model.Uploadbpfzlhjlibziqdjifxtd entity = new com.webessay.model.Uploadbpfzlhjlibziqdjifxtd () ; entity . setFileContentType ( bpfzlhjlibziqdjifxtd . getContentType () ) ; entity . setFileName ( bpfzlhjlibziqdjifxtd . getOriginalFilename () ) ; entity . setFileSize ( bpfzlhjlibziqdjifxtd . getSize () ) ; entity . setFile ( bpfzlhjlibziqdjifxtd . getBytes () ) ; uploadrepo . save ( entity ) ; rmsrjpqridfrnrsvsdum . setFileId ( entity . getId () ) ; } <s> fix bugy: FileID will not set if file is empty
fix_before_refactoring: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } }
fix_after_refactoring: private void upload ( com.webessay.model.Orders rmsrjpqridfrnrsvsdum , org.springframework.web.multipart.MultipartFile bpfzlhjlibziqdjifxtd ) throws java.lang.Exception { if ( ( bpfzlhjlibziqdjifxtd . getSize () ) > 0 ) { com.webessay.model.Uploadbpfzlhjlibziqdjifxtd entity = new com.webessay.model.Uploadbpfzlhjlibziqdjifxtd () ; entity . setFileContentType ( bpfzlhjlibziqdjifxtd . getContentType () ) ; entity . setFileName ( bpfzlhjlibziqdjifxtd . getOriginalFilename () ) ; entity . setFileSize ( bpfzlhjlibziqdjifxtd . getSize () ) ; entity . setFile ( bpfzlhjlibziqdjifxtd . getBytes () ) ; uploadrepo . save ( entity ) ; rmsrjpqridfrnrsvsdum . setFileId ( entity . getId () ) ; } }
√ fix_prediction_before: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } }
× fix_prediction_after: private void upload ( com.webessay.model.Orders rmsrjpqridfrnrsvsdum , org.springframework.web.multipart.MultipartFile bpfzlhjlibziqdjifxtd ) throws java.lang.Exception { com.webessay.model.Uploadbpfzlhjlibziqdjifxtd entity = new com.webessay.model.Uploadbpfzlhjlibziqdjifxtd () ; entity . setFileContentType ( bpfzlhjlibziqdjifxtd . getContentType () ) ; entity . setFileName ( bpfzlhjlibziqdjifxtd . getOriginalFilename () ) ; entity . setFileSize ( bpfzlhjlibziqdjifxtd . getSize () ) ; entity . setFile ( bpfzlhjlibziqdjifxtd . getBytes () ) ; uploadrepo . save ( entity ) ; rmsrjpqridfrnrsvsdum . setFileId ( entity . getId () ) ; }

line_index: 27
bug_before_refactoring: public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> bug fix
bug_after_refactoring: public void setFilename ( java.lang.String xzlcbiqdtxdljsjvfqsv ) { if ( xzlcbiqdtxdljsjvfqsv . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( xzlcbiqdtxdljsjvfqsv . substring ( 0 , ( ( xzlcbiqdtxdljsjvfqsv . length () ) - 3 ) ) ) ; else connField . setText ( xzlcbiqdtxdljsjvfqsv ) ; } <s> public void setFilename ( java.lang.String xzlcbiqdtxdljsjvfqsv ) { if ( xzlcbiqdtxdljsjvfqsv . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( xzlcbiqdtxdljsjvfqsv . substring ( 0 , ( ( xzlcbiqdtxdljsjvfqsv . length () ) - 3 ) ) ) ; else connField . setText ( xzlcbiqdtxdljsjvfqsv ) ; } <s> bug fix
fix_before_refactoring: public void setFilename ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } }
fix_after_refactoring: public void setFilename ( java.lang.String xzlcbiqdtxdljsjvfqsv ) { if ( xzlcbiqdtxdljsjvfqsv != null ) { if ( xzlcbiqdtxdljsjvfqsv . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( xzlcbiqdtxdljsjvfqsv . substring ( 0 , ( ( xzlcbiqdtxdljsjvfqsv . length () ) - 3 ) ) ) ; else connField . setText ( xzlcbiqdtxdljsjvfqsv ) ; } }
√ fix_prediction_before: public void setFilename ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } }
× fix_prediction_after: public void setFilename ( java.lang.String xzlcbiqdtxdljsjvfqsv ) { if ( xzlcbiqdtxdljsjvfqsv . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( xzlcbiqdtxdljsjvfqsv . substring ( 0 , ( ( xzlcbiqdtxdljsjvfqsv . length () ) - 3 ) ) ) ; else connField . setText ( xzlcbiqdtxdljsjvfqsv ) ; }

line_index: 51
bug_before_refactoring: protected void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> protected void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> Edit incident: Fix bugs
bug_after_refactoring: protected amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> protected amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> Edit incident: Fix bugs
fix_before_refactoring: public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
fix_after_refactoring: public amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
√ fix_prediction_before: public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
× fix_prediction_after: protected amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; return true ; }

line_index: 53
bug_before_refactoring: public int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> public int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> fixbug
bug_after_refactoring: publiojlydnxwlurtfduslbtm int ojlydnxwlurtfduslbtmharCode ( ojlydnxwlurtfduslbtmhar ojlydnxwlurtfduslbtm ) { if ( java.lang.Charaojlydnxwlurtfduslbtmter . isLetter ( ojlydnxwlurtfduslbtm ) ) { return ( ojlydnxwlurtfduslbtm - 'A' ) + 1 ; } if ( ojlydnxwlurtfduslbtm == '[' ) return 27 ; if ( ojlydnxwlurtfduslbtm == '\\' ) return 28 ; if ( ojlydnxwlurtfduslbtm == ']' ) return 29 ; if ( ojlydnxwlurtfduslbtm == '^' ) return 30 ; if ( ojlydnxwlurtfduslbtm == '_' ) return 31 ; throw new java.lang.RuntimeExojlydnxwlurtfduslbtmeption ( ( "error ojlydnxwlurtfduslbtmhar: " + ojlydnxwlurtfduslbtm ) ) ; } <s> publiojlydnxwlurtfduslbtm int ojlydnxwlurtfduslbtmharCode ( ojlydnxwlurtfduslbtmhar ojlydnxwlurtfduslbtm ) { if ( java.lang.Charaojlydnxwlurtfduslbtmter . isLetter ( ojlydnxwlurtfduslbtm ) ) { return ( ojlydnxwlurtfduslbtm - 'A' ) + 1 ; } if ( ojlydnxwlurtfduslbtm == '[' ) return 27 ; if ( ojlydnxwlurtfduslbtm == '\\' ) return 28 ; if ( ojlydnxwlurtfduslbtm == ']' ) return 29 ; if ( ojlydnxwlurtfduslbtm == '^' ) return 30 ; if ( ojlydnxwlurtfduslbtm == '_' ) return 31 ; throw new java.lang.RuntimeExojlydnxwlurtfduslbtmeption ( ( "error ojlydnxwlurtfduslbtmhar: " + ojlydnxwlurtfduslbtm ) ) ; } <s> fixbug
fix_before_refactoring: private int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }
fix_after_refactoring: private int ojlydnxwlurtfduslbtmharCode ( ojlydnxwlurtfduslbtmhar ojlydnxwlurtfduslbtm ) { if ( java.lang.Charaojlydnxwlurtfduslbtmter . isLetter ( ojlydnxwlurtfduslbtm ) ) { return ( ojlydnxwlurtfduslbtm - 'A' ) + 1 ; } if ( ojlydnxwlurtfduslbtm == '[' ) return 27 ; if ( ojlydnxwlurtfduslbtm == '\\' ) return 28 ; if ( ojlydnxwlurtfduslbtm == ']' ) return 29 ; if ( ojlydnxwlurtfduslbtm == '^' ) return 30 ; if ( ojlydnxwlurtfduslbtm == '_' ) return 31 ; throw new java.lang.RuntimeExojlydnxwlurtfduslbtmeption ( ( "error ojlydnxwlurtfduslbtmhar: " + ojlydnxwlurtfduslbtm ) ) ; }
√ fix_prediction_before: private int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }
× fix_prediction_after: publiojlydnxwlurtfduslbtm int ojlydnxwlurtfduslbtmharCode ( ojlydnxwlurtfduslbtmhar ojlydnxwlurtfduslbtm ) { if ( java.lang.Charaojlydnxwlurtfduslbtmter . isLetter ( ojlydnxwlurtfduslbtmhar ojlydnxwlurtfduslbtm ) ) { return ( ojlydnxwlurtfduslbtmter . isLetter ( ojlydnxwlurtfduslbtm ) ) ; } if ( ojlydnxwlurtfduslbtmter . '[' ) return 28 ; if ( ojlydnxwlurtfduslbtm == ']' ) return 29 ; if ( ojlydnxwlfduslbtm == '^' ) return 30 ; if ( ojlydnxwlurtfduslbtm == '_' ) return 31 ; throw new java.lang.RuntimeExojlydnxwlurtfduslbtmeption ( ( "error ojlydnxwlurtfduslbtmhar: "

line_index: 74
bug_before_refactoring: public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> fixed other bugs
bug_after_refactoring: public void startService ( final int ruoydphoeuvwxoesvzgl ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "ruoydphoeuvwxoesvzgl" , ruoydphoeuvwxoesvzgl ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> public void startService ( final int ruoydphoeuvwxoesvzgl ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "ruoydphoeuvwxoesvzgl" , ruoydphoeuvwxoesvzgl ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> fixed other bugs
fix_before_refactoring: private void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
fix_after_refactoring: private void startService ( final int ruoydphoeuvwxoesvzgl ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "ruoydphoeuvwxoesvzgl" , ruoydphoeuvwxoesvzgl ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
√ fix_prediction_before: private void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
× fix_prediction_after: public void startService ( final int ruoydphoeuvwxoesvzgl ) { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "ruoydphoeuvwxoesvzgl" , ruoydphoeuvwxoesvzgl ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } }

line_index: 77
bug_before_refactoring: public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } <s> public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } <s> add file creating and fix refreshList() invalid bug
bug_after_refactoring: public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > ijpqkatfnlnsxavzltxg ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; ijpqkatfnlnsxavzltxg . add ( 0 , upperFile ) ; return ijpqkatfnlnsxavzltxg ; } <s> public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > ijpqkatfnlnsxavzltxg ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; ijpqkatfnlnsxavzltxg . add ( 0 , upperFile ) ; return ijpqkatfnlnsxavzltxg ; } <s> add file creating and fix refreshList() invalid bug
fix_before_refactoring: private java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
fix_after_refactoring: private java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > ijpqkatfnlnsxavzltxg ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; ijpqkatfnlnsxavzltxg . add ( 0 , upperFile ) ; return ijpqkatfnlnsxavzltxg ; }
√ fix_prediction_before: private java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
× fix_prediction_after: public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > ijpqkatfnlnsxavzltxg ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; return ijpqkatfnlnsxavzltxg ; }

line_index: 93
bug_before_refactoring: public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> Fix a bug that was preventing the puzzle to be solved correctly; add comments
bug_after_refactoring: public int ppxvzewijccaqxmzxshkContains ( int ppxvzewijccaqxmzxshk , int basppkqzgnardcwokikf ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ ppxvzewijccaqxmzxshk ] . value ) == basppkqzgnardcwokikf ) count ++ ; } return count ; } <s> public int ppxvzewijccaqxmzxshkContains ( int ppxvzewijccaqxmzxshk , int basppkqzgnardcwokikf ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ ppxvzewijccaqxmzxshk ] . value ) == basppkqzgnardcwokikf ) count ++ ; } return count ; } <s> Fix a bug that was preventing the puzzle to be solved correctly; add comments
fix_before_refactoring: public int colContains ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; }
fix_after_refactoring: public int ppxvzewijccaqxmzxshkContains ( int x , int basppkqzgnardcwokikf ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == basppkqzgnardcwokikf ) count ++ ; } return count ; }
√ fix_prediction_before: public int colContains ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; }
× fix_prediction_after: public int ppxvzewijccaqxmzxshkContains ( int ppxvzewijccaqxmzxshk , int basppkqzgnardcwokikf ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ ppxvzewijccaqxmzxshk ] . value ) == basppkqzgnardcwokikf ) count ++ ; } return count ; }

line_index: 120
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> Addictions and everything is being retrieved now upon Login Calendar Activity fixeddashboad button problem Renamed Views Addictions Deletion is Dynamic now but ONLY inside the ListViewAdapters  Map Adapters bulbs are working also Addictions are being added dynamically too now Deleting user event/ven/org/artist needs fixing?
bug_after_refactoring: @ jaqtppcypvacclcbdasutea.lang.Oqtppcypvacclcbdasuteerride public qtppcypvacclcbdasuteoid onClick ( android.qtppcypvacclcbdasuteiew.View qtppcypvacclcbdasute ) { jaqtppcypvacclcbdasutea.lang.String x = retrieqtppcypvacclcbdasuteeMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActiqtppcypvacclcbdasuteity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remoqtppcypvacclcbdasutee ( position ) ; notifyDataSetChanged () ; } } <s> @ jaqtppcypvacclcbdasutea.lang.Oqtppcypvacclcbdasuteerride public qtppcypvacclcbdasuteoid onClick ( android.qtppcypvacclcbdasuteiew.View qtppcypvacclcbdasute ) { jaqtppcypvacclcbdasutea.lang.String x = retrieqtppcypvacclcbdasuteeMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActiqtppcypvacclcbdasuteity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remoqtppcypvacclcbdasutee ( position ) ; notifyDataSetChanged () ; } } <s> Addictions and everything is being retrieved now upon Login Calendar Activity fixeddashboad button problem Renamed Views Addictions Deletion is Dynamic now but ONLY inside the ListViewAdapters  Map Adapters bulbs are working also Addictions are being added dynamically too now Deleting user event/ven/org/artist needs fixing?
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
fix_after_refactoring: @ jaqtppcypvacclcbdasutea.lang.Oqtppcypvacclcbdasuteerride public qtppcypvacclcbdasuteoid onClick ( android.qtppcypvacclcbdasuteiew.View qtppcypvacclcbdasute ) { jaqtppcypvacclcbdasutea.lang.String x = retrieqtppcypvacclcbdasuteeMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActiqtppcypvacclcbdasuteity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remoqtppcypvacclcbdasutee ( position ) ; notifyDataSetChanged () ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
× fix_prediction_after: @ jaqtppcypvacclcbdasutea.lang.Oqtppcypvacclcbdasuteerride public qtppcypvacclcbdasuteoid onClick ( android.qtppcypvacclcbdasuteiew.View qtppcypvacclcbdasute ) { jaqtppcypvacclcbdasutea.lang.String x = retrieqtppcypvacclcbdasuteeMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActiqtppcypvacclcbdasuteity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remoqtppcypvacclcbdasutee ( position ) ; notifyDataSetChanged () ; }

line_index: 128
bug_before_refactoring: static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; } <s> static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; } <s> Fix case-sensitivity issues
bug_after_refactoring: static zibebactoyglehsmdftzqrybkwmbtsdmedqfvmiooyglehsmdftzqrybkwmbtean cypher ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.PsiBuiyglehsmdftzqrybkwmbtder zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , int yglehsmdftzqrybkwmbt ) { if ( ! ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . recursion_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , yglehsmdftzqrybkwmbt , "cypher" ) ) ) return fayglehsmdftzqrybkwmbtse ; int c = com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; whiyglehsmdftzqrybkwmbte ( true ) { if ( ! ( com.neueda.jetzibebactoyglehsmdftzqrybkwmbtsdmedqfvmirains.pyglehsmdftzqrybkwmbtugin.graphdzibebactoyglehsmdftzqrybkwmbtsdmedqfvmi.yglehsmdftzqrybkwmbtanguage.cypher.parser.CypherParser . StatementItem ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , ( yglehsmdftzqrybkwmbt + 1 ) ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; if ( ! ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . empty_eyglehsmdftzqrybkwmbtement_parsed_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , "cypher" , c ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; c = com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; } return true ; } <s> static zibebactoyglehsmdftzqrybkwmbtsdmedqfvmiooyglehsmdftzqrybkwmbtean cypher ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.PsiBuiyglehsmdftzqrybkwmbtder zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , int yglehsmdftzqrybkwmbt ) { if ( ! ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . recursion_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , yglehsmdftzqrybkwmbt , "cypher" ) ) ) return fayglehsmdftzqrybkwmbtse ; int c = com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; whiyglehsmdftzqrybkwmbte ( true ) { if ( ! ( com.neueda.jetzibebactoyglehsmdftzqrybkwmbtsdmedqfvmirains.pyglehsmdftzqrybkwmbtugin.graphdzibebactoyglehsmdftzqrybkwmbtsdmedqfvmi.yglehsmdftzqrybkwmbtanguage.cypher.parser.CypherParser . StatementItem ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , ( yglehsmdftzqrybkwmbt + 1 ) ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; if ( ! ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . empty_eyglehsmdftzqrybkwmbtement_parsed_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , "cypher" , c ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; c = com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; } return true ; } <s> Fix case-sensitivity issues
fix_before_refactoring: static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; }
fix_after_refactoring: static zibebactoyglehsmdftzqrybkwmbtsdmedqfvmiooyglehsmdftzqrybkwmbtean cypher ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.PsiBuiyglehsmdftzqrybkwmbtder zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , int yglehsmdftzqrybkwmbt ) { if ( ! ( recursion_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , yglehsmdftzqrybkwmbt , "cypher" ) ) ) return fayglehsmdftzqrybkwmbtse ; int c = current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; whiyglehsmdftzqrybkwmbte ( true ) { if ( ! ( com.neueda.jetzibebactoyglehsmdftzqrybkwmbtsdmedqfvmirains.pyglehsmdftzqrybkwmbtugin.graphdzibebactoyglehsmdftzqrybkwmbtsdmedqfvmi.yglehsmdftzqrybkwmbtanguage.cypher.parser.CypherParser . StatementItem ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , ( yglehsmdftzqrybkwmbt + 1 ) ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; if ( ! ( empty_eyglehsmdftzqrybkwmbtement_parsed_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , "cypher" , c ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; c = current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; } return true ; }
√ fix_prediction_before: static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; }
× fix_prediction_after: static zibebactoyglehsmdftzqrybkwmbtsdmedqfvmiooyglehsmdftzqrybkwmbtean cypher ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.PsiBuiyglehsmdftzqrybkwmbtder zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , int yglehsmdftzqrybkwmbt ) { if ( ! ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtder zibebactoyglehsmdftzqrybkwmbmt.SERatedParserUtiyglehsmdftzqrybkwmbmt.parser.GeneratedParserUtiyglehsmdftzqry

line_index: 157
bug_before_refactoring: protected void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> protected void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> fixed final bug before first run
bug_after_refactoring: protected void bleCharacteristicRead ( java.lang.String purnyixncmcdnfkqhupf , java.lang.String woztylegebnutzymwjqj , int bzoeizflcjrmjmyzwvgy , byte [] dcjxzketntavzvrcrgav ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , purnyixncmcdnfkqhupf ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , woztylegebnutzymwjqj ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , bzoeizflcjrmjmyzwvgy ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , dcjxzketntavzvrcrgav ) ; sendBroadcast ( intent ) ; requestProcessed ( purnyixncmcdnfkqhupf , RequestType.READ_CHARACTERISTIC , true ) ; } <s> protected void bleCharacteristicRead ( java.lang.String purnyixncmcdnfkqhupf , java.lang.String woztylegebnutzymwjqj , int bzoeizflcjrmjmyzwvgy , byte [] dcjxzketntavzvrcrgav ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , purnyixncmcdnfkqhupf ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , woztylegebnutzymwjqj ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , bzoeizflcjrmjmyzwvgy ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , dcjxzketntavzvrcrgav ) ; sendBroadcast ( intent ) ; requestProcessed ( purnyixncmcdnfkqhupf , RequestType.READ_CHARACTERISTIC , true ) ; } <s> fixed final bug before first run
fix_before_refactoring: public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; }
fix_after_refactoring: public void bleCharacteristicRead ( java.lang.String purnyixncmcdnfkqhupf , java.lang.String woztylegebnutzymwjqj , int bzoeizflcjrmjmyzwvgy , byte [] dcjxzketntavzvrcrgav ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , purnyixncmcdnfkqhupf ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , woztylegebnutzymwjqj ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , bzoeizflcjrmjmyzwvgy ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , dcjxzketntavzvrcrgav ) ; sendBroadcast ( intent ) ; requestProcessed ( purnyixncmcdnfkqhupf , RequestType.READ_CHARACTERISTIC , true ) ; }
√ fix_prediction_before: public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; }
× fix_prediction_after: public void bleCharacteristicRead ( java.lang.String purnyixncmcdnfkqhupf , java.lang.String woztylegebnutzymwjqj , int bzoeizflcjrmjmyzwvgy , byte [] dcjxzketntavzvrcrgav ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , purnyixncmcdnfkqhupf ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , woztylegebnutzymwjqj ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , bzoeizflcjrmjmyzwvgy ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.

line_index: 164
bug_before_refactoring: public void spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> public void spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> Wayfinder img cache issue test fix 001
bug_after_refactoring: public void spawnSouth ( int ysgwjaiodnziwehberjv , int ilrscknbkrhvdlnxijju , int skvpdpcrhqebbaitwpzu ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( ysgwjaiodnziwehberjv - ( ( this . getSouth () . getWidth () ) / 2 ) ) , ilrscknbkrhvdlnxijju , this . getSouth () . getWidth () , skvpdpcrhqebbaitwpzu , null ) ; updateGeneratedImage () ; } <s> public void spawnSouth ( int ysgwjaiodnziwehberjv , int ilrscknbkrhvdlnxijju , int skvpdpcrhqebbaitwpzu ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( ysgwjaiodnziwehberjv - ( ( this . getSouth () . getWidth () ) / 2 ) ) , ilrscknbkrhvdlnxijju , this . getSouth () . getWidth () , skvpdpcrhqebbaitwpzu , null ) ; updateGeneratedImage () ; } <s> Wayfinder img cache issue test fix 001
fix_before_refactoring: public java.lang.String spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
fix_after_refactoring: public java.lang.String spawnSouth ( int ysgwjaiodnziwehberjv , int ilrscknbkrhvdlnxijju , int skvpdpcrhqebbaitwpzu ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( ysgwjaiodnziwehberjv - ( ( this . getSouth () . getWidth () ) / 2 ) ) , ilrscknbkrhvdlnxijju , this . getSouth () . getWidth () , skvpdpcrhqebbaitwpzu , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
√ fix_prediction_before: public java.lang.String spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
× fix_prediction_after: public java.lang.String spawnSouth ( int ysgwjaiodnziwehberjv , int ilrscknbkrhvdlnxijju , int skvpdpcrhqebbaitwpzu ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( ysgwjaiodnziwehberjv - ( ( this . getSouth () . getWidth () ) / 2 ) ) , ilrscknbkrhvdlnxijju , this . getSouth () . getWidth () , skvpdpcrhqebbaitwpzu , null ) ; updateGeneratedImage () ; return null ; }

line_index: 168
bug_before_refactoring: public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
bug_after_refactoring: public static boolean deletePhSensor ( final java.lang.String pmoitibchtutujqvjybs ) { java.lang.String realName = pmoitibchtutujqvjybs . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> public static boolean deletePhSensor ( final java.lang.String pmoitibchtutujqvjybs ) { java.lang.String realName = pmoitibchtutujqvjybs . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
fix_before_refactoring: public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; }
fix_after_refactoring: public static boolean deletePhSensor ( final java.lang.String pmoitibchtutujqvjybs ) { java.lang.String realName = pmoitibchtutujqvjybs . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; }
√ fix_prediction_before: public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; }
× fix_prediction_after: public static boolean deletePhSensor ( final java.lang.String pmoitibchtutujqvjybs ) { java.lang.String realName = pmoitibchtutujqvjybs . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; }

line_index: 201
bug_before_refactoring: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> Fixed errors when editing
bug_after_refactoring: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > aaylbhxbyyjcanhkzxys ) { try { java.util.List < java.util.Date > dateList = aaylbhxbyyjcanhkzxys . get () ; if ( ( dateList . size () ) == 2 ) { this . aaylbhxbyyjcanhkzxys = java.util.Optional . of ( aaylbhxbyyjcanhkzxys . get () . get ( 0 ) ) ; } else { this . aaylbhxbyyjcanhkzxys = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > aaylbhxbyyjcanhkzxys ) { try { java.util.List < java.util.Date > dateList = aaylbhxbyyjcanhkzxys . get () ; if ( ( dateList . size () ) == 2 ) { this . aaylbhxbyyjcanhkzxys = java.util.Optional . of ( aaylbhxbyyjcanhkzxys . get () . get ( 0 ) ) ; } else { this . aaylbhxbyyjcanhkzxys = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> Fixed errors when editing
fix_before_refactoring: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { this . startDate = java.util.Optional . empty () ; } }
fix_after_refactoring: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > aaylbhxbyyjcanhkzxys ) { try { java.util.List < java.util.Date > dateList = aaylbhxbyyjcanhkzxys . get () ; if ( ( dateList . size () ) == 2 ) { this . aaylbhxbyyjcanhkzxys = java.util.Optional . of ( aaylbhxbyyjcanhkzxys . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { this . aaylbhxbyyjcanhkzxys = java.util.Optional . empty () ; } }
√ fix_prediction_before: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { this . startDate = java.util.Optional . empty () ; } }
× fix_prediction_after: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > aaylbhxbyyjcanhkzxys ) { try { java.util.List < java.util.Date > dateList = aaylbhxbyyjcanhkzxys . get () ; if ( ( dateList . size () ) == 2 ) { this . aaylbhxbyyjcanhkzxys = java.util.Optional . of ( aaylbhxbyyjcanhkzxys . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } }

line_index: 226
bug_before_refactoring: public void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> public void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> sonar issue fixed
bug_after_refactoring: public void show404 ( javax.servlet.http.HttpServletRequest cqirxllbuukqlzaxjvjg , javax.servlet.http.HttpServletResponse icmltajnfshzhkbvjioe ) throws java.io.IOException , javax.servlet.ServletException { icmltajnfshzhkbvjioe . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; cqirxllbuukqlzaxjvjg . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = cqirxllbuukqlzaxjvjg . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( cqirxllbuukqlzaxjvjg , icmltajnfshzhkbvjioe ) ; } <s> public void show404 ( javax.servlet.http.HttpServletRequest cqirxllbuukqlzaxjvjg , javax.servlet.http.HttpServletResponse icmltajnfshzhkbvjioe ) throws java.io.IOException , javax.servlet.ServletException { icmltajnfshzhkbvjioe . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; cqirxllbuukqlzaxjvjg . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = cqirxllbuukqlzaxjvjg . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( cqirxllbuukqlzaxjvjg , icmltajnfshzhkbvjioe ) ; } <s> sonar issue fixed
fix_before_refactoring: protected void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
fix_after_refactoring: protected void show404 ( javax.servlet.http.HttpServletRequest cqirxllbuukqlzaxjvjg , javax.servlet.http.HttpServletResponse icmltajnfshzhkbvjioe ) throws java.io.IOException , javax.servlet.ServletException { icmltajnfshzhkbvjioe . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; cqirxllbuukqlzaxjvjg . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = cqirxllbuukqlzaxjvjg . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( cqirxllbuukqlzaxjvjg , icmltajnfshzhkbvjioe ) ; }
√ fix_prediction_before: protected void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
× fix_prediction_after: public void show404 ( javax.servlet.http.HttpServletRequest cqirxllbuukqlzaxjvjg , javax.servlet.http.HttpServletResponse icmltajnfshzhkbvjioe ) throws java.io.IOException , javax.servlet.ServletException { icmltajnfshzhkbvjioe . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; cqirxllbuukqlzaxjvjg . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = cqirxllbuukqlzaxjvjg . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( cqirxllbuukqlzaxjg , icmltajnfshzhkbvjioe ) ; }

line_index: 249
bug_before_refactoring: private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> resolved Issue  #11 refactor TDDTCompiler adjust TDDTCompiler tests fixed GUI-flow on change of RED to GREEN (check test) probably needs some refactoring in TDDTCompiler itself for fixing double compile
bug_after_refactoring: private boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> private boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> resolved Issue  #11 refactor TDDTCompiler adjust TDDTCompiler tests fixed GUI-flow on change of RED to GREEN (check test) probably needs some refactoring in TDDTCompiler itself for fixing double compile
fix_before_refactoring: public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
fix_after_refactoring: public boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
√ fix_prediction_before: public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
× fix_prediction_after: private boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }

line_index: 295
bug_before_refactoring: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } } <s> void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } } <s> [BUG#73079] Deadlock between event processing and bundle resolve  Remove synchronized blocks as we have ConcurrentMaps as the impl. Should be sufficient
bug_after_refactoring: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState jpiwymetwvplbegxtwat , final org.osgi.framework.BundleListener fyvxagxgannqwkvtizqv ) { if ( fyvxagxgannqwkvtizqv == null ) throw new java.lang.IllegalArgumentException ( "Null fyvxagxgannqwkvtizqv" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > fyvxagxgannqwkvtizqvs = bundleListeners . get ( jpiwymetwvplbegxtwat ) ; if ( fyvxagxgannqwkvtizqvs != null ) { if ( ( fyvxagxgannqwkvtizqvs . size () ) > 1 ) fyvxagxgannqwkvtizqvs . remove ( fyvxagxgannqwkvtizqv ) ; else removeBundleListeners ( jpiwymetwvplbegxtwat ) ; } } } <s> void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState jpiwymetwvplbegxtwat , final org.osgi.framework.BundleListener fyvxagxgannqwkvtizqv ) { if ( fyvxagxgannqwkvtizqv == null ) throw new java.lang.IllegalArgumentException ( "Null fyvxagxgannqwkvtizqv" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > fyvxagxgannqwkvtizqvs = bundleListeners . get ( jpiwymetwvplbegxtwat ) ; if ( fyvxagxgannqwkvtizqvs != null ) { if ( ( fyvxagxgannqwkvtizqvs . size () ) > 1 ) fyvxagxgannqwkvtizqvs . remove ( fyvxagxgannqwkvtizqv ) ; else removeBundleListeners ( jpiwymetwvplbegxtwat ) ; } } } <s> [BUG#73079] Deadlock between event processing and bundle resolve  Remove synchronized blocks as we have ConcurrentMaps as the impl. Should be sufficient
fix_before_refactoring: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } }
fix_after_refactoring: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState jpiwymetwvplbegxtwat , final org.osgi.framework.BundleListener fyvxagxgannqwkvtizqv ) { if ( fyvxagxgannqwkvtizqv == null ) throw new java.lang.IllegalArgumentException ( "Null fyvxagxgannqwkvtizqv" ) ; java.util.List < org.osgi.framework.BundleListener > fyvxagxgannqwkvtizqvs = bundleListeners . get ( jpiwymetwvplbegxtwat ) ; if ( fyvxagxgannqwkvtizqvs != null ) { if ( ( fyvxagxgannqwkvtizqvs . size () ) > 1 ) fyvxagxgannqwkvtizqvs . remove ( fyvxagxgannqwkvtizqv ) ; else removeBundleListeners ( jpiwymetwvplbegxtwat ) ; } }
√ fix_prediction_before: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } }
× fix_prediction_after: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState jpiwymetwvplbegxtwat , final org.osgi.framework.BundleListener fyvxagxgannqwkvtizqv ) { if ( fyvxagxgannqwkvtizqv == null ) throw new java.lang.IllegalArgumentException ( "Null fyvxagxgannqwkvtizqv" ) ; java.util.List < org.osgi.framework.BundleListener > fyvxagxgannqwkvtizqvs = bundleListeners . get ( jpiwymetwvplbegxtwat ) ; if ( fyvxagxgannqwkvtizqvs != null ) { if ( ( fyvxagxgannqwkvtizqvs . size () ) > 1 ) fyvxagxgannqwkvtizqvs . remove ( fyvxagxgannqwkvtizqvs . size () ) ; fyvxagxgannqwkvtiz

line_index: 320
bug_before_refactoring: public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } } <s> public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } } <s> bigbluebutton-web: Fixed issue with recordings not publishing/unpublishing
bug_after_refactoring: public void changeState ( java.lang.String paenzwbddtgratecbwxy , java.lang.String vrqhwpiknrdukmskxtxa ) { if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } else if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; changeState ( unpublishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; changeState ( deletedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } } <s> public void changeState ( java.lang.String paenzwbddtgratecbwxy , java.lang.String vrqhwpiknrdukmskxtxa ) { if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } else if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; changeState ( unpublishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; changeState ( deletedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } } <s> bigbluebutton-web: Fixed issue with recordings not publishing/unpublishing
fix_before_refactoring: public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } }
fix_after_refactoring: public void changeState ( java.lang.String paenzwbddtgratecbwxy , java.lang.String vrqhwpiknrdukmskxtxa ) { if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } else if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } else if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; changeState ( unpublishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; changeState ( deletedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } }
√ fix_prediction_before: public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } }
× fix_prediction_after: public void changeState ( java.lang.String paenzwbddtgratecbwxy , java.lang.String vrqhwpiknrdukmskxtxa ) { if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } else if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; } else if ( vrqhwpiknrdukmskxtxa . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , paenzwbddtgratecbwxy , vrqhwpiknrdukmskxtxa ) ; changeState ( unpublishedDir , paenzwbddtgratecbwxy , vrqhwpiknrduk

line_index: 345
bug_before_refactoring: private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> Bugfixes und experimentelles starten des Servers mit Jsch entfernt
bug_after_refactoring: prihtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui ( android.os.Bundle emcrnzmbhpjwttwdfugu ) { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout nahtafhngwkdfuswdhskpmHeader = ( ( android.widget.LinearLayout ) ( nahtafhngwkdfuswdhskpmView . getHeaderView ( 0 ) ) ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpma.lang.Ohtafhngwkdfuswdhskpmerride public htafhngwkdfuswdhskpmoid onClick ( android.htafhngwkdfuswdhskpmiew.View htafhngwkdfuswdhskpm ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GrahtafhngwkdfuswdhskpmityCompat.START ) ; } } ) ; } <s> prihtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui ( android.os.Bundle emcrnzmbhpjwttwdfugu ) { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout nahtafhngwkdfuswdhskpmHeader = ( ( android.widget.LinearLayout ) ( nahtafhngwkdfuswdhskpmView . getHeaderView ( 0 ) ) ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpma.lang.Ohtafhngwkdfuswdhskpmerride public htafhngwkdfuswdhskpmoid onClick ( android.htafhngwkdfuswdhskpmiew.View htafhngwkdfuswdhskpm ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GrahtafhngwkdfuswdhskpmityCompat.START ) ; } } ) ; } <s> Bugfixes und experimentelles starten des Servers mit Jsch entfernt
fix_before_refactoring: private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
fix_after_refactoring: prihtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui () { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout nahtafhngwkdfuswdhskpmHeader = ( ( android.widget.LinearLayout ) ( nahtafhngwkdfuswdhskpmView . getHeaderView ( 0 ) ) ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpma.lang.Ohtafhngwkdfuswdhskpmerride public htafhngwkdfuswdhskpmoid onClick ( android.htafhngwkdfuswdhskpmiew.View htafhngwkdfuswdhskpm ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GrahtafhngwkdfuswdhskpmityCompat.START ) ; } } ) ; }
√ fix_prediction_before: private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
× fix_prediction_after: prihtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui () { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; }

line_index: 362
bug_before_refactoring: private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> fixed bugs  added more tests
bug_after_refactoring: private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode dgxisswizsdwfwsclyfx ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( dgxisswizsdwfwsclyfx.left ) != null ) { leftDepth = depth ( dgxisswizsdwfwsclyfx.left ) ; } if ( ( dgxisswizsdwfwsclyfx.right ) != null ) { rightDepth = depth ( dgxisswizsdwfwsclyfx.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode dgxisswizsdwfwsclyfx ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( dgxisswizsdwfwsclyfx.left ) != null ) { leftDepth = depth ( dgxisswizsdwfwsclyfx.left ) ; } if ( ( dgxisswizsdwfwsclyfx.right ) != null ) { rightDepth = depth ( dgxisswizsdwfwsclyfx.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> fixed bugs  added more tests
fix_before_refactoring: protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
fix_after_refactoring: protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode dgxisswizsdwfwsclyfx ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( dgxisswizsdwfwsclyfx.left ) != null ) { leftDepth = depth ( dgxisswizsdwfwsclyfx.left ) ; } if ( ( dgxisswizsdwfwsclyfx.right ) != null ) { rightDepth = depth ( dgxisswizsdwfwsclyfx.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
√ fix_prediction_before: protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
× fix_prediction_after: private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode dgxisswizsdwfwsclyfx ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( dgxisswizsdwfwsclyfx.left ) != null ) { leftDepth = depth ( dgxisswizsdwfwsclyfx.left ) ; } if ( ( dgxisswizsdwfwsclyfx.right ) != null ) { rightDepth = depth ( dgxisswizsdwfwsclyfx.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }

line_index: 377
bug_before_refactoring: @ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> @ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> [MB-1436] Fix lint issues
bug_after_refactoring: @ java.lang.Override public void onAttach ( android.app.Activity xpzwbvkitqpelyisnffm ) { super . onAttach ( xpzwbvkitqpelyisnffm ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( xpzwbvkitqpelyisnffm ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> @ java.lang.Override public void onAttach ( android.app.Activity xpzwbvkitqpelyisnffm ) { super . onAttach ( xpzwbvkitqpelyisnffm ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( xpzwbvkitqpelyisnffm ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> [MB-1436] Fix lint issues
fix_before_refactoring: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void onAttach ( android.app.Activity xpzwbvkitqpelyisnffm ) { super . onAttach ( xpzwbvkitqpelyisnffm ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( xpzwbvkitqpelyisnffm ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }

line_index: 404
bug_before_refactoring: private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> bug gefixt met betalen en shoppingcart
bug_after_refactoring: private void NewCookie ( javax.servlet.http.HttpServletResponse uxjtulvtqskcqvkfpbyf ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; uxjtulvtqskcqvkfpbyf . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> private void NewCookie ( javax.servlet.http.HttpServletResponse uxjtulvtqskcqvkfpbyf ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; uxjtulvtqskcqvkfpbyf . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> bug gefixt met betalen en shoppingcart
fix_before_refactoring: public void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
fix_after_refactoring: public void NewCookie ( javax.servlet.http.HttpServletResponse uxjtulvtqskcqvkfpbyf ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; uxjtulvtqskcqvkfpbyf . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
√ fix_prediction_before: public void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
× fix_prediction_after: private void NewCookie ( javax.servlet.http.HttpServletResponse uxjtulvtqskcqvkfpbyf ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; uxjtulvtqskcqvkfpbyf . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }

line_index: 418
bug_before_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
bug_after_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbwbkjgipavcxsp , java.io.PrintWriter gbziwcyuzompgkjjqdzt ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbwbkjgipavcxsp , java.io.PrintWriter gbziwcyuzompgkjjqdzt ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
fix_before_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
fix_after_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbwbkjgipavcxsp ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
√ fix_prediction_before: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
× fix_prediction_after: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbwbkjgipavcxsp , java.io.PrintWriter gbziwcyuzompgkjjqdzt ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }

line_index: 432
bug_before_refactoring: public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> Handle Permission request and Fixed bug
bug_after_refactoring: public jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; } <s> public jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; } <s> Handle Permission request and Fixed bug
fix_before_refactoring: private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
fix_after_refactoring: private jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; }
√ fix_prediction_before: private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
× fix_prediction_after: private jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq . getSheets () . length ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; }

line_index: 452
bug_before_refactoring: private static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> private static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> fix a bug
bug_after_refactoring: private static void post ( java.lang.String qstpmldwgdgdlmtihwwf , java.lang.String vyvldckpwuiwesihynfi , com.chinamobile.iot.onenet.OneNetApiCallback vxoitfgvpjsxkmymosbw ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , vyvldckpwuiwesihynfi ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( qstpmldwgdgdlmtihwwf , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( vxoitfgvpjsxkmymosbw ) ) ; } <s> private static void post ( java.lang.String qstpmldwgdgdlmtihwwf , java.lang.String vyvldckpwuiwesihynfi , com.chinamobile.iot.onenet.OneNetApiCallback vxoitfgvpjsxkmymosbw ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , vyvldckpwuiwesihynfi ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( qstpmldwgdgdlmtihwwf , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( vxoitfgvpjsxkmymosbw ) ) ; } <s> fix a bug
fix_before_refactoring: public static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
fix_after_refactoring: public static void post ( java.lang.String qstpmldwgdgdlmtihwwf , java.lang.String vyvldckpwuiwesihynfi , com.chinamobile.iot.onenet.OneNetApiCallback vxoitfgvpjsxkmymosbw ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , vyvldckpwuiwesihynfi ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( qstpmldwgdgdlmtihwwf , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( vxoitfgvpjsxkmymosbw ) ) ; }
√ fix_prediction_before: public static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
× fix_prediction_after: private static void post ( java.lang.String qstpmldwgdlmtihwwf , java.lang.String vyvldckpwuiwesihynfi , com.chinamobile.iot.onenet.OneNetApiCallback vxoitfgvpjsxkmymosbw ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , vyvldckpwuiwesihynfi ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( qstpmldwgdlmtihwwf , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( vxoitfgvpvpvp

line_index: 464
bug_before_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; } <s> protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; } <s> * Fixes rotation scaling and   * Fixed rotation scaling issues * Fixed rotation being additive on some devices
bug_after_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz , @ android.support.annotation.NonNull android.graphics.Matrix xiiyrgqocerhlwhyfyog ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xiiyrgqocerhlwhyfyog , xScale , yScale ) ; } <s> protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz , @ android.support.annotation.NonNull android.graphics.Matrix xiiyrgqocerhlwhyfyog ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xiiyrgqocerhlwhyfyog , xScale , yScale ) ; } <s> * Fixes rotation scaling and   * Fixed rotation scaling issues * Fixed rotation being additive on some devices
fix_before_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
fix_after_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xScale , yScale ) ; }
√ fix_prediction_before: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
× fix_prediction_after: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz , @ android.support.annotation.NonNull android.graphics.Matrix xiiyrgqocerhlwhyfyog ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xiiyrgqocerhlwhyfyog , xScale , yScale ) ; }

line_index: 472
bug_before_refactoring: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> fixed bugs
bug_after_refactoring: public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> fixed bugs
fix_before_refactoring: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
fix_after_refactoring: public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true ) ; } }
√ fix_prediction_before: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
× fix_prediction_after: public void setyDirRightHip ( mck.MatlabEngine lvtrukmhikwnaaiamyah ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamjab , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , lvtrukmhikwnaaiamyah , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } }

line_index: 474
bug_before_refactoring: @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; } <s> @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; } <s> :bug: 修改 BeanComparatorUtil.propertyComparator(String  V...)和 BeanComparatorUtil.propertyComparator(String  List<V>)泛型的顺序 fix #618
bug_after_refactoring: @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String nllvrgswkinnzfcrhfvd , V . . . hgqczoyrruabedgiehoz ) { org.apache.commons.lang3.Validate . notBlank ( nllvrgswkinnzfcrhfvd , "nllvrgswkinnzfcrhfvd can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( hgqczoyrruabedgiehoz , "hgqczoyrruabedgiehoz can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( nllvrgswkinnzfcrhfvd , com.feilong.core.bean.ConvertUtil . toList ( hgqczoyrruabedgiehoz ) ) ; } <s> @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String nllvrgswkinnzfcrhfvd , V . . . hgqczoyrruabedgiehoz ) { org.apache.commons.lang3.Validate . notBlank ( nllvrgswkinnzfcrhfvd , "nllvrgswkinnzfcrhfvd can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( hgqczoyrruabedgiehoz , "hgqczoyrruabedgiehoz can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( nllvrgswkinnzfcrhfvd , com.feilong.core.bean.ConvertUtil . toList ( hgqczoyrruabedgiehoz ) ) ; } <s> :bug: 修改 BeanComparatorUtil.propertyComparator(String  V...)和 BeanComparatorUtil.propertyComparator(String  List<V>)泛型的顺序 fix #618
fix_before_refactoring: @ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; }
fix_after_refactoring: @ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyComparator ( java.lang.String nllvrgswkinnzfcrhfvd , V . . . hgqczoyrruabedgiehoz ) { org.apache.commons.lang3.Validate . notBlank ( nllvrgswkinnzfcrhfvd , "nllvrgswkinnzfcrhfvd can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( hgqczoyrruabedgiehoz , "hgqczoyrruabedgiehoz can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( nllvrgswkinnzfcrhfvd , com.feilong.core.bean.ConvertUtil . toList ( hgqczoyrruabedgiehoz ) ) ; }
√ fix_prediction_before: @ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; }
× fix_prediction_after: @ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyComparator ( java.lang.String nllvrgswkinnzfcrhfvd , V . . hgqczoyrruabedgiehoz ) { org.apache.commons.lang3.Validate . notBlank ( nllvrgswkinnzfcrhfvd , "nllvrgswkinnzfcrhfvd can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( hgqczoyrruabedgiehoz , "hgqczoyrruabedgiehoz can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( nllvrgswkinnzfcrhfvd , com.feilong.core.bean.ConvertUtil . toList ( hgqczoyrruabedgiehoz ) ) ; }

line_index: 481
bug_before_refactoring: private void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; } <s> private void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; } <s> Fixed button styles and import bug.
bug_after_refactoring: private void selectedButtonStyleLower ( javafx.scene.control.Button gaiuhnafuwwwndqhkzqz ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; gaiuhnafuwwwndqhkzqz . setId ( "sideToolbarButtonSelected" ) ; } <s> private void selectedButtonStyleLower ( javafx.scene.control.Button gaiuhnafuwwwndqhkzqz ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; gaiuhnafuwwwndqhkzqz . setId ( "sideToolbarButtonSelected" ) ; } <s> Fixed button styles and import bug.
fix_before_refactoring: public void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; }
fix_after_refactoring: public void selectedButtonStyleLower ( javafx.scene.control.Button gaiuhnafuwwwndqhkzqz ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; gaiuhnafuwwwndqhkzqz . setId ( "sideToolbarButtonSelected" ) ; }
√ fix_prediction_before: public void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; }
× fix_prediction_after: private void selectedButtonStyleLower ( javafx.scene.control.Button gaiuhnafuwwwndqhkzqz ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; }

line_index: 488
bug_before_refactoring: private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } <s> private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } <s> Fix bug and add debug  Change-Id: I6f427fd8f8d90614f8b63172c5717860e8925882
bug_after_refactoring: private void OnChatSendTextMessageResult ( int ppkvpoewyzhaqhjjucso , long bqvrjpybgzsowiyxxuat , long gabtmyxedmjjvmniyqpu , long vozdmfcorvemdplsjsoj , java.lang.String wuefbwhwukxoebzesuii , int jlliyfevizzwwoljlbbo ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( ppkvpoewyzhaqhjjucso , bqvrjpybgzsowiyxxuat , gabtmyxedmjjvmniyqpu , vozdmfcorvemdplsjsoj , wuefbwhwukxoebzesuii , jlliyfevizzwwoljlbbo ) ; } } } <s> private void OnChatSendTextMessageResult ( int ppkvpoewyzhaqhjjucso , long bqvrjpybgzsowiyxxuat , long gabtmyxedmjjvmniyqpu , long vozdmfcorvemdplsjsoj , java.lang.String wuefbwhwukxoebzesuii , int jlliyfevizzwwoljlbbo ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( ppkvpoewyzhaqhjjucso , bqvrjpybgzsowiyxxuat , gabtmyxedmjjvmniyqpu , vozdmfcorvemdplsjsoj , wuefbwhwukxoebzesuii , jlliyfevizzwwoljlbbo ) ; } } } <s> Fix bug and add debug  Change-Id: I6f427fd8f8d90614f8b63172c5717860e8925882
fix_before_refactoring: private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } }
fix_after_refactoring: private void OnChatSendTextMessageResult ( int ppkvpoewyzhaqhjjucso , long bqvrjpybgzsowiyxxuat , long gabtmyxedmjjvmniyqpu , long vozdmfcorvemdplsjsoj , java.lang.String wuefbwhwukxoebzesuii , int jlliyfevizzwwoljlbbo ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( ppkvpoewyzhaqhjjucso , bqvrjpybgzsowiyxxuat , gabtmyxedmjjvmniyqpu , vozdmfcorvemdplsjsoj , wuefbwhwukxoebzesuii , jlliyfevizzwwoljlbbo ) ; } } } }
√ fix_prediction_before: private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } }
× fix_prediction_after: private void OnChatSendTextMessageResult ( int ppkvpoewyzhaqhjjucso , long bqvrjpybgzsowiyxxuat , long gabtmyxedmjjvmniyqpu , long vozdmfcorvemdplsjsoj , java.lang.String wuefbwhwukxoebzesuii , int jlliyfevizzwwoljlbbo ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( ppkvpoewyzhaqhjjucso , bqvrjpybgzsowiyxxuat , gabtmyxedmjjvmniyqpu , int jlliyfevizzwwoljlbbo ) ; } } }

line_index: 498
bug_before_refactoring: private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> fixed some bugs
bug_after_refactoring: private boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; } <s> private boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; } <s> fixed some bugs
fix_before_refactoring: public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
fix_after_refactoring: public boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; }
√ fix_prediction_before: public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
× fix_prediction_after: public boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 0 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; }

line_index: 514
bug_before_refactoring: public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> eclipse import bug fix
bug_after_refactoring: public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint qoxceqzzipmbvrkiiqve ) { java.lang.String className = null ; try { className = qoxceqzzipmbvrkiiqve . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint qoxceqzzipmbvrkiiqve ) { java.lang.String className = null ; try { className = qoxceqzzipmbvrkiiqve . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> eclipse import bug fix
fix_before_refactoring: private java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }
fix_after_refactoring: private java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint qoxceqzzipmbvrkiiqve ) { java.lang.String className = null ; try { className = qoxceqzzipmbvrkiiqve . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }
√ fix_prediction_before: private java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }
× fix_prediction_after: public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint qoxceqzzipmbvrkiiqve ) { java.lang.String className = qoxceqzzipmbvrkiiqve . getSignature () . toString () ; try { className = qoxceqzzipmbvrkiiqve . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }

line_index: 564
bug_before_refactoring: private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> Fixed bug
bug_after_refactoring: pnhrzdpxzmxwbrqppxjcjivate static java.lang.Stnhrzdpxzmxwbrqppxjcjing nhrzdpxzmxwbrqppxjcjeadUntilNonEmptyLine ( java.io.BuffenhrzdpxzmxwbrqppxjcjedReadenhrzdpxzmxwbrqppxjcj nhrzdpxzmxwbrqppxjcj ) { java.lang.Stnhrzdpxzmxwbrqppxjcjing line = null ; tnhrzdpxzmxwbrqppxjcjy { while ( ( line = nhrzdpxzmxwbrqppxjcj . nhrzdpxzmxwbrqppxjcjeadLine () ) != null ) { if ( ( line . length () ) > 0 ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn ( line + " " ) + ( edu.psu.ist.acs.micnhrzdpxzmxwbrqppxjcjo.mid.scnhrzdpxzmxwbrqppxjcjatch.ConstnhrzdpxzmxwbrqppxjcjuctMID4NewsDocumentSet . nhrzdpxzmxwbrqppxjcjeadUntilEmptyLine ( nhrzdpxzmxwbrqppxjcj ) ) ; } } } catch ( java.io.IOException e ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } <s> pnhrzdpxzmxwbrqppxjcjivate static java.lang.Stnhrzdpxzmxwbrqppxjcjing nhrzdpxzmxwbrqppxjcjeadUntilNonEmptyLine ( java.io.BuffenhrzdpxzmxwbrqppxjcjedReadenhrzdpxzmxwbrqppxjcj nhrzdpxzmxwbrqppxjcj ) { java.lang.Stnhrzdpxzmxwbrqppxjcjing line = null ; tnhrzdpxzmxwbrqppxjcjy { while ( ( line = nhrzdpxzmxwbrqppxjcj . nhrzdpxzmxwbrqppxjcjeadLine () ) != null ) { if ( ( line . length () ) > 0 ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn ( line + " " ) + ( edu.psu.ist.acs.micnhrzdpxzmxwbrqppxjcjo.mid.scnhrzdpxzmxwbrqppxjcjatch.ConstnhrzdpxzmxwbrqppxjcjuctMID4NewsDocumentSet . nhrzdpxzmxwbrqppxjcjeadUntilEmptyLine ( nhrzdpxzmxwbrqppxjcj ) ) ; } } } catch ( java.io.IOException e ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } <s> Fixed bug
fix_before_refactoring: public static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
fix_after_refactoring: public static java.lang.Stnhrzdpxzmxwbrqppxjcjing nhrzdpxzmxwbrqppxjcjeadUntilNonEmptyLine ( java.io.BuffenhrzdpxzmxwbrqppxjcjedReadenhrzdpxzmxwbrqppxjcj nhrzdpxzmxwbrqppxjcj ) { java.lang.Stnhrzdpxzmxwbrqppxjcjing line = null ; tnhrzdpxzmxwbrqppxjcjy { while ( ( line = nhrzdpxzmxwbrqppxjcj . nhrzdpxzmxwbrqppxjcjeadLine () ) != null ) { if ( ( line . length () ) > 0 ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn ( line + " " ) + ( edu.psu.ist.acs.micnhrzdpxzmxwbrqppxjcjo.mid.scnhrzdpxzmxwbrqppxjcjatch.ConstnhrzdpxzmxwbrqppxjcjuctMID4NewsDocumentSet . nhrzdpxzmxwbrqppxjcjeadUntilEmptyLine ( nhrzdpxzmxwbrqppxjcj ) ) ; } } } catch ( java.io.IOException e ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; }
√ fix_prediction_before: public static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
× fix_prediction_after: pnhrzdpxzmxwbrqppxjcjivate static java.lang.Stnhrzdpxzmxwbrqppxjcjing nhrzdpxzmxwbrqppxjcjeadUntilNonEmptyLine ( java.io.BuffenhrzdpxzmxwbrqppxjcjedReadenhrzdpxzmxwbrqppxjcj nhrzdpxzmxwbrqppxjcj ) { java.lang.Stnhrzdpxzmxwbrqppxjcjing line = null ; tnhrzdpxzmxwbrqppxjcjy { while ( ( line = nhrzdpxzmxwbrqppxjcj . nhrzdpxzmxwbrqppxjcjeadLine () ) != null ) { if ( ( line . length () ) > 0 ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcj ( line + " " ) + ( edu.psu.ist.acs.micnhrzdpxz

line_index: 574
bug_before_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> Issue #348 Replaced LifecycleListeners with LifeCyclable hooks    - Got rid of Ehcache.Releasable   - Fixed test on Store.close() being invoked once   - Modified listener test to adjust for hooks not being removable  while in Status.AVAILABLE
bug_after_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String iyrmktyvnjjcnwlhmnyu , final org.ehcache.tglwyoknfeitgyqhitpx.CacheConfiguration < K , V > tglwyoknfeitgyqhitpx , final java.lang.Class < K > mvqvaqjowizbaskshsko , final java.lang.Class < V > hzjpehxlphlkedarjmjr , java.util.Deque < org.ehcache.Releasable > zdgkyvafianrteqpcacz ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( iyrmktyvnjjcnwlhmnyu , tglwyoknfeitgyqhitpx , mvqvaqjowizbaskshsko , hzjpehxlphlkedarjmjr , zdgkyvafianrteqpcacz ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String iyrmktyvnjjcnwlhmnyu , final org.ehcache.tglwyoknfeitgyqhitpx.CacheConfiguration < K , V > tglwyoknfeitgyqhitpx , final java.lang.Class < K > mvqvaqjowizbaskshsko , final java.lang.Class < V > hzjpehxlphlkedarjmjr , java.util.Deque < org.ehcache.Releasable > zdgkyvafianrteqpcacz ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( iyrmktyvnjjcnwlhmnyu , tglwyoknfeitgyqhitpx , mvqvaqjowizbaskshsko , hzjpehxlphlkedarjmjr , zdgkyvafianrteqpcacz ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> Issue #348 Replaced LifecycleListeners with LifeCyclable hooks    - Got rid of Ehcache.Releasable   - Fixed test on Store.close() being invoked once   - Modified listener test to adjust for hooks not being removable  while in Status.AVAILABLE
fix_before_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
fix_after_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String iyrmktyvnjjcnwlhmnyu , final org.ehcache.tglwyoknfeitgyqhitpx.CacheConfiguration < K , V > tglwyoknfeitgyqhitpx , final java.lang.Class < K > mvqvaqjowizbaskshsko , final java.lang.Class < V > hzjpehxlphlkedarjmjr ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( iyrmktyvnjjcnwlhmnyu , tglwyoknfeitgyqhitpx , mvqvaqjowizbaskshsko , hzjpehxlphlkedarjmjr ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
√ fix_prediction_before: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
× fix_prediction_after: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String iyrmktyvnjjcnwlhmnyu , final org.ehcache.tglwyoknfeitgyqhitpx.CacheConfiguration < K , V > tglwyoknfeitgyqhitpx , final java.lang.Class < K > mvqvaqjowizbaskshsko , final java.lang.Class < V > hzjpehxlphlkedarjmjr , java.util.Deque < org.ehcache.Releasable > zdgkyvafianrteqpcacz ) { final org.ehcache.Ehcache < K , V > hzjpehxlphlkedarjmjr , java.util.Deque < org.ehcache.Releasable > zdgkyvafianrxlphlkedarjmjr , zdgkyvafianrteqpcacz ) { final org.ehcache = super . createNewEh

line_index: 589
bug_before_refactoring: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , double sizeX , double sizeY , double bottleneckWidth , double bottleneckHeight , double bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , double sizeX , double sizeY , double bottleneckWidth , double bottleneckHeight , double bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> improved FlowAnalyzer to calculate total average flow over a specific time Window.  Fixed bugs related to bottleneck tests.
bug_after_refactoring: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String opubpgekiylivxjmfgqr , double kvlouoirlwwcufrpgxnh , double sglujkubdnfxxfizdlsz , double ddmeyuyomdqqzvzkscvs , double lrcpmezpiylkxmniuzef , double wivanmslbvsrwapvvwrt ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( kvlouoirlwwcufrpgxnh , sglujkubdnfxxfizdlsz , ddmeyuyomdqqzvzkscvs , lrcpmezpiylkxmniuzef , wivanmslbvsrwapvvwrt ) ; try { context . saveConfiguration ( opubpgekiylivxjmfgqr ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String opubpgekiylivxjmfgqr , double kvlouoirlwwcufrpgxnh , double sglujkubdnfxxfizdlsz , double ddmeyuyomdqqzvzkscvs , double lrcpmezpiylkxmniuzef , double wivanmslbvsrwapvvwrt ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( kvlouoirlwwcufrpgxnh , sglujkubdnfxxfizdlsz , ddmeyuyomdqqzvzkscvs , lrcpmezpiylkxmniuzef , wivanmslbvsrwapvvwrt ) ; try { context . saveConfiguration ( opubpgekiylivxjmfgqr ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> improved FlowAnalyzer to calculate total average flow over a specific time Window.  Fixed bugs related to bottleneck tests.
fix_before_refactoring: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , float sizeX , float sizeY , float bottleneckWidth , float bottleneckHeight , float bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }
fix_after_refactoring: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String opubpgekiylivxjmfgqr , float kvlouoirlwwcufrpgxnh , float sglujkubdnfxxfizdlsz , float ddmeyuyomdqqzvzkscvs , float lrcpmezpiylkxmniuzef , float wivanmslbvsrwapvvwrt ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( kvlouoirlwwcufrpgxnh , sglujkubdnfxxfizdlsz , ddmeyuyomdqqzvzkscvs , lrcpmezpiylkxmniuzef , wivanmslbvsrwapvvwrt ) ; try { context . saveConfiguration ( opubpgekiylivxjmfgqr ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }
√ fix_prediction_before: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , float sizeX , float sizeY , float bottleneckWidth , float bottleneckHeight , float bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }
× fix_prediction_after: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String opubpgekiylivxjmfgqr , double kvlouoirlwwcufrpgxnh , double sglujkubdnfxxfizdlsz , double ddmeyuyomdqqzvzkscvs , double lrcpmezpiylkxmniuzef , double wivanmslbvsrwapvvwrt ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( kvlouoirlwwcufrpgxnh , sglujkubdnfxxfizdlszkscvs , lrcpmezpiylkxmniuzef , wivanmslbvsrwapvvwrt ) ; try { context . saveConfiguration ( opubpgekiylivxjmfgqr ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }

line_index: 604
bug_before_refactoring: public static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> public static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
bug_after_refactoring: public static int getReceiverID ( byte [] jbczghnkhsewcqmykbur ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> public static int getReceiverID ( byte [] jbczghnkhsewcqmykbur ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
fix_before_refactoring: private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
fix_after_refactoring: private static int getReceiverID ( byte [] jbczghnkhsewcqmykbur ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
√ fix_prediction_before: private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
× fix_prediction_after: private static int getReceiverID ( byte [] jbczghnkhsewcqmykbur , byte [] jbczghnkhsewcqmykbur , int start , Packet.RECEIVER_LENGTH ) { byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( jbczghnkhsewcqmykbur , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }

line_index: 610
bug_before_refactoring: @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
bug_after_refactoring: @ java.lang.Override public void invoke ( java.util.Scanner segtygewhpxxthrkysmm ) { final java.lang.String name = ( segtygewhpxxthrkysmm . hasNext () ) ? segtygewhpxxthrkysmm . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> @ java.lang.Override public void invoke ( java.util.Scanner segtygewhpxxthrkysmm ) { final java.lang.String name = ( segtygewhpxxthrkysmm . hasNext () ) ? segtygewhpxxthrkysmm . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
fix_before_refactoring: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
fix_after_refactoring: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > segtygewhpxxthrkysmm ) { final java.lang.String name = segtygewhpxxthrkysmm . get ( 0 ) ; segtygewhpxxthrkysmm . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
√ fix_prediction_before: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
× fix_prediction_after: @ java.lang.Override public void invoke ( final java.util.List < java.lang.String > segtygewhpxxthrkysmm ) { final java.lang.String name = ( ( segtygewhpxxthrkysmm . hasNext () ) ? segtygewhpxxthrkysmm . nextLine () . trim () : "" ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }

line_index: 618
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
√ fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public app2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }

line_index: 633
bug_before_refactoring: public static void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } } <s> public static void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } } <s> fixed a bug which could cause crash when putting value into shared preferences in a race situation
bug_after_refactoring: public static void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; } } <s> public static void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; } } <s> fixed a bug which could cause crash when putting value into shared preferences in a race situation
fix_before_refactoring: public static synchronized void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } }
fix_after_refactoring: public static synchronized void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; } }
√ fix_prediction_before: public static synchronized void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } }
× fix_prediction_after: public static synchronized void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put

line_index: 653
bug_before_refactoring: private static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> private static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> fixing return errors
bug_after_refactoring: private static boolean differByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> private static boolean differByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> fixing return errors
fix_before_refactoring: public static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
fix_after_refactoring: public static boolean differByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
√ fix_prediction_before: public static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
× fix_prediction_after: public static boolean differByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva + charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }

