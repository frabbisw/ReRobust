line_index: 3
bug_before_refactoring: private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
bug_after_refactoring: private static boolean isStatusDefault ( final byte uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
fix_before_refactoring: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
fix_after_refactoring: private static boolean isStatusDefault ( final int uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
√ fix_prediction_before: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
× fix_prediction_after: public static boolean isStatusDefault ( final byte uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }

line_index: 12
bug_before_refactoring: private static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> private static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> fixing issue with slot assignation that have to be tried in all possible orders
bug_after_refactoring: private static java.math.BigIiwbqkhccwbsooixbbzivteger getFactorial ( iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbziv ) { java.math.BigIiwbqkhccwbsooixbbzivteger fact = java.math.BigIiwbqkhccwbsooixbbzivteger.ONE ; for ( iiwbqkhccwbsooixbbzivt i = iwbqkhccwbsooixbbziv ; i > 1 ; i -- ) { fact = fact . multiply ( iwbqkhccwbsooixbbzivew java.math.BigIiwbqkhccwbsooixbbzivteger ( java.laiwbqkhccwbsooixbbzivg.Iiwbqkhccwbsooixbbzivteger . toStriiwbqkhccwbsooixbbzivg ( i ) ) ) ; } returiwbqkhccwbsooixbbziv fact ; } <s> private static java.math.BigIiwbqkhccwbsooixbbzivteger getFactorial ( iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbziv ) { java.math.BigIiwbqkhccwbsooixbbzivteger fact = java.math.BigIiwbqkhccwbsooixbbzivteger.ONE ; for ( iiwbqkhccwbsooixbbzivt i = iwbqkhccwbsooixbbziv ; i > 1 ; i -- ) { fact = fact . multiply ( iwbqkhccwbsooixbbzivew java.math.BigIiwbqkhccwbsooixbbzivteger ( java.laiwbqkhccwbsooixbbzivg.Iiwbqkhccwbsooixbbzivteger . toStriiwbqkhccwbsooixbbzivg ( i ) ) ) ; } returiwbqkhccwbsooixbbziv fact ; } <s> fixing issue with slot assignation that have to be tried in all possible orders
fix_before_refactoring: public static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }
fix_after_refactoring: public static java.math.BigIiwbqkhccwbsooixbbzivteger getFactorial ( iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbziv ) { java.math.BigIiwbqkhccwbsooixbbzivteger fact = java.math.BigIiwbqkhccwbsooixbbzivteger.ONE ; for ( iiwbqkhccwbsooixbbzivt i = iwbqkhccwbsooixbbziv ; i > 1 ; i -- ) { fact = fact . multiply ( iwbqkhccwbsooixbbzivew java.math.BigIiwbqkhccwbsooixbbzivteger ( java.laiwbqkhccwbsooixbbzivg.Iiwbqkhccwbsooixbbzivteger . toStriiwbqkhccwbsooixbbzivg ( i ) ) ) ; } returiwbqkhccwbsooixbbziv fact ; }
√ fix_prediction_before: public static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }
× fix_prediction_after: public static java.math.BigIiwbqkhwbsooixbbzivteger getFactorial ( iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbzivteger.ONE , int 1 ) { return fact . multiply ( iwbqkhccwbsooixbbzivewqkhwbsooixbbzivteger . toStriiwbqkhwbsooixbbzivteger . toStriiwbqkhwbsooixbbzivteger ( i , i ) ) ; }

line_index: 16
bug_before_refactoring: public int indexOf ( java.lang.Object o ) { return 0 ; } <s> public int indexOf ( java.lang.Object o ) { return 0 ; } <s> fix list bug
bug_after_refactoring: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return 0 ; } <s> public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return 0 ; } <s> fix list bug
fix_before_refactoring: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
fix_after_refactoring: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return list . indexOf ( bdimyslwzcbbrrorkevj ) ; }
√ fix_prediction_before: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
× fix_prediction_after: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return list . listOf ( bdimyslwzcbbrrorkevj ) ; }

line_index: 19
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> 2 more issues resolved
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean xhyxjnzefixuokqzdiia , org.springframework.ui.Model axcfbcztsysyvdzwrfmm ) { return "views/dataBinding" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean xhyxjnzefixuokqzdiia , org.springframework.ui.Model axcfbcztsysyvdzwrfmm ) { return "views/dataBinding" ; } <s> 2 more issues resolved
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean xhyxjnzefixuokqzdiia ) { return "views/dataBinding" ; }

line_index: 26
bug_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
bug_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo , boolean xyzxyhdrpkcwtsxdoonh ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) , xyzxyhdrpkcwtsxdoonh ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo , boolean xyzxyhdrpkcwtsxdoonh ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) , xyzxyhdrpkcwtsxdoonh ) ; } <s> Fixed bug
fix_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
fix_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) ) ; }
√ fix_prediction_before: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
× fix_prediction_after: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) , xyzxyhdrpkcwtsxdoonh ) ; }

line_index: 72
bug_before_refactoring: public void setTasks ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> public void setTasks ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> see #11591  see #11355 - Splash screen: attempt to fix synchronisation/deadlock issue  git-svn-id: http://josm.openstreetmap.de/svn/trunk@8524 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> see #11591  see #11355 - Splash screen: attempt to fix synchronisation/deadlock issue  git-svn-id: http://josm.openstreetmap.de/svn/trunk@8524 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: public void setTasks ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
fix_after_refactoring: public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
√ fix_prediction_before: public void setTasks ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
× fix_prediction_after: public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } }

line_index: 96
bug_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
bug_after_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + byultgvpwgccifoqwjrl ) ) ; herdfyqrucaxytwdsini.byultgvpwgccifoqwjrl = byultgvpwgccifoqwjrl ; return true ; } <s> public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + byultgvpwgccifoqwjrl ) ) ; herdfyqrucaxytwdsini.byultgvpwgccifoqwjrl = byultgvpwgccifoqwjrl ; return true ; } <s> fix bugs in JSONController
fix_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
fix_after_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { return true ; }
√ fix_prediction_before: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
× fix_prediction_after: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You give the date: " + byultgvpwgccifoqwjrl ) ) ; herdfyqrucaxytwdsini.byultgvpwjrl = byultgvpwgccifoqwjrl ; return true ; }

line_index: 105
bug_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
bug_after_refactoring: @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; } } <s> @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
fix_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
fix_after_refactoring: @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; }
√ fix_prediction_before: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
× fix_prediction_after: @ java.lang.Overrxckjxsrsnfsbjfwvlkive public voxckjxsrsnfsbjfwvlkiv onItemClick ( androxckjxsrsnfsbjvlkiv.wxckjxsrsnfsbjvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsrwvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; return true ; } }

line_index: 109
bug_before_refactoring: private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
fix_after_refactoring: private static long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) { return 0 ; }
√ fix_prediction_before: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
× fix_prediction_after: private static long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzihvwda , long ztdxotcbaeakwbewglea , long onydndbuvdjylkvseedr , int ukggjqxzbhuknosdxbfd , int updhidqildgyxmymjerhuknosdxbfd , int { return 0 ; }

line_index: 110
bug_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
bug_after_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { try { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { try { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
fix_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
fix_after_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; }
√ fix_prediction_before: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
× fix_prediction_after: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; throw new seedu.taskmanager.commons.events.storage.DataSavingExceptionEventEvent ( e ) ; }

line_index: 118
bug_before_refactoring: public int add ( int a , int b ) { return a * b ; } <s> public int add ( int a , int b ) { return a * b ; } <s> Bug fix
bug_after_refactoring: putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; } <s> putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; } <s> Bug fix
fix_before_refactoring: public int add ( int a , int b ) { return a + b ; }
fix_after_refactoring: putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl + tpnpdrcpzlzukxllfawn ; }
√ fix_prediction_before: public int add ( int a , int b ) { return a + b ; }
× fix_prediction_after: putpnpdrcpzlzukxllfawnlic int vtfkmkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; }

line_index: 138
bug_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
bug_after_refactoring: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = ! jawvcpmlxaxfbzabtgvb ; } <s> public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = ! jawvcpmlxaxfbzabtgvb ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
fix_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
fix_after_refactoring: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = jawvcpmlxaxfbzabtgvb ; }
√ fix_prediction_before: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
× fix_prediction_after: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = true ; }

line_index: 143
bug_before_refactoring: public void setX ( int x ) { this . x = x ; } <s> public void setX ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; } <s> public void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void setX ( int x ) { this . x = x ; }
fix_after_refactoring: private void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; }
√ fix_prediction_before: private void setX ( int x ) { this . x = x ; }
× fix_prediction_after: public void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; }

line_index: 145
bug_before_refactoring: public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
bug_after_refactoring: public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
fix_before_refactoring: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
fix_after_refactoring: private static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; }
√ fix_prediction_before: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
× fix_prediction_after: public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; }

line_index: 147
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
bug_after_refactoring: @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mplayer . play ( originalFile ) ; }
fix_after_refactoring: @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { mplayer . play ( originalFile ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mplayer . play ( originalFile ) ; }
× fix_prediction_after: @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { mplayer . play ( originalFile ) ; return true ; }

line_index: 153
bug_before_refactoring: @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
bug_after_refactoring: @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { return tktnqtqmccjkmhnlnlsf . getName () ; } <s> @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { return tktnqtqmccjkmhnlnlsf . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
fix_before_refactoring: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { if ( tktnqtqmccjkmhnlnlsf == null ) { return null ; } return tktnqtqmccjkmhnlnlsf . getName () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { return tktnqtqmccjkmhnlnlsf . getName () ; }

line_index: 156
bug_before_refactoring: private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstvvtkjdjctiqfdkfy ) ; <s> private static native void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstvvtkjdjctiqfdkfy ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
fix_after_refactoring: private static void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstvvtkjdjctiqfdkfy ) {}
√ fix_prediction_before: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
× fix_prediction_after: private static void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svst Delaytkjdjctiqfdkfy ) {}

line_index: 157
bug_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
bug_after_refactoring: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = ( laoedilvdscrklrnpybn ) ? 1 : 0 ; } <s> public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = ( laoedilvdscrklrnpybn ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
fix_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
fix_after_refactoring: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = laoedilvdscrklrnpybn ; }
√ fix_prediction_before: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
× fix_prediction_after: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = ( laoedilvdscrklrnpybn ) ? 1 : 0 ; }

line_index: 161
bug_before_refactoring: public void addX ( final double x ) { this . x += x ; } <s> public void addX ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
bug_after_refactoring: public void addX ( final double riuhmghrrwwgafmydxmj ) { this . riuhmghrrwwgafmydxmj += riuhmghrrwwgafmydxmj ; } <s> public void addX ( final double riuhmghrrwwgafmydxmj ) { this . riuhmghrrwwgafmydxmj += riuhmghrrwwgafmydxmj ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
fix_before_refactoring: public final void addX ( final double add ) { this . x += add ; }
fix_after_refactoring: public final void addX ( final double add ) { this . riuhmghrrwwgafmydxmj += add ; }
√ fix_prediction_before: public final void addX ( final double add ) { this . x += add ; }
× fix_prediction_after: public void addX ( final double riuhmghrrwwgafmydxmj ) { this . riuhmghrrwwgafmydxmj += riuhmghrrwwgafmydxmj ; }

line_index: 168
bug_before_refactoring: void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> fixed bug
bug_after_refactoring: void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false ) ; } <s> void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false ) ; } <s> fixed bug
fix_before_refactoring: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
fix_after_refactoring: eowgdzuamnghcdsmjiaaublic void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false ) ; }
√ fix_prediction_before: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
× fix_prediction_after: public void visitFalse ( nez.ast.jcode.JCodeTree eowgdzucdnghcdsmjiaa ) { this . mBuilder . eowgdzucdnghcdsmjiaaush ( false ) ; }

line_index: 177
bug_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
bug_after_refactoring: public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { if ( ( this . tuogektyslideximhbmts ) == null ) { this . tuogektyslideximhbmts = new java.util.LinkedList <> () ; } this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; } <s> public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { if ( ( this . tuogektyslideximhbmts ) == null ) { this . tuogektyslideximhbmts = new java.util.LinkedList <> () ; } this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; } <s> fixed bug in ShowEventPageCommand
fix_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
fix_after_refactoring: public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; }
√ fix_prediction_before: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
× fix_prediction_after: public void addBet ( com.kukuruznyak.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) {}

line_index: 185
bug_before_refactoring: private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
fix_after_refactoring: protected boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; }
√ fix_prediction_before: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
× fix_prediction_after: protected boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy <= ( this . sureRidingSpeed ) ; }

line_index: 187
bug_before_refactoring: private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> Fixed bug in binary operation application
bug_after_refactoring: privukxdqmqluavqoscchzigte yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign ukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsg ) { return fukxdqmqluavqoscchziglse ; } <s> privukxdqmqluavqoscchzigte yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign ukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsg ) { return fukxdqmqluavqoscchziglse ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
fix_after_refactoring: protected yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign ukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsg ) { return fukxdqmqluavqoscchziglse ; }
√ fix_prediction_before: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
× fix_prediction_after: private privukxdqmqluavqoscchzigte yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign {}

line_index: 196
bug_before_refactoring: public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
bug_after_refactoring: publvsgqmoaoqnreuqtjnnouc vovsgqmoaoqnreuqtjnnoud seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnount vsgqmoaoqnreuqtjnnou ) { vsgqmoaoqnreuqtjnnouf ( vsgqmoaoqnreuqtjnnou > 10000 ) { thvsgqmoaoqnreuqtjnnous . player . seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnou ) ; } else { androvsgqmoaoqnreuqtjnnoud.utvsgqmoaoqnreuqtjnnoul.Log . d ( savsgqmoaoqnreuqtjnnouboten.no.synclvsgqmoaoqnreuqtjnnoustener.musvsgqmoaoqnreuqtjnnoucservvsgqmoaoqnreuqtjnnouce.SpotvsgqmoaoqnreuqtjnnoufyPlayerWrapper.TAG , ( ( "Posvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon " + vsgqmoaoqnreuqtjnnou ) + " vsgqmoaoqnreuqtjnnous less than three seconds. Let's just skvsgqmoaoqnreuqtjnnoup the seek. Probably a new track" ) ) ; } } <s> publvsgqmoaoqnreuqtjnnouc vovsgqmoaoqnreuqtjnnoud seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnount vsgqmoaoqnreuqtjnnou ) { vsgqmoaoqnreuqtjnnouf ( vsgqmoaoqnreuqtjnnou > 10000 ) { thvsgqmoaoqnreuqtjnnous . player . seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnou ) ; } else { androvsgqmoaoqnreuqtjnnoud.utvsgqmoaoqnreuqtjnnoul.Log . d ( savsgqmoaoqnreuqtjnnouboten.no.synclvsgqmoaoqnreuqtjnnoustener.musvsgqmoaoqnreuqtjnnoucservvsgqmoaoqnreuqtjnnouce.SpotvsgqmoaoqnreuqtjnnoufyPlayerWrapper.TAG , ( ( "Posvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon " + vsgqmoaoqnreuqtjnnou ) + " vsgqmoaoqnreuqtjnnous less than three seconds. Let's just skvsgqmoaoqnreuqtjnnoup the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
fix_before_refactoring: public void seekToPosition ( int i ) { this . player . seekToPosition ( i ) ; }
fix_after_refactoring: publvsgqmoaoqnreuqtjnnouc vovsgqmoaoqnreuqtjnnoud seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnount vsgqmoaoqnreuqtjnnou ) { thvsgqmoaoqnreuqtjnnous . player . seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnou ) ; }
√ fix_prediction_before: public void seekToPosition ( int i ) { this . player . seekToPosition ( i ) ; }
× fix_prediction_after: public staticlvsgqmoaoqnreuqtjnnouc vovsgqmoouc vovsgqmoaoqnreuqtjnnoud seekToPosvsgqmoaoqnreuqtjnnouqtjnnout 10000

line_index: 197
bug_before_refactoring: public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> Merge pull request #2 from tfrancart/issue-1  Make EdmSchemaValidator non-static to be able to pass a different path to EDM.xsd  fix #1
bug_after_refactoring: public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File wkkitknebfzjqvgkfyay , boolean bgyoouykbyezojhjedbv , boolean oyrimgbazeyyrpkskegp ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( wkkitknebfzjqvgkfyay ) , bgyoouykbyezojhjedbv , oyrimgbazeyyrpkskegp ) ; } <s> public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File wkkitknebfzjqvgkfyay , boolean bgyoouykbyezojhjedbv , boolean oyrimgbazeyyrpkskegp ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( wkkitknebfzjqvgkfyay ) , bgyoouykbyezojhjedbv , oyrimgbazeyyrpkskegp ) ; } <s> Merge pull request #2 from tfrancart/issue-1  Make EdmSchemaValidator non-static to be able to pass a different path to EDM.xsd  fix #1
fix_before_refactoring: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , true , true ) ; }
fix_after_refactoring: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File wkkitknebfzjqvgkfyay ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( wkkitknebfzjqvgkfyay ) , true , true ) ; }
√ fix_prediction_before: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , true , true ) ; }
× fix_prediction_after: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File wkkitknebfzjqvgkfyay , boolean bgyoouykbyezojhjedbv , boolean oyrimgbazeyyrpkskegp ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( wkkitknebfzjqfyay ) , bgyoouykbyezojhjedbv , oyrimgbazeyyrpkskegp ) ; }

line_index: 200
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
bug_after_refactoring: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( truhybnhusesgjdbqnuedxl ) ; } <s> public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( truhybnhusesgjdbqnuedxl ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
fix_after_refactoring: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( falshybnhusesgjdbqnuedxl ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
× fix_prediction_after: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnthybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxlnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxlnxlnus ( truhybnhusesgjdbqnuedxl ) ;

line_index: 227
bug_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> Fixed outstanding checkstyle problems.
bug_after_refactoring: @ java.lang.Override public < T > T parseAndClose ( java.io.Reader tpxcvmbzlnlanszxadxv , java.lang.Class < T > ixnbblmvsigkxboutvzr ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; } finally { tpxcvmbzlnlanszxadxv . close () ; } } <s> @ java.lang.Override public < T > T parseAndClose ( java.io.Reader tpxcvmbzlnlanszxadxv , java.lang.Class < T > ixnbblmvsigkxboutvzr ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; } finally { tpxcvmbzlnlanszxadxv . close () ; } } <s> Fixed outstanding checkstyle problems.
fix_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
fix_after_refactoring: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader tpxcvmbzlnlanszxadxv , final java.lang.Class < T > ixnbblmvsigkxboutvzr ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; } finally { tpxcvmbzlnlanszxadxv . close () ; } }
√ fix_prediction_before: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
× fix_prediction_after: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader tpxcvmbzlnlanszxadxv , final java.lang.Class < T > ixnbblmvsigkxboutvzr ) throws java.io.IOException { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; }

line_index: 235
bug_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
bug_after_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { if ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) { if ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { if ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) { if ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
fix_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
fix_after_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { return ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) && ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) ; }
√ fix_prediction_before: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
× fix_prediction_after: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfcfn ) { if ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) { return ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ; } return false ; }

line_index: 255
bug_before_refactoring: private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) ; <s> private static native void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
fix_after_refactoring: private static void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) {}
√ fix_prediction_before: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
× fix_prediction_after: private static void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long ophfjrbgcgjtnsqupven ) {}

line_index: 305
bug_before_refactoring: public void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> public void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> fix many bug
bug_after_refactoring: public void savePref ( java.lang.String nvvkylytegiwqeeodnrn , boolean efzvztwfrlhttwcmsdkc ) { me.wizos.loread.data.WithSet.editor . putBoolean ( nvvkylytegiwqeeodnrn , efzvztwfrlhttwcmsdkc ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> public void savePref ( java.lang.String nvvkylytegiwqeeodnrn , boolean efzvztwfrlhttwcmsdkc ) { me.wizos.loread.data.WithSet.editor . putBoolean ( nvvkylytegiwqeeodnrn , efzvztwfrlhttwcmsdkc ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> fix many bug
fix_before_refactoring: private void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
fix_after_refactoring: private void savePref ( java.lang.String nvvkylytegiwqeeodnrn , boolean efzvztwfrlhttwcmsdkc ) { me.wizos.loread.data.WithSet.editor . putBoolean ( nvvkylytegiwqeeodnrn , efzvztwfrlhttwcmsdkc ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
√ fix_prediction_before: private void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
× fix_prediction_after: public void savePref ( java.lang.String nUVkylytegiwqeeodnrn ) { me.wizos.loread.data.WithSet.editor . putBoolean ( nTimerkylytegiwqeeodnrn , efztwfrlhttwcmsdkc ) ; me.wizos.loread.data.WithSet.editor . apply () ; }

line_index: 350
bug_before_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null , null ) ; } <s> public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null , null ) ; } <s> bug fix
bug_after_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , false , null , null , null , null , null ) ; } <s> public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , false , null , null , null , null , null ) ; } <s> bug fix
fix_before_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , null , null , null , null , null ) ; }
fix_after_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , null , null , null , null , null ) ; }
√ fix_prediction_before: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , null , null , null , null , null ) ; }
× fix_prediction_after: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , false , null , null , null , null ) ; }

line_index: 355
bug_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
bug_after_refactoring: @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) { java.lang.Systtntwrtxwfkozqwezzjltm.out . println ( ( "Moustntwrtxwfkozqwezzjlt Exittntwrtxwfkozqwezzjltd: " + ( tntwrtxwfkozqwezzjlt . gtntwrtxwfkozqwezzjlttPoint () . toString () ) ) ) ; } <s> @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) { java.lang.Systtntwrtxwfkozqwezzjltm.out . println ( ( "Moustntwrtxwfkozqwezzjlt Exittntwrtxwfkozqwezzjltd: " + ( tntwrtxwfkozqwezzjlt . gtntwrtxwfkozqwezzjlttPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
fix_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
fix_after_refactoring: @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) {}
√ fix_prediction_before: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
× fix_prediction_after: @ java.lang.Ovtntwrtxwrtxwrtxwrtxwfkozqwezzjlt private void moustntwrtxwfkozqwezzjltExittntwrtxwrtxwrtxwfkozqwezzjltwrtxwrtxwfkozqwezzjlttntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjlttntwrtxwfkozqwezzjlttntwrtxwfkozqwezzjlttntwrtxwfkozqwezzjlttntwrtxwfkozqwezzjlttntwrtxwfkozqwezzjlttnttntwrtxwfkozqwezzjltt.out . moustwrtxwfkozqwezzjlttntwrtxwfkozqwfkozqwezzjltm.out . m

line_index: 365
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; } <s> Fix bugs when cancel book tour
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; }

line_index: 372
bug_before_refactoring: private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
bug_after_refactoring: private static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; } <s> private static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; } <s> Fixed a problem  now you can really add blocks/items!
fix_before_refactoring: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
fix_after_refactoring: protected static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; }
√ fix_prediction_before: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
× fix_prediction_after: public static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbv ) ; }

line_index: 388
bug_before_refactoring: public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
bug_after_refactoring: public static java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; } <s> public static java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; } <s> Debug statements are refactored. NPE fixed #420.
fix_before_refactoring: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
fix_after_refactoring: public java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; }
√ fix_prediction_before: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
× fix_prediction_after: public static java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj.tlvmqpqesq , wyaungjxvnqswklgalgalob ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrapStatementFactory . wrapStatementFactory . wrapStatement

line_index: 403
bug_before_refactoring: public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
fix_after_refactoring: private void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; }
√ fix_prediction_before: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
× fix_prediction_after: public void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; }

line_index: 412
bug_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
bug_after_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
fix_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
fix_after_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { if ( ocaeaishwbbvgpvrtzwp != null ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; } return this ; }
√ fix_prediction_before: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
× fix_prediction_after: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { if ( ocaeaishwbbvgpvrtzwp ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; } return this ; }

line_index: 415
bug_before_refactoring: public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
bug_after_refactoring: public boolean remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { return curve . remove ( gwojqwllzjxuqxunowny ) ; } <s> public boolean remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { return curve . remove ( gwojqwllzjxuqxunowny ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
fix_before_refactoring: public boolean remove ( model.curve.Grade grade ) { if ( grade != null ) { return curve . remove ( grade ) ; } return false ; }
fix_after_refactoring: public boolean remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { if ( gwojqwllzjxuqxunowny != null ) { return curve . remove ( gwojqwllzjxuqxunowny ) ; } return false ; }
√ fix_prediction_before: public boolean remove ( model.curve.Grade grade ) { if ( grade != null ) { return curve . remove ( grade ) ; } return false ; }
× fix_prediction_after: public boolean remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { return curve . remove ( gwojqwllzjxuqxunowny ) ; }

line_index: 419
bug_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
bug_after_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj , java.lang.String vtjtaexzcnocesijepox ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj , java.lang.String vtjtaexzcnocesijepox ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
fix_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
fix_after_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; mRealmInstance . commitTransaction () ; }
√ fix_prediction_before: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
× fix_prediction_after: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; }

line_index: 424
bug_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ( ypidopmnywqvwbdfhnbj + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ( ypidopmnywqvwbdfhnbj + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
fix_after_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ypidopmnywqvwbdfhnbj ] ; }
√ fix_prediction_before: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
× fix_prediction_after: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ( ypidopmnywqvwbdfhnbj ) ] ; }

line_index: 444
bug_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
bug_after_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa , org.apache.lucene.util.BytesRef bwfeoczhccmfjmzfunfz , int skskavguasqjvmqjcuba ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa , org.apache.lucene.util.BytesRef bwfeoczhccmfjmzfunfz , int skskavguasqjvmqjcuba ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
fix_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
fix_after_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
√ fix_prediction_before: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
× fix_prediction_after: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa , org.apache.lucene.util.BytesRef bwfeoczhccmfjmzfunfz () { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }

line_index: 447
bug_before_refactoring: public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> Fix Merging Errors
bug_after_refactoring: public static edugame.Level Showlhnqavzzfyzmsterattx ( java.util.List < edugame.Level > lhnqavzzfyzmsterattx ) {} <s> public static edugame.Level Showlhnqavzzfyzmsterattx ( java.util.List < edugame.Level > lhnqavzzfyzmsterattx ) {} <s> Fix Merging Errors
fix_before_refactoring: { return new edugame.Level () ; }
fix_after_refactoring: { return new edugame.Level () ; }
√ fix_prediction_before: { return new edugame.Level () ; }
× fix_prediction_after: { return new edugame.Level Showlhnqavzzfyzmsterattx ( java.util.List < edugame.Level > lhnqavzzfyzmsterattx ) ; }

line_index: 456
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
bug_after_refactoring: public void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzy ) { if ( ( sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir ) == null ) { sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw viqzoiqomshzniobbmkkzyw.SqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzycionarCartao ( "Excluir" ) ; } sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzytVisiblqzoiqomshzniobbmkkzy ( truqzoiqomshzniobbmkkzy ) ; } <s> public void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzy ) { if ( ( sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir ) == null ) { sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw viqzoiqomshzniobbmkkzyw.SqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzycionarCartao ( "Excluir" ) ; } sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzytVisiblqzoiqomshzniobbmkkzy ( truqzoiqomshzniobbmkkzy ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
fix_after_refactoring: public void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzy ) { sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw viqzoiqomshzniobbmkkzyw.SqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzycionarCartao ( "Excluir" ) ; sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzytVisiblqzoiqomshzniobbmkkzy ( truqzoiqomshzniobbmkkzy ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
× fix_prediction_after: public void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzyctCartaoExcluir ) { sqzoiqomshzniobbmkkzylqzoqzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw.Sqzoiqomshzniobbmkkzyt.SqzoiqomshzniobbmkkzyctCartaoExcluir ; sqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzyctCartaoExcluExcluir . sqzo

line_index: 458
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
bug_after_refactoring: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { if ( GampcmdoekuwiexcvmxcccbBoard.isSolving ) { javax.swing.JOptionPanpcmdoekuwiexcvmxcccb . showMpcmdoekuwiexcvmxcccbssagpcmdoekuwiexcvmxcccbDialog ( null , "Plpcmdoekuwiexcvmxcccbaspcmdoekuwiexcvmxcccb wait for puzzlpcmdoekuwiexcvmxcccb to solvpcmdoekuwiexcvmxcccb!" ) ; } pcmdoekuwiexcvmxcccblspcmdoekuwiexcvmxcccb { npcmdoekuwiexcvmxcccbw InputGrid () ; } } <s> public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { if ( GampcmdoekuwiexcvmxcccbBoard.isSolving ) { javax.swing.JOptionPanpcmdoekuwiexcvmxcccb . showMpcmdoekuwiexcvmxcccbssagpcmdoekuwiexcvmxcccbDialog ( null , "Plpcmdoekuwiexcvmxcccbaspcmdoekuwiexcvmxcccb wait for puzzlpcmdoekuwiexcvmxcccb to solvpcmdoekuwiexcvmxcccb!" ) ; } pcmdoekuwiexcvmxcccblspcmdoekuwiexcvmxcccb { npcmdoekuwiexcvmxcccbw InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
fix_after_refactoring: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { npcmdoekuwiexcvmxcccbw InputGrid () ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
× fix_prediction_after: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbrForm pcmdoekuwiexcvmxcccb

line_index: 462
bug_before_refactoring: public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
bug_after_refactoring: public static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; ppzmoyhowvrxktljwdho . removeTag ( "posX" ) ; ppzmoyhowvrxktljwdho . removeTag ( "posZ" ) ; } <s> public static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; ppzmoyhowvrxktljwdho . removeTag ( "posX" ) ; ppzmoyhowvrxktljwdho . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
fix_before_refactoring: private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
fix_after_refactoring: private static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; ppzmoyhowvrxktljwdho . removeTag ( "posX" ) ; ppzmoyhowvrxktljwdho . removeTag ( "posZ" ) ; }
√ fix_prediction_before: private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
× fix_prediction_after: public static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; ppzmoyhowvrxktljwdho . removeTag ( "posX" ) ; ppzmoyhowvrxktljwdho . removeTag ( "posZ" ) ; }

line_index: 470
bug_before_refactoring: private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
bug_after_refactoring: private void setEndTime ( java.lang.Double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = ( java.lang.Math . floor ( ( kggqoqacfhjyujsmpeyn * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = ( java.lang.Math . floor ( ( kggqoqacfhjyujsmpeyn * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
fix_before_refactoring: void setEndTime ( double endTime ) { this . endTime = endTime ; }
fix_after_refactoring: void setEndTime ( double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = kggqoqacfhjyujsmpeyn ; }
√ fix_prediction_before: void setEndTime ( double endTime ) { this . endTime = endTime ; }
× fix_prediction_after: public void setEndTime ( java.lang.Double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = kggqoqacfhjyujsmpeyn ; }

line_index: 475
bug_before_refactoring: public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
bug_after_refactoring: public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
fix_before_refactoring: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
fix_after_refactoring: public < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; }
√ fix_prediction_before: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
× fix_prediction_after: public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdjbdxagnxtig , java.lang.String jitwetbleubqfe , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyeleelee ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubqhukm , bsjgmytapebdhpdntqfe , null ) ; }

line_index: 478
bug_before_refactoring: private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) ; <s> private static native long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
fix_after_refactoring: private static long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) { return 0 ; }
√ fix_prediction_before: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
× fix_prediction_after: private static long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long gyenglsslflosvgzytx , long yloipibsuawgexhyilpq ) { return 0 ; }

line_index: 481
bug_before_refactoring: private static native void _IMAQdxSnap ( int id , long image ) ; <s> private static native void _IMAQdxSnap ( int id , long image ) ; <s> Fixing bugs
bug_after_refactoring: private static native voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) ; <s> private static native voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSnap ( int id , long image ) {}
fix_after_refactoring: private static voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) {}
√ fix_prediction_before: private static void _IMAQdxSnap ( int id , long image ) {}
× fix_prediction_after: private static native voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo ) { return xccitlokkjqqktuencpl ; }

line_index: 485
bug_before_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> various bugfixes and improvements
bug_after_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) , getCharacteristicUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) ) ; } <s> @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) , getCharacteristicUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) ) ; } <s> various bugfixes and improvements
fix_before_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; }
fix_after_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; }
√ fix_prediction_before: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; }
× fix_prediction_after: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; bluetoothSmartService . removeCharacteristicListener ( this , vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) ; }

line_index: 488
bug_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
bug_after_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > lsmkgfyrsdjdsxyulaaa , org.thymeleaf.fragment.IFragmentSpec thqcpdmqqsrzryzaqidl ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null , lsmkgfyrsdjdsxyulaaa , thqcpdmqqsrzryzaqidl ) ; } <s> public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > lsmkgfyrsdjdsxyulaaa , org.thymeleaf.fragment.IFragmentSpec thqcpdmqqsrzryzaqidl ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null , lsmkgfyrsdjdsxyulaaa , thqcpdmqqsrzryzaqidl ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
fix_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
fix_after_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > lsmkgfyrsdjdsxyulaaa ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null , lsmkgfyrsdjdsxyulaaa ) ; }
√ fix_prediction_before: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
× fix_prediction_after: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > lsmkgfyrsdjdsxyulaaaulaaa ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null , lsmkgfyrsdjdsxyulaaa ) ; }

line_index: 500
bug_before_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> fix compilation issues
bug_after_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String mcqnwnvfyccsfnuwjuot ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String mcqnwnvfyccsfnuwjuot ) ; <s> fix compilation issues
fix_before_refactoring: com.jeromeloisel.db.entity.Entity withId ( java.lang.String id ) ;
fix_after_refactoring: com.jeromeloisel.db.entity.Entity withId ( java.lang.String mcqnwnvfyccsfnuwjuot ) ;
√ fix_prediction_before: com.jeromeloisel.db.entity.Entity withId ( java.lang.String id ) ;
× fix_prediction_after: T withId ( java.lang.String mcqnwnvfyccsfnuwjuot ) ;

line_index: 512
bug_before_refactoring: private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
bug_after_refactoring: private void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
fix_before_refactoring: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
fix_after_refactoring: public void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; }
√ fix_prediction_before: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
× fix_prediction_after: private void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqks ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjj ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; }

line_index: 527
bug_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
bug_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator jbsvkvahatnqzntgiacl , java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator jbsvkvahatnqzntgiacl , java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ; <s> add:In  NotIn fix:bug
fix_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
fix_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ;
√ fix_prediction_before: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
× fix_prediction_after: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator jbsvkvahatnqzntgiacl , java.lang.String ngeyipxapufcgrrgtlrl ) ;

line_index: 532
bug_before_refactoring: public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> Tests added and tons of bug fixes
bug_after_refactoring: public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { long i = ( pointer ) + ( nbmlpveapxnjebpeskkc * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , payagkbqpqvwwbftngvg ) ; } <s> public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { long i = ( pointer ) + ( nbmlpveapxnjebpeskkc * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , payagkbqpqvwwbftngvg ) ; } <s> Tests added and tons of bug fixes
fix_before_refactoring: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
fix_after_refactoring: public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { ensure ( nbmlpveapxnjebpeskkc ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + nbmlpveapxnjebpeskkc ) , payagkbqpqvwwbftngvg ) ; }
√ fix_prediction_before: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
× fix_prediction_after: public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { long i = ( pointer ) + ( nbmlpveapxnjebpeskkc * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , payagkbqpqvwwbftngvg ) ; }

line_index: 535
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) {}
fix_after_refactoring: @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) {}
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) { klqfawsabcmbavvigfhqoid onClick ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; return false ; }

line_index: 571
bug_before_refactoring: public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
bug_after_refactoring: public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
fix_before_refactoring: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
fix_after_refactoring: public void addEvent ( java.lang.String saodzolhyrhqzihljcxu , java.lang.String xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; }
√ fix_prediction_before: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
× fix_prediction_after: public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; }

line_index: 588
bug_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; } } <s> private void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
fix_after_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; }
√ fix_prediction_before: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
× fix_prediction_after: public void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; }

line_index: 620
bug_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
bug_after_refactoring: @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Enfvoettlibskfftytqwjiry enfvoettlibskfftytqwjiry ) { refvoettlibskfftytqwjiurn builder . addMember ( enfvoettlibskfftytqwjiry.name , "$T.class" , fvoettlibskfftytqwji ) ; } <s> @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Enfvoettlibskfftytqwjiry enfvoettlibskfftytqwjiry ) { refvoettlibskfftytqwjiurn builder . addMember ( enfvoettlibskfftytqwjiry.name , "$T.class" , fvoettlibskfftytqwji ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
fix_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
fix_after_refactoring: @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , java.lang.Sfvoettlibskfftytqwjiring name ) { refvoettlibskfftytqwjiurn builder . addMember ( name , "$T.class" , fvoettlibskfftytqwji ) ; }
√ fix_prediction_before: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
× fix_prediction_after: @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.Annofvoettlibskfftytqwjia.Annofvoettlib.TypeMirror final com.squareup.javapoefvoettlibskfftytqwji.Annofvoettlib.TypeMirror fvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Enfvoettlibskfftytqwjiry enfvoettlibskfftytqwjiry

line_index: 621
bug_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> fix some bugs.
bug_after_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; } <s> public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; } <s> fix some bugs.
fix_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
fix_after_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { this . roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; }
√ fix_prediction_before: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
× fix_prediction_after: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { if ( ( roumovnebpdmjrhektvl ) != null ) { roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; } }

line_index: 623
bug_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
bug_after_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; } } <s> Fix: toolbar issue
fix_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnqbcryam ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; }

line_index: 632
bug_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
bug_after_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
fix_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { if ( ! ( featureHouseComposer . usesFuji () ) ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }

line_index: 652
bug_before_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> Fixed a bug / incorrect warning log in Lisette's code and removed some unnecessary code. (Commiting to dev because dev shouldn't contain this kind of bugs and Lisette pushed those changed to dev...) <bugfix
bug_after_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean vqtssqbjbepstydegxoe ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> @ java.lang.Override public void setButtonsDisabled ( boolean vqtssqbjbepstydegxoe ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> Fixed a bug / incorrect warning log in Lisette's code and removed some unnecessary code. (Commiting to dev because dev shouldn't contain this kind of bugs and Lisette pushed those changed to dev...) <bugfix
fix_before_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( disabled ) ; }
fix_after_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean vqtssqbjbepstydegxoe ) { quitButton . setDisable ( vqtssqbjbepstydegxoe ) ; mainMenuButton . setDisable ( vqtssqbjbepstydegxoe ) ; }
√ fix_prediction_before: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( disabled ) ; }
× fix_prediction_after: @ java.lang.Override public void setButtonsDisabled ( boolean vqtssqbjbepstydegxoe ) { quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; }

line_index: 662
bug_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { if ( gasselrwtqgommbgzpwc == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { if ( gasselrwtqgommbgzpwc == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
fix_after_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { mPlayer . start () ; }
√ fix_prediction_before: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
× fix_prediction_after: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer gasselrwtqgommbgzpwc ) { if ( gasselrwtqgommbgzpwc == ( mPlayer ) ) { mPlayer . start () ; } }

line_index: 665
bug_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> Fixed javadocs issues
bug_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlv ) { return aphzeazfuajuinungdlv ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlv ) { return aphzeazfuajuinungdlv ; } <s> Fixed javadocs issues
fix_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
fix_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ) { return aphzeazfuajuinungdlvction ; }
√ fix_prediction_before: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
× fix_prediction_after: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlv ) { return aphzeazfuajuinungdlv ; }

line_index: 671
bug_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> fix sshutil bug
bug_after_refactoring: public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return false ; } <s> public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return false ; } <s> fix sshutil bug
fix_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return true ; }
fix_after_refactoring: public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return true ; }
√ fix_prediction_before: public boolean promptYesNo ( java.lang.String str ) { return true ; }
× fix_prediction_after: public boolean promptYesNo ( java.lang.String gujyfaomengkjhxwfaoe ) { return true ; }

line_index: 684
bug_before_refactoring: public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
bug_after_refactoring: public bbxdlptayzklyaaeauwnoid postGame ( android.bbxdlptayzklyaaeauwniew.View bbxdlptayzklyaaeauwn ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; } } <s> public bbxdlptayzklyaaeauwnoid postGame ( android.bbxdlptayzklyaaeauwniew.View bbxdlptayzklyaaeauwn ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; } } <s> fixed load issue fo realsys
fix_before_refactoring: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
fix_after_refactoring: public bbxdlptayzklyaaeauwnoid postGame ( android.bbxdlptayzklyaaeauwniew.View bbxdlptayzklyaaeauwn ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; }
√ fix_prediction_before: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
× fix_prediction_after: public bbxdlptayzklyaaeauwnoid postGame ( android.bbxdlptayzklyaaeauwniew.View bbxdlptayzklyaaeauwn ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; return load ; }

line_index: 690
bug_before_refactoring: private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) ; <s> private static native void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
fix_after_refactoring: private static void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) {}
√ fix_prediction_before: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
× fix_prediction_after: private static void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfognxrp , float vtnrpUVdojfkkqtvggxi ) ;

line_index: 694
bug_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
bug_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
fix_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
fix_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; }
√ fix_prediction_before: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
× fix_prediction_after: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; }

line_index: 710
bug_before_refactoring: public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; } <s> public void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
fix_after_refactoring: private void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; }
√ fix_prediction_before: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
× fix_prediction_after: public void setValue ( int jmmvsioxdrzhlyvephcc ) { validateValue ( jmmvsioxdrzhlyvephcc ) ; this . jmmvsioxdrzhlyvephcc = jmmvsioxdrzhlyvephcc ; }

line_index: 711
bug_before_refactoring: private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) ; <s> private static native long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
fix_after_refactoring: private static long _imaqFitCircle2 ( long azwkvdjlkmjxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) { return 0 ; }
√ fix_prediction_before: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
× fix_prediction_after: private static long _imaqFitCircle2 ( long azwkvdjljxajbbfeip , int vqhyqxrqmhozoeoqhwnr , long qwkmyskmolaefqovqknz ) { return 0 ; }

line_index: 724
bug_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> fix null bug in okhttp request
bug_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { mHeaders = tgeeqpqatjkollqkntrw ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { mHeaders = tgeeqpqatjkollqkntrw ; return this ; } <s> fix null bug in okhttp request
fix_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
fix_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { if ( tgeeqpqatjkollqkntrw != null ) { mHeaders = tgeeqpqatjkollqkntrw ; } return this ; }
√ fix_prediction_before: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
× fix_prediction_after: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( final java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { if ( tgeeqpqatjkollqkntrw ) { mHeaders = tgeeqpqatjkollqkntrw ; } return this ; }

line_index: 725
bug_before_refactoring: private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> Fixing bugs
bug_after_refactoring: private static native vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy , long dwifydmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) ; <s> private static native vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy , long dwifydmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
fix_after_refactoring: private static vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy , long dwifydmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) {}
√ fix_prediction_before: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
× fix_prediction_after: private static native vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy ) ;

line_index: 729
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz , javax.servlet.http.HttpServletRequest kyvtdlggczcwyfogkwfl ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( kcxbgdbmlzjdxatlvuiz ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, kcxbgdbmlzjdxatlvuiz {}" , kcxbgdbmlzjdxatlvuiz ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz , javax.servlet.http.HttpServletRequest kyvtdlggczcwyfogkwfl ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( kcxbgdbmlzjdxatlvuiz ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, kcxbgdbmlzjdxatlvuiz {}" , kcxbgdbmlzjdxatlvuiz ) ; return lesson ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( kcxbgdbmlzjdxatlvuiz ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, kcxbgdbmlzjdxatlvuiz {}" , kcxbgdbmlzjdxatlvuiz ) ; return lesson ; }
√ fix_prediction_before: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
× fix_prediction_after: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz ) ;

line_index: 731
bug_before_refactoring: public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_after: public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; }

line_index: 737
bug_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> fixed a bug loook at the commit under this one
bug_after_refactoring: public void init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoynt ldodihcwkdtrjaqbetoy ) { NldodihcwkdtrjaqbetoytworkRldodihcwkdtrjaqbetoygistry.INSTANCE . rldodihcwkdtrjaqbetoygistldodihcwkdtrjaqbetoyrGuiHandlldodihcwkdtrjaqbetoyr ( main.instancldodihcwkdtrjaqbetoy , nldodihcwkdtrjaqbetoyw com.Sandvoxldodihcwkdtrjaqbetoyl.appldodihcwkdtrjaqbetoyng.Proxy.GUIHandlldodihcwkdtrjaqbetoyr () ) ; } <s> public void init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoynt ldodihcwkdtrjaqbetoy ) { NldodihcwkdtrjaqbetoytworkRldodihcwkdtrjaqbetoygistry.INSTANCE . rldodihcwkdtrjaqbetoygistldodihcwkdtrjaqbetoyrGuiHandlldodihcwkdtrjaqbetoyr ( main.instancldodihcwkdtrjaqbetoy , nldodihcwkdtrjaqbetoyw com.Sandvoxldodihcwkdtrjaqbetoyl.appldodihcwkdtrjaqbetoyng.Proxy.GUIHandlldodihcwkdtrjaqbetoyr () ) ; } <s> fixed a bug loook at the commit under this one
fix_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
fix_after_refactoring: public void init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoynt ldodihcwkdtrjaqbetoy ) {}
√ fix_prediction_before: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
× fix_prediction_after: public void init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoytGujaqbetoytGuiHandlldodihcwkdtrjaqbetoyrGuiHandlldodihcwkdtrjaqbetoyrGuiHandlldodihcwkdtrjaqbetoyrGuiHandlld ( main.instancldodihcwkdtrjaqbetoyoyt.Proxy.GUIHandlldodihcwkdtrjaqbetoy

line_index: 740
bug_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
bug_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
fix_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
fix_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
√ fix_prediction_before: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
× fix_prediction_after: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }

line_index: 747
bug_before_refactoring: public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; } <s> public void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
fix_after_refactoring: private void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , lquguagojzuhlsjrbfiu . getY () ) ; }
√ fix_prediction_before: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
× fix_prediction_after: private void reveal ( org.minesweeper.core.Cell lquguagojzuhlsjrbfiu ) { reveal ( lquguagojzuhlsjrbfiu . getX () , ( - ( lquguagojzuhlsjrbfiu . getY () ) ) ; }

line_index: 754
bug_before_refactoring: protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ; <s> protected native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
fix_after_refactoring: private native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ;
√ fix_prediction_before: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
× fix_prediction_after: private native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , float [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ;

line_index: 757
bug_before_refactoring: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> Added Circular progress animation Added Transitions Beautified Display Result Switched Spreadsheets and folder to official folder Modified bitmap title minor bug fix
bug_after_refactoring: @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> Added Circular progress animation Added Transitions Beautified Display Result Switched Spreadsheets and folder to official folder Modified bitmap title minor bug fix
fix_before_refactoring: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) {}
fix_after_refactoring: @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) {}
√ fix_prediction_before: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) {}
× fix_prediction_after: @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; }

line_index: 773
bug_before_refactoring: void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> Back again. FIxed TeachingPolicy realated error in QLearning.java
bug_after_refactoring: void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy ocfvmpqioxsflwjthurs ) ; <s> void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy ocfvmpqioxsflwjthurs ) ; <s> Back again. FIxed TeachingPolicy realated error in QLearning.java
fix_before_refactoring: void ApplyWeights ( ) ;
fix_after_refactoring: void ApplyWeights ( ) ;
√ fix_prediction_before: void ApplyWeights ( ) ;
× fix_prediction_after: void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy ocfvmpqioxsflwjthurs ) ;

line_index: 800
bug_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
bug_after_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
fix_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) {}
√ fix_prediction_before: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
× fix_prediction_after: private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) { gegevensLijst () ; }

line_index: 802
bug_before_refactoring: private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) ; <s> private static native void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
fix_after_refactoring: private static void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) {}
√ fix_prediction_before: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
× fix_prediction_after: private static void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , int wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) {}

line_index: 810
bug_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
bug_after_refactoring: @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
fix_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) { cP . setEnabled ( true ) ; }
√ fix_prediction_before: @ java.lang.Override public void onMessage ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
× fix_prediction_after: @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) {}

line_index: 818
bug_before_refactoring: private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) ; <s> private static native void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
fix_after_refactoring: private static void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) {}
√ fix_prediction_before: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
× fix_prediction_after: private static void _imaqWriteTIFFFile ( long stqnopudizcggdqqcek , long kehewiutcqqipxibikqt , long ettb Delayplwqmlxlaorcps , long uwayqkygpiwqyangqbidqbidqbidqbidq ) {}

line_index: 833
bug_before_refactoring: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> fixed cs issues  added adfs changes
bug_after_refactoring: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbgzo , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbgzo . getParameter ( rcogjtkojyeyykoqmxmz ) ; if ( value != null ) { zatclxmnnwglgaqveerc . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; } } <s> private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbgzo , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbgzo . getParameter ( rcogjtkojyeyykoqmxmz ) ; if ( value != null ) { zatclxmnnwglgaqveerc . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; } } <s> fixed cs issues  added adfs changes
fix_before_refactoring: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
fix_after_refactoring: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbgzo , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbgzo . getParameter ( rcogjtkojyeyykoqmxmz ) ; if ( value != null ) { zatclxmnnwglgaqveerc . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; } }
√ fix_prediction_before: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
× fix_prediction_after: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbg , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbg . getParameter ( rcogjtkojyeyykoqmxmz ) ; if ( value != null ) { zatclxmnnwglgaqv . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; } }

line_index: 835
bug_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
bug_after_refactoring: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } <s> @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } <s> fixed some problem with putting null value parameter to cache
fix_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
fix_after_refactoring: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { if ( leiuldorclztiiguyhrn != null ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } }
√ fix_prediction_before: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
× fix_prediction_after: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; }

line_index: 838
bug_before_refactoring: public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
bug_after_refactoring: public void enqueue ( Item eupucixqojmdrwsemxsm ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void enqueue ( Item eupucixqojmdrwsemxsm ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
fix_before_refactoring: public void enqueue ( Item item ) {}
fix_after_refactoring: public void enqueue ( Item eupucixqojmdrwsemxsm ) {}
√ fix_prediction_before: public void enqueue ( Item item ) {}
× fix_prediction_after: @ java.lang.Override public void enqueue ( Item eupucixqojmdrwsemxsm ) {}

line_index: 847
bug_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
bug_after_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , long wakskxvugzuuypusmrzy_elements , long ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ; <s> long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , long wakskxvugzuuypusmrzy_elements , long ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
fix_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
fix_after_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , int wakskxvugzuuypusmrzy_elements , int ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ;
√ fix_prediction_before: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
× fix_prediction_after: long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , long wakskxvugzuuypusmrzy_elements , int ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ;

line_index: 851
bug_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> fix bug: remove unnecessary id
bug_after_refactoring: public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String oqflurdowdgfclutcvkk , java.lang.String thdwgopckozrkikysbpi , int pzkcbcffqjkjzobytfqk , com.bugull.mongo.BuguUpdater.Bitwise vsfbwecaktucrdykqaht ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String oqflurdowdgfclutcvkk , java.lang.String thdwgopckozrkikysbpi , int pzkcbcffqjkjzobytfqk , com.bugull.mongo.BuguUpdater.Bitwise vsfbwecaktucrdykqaht ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; } <s> fix bug: remove unnecessary id
fix_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
fix_after_refactoring: public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String thdwgopckozrkikysbpi , int pzkcbcffqjkjzobytfqk , com.bugull.mongo.BuguUpdater.Bitwise vsfbwecaktucrdykqaht ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; }
√ fix_prediction_before: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
× fix_prediction_after: public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String oqflurdowdgfclutcvkk ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; }

line_index: 853
bug_before_refactoring: public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> Fixed bugs
bug_after_refactoring: public void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; } <s> public void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; } <s> Fixed bugs
fix_before_refactoring: private void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; }
fix_after_refactoring: private void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; }
√ fix_prediction_before: private void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; }
× fix_prediction_after: public void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { this . infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; }

line_index: 856
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
bug_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( ksxqplrtmqmrfoanidea . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( ksxqplrtmqmrfoanidea . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
fix_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( ksxqplrtmqmrfoanidea . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; }

line_index: 861
bug_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> bug fix  does not display the map activity on new users
bug_after_refactoring: public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoakption fnqqxsrgggrfivzrmoak ) { if ( fnqqxsrgggrfivzrmoak != null ) { android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt mapIntfnqqxsrgggrfivzrmoaknt = nfnqqxsrgggrfivzrmoakw android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt () ; mapIntfnqqxsrgggrfivzrmoaknt . sfnqqxsrgggrfivzrmoaktClass ( gfnqqxsrgggrfivzrmoaktApplicationContfnqqxsrgggrfivzrmoakxt () , com.fnqqxsrgggrfivzrmoakxamplfnqqxsrgggrfivzrmoak.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntfnqqxsrgggrfivzrmoaknt ) ; } fnqqxsrgggrfivzrmoaklsfnqqxsrgggrfivzrmoak {} } <s> public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoakption fnqqxsrgggrfivzrmoak ) { if ( fnqqxsrgggrfivzrmoak != null ) { android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt mapIntfnqqxsrgggrfivzrmoaknt = nfnqqxsrgggrfivzrmoakw android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt () ; mapIntfnqqxsrgggrfivzrmoaknt . sfnqqxsrgggrfivzrmoaktClass ( gfnqqxsrgggrfivzrmoaktApplicationContfnqqxsrgggrfivzrmoakxt () , com.fnqqxsrgggrfivzrmoakxamplfnqqxsrgggrfivzrmoak.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntfnqqxsrgggrfivzrmoaknt ) ; } fnqqxsrgggrfivzrmoaklsfnqqxsrgggrfivzrmoak {} } <s> bug fix  does not display the map activity on new users
fix_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
fix_after_refactoring: public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoakption fnqqxsrgggrfivzrmoak ) { if ( fnqqxsrgggrfivzrmoak != null ) {} fnqqxsrgggrfivzrmoaklsfnqqxsrgggrfivzrmoak {} }
√ fix_prediction_before: public void done ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
× fix_prediction_after: public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoaknt ) {}

line_index: 862
bug_before_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> fix bug
bug_after_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { return clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { return clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; } <s> fix bug
fix_before_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
fix_after_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; }
√ fix_prediction_before: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
× fix_prediction_after: public void setHostnameVerifier ( jjbnodujldiwfkabcaor ) { clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; }

line_index: 871
bug_before_refactoring: protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
bug_after_refactoring: protected void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
fix_before_refactoring: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
fix_after_refactoring: public void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; }
√ fix_prediction_before: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
× fix_prediction_after: protected void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdNitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdNitmmzxvkhuu ; updateTextureViewSize () ; }

line_index: 874
bug_before_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
fix_after_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
√ fix_prediction_before: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
× fix_prediction_after: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( ( rokhkmnrelxmeijxsjqn == null ) || ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }

line_index: 884
bug_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
bug_after_refactoring: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( fzkdeiyizmbeezjtevyf ) ; } <s> @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( fzkdeiyizmbeezjtevyf ) ; } <s> New dialog fragments on rotate device fixed + some bugs
fix_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
fix_after_refactoring: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { failureHandler ( fzkdeiyizmbeezjtevyf ) ; }
√ fix_prediction_before: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
× fix_prediction_after: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( fzkdeiyizmbeezjtevyf ) ; }

line_index: 885
bug_before_refactoring: public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> public void warn ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; } <s> public void warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
fix_after_refactoring: public boolean warn ( long dbfujcpkyijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; }
√ fix_prediction_before: public boolean warn ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , nowNanos , objects ) ; }
× fix_prediction_after: public boolean warn ( long dbfujcpijhhjzusblz , java.lang.Object . . . jisfrysvbiswtnkeffkx ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.WARN , dbfujcpkyijhhjzusblz , jisfrysvbiswtnkeffkx ) ; }

line_index: 887
bug_before_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
fix_after_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; }
√ fix_prediction_before: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
× fix_prediction_after: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; }

line_index: 900
bug_before_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
bug_after_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { return this . delete ( dkcvygybsnboqbdzeqnu , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { return this . delete ( dkcvygybsnboqbdzeqnu , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
fix_before_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
fix_after_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { this . delete ( dkcvygybsnboqbdzeqnu , null ) ; }
√ fix_prediction_before: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
× fix_prediction_after: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { this . delete ( dkcvygybsnboqbdzeqnu , this ) ; }

line_index: 904
bug_before_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
bug_after_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession ginngbvakarzvhhspeoc ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession ginngbvakarzvhhspeoc ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
fix_before_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
fix_after_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
√ fix_prediction_before: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
× fix_prediction_after: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.UserSession > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }

line_index: 914
bug_before_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> API restructuring  bugfixes
bug_after_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; } <s> API restructuring  bugfixes
fix_before_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
fix_after_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; }
√ fix_prediction_before: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
× fix_prediction_after: public boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzsllyyvazcqmzsllyyvazcqmzslhliqabycdnqnkwxsnlyy vagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoc lb , biqabycdnqnkwxsnlyyvazcqmzsllyyvazlyy vagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; }

line_index: 928
bug_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
bug_after_refactoring: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; java.lang.Systbbczqtiwgqwlskhwcetpm.out . println ( ( "DEBUG: 'Add Points' chbbczqtiwgqwlskhwcetpckbbczqtiwgqwlskhwcetpd statbbczqtiwgqwlskhwcetp is " + ( addRadioButton . isSbbczqtiwgqwlskhwcetplbbczqtiwgqwlskhwcetpctbbczqtiwgqwlskhwcetpd () ) ) ) ; } <s> public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; java.lang.Systbbczqtiwgqwlskhwcetpm.out . println ( ( "DEBUG: 'Add Points' chbbczqtiwgqwlskhwcetpckbbczqtiwgqwlskhwcetpd statbbczqtiwgqwlskhwcetp is " + ( addRadioButton . isSbbczqtiwgqwlskhwcetplbbczqtiwgqwlskhwcetpctbbczqtiwgqwlskhwcetpd () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
fix_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
fix_after_refactoring: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; }
√ fix_prediction_before: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
× fix_prediction_after: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd () { addPoints = trubbczqtiwgqwlskhwcetpetp ; }

line_index: 941
bug_before_refactoring: private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) ; <s> private static native void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
fix_after_refactoring: private static void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) {}
√ fix_prediction_before: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
× fix_prediction_after: private static void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , int onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) {}

line_index: 944
bug_before_refactoring: public static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> public static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> -fix lower and upper bound bug in event model -refactor event model -fix date object event model test
bug_after_refactoring: public static java.util.Date makeUpperBound ( java.util.Date iwhxpmnhdetzmsevyrxb ) { return new org.joda.time.DateTime ( iwhxpmnhdetzmsevyrxb ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> public static java.util.Date makeUpperBound ( java.util.Date iwhxpmnhdetzmsevyrxb ) { return new org.joda.time.DateTime ( iwhxpmnhdetzmsevyrxb ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> -fix lower and upper bound bug in event model -refactor event model -fix date object event model test
fix_before_refactoring: private static org.joda.time.DateTime makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) ; }
fix_after_refactoring: private static org.joda.time.DateTime makeUpperBound ( java.util.Date iwhxpmnhdetzmsevyrxb ) { return new org.joda.time.DateTime ( iwhxpmnhdetzmsevyrxb ) . withTime ( 23 , 59 , 59 , 0 ) ; }
√ fix_prediction_before: private static org.joda.time.DateTime makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) ; }
× fix_prediction_after: private static org.joda.time.DateTime makeUpperBound ( java.util.Date iwhxpmnhdetzmsevyrxb ) { return new org.joda.time.DateTime ( iwhxpmnhdetzmsevyrxb ) . withTime ( 23 , 59 , 0 ) . toDate () ; }

line_index: 949
bug_before_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> Add further configurations and fix error with non-working activityCheckConfiguration
bug_after_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff , com.facebook.react.bridge.Promise qljhpunaodhznjcsohlo ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff , com.facebook.react.bridge.Promise qljhpunaodhznjcsohlo ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> Add further configurations and fix error with non-working activityCheckConfiguration
fix_before_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
fix_after_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
√ fix_prediction_before: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
× fix_prediction_after: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff , com.facebook.react.bridge.Promise qljhpunaodhznjcsohlo ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_LATENCY" ) ; } }

line_index: 956
bug_before_refactoring: public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_after: public void removePattern ( java.lang.String zpmgeqosqsadkqbcepippippippippippippippippip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; }

line_index: 957
bug_before_refactoring: public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
bug_after_refactoring: public static void Disconnect ( java.sql.Connection mgipvsyxsvvvatnemqbf ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( mgipvsyxsvvvatnemqbf ) ; } <s> public static void Disconnect ( java.sql.Connection mgipvsyxsvvvatnemqbf ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( mgipvsyxsvvvatnemqbf ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
fix_before_refactoring: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
fix_after_refactoring: public void Disconnect ( java.sql.Connection mgipvsyxsvvvatnemqbf ) { closeQuietly ( mgipvsyxsvvvatnemqbf ) ; }
√ fix_prediction_before: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
× fix_prediction_after: public void Disconnect ( java.sql.Connection mgipvsyxsvrratnemqbf ) { closeQuietly ( mgipvsyxsvvvatnemqbf ) ; }

line_index: 958
bug_before_refactoring: private void setEmail ( java.lang.String val ) { email = val ; } <s> private void setEmail ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; } <s> private void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public void setEmail ( java.lang.String val ) { email = val ; }
fix_after_refactoring: public void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; }
√ fix_prediction_before: public void setEmail ( java.lang.String val ) { email = val ; }
× fix_prediction_after: public void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { this . email = bcamzakrontfabqfrcaa ; }

line_index: 959
bug_before_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
fix_after_refactoring: public boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { synchronized ( kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } }
√ fix_prediction_before: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
× fix_prediction_after: public boolean isDownloadingPiece ( com.jtorrent.kmpfyvqnckzjysylfy.Peer kmpfyvqcqnckzjysylfylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; }

line_index: 962
bug_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
bug_after_refactoring: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } <s> public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
fix_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
fix_after_refactoring: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { synchronized ( tmp_rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } }
√ fix_prediction_before: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
× fix_prediction_after: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { return hash . Get_by_or_null ( rndmajnurftsddcqhmxb ) ; }

line_index: 973
bug_before_refactoring: private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) ; <s> private static native void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
fix_after_refactoring: private static void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) {}
√ fix_prediction_before: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
× fix_prediction_after: private static void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdcchqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokuvkxbtxg ) {}

line_index: 975
bug_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
bug_after_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
fix_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
fix_after_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; }
√ fix_prediction_before: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
× fix_prediction_after: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ;TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; }

line_index: 984
bug_before_refactoring: private static native void _IMAQdxStartAcquisition ( int id ) ; <s> private static native void _IMAQdxStartAcquisition ( int id ) ; <s> Fixing bugs
bug_after_refactoring: private static native vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) ; <s> private static native vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxStartAcquisition ( int id ) {}
fix_after_refactoring: private static vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) {}
√ fix_prediction_before: private static void _IMAQdxStartAcquisition ( int id ) {}
× fix_prediction_after: private static vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( ) { return 0 ; }

line_index: 994
bug_before_refactoring: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> Changed join message  fixed bugs
bug_after_refactoring: @ org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.EvgnixjponlvumjprxzyvlntHandlgnixjponlvumjprxzyvlr public void onDamaggnixjponlvumjprxzyvl ( org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlntity.EntityDamaggnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvlnt gnixjponlvumjprxzyvl ) { if ( ( gnixjponlvumjprxzyvl . ggnixjponlvumjprxzyvltEntity () ) instancgnixjponlvumjprxzyvlof org.bukkit.gnixjponlvumjprxzyvlntity.Playgnixjponlvumjprxzyvlr ) { if ( ( pl . ggnixjponlvumjprxzyvltGamgnixjponlvumjprxzyvl () . ggnixjponlvumjprxzyvltStatus () ) != ( GamgnixjponlvumjprxzyvlStatus.PLAYING ) ) { gnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltCancgnixjponlvumjprxzyvlllgnixjponlvumjprxzyvld ( trugnixjponlvumjprxzyvl ) ; } } } <s> @ org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.EvgnixjponlvumjprxzyvlntHandlgnixjponlvumjprxzyvlr public void onDamaggnixjponlvumjprxzyvl ( org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlntity.EntityDamaggnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvlnt gnixjponlvumjprxzyvl ) { if ( ( gnixjponlvumjprxzyvl . ggnixjponlvumjprxzyvltEntity () ) instancgnixjponlvumjprxzyvlof org.bukkit.gnixjponlvumjprxzyvlntity.Playgnixjponlvumjprxzyvlr ) { if ( ( pl . ggnixjponlvumjprxzyvltGamgnixjponlvumjprxzyvl () . ggnixjponlvumjprxzyvltStatus () ) != ( GamgnixjponlvumjprxzyvlStatus.PLAYING ) ) { gnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltCancgnixjponlvumjprxzyvlllgnixjponlvumjprxzyvld ( trugnixjponlvumjprxzyvl ) ; } } } <s> Changed join message  fixed bugs
fix_before_refactoring: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } }
fix_after_refactoring: @ org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.EvgnixjponlvumjprxzyvlntHandlgnixjponlvumjprxzyvlr public void onDamaggnixjponlvumjprxzyvl ( org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlntity.EntityDamaggnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvlnt gnixjponlvumjprxzyvl ) { if ( ( pl . ggnixjponlvumjprxzyvltGamgnixjponlvumjprxzyvl () . ggnixjponlvumjprxzyvltStatus () ) != ( GamgnixjponlvumjprxzyvlStatus.PLAYING ) ) { gnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltCancgnixjponlvumjprxzyvlllgnixjponlvumjprxzyvld ( trugnixjponlvumjprxzyvl ) ; } }
√ fix_prediction_before: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } }
× fix_prediction_after: @ org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.Evgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlntgnixjponlvumjprxzyvlntgnixjponlvumjprxzyvlntgnixjponlvumjprxzyvlntgnixjponlvumjprxzyvlntgnixjponlvumjprxzyvlntgnixjponlvumjprxzyvl

line_index: 995
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> Fix location bug for location button Change pin images Add some i18n strings Fixups
bug_after_refactoring: @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public aiftvndogzylktcwaduzoid onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public aiftvndogzylktcwaduzoid onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> Fix location bug for location button Change pin images Add some i18n strings Fixups
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
fix_after_refactoring: @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public aiftvndogzylktcwaduzoid onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
× fix_prediction_after: @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public aiftvndogzylktcwaduzoid onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { return mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; }

line_index: 1000
bug_before_refactoring: protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> fixed errors  finally
bug_after_refactoring: protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String murmqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( murmqdyxvrnxxbrdqjdu ) ; return res ; } <s> protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String murmqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( murmqdyxvrnxxbrdqjdu ) ; return res ; } <s> fixed errors  finally
fix_before_refactoring: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; }
fix_after_refactoring: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String murmqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( murmqdyxvrnxxbrdqjdu ) ; return res ; }
√ fix_prediction_before: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; }
× fix_prediction_after: protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String mascqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( cognqdyxvrnxxbrdqjdu ) ; return res ; }

line_index: 1001
bug_before_refactoring: private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) ; <s> private static native long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
fix_after_refactoring: private static long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) { return 0 ; }
√ fix_prediction_before: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
× fix_prediction_after: private static long _imaqInterpolatePoints ( long mngizgiufxqjsoviur , long komxbvzygdypedNinfvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) { return 0 ; }

line_index: 1005
bug_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
bug_after_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . set ( joeisnuhretzrvllacnj ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . set ( joeisnuhretzrvllacnj ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
fix_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
fix_after_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( joeisnuhretzrvllacnj ) ; }
√ fix_prediction_before: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
× fix_prediction_after: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . get () ; }

line_index: 1021
bug_before_refactoring: @ java.lang.Override protected void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; } <s> @ java.lang.Override protected void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; } <s> Fix a few style errors.
bug_after_refactoring: @ java.lang.Override protected void rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; } <s> @ java.lang.Override protected void rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; } <s> Fix a few style errors.
fix_before_refactoring: @ java.lang.Override public void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; }
fix_after_refactoring: @ java.lang.Override public void rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; }
√ fix_prediction_before: @ java.lang.Override public void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; }
× fix_prediction_after: @ java.lang.Override protected void rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; }

line_index: 1028
bug_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
bug_after_refactoring: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
fix_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
fix_after_refactoring: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { lock . openAll () ; }
√ fix_prediction_before: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
× fix_prediction_after: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.Throwable twtrayeczorvlxyruaqe ) { lock . openAll () ; }

line_index: 1044
bug_before_refactoring: private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
bug_after_refactoring: private void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; } <s> private void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; } <s> Fixed some thread flexibility issues.
fix_before_refactoring: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
fix_after_refactoring: public void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; }
√ fix_prediction_before: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
× fix_prediction_after: private void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; }

line_index: 1045
bug_before_refactoring: public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
bug_after_refactoring: ampppgxvktisvdxgbmlwublic mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; } <s> ampppgxvktisvdxgbmlwublic mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; } <s> Bug fix
fix_before_refactoring: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
fix_after_refactoring: ampppgxvktisvdxgbmlwublic java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; }
√ fix_prediction_before: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
× fix_prediction_after: ampppgxvktisvdxgbmlwublic mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; }

line_index: 1046
bug_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> Fixed bug introduced during slight refactor
bug_after_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb.name , pkdjcskaadbjvftyzgbb ) ; } <s> public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb.name , pkdjcskaadbjvftyzgbb ) ; } <s> Fixed bug introduced during slight refactor
fix_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
fix_after_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb . getName () , pkdjcskaadbjvftyzgbb ) ; }
√ fix_prediction_before: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
× fix_prediction_after: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb.name , pkdjcskaadbjvftyzgbb ) ; }

line_index: 1052
bug_before_refactoring: public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> Bugfix
bug_after_refactoring: public void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { this . kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqp , new java.lang.Integer ( this . kkmenwwekfevkxnhrdqps . size () ) ) ; } <s> public void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { this . kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqp , new java.lang.Integer ( this . kkmenwwekfevkxnhrdqps . size () ) ) ; } <s> Bugfix
fix_before_refactoring: protected void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
fix_after_refactoring: protected void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { this . kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqp , new java.lang.Integer ( this . kkmenwwekfevkxnhrdqps . size () ) ) ; }
√ fix_prediction_before: protected void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
× fix_prediction_after: public void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { this . kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqps . size () ) ; }

line_index: 1062
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> Fix bugs for old android devices  bug on the position of the edition of a contributor and resize the copyright icon - Begin adding a left menu and a toolbar
bug_after_refactoring: @ jaclvuefecqqmgzgrhtjpha.lang.Oclvuefecqqmgzgrhtjpherride public clvuefecqqmgzgrhtjphoid onClick ( android.clvuefecqqmgzgrhtjphiew.View clvuefecqqmgzgrhtjph ) { switch ( clvuefecqqmgzgrhtjph . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActiclvuefecqqmgzgrhtjphity () , com.morgane.painauchocolat.acticlvuefecqqmgzgrhtjphities.BringerActiclvuefecqqmgzgrhtjphity . class ) ; startActiclvuefecqqmgzgrhtjphityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> @ jaclvuefecqqmgzgrhtjpha.lang.Oclvuefecqqmgzgrhtjpherride public clvuefecqqmgzgrhtjphoid onClick ( android.clvuefecqqmgzgrhtjphiew.View clvuefecqqmgzgrhtjph ) { switch ( clvuefecqqmgzgrhtjph . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActiclvuefecqqmgzgrhtjphity () , com.morgane.painauchocolat.acticlvuefecqqmgzgrhtjphities.BringerActiclvuefecqqmgzgrhtjphity . class ) ; startActiclvuefecqqmgzgrhtjphityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> Fix bugs for old android devices  bug on the position of the edition of a contributor and resize the copyright icon - Begin adding a left menu and a toolbar
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } }
fix_after_refactoring: @ jaclvuefecqqmgzgrhtjpha.lang.Oclvuefecqqmgzgrhtjpherride public clvuefecqqmgzgrhtjphoid onClick ( android.clvuefecqqmgzgrhtjphiew.View clvuefecqqmgzgrhtjph ) { switch ( clvuefecqqmgzgrhtjph . getId () ) { } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } }
× fix_prediction_after: @ jaclvuefecqqmgzgrhtjphoid onClick ( android.clvuefecqqmgzgrhtjph ) { switch ( clvuefecqqmgzgrhtjph ) { } }

line_index: 1066
bug_before_refactoring: public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; } <s> public void replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
fix_after_refactoring: public boolean replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { return this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; }
√ fix_prediction_before: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
× fix_prediction_after: public boolean replace ( Kruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { return this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; }

line_index: 1074
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
√ fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ javax.annotation.Oknwndiqoztbihurpntrkerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( kp , jp ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }

line_index: 1083
bug_before_refactoring: public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . objectwjvrqlgdmgrmnebyfajo ) { thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajoandra.utilwjvrqlgdmgrmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; } <s> public void warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . objectwjvrqlgdmgrmnebyfajo ) { thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajoandra.utilwjvrqlgdmgrmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
fix_after_refactoring: public boolean warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . objectwjvrqlgdmgrmnebyfajo ) { return thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajoandra.utilwjvrqlgdmgrmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; }
√ fix_prediction_before: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
× fix_prediction_after: public void warn ( java.lang.String wjvrqlgdmgrmnebyfajo ) {}

line_index: 1086
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
bug_after_refactoring: @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; } } <s> @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
fix_after_refactoring: @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
× fix_prediction_after: @ jarlhznavxzzcjdtqpthkge public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtiew.View rlhznavxzzcjdtqpthkg ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkg , rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; return true ; }

line_index: 1089
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
bug_after_refactoring: @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } <s> @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
fix_after_refactoring: @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
× fix_prediction_after: @ jaselfaux.xcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuervide public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnuiew , int id ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } return null ; }

line_index: 1093
bug_before_refactoring: public void setRange ( final java.lang.Long min , final java.lang.Long max ) { setRange ( min , max , null ) ; } <s> public void setRange ( final java.lang.Long min , final java.lang.Long max ) { setRange ( min , max , null ) ; } <s> Added Colors type. Minor bugfixes.
bug_after_refactoring: public void setRange ( final java.lang.Long rmdiwuktnztekwrpngko , final java.lang.Long jqosqrrkbdpzgygqavex ) { setRange ( rmdiwuktnztekwrpngko , jqosqrrkbdpzgygqavex , null ) ; } <s> public void setRange ( final java.lang.Long rmdiwuktnztekwrpngko , final java.lang.Long jqosqrrkbdpzgygqavex ) { setRange ( rmdiwuktnztekwrpngko , jqosqrrkbdpzgygqavex , null ) ; } <s> Added Colors type. Minor bugfixes.
fix_before_refactoring: public void setRange ( final java.lang.Double min , final java.lang.Double max ) { setRange ( min , max , null ) ; }
fix_after_refactoring: public void setRange ( final java.lang.Double rmdiwuktnztekwrpngko , final java.lang.Double jqosqrrkbdpzgygqavex ) { setRange ( rmdiwuktnztekwrpngko , jqosqrrkbdpzgygqavex , null ) ; }
√ fix_prediction_before: public void setRange ( final java.lang.Double min , final java.lang.Double max ) { setRange ( min , max , null ) ; }
× fix_prediction_after: public void setRange ( final java.lang.Long rmdiwuktnztekwrpngko , final java.lang.Long jqosqrrkbdpzgygqavex ) { setRange ( rmdiwuktnztekwrpngko , jqosqrrkbdpzgygqavex , null , null ) ; }

line_index: 1094
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> 【+】fix bug
bug_after_refactoring: @ jalgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerride public lgidyoehkrapqmepkbpmoid onClick ( android.lgidyoehkrapqmepkbpmiew.View lgidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> @ jalgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerride public lgidyoehkrapqmepkbpmoid onClick ( android.lgidyoehkrapqmepkbpmiew.View lgidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> 【+】fix bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
fix_after_refactoring: @ jalgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerride public lgidyoehkrapqmepkbpmoid onClick ( android.lgidyoehkrapqmepkbpmiew.View lgidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
× fix_prediction_after: @ jalgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerject onClick ( android.lgidyoehkrapqmepkbpmiew.View lgidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; return null ; }

line_index: 1097
bug_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
bug_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { return new leanderk.izou.iftt.actions.ActionFlow ( sstmnnrpykkwrzqqkknl , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { return new leanderk.izou.iftt.actions.ActionFlow ( sstmnnrpykkwrzqqkknl , conditionAction , targetAction ) ; } <s> fixed bugs
fix_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
fix_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { this . sstmnnrpykkwrzqqkknl = sstmnnrpykkwrzqqkknl ; return this ; }
√ fix_prediction_before: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
× fix_prediction_after: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { this . targetAction = sstmnnrpykkwrzqqkknl ; return this ; }

line_index: 1103
bug_before_refactoring: public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> Organization id issue resolved.
bug_after_refactoring: public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { try { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; } catch ( java.lang.NullPointerException e ) { this . kafiruiegjepzilydofa = 999 ; } } <s> public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { try { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; } catch ( java.lang.NullPointerException e ) { this . kafiruiegjepzilydofa = 999 ; } } <s> Organization id issue resolved.
fix_before_refactoring: public void setId ( long id ) { this . id = id ; }
fix_after_refactoring: public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; }
√ fix_prediction_before: public void setId ( long id ) { this . id = id ; }
× fix_prediction_after: public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; return this ; }

line_index: 1115
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
× fix_prediction_after: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv , int type ) { determineTip ( spinnerCountry . getSelectedItem () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; }

line_index: 1128
bug_before_refactoring: public void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; } <s> public void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; } <s> GroceryList bug fixed. Arraylist copy
bug_after_refactoring: public void removeGroceryItem ( int xkudmvypkisekbjmizvs ) { groceryList . remove ( xkudmvypkisekbjmizvs ) ; } <s> public void removeGroceryItem ( int xkudmvypkisekbjmizvs ) { groceryList . remove ( xkudmvypkisekbjmizvs ) ; } <s> GroceryList bug fixed. Arraylist copy
fix_before_refactoring: private void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; }
fix_after_refactoring: private void removeGroceryItem ( int xkudmvypkisekbjmizvs ) { groceryList . remove ( xkudmvypkisekbjmizvs ) ; }
√ fix_prediction_before: private void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; }
× fix_prediction_after: public void removeGroceryItem ( int xkudmvypkisekbjmizvs ) { groceryList . remove ( xkudmvypkisekbjmizvs ) ; }

line_index: 1139
bug_before_refactoring: public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> handful of bug fixes
bug_after_refactoring: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { if ( ! ( kyetvxcacckehxgkcdqy . startsWith ( "\u00a7" ) ) ) this . kyetvxcacckehxgkcdqy = ( org.bukkit.ChatColor.BLACK ) + kyetvxcacckehxgkcdqy ; else this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; } <s> public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { if ( ! ( kyetvxcacckehxgkcdqy . startsWith ( "\u00a7" ) ) ) this . kyetvxcacckehxgkcdqy = ( org.bukkit.ChatColor.BLACK ) + kyetvxcacckehxgkcdqy ; else this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; } <s> handful of bug fixes
fix_before_refactoring: public void setText ( java.lang.String text ) { this . text = text ; }
fix_after_refactoring: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; }
√ fix_prediction_before: public void setText ( java.lang.String text ) { this . text = text ; }
× fix_prediction_after: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { this . kyetvxcacckehxgkcdqy = ( org.bukkit.ChatColor.BLACK ) + kyetvxcacckehxgkcdqy ; else this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; }

line_index: 1144
bug_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
bug_after_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy , long nofesayiiemyttxgqvsd ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy , long nofesayiiemyttxgqvsd ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
fix_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
fix_after_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; }
√ fix_prediction_before: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
× fix_prediction_after: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy , long nofesayiiemyttxgqvsd ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmqamxoncmt , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; return addEntities ( flzcedxnmqamxoncmpqwcouxpt , ldxztptngxkljqubkfjy ) ; }

line_index: 1157
bug_before_refactoring: private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) ; <s> private static native void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
fix_after_refactoring: private static void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) {}
√ fix_prediction_before: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
× fix_prediction_after: private static void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdvtrur ) ;

line_index: 1190
bug_before_refactoring: @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
bug_after_refactoring: @ org.spine3.server.aggregate.Apply public void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
fix_before_refactoring: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
fix_after_refactoring: @ org.spine3.server.aggregate.Apply private void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; }
√ fix_prediction_before: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
× fix_prediction_after: @ org.spine3.server.aggregate.Apply private void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nynamrkqztglchsjktdbf . getId () ) . setDueDate ( nrxrkqztglchsjktdbf . getNewDueDate () ) ; }

line_index: 1219
bug_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
fix_after_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw , int position ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; }
√ fix_prediction_before: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
× fix_prediction_after: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdldljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ;

line_index: 1230
bug_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
bug_after_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
fix_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) {}
√ fix_prediction_before: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
× fix_prediction_after: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) { this . setVisible ( false ) ; }

line_index: 1234
bug_before_refactoring: public static void updatePilot ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } <s> public static void updatePilot ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } <s> bugfix: null checks in sdk methods
bug_after_refactoring: public static void updatePilot ( com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot dhwseyqhzgdnpbhyuayv , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.jqqqlztdmkepxdrxbjhps.AirMapCallback < com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot > jqqqlztdmkepxdrxbjhp ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( dhwseyqhzgdnpbhyuayv , jqqqlztdmkepxdrxbjhp ) ; } <s> public static void updatePilot ( com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot dhwseyqhzgdnpbhyuayv , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.jqqqlztdmkepxdrxbjhps.AirMapCallback < com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot > jqqqlztdmkepxdrxbjhp ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( dhwseyqhzgdnpbhyuayv , jqqqlztdmkepxdrxbjhp ) ; } <s> bugfix: null checks in sdk methods
fix_before_refactoring: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } }
fix_after_refactoring: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot dhwseyqhzgdnpbhyuayv , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.jqqqlztdmkepxdrxbjhps.AirMapCallback < com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot > jqqqlztdmkepxdrxbjhp ) { if ( dhwseyqhzgdnpbhyuayv != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( dhwseyqhzgdnpbhyuayv , jqqqlztdmkepxdrxbjhp ) ; } }
√ fix_prediction_before: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } }
× fix_prediction_after: public static void updatePilot ( com.airmap.airmapsdk.models.dhwseyqhzgdnpbhy Coursev.AirMapPilot dhwseyqhzgdnpbhy Coursev , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.jqqqlztdmkepxdrxbjhps.AirMapCallback < com.airmap.airmapsdk.models.dhwseyqhzgdnpbhy Coursev.AirMapPilot > jqqqlztdmkepxdrxbjhp ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( dhwseyqhzgdnpbhy Coursev , jqqqlztdmkepxdrxbjhp ) ; }

line_index: 1250
bug_before_refactoring: public static void log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> public static void log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> Bug #5764 - Fix log level management (in MegaApplication)
bug_after_refactoring: public static void log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; } } <s> public static void log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; } } <s> Bug #5764 - Fix log level management (in MegaApplication)
fix_before_refactoring: public static void log ( java.lang.String origin , java.lang.String message ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; }
fix_after_refactoring: public static void log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; }
√ fix_prediction_before: public static void log ( java.lang.String origin , java.lang.String message ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; }
× fix_prediction_after: public static void log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { nz.Mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; }

line_index: 1256
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
bug_after_refactoring: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
fix_after_refactoring: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( true ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
× fix_prediction_after: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( true ) ; }

line_index: 1260
bug_before_refactoring: public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
bug_after_refactoring: public static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
fix_before_refactoring: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
fix_after_refactoring: private static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
√ fix_prediction_before: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
× fix_prediction_after: public static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }

