line_index: 3
bug_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
bug_after_refactoring: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
fix_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
fix_after_refactoring: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
√ fix_prediction_before: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
× fix_prediction_after: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }

line_index: 6
bug_before_refactoring: private static native void _imaqGetCharCount ( long set ) ; <s> private static native void _imaqGetCharCount ( long set ) ; <s> Fixing bugs
bug_after_refactoring: private static native void zywhutbswxvyfuvnchzv ( long set ) ; <s> private static native void zywhutbswxvyfuvnchzv ( long set ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetCharCount ( long set ) {}
fix_after_refactoring: private static void zywhutbswxvyfuvnchzv ( long set ) {}
√ fix_prediction_before: private static void _imaqGetCharCount ( long set ) {}
× fix_prediction_after: private static native void zywhutbswxvyfuvnchzv ( long set ) ;

line_index: 8
bug_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
bug_after_refactoring: @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "giepvfzjbyxfpnvviuso:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "giepvfzjbyxfpnvviuso:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
fix_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
fix_after_refactoring: @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
√ fix_prediction_before: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
× fix_prediction_after: @ java.lang.Override public void giepvfzjbyxfpniio ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}

line_index: 11
bug_before_refactoring: public void showTimePickButton () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; } <s> public void showTimePickButton () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; } <s> Fixes issue where time was not selectable immediately.
bug_after_refactoring: public void jvufldbnlgbigmnmffcz () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; } <s> public void jvufldbnlgbigmnmffcz () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; } <s> Fixes issue where time was not selectable immediately.
fix_before_refactoring: private void showTimePickButton () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; }
fix_after_refactoring: private void jvufldbnlgbigmnmffcz () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; }
√ fix_prediction_before: private void showTimePickButton () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; }
× fix_prediction_after: private void jvufldbnlgbigmnmffcz () { if ( ( _timeText ) != null ) { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; } }

line_index: 13
bug_before_refactoring: public int getId () { return se.edette.ordermatcher.Order.id ; } <s> public int getId () { return se.edette.ordermatcher.Order.id ; } <s> Added debug feature. More comments. Minor locale fixes. Fixed Order id not incrementing. Reverse sorting of buy orders.
bug_after_refactoring: public int ibtrpxqsphlonnmbzpey () { return se.edette.ordermatcher.Order.id ; } <s> public int ibtrpxqsphlonnmbzpey () { return se.edette.ordermatcher.Order.id ; } <s> Added debug feature. More comments. Minor locale fixes. Fixed Order id not incrementing. Reverse sorting of buy orders.
fix_before_refactoring: public int getId () { return id ; }
fix_after_refactoring: public int ibtrpxqsphlonnmbzpey () { return id ; }
√ fix_prediction_before: public int getId () { return id ; }
× fix_prediction_after: public int ibtrpxqsphlonnmbzpey () { return se.edette.ordermatcher.Order.id ; }

line_index: 16
bug_before_refactoring: private static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> private static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> fixing issue with slot assignation that have to be tried in all possible orders
bug_after_refactoring: private static java.math.BigInteger qylflzgvpgbgrmrwksnx ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> private static java.math.BigInteger qylflzgvpgbgrmrwksnx ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> fixing issue with slot assignation that have to be tried in all possible orders
fix_before_refactoring: public static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }
fix_after_refactoring: public static java.math.BigInteger qylflzgvpgbgrmrwksnx ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }
√ fix_prediction_before: public static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }
× fix_prediction_after: private static java.math.BigInteger qylflzgvpgbgrmrwksnx ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }

line_index: 23
bug_before_refactoring: public int indexOf ( java.lang.Object o ) { return 0 ; } <s> public int indexOf ( java.lang.Object o ) { return 0 ; } <s> fix list bug
bug_after_refactoring: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return 0 ; } <s> public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return 0 ; } <s> fix list bug
fix_before_refactoring: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
fix_after_refactoring: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return list . irphpjfjmppecvexmgxd ( o ) ; }
√ fix_prediction_before: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
× fix_prediction_after: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return - 1 ; }

line_index: 25
bug_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
bug_after_refactoring: public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; } <s> public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
fix_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
fix_after_refactoring: public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { this . preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; }
√ fix_prediction_before: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
× fix_prediction_after: public void derzptoaurzdndbqvght () { this . preferences . derzptoaurzdndbqvght () ; }

line_index: 26
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> 2 more issues resolved
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhihnmvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhihnmvo ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/gtwqadlfvmfbwhihnmvo" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhihnmvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhihnmvo ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/gtwqadlfvmfbwhihnmvo" ; } <s> 2 more issues resolved
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhihnmvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhihnmvo () { return "views/gtwqadlfvmfbwhihnmvo" ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhihnmvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhihnmvo ( @ javax.validation.Valid org.springframework.ui.Model model ) { return "views/gtwqadlfvmfbwhihnmvo" ; }

line_index: 48
bug_before_refactoring: @ java.lang.Override public void run () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> @ java.lang.Override public void run () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> code cleaned + showing inactive beacons problem is fixed
bug_after_refactoring: @ java.lang.Override public void fntdtgxvhgozayzlktkr () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> @ java.lang.Override public void fntdtgxvhgozayzlktkr () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> code cleaned + showing inactive beacons problem is fixed
fix_before_refactoring: @ java.lang.Override public void run () { mLEScanner . stopScan ( mScanCallback ) ; }
fix_after_refactoring: @ java.lang.Override public void fntdtgxvhgozayzlktkr () { mLEScanner . stopScan ( mScanCallback ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { mLEScanner . stopScan ( mScanCallback ) ; }
× fix_prediction_after: @ java.lang.Override public void fntdtgxvhgozayzlktkr () {}

line_index: 55
bug_before_refactoring: @ org.junit.Test public void Set_WeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> @ org.junit.Test public void Set_WeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> Fix code style errors at unittests
bug_after_refactoring: @ org.junit.Test public void wavdtzwzetspuetgcqva () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> @ org.junit.Test public void wavdtzwzetspuetgcqva () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> Fix code style errors at unittests
fix_before_refactoring: @ org.junit.Test public void setWeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; }
fix_after_refactoring: @ org.junit.Test public void setWeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; }
√ fix_prediction_before: @ org.junit.Test public void setWeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; }
× fix_prediction_after: @ org.junit.Test public void wavdtzwzetspuetgcqva () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; }

line_index: 92
bug_before_refactoring: @ java.lang.Override public void nearByChange () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> @ java.lang.Override public void nearByChange () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> fixed most of the crashes now to try and fix a load of bugs
bug_after_refactoring: @ java.lang.Override public void trmdgwfarnbqfdlnvofd () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> @ java.lang.Override public void trmdgwfarnbqfdlnvofd () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> fixed most of the crashes now to try and fix a load of bugs
fix_before_refactoring: @ java.lang.Override public void nearByChange () { checkConnectedSides () ; }
fix_after_refactoring: @ java.lang.Override public void trmdgwfarnbqfdlnvofd () { checkConnectedSides () ; }
√ fix_prediction_before: @ java.lang.Override public void nearByChange () { checkConnectedSides () ; }
× fix_prediction_after: @ java.lang.Override public void trmdgwfarnbqfdlnvofd () {}

line_index: 115
bug_before_refactoring: java.lang.String get1 () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> java.lang.String get1 () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> Many fixes: Correct assembly of uber-jar with all required dependencies (PrimitivIO error). Slightly different meaning of -g option in align. This fixes #97 Export reads on the go.
bug_after_refactoring: java.lang.String qsifjyyaytqtpxpsegjv () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> java.lang.String qsifjyyaytqtpxpsegjv () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> Many fixes: Correct assembly of uber-jar with all required dependencies (PrimitivIO error). Slightly different meaning of -g option in align. This fixes #97 Export reads on the go.
fix_before_refactoring: java.lang.String get1 () { return parameters . get ( 0 ) ; }
fix_after_refactoring: java.lang.String qsifjyyaytqtpxpsegjv () { return parameters . get ( 0 ) ; }
√ fix_prediction_before: java.lang.String get1 () { return parameters . get ( 0 ) ; }
× fix_prediction_after: java.lang.String qsifjyyaytqtpxpsegjv () { return parameters [ 0 ] ; }

line_index: 116
bug_before_refactoring: @ java.lang.Override public java.lang.Integer [] getArgs () { return new java.lang.Integer [ 0 ] ; } <s> @ java.lang.Override public java.lang.Integer [] getArgs () { return new java.lang.Integer [ 0 ] ; } <s> bugfix AliasRectangle didnt deliver proper getArgs()
bug_after_refactoring: @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return new java.lang.Integer [ 0 ] ; } <s> @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return new java.lang.Integer [ 0 ] ; } <s> bugfix AliasRectangle didnt deliver proper getArgs()
fix_before_refactoring: @ java.lang.Override public java.lang.Integer [] getArgs () { return args ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return args ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.Integer [] getArgs () { return args ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return new java.lang.Integer [ 1 ] ; }

line_index: 117
bug_before_refactoring: private static native void _imaqGetImageType ( long image , long type ) ; <s> private static native void _imaqGetImageType ( long image , long type ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hptuiyfhadqagvywwsjy ( long image , long type ) ; <s> private static native void hptuiyfhadqagvywwsjy ( long image , long type ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetImageType ( long image , long type ) {}
fix_after_refactoring: private static void hptuiyfhadqagvywwsjy ( long image , long type ) {}
√ fix_prediction_before: private static void _imaqGetImageType ( long image , long type ) {}
× fix_prediction_after: private static native void hptuiyfhadqagvywwsjy ( long image , long type ) ;

line_index: 166
bug_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
bug_after_refactoring: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
fix_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
fix_after_refactoring: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
√ fix_prediction_before: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
× fix_prediction_after: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw e ; } }

line_index: 179
bug_before_refactoring: public int add ( int a , int b ) { return a * b ; } <s> public int add ( int a , int b ) { return a * b ; } <s> Bug fix
bug_after_refactoring: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a * b ; } <s> public int elhhwvatlucbecjqbeku ( int a , int b ) { return a * b ; } <s> Bug fix
fix_before_refactoring: public int add ( int a , int b ) { return a + b ; }
fix_after_refactoring: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a + b ; }
√ fix_prediction_before: public int add ( int a , int b ) { return a + b ; }
× fix_prediction_after: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a * b ; }

line_index: 190
bug_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
bug_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > pduegdgknepuhnfgqcmo () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > pduegdgknepuhnfgqcmo () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
fix_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
fix_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
√ fix_prediction_before: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
× fix_prediction_after: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > pduegdgknepuhnfgqcmo () { return pduegdgknepuhnfgqcmo () ; }

line_index: 204
bug_before_refactoring: public void onLoadProductsFail () { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } <s> public void onLoadProductsFail () { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } <s> Fix bugs
bug_after_refactoring: public void nmvohiqxkaolqcpbzopc () { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } <s> public void nmvohiqxkaolqcpbzopc () { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } <s> Fix bugs
fix_before_refactoring: public void onLoadProductsFail () { if ( ( getContext () ) != null ) { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } }
fix_after_refactoring: public void nmvohiqxkaolqcpbzopc () { if ( ( getContext () ) != null ) { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } }
√ fix_prediction_before: public void onLoadProductsFail () { if ( ( getContext () ) != null ) { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } }
× fix_prediction_after: private void nmvohiqxkaolqcpbzopc () { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; }

line_index: 208
bug_before_refactoring: private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> Fixing bugs
bug_after_refactoring: private static native void uukratgvnwinwjrtbafd ( long image , long data , int size ) ; <s> private static native void uukratgvnwinwjrtbafd ( long image , long data , int size ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqUnflatten ( long image , long data , int size ) {}
fix_after_refactoring: private static void uukratgvnwinwjrtbafd ( long image , long data , int size ) {}
√ fix_prediction_before: private static void _imaqUnflatten ( long image , long data , int size ) {}
× fix_prediction_after: private static native void uukratgvnwinwjrtbafd ( long image , long data , int size ) ;

line_index: 214
bug_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
bug_after_refactoring: public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = ! status ; } <s> public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
fix_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
fix_after_refactoring: public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = status ; }
√ fix_prediction_before: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
× fix_prediction_after: public void uxsboacejkkypbcznpqh () { mDisableScrolling = false ; }

line_index: 215
bug_before_refactoring: private boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> private boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> bugfix showing flags
bug_after_refactoring: private boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> private boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> bugfix showing flags
fix_before_refactoring: public boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
fix_after_refactoring: public boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
√ fix_prediction_before: public boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
× fix_prediction_after: private boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }

line_index: 221
bug_before_refactoring: public void setX ( int x ) { this . x = x ; } <s> public void setX ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; } <s> public void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void setX ( int x ) { this . x = x ; }
fix_after_refactoring: private void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; }
√ fix_prediction_before: private void setX ( int x ) { this . x = x ; }
× fix_prediction_after: private void ycxwifrjyzcszhhkpcmk ( int x ) { this . y = x ; }

line_index: 228
bug_before_refactoring: public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
bug_after_refactoring: public static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
fix_before_refactoring: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
fix_after_refactoring: private static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
√ fix_prediction_before: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
× fix_prediction_after: public static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str . toString () . trim () ; }

line_index: 240
bug_before_refactoring: @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
bug_after_refactoring: @ java.lang.Override public java.lang.String exelshutrnvdqujuuwfc ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> @ java.lang.Override public java.lang.String exelshutrnvdqujuuwfc ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
fix_before_refactoring: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String exelshutrnvdqujuuwfc ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String exelistutrnvdqujuuwfc ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; }

line_index: 243
bug_before_refactoring: public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> fixes network model bugs
bug_after_refactoring: public final void pwkvjqsyeckdroilxpvc ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> public final void pwkvjqsyeckdroilxpvc ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> fixes network model bugs
fix_before_refactoring: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } }
fix_after_refactoring: private final void pwkvjqsyeckdroilxpvc ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } }
√ fix_prediction_before: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } }
× fix_prediction_after: public final void pwkvjqsyeckdroilxpvc ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } }

line_index: 244
bug_before_refactoring: private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> Fixing bugs
bug_after_refactoring: private static native void nmfpybfhtflzuiauboal ( long image , int bitDepth ) ; <s> private static native void nmfpybfhtflzuiauboal ( long image , int bitDepth ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
fix_after_refactoring: private static void nmfpybfhtflzuiauboal ( long image , int bitDepth ) {}
√ fix_prediction_before: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
× fix_prediction_after: private static native void nmfpybfhtflzuiauboal ( long image , int bitDepth ) {}

line_index: 246
bug_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
bug_after_refactoring: public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
fix_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
fix_after_refactoring: public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = isExported ; }
√ fix_prediction_before: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
× fix_prediction_after: public void jkilseqpewgipcacqhgf ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; }

line_index: 248
bug_before_refactoring: public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> Updated RootShell  Fixed some bugs related to re-using commands (disallowed command re-use)
bug_after_refactoring: public static void nezupcqzyftdzzynchia ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> public static void nezupcqzyftdzzynchia ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> Updated RootShell  Fixed some bugs related to re-using commands (disallowed command re-use)
fix_before_refactoring: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; }
fix_after_refactoring: public static com.stericson.RootShell.execution.Command nezupcqzyftdzzynchia ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; }
√ fix_prediction_before: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; }
× fix_prediction_after: public static void nezupcqzyftdzzynchia ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; }

line_index: 253
bug_before_refactoring: @ java.lang.Override public void onPause () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . onPause () ; } <s> @ java.lang.Override public void onPause () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . onPause () ; } <s> Added sync hashmap; Refactor fragment and fixed small bug with frag argument loading;
bug_after_refactoring: @ java.lang.Override public void jojhkgeaecmqeynpghlw () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . jojhkgeaecmqeynpghlw () ; } <s> @ java.lang.Override public void jojhkgeaecmqeynpghlw () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . jojhkgeaecmqeynpghlw () ; } <s> Added sync hashmap; Refactor fragment and fixed small bug with frag argument loading;
fix_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override public void jojhkgeaecmqeynpghlw () { super . jojhkgeaecmqeynpghlw () ; }
√ fix_prediction_before: @ java.lang.Override public void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override public void jojhkgeaecmqeynpghlw () { if ( ( this . scrollListener ) != null ) rvList . removeOnScrollListener ( this . scrollListener ) ; super . jojhkgeaecmqeynpghlw () ; }

line_index: 254
bug_before_refactoring: public void addX ( final double x ) { this . x += x ; } <s> public void addX ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
bug_after_refactoring: public void jljlawwnkfspzykvqglc ( final double x ) { this . x += x ; } <s> public void jljlawwnkfspzykvqglc ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
fix_before_refactoring: public final void addX ( final double add ) { this . x += add ; }
fix_after_refactoring: public final void jljlawwnkfspzykvqglc ( final double add ) { this . x += add ; }
√ fix_prediction_before: public final void addX ( final double add ) { this . x += add ; }
× fix_prediction_after: public final void jljlawwnkfspzykvqglc ( final double x ) { this . x = x ; }

line_index: 255
bug_before_refactoring: protected void reset () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; } <s> protected void reset () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; } <s> Fixed Errors that prevented comilation
bug_after_refactoring: protected void dbkjvvlufxubzrfwsqsx () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; } <s> protected void dbkjvvlufxubzrfwsqsx () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; } <s> Fixed Errors that prevented comilation
fix_before_refactoring: public void reset () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; }
fix_after_refactoring: public void dbkjvvlufxubzrfwsqsx () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; }
√ fix_prediction_before: public void reset () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; }
× fix_prediction_after: private void dbkjVWlufxubzrfwsqsx () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; }

line_index: 268
bug_before_refactoring: void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> fixed bug
bug_after_refactoring: void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> fixed bug
fix_before_refactoring: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
fix_after_refactoring: public void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
√ fix_prediction_before: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
× fix_prediction_after: public void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( p ) ; }

line_index: 281
bug_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
bug_after_refactoring: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
fix_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
fix_after_refactoring: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
√ fix_prediction_before: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
× fix_prediction_after: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; }

line_index: 284
bug_before_refactoring: public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
bug_after_refactoring: public static void qrowfwajxrssnykdyykz ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void qrowfwajxrssnykdyykz ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void qrowfwajxrssnykdyykz ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void qrowfwajxrssnykdyykz () {}

line_index: 295
bug_before_refactoring: private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
fix_after_refactoring: protected boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
√ fix_prediction_before: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
× fix_prediction_after: public boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }

line_index: 297
bug_before_refactoring: private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> Fixed bug in binary operation application
bug_after_refactoring: private boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; } <s> private boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
fix_after_refactoring: protected boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; }
√ fix_prediction_before: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
× fix_prediction_after: private boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; }

line_index: 301
bug_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> @ java.lang.Override protected void onResume () { super . onResume () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> profile tracker bug detected & fixed
bug_after_refactoring: @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; } <s> profile tracker bug detected & fixed
fix_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; }
fix_after_refactoring: @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; }
√ fix_prediction_before: @ java.lang.Override protected void onResume () { super . onResume () ; }
× fix_prediction_after: @ java.lang.Override protected void kxuygrzaxkapsepcdjut () { super . kxuygrzaxkapsepcdjut () ; profile = com.facebook.Profile . getCurrentProfile () ; nextActivity ( profile ) ; }

line_index: 312
bug_before_refactoring: public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
bug_after_refactoring: public void nvmftlehrguxdafpvgtu ( int i ) { if ( i > 10000 ) { this . player . nvmftlehrguxdafpvgtu ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> public void nvmftlehrguxdafpvgtu ( int i ) { if ( i > 10000 ) { this . player . nvmftlehrguxdafpvgtu ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
fix_before_refactoring: public void seekToPosition ( int i ) { this . player . seekToPosition ( i ) ; }
fix_after_refactoring: public void nvmftlehrguxdafpvgtu ( int i ) { this . player . nvmftlehrguxdafpvgtu ( i ) ; }
√ fix_prediction_before: public void seekToPosition ( int i ) { this . player . seekToPosition ( i ) ; }
× fix_prediction_after: public void nvmftlehrguxdafpvgtu ( int i ) { this . player . nvmftlehrguxdafpvgtu.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Lets just skip the seek. Probably a ) ; }

line_index: 313
bug_before_refactoring: public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> Merge pull request #2 from tfrancart/issue-1  Make EdmSchemaValidator non-static to be able to pass a different path to EDM.xsd  fix #1
bug_after_refactoring: public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler teyfophzcgsehfyrfhnv ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . teyfophzcgsehfyrfhnv ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler teyfophzcgsehfyrfhnv ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . teyfophzcgsehfyrfhnv ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> Merge pull request #2 from tfrancart/issue-1  Make EdmSchemaValidator non-static to be able to pass a different path to EDM.xsd  fix #1
fix_before_refactoring: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , true , true ) ; }
fix_after_refactoring: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler teyfophzcgsehfyrfhnv ( java.io.File file ) { return teyfophzcgsehfyrfhnv ( new javax.xml.transform.stream.StreamSource ( file ) , true , true ) ; }
√ fix_prediction_before: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , true , true ) ; }
× fix_prediction_after: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler teyfophzcgsehfyrfhnv ( java.io.File file ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . teyfophzcgsehfyrfhnv ( new javax.xml.transform.stream.StreamSource ( file ) , true , false ) ; }

line_index: 318
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
bug_after_refactoring: public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
fix_after_refactoring: public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
× fix_prediction_after: public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) {}

line_index: 322
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
fix_after_refactoring: public void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
× fix_prediction_after: private void jfrvrhlgyyjedihjogyt ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }

line_index: 343
bug_before_refactoring: @ java.lang.Override public void onDestroy () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . onDestroy () ; } <s> @ java.lang.Override public void onDestroy () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . onDestroy () ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void jertipurqujluiwxirab () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . jertipurqujluiwxirab () ; } <s> @ java.lang.Override public void jertipurqujluiwxirab () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . jertipurqujluiwxirab () ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override public void jertipurqujluiwxirab () { super . jertipurqujluiwxirab () ; }
√ fix_prediction_before: @ java.lang.Override public void onDestroy () { super . onDestroy () ; }
× fix_prediction_after: @ java.lang.Override public void jertipurqujluiwxirab () { java.lang.System.out . println ( "我被销毁了！！" ) ; }

line_index: 345
bug_before_refactoring: @ java.lang.Override public void disposeComponent () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> @ java.lang.Override public void disposeComponent () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> #310 Fix an issue with NP in the disposeComponent.  The component life cycle seems to have changed with this upgrade  and the CamelIdeaService and CamelCatelogService is disposed before the CamelProjectComponent
bug_after_refactoring: @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> #310 Fix an issue with NP in the disposeComponent.  The component life cycle seems to have changed with this upgrade  and the CamelIdeaService and CamelCatelogService is disposed before the CamelProjectComponent
fix_before_refactoring: @ java.lang.Override public void disposeComponent () { runModuleOnStartUp = false ; }
fix_after_refactoring: @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () { runModuleOnStartUp = false ; }
√ fix_prediction_before: @ java.lang.Override public void disposeComponent () { runModuleOnStartUp = false ; }
× fix_prediction_after: @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () {}

line_index: 363
bug_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> Fixed outstanding checkstyle problems.
bug_after_refactoring: @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> Fixed outstanding checkstyle problems.
fix_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
fix_after_refactoring: @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
√ fix_prediction_before: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
× fix_prediction_after: @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }

line_index: 373
bug_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
bug_after_refactoring: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
fix_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
fix_after_refactoring: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
√ fix_prediction_before: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
× fix_prediction_after: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { return true ; } return false ; }

line_index: 405
bug_before_refactoring: private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> Fixing bugs
bug_after_refactoring: private static native void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) ; <s> private static native void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
fix_after_refactoring: private static void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) {}
√ fix_prediction_before: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
× fix_prediction_after: private static native void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) ;

line_index: 414
bug_before_refactoring: public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
bug_after_refactoring: public void jividfzbanbookykjgdp ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void jividfzbanbookykjgdp ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
fix_before_refactoring: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
fix_after_refactoring: public void jividfzbanbookykjgdp () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
√ fix_prediction_before: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
× fix_prediction_after: public void jividfzbanbookykjgdp ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }

line_index: 425
bug_before_refactoring: public java.lang.String getRegexp () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> public java.lang.String getRegexp () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> Added test for Palindrome function. Fixed issue with back-referencing variables.
bug_after_refactoring: public java.lang.String yvbsjywdqfevnxjpjddq () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> public java.lang.String yvbsjywdqfevnxjpjddq () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> Added test for Palindrome function. Fixed issue with back-referencing variables.
fix_before_refactoring: public java.lang.String getRegexp () { return regexp ; }
fix_after_refactoring: public java.lang.String yvbsjywdqfevnxjpjddq () { return regexp ; }
√ fix_prediction_before: public java.lang.String getRegexp () { return regexp ; }
× fix_prediction_after: public java.lang.String yvbsjywdqfevnxjpjddq () { return this . reference ; }

line_index: 430
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> fixed bug of ble-led  fixed bug of send message of ble-led and bel-voice
bug_after_refactoring: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> fixed bug of ble-led  fixed bug of send message of ble-led and bel-voice
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; }

line_index: 452
bug_before_refactoring: public java.util.List < java.lang.Exception > getException () { return exc ; } <s> public java.util.List < java.lang.Exception > getException () { return exc ; } <s> Added a list that contains the messages of the exceptions. Registration controller has modified. By now its return the corresponding error message. User model bug fix.
bug_after_refactoring: public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return exc ; } <s> public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return exc ; } <s> Added a list that contains the messages of the exceptions. Registration controller has modified. By now its return the corresponding error message. User model bug fix.
fix_before_refactoring: public java.util.List < java.lang.Exception > getException () { return this . exc ; }
fix_after_refactoring: public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return this . exc ; }
√ fix_prediction_before: public java.util.List < java.lang.Exception > getException () { return this . exc ; }
× fix_prediction_after: public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return new java.util.ArrayList < java.lang.Exception > ( exc ) ; }

line_index: 490
bug_before_refactoring: public void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> public void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> fix many bug
bug_after_refactoring: public void pentkyezdibxtgvxceeg ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> public void pentkyezdibxtgvxceeg ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> fix many bug
fix_before_refactoring: private void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
fix_after_refactoring: private void pentkyezdibxtgvxceeg ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
√ fix_prediction_before: private void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
× fix_prediction_after: public void pentkyezdibxtgvxceeg ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }

line_index: 553
bug_before_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null , null ) ; } <s> public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null , null ) ; } <s> bug fix
bug_after_refactoring: public < T > void tmhenokkkgziktjpdsfk ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { tmhenokkkgziktjpdsfk ( runnable , false , null , null , null , null , null ) ; } <s> public < T > void tmhenokkkgziktjpdsfk ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { tmhenokkkgziktjpdsfk ( runnable , false , null , null , null , null , null ) ; } <s> bug fix
fix_before_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , null , null , null , null , null ) ; }
fix_after_refactoring: public < T > void tmhenokkkgziktjpdsfk ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { tmhenokkkgziktjpdsfk ( runnable , null , null , null , null , null ) ; }
√ fix_prediction_before: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , null , null , null , null , null ) ; }
× fix_prediction_after: public < T > void tmhenokkkgziktjpdsfk ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { tmhenokkkgziktjpdsfk ( runnable , false , null , null , null , null ) ; }

line_index: 556
bug_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
bug_after_refactoring: @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
fix_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
fix_after_refactoring: @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) {}
√ fix_prediction_before: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
× fix_prediction_after: @ java.lang.Override public void nkofotgdtrxzrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) {}

line_index: 583
bug_before_refactoring: private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
bug_after_refactoring: private static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
fix_before_refactoring: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
fix_after_refactoring: protected static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
√ fix_prediction_before: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
× fix_prediction_after: public static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }

line_index: 591
bug_before_refactoring: @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException { java.lang.System.out . println ( "_closeInput" ) ; } <s> @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException { java.lang.System.out . println ( "_closeInput" ) ; } <s> Fix the bug on nested Object/Array
bug_after_refactoring: @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException { java.lang.System.out . println ( "bbmyggoqenrikjdskssv" ) ; } <s> @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException { java.lang.System.out . println ( "bbmyggoqenrikjdskssv" ) ; } <s> Fix the bug on nested Object/Array
fix_before_refactoring: @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException {}
fix_after_refactoring: @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException {}
√ fix_prediction_before: @ java.lang.Override protected void _closeInput ( ) throws java.io.IOException {}
× fix_prediction_after: @ java.lang.Override protected void bbmyggoqenrikjdskssv ( ) throws java.io.IOException { java.lang.System.out . println ( "bbmyggoqenrikjdskssv" ) ; }

line_index: 598
bug_before_refactoring: public static java.lang.String getDate () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> public static java.lang.String getDate () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> fixed issue where repeat block session appears
bug_after_refactoring: public static java.lang.String vyzhnboytqbsljqqmuxc () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> public static java.lang.String vyzhnboytqbsljqqmuxc () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> fixed issue where repeat block session appears
fix_before_refactoring: public java.lang.String getDate () { return date ; }
fix_after_refactoring: public java.lang.String vyzhnboytqbsljqqmuxc () { return date ; }
√ fix_prediction_before: public java.lang.String getDate () { return date ; }
× fix_prediction_after: public static java.lang.String vyzhnboytqbsljqqmuxc () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; }

line_index: 612
bug_before_refactoring: public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
bug_after_refactoring: public static java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
fix_before_refactoring: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
fix_after_refactoring: public java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
√ fix_prediction_before: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
× fix_prediction_after: public static java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }

line_index: 616
bug_before_refactoring: private java.util.ArrayList getTitles () { return titlesString ; } <s> private java.util.ArrayList getTitles () { return titlesString ; } <s> Fixed some layout issues and made separatemethods for GUI components initialization
bug_after_refactoring: private java.util.ArrayList ewdezuiifuaqjizuthtf () { return titlesString ; } <s> private java.util.ArrayList ewdezuiifuaqjizuthtf () { return titlesString ; } <s> Fixed some layout issues and made separatemethods for GUI components initialization
fix_before_refactoring: public java.util.ArrayList getTitles () { return titlesString ; }
fix_after_refactoring: public java.util.ArrayList ewdezuiifuaqjizuthtf () { return titlesString ; }
√ fix_prediction_before: public java.util.ArrayList getTitles () { return titlesString ; }
× fix_prediction_after: private java.util.ArrayList ewdezuiifuaqjizuthtf () { return titlesString ; }

line_index: 620
bug_before_refactoring: public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> fixed dumb bug
bug_after_refactoring: public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { if ( lmgegdzpghfpqhajcajsable >= 0 ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; } } <s> public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { if ( lmgegdzpghfpqhajcajsable >= 0 ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; } } <s> fixed dumb bug
fix_before_refactoring: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
fix_after_refactoring: public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; }
√ fix_prediction_before: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
× fix_prediction_after: public void lmgegdzpghfpqhajs ( int lmgegdzpghfpqhajsable ) { stat += lmgegdzpghfpqhajsable ; modelNotifyObservers () ; }

line_index: 641
bug_before_refactoring: public void run () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> public void run () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> Fixed the bug. Code crashes sometimes in Test5 - throws NullPointerException
bug_after_refactoring: public void idwpgxdfvduedrgmwdip () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> public void idwpgxdfvduedrgmwdip () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> Fixed the bug. Code crashes sometimes in Test5 - throws NullPointerException
fix_before_refactoring: public void run () { output = f . apply ( this , this . listInteger ) ; }
fix_after_refactoring: public void idwpgxdfvduedrgmwdip () { output = f . apply ( this , this . listInteger ) ; }
√ fix_prediction_before: public void run () { output = f . apply ( this , this . listInteger ) ; }
× fix_prediction_after: public void idwpgxdfvduedrgmwdip () { output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; }

line_index: 654
bug_before_refactoring: public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
bug_after_refactoring: public boolean nclwlqnfthdzyenhphph ( model.curve.Grade grade ) { return curve . nclwlqnfthdzyenhphph ( grade ) ; } <s> public boolean nclwlqnfthdzyenhphph ( model.curve.Grade grade ) { return curve . nclwlqnfthdzyenhphph ( grade ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
fix_before_refactoring: public boolean remove ( model.curve.Grade grade ) { if ( grade != null ) { return curve . remove ( grade ) ; } return false ; }
fix_after_refactoring: public boolean nclwlqnfthdzyenhphph ( model.curve.Grade grade ) { if ( grade != null ) { return curve . nclwlqnfthdzyenhphph ( grade ) ; } return false ; }
√ fix_prediction_before: public boolean remove ( model.curve.Grade grade ) { if ( grade != null ) { return curve . remove ( grade ) ; } return false ; }
× fix_prediction_after: public boolean nclwlqnfthdzyenhphphph ( model.curve.Grade grade ) { return curve . nclwlqnfthdzyenhphphph ( grade ) ; }

line_index: 659
bug_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
bug_after_refactoring: @ java.lang.Override public void iptlzltzvcsetcuijtvo ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void iptlzltzvcsetcuijtvo ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
fix_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
fix_after_refactoring: @ java.lang.Override public void iptlzltzvcsetcuijtvo ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
√ fix_prediction_before: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
× fix_prediction_after: @ java.lang.Override public void iptlzltzvcsetcuijtvo ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { if ( movieType != null ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } }

line_index: 667
bug_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
fix_after_refactoring: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ index ] ; }
√ fix_prediction_before: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
× fix_prediction_after: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; }

line_index: 668
bug_before_refactoring: public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> bugfix
bug_after_refactoring: public boolean nqhnevtsrdokuhhrkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> public boolean nqhnevtsrdokuhhrkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> bugfix
fix_before_refactoring: public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( this ) ) ; }
fix_after_refactoring: public boolean nqhnevtsrdokuhhrkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( this ) ) ; }
√ fix_prediction_before: public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( this ) ) ; }
× fix_prediction_after: public boolean nqhnevtsrdokuhkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( this ) ) ; }

line_index: 697
bug_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
bug_after_refactoring: protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
fix_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
fix_after_refactoring: protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
√ fix_prediction_before: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
× fix_prediction_after: public org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }

line_index: 716
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
bug_after_refactoring: public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
fix_after_refactoring: public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
× fix_prediction_after: public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; }

line_index: 720
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
bug_after_refactoring: public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
fix_after_refactoring: public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
× fix_prediction_after: public voidFuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { new InputGrid () ; }

line_index: 726
bug_before_refactoring: public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
bug_after_refactoring: public static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> public static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
fix_before_refactoring: private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
fix_after_refactoring: private static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
√ fix_prediction_before: private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
× fix_prediction_after: public static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }

line_index: 727
bug_before_refactoring: public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void setDescription ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
bug_after_refactoring: public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> 6/25/17 fixed errors from lesson 10 team assignment Still need to fix other errors
fix_before_refactoring: public void setDescription ( java.lang.String string ) {}
fix_after_refactoring: public void djvzsdbevxfimhjhgtyt ( java.lang.String string ) {}
√ fix_prediction_before: public void setDescription ( java.lang.String string ) {}
× fix_prediction_after: public voiddjvzsdbevxfimhjhgtyt ( java.lang.String string ) { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; }

line_index: 736
bug_before_refactoring: public void setName () { this . name = name ; } <s> public void setName () { this . name = name ; } <s> fix syntax error and format code
bug_after_refactoring: public void tcqhguvfmrmgfbipdbcv () { this . name = name ; } <s> public void tcqhguvfmrmgfbipdbcv () { this . name = name ; } <s> fix syntax error and format code
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void tcqhguvfmrmgfbipdbcv ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_before: public void setName ( java.lang.String name ) { this . name = name ; }
× fix_prediction_after: public void tcqhguvfmrmgfbipdbcv () { this . name = name ; }

line_index: 739
bug_before_refactoring: private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
bug_after_refactoring: private void xorbnobfajgrsfuihnai ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void xorbnobfajgrsfuihnai ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
fix_before_refactoring: void setEndTime ( double endTime ) { this . endTime = endTime ; }
fix_after_refactoring: void xorbnobfajgrsfuihnai ( double endTime ) { this . endTime = endTime ; }
√ fix_prediction_before: void setEndTime ( double endTime ) { this . endTime = endTime ; }
× fix_prediction_after: private void xorbnobfajgrsfuihnu ( double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; }

line_index: 742
bug_before_refactoring: public java.lang.String [] paramaters () { return new java.lang.String [ 0 ] ; } <s> public java.lang.String [] paramaters () { return new java.lang.String [ 0 ] ; } <s> Fix spelling error in API
bug_after_refactoring: public java.lang.String [] imuyyobejmxrvcdxitrp () { return new java.lang.String [ 0 ] ; } <s> public java.lang.String [] imuyyobejmxrvcdxitrp () { return new java.lang.String [ 0 ] ; } <s> Fix spelling error in API
fix_before_refactoring: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
fix_after_refactoring: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
√ fix_prediction_before: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
× fix_prediction_after: public java.lang.String [] imuyyobejmxrvcdxitrp () { return new java.lang.String [ 0 ] ; }

line_index: 748
bug_before_refactoring: public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
bug_after_refactoring: public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
fix_before_refactoring: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
fix_after_refactoring: public < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; }
√ fix_prediction_before: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
× fix_prediction_after: public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password ) ; }

line_index: 749
bug_before_refactoring: public java.lang.Boolean getNsIsSDFProject () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> public java.lang.Boolean getNsIsSDFProject () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> Fix sdf bug and added group
bug_after_refactoring: public java.lang.Boolean srlswhdzxpsvcihdvqgr () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> public java.lang.Boolean srlswhdzxpsvcihdvqgr () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> Fix sdf bug and added group
fix_before_refactoring: public java.lang.Boolean getNsIsSDFProject () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }
fix_after_refactoring: public java.lang.Boolean srlswhdzxpsvcihdvqgr () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }
√ fix_prediction_before: public java.lang.Boolean getNsIsSDFProject () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }
× fix_prediction_after: public java.lang.Boolean srlswhdzxpsvcihqgr () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }

line_index: 752
bug_before_refactoring: private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
fix_after_refactoring: private static long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
√ fix_prediction_before: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
× fix_prediction_after: private static long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }

line_index: 756
bug_before_refactoring: private static native void _IMAQdxSnap ( int id , long image ) ; <s> private static native void _IMAQdxSnap ( int id , long image ) ; <s> Fixing bugs
bug_after_refactoring: private static native void xrmeudhoethgilnxzleo ( int id , long image ) ; <s> private static native void xrmeudhoethgilnxzleo ( int id , long image ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSnap ( int id , long image ) {}
fix_after_refactoring: private static void xrmeudhoethgilnxzleo ( int id , long image ) {}
√ fix_prediction_before: private static void _IMAQdxSnap ( int id , long image ) {}
× fix_prediction_after: private static native void xrmeudhoethgilnxzleo ( int id , long image ) ;

line_index: 762
bug_before_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> various bugfixes and improvements
bug_after_refactoring: @ java.lang.Override public void nvkvxoxidchrqkxdkkxp ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . nvkvxoxidchrqkxdkkxp ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> @ java.lang.Override public void nvkvxoxidchrqkxdkkxp ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . nvkvxoxidchrqkxdkkxp ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> various bugfixes and improvements
fix_before_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; }
fix_after_refactoring: @ java.lang.Override public void nvkvxoxidchrqkxdkkxp ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . nvkvxoxidchrqkxdkkxp ( channelUID ) ; }
√ fix_prediction_before: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; }
× fix_prediction_after: @ java.lang.Override public void nvkvxoxidchrqkxdkkxp ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . nvkvxoxidchrqkxdkkxp ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( this . deviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; }

line_index: 768
bug_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
bug_after_refactoring: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
fix_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
fix_after_refactoring: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder ) ; }
√ fix_prediction_before: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
× fix_prediction_after: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , fragmentSpec ) ; }

line_index: 786
bug_before_refactoring: public int getEvent () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> public int getEvent () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> [fix connection bug] fix connection bug
bug_after_refactoring: public int ymqlpjmompvgukhorfre () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> public int ymqlpjmompvgukhorfre () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> [fix connection bug] fix connection bug
fix_before_refactoring: public int getEvent () { return mEvent ; }
fix_after_refactoring: public int ymqlpjmompvgukhorfre () { return mEvent ; }
√ fix_prediction_before: public int getEvent () { return mEvent ; }
× fix_prediction_after: public int ymqlpjmompvgukhorfre () { return mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; }

line_index: 791
bug_before_refactoring: @ java.lang.Override protected void end () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> @ java.lang.Override protected void end () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> Version 3.0 of the MecDrive  Fixed a bug where the wheels did not go the way they were suppose to go. Check the comments below the code for the specific instructions.
bug_after_refactoring: @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () { Robot.driveTrain . setDriveMotors ( 0 ) ; } <s> Version 3.0 of the MecDrive  Fixed a bug where the wheels did not go the way they were suppose to go. Check the comments below the code for the specific instructions.
fix_before_refactoring: @ java.lang.Override protected void end () {}
fix_after_refactoring: @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () {}
√ fix_prediction_before: @ java.lang.Override protected void end () {}
× fix_prediction_after: @ java.lang.Override protected void vhynacgrwvlqvjqvkxpr () { Robot.driveTrain . setDriveMotors ( 0 ) ; }

line_index: 792
bug_before_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> fix compilation issues
bug_after_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T mpisszdyfukflriamstq ( java.lang.String id ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T mpisszdyfukflriamstq ( java.lang.String id ) ; <s> fix compilation issues
fix_before_refactoring: com.jeromeloisel.db.entity.Entity withId ( java.lang.String id ) ;
fix_after_refactoring: com.jeromeloisel.db.entity.Entity mpisszdyfukflriamstq ( java.lang.String id ) ;
√ fix_prediction_before: com.jeromeloisel.db.entity.Entity withId ( java.lang.String id ) ;
× fix_prediction_after: public < T extends com.jeromeloisel.db.entity.Entity > mpisszdyfukflriamstq ( java.lang.String id ) ;

line_index: 793
bug_before_refactoring: @ java.lang.Override public void onStart () { super . onStart () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> @ java.lang.Override public void onStart () { super . onStart () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> add friend bug fix
bug_after_refactoring: @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> add friend bug fix
fix_before_refactoring: @ java.lang.Override public void onStart () { super . onStart () ; }
fix_after_refactoring: @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; }
√ fix_prediction_before: @ java.lang.Override public void onStart () { super . onStart () ; }
× fix_prediction_after: @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; client . connect () ; }

line_index: 815
bug_before_refactoring: @ org.junit.Test public void testEqualsSameInstance () { org.junit.Assert . assertTrue ( object . equals ( object ) ) ; } <s> @ org.junit.Test public void testEqualsSameInstance () { org.junit.Assert . assertTrue ( object . equals ( object ) ) ; } <s> Fix PMD errors.  Fixed errors reported by the PMD plugin.
bug_after_refactoring: @ org.junit.Test public void fjbehyaggjfwlngfdrsh () { org.junit.Assert . assertTrue ( object . equals ( object ) ) ; } <s> @ org.junit.Test public void fjbehyaggjfwlngfdrsh () { org.junit.Assert . assertTrue ( object . equals ( object ) ) ; } <s> Fix PMD errors.  Fixed errors reported by the PMD plugin.
fix_before_refactoring: @ org.junit.Test public void testEqualsSameInstance () { org.junit.Assert . assertEquals ( object , object ) ; }
fix_after_refactoring: @ org.junit.Test public void fjbehyaggjfwlngfdrsh () { org.junit.Assert . assertEquals ( object , object ) ; }
√ fix_prediction_before: @ org.junit.Test public void testEqualsSameInstance () { org.junit.Assert . assertEquals ( object , object ) ; }
× fix_prediction_after: @ org.junit.Test public void fjbehyaggjfwlngfdrsh () { org.junit.Assert . assertTrue ( object ) ; }

line_index: 819
bug_before_refactoring: private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
bug_after_refactoring: private void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
fix_before_refactoring: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
fix_after_refactoring: public void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
√ fix_prediction_before: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
× fix_prediction_after: private void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }

line_index: 854
bug_before_refactoring: private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> Fixing bugs
bug_after_refactoring: private static native void lgfliqorxqxmhymekhdy ( long image , long offset ) ; <s> private static native void lgfliqorxqxmhymekhdy ( long image , long offset ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetMaskOffset ( long image , long offset ) {}
fix_after_refactoring: private static void lgfliqorxqxmhymekhdy ( long image , long offset ) {}
√ fix_prediction_before: private static void _imaqSetMaskOffset ( long image , long offset ) {}
× fix_prediction_after: private static native void lgfliqorxqxmhymekhdy ( long image , long offset ) ;

line_index: 878
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> @ java.lang.Override protected void onPause () { super . onPause () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> bug fix when on the custom keyboard screen going in the background crahes the app
bug_after_refactoring: @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> bug fix when on the custom keyboard screen going in the background crahes the app
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; android.content.Intent intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; finish () ; }

line_index: 905
bug_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
fix_after_refactoring: @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) {}
√ fix_prediction_before: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
× fix_prediction_after: @ java.lang.Override public void wikbklcpqabvivszvm ( int itemsInAdapter ) {}

line_index: 908
bug_before_refactoring: private int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> private int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> Fixed a serious error with the bank and getting the count of dev cards  Accidentally accessed the resources array rather than the real array
bug_after_refactoring: private int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> private int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> Fixed a serious error with the bank and getting the count of dev cards  Accidentally accessed the resources array rather than the real array
fix_before_refactoring: public int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
fix_after_refactoring: public int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
√ fix_prediction_before: public int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
× fix_prediction_after: private int buhlzpqicwtmpizdeqqu () { long total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }

line_index: 913
bug_before_refactoring: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> Fix #28: Moved ITopologyEventCollector client callsites to channel methods  -this avoids the problem where the events would also be called for the replicated information  on the passive -we can also now re-enable the assertions to verify event call symmetry in ManagementTopologyEventCollector
bug_after_refactoring: @ java.lang.Override public synchronized void ksulwwkxikouxjjtcbvt ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> @ java.lang.Override public synchronized void ksulwwkxikouxjjtcbvt ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> Fix #28: Moved ITopologyEventCollector client callsites to channel methods  -this avoids the problem where the events would also be called for the replicated information  on the passive -we can also now re-enable the assertions to verify event call symmetry in ManagementTopologyEventCollector
fix_before_refactoring: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; this . connectedClients . remove ( client ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void ksulwwkxikouxjjtcbvt ( com.tc.net.ClientID client ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; this . connectedClients . remove ( client ) ; }
√ fix_prediction_before: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; this . connectedClients . remove ( client ) ; }
× fix_prediction_after: @ java.lang.Override public synchronized void ksulwwkxikouxjjtcbvt ( com.tc.net.ClientID client ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; }

line_index: 937
bug_before_refactoring: java.lang.String getLogin ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> java.lang.String getLogin ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> - The code was simplified - New messages automatically appears in the opened dialog - Now line in the lower left corner informs about new connections - Bugfixes
bug_after_refactoring: java.lang.String mhwzmmusubkvshwbgolo ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> java.lang.String mhwzmmusubkvshwbgolo ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> - The code was simplified - New messages automatically appears in the opened dialog - Now line in the lower left corner informs about new connections - Bugfixes
fix_before_refactoring: java.lang.String getLogin ( ) throws java.io.IOException { return in . readLine () ; }
fix_after_refactoring: java.lang.String mhwzmmusubkvshwbgolo ( ) throws java.io.IOException { return in . readLine () ; }
√ fix_prediction_before: java.lang.String getLogin ( ) throws java.io.IOException { return in . readLine () ; }
× fix_prediction_after: java.lang.String mhwzmmusubkvshwbgoloolooloolo ( ) throws java.io.IOException { return in . readLine () ; }

line_index: 954
bug_before_refactoring: private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> fix bugly#1493  application context null
bug_after_refactoring: private void uskrzqapuikaeagcqdla () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> private void uskrzqapuikaeagcqdla () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> fix bugly#1493  application context null
fix_before_refactoring: private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; }
fix_after_refactoring: private void uskrzqapuikaeagcqdla () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; }
√ fix_prediction_before: private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; }
× fix_prediction_after: private void uskrzqapuikaeagcqdla () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } }

line_index: 960
bug_before_refactoring: @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> solved a bug that would cause sales not to be increased when Firebase returned a Long value
bug_after_refactoring: @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; android.widget.Toast . makeText ( com.example.nicholasesposito.posapp.activities.MainActivity . getMainActivity () , "Uploading Data" , Toast.LENGTH_SHORT ) . show () ; } <s> solved a bug that would cause sales not to be increased when Firebase returned a Long value
fix_before_refactoring: @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; }
fix_after_refactoring: @ java.lang.Override protected void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; }
× fix_prediction_after: @ java.lang.Override public void zneuhbacjzegxagyfmil () { super . zneuhbacjzegxagyfmil () ; }

line_index: 968
bug_before_refactoring: @ java.lang.Override public void run () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> @ java.lang.Override public void run () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> Handle failures after closed transaction  We should not run `onError` of a transaction after the transaction has been successfully closed.  Fixes #146
bug_after_refactoring: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> Handle failures after closed transaction  We should not run `onError` of a transaction after the transaction has been successfully closed.  Fixes #146
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }
fix_after_refactoring: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }
√ fix_prediction_before: @ java.lang.Override public void run () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }
× fix_prediction_after: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; } connection . onError ( null ) ; }

line_index: 971
bug_before_refactoring: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
bug_after_refactoring: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; }

line_index: 986
bug_before_refactoring: private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> resolved file name issues
bug_after_refactoring: private void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . htyhaxsrzhzqsfqsgutc ( s . getBytes () ) ; } } <s> private void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . htyhaxsrzhzqsfqsgutc ( s . getBytes () ) ; } } <s> resolved file name issues
fix_before_refactoring: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
fix_after_refactoring: public void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . htyhaxsrzhzqsfqsgutc ( s . getBytes () ) ; } }
√ fix_prediction_before: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
× fix_prediction_after: private void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . htyhaxsrzhzqsfqsgutc ( s . getBytes () ) ; } }

line_index: 1003
bug_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
bug_after_refactoring: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
fix_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
fix_after_refactoring: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
× fix_prediction_after: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; }

line_index: 1016
bug_before_refactoring: public java.lang.Integer getType () { return ( type ) == 0 ? null : type ; } <s> public java.lang.Integer getType () { return ( type ) == 0 ? null : type ; } <s> fixed bad enum error
bug_after_refactoring: public java.lang.Integer vofeguspfxvbqteilkte () { return ( type ) == 0 ? null : type ; } <s> public java.lang.Integer vofeguspfxvbqteilkte () { return ( type ) == 0 ? null : type ; } <s> fixed bad enum error
fix_before_refactoring: public java.lang.Integer getType () { return type ; }
fix_after_refactoring: public java.lang.Integer vofeguspfxvbqteilkte () { return type ; }
√ fix_prediction_before: public java.lang.Integer getType () { return type ; }
× fix_prediction_after: public java.lang.Integer vofeguspfxvbqtekilte () { return type ; }

line_index: 1027
bug_before_refactoring: private void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> private void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> Word Game  Solve the issues in phase 2.
bug_after_refactoring: private void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> private void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> Word Game  Solve the issues in phase 2.
fix_before_refactoring: public void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } }
fix_after_refactoring: public void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } }
√ fix_prediction_before: public void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } }
× fix_prediction_after: private void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } }

line_index: 1033
bug_before_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (info)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (info)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> Fix Perf Problem
bug_after_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (rxxjfwxluxpycizrwbbr)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (rxxjfwxluxpycizrwbbr)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> Fix Perf Problem
fix_before_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { try {} catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }

line_index: 1049
bug_before_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> Fixed a bug / incorrect warning log in Lisette's code and removed some unnecessary code. (Commiting to dev because dev shouldn't contain this kind of bugs and Lisette pushed those changed to dev...) <bugfix
bug_after_refactoring: @ java.lang.Override public void alhuvjcxgphkbvbreada ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> @ java.lang.Override public void alhuvjcxgphkbvbreada ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> Fixed a bug / incorrect warning log in Lisette's code and removed some unnecessary code. (Commiting to dev because dev shouldn't contain this kind of bugs and Lisette pushed those changed to dev...) <bugfix
fix_before_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( disabled ) ; }
fix_after_refactoring: @ java.lang.Override public void alhuvjcxgphkbvbreada ( boolean disabled ) { quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( disabled ) ; }
√ fix_prediction_before: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( disabled ) ; }
× fix_prediction_after: @ java.lang.Override public void alhuvjcxgphkbvbreada ( boolean disabled ) { util.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( true ) ; }

line_index: 1067
bug_before_refactoring: public void onSwipeUp () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> public void onSwipeUp () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> Fix bugs on classicSnake
bug_after_refactoring: public void sqnwwrpckgaudomggylb () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> public void sqnwwrpckgaudomggylb () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> Fix bugs on classicSnake
fix_before_refactoring: private void onSwipeUp () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } }
fix_after_refactoring: private void sqnwwrpckgaudomggylb () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } }
√ fix_prediction_before: private void onSwipeUp () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } }
× fix_prediction_after: public void sqnwwrpckgaudomggylb () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } }

line_index: 1069
bug_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
fix_after_refactoring: @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
√ fix_prediction_before: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mPlayer . start () ; }
× fix_prediction_after: @ java.lang.Override public void uukdwdkcgccqvbmschix ( android.media.MediaPlayer mp ) { if ( mp == ( mPlayer ) ) { mPlayer . start () ; } }

line_index: 1073
bug_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> Fixed javadocs issues
bug_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> Fixed javadocs issues
fix_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
fix_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ) { return bqqwekojqzqjbxrqympw ; }
√ fix_prediction_before: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
× fix_prediction_after: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; }

line_index: 1081
bug_before_refactoring: private void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> private void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> some errors are fixed
bug_after_refactoring: private void tmtdejlmvwjgtfmsvesf () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> private void tmtdejlmvwjgtfmsvesf () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> some errors are fixed
fix_before_refactoring: public void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; }
fix_after_refactoring: public void tmtdejlmvwjgtfmsvesf () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; }
√ fix_prediction_before: public void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; }
× fix_prediction_after: private void tmtdejlmvwjgtfmsvesf () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; }

line_index: 1083
bug_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> fix sshutil bug
bug_after_refactoring: public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return false ; } <s> public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return false ; } <s> fix sshutil bug
fix_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return true ; }
fix_after_refactoring: public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return true ; }
√ fix_prediction_before: public boolean promptYesNo ( java.lang.String str ) { return true ; }
× fix_prediction_after: public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return false ; }

line_index: 1103
bug_before_refactoring: public void refresh () { request ( url , true ) ; } <s> public void refresh () { request ( url , true ) ; } <s> Bugfixes.
bug_after_refactoring: public void qryvghqzsoqycflugzgq () { request ( url , true ) ; } <s> public void qryvghqzsoqycflugzgq () { request ( url , true ) ; } <s> Bugfixes.
fix_before_refactoring: public void refresh () { request ( url ) ; }
fix_after_refactoring: public void qryvghqzsoqycflugzgq () { request ( url ) ; }
√ fix_prediction_before: public void refresh () { request ( url ) ; }
× fix_prediction_after: public void qryvghqzsoqycflugzgq () { request ( url , true ) ; }

line_index: 1105
bug_before_refactoring: private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
fix_after_refactoring: private static void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
√ fix_prediction_before: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
× fix_prediction_after: private static native void jarokzbacazxqldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ;

line_index: 1110
bug_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
bug_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
fix_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
fix_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
√ fix_prediction_before: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
× fix_prediction_after: public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; }

line_index: 1138
bug_before_refactoring: public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> public void setValue ( int value ) { validateValue ( value ) ; this . value = value ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; } <s> public void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
fix_after_refactoring: private void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; }
√ fix_prediction_before: private void setValue ( int value ) { validateValue ( value ) ; this . value = value ; }
× fix_prediction_after: public void vzjwfgtowbysvfjtipft ( int value ) { validateValue ( value ) ; this . value = value ; }

line_index: 1139
bug_before_refactoring: @ java.lang.Override public boolean onTarget () { return ( ! ( justReset ) ) && ( super . onTarget () ) ; } <s> @ java.lang.Override public boolean onTarget () { return ( ! ( justReset ) ) && ( super . onTarget () ) ; } <s> Fixed threading issues with justReset  privitized justReset  then added synchronizes
bug_after_refactoring: @ java.lang.Override public boolean neiptqnrmwjqgxhjiutb () { return ( ! ( justReset ) ) && ( super . neiptqnrmwjqgxhjiutb () ) ; } <s> @ java.lang.Override public boolean neiptqnrmwjqgxhjiutb () { return ( ! ( justReset ) ) && ( super . neiptqnrmwjqgxhjiutb () ) ; } <s> Fixed threading issues with justReset  privitized justReset  then added synchronizes
fix_before_refactoring: @ java.lang.Override public boolean onTarget () { return super . onTarget () ; }
fix_after_refactoring: @ java.lang.Override public boolean neiptqnrmwjqgxhjiutb () { return super . neiptqnrmwjqgxhjiutb () ; }
√ fix_prediction_before: @ java.lang.Override public boolean onTarget () { return super . onTarget () ; }
× fix_prediction_after: @ java.lang.Override public boolean neiptqnrmwjqgxhjiutb () { return ( ! ( this . justReset ) ) && ( super . neiptqnrmwjqgxhjiutb () ) ; }

line_index: 1141
bug_before_refactoring: boolean contents ( T item ) ; <s> boolean contents ( T item ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
bug_after_refactoring: boolean ghgxepynlbqjvslzrner ( T item ) ; <s> boolean ghgxepynlbqjvslzrner ( T item ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
fix_before_refactoring: boolean contains ( T item ) ;
fix_after_refactoring: boolean contains ( T item ) ;
√ fix_prediction_before: boolean contains ( T item ) ;
× fix_prediction_after: booleanghgxepynlbqjvslzrner ( T item ) ;

line_index: 1167
bug_before_refactoring: private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> Fixing bugs
bug_after_refactoring: private static native void tyswauvvittdqgjzllcr ( int id , long name , long value ) ; <s> private static native void tyswauvvittdqgjzllcr ( int id , long name , long value ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
fix_after_refactoring: private static void tyswauvvittdqgjzllcr ( int id , long name , long value ) {}
√ fix_prediction_before: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
× fix_prediction_after: private static native void tyswauRDittdqgjzllcr ( int id , long name , long value ) ;

line_index: 1171
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson iodzcldczymbofkxzjia ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson iodzcldczymbofkxzjia ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson iodzcldczymbofkxzjia ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
√ fix_prediction_before: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
× fix_prediction_after: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; return lesson ; }

line_index: 1179
bug_before_refactoring: public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_after: public void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }

line_index: 1180
bug_before_refactoring: @ java.lang.Override public void execute () { try { command . execute () ; } catch ( java.lang.Exception e ) { gwtLogger . warn ( e . getMessage () , e ) ; } } <s> @ java.lang.Override public void execute () { try { command . execute () ; } catch ( java.lang.Exception e ) { gwtLogger . warn ( e . getMessage () , e ) ; } } <s> fix compiler errors
bug_after_refactoring: @ java.lang.Override public void yftwlbhmjynkapomqndh () { try { command . yftwlbhmjynkapomqndh () ; } catch ( java.lang.Exception e ) { gwtLogger . warn ( e . getMessage () , e ) ; } } <s> @ java.lang.Override public void yftwlbhmjynkapomqndh () { try { command . yftwlbhmjynkapomqndh () ; } catch ( java.lang.Exception e ) { gwtLogger . warn ( e . getMessage () , e ) ; } } <s> fix compiler errors
fix_before_refactoring: @ java.lang.Override protected void warn ( java.lang.String message , java.lang.Exception e ) { gwtLogger . warn ( message , e ) ; }
fix_after_refactoring: @ java.lang.Override protected void warn ( java.lang.String message , java.lang.Exception e ) { gwtLogger . warn ( message , e ) ; }
√ fix_prediction_before: @ java.lang.Override protected void warn ( java.lang.String message , java.lang.Exception e ) { gwtLogger . warn ( message , e ) ; }
× fix_prediction_after: @ java.lang.Override public void yftwlbhmjynkapomqndh () {}

line_index: 1194
bug_before_refactoring: @ org.junit.Test @ com.github.springtestdbunit.annotation.DatabaseSetup public void testGet ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; } <s> @ org.junit.Test @ com.github.springtestdbunit.annotation.DatabaseSetup public void testGet ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; } <s> bugfix
bug_after_refactoring: @ org.junit.Test @ com.github.springtestdbunit.annotation.DatabaseSetup public void tvgakhiguutlwplkzysd ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; } <s> @ org.junit.Test @ com.github.springtestdbunit.annotation.DatabaseSetup public void tvgakhiguutlwplkzysd ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; } <s> bugfix
fix_before_refactoring: @ org.junit.Test @ com.yeahmobi.yunit.annotation.DatabaseSetup public void testGet ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = this . personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; }
fix_after_refactoring: @ org.junit.Test @ com.yeahmobi.yunit.annotation.DatabaseSetup public void tvgakhiguutlwplkzysd ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = this . personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; }
√ fix_prediction_before: @ org.junit.Test @ com.yeahmobi.yunit.annotation.DatabaseSetup public void testGet ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = this . personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; }
× fix_prediction_after: @ org.junit.Test @ com.yeahmobi.yunit.annotation.DatabaseSetup public void tvgakhiguutlwplkzysd ( ) throws java.lang.Exception {}

line_index: 1195
bug_before_refactoring: private void stopCameraPreview () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } } <s> private void stopCameraPreview () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } } <s> fixed camera freeze issue
bug_after_refactoring: private void iaojmrpgkxfwlwhwpjrp () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } } <s> private void iaojmrpgkxfwlwhwpjrp () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } } <s> fixed camera freeze issue
fix_before_refactoring: public void stopCameraPreview () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } }
fix_after_refactoring: public void iaojmrpgkxfwlwhwpjrp () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } }
√ fix_prediction_before: public void stopCameraPreview () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } }
× fix_prediction_after: private void iaojmrpgkxfwlwhwpjrp () { mPreviewing = false ; mCamera . cancelAutoFocus () ; }

line_index: 1204
bug_before_refactoring: public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> public void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; } <s> public void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
fix_after_refactoring: private void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell . getX () , cell . getY () ) ; }
√ fix_prediction_before: private void reveal ( org.minesweeper.core.Cell cell ) { reveal ( cell . getX () , cell . getY () ) ; }
× fix_prediction_after: public void nhaybowzyiozqgkpqadu ( org.minesweeper.core.Cell cell ) { nhaybowzyiozqgkpqadu ( cell ) ; }

line_index: 1212
bug_before_refactoring: protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
fix_after_refactoring: private native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ;
√ fix_prediction_before: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
× fix_prediction_after: public native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ;

line_index: 1228
bug_before_refactoring: @ asteroids.model.Basic public double getRadius () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> @ asteroids.model.Basic public double getRadius () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> fixed bug in radius reduction procedure in Planetoid
bug_after_refactoring: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> fixed bug in radius reduction procedure in Planetoid
fix_before_refactoring: @ asteroids.model.Basic public double getRadius () { return radius ; }
fix_after_refactoring: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return radius ; }
√ fix_prediction_before: @ asteroids.model.Basic public double getRadius () { return radius ; }
× fix_prediction_after: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return ( radius ) - ( totalTraveledDistance ) ; }

line_index: 1233
bug_before_refactoring: public void showPopupWindow () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> public void showPopupWindow () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> added new method in exerciseTable manager tofix bug in viewExercisesPopup
bug_after_refactoring: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> added new method in exerciseTable manager tofix bug in viewExercisesPopup
fix_before_refactoring: public void showPopupWindow () { displayPopupWindow () ; setListView () ; }
fix_after_refactoring: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; setListView () ; }
√ fix_prediction_before: public void showPopupWindow () { displayPopupWindow () ; setListView () ; }
× fix_prediction_after: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; }

line_index: 1243
bug_before_refactoring: void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> void ApplyWeights ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> Back again. FIxed TeachingPolicy realated error in QLearning.java
bug_after_refactoring: void qafzrgkzjsdkqzknptpj ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> void qafzrgkzjsdkqzknptpj ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ; <s> Back again. FIxed TeachingPolicy realated error in QLearning.java
fix_before_refactoring: void ApplyWeights ( ) ;
fix_after_refactoring: void qafzrgkzjsdkqzknptpj ( ) ;
√ fix_prediction_before: void ApplyWeights ( ) ;
× fix_prediction_after: void qafzrgkzjsdkqzknptpj ( final MLPerceptron.TeachingPolicies.TeachingPolicy teachingPolicy ) ;

line_index: 1269
bug_before_refactoring: public boolean isHidden () { if ( ( lineEffect ) == null ) return true ; else return false ; } <s> public boolean isHidden () { if ( ( lineEffect ) == null ) return true ; else return false ; } <s> Merge pull request #2 from XRECKXIMPACT/master  Bug fixes  addition of smileys (yay)  and debug
bug_after_refactoring: public boolean vdivypzxbfmgiwejyjyp () { if ( ( lineEffect ) == null ) return true ; else return false ; } <s> public boolean vdivypzxbfmgiwejyjyp () { if ( ( lineEffect ) == null ) return true ; else return false ; } <s> Merge pull request #2 from XRECKXIMPACT/master  Bug fixes  addition of smileys (yay)  and debug
fix_before_refactoring: public boolean isHidden () { return ( lineEffect ) == null ; }
fix_after_refactoring: public boolean vdivypzxbfmgiwejyjyp () { return ( lineEffect ) == null ; }
√ fix_prediction_before: public boolean isHidden () { return ( lineEffect ) == null ; }
× fix_prediction_after: public boolean vdivypzxbfmgiwejyjyp () { return ( ( lineEffect ) != null ) && ( ( lineEffect ) == null ) ; }

line_index: 1274
bug_before_refactoring: public boolean prepareSelectedFiles () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; } <s> public boolean prepareSelectedFiles () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; } <s> Fixed bugs
bug_after_refactoring: public boolean jwlzyuhrcllvbtktxsua () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; } <s> public boolean jwlzyuhrcllvbtktxsua () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; } <s> Fixed bugs
fix_before_refactoring: private boolean prepareSelectedFiles () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; }
fix_after_refactoring: private boolean jwlzyuhrcllvbtktxsua () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; }
√ fix_prediction_before: private boolean prepareSelectedFiles () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; }
× fix_prediction_after: public boolean jwlzyuhrcllvbtktxsua () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; }

line_index: 1279
bug_before_refactoring: public void tick () { ( tickCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( tickCount ) ; } } <s> public void tick () { ( tickCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( tickCount ) ; } } <s> Created Screen  -Created Screen (So background is visible) -Fixed Variable Naming (Height was spelled Heigth) -Cleaned up some debug code
bug_after_refactoring: public void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( zryxgggyzwypqulmnoquCount ) ; } } <s> public void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( zryxgggyzwypqulmnoquCount ) ; } } <s> Created Screen  -Created Screen (So background is visible) -Fixed Variable Naming (Height was spelled Heigth) -Cleaned up some debug code
fix_before_refactoring: public void tick () { ( tickCount ) ++ ; }
fix_after_refactoring: public void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; }
√ fix_prediction_before: public void tick () { ( tickCount ) ++ ; }
× fix_prediction_after: private void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( zryxgggyzwypqulmnoquCount ) ; } }

line_index: 1292
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> protected void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
fix_after_refactoring: public void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }
× fix_prediction_after: private void vysxewetoseyqpsrfghr ( java.lang.String key , long value ) { getArguments () . putLong ( key , value ) ; }

line_index: 1293
bug_before_refactoring: private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
fix_after_refactoring: private static void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
√ fix_prediction_before: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
× fix_prediction_after: private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ;

line_index: 1302
bug_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
bug_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
fix_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
fix_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
√ fix_prediction_before: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
× fix_prediction_after: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; }

line_index: 1315
bug_before_refactoring: private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
bug_after_refactoring: private static native void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) ; <s> private static native void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
fix_after_refactoring: private static void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) {}
√ fix_prediction_before: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
× fix_prediction_after: private static native void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) ;

line_index: 1328
bug_before_refactoring: private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ; <s> private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
fix_after_refactoring: private static void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) {}
√ fix_prediction_before: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
× fix_prediction_after: private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ;

line_index: 1336
bug_before_refactoring: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> fixed cs issues  added adfs changes
bug_after_refactoring: private void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> private void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> fixed cs issues  added adfs changes
fix_before_refactoring: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
fix_after_refactoring: private static void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
√ fix_prediction_before: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
× fix_prediction_after: private void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }

line_index: 1339
bug_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
bug_after_refactoring: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
fix_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
fix_after_refactoring: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
√ fix_prediction_before: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
× fix_prediction_after: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { cache . put ( key , value ) ; }

line_index: 1361
bug_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> fix bug: remove unnecessary id
bug_after_refactoring: public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise zehyebcqwpvgoitphffs ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise zehyebcqwpvgoitphffs ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> fix bug: remove unnecessary id
fix_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
fix_after_refactoring: public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise zehyebcqwpvgoitphffs ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
√ fix_prediction_before: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
× fix_prediction_after: public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise zehyebcqwpvgoitphffs ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }

line_index: 1362
bug_before_refactoring: private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
bug_after_refactoring: private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
fix_before_refactoring: private void setHeight ( final int height ) { this . height = height ; }
fix_after_refactoring: private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height ; }
√ fix_prediction_before: private void setHeight ( final int height ) { this . height = height ; }
× fix_prediction_after: private void whhuaby trailsuirnxcrys ( final int height ) { this . height = height ; }

line_index: 1363
bug_before_refactoring: public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> Fixed bugs
bug_after_refactoring: public void krnaotsthqyhqkexbifa ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> public void krnaotsthqyhqkexbifa ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> Fixed bugs
fix_before_refactoring: private void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; }
fix_after_refactoring: private void krnaotsthqyhqkexbifa ( java.lang.String text ) { infoLabel . setText ( text ) ; }
√ fix_prediction_before: private void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; }
× fix_prediction_after: public void krnaotsthqyhqkexbifa ( java.lang.String text ) { infoLabel . setText ( text ) ; }

line_index: 1365
bug_before_refactoring: public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> money changes + bugfixes
bug_after_refactoring: public void ycmlrhbdcethhsokiwyu ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> public void ycmlrhbdcethhsokiwyu ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> money changes + bugfixes
fix_before_refactoring: public void addBank ( int index ) { bank . add ( hand . remove ( index ) ) ; }
fix_after_refactoring: public void ycmlrhbdcethhsokiwyu ( int index ) { bank . add ( hand . remove ( index ) ) ; }
√ fix_prediction_before: public void addBank ( int index ) { bank . add ( hand . remove ( index ) ) ; }
× fix_prediction_after: public void ycmlrhbdcethhsiwyu ( int index ) { if ( ( ( ( cards ) ( hand . get ( ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } }

line_index: 1371
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
bug_after_refactoring: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
fix_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; }

line_index: 1378
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
bug_after_refactoring: @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public boolean xekzqddbnuvjxilkiipe ( android.os.Bundle savedInstanceState ) { return super . xekzqddbnuvjxilkiipe ( savedInstanceState ) ; }

line_index: 1381
bug_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> bug fix  does not display the map activity on new users
bug_after_refactoring: public void vtjgilakkqkpyqwxljng ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> public void vtjgilakkqkpyqwxljng ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> bug fix  does not display the map activity on new users
fix_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
fix_after_refactoring: public void vtjgilakkqkpyqwxljng ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
√ fix_prediction_before: public void done ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
× fix_prediction_after: public void vtjgilakkqkpyqwxljng ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( this , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } }

line_index: 1383
bug_before_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> fix bug
bug_after_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; } <s> fix bug
fix_before_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
fix_after_refactoring: public void bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; }
√ fix_prediction_before: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
× fix_prediction_after: public com.ning.http.client.AsyncHttpClientConfig.Builder bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; }

line_index: 1392
bug_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> @ java.lang.Override protected void onStop () { super . onStop () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> change configuration bug fixed
bug_after_refactoring: @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; android.view.Menu mMenu = mNavigationView . getMenu () ; android.view.MenuItem home = mMenu . findItem ( R.id.nav_home ) ; if ( home . isChecked () ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false ; } } <s> change configuration bug fixed
fix_before_refactoring: @ java.lang.Override protected void onStop () { super . onStop () ; }
fix_after_refactoring: @ java.lang.Override protected void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnsnzndv () ; }
√ fix_prediction_before: @ java.lang.Override protected void onStop () { super . onStop () ; }
× fix_prediction_after: @ java.lang.Override public void zhyfhrpewgzwgnsnzndv () { super . zhyfhrpewgzwgnwgnsnzndv () ; }

line_index: 1395
bug_before_refactoring: private java.lang.String unsubcribeLink () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> private java.lang.String unsubcribeLink () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> Merge pull request #441 from slipstream/issue_#440-improve-email  Fix SlipstreamServer#440
bug_after_refactoring: private java.lang.String nibqhehetjblojhsqcqi () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> private java.lang.String nibqhehetjblojhsqcqi () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> Merge pull request #441 from slipstream/issue_#440-improve-email  Fix SlipstreamServer#440
fix_before_refactoring: private java.lang.String unsubcribeLink () { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; }
fix_after_refactoring: private java.lang.String nibqhehetjblojhsqcqi () { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; }
√ fix_prediction_before: private java.lang.String unsubcribeLink () { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; }
× fix_prediction_after: private java.lang.String nibqhehetjblojhsqcqi () { try { return ( ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } }

line_index: 1398
bug_before_refactoring: protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
bug_after_refactoring: protected void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> protected void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
fix_before_refactoring: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
fix_after_refactoring: public void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
√ fix_prediction_before: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
× fix_prediction_after: public void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; mContentHeight = contentHeight ; updateTextureViewSize () ; }

line_index: 1421
bug_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
bug_after_refactoring: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
fix_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
fix_after_refactoring: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { failureHandler ( error_code ) ; }
√ fix_prediction_before: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
× fix_prediction_after: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { if ( ! ( mSwipeRefreshLayout . isRefreshing () ) ) { mSwipeRefreshLayout . setRefreshing ( true ) ; } failureHandler ( error_code ) ; }

line_index: 1441
bug_before_refactoring: public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
bug_after_refactoring: public void tyvzjyjanlaryjmlkjur ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void tyvzjyjanlaryjmlkjur ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
fix_before_refactoring: public void setST ( main.java.DisplayST st ) { this . st = st ; }
fix_after_refactoring: public void tyvzjyjanlaryjmlkjur ( main.java.DisplayST st ) { this . st = st ; }
√ fix_prediction_before: public void setST ( main.java.DisplayST st ) { this . st = st ; }
× fix_prediction_after: public void tyvzjyjanlaryjmlkjur ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } }

line_index: 1448
bug_before_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
bug_after_refactoring: public io.kuzzle.sdk.core.KuzzleDocument pcihtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . pcihtvjledqpofawzcyn ( options , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument pcihtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . pcihtvjledqpofawzcyn ( options , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
fix_before_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
fix_after_refactoring: public void pcihtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . pcihtvjledqpofawzcyn ( options , null ) ; }
√ fix_prediction_before: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
× fix_prediction_after: protected io.kuzzle.sdk.core.KuzzleDocument pcihtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . pcihtvjledqpofawzcyn ( options , null ) ; }

line_index: 1452
bug_before_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
bug_after_refactoring: public ninja.Result ruluatkjxiiwsdcvarfa ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result ruluatkjxiiwsdcvarfa ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
fix_before_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
fix_after_refactoring: public ninja.Result ruluatkjxiiwsdcvarfa () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
√ fix_prediction_before: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
× fix_prediction_after: public ninja.Result ruluatkjxiiwsdcvarfa ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }

line_index: 1474
bug_before_refactoring: private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> Fixing bugs
bug_after_refactoring: private static native long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) ; <s> private static native long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
fix_after_refactoring: private static long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) { return 0 ; }
√ fix_prediction_before: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
× fix_prediction_after: private static native long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) { return rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) ; }

line_index: 1497
bug_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
bug_after_refactoring: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
fix_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
fix_after_refactoring: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; }
√ fix_prediction_before: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
× fix_prediction_after: public void ptiucxamkvesdojndnzk ( java.awt.event.ItemEvent e ) { addPoints = true ; }

line_index: 1508
bug_before_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
bug_after_refactoring: @ com.google.common.eventbus.Subscribe private void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
fix_before_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
fix_after_refactoring: @ com.google.common.eventbus.Subscribe public void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
√ fix_prediction_before: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
× fix_prediction_after: @ com.google.common.eventbus.Subscribe public void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.TaskBook = new seedu.jobs.model.TaskBook ( abce.data ) ;

line_index: 1515
bug_before_refactoring: private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
bug_after_refactoring: private static native void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
fix_after_refactoring: private static void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
√ fix_prediction_before: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
× fix_prediction_after: private static native void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) {}

line_index: 1520
bug_before_refactoring: @ java.lang.Override public int getTo () { java.lang.System.out . println ( to ) ; return to ; } <s> @ java.lang.Override public int getTo () { java.lang.System.out . println ( to ) ; return to ; } <s> Final bug fix
bug_after_refactoring: @ java.lang.Override public int jxvagzftqopmsggruvkd () { java.lang.System.out . println ( to ) ; return to ; } <s> @ java.lang.Override public int jxvagzftqopmsggruvkd () { java.lang.System.out . println ( to ) ; return to ; } <s> Final bug fix
fix_before_refactoring: @ java.lang.Override public int getTo () { return to ; }
fix_after_refactoring: @ java.lang.Override public int jxvagzftqopmsggruvkd () { return to ; }
√ fix_prediction_before: @ java.lang.Override public int getTo () { return to ; }
× fix_prediction_after: @ java.lang.Override public int jx vagzftqopmsggruvkd () { return to ; }

line_index: 1521
bug_before_refactoring: public static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> public static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> -fix lower and upper bound bug in event model -refactor event model -fix date object event model test
bug_after_refactoring: public static java.util.Date gqbrbiozkiwvfodcmyge ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> public static java.util.Date gqbrbiozkiwvfodcmyge ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> -fix lower and upper bound bug in event model -refactor event model -fix date object event model test
fix_before_refactoring: private static org.joda.time.DateTime makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) ; }
fix_after_refactoring: private static org.joda.time.DateTime gqbrbiozkiwvfodcmyge ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) ; }
√ fix_prediction_before: private static org.joda.time.DateTime makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) ; }
× fix_prediction_after: public static java.util.Date gqbrbiozkiwvfodcmyge ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) ; }

line_index: 1529
bug_before_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> Add further configurations and fix error with non-working activityCheckConfiguration
bug_after_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode ogjrdppngsmqffjuvvug ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> private com.kontakt.sdk.android.ble.configuration.ScanMode ogjrdppngsmqffjuvvug ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> Add further configurations and fix error with non-working activityCheckConfiguration
fix_before_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
fix_after_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode ogjrdppngsmqffjuvvug ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
√ fix_prediction_before: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
× fix_prediction_after: private com.kontakt.sdk.android.ble.configuration.ScanMode ogjrdppngsmqffju� mode

line_index: 1535
bug_before_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
bug_after_refactoring: public org.techm.scheduler.domain.JobAction upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
fix_before_refactoring: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
fix_after_refactoring: public void upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; }
√ fix_prediction_before: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
× fix_prediction_after: public org.techm.scheduler.domain.JobAction upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; }

line_index: 1537
bug_before_refactoring: public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_after: public void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }

line_index: 1542
bug_before_refactoring: private void setEmail ( java.lang.String val ) { email = val ; } <s> private void setEmail ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; } <s> private void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public void setEmail ( java.lang.String val ) { email = val ; }
fix_after_refactoring: public void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; }
√ fix_prediction_before: public void setEmail ( java.lang.String val ) { email = val ; }
× fix_prediction_after: private void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; }

line_index: 1543
bug_before_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: public synchronized boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
fix_after_refactoring: public boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
√ fix_prediction_before: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
× fix_prediction_after: public boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer ) ) != null ; } }

line_index: 1546
bug_before_refactoring: private void applicationStartedUploading () { gui.startCompetitionUploadButton . setVisible ( false ) ; gui.stopCompetitionUploadButton . setVisible ( true ) ; startUploadTimer () ; } <s> private void applicationStartedUploading () { gui.startCompetitionUploadButton . setVisible ( false ) ; gui.stopCompetitionUploadButton . setVisible ( true ) ; startUploadTimer () ; } <s> added eventhandlers and bugfixes
bug_after_refactoring: private void qnmizmpdywsdarnzxbwq () { gui.startCompetitionUploadButton . setVisible ( false ) ; gui.stopCompetitionUploadButton . setVisible ( true ) ; startUploadTimer () ; } <s> private void qnmizmpdywsdarnzxbwq () { gui.startCompetitionUploadButton . setVisible ( false ) ; gui.stopCompetitionUploadButton . setVisible ( true ) ; startUploadTimer () ; } <s> added eventhandlers and bugfixes
fix_before_refactoring: private void applicationStartedUploading () { gui.startCompetitionUploadButton . setEnabled ( false ) ; gui.stopCompetitionUploadButton . setEnabled ( true ) ; startUploadTimer () ; }
fix_after_refactoring: private void qnmizmpdywsdarnzxbwq () { gui.startCompetitionUploadButton . setEnabled ( false ) ; gui.stopCompetitionUploadButton . setEnabled ( true ) ; startUploadTimer () ; }
√ fix_prediction_before: private void applicationStartedUploading () { gui.startCompetitionUploadButton . setEnabled ( false ) ; gui.stopCompetitionUploadButton . setEnabled ( true ) ; startUploadTimer () ; }
× fix_prediction_after: public void qnmizmpdywsdarnzxbwq () { gui.startCompetitionUploadButton . setEnabled ( false ) ; gui.stopCompetitionUploadButton . setEnabled ( true ) ; startUploadTimer () ; }

line_index: 1555
bug_before_refactoring: public void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> public void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> Fixed bug where deconstructing stained clay gave wrong dye (for some reason the color meta data sequence is flipped for each)
bug_after_refactoring: public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> Fixed bug where deconstructing stained clay gave wrong dye (for some reason the color meta data sequence is flipped for each)
fix_before_refactoring: private void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
fix_after_refactoring: private void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
√ fix_prediction_before: private void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
× fix_prediction_after: public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }

line_index: 1569
bug_before_refactoring: private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
fix_after_refactoring: private static void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
√ fix_prediction_before: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
× fix_prediction_after: private static native void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ;

line_index: 1579
bug_before_refactoring: @ java.lang.Override public void run () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> @ java.lang.Override public void run () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> Fix bug
bug_after_refactoring: @ java.lang.Override public void pnvcjytgmfruiwkitlda () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> @ java.lang.Override public void pnvcjytgmfruiwkitlda () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> Fix bug
fix_before_refactoring: @ java.lang.Override public void run () { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; }
fix_after_refactoring: @ java.lang.Override public void pnvcjytgmfruiwkitlda () { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; }
× fix_prediction_after: @ java.lang.Override public void pnvcjytgmfruiwkitlda () { getHostData.availability = infoHelper . readAvailability ( getHostName () , getModuleData.availabilityUrl ) ; }

line_index: 1584
bug_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
bug_after_refactoring: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
fix_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
fix_after_refactoring: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) {}
√ fix_prediction_before: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
× fix_prediction_after: public void uxvlroGraphicsalywpoafzhi ( javax.faces.event.ActionEvent event ) {}

line_index: 1586
bug_before_refactoring: private static native void _IMAQdxStartAcquisition ( int id ) ; <s> private static native void _IMAQdxStartAcquisition ( int id ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hfowjsesnpxeuhzubiyb ( int id ) ; <s> private static native void hfowjsesnpxeuhzubiyb ( int id ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxStartAcquisition ( int id ) {}
fix_after_refactoring: private static void hfowjsesnpxeuhzubiyb ( int id ) {}
√ fix_prediction_before: private static void _IMAQdxStartAcquisition ( int id ) {}
× fix_prediction_after: private static native void hfowjsesnpxeuhzubiyb ( int id ) ;

line_index: 1609
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> Fix location bug for location button Change pin images Add some i18n strings Fixups
bug_after_refactoring: @ java.lang.Override public void bkuqzumwynojfkvrxitl ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> @ java.lang.Override public void bkuqzumwynojfkvrxitl ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> Fix location bug for location button Change pin images Add some i18n strings Fixups
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void bkuqzumwynojfkvrxitl ( android.view.View v ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void bkuqzumwynojfkvrxonl ( android.view.View v ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }

line_index: 1615
bug_before_refactoring: private void refresh () { data . clear () ; loadData () ; } <s> private void refresh () { data . clear () ; loadData () ; } <s> bugfix refresh tabelle
bug_after_refactoring: private void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; } <s> private void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; } <s> bugfix refresh tabelle
fix_before_refactoring: public void refresh () { data . clear () ; loadData () ; }
fix_after_refactoring: public void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; }
√ fix_prediction_before: public void refresh () { data . clear () ; loadData () ; }
× fix_prediction_after: private void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; }

line_index: 1616
bug_before_refactoring: public static void onClosingAndriodorIpaddiv () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> public static void onClosingAndriodorIpaddiv () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> Player header div placed in the middle - Issue resolved for ipad and other devices
bug_after_refactoring: public static void wvigxbcnrwdegwhrtijw () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> public static void wvigxbcnrwdegwhrtijw () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> Player header div placed in the middle - Issue resolved for ipad and other devices
fix_before_refactoring: public static void onClosingAndriodorIpaddiv () {}
fix_after_refactoring: public static void wvigxbcnrwdegwhrtijw () {}
√ fix_prediction_before: public static void onClosingAndriodorIpaddiv () {}
× fix_prediction_after: public static void wvigxbcnrwdegwhrtijw () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; }

line_index: 1621
bug_before_refactoring: private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
bug_after_refactoring: private static native long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
fix_after_refactoring: private static long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
√ fix_prediction_before: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
× fix_prediction_after: private static native long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }

line_index: 1627
bug_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
bug_after_refactoring: public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
fix_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
fix_after_refactoring: public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
√ fix_prediction_before: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
× fix_prediction_after: public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get ( pos ) ; }

line_index: 1629
bug_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
bug_after_refactoring: @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
fix_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
fix_after_refactoring: @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
√ fix_prediction_before: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
× fix_prediction_after: @ java.lang.Override public void qlsleupvsltwwgooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}

line_index: 1635
bug_before_refactoring: private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> private static native long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
fix_after_refactoring: private static long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
√ fix_prediction_before: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
× fix_prediction_after: private static native long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }

line_index: 1658
bug_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
bug_after_refactoring: @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
fix_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
fix_after_refactoring: @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
√ fix_prediction_before: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
× fix_prediction_after: @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.Throwable throwable , java.lang.Throwable throwable ) { lock . openAll () ; }

line_index: 1672
bug_before_refactoring: protected void setupSketch () { initDimensions () ; setupSketchTask . start () ; isSetup = true ; surfaceReady = true ; } <s> protected void setupSketch () { initDimensions () ; setupSketchTask . start () ; isSetup = true ; surfaceReady = true ; } <s> Restores sketch with animation. Fixes issue when resuming the activity holding the background Removes unnecessary drawing methods
bug_after_refactoring: protected void mhrxnfpjwxxhztzmcdwf () { initDimensions () ; mhrxnfpjwxxhztzmcdwfTask . start () ; isSetup = true ; surfaceReady = true ; } <s> protected void mhrxnfpjwxxhztzmcdwf () { initDimensions () ; mhrxnfpjwxxhztzmcdwfTask . start () ; isSetup = true ; surfaceReady = true ; } <s> Restores sketch with animation. Fixes issue when resuming the activity holding the background Removes unnecessary drawing methods
fix_before_refactoring: private void setupSketch () { initDimensions () ; setupSketchTask . start () ; isSetup = true ; surfaceReady = true ; }
fix_after_refactoring: private void mhrxnfpjwxxhztzmcdwf () { initDimensions () ; mhrxnfpjwxxhztzmcdwfTask . start () ; isSetup = true ; surfaceReady = true ; }
√ fix_prediction_before: private void setupSketch () { initDimensions () ; setupSketchTask . start () ; isSetup = true ; surfaceReady = true ; }
× fix_prediction_after: public void mhrxnfpjwxxhztzmcdwf () { initDimensions () ; mhrxnfpjwxxhztzmcdwfTask . start () ; isSetup = true ; surfaceReady = true ; }

line_index: 1681
bug_before_refactoring: public void skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> public void skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> Fixed state tracking issues when the queue finishes playing
bug_after_refactoring: public void ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> public void ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> Fixed state tracking issues when the queue finishes playing
fix_before_refactoring: public boolean skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
fix_after_refactoring: public boolean ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
√ fix_prediction_before: public boolean skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
× fix_prediction_after: public void ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; }

line_index: 1687
bug_before_refactoring: public Main.Ball getBall () { assert ( ball ) != null ; return ball ; } <s> public Main.Ball getBall () { assert ( ball ) != null ; return ball ; } <s> Fixed 'self-tackling' issues
bug_after_refactoring: public Main.Ball voniliqxzycfnrmiiwig () { assert ( ball ) != null ; return ball ; } <s> public Main.Ball voniliqxzycfnrmiiwig () { assert ( ball ) != null ; return ball ; } <s> Fixed 'self-tackling' issues
fix_before_refactoring: public Main.Ball getBall () { return ball ; }
fix_after_refactoring: public Main.Ball voniliqxzycfnrmiiwig () { return ball ; }
√ fix_prediction_before: public Main.Ball getBall () { return ball ; }
× fix_prediction_after: public Main.Ball voniliqxzycfnrmiiwig () { assert ( ball ) != null ; return ball ; }

line_index: 1690
bug_before_refactoring: private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
bug_after_refactoring: private void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; } <s> private void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
fix_before_refactoring: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
fix_after_refactoring: public void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; }
√ fix_prediction_before: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
× fix_prediction_after: private void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; }

line_index: 1694
bug_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> Fixed bug introduced during slight refactor
bug_after_refactoring: public void gtlshbqgkkodzsvyrqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> public void gtlshbqgkkodzsvyrqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> Fixed bug introduced during slight refactor
fix_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
fix_after_refactoring: public void gtlshbqgkkodzsvyrqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
√ fix_prediction_before: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
× fix_prediction_after: public void gtlshbqgkkodzsvqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }

line_index: 1695
bug_before_refactoring: public java.lang.String getName () { throw new java.lang.UnsupportedOperationException () ; } <s> public java.lang.String getName () { throw new java.lang.UnsupportedOperationException () ; } <s> Feat: build in class Actor released.  Fix: tests for class Actor debugged.
bug_after_refactoring: public java.lang.String rqhbcfwyblqxwigyvdgh () { throw new java.lang.UnsupportedOperationException () ; } <s> public java.lang.String rqhbcfwyblqxwigyvdgh () { throw new java.lang.UnsupportedOperationException () ; } <s> Feat: build in class Actor released.  Fix: tests for class Actor debugged.
fix_before_refactoring: public java.lang.String getName () { return name ; }
fix_after_refactoring: public java.lang.String rqhbcfwyblqxwigyvdgh () { return name ; }
√ fix_prediction_before: public java.lang.String getName () { return name ; }
× fix_prediction_after: public java.lang.String rqhbcfwyblqxwigyvdgh () { return rqhbcfwyblqxwigyvdgh () ; }

line_index: 1704
bug_before_refactoring: private void initSource ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> private void initSource ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> Fixed error with playing. I added line play(0  2000); it plays 0 Hz for 2 seconds to avoid sounds overlapping.
bug_after_refactoring: private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> Fixed error with playing. I added line play(0  2000); it plays 0 Hz for 2 seconds to avoid sounds overlapping.
fix_before_refactoring: private void initSource ( ) throws java.lang.Exception { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; }
fix_after_refactoring: private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; }
√ fix_prediction_before: private void initSource ( ) throws java.lang.Exception { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; }
× fix_prediction_after: private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } }

line_index: 1707
bug_before_refactoring: public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> Bugfix
bug_after_refactoring: public void cezwqzrzdufqctfslzgn ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> public void cezwqzrzdufqctfslzgn ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> Bugfix
fix_before_refactoring: protected void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
fix_after_refactoring: protected void cezwqzrzdufqctfslzgn ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
√ fix_prediction_before: protected void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
× fix_prediction_after: public void cezwqzrzdufqctfslzgn ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }

line_index: 1714
bug_before_refactoring: @ java.lang.Override protected void onDestroy () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . onDestroy () ; } <s> @ java.lang.Override protected void onDestroy () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . onDestroy () ; } <s> Add glide & Fix bitmap recycle issue  - Add glide library in dependencies - Fix recycled bitmap issue with glide
bug_after_refactoring: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . aocwvuczgvqgerjyonzm () ; } <s> @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . aocwvuczgvqgerjyonzm () ; } <s> Add glide & Fix bitmap recycle issue  - Add glide library in dependencies - Fix recycled bitmap issue with glide
fix_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { super . aocwvuczgvqgerjyonzm () ; }
√ fix_prediction_before: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
× fix_prediction_after: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . aocwvuczgvqgerjyonzm () ; }

line_index: 1716
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return name ; } <s> @ java.lang.Override public java.lang.String toString () { return name ; } <s> Fix a few first-time-rub bugs
bug_after_refactoring: @ java.lang.Override public java.lang.String zlakzlsptswjsjulcamh () { return name ; } <s> @ java.lang.Override public java.lang.String zlakzlsptswjsjulcamh () { return name ; } <s> Fix a few first-time-rub bugs
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return getName () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String zlakzlsptswjsjulcamh () { return getName () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return getName () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String zlakzlsptswjsjulcamh () { return super . zlakzlsptswjsjulcamh () ; }

line_index: 1726
bug_before_refactoring: public int size () {} <s> public int size () {} <s> Errors with double linked list on adding to head and removing from tail. TODO fix later.
bug_after_refactoring: public int trngejmswunfrcifykei () {} <s> public int trngejmswunfrcifykei () {} <s> Errors with double linked list on adding to head and removing from tail. TODO fix later.
fix_before_refactoring: public int size () { return size ; }
fix_after_refactoring: public int trngejmswunfrcifykei () { return trngejmswunfrcifykei ; }
√ fix_prediction_before: public int size () { return size ; }
× fix_prediction_after: public int trngejmswunfrcifykei () { return 0 ; }

line_index: 1727
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> Fix bugs for old android devices  bug on the position of the edition of a contributor and resize the copyright icon - Begin adding a left menu and a toolbar
bug_after_refactoring: @ java.lang.Override public void iahifktsxovcblkillbw ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> @ java.lang.Override public void iahifktsxovcblkillbw ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> Fix bugs for old android devices  bug on the position of the edition of a contributor and resize the copyright icon - Begin adding a left menu and a toolbar
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } }
fix_after_refactoring: @ java.lang.Override public void iahifktsxovcblkillbw ( android.view.View v ) { switch ( v . getId () ) { } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } }
× fix_prediction_after: @ java.lang.Override public void iahifktsxovcblkillbw ( android.view.View v ) {}

line_index: 1736
bug_before_refactoring: protected void gotoPage () { browser . gotoPage ( location ) ; } <s> protected void gotoPage () { browser . gotoPage ( location ) ; } <s> Bugfix
bug_after_refactoring: protected void vbenqanxzzlrpwmvsycw () { browser . vbenqanxzzlrpwmvsycw ( location ) ; } <s> protected void vbenqanxzzlrpwmvsycw () { browser . vbenqanxzzlrpwmvsycw ( location ) ; } <s> Bugfix
fix_before_refactoring: public void gotoPage () { browser . gotoPage ( location ) ; }
fix_after_refactoring: public void vbenqanxzzlrpwmvsycw () { browser . vbenqanxzzlrpwmvsycw ( location ) ; }
√ fix_prediction_before: public void gotoPage () { browser . gotoPage ( location ) ; }
× fix_prediction_after: public void vbenqanxzzlrpwmvsycw () {}

line_index: 1738
bug_before_refactoring: public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; } <s> public void sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
fix_after_refactoring: public boolean sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { return this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; }
√ fix_prediction_before: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
× fix_prediction_after: public void sbnrijwvfcubgsnrwbpv ( K oldKey , K newKey ) { this . subMap . sbnrijwvfcubgsnrwbpvKey ( oldKey , newKey ) ; }

line_index: 1750
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ java.lang.Override public G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
√ fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ java.lang.Override public G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( jp , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }

line_index: 1755
bug_before_refactoring: @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> fix merge problems  adapt to new api
bug_after_refactoring: @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> fix merge problems  adapt to new api
fix_before_refactoring: @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { return fullDataset ; }
fix_after_refactoring: @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { return fullDataset ; }
√ fix_prediction_before: @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { return fullDataset ; }
× fix_prediction_after: @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { return ( this . alwaysIncremental ) || ( ! ( this . fullDataset ) ) ; }

line_index: 1765
bug_before_refactoring: public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> public void gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
fix_after_refactoring: public boolean gyvivbnwaydxiotqbskp ( java.lang.String s , java.lang.Object . . . objects ) { return this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
√ fix_prediction_before: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
× fix_prediction_after: public boolean gyvivbnwaydxiotqbskp ( java.lang.String s ) { return this . gyvivbnwaydxiotqbskp ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }

line_index: 1773
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
bug_after_refactoring: @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
fix_after_refactoring: @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
× fix_prediction_after: @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { if ( ( adapter ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }

line_index: 1780
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> 【+】fix bug
bug_after_refactoring: @ java.lang.Override public void gbcavamjawqkrqbzfako ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> @ java.lang.Override public void gbcavamjawqkrqbzfako ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> 【+】fix bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
fix_after_refactoring: @ java.lang.Override public void gbcavamjawqkrqbzfako ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
× fix_prediction_after: @ java.lang.Override public void gbcavamjawqkrqbzfako ( android.view.View v ) {}

line_index: 1784
bug_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
bug_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
fix_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
fix_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
√ fix_prediction_before: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
× fix_prediction_after: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return this ; }

line_index: 1806
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
× fix_prediction_after: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; }

line_index: 1840
bug_before_refactoring: public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> handful of bug fixes
bug_after_refactoring: public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> handful of bug fixes
fix_before_refactoring: public void setText ( java.lang.String text ) { this . text = text ; }
fix_after_refactoring: public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { this . text = text ; }
√ fix_prediction_before: public void setText ( java.lang.String text ) { this . text = text ; }
× fix_prediction_after: public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { this . text = ( org.bukkit.ChatColor.BLACK ) + text ; }

line_index: 1867
bug_before_refactoring: private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
bug_after_refactoring: private static native void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
fix_after_refactoring: private static void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
√ fix_prediction_before: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
× fix_prediction_after: private static native void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ;

line_index: 1886
bug_before_refactoring: @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> 1、fix bug <br /> 2、新增自动刷新(autoRefresh) 禁止刷新(canRefresh)
bug_after_refactoring: @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> 1、fix bug <br /> 2、新增自动刷新(autoRefresh) 禁止刷新(canRefresh)
fix_before_refactoring: @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; }
fix_after_refactoring: @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; }
√ fix_prediction_before: @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; }
× fix_prediction_after: @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; }

line_index: 1938
bug_before_refactoring: @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> Move model registry to the appropriate event  - Fixes various issues and conflicts caused with others mods
bug_after_refactoring: @ java.lang.Override public void mluddbjbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> @ java.lang.Override public void mluddbjbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> Move model registry to the appropriate event  - Fixes various issues and conflicts caused with others mods
fix_before_refactoring: @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; }
fix_after_refactoring: @ java.lang.Override public void mluddbjbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; }
√ fix_prediction_before: @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; }
× fix_prediction_after: @ java.lang.Override public void mluddbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; }

line_index: 1949
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
bug_after_refactoring: @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) { if ( ( chosenManufacturer ) == 0 ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; } } <s> Fixed Spinner auto setting issue. Fixed Reset problem. FIxed CropFactor not being chosen right.
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
× fix_prediction_after: @ java.lang.Override public void mnoltmccjslfromqcbel ( android.widget.AdapterView < ? > parent ) { android.support.design.widget.Snackbar . make ( spinnerManufacturer . getRootView () , "Please choose your camera Manufacturer" , Snackbar.LENGTH_LONG ) . show () ; }

line_index: 1956
bug_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
bug_after_refactoring: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
fix_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
fix_after_refactoring: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
√ fix_prediction_before: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
× fix_prediction_after: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) + pts ) ) ; }

line_index: 1971
bug_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
fix_after_refactoring: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
√ fix_prediction_before: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
× fix_prediction_after: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int id ) { viewHolder.textView . setText ( textModel . getText () ) ; }

line_index: 1982
bug_before_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
bug_after_refactoring: public boolean akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
fix_before_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
fix_after_refactoring: public void akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
√ fix_prediction_before: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
× fix_prediction_after: public boolean akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; }

line_index: 1984
bug_before_refactoring: public solitaire.Card putCard () { if ( ! ( stack . isEmpty () ) ) { frameOff () ; } return stack . pop () ; } <s> public solitaire.Card putCard () { if ( ! ( stack . isEmpty () ) ) { frameOff () ; } return stack . pop () ; } <s> frame problem was fixed (putCard())
bug_after_refactoring: public solitaire.Card tghlkbdrjhftogbsrsfd () { if ( ! ( stack . isEmpty () ) ) { frameOff () ; } return stack . pop () ; } <s> public solitaire.Card tghlkbdrjhftogbsrsfd () { if ( ! ( stack . isEmpty () ) ) { frameOff () ; } return stack . pop () ; } <s> frame problem was fixed (putCard())
fix_before_refactoring: public solitaire.Card putCard () { return stack . pop () ; }
fix_after_refactoring: public solitaire.Card tghlkbdrjhftogbsrsfd () { return stack . pop () ; }
√ fix_prediction_before: public solitaire.Card putCard () { return stack . pop () ; }
× fix_prediction_after: public solitaire.Card tghlkbdrjhftogbsrsfd () { if ( ! ( stack . isEmpty () ) ) { frameOff () ; } return stack . pop () ; }

line_index: 1991
bug_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
bug_after_refactoring: private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
fix_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_before: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
× fix_prediction_after: private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; }

line_index: 2000
bug_before_refactoring: public static void updatePilot ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } <s> public static void updatePilot ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } <s> bugfix: null checks in sdk methods
bug_after_refactoring: public static void ysqrbhfbvmhsjpgtezww ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } <s> public static void ysqrbhfbvmhsjpgtezww ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } <s> bugfix: null checks in sdk methods
fix_before_refactoring: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } }
fix_after_refactoring: public static void ysqrbhfbvmhsjpgtezww ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmhsjpgtezww ( pilot , callback ) ; } }
√ fix_prediction_before: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } }
× fix_prediction_after: public static void ysqrbhfbvmhsjpgtezww ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . ysqrbhfbvmvmhsjpgtezww ( pilot , callback ) ; } }

line_index: 2011
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> @ java.lang.Override protected void onPause () { super . onPause () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> fix disconnect delay bug
bug_after_refactoring: @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> fix disconnect delay bug
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override protected void fqqgoenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; }

line_index: 2015
bug_before_refactoring: private void replaceSmileySelector () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; } <s> private void replaceSmileySelector () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; } <s> Fixed issue #61 : smileys can now be added on post edition  This was caused with the fact that Otto @Subscribe annotations don't play well with inheritance (it is by design). The SmileySelectedEvent was never received by the EditPostActivity
bug_after_refactoring: private void dcmmwyirwohdqrgsqknw () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; } <s> private void dcmmwyirwohdqrgsqknw () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; } <s> Fixed issue #61 : smileys can now be added on post edition  This was caused with the fact that Otto @Subscribe annotations don't play well with inheritance (it is by design). The SmileySelectedEvent was never received by the EditPostActivity
fix_before_refactoring: public void replaceSmileySelector () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; }
fix_after_refactoring: public void dcmmwyirwohdqrgsqknw () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; }
√ fix_prediction_before: public void replaceSmileySelector () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; }
× fix_prediction_after: private void dcmmwyirwohdqrgsqknw () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; }

line_index: 2018
bug_before_refactoring: private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> Fixing bugs
bug_after_refactoring: private static native void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> private static native void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
fix_after_refactoring: private static void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) {}
√ fix_prediction_before: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
× fix_prediction_after: private static native void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) ;

line_index: 2027
bug_before_refactoring: public static void log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> public static void log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> Bug #5764 - Fix log level management (in MegaApplication)
bug_after_refactoring: public static void shnsvzusnfzgeqvpsyil ( java.lang.String origin , java.lang.String message ) { java.io.File shnsvzusnfzgeqvpsyilFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . shnsvzusnfzgeqvpsyil ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> public static void shnsvzusnfzgeqvpsyil ( java.lang.String origin , java.lang.String message ) { java.io.File shnsvzusnfzgeqvpsyilFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . shnsvzusnfzgeqvpsyil ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> Bug #5764 - Fix log level management (in MegaApplication)
fix_before_refactoring: public static void log ( java.lang.String origin , java.lang.String message ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; }
fix_after_refactoring: public static void shnsvzusnfzgeqvpsyil ( java.lang.String origin , java.lang.String message ) { nz.mega.sdk.MegaApiAndroid . shnsvzusnfzgeqvpsyil ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; }
√ fix_prediction_before: public static void log ( java.lang.String origin , java.lang.String message ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; }
× fix_prediction_after: public static void shnsvzusnfzgeqvpsyil ( java.lang.String origin , java.lang.String message ) { java.io.File shnsvzusnfzgeqvpsyilFile = null ; nz.mega.sdk.MegaApiAndroid . shnsvzusnfzgeqvpsyil ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; }

line_index: 2037
bug_before_refactoring: public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
bug_after_refactoring: public static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
fix_before_refactoring: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
fix_after_refactoring: private static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
√ fix_prediction_before: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
× fix_prediction_after: public static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }

line_index: 2038
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> @ java.lang.Override public java.lang.String toString () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> routes search bugfix
bug_after_refactoring: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> routes search bugfix
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return name ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return name ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return name ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; }

line_index: 2042
bug_before_refactoring: protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
fix_after_refactoring: private native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
√ fix_prediction_before: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
× fix_prediction_after: private native voidphpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;

line_index: 2077
bug_before_refactoring: protected static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> protected static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> v1.2.0 : Fixed issue #12
bug_after_refactoring: protected static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> protected static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> v1.2.0 : Fixed issue #12
fix_before_refactoring: public static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
fix_after_refactoring: public static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
√ fix_prediction_before: public static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
× fix_prediction_after: private static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }

