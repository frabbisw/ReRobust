line_index: 13
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendStickyOrderedBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void mnkrwcderwvjvfjkmseu ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendStickyOrderedBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void mnkrwcderwvjvfjkmseu ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
fix_after_refactoring: @ java.lang.Override public void mnkrwcderwvjvfjkmseu () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
× fix_prediction_after: @ java.lang.Override public void mnkrwcderwvjvfjkmseu ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }

line_index: 15
bug_before_refactoring: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> fix bugy: FileID will not set if file is empty
bug_after_refactoring: private void bkummtaymanbiwmllpgt ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; bkummtaymanbiwmllpgtrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> private void bkummtaymanbiwmllpgt ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; bkummtaymanbiwmllpgtrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> fix bugy: FileID will not set if file is empty
fix_before_refactoring: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } }
fix_after_refactoring: private void bkummtaymanbiwmllpgt ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; bkummtaymanbiwmllpgtrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } }
√ fix_prediction_before: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } }
× fix_prediction_after: private com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; bkummtaymanbiwmllpgtrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; return bkummtaymanbiwmllpgtrepo ; }

line_index: 41
bug_before_refactoring: public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> bug fix
bug_after_refactoring: public void qyulaswaljguqknpaoch ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> public void qyulaswaljguqknpaoch ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> bug fix
fix_before_refactoring: public void setFilename ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } }
fix_after_refactoring: public void qyulaswaljguqknpaoch ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } }
√ fix_prediction_before: public void setFilename ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } }
× fix_prediction_after: public void qyulaswaljguqknpaoch ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; }

line_index: 70
bug_before_refactoring: private void close () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . close () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> private void close () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . close () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fixed issue # update function close
bug_after_refactoring: private void wobifjogimcsfgpfgoid () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . wobifjogimcsfgpfgoid () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> private void wobifjogimcsfgpfgoid () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . wobifjogimcsfgpfgoid () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fixed issue # update function close
fix_before_refactoring: public void close () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . close () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
fix_after_refactoring: public void wobifjogimcsfgpfgoid () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . wobifjogimcsfgpfgoid () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
√ fix_prediction_before: public void close () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . close () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
× fix_prediction_after: private void wobifjogimcsfgpfgoid () { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . wobifjogimcsfgpfgoid () ; } }

line_index: 75
bug_before_refactoring: public int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> public int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> fixbug
bug_after_refactoring: public int odhadquxjrjdunyrfiwa ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> public int odhadquxjrjdunyrfiwa ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> fixbug
fix_before_refactoring: private int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }
fix_after_refactoring: private int odhadquxjrjdunyrfiwa ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }
√ fix_prediction_before: private int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }
× fix_prediction_after: public int odhadquxjrjdunyrfiwa ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }

line_index: 99
bug_before_refactoring: public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> fixed other bugs
bug_after_refactoring: public void egprqphrwpglsfueqmmh ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void ccrpfdprywsibufjzotw () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> public void egprqphrwpglsfueqmmh ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void ccrpfdprywsibufjzotw () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> fixed other bugs
fix_before_refactoring: private void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
fix_after_refactoring: private void egprqphrwpglsfueqmmh ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void ccrpfdprywsibufjzotw () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
√ fix_prediction_before: private void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
× fix_prediction_after: public void egprqphrwpglsfueqmmh ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void ccrpfdprywsibufjzotw () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }

line_index: 103
bug_before_refactoring: public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } <s> public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } <s> add file creating and fix refreshList() invalid bug
bug_after_refactoring: public java.util.List < java.io.File > ewhqugnodduumanmfjav ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } <s> public java.util.List < java.io.File > ewhqugnodduumanmfjav ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } <s> add file creating and fix refreshList() invalid bug
fix_before_refactoring: private java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
fix_after_refactoring: private java.util.List < java.io.File > ewhqugnodduumanmfjav ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
√ fix_prediction_before: private java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
× fix_prediction_after: public java.util.List < java.io.File > ewhqugnodduumanmfjav ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }

line_index: 111
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> @ java.lang.Override public void onClick ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void mitbvccqifaxtakeddoh ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> @ java.lang.Override public void mitbvccqifaxtakeddoh ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } }
fix_after_refactoring: @ java.lang.Override public void mitbvccqifaxtakeddoh ( android.view.View view ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } }
× fix_prediction_after: @ java.lang.Override public void mitbvccqifaxtakeddoh () { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; }

line_index: 128
bug_before_refactoring: public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> Fix a bug that was preventing the puzzle to be solved correctly; add comments
bug_after_refactoring: public int hhqdjdkfjusypkpdmkir ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> public int hhqdjdkfjusypkpdmkir ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> Fix a bug that was preventing the puzzle to be solved correctly; add comments
fix_before_refactoring: public int colContains ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; }
fix_after_refactoring: public int hhqdjdkfjusypkpdmkir ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; }
√ fix_prediction_before: public int colContains ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; }
× fix_prediction_after: private int hhqdjdkfjusypkpdmkir ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; }

line_index: 130
bug_before_refactoring: private static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; } <s> private static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; } <s> see #6974 - fix problem caused by preference rework   git-svn-id: https://josm.openstreetmap.de/svn/trunk@4613 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: private static java.util.Collection < java.lang.String > qlagwzyigbwyohclxwdl () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; } <s> private static java.util.Collection < java.lang.String > qlagwzyigbwyohclxwdl () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; } <s> see #6974 - fix problem caused by preference rework   git-svn-id: https://josm.openstreetmap.de/svn/trunk@4613 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: public static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; }
fix_after_refactoring: public static java.util.Collection < java.lang.String > qlagwzyigbwyohclxwdl () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; }
√ fix_prediction_before: public static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; }
× fix_prediction_after: private static java.util.Collection < java.lang.String > qlagwzyigbwyohclxwdl () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; }

line_index: 146
bug_before_refactoring: public void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } <s> public void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } <s> Update AntMapGenerator.java  Fixed a bug with the anthills not being placed correctly
bug_after_refactoring: public void nnxtsxgcdoebhwvqzpiv () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } <s> public void nnxtsxgcdoebhwvqzpiv () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } <s> Update AntMapGenerator.java  Fixed a bug with the anthills not being placed correctly
fix_before_refactoring: private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } }
fix_after_refactoring: private void nnxtsxgcdoebhwvqzpiv () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } }
√ fix_prediction_before: private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } }
× fix_prediction_after: public void nnxtsxgcdoebhwvqzpiv () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } }

line_index: 170
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> Addictions and everything is being retrieved now upon Login Calendar Activity fixeddashboad button problem Renamed Views Addictions Deletion is Dynamic now but ONLY inside the ListViewAdapters  Map Adapters bulbs are working also Addictions are being added dynamically too now Deleting user event/ven/org/artist needs fixing?
bug_after_refactoring: @ java.lang.Override public void dsxtckdsnhxwlxrkgrqc ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> @ java.lang.Override public void dsxtckdsnhxwlxrkgrqc ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> Addictions and everything is being retrieved now upon Login Calendar Activity fixeddashboad button problem Renamed Views Addictions Deletion is Dynamic now but ONLY inside the ListViewAdapters  Map Adapters bulbs are working also Addictions are being added dynamically too now Deleting user event/ven/org/artist needs fixing?
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
fix_after_refactoring: @ java.lang.Override public void dsxtckdsnhxwlxrkgrqc ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
× fix_prediction_after: @ java.lang.Override public void dsxtckdsnhxwlxrkgrqc ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }

line_index: 186
bug_before_refactoring: public final void testPreLoadClasses_classNotFound ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; } <s> public final void testPreLoadClasses_classNotFound ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; } <s> [459363] Fix unit tests that are failing  Works on fixing the unit tests. Adds a git template for contributors to use when submitting items. Updated the README with latest items on contributing and working with the project source code.  Bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=459363 Signed-off-by: David Carver <d_a_carver@yahoo.com>
bug_after_refactoring: public final void gkulwvqczeozuduuxbyg ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; } <s> public final void gkulwvqczeozuduuxbyg ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; } <s> [459363] Fix unit tests that are failing  Works on fixing the unit tests. Adds a git template for contributors to use when submitting items. Updated the README with latest items on contributing and working with the project source code.  Bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=459363 Signed-off-by: David Carver <d_a_carver@yahoo.com>
fix_before_refactoring: @ org.junit.Test public void testPreLoadClasses_classNotFound ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; }
fix_after_refactoring: @ org.junit.Test public void gkulwvqczeozuduuxbyg ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; }
√ fix_prediction_before: @ org.junit.Test public void testPreLoadClasses_classNotFound ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; }
× fix_prediction_after: private final void gkulwvqczeozuduuxbyg ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; }

line_index: 187
bug_before_refactoring: private static boolean waitNotification () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; } <s> private static boolean waitNotification () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; } <s> Fixed a bug in CORS (allowed headers)
bug_after_refactoring: private static boolean omtllimgsoehumjbogyd () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; } <s> private static boolean omtllimgsoehumjbogyd () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; } <s> Fixed a bug in CORS (allowed headers)
fix_before_refactoring: protected static boolean waitNotification () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; }
fix_after_refactoring: protected static boolean omtllimgsoehumjbogyd () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; }
√ fix_prediction_before: protected static boolean waitNotification () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; }
× fix_prediction_after: protected static boolean omtllimgsoehumjbogyd () { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; }

line_index: 208
bug_before_refactoring: public void onSwipeBottom () { if ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) { if ( ( allowInput ) == true ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } } <s> public void onSwipeBottom () { if ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) { if ( ( allowInput ) == true ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } } <s> Added features: Heartbeat Sound Fixed Bugs: optimization
bug_after_refactoring: public void hifarxeavrznxioppstt () { if ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) { if ( ( allowInput ) == true ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } } <s> public void hifarxeavrznxioppstt () { if ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) { if ( ( allowInput ) == true ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } } <s> Added features: Heartbeat Sound Fixed Bugs: optimization
fix_before_refactoring: public void onSwipeBottom () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } }
fix_after_refactoring: public void hifarxeavrznxioppstt () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } }
√ fix_prediction_before: public void onSwipeBottom () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } }
× fix_prediction_after: public void hifarxeavrznxioppstt () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } }

line_index: 212
bug_before_refactoring: @ org.junit.Test public void testShowList () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert . fail ( "testShowList faild." ) ; ex . printStackTrace () ; } org.junit.Assert . assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; org.junit.Assert . assertTrue ( ( ( result . size () ) == 5 ) ) ; } <s> @ org.junit.Test public void testShowList () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert . fail ( "testShowList faild." ) ; ex . printStackTrace () ; } org.junit.Assert . assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; org.junit.Assert . assertTrue ( ( ( result . size () ) == 5 ) ) ; } <s> fix bug  fix bug
bug_after_refactoring: @ org.junit.Test public void nafhoroxgrpqwdcoyyki () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert . fail ( "nafhoroxgrpqwdcoyyki faild." ) ; ex . printStackTrace () ; } org.junit.Assert . assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; org.junit.Assert . assertTrue ( ( ( result . size () ) == 5 ) ) ; } <s> @ org.junit.Test public void nafhoroxgrpqwdcoyyki () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert . fail ( "nafhoroxgrpqwdcoyyki faild." ) ; ex . printStackTrace () ; } org.junit.Assert . assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; org.junit.Assert . assertTrue ( ( ( result . size () ) == 5 ) ) ; } <s> fix bug  fix bug
fix_before_refactoring: @ org.jplus.hyb.database.crud.Test public void testShowList () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "testShowList faild." ) ; ex . printStackTrace () ; } assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; assertTrue ( ( ( result . size () ) == 5 ) ) ; }
fix_after_refactoring: @ org.jplus.hyb.database.crud.Test public void nafhoroxgrpqwdcoyyki () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "nafhoroxgrpqwdcoyyki faild." ) ; ex . printStackTrace () ; } assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; assertTrue ( ( ( result . size () ) == 5 ) ) ; }
√ fix_prediction_before: @ org.jplus.hyb.database.crud.Test public void testShowList () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "testShowList faild." ) ; ex . printStackTrace () ; } assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; assertTrue ( ( ( result . size () ) == 5 ) ) ; }
× fix_prediction_after: @ org.jplus.hybqwdcoyyki () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "nafhoroxgrpqwdcoyyki faild." ) ; ex . printStackTrace () ; } assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; assertTrue ( ( ( result . size () ) == 5 ) ) ; }

line_index: 226
bug_before_refactoring: protected void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> protected void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> fixed final bug before first run
bug_after_refactoring: protected void zieiknseftshwojqxesr ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> protected void zieiknseftshwojqxesr ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> fixed final bug before first run
fix_before_refactoring: public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; }
fix_after_refactoring: public void zieiknseftshwojqxesr ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; }
√ fix_prediction_before: public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; }
× fix_prediction_after: protected void zieiknseftshwojqxesr ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; }

line_index: 233
bug_before_refactoring: public void spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> public void spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> Wayfinder img cache issue test fix 001
bug_after_refactoring: public void krhdbvlorzzaegfywsnd ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> public void krhdbvlorzzaegfywsnd ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> Wayfinder img cache issue test fix 001
fix_before_refactoring: public java.lang.String spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
fix_after_refactoring: public java.lang.String krhdbvlorzzaegfywsnd ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
√ fix_prediction_before: public java.lang.String spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
× fix_prediction_after: public void krhdbvlorzzaegfywsnd ( , int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; }

line_index: 243
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final java.lang.String receiverPermission ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void zueebuzndubsgtfextfr ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final java.lang.String receiverPermission ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void zueebuzndubsgtfextfr ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
fix_after_refactoring: @ java.lang.Override public void zueebuzndubsgtfextfr () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
× fix_prediction_after: @ java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent , final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }

line_index: 277
bug_before_refactoring: public void initialize () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "initialize() ---> Bluetooth adapter is already initialized" ) ; } } <s> public void initialize () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "initialize() ---> Bluetooth adapter is already initialized" ) ; } } <s> Refactoring and bugs fix.
bug_after_refactoring: public void qqsexbpawstfgvaactqt () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "qqsexbpawstfgvaactqt() ---> Bluetooth adapter is already qqsexbpawstfgvaactqtd" ) ; } } <s> public void qqsexbpawstfgvaactqt () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "qqsexbpawstfgvaactqt() ---> Bluetooth adapter is already qqsexbpawstfgvaactqtd" ) ; } } <s> Refactoring and bugs fix.
fix_before_refactoring: private void initialize () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "initialize() ---> Bluetooth adapter is already initialized" ) ; } }
fix_after_refactoring: private void qqsexbpawstfgvaactqt () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "qqsexbpawstfgvaactqt() ---> Bluetooth adapter is already qqsexbpawstfgvaactqtd" ) ; } }
√ fix_prediction_before: private void initialize () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "initialize() ---> Bluetooth adapter is already initialized" ) ; } }
× fix_prediction_after: public void qqsexbpawstfgvaactqt () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "qqsexbpawstfgvaactqt() ---> Bluetooth adapter is already qqsexbpawstfgvaactqtd" ) ; } }

line_index: 279
bug_before_refactoring: @ java.lang.Override public void run () { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> @ java.lang.Override public void run () { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> Replication Process Problem solved
bug_after_refactoring: @ java.lang.Override public void pohhbfjvhuwlodhzuhch () { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> @ java.lang.Override public void pohhbfjvhuwlodhzuhch () { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> Replication Process Problem solved
fix_before_refactoring: @ java.lang.Override public void run () { while ( true ) { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } }
fix_after_refactoring: @ java.lang.Override public void pohhbfjvhuwlodhzuhch () { while ( true ) { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } }
√ fix_prediction_before: @ java.lang.Override public void run () { while ( true ) { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } }
× fix_prediction_after: @ java.lang.Override public void pohhbfjvhuwlodhzuhch () { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; }

line_index: 300
bug_before_refactoring: public static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> public static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> #330 Removed unused code/added comments  Because the MIDI issue is solved  I removed all code not being used (except for MIDIData() method which I moved over to SoundUtilExamples). Also added some clarifying comments and cleaned everything up. close #330
bug_after_refactoring: public static double sjwfzfnfssscaeofttlp ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> public static double sjwfzfnfssscaeofttlp ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> #330 Removed unused code/added comments  Because the MIDI issue is solved  I removed all code not being used (except for MIDIData() method which I moved over to SoundUtilExamples). Also added some clarifying comments and cleaned everything up. close #330
fix_before_refactoring: private static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
fix_after_refactoring: private static double sjwfzfnfssscaeofttlp ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
√ fix_prediction_before: private static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
× fix_prediction_after: public static double sjwfzfnfssscaeofttlp ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }

line_index: 302
bug_before_refactoring: private static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> private static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> - adding a commands to help test traits (create_test  spawn_test) - fixed some bugs in allergy  and added level support
bug_after_refactoring: private static java.lang.String evunqyawtrielvutkdcs ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> private static java.lang.String evunqyawtrielvutkdcs ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> - adding a commands to help test traits (create_test  spawn_test) - fixed some bugs in allergy  and added level support
fix_before_refactoring: public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }
fix_after_refactoring: public static java.lang.String evunqyawtrielvutkdcs ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }
√ fix_prediction_before: public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }
× fix_prediction_after: private static java.lang.String evunqyawtrielvutkdcs () { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }

line_index: 315
bug_before_refactoring: public void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> public void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> sonar issue fixed
bug_after_refactoring: public void zuviivnsolzrjgpsqskb ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> public void zuviivnsolzrjgpsqskb ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> sonar issue fixed
fix_before_refactoring: protected void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
fix_after_refactoring: protected void zuviivnsolzrjgpsqskb ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
√ fix_prediction_before: protected void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
× fix_prediction_after: public void zuviivnsolzrjgpsqskb ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }

line_index: 347
bug_before_refactoring: private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> resolved Issue  #11 refactor TDDTCompiler adjust TDDTCompiler tests fixed GUI-flow on change of RED to GREEN (check test) probably needs some refactoring in TDDTCompiler itself for fixing double compile
bug_after_refactoring: private boolean xjmtwgixohayrzjkpwub ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> private boolean xjmtwgixohayrzjkpwub ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> resolved Issue  #11 refactor TDDTCompiler adjust TDDTCompiler tests fixed GUI-flow on change of RED to GREEN (check test) probably needs some refactoring in TDDTCompiler itself for fixing double compile
fix_before_refactoring: public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
fix_after_refactoring: public boolean xjmtwgixohayrzjkpwub ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
√ fix_prediction_before: public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
× fix_prediction_after: private boolean xjmtwgixohayrzjkpwub ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }

line_index: 373
bug_before_refactoring: private static java.io.File getCurrentDir () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; } <s> private static java.io.File getCurrentDir () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; } <s> Minor bug fix  The group list GUI would display all folders in your home directory instead of the directory of InputScripter
bug_after_refactoring: private static java.io.File ttcvlpwcrzqxwiiluhan () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; } <s> private static java.io.File ttcvlpwcrzqxwiiluhan () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; } <s> Minor bug fix  The group list GUI would display all folders in your home directory instead of the directory of InputScripter
fix_before_refactoring: public static java.io.File getCurrentDir () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; }
fix_after_refactoring: public static java.io.File ttcvlpwcrzqxwiiluhan () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; }
√ fix_prediction_before: public static java.io.File getCurrentDir () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; }
× fix_prediction_after: public static java.io.File ttcvlpwzqxwiiluhan () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; }

line_index: 436
bug_before_refactoring: public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } } <s> public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } } <s> bigbluebutton-web: Fixed issue with recordings not publishing/unpublishing
bug_after_refactoring: public void hyyatsmuwlwceivotvtc ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( deletedDir , recordingId , state ) ; } } <s> public void hyyatsmuwlwceivotvtc ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( deletedDir , recordingId , state ) ; } } <s> bigbluebutton-web: Fixed issue with recordings not publishing/unpublishing
fix_before_refactoring: public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } }
fix_after_refactoring: public void hyyatsmuwlwceivotvtc ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_DELETED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( deletedDir , recordingId , state ) ; } }
√ fix_prediction_before: public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } }
× fix_prediction_after: public void hyyatsmuwlwceivotvtc ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; } }

line_index: 466
bug_before_refactoring: private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> Bugfixes und experimentelles starten des Servers mit Jsch entfernt
bug_after_refactoring: private void ohetobsdmachfxgsjorv ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void gbnudbniqlqnhblvczbz ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> private void ohetobsdmachfxgsjorv ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void gbnudbniqlqnhblvczbz ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> Bugfixes und experimentelles starten des Servers mit Jsch entfernt
fix_before_refactoring: private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
fix_after_refactoring: private void ohetobsdmachfxgsjorv () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void gbnudbniqlqnhblvczbz ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
√ fix_prediction_before: private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
× fix_prediction_after: private void ohetobsdmachfxgsjorv ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void gbnudbniqlqnhblvczbz ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }

line_index: 486
bug_before_refactoring: private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> fixed bugs  added more tests
bug_after_refactoring: private int zgjtryjylczexzvpltys ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = zgjtryjylczexzvpltys ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = zgjtryjylczexzvpltys ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> private int zgjtryjylczexzvpltys ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = zgjtryjylczexzvpltys ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = zgjtryjylczexzvpltys ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> fixed bugs  added more tests
fix_before_refactoring: protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
fix_after_refactoring: protected int zgjtryjylczexzvpltys ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = zgjtryjylczexzvpltys ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = zgjtryjylczexzvpltys ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
√ fix_prediction_before: protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
× fix_prediction_after: private int zgjtryjylczexzvpltys ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = zgjtryjylczexzvpltys ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = zgjtryjylczexzvpltys ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }

line_index: 490
bug_before_refactoring: @ org.junit.Test public void test12_getRows () { try { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void test12_getRows () { try { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> fix: revert failing test due to google service error 502  This reverts commit 6f7723f7bdca44d2b7f4bcdec4004f6646185d70.
bug_after_refactoring: @ org.junit.Test public void crkbwyvxamyxxvigjdtt () { try { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void crkbwyvxamyxxvigjdtt () { try { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> fix: revert failing test due to google service error 502  This reverts commit 6f7723f7bdca44d2b7f4bcdec4004f6646185d70.
fix_before_refactoring: @ org.junit.Test public void test12_getRows () { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void crkbwyvxamyxxvigjdtt () { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
√ fix_prediction_before: @ org.junit.Test public void test12_getRows () { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
× fix_prediction_after: @ org.junit.Test public void crkbwyvxamyxxvigjdtt () { try { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } }

line_index: 498
bug_before_refactoring: private boolean mouseOnMaximize () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; } <s> private boolean mouseOnMaximize () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; } <s> #14 TDesktop bug fixes  more TWindow API
bug_after_refactoring: private boolean xdwnyowkvxcolmlajkia () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; } <s> private boolean xdwnyowkvxcolmlajkia () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; } <s> #14 TDesktop bug fixes  more TWindow API
fix_before_refactoring: protected boolean mouseOnMaximize () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; }
fix_after_refactoring: protected boolean xdwnyowkvxcolmlajkia () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; }
√ fix_prediction_before: protected boolean mouseOnMaximize () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; }
× fix_prediction_after: public boolean xdwnyowkvxcolmlajkia () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; }

line_index: 508
bug_before_refactoring: @ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> @ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> [MB-1436] Fix lint issues
bug_after_refactoring: @ java.lang.Override public void kaaxskxmlynmtggamonv ( android.app.Activity activity ) { super . kaaxskxmlynmtggamonv ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> @ java.lang.Override public void kaaxskxmlynmtggamonv ( android.app.Activity activity ) { super . kaaxskxmlynmtggamonv ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> [MB-1436] Fix lint issues
fix_before_refactoring: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void kaaxskxmlynmtggamonv ( android.content.Context context ) { super . kaaxskxmlynmtggamonv ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void kaaxskxmlynmtggamonv ( android.app.Activity activity ) { super . kaaxskxmlynmtggamonv ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }

line_index: 547
bug_before_refactoring: private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> bug gefixt met betalen en shoppingcart
bug_after_refactoring: private void nrxvondjargmizmfemqq ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> private void nrxvondjargmizmfemqq ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> bug gefixt met betalen en shoppingcart
fix_before_refactoring: public void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
fix_after_refactoring: public void nrxvondjargmizmfemqq ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
√ fix_prediction_before: public void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
× fix_prediction_after: private void nrxvondjargmizmfemqq ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }

line_index: 586
bug_before_refactoring: public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> Handle Permission request and Fixed bug
bug_after_refactoring: public jxl.Sheet nydujoxplrpdsmhbmepu ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> public jxl.Sheet nydujoxplrpdsmhbmepu ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> Handle Permission request and Fixed bug
fix_before_refactoring: private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
fix_after_refactoring: private jxl.Sheet nydujoxplrpdsmhbmepu ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
√ fix_prediction_before: private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
× fix_prediction_after: public jxl.Sheet nydujoxplrpdsmhbmepu ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }

line_index: 611
bug_before_refactoring: private static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> private static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> fix a bug
bug_after_refactoring: private static void xcisyqqubrouxhgthhmw ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . xcisyqqubrouxhgthhmw ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> private static void xcisyqqubrouxhgthhmw ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . xcisyqqubrouxhgthhmw ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> fix a bug
fix_before_refactoring: public static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
fix_after_refactoring: public static void xcisyqqubrouxhgthhmw ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . xcisyqqubrouxhgthhmw ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
√ fix_prediction_before: public static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
× fix_prediction_after: private static void xcisyqqubrouxhgthhmw ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . xcisyqqubrouxhgthhmw ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }

line_index: 642
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ java.lang.Override public void sendOrderedBroadcast ( final android.content.Intent intent , final java.lang.String receiverPermission , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void wyvpbkneezjwdzzhwoae ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ java.lang.Override public void sendOrderedBroadcast ( final android.content.Intent intent , final java.lang.String receiverPermission , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void wyvpbkneezjwdzzhwoae ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
fix_after_refactoring: @ java.lang.Override public void wyvpbkneezjwdzzhwoae () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
× fix_prediction_after: @ java.lang.Override public void sendOrderedBroadcast ( final android.content.Intent intent , final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }

line_index: 675
bug_before_refactoring: private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> fixed some bugs
bug_after_refactoring: private boolean lproffqrriatsrzolbjx ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> private boolean lproffqrriatsrzolbjx ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> fixed some bugs
fix_before_refactoring: public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
fix_after_refactoring: public boolean lproffqrriatsrzolbjx ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
√ fix_prediction_before: public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
× fix_prediction_after: private boolean lproffqrriatsrzolbjx ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }

line_index: 734
bug_before_refactoring: public void getMemberIDFromUser () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; } <s> public void getMemberIDFromUser () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; } <s> bug fix in checking name
bug_after_refactoring: public void guxlejnqwodwqgbjaezw () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; } <s> public void guxlejnqwodwqgbjaezw () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; } <s> bug fix in checking name
fix_before_refactoring: private void getMemberIDFromUser () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; }
fix_after_refactoring: private void guxlejnqwodwqgbjaezw () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; }
√ fix_prediction_before: private void getMemberIDFromUser () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; }
× fix_prediction_after: public void guxlejnqwodwqgbjaezw () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; }

line_index: 761
bug_before_refactoring: private void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } <s> private void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } <s> Rebased onto master  fixed some small layout issues
bug_after_refactoring: private void pqeyfkvqizeqprrhrmza () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } <s> private void pqeyfkvqizeqprrhrmza () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } <s> Rebased onto master  fixed some small layout issues
fix_before_refactoring: public void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } }
fix_after_refactoring: public void pqeyfkvqizeqprrhrmza () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } }
√ fix_prediction_before: public void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } }
× fix_prediction_after: private void pqeyfkvqizeqprrhrmza () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } }

line_index: 766
bug_before_refactoring: private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> Fixed bug
bug_after_refactoring: private static java.lang.String hyhvljfpccwucspejtek ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> private static java.lang.String hyhvljfpccwucspejtek ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> Fixed bug
fix_before_refactoring: public static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
fix_after_refactoring: public static java.lang.String hyhvljfpccwucspejtek ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
√ fix_prediction_before: public static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
× fix_prediction_after: public static java.lang.String hyhvljfpccwucspejtek ( java.io.BufferedReader r ) { java.lang.String line = null ; while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } return null ; }

line_index: 779
bug_before_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> Issue #348 Replaced LifecycleListeners with LifeCyclable hooks    - Got rid of Ehcache.Releasable   - Fixed test on Store.close() being invoked once   - Modified listener test to adjust for hooks not being removable  while in Status.AVAILABLE
bug_after_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > idlldbraxufxmairguvi ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . idlldbraxufxmairguvi ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > idlldbraxufxmairguvi ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . idlldbraxufxmairguvi ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> Issue #348 Replaced LifecycleListeners with LifeCyclable hooks    - Got rid of Ehcache.Releasable   - Fixed test on Store.close() being invoked once   - Modified listener test to adjust for hooks not being removable  while in Status.AVAILABLE
fix_before_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
fix_after_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > idlldbraxufxmairguvi ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . idlldbraxufxmairguvi ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
√ fix_prediction_before: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
× fix_prediction_after: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > idlldbraxufxmairguvi ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . idlldbraxufxmairguvi ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; }

line_index: 810
bug_before_refactoring: public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
bug_after_refactoring: public static int caqlcoxlszlmmdegjegs ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> public static int caqlcoxlszlmmdegjegs ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
fix_before_refactoring: private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
fix_after_refactoring: private static int caqlcoxlszlmmdegjegs ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
√ fix_prediction_before: private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
× fix_prediction_after: public static int caqlcoxlszlmmdegjegs ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }

line_index: 815
bug_before_refactoring: private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> Fix thread sync issues.
bug_after_refactoring: private void lejlltrjlucecrirfnft ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> private void lejlltrjlucecrirfnft ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> Fix thread sync issues.
fix_before_refactoring: private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; }
fix_after_refactoring: private void lejlltrjlucecrirfnft ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; }
√ fix_prediction_before: private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; }
× fix_prediction_after: protected void lejlltrjlucecrirfnft ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; }

line_index: 816
bug_before_refactoring: public static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> public static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
bug_after_refactoring: public static int yamswefuasdaspiqyglt ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> public static int yamswefuasdaspiqyglt ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
fix_before_refactoring: private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
fix_after_refactoring: private static int yamswefuasdaspiqyglt ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
√ fix_prediction_before: private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
× fix_prediction_after: public static int yamswefuasdaspiqyglt ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }

line_index: 826
bug_before_refactoring: @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
bug_after_refactoring: @ java.lang.Override public void cgpnhcsfascrstkhbxjl ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> @ java.lang.Override public void cgpnhcsfascrstkhbxjl ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
fix_before_refactoring: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
fix_after_refactoring: @ java.lang.Override public void cgpnhcsfascrstkhbxjl ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
√ fix_prediction_before: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
× fix_prediction_after: @ java.lang.Override public void cgpnhcsfascrstkhbxjl ( java.util.Scanner args ) { final java.lang.String name = args . hasNext () ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }

line_index: 836
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ java.lang.Override public G2D.Vector2D jpmdzxadnxpsyenjnbgl ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D jpmdzxadnxpsyenjnbgl ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D jpmdzxadnxpsyenjnbgl ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
√ fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ java.lang.Override public app2dpcimpl.geometry.PVD2DImpl ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }

line_index: 847
bug_before_refactoring: private static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } <s> private static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } <s> performance update for delete lines  change some icons  change thickness chooser dialog  fix refresh spinner  small bug fixes
bug_after_refactoring: private static float yjgbxkeoykmmyorldzhi () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } <s> private static float yjgbxkeoykmmyorldzhi () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } <s> performance update for delete lines  change some icons  change thickness chooser dialog  fix refresh spinner  small bug fixes
fix_before_refactoring: public static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; }
fix_after_refactoring: public static float yjgbxkeoykmmyorldzhi () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; }
√ fix_prediction_before: public static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; }
× fix_prediction_after: private static float yjgbxkeoykmmyorldzhi () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; }

line_index: 878
bug_before_refactoring: public java.lang.String convertRequestToString ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; } <s> public java.lang.String convertRequestToString ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; } <s> Fixed tests failing due to ArrayOutOfBoundsError's
bug_after_refactoring: public java.lang.String eslmhcraswaqjpasopvy ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; } <s> public java.lang.String eslmhcraswaqjpasopvy ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; } <s> Fixed tests failing due to ArrayOutOfBoundsError's
fix_before_refactoring: private java.lang.String convertRequestToString ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; }
fix_after_refactoring: private java.lang.String eslmhcraswaqjpasopvy ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; }
√ fix_prediction_before: private java.lang.String convertRequestToString ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; }
× fix_prediction_after: public java.lang.String eslmhcraswaqjpasopvy ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; }

