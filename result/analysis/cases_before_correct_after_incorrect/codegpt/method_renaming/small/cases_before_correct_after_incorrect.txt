line_index: 3
bug_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
bug_after_refactoring: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
fix_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
fix_after_refactoring: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
√ fix_prediction_before: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
× fix_prediction_after: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }

line_index: 13
bug_before_refactoring: public int getId () { return se.edette.ordermatcher.Order.id ; } <s> public int getId () { return se.edette.ordermatcher.Order.id ; } <s> Added debug feature. More comments. Minor locale fixes. Fixed Order id not incrementing. Reverse sorting of buy orders.
bug_after_refactoring: public int ibtrpxqsphlonnmbzpey () { return se.edette.ordermatcher.Order.id ; } <s> public int ibtrpxqsphlonnmbzpey () { return se.edette.ordermatcher.Order.id ; } <s> Added debug feature. More comments. Minor locale fixes. Fixed Order id not incrementing. Reverse sorting of buy orders.
fix_before_refactoring: public int getId () { return id ; }
fix_after_refactoring: public int ibtrpxqsphlonnmbzpey () { return id ; }
√ fix_prediction_before: public int getId () { return id ; }
× fix_prediction_after: public int ibtrpxqsphlonnmbzpey () { return se.edette.ordermatcher.Order.id ; }

line_index: 15
bug_before_refactoring: private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
bug_after_refactoring: private static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> private static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
fix_before_refactoring: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
fix_after_refactoring: public static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
√ fix_prediction_before: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
× fix_prediction_after: private static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) {}

line_index: 44
bug_before_refactoring: private com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> private com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> Merge branch 'master' into alarmbugfix
bug_after_refactoring: private com.android.volley.RequestQueue foqguxldvthtxvvldvgu () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> private com.android.volley.RequestQueue foqguxldvthtxvvldvgu () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> Merge branch 'master' into alarmbugfix
fix_before_refactoring: public com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; }
fix_after_refactoring: public com.android.volley.RequestQueue foqguxldvthtxvvldvgu () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; }
√ fix_prediction_before: public com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; }
× fix_prediction_after: protected com.android.volley.RequestQueue foqguxldvthtxvvldvgu () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; }

line_index: 53
bug_before_refactoring: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> [More interfaces!]  Added PresentableUiAndroid and updated Presentable[Activity | Fragment] to implement it Added PresentableUiDelegateimpl  Fixed nasty registry saving bug  Demo updates
bug_after_refactoring: @ java.lang.Override protected void spwynxcdyeyfdoxilfdg ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . spwynxcdyeyfdoxilfdg ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> @ java.lang.Override protected void spwynxcdyeyfdoxilfdg ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . spwynxcdyeyfdoxilfdg ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> [More interfaces!]  Added PresentableUiAndroid and updated Presentable[Activity | Fragment] to implement it Added PresentableUiDelegateimpl  Fixed nasty registry saving bug  Demo updates
fix_before_refactoring: @ java.lang.Override public void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; }
fix_after_refactoring: @ java.lang.Override public void spwynxcdyeyfdoxilfdg ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . spwynxcdyeyfdoxilfdg ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; }
√ fix_prediction_before: @ java.lang.Override public void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; }
× fix_prediction_after: @ java.lang.Override protected void spwynxcdyeyfdoxilfdg ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . spwynxcdyeyfdoxilfdg ( savedInstanceState ) ; }

line_index: 64
bug_before_refactoring: public java.lang.String [] getText () { return text ; } <s> public java.lang.String [] getText () { return text ; } <s> Fixed error (temporary)
bug_after_refactoring: public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return text ; } <s> public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return text ; } <s> Fixed error (temporary)
fix_before_refactoring: public java.lang.String [] getText () { return this . text ; }
fix_after_refactoring: public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return this . text ; }
√ fix_prediction_before: public java.lang.String [] getText () { return this . text ; }
× fix_prediction_after: public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return getText () ; }

line_index: 71
bug_before_refactoring: private static synchronized void stopVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> private static synchronized void stopVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> CAT-1868 Fix the camera front  flashlight  vibration bug (#1639)
bug_after_refactoring: private static synchronized void lbcwzwcynhgaasosiuml () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "lbcwzwcynhgaasosiuml()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> private static synchronized void lbcwzwcynhgaasosiuml () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "lbcwzwcynhgaasosiuml()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> CAT-1868 Fix the camera front  flashlight  vibration bug (#1639)
fix_before_refactoring: private static synchronized void stopVibrate () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } }
fix_after_refactoring: private static synchronized void lbcwzwcynhgaasosiuml () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "lbcwzwcynhgaasosiuml()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } }
√ fix_prediction_before: private static synchronized void stopVibrate () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } }
× fix_prediction_after: private static synchronized void lbcwzwcynhgaasosiuml () {}

line_index: 72
bug_before_refactoring: private void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> private void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> fix app share bug
bug_after_refactoring: private void gcdtuqdbpqpmwluzqvlu () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> private void gcdtuqdbpqpmwluzqvlu () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> fix app share bug
fix_before_refactoring: public void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } }
fix_after_refactoring: public void gcdtuqdbpqpmwluzqvlu () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } }
√ fix_prediction_before: public void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } }
× fix_prediction_after: private void gcdtuqdbpqpmwluzqvlu () {}

line_index: 94
bug_before_refactoring: private void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> private void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> finish  fix bug to add point add label withs points add win popup add maybe more things but I cant remember
bug_after_refactoring: private void qrgpafguwkclyxglzode () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> private void qrgpafguwkclyxglzode () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> finish  fix bug to add point add label withs points add win popup add maybe more things but I cant remember
fix_before_refactoring: public void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; }
fix_after_refactoring: public void qrgpafguwkclyxglzode () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; }
√ fix_prediction_before: public void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; }
× fix_prediction_after: private void qrgpafguwkclyxglzode () { if ( gameLogic . createPlayers () ) { colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } }

line_index: 104
bug_before_refactoring: public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> Got the database issues "solved". User is saved and remembered.
bug_after_refactoring: public void wvnidbrxbgqvvpcmwnuu ( final long theUserID ) { myUserID = theUserID ; } <s> public void wvnidbrxbgqvvpcmwnuu ( final long theUserID ) { myUserID = theUserID ; } <s> Got the database issues "solved". User is saved and remembered.
fix_before_refactoring: public void setID ( final long theUserID ) { this . myUserID = theUserID ; }
fix_after_refactoring: public void wvnidbrxbgqvvpcmwnuu ( final long theUserID ) { this . myUserID = theUserID ; }
√ fix_prediction_before: public void setID ( final long theUserID ) { this . myUserID = theUserID ; }
× fix_prediction_after: public void wvnidbrxbgqvvpcmwnuu ( final long theUserID ) { myUserID = theUserID ; }

line_index: 116
bug_before_refactoring: @ java.lang.Override public java.lang.Integer [] getArgs () { return new java.lang.Integer [ 0 ] ; } <s> @ java.lang.Override public java.lang.Integer [] getArgs () { return new java.lang.Integer [ 0 ] ; } <s> bugfix AliasRectangle didnt deliver proper getArgs()
bug_after_refactoring: @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return new java.lang.Integer [ 0 ] ; } <s> @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return new java.lang.Integer [ 0 ] ; } <s> bugfix AliasRectangle didnt deliver proper getArgs()
fix_before_refactoring: @ java.lang.Override public java.lang.Integer [] getArgs () { return args ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return args ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.Integer [] getArgs () { return args ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return new java.lang.Integer [] { 0 , 0 } ; }

line_index: 119
bug_before_refactoring: public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; } <s> public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; } <s> fixed some issues with average method. Also added labels to everything
bug_after_refactoring: public void zxropeuguntyjyedyphu ( int rssi ) { signalStrength . add ( rssi ) ; } <s> public void zxropeuguntyjyedyphu ( int rssi ) { signalStrength . add ( rssi ) ; } <s> fixed some issues with average method. Also added labels to everything
fix_before_refactoring: public void addToSignal ( int rssi ) { this . signalStrength . add ( rssi ) ; }
fix_after_refactoring: public void zxropeuguntyjyedyphu ( int rssi ) { this . signalStrength . add ( rssi ) ; }
√ fix_prediction_before: public void addToSignal ( int rssi ) { this . signalStrength . add ( rssi ) ; }
× fix_prediction_after: public void zxropeuguntyjyedyphu ( int rssi ) { if ( ( signalStrength ) == null ) { signalStrength = new int [ 1 ] ; } signalStrength . add ( rssi ) ; }

line_index: 122
bug_before_refactoring: public void setStartYear ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> public void setStartYear ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> fix bugs
bug_after_refactoring: public void vouxwchutitzyrbihblc ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> public void vouxwchutitzyrbihblc ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> fix bugs
fix_before_refactoring: public void setStartYear ( int idfYear ) { startYear = idfYear ; }
fix_after_refactoring: public void vouxwchutitzyrbihblc ( int idfYear ) { startYear = idfYear ; }
√ fix_prediction_before: public void setStartYear ( int idfYear ) { startYear = idfYear ; }
× fix_prediction_after: public void vouxwchutitzyrbihblc ( int idfYear ) {}

line_index: 126
bug_before_refactoring: public float getZ () { return values [ 2 ] ; } <s> public float getZ () { return values [ 2 ] ; } <s> Fix return value bug
bug_after_refactoring: public float tljsrqyxpkuobavkhnsw () { return values [ 2 ] ; } <s> public float tljsrqyxpkuobavkhnsw () { return values [ 2 ] ; } <s> Fix return value bug
fix_before_refactoring: public float getZ () { return ( ( float ) ( values . get ( 2 ) ) ) ; }
fix_after_refactoring: public float tljsrqyxpkuobavkhnsw () { return ( ( float ) ( values . get ( 2 ) ) ) ; }
√ fix_prediction_before: public float getZ () { return ( ( float ) ( values . get ( 2 ) ) ) ; }
× fix_prediction_after: public float tljsrqyxpkuobkhnsw () { return ( ( float ) ( values . get ( 2 ) ) ) ; }

line_index: 162
bug_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
bug_after_refactoring: @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
fix_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { return false ; }
√ fix_prediction_before: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
× fix_prediction_after: @ java.lang.Override public boolean nxstjjggpgxozlwihl ( android.preference.Preference preference ) { return false ; }

line_index: 166
bug_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
bug_after_refactoring: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
fix_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
fix_after_refactoring: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
√ fix_prediction_before: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
× fix_prediction_after: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { egmgyfrmqfscomrqxghr ( taskManager ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } }

line_index: 179
bug_before_refactoring: public int add ( int a , int b ) { return a * b ; } <s> public int add ( int a , int b ) { return a * b ; } <s> Bug fix
bug_after_refactoring: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a * b ; } <s> public int elhhwvatlucbecjqbeku ( int a , int b ) { return a * b ; } <s> Bug fix
fix_before_refactoring: public int add ( int a , int b ) { return a + b ; }
fix_after_refactoring: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a + b ; }
√ fix_prediction_before: public int add ( int a , int b ) { return a + b ; }
× fix_prediction_after: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a * b ; }

line_index: 190
bug_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
bug_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > pduegdgknepuhnfgqcmo () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > pduegdgknepuhnfgqcmo () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
fix_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
fix_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
√ fix_prediction_before: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
× fix_prediction_after: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > pduegdgknepuhnfgqcmo () { return getNetworkProviderModel () . getLocalIP () ; }

line_index: 191
bug_before_refactoring: public static com.android.volley.RequestQueue getRequestQueue () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { synchronized ( com.aspsine.swipetoloadlayout.demo.App . class ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; } <s> public static com.android.volley.RequestQueue getRequestQueue () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { synchronized ( com.aspsine.swipetoloadlayout.demo.App . class ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; } <s> Merge pull request #33 from Aspsine/dev  fix stuck header&footer issue
bug_after_refactoring: public static com.android.volley.RequestQueue vxnpvgqyrfxxihheztrh () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { synchronized ( com.aspsine.swipetoloadlayout.demo.App . class ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; } <s> public static com.android.volley.RequestQueue vxnpvgqyrfxxihheztrh () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { synchronized ( com.aspsine.swipetoloadlayout.demo.App . class ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; } <s> Merge pull request #33 from Aspsine/dev  fix stuck header&footer issue
fix_before_refactoring: public static com.android.volley.RequestQueue getRequestQueue () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; }
fix_after_refactoring: public static com.android.volley.RequestQueue vxnpvgqyrfxxihheztrh () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; }
√ fix_prediction_before: public static com.android.volley.RequestQueue getRequestQueue () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; }
× fix_prediction_after: public static com.android.volley.RequestQueue vxnpvgqyrfxxihheztrh () { return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; }

line_index: 207
bug_before_refactoring: public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> fix: beer count bug
bug_after_refactoring: public void emeupigyjutemqdqpgyq ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> public void emeupigyjutemqdqpgyq ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> fix: beer count bug
fix_before_refactoring: public void increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
fix_after_refactoring: public void emeupigyjutemqdqpgyq () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
√ fix_prediction_before: public void increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
× fix_prediction_after: public void emeupigyjutemqdqpgyq ( android.view.View v ) { updateBAC () ; }

line_index: 213
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> fixed indexing issues
bug_after_refactoring: @ java.lang.Override public void vceoyxezokjhzrdaicuc ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> @ java.lang.Override public void vceoyxezokjhzrdaicuc ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> fixed indexing issues
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( index ) ; }
fix_after_refactoring: @ java.lang.Override public void vceoyxezokjhzrdaicuc ( android.view.View v ) { mListener . onListItemSelectedListener ( index ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( index ) ; }
× fix_prediction_after: @ java.lang.Override public void vceoyxezokjhzrdaicuc ( android.view.View v ) { if ( ( mListener ) != null ) { mListener . onListItemSelectedListener ( getName ) ; } }

line_index: 225
bug_before_refactoring: public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void sdhifdluusjarvelztor ( boolean enable ) { this . sdhifdluusjarvelztor = enable ; writeConfig () ; } <s> public void sdhifdluusjarvelztor ( boolean enable ) { this . sdhifdluusjarvelztor = enable ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
fix_after_refactoring: private void sdhifdluusjarvelztor ( boolean enable ) { this . sdhifdluusjarvelztor = enable ; writeConfig () ; }
√ fix_prediction_before: private void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
× fix_prediction_after: public void sdhifdluusjarvelztor ( boolean enable ) { sdhifdluusjarvelztor = enable ; writeConfig () ; }

line_index: 228
bug_before_refactoring: public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
bug_after_refactoring: public static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
fix_before_refactoring: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
fix_after_refactoring: private static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
√ fix_prediction_before: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
× fix_prediction_after: public static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str ; }

line_index: 234
bug_before_refactoring: @ java.lang.Override public java.lang.String getData () { return null ; } <s> @ java.lang.Override public java.lang.String getData () { return null ; } <s> Fix return types for generic. Fix error return data for interfce
bug_after_refactoring: @ java.lang.Override public java.lang.String oflcjnbcnlpanfasmecc () { return null ; } <s> @ java.lang.Override public java.lang.String oflcjnbcnlpanfasmecc () { return null ; } <s> Fix return types for generic. Fix error return data for interfce
fix_before_refactoring: @ java.lang.Override public java.lang.String getData () { return data ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String oflcjnbcnlpanfasmecc () { return data ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getData () { return data ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String oflcjnbcnlpanfasmecc () { return null ; }

line_index: 245
bug_before_refactoring: @ java.lang.Override public java.lang.String getAccessTransformerClass () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> @ java.lang.Override public java.lang.String getAccessTransformerClass () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> Fixed error in log
bug_after_refactoring: @ java.lang.Override public java.lang.String wtclxrumkqffmnxhkktl () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> @ java.lang.Override public java.lang.String wtclxrumkqffmnxhkktl () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> Fixed error in log
fix_before_refactoring: @ java.lang.Override public java.lang.String getAccessTransformerClass () { return null ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String wtclxrumkqffmnxhkktl () { return null ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getAccessTransformerClass () { return null ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String wtclxrumkqffmnxhkktl () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; }

line_index: 252
bug_before_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> fix issue with oidc callback redirection
bug_after_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> fix issue with oidc callback redirection
fix_before_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Scope ( value = org.springframework.beans.factory.config.ConfigurableBeanFactory.SCOPE_PROTOTYPE ) public org.apereo.cas.web.view.CasProtocolView cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; }
fix_after_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Scope ( value = org.springframework.beans.factory.config.ConfigurableBeanFactory.SCOPE_PROTOTYPE ) public org.apereo.cas.web.view.CasProtocolView jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; }
√ fix_prediction_before: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Scope ( value = org.springframework.beans.factory.config.ConfigurableBeanFactory.SCOPE_PROTOTYPE ) public org.apereo.cas.web.view.CasProtocolView cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; }
× fix_prediction_after: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.apereo.cas.web.view.CasProtocolView jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; }

line_index: 253
bug_before_refactoring: @ java.lang.Override public void onPause () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . onPause () ; } <s> @ java.lang.Override public void onPause () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . onPause () ; } <s> Added sync hashmap; Refactor fragment and fixed small bug with frag argument loading;
bug_after_refactoring: @ java.lang.Override public void jojhkgeaecmqeynpghlw () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . jojhkgeaecmqeynpghlw () ; } <s> @ java.lang.Override public void jojhkgeaecmqeynpghlw () { if ( ( scrollListener ) != null ) rvList . removeOnScrollListener ( scrollListener ) ; super . jojhkgeaecmqeynpghlw () ; } <s> Added sync hashmap; Refactor fragment and fixed small bug with frag argument loading;
fix_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override public void jojhkgeaecmqeynpghlw () { super . jojhkgeaecmqeynpghlw () ; }
√ fix_prediction_before: @ java.lang.Override public void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override public void jojhkgeaecmqeynpghlw () { if ( ( scrollListener ) != null ) { rvList . removeOnScrollListener ( scrollListener ) ; } super . jojhkgeaecmqeynpghlw () ; }

line_index: 254
bug_before_refactoring: public void addX ( final double x ) { this . x += x ; } <s> public void addX ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
bug_after_refactoring: public void jljlawwnkfspzykvqglc ( final double x ) { this . x += x ; } <s> public void jljlawwnkfspzykvqglc ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
fix_before_refactoring: public final void addX ( final double add ) { this . x += add ; }
fix_after_refactoring: public final void jljlawwnkfspzykvqglc ( final double add ) { this . x += add ; }
√ fix_prediction_before: public final void addX ( final double add ) { this . x += add ; }
× fix_prediction_after: public void jljlawwnkfspzykvqglc ( final double x ) { this . x += x ; }

line_index: 268
bug_before_refactoring: void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> fixed bug
bug_after_refactoring: void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> fixed bug
fix_before_refactoring: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
fix_after_refactoring: public void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
√ fix_prediction_before: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
× fix_prediction_after: void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { mBuilder . push ( p ) ; }

line_index: 279
bug_before_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> TMI-40: Fixed subsampling offset bug (and removed the slow  stepwise reading + simplified the code  at the cost of higher memory consumption).
bug_after_refactoring: @ java.lang.Override public void tgqsaujvwkcspggnhcgr ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> @ java.lang.Override public void tgqsaujvwkcspggnhcgr ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> TMI-40: Fixed subsampling offset bug (and removed the slow  stepwise reading + simplified the code  at the cost of higher memory consumption).
fix_before_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { processImageComplete () ; }
fix_after_refactoring: @ java.lang.Override public void tgqsaujvwkcspggnhcgr ( javax.imageio.ImageReader source ) { processImageComplete () ; }
√ fix_prediction_before: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { processImageComplete () ; }
× fix_prediction_after: @ java.lang.Override public void tgqsaujvwkcspggnhcgr ( javax.imageio.ImageReader source ) {}

line_index: 281
bug_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
bug_after_refactoring: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
fix_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
fix_after_refactoring: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
√ fix_prediction_before: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
× fix_prediction_after: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets = bet ; }

line_index: 292
bug_before_refactoring: @ java.lang.Override public void run () { try { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void run () { try { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fixed issue with the widget menu throwing an error.  LauncherMenu is now accepting a "ReadConfig" object to read the config file directly.
bug_after_refactoring: @ java.lang.Override public void slzpykwcnkvtapitnnyg () { try { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void slzpykwcnkvtapitnnyg () { try { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fixed issue with the widget menu throwing an error.  LauncherMenu is now accepting a "ReadConfig" object to read the config file directly.
fix_before_refactoring: @ java.lang.Override public void run () { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; }
fix_after_refactoring: @ java.lang.Override public void slzpykwcnkvtapitnnyg () { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; }
× fix_prediction_after: @ java.lang.Override public void slzpykwcnkvtapitnnyg () {}

line_index: 297
bug_before_refactoring: private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> Fixed bug in binary operation application
bug_after_refactoring: private boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; } <s> private boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
fix_after_refactoring: protected boolean sjeoyztlhgqedlvovocw ( boolean a , boolean b ) { return false ; }
√ fix_prediction_before: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
× fix_prediction_after: public boolean sjeoyztlhgqedlvocw ( boolean a , boolean b ) { return false ; }

line_index: 305
bug_before_refactoring: protected double getValue () { return mValue ; } <s> protected double getValue () { return mValue ; } <s> Fixed problems with Satoshi: not updating properly  JSON errors  and update time
bug_after_refactoring: protected double yynkwebevvxvivugzjra () { return mValue ; } <s> protected double yynkwebevvxvivugzjra () { return mValue ; } <s> Fixed problems with Satoshi: not updating properly  JSON errors  and update time
fix_before_refactoring: public double getValue () { return mValue ; }
fix_after_refactoring: public double yynkwebevvxvivugzjra () { return mValue ; }
√ fix_prediction_before: public double getValue () { return mValue ; }
× fix_prediction_after: protected double yynkwebevvxivugzjra () { if ( ( mValue ) == null ) { return 0 ; } else { return mValue ; } }

line_index: 307
bug_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
bug_after_refactoring: @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
fix_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
fix_after_refactoring: @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
√ fix_prediction_before: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
× fix_prediction_after: @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { return this . boFacade . find ( this . boType , id ) ; }

line_index: 314
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return original_title ; } <s> @ java.lang.Override public java.lang.String toString () { return original_title ; } <s> - New Design for List Implementation (Bind Movie Lists to GUI Lists) - Bugfixing
bug_after_refactoring: @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return original_title ; } <s> @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return original_title ; } <s> - New Design for List Implementation (Bind Movie Lists to GUI Lists) - Bugfixing
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return title ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return title ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return title ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return original_title ; }

line_index: 317
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> fix bug lifecycle profil  fix design profil
bug_after_refactoring: @ java.lang.Override public void qaoazbapvubshwmqqntf ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> @ java.lang.Override public void qaoazbapvubshwmqqntf ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> fix bug lifecycle profil  fix design profil
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { this . finish () ; }
fix_after_refactoring: @ java.lang.Override public void qaoazbapvubshwmqqntf ( android.view.View v ) { this . finish () ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { this . finish () ; }
× fix_prediction_after: @ java.lang.Override public void qaoazbapvubshwmqqntf ( android.view.View v ) { finish () ; }

line_index: 318
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
bug_after_refactoring: public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
fix_after_refactoring: public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
× fix_prediction_after: public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent event ) { setEnabledEditorMenus ( true , false ) ; }

line_index: 346
bug_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> fixed some bugs in the script generator
bug_after_refactoring: public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> fixed some bugs in the script generator
fix_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
fix_after_refactoring: public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
√ fix_prediction_before: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
× fix_prediction_after: public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "0" , speech ) ; }

line_index: 353
bug_before_refactoring: public synchronized void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> public synchronized void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> Attempt to fix reported performance issues in logging: - Use a single monitor instead of two. - Cache MessageFormat and use the existing StringBuffer.   git-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1569896 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: public synchronized void dxcdgrixmednchksdreb ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> public synchronized void dxcdgrixmednchksdreb ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> Attempt to fix reported performance issues in logging: - Use a single monitor instead of two. - Cache MessageFormat and use the existing StringBuffer.   git-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1569896 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: public void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( format ) ; } }
fix_after_refactoring: public void dxcdgrixmednchksdreb ( final java.lang.String format ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( format ) ; } }
√ fix_prediction_before: public void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( format ) ; } }
× fix_prediction_after: public void dxcdgrixmednchksdreb ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format , null ) ; }

line_index: 358
bug_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) { if ( playLists == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.search_alert ) , Toast.LENGTH_LONG ) . show () ; } } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
fix_after_refactoring: @ java.lang.Override public void jazvsowhfvflzwhcqviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
√ fix_prediction_before: @ java.lang.Override public void onSearchResultDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}
× fix_prediction_after: @ java.lang.Override public void jazvsowhfvflzwhcqviwviw ( java.util.ArrayList < com.example.user.cloudplayer.model.PlayList > playLists ) {}

line_index: 366
bug_before_refactoring: public void setDur ( long duration ) { this . dur = duration ; } <s> public void setDur ( long duration ) { this . dur = duration ; } <s> Some bugfixes...
bug_after_refactoring: public void jjinkverbutsiadthqaf ( long duration ) { this . dur = duration ; } <s> public void jjinkverbutsiadthqaf ( long duration ) { this . dur = duration ; } <s> Some bugfixes...
fix_before_refactoring: public void setDur ( long dur ) { this . dur = dur ; }
fix_after_refactoring: public void jjinkverbutsiadthqaf ( long dur ) { this . dur = dur ; }
√ fix_prediction_before: public void setDur ( long dur ) { this . dur = dur ; }
× fix_prediction_after: public void jjinkverbutsiadthqaf ( long duration ) { dur = duration ; }

line_index: 369
bug_before_refactoring: @ java.lang.Override public void run () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> @ java.lang.Override public void run () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> bugfix  git-svn-id: svn+ssh://solsvn.oma.be/home/sidc/ssr/SWHV_repos/trunk/client/jhv-3d-wcs@7390 b4e469a2-07ce-4b26-9273-4d7d95a670c7
bug_after_refactoring: @ java.lang.Override public void svfczewzlxxzuioktibs () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> @ java.lang.Override public void svfczewzlxxzuioktibs () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> bugfix  git-svn-id: svn+ssh://solsvn.oma.be/home/sidc/ssr/SWHV_repos/trunk/client/jhv-3d-wcs@7390 b4e469a2-07ce-4b26-9273-4d7d95a670c7
fix_before_refactoring: @ java.lang.Override public void run () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
fix_after_refactoring: @ java.lang.Override public void svfczewzlxxzuioktibs () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
× fix_prediction_after: @ java.lang.Override public void svfczewzlxxzuioktibs () {}

line_index: 372
bug_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
bug_after_refactoring: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
fix_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
fix_after_refactoring: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; }
√ fix_prediction_before: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
× fix_prediction_after: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; }

line_index: 405
bug_before_refactoring: private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> Fixing bugs
bug_after_refactoring: private static native void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) ; <s> private static native void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
fix_after_refactoring: private static void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) {}
√ fix_prediction_before: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
× fix_prediction_after: private static native void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) ;

line_index: 424
bug_before_refactoring: private java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > getBorders () { return this . borders ; } <s> private java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > getBorders () { return this . borders ; } <s> Fixed border jackson bug and used less granular water tile.
bug_after_refactoring: private java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > ihzxnoxnzzimsfifiezx () { return this . borders ; } <s> private java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > ihzxnoxnzzimsfifiezx () { return this . borders ; } <s> Fixed border jackson bug and used less granular water tile.
fix_before_refactoring: public java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > getBorders () { return this . borders ; }
fix_after_refactoring: public java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > ihzxnoxnzzimsfifiezx () { return this . borders ; }
√ fix_prediction_before: public java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > getBorders () { return this . borders ; }
× fix_prediction_after: protected java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > ihzxnoxnzzimsfifiezx () { return this . borders ; }

line_index: 430
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> fixed bug of ble-led  fixed bug of send message of ble-led and bel-voice
bug_after_refactoring: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> fixed bug of ble-led  fixed bug of send message of ble-led and bel-voice
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; }

line_index: 431
bug_before_refactoring: public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
bug_after_refactoring: public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) { this . to = arg ; } <s> public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) { this . to = arg ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
fix_before_refactoring: public void setTo ( java.lang.String arg ) { to = arg ; }
fix_after_refactoring: public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) { to = arg ; }
√ fix_prediction_before: public void setTo ( java.lang.String arg ) { to = arg ; }
× fix_prediction_after: public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) {}

line_index: 434
bug_before_refactoring: public ffk27.mapviewer2.GeoDataSource getDataSource () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> public ffk27.mapviewer2.GeoDataSource getDataSource () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> bugfixes
bug_after_refactoring: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> bugfixes
fix_before_refactoring: public ffk27.mapviewer2.GeoDataSource getDataSource () { return dataSource ; }
fix_after_refactoring: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { return dataSource ; }
√ fix_prediction_before: public ffk27.mapviewer2.GeoDataSource getDataSource () { return dataSource ; }
× fix_prediction_after: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; }

line_index: 452
bug_before_refactoring: public java.util.List < java.lang.Exception > getException () { return exc ; } <s> public java.util.List < java.lang.Exception > getException () { return exc ; } <s> Added a list that contains the messages of the exceptions. Registration controller has modified. By now its return the corresponding error message. User model bug fix.
bug_after_refactoring: public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return exc ; } <s> public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return exc ; } <s> Added a list that contains the messages of the exceptions. Registration controller has modified. By now its return the corresponding error message. User model bug fix.
fix_before_refactoring: public java.util.List < java.lang.Exception > getException () { return this . exc ; }
fix_after_refactoring: public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return this . exc ; }
√ fix_prediction_before: public java.util.List < java.lang.Exception > getException () { return this . exc ; }
× fix_prediction_after: public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return null ; }

line_index: 519
bug_before_refactoring: private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
bug_after_refactoring: private double todadhffavxwbzquvzdx ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double todadhffavxwbzquvzdx ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
fix_before_refactoring: private double convertUnit ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
fix_after_refactoring: private double todadhffavxwbzquvzdx ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
√ fix_prediction_before: private double convertUnit ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
× fix_prediction_after: private double todadhffavxwbzquvzdx ( double number ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }

line_index: 524
bug_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
fix_after_refactoring: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
√ fix_prediction_before: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
× fix_prediction_after: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) {}

line_index: 535
bug_before_refactoring: public void setName ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> public void setName ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> Refresh button added and rotation bug fixed. Closes #22 Closes #6
bug_after_refactoring: public void elqneuorsyiympsufqad ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> public void elqneuorsyiympsufqad ( java.lang.String newName ) { if ( ! ( newName . equals ( name ) ) ) { name = newName ; commitChanges () ; } } <s> Refresh button added and rotation bug fixed. Closes #22 Closes #6
fix_before_refactoring: public void setName ( java.lang.String newName ) { name = newName ; }
fix_after_refactoring: public void elqneuorsyiympsufqad ( java.lang.String newName ) { name = newName ; }
√ fix_prediction_before: public void setName ( java.lang.String newName ) { name = newName ; }
× fix_prediction_after: public void elqneuorsyiympsufqad ( java.lang.String newName ) { name = newName ; commitChanges () ; }

line_index: 540
bug_before_refactoring: public java.util.Calendar getHorario () { return horario ; } <s> public java.util.Calendar getHorario () { return horario ; } <s> Implementado próximo/anterior direto (bugfix em jaPartiu())
bug_after_refactoring: public java.util.Calendar dfbuuxreetjwvohhvmeb () { return horario ; } <s> public java.util.Calendar dfbuuxreetjwvohhvmeb () { return horario ; } <s> Implementado próximo/anterior direto (bugfix em jaPartiu())
fix_before_refactoring: public java.util.Calendar getHorario () { return this . horario ; }
fix_after_refactoring: public java.util.Calendar dfbuuxreetjwvohhvmeb () { return this . horario ; }
√ fix_prediction_before: public java.util.Calendar getHorario () { return this . horario ; }
× fix_prediction_after: public java.util.Calendar dfbuuxreetjwvohhvmeb () { return this ; }

line_index: 562
bug_before_refactoring: @ java.lang.Override public int getItemCount () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> @ java.lang.Override public int getItemCount () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> Fixed recyclerview issue
bug_after_refactoring: @ java.lang.Override public int cawbzdpufstbqsesozfo () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> @ java.lang.Override public int cawbzdpufstbqsesozfo () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> Fixed recyclerview issue
fix_before_refactoring: @ java.lang.Override public int getItemCount () { return mMoviePosters . size () ; }
fix_after_refactoring: @ java.lang.Override public int cawbzdpufstbqsesozfo () { return mMoviePosters . size () ; }
√ fix_prediction_before: @ java.lang.Override public int getItemCount () { return mMoviePosters . size () ; }
× fix_prediction_after: @ java.lang.Override public int cawbzdpufstbqsesozfo () { return 0 ; }

line_index: 574
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT , int idTour ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT , int idTour ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT , int idTour ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT , idTour ) ; }

line_index: 583
bug_before_refactoring: private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
bug_after_refactoring: private static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
fix_before_refactoring: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
fix_after_refactoring: protected static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
√ fix_prediction_before: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
× fix_prediction_after: private static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) {}

line_index: 592
bug_before_refactoring: @ java.lang.Override public void go () { if ( e . isInTransaction () ) e . end () ; e . close () ; } <s> @ java.lang.Override public void go () { if ( e . isInTransaction () ) e . end () ; e . close () ; } <s> Fixed Dataset and Ontology closing to prevent already closed errors and to ensure dataset saving.
bug_after_refactoring: @ java.lang.Override public void esqcyomsxvvdyswjxnjd () { if ( e . isInTransaction () ) e . end () ; e . close () ; } <s> @ java.lang.Override public void esqcyomsxvvdyswjxnjd () { if ( e . isInTransaction () ) e . end () ; e . close () ; } <s> Fixed Dataset and Ontology closing to prevent already closed errors and to ensure dataset saving.
fix_before_refactoring: @ java.lang.Override public void go () {}
fix_after_refactoring: @ java.lang.Override public void esqcyomsxvvdyswjxnjd () {}
√ fix_prediction_before: @ java.lang.Override public void go () {}
× fix_prediction_after: @ java.lang.Override public void esqcyomsxvvdyswjxnjd () { e . close () ; }

line_index: 595
bug_before_refactoring: public static final void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; } <s> public static final void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; } <s> Bug fixed  if the bot didn't have perms it would do the action
bug_after_refactoring: public static final void atstmzpvngdvpqrxlnmb ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbName = name ; me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbger2 . atstmzpvngdvpqrxlnmb ( lvl , message ) ; } <s> public static final void atstmzpvngdvpqrxlnmb ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbName = name ; me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbger2 . atstmzpvngdvpqrxlnmb ( lvl , message ) ; } <s> Bug fixed  if the bot didn't have perms it would do the action
fix_before_refactoring: public static void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; }
fix_after_refactoring: public static void atstmzpvngdvpqrxlnmb ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbName = name ; me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbger2 . atstmzpvngdvpqrxlnmb ( lvl , message ) ; }
√ fix_prediction_before: public static void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; }
× fix_prediction_after: public static final void atstmzpvngdvpqrxlnmb ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl ) { me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbName = name ; me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbger2 . atstmzpvngdvpqrxlnmb ( lvl ) ; }

line_index: 598
bug_before_refactoring: public static java.lang.String getDate () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> public static java.lang.String getDate () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> fixed issue where repeat block session appears
bug_after_refactoring: public static java.lang.String vyzhnboytqbsljqqmuxc () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> public static java.lang.String vyzhnboytqbsljqqmuxc () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> fixed issue where repeat block session appears
fix_before_refactoring: public java.lang.String getDate () { return date ; }
fix_after_refactoring: public java.lang.String vyzhnboytqbsljqqmuxc () { return date ; }
√ fix_prediction_before: public java.lang.String getDate () { return date ; }
× fix_prediction_after: public java.lang.String vyzhnboytqbsljqqmuxc () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date . toString () ; }

line_index: 613
bug_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
bug_after_refactoring: @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
fix_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) {}
fix_after_refactoring: @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) {}
√ fix_prediction_before: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) {}
× fix_prediction_after: @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; }

line_index: 614
bug_before_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return type ; } <s> public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return type ; } <s> Sonar Issues fix  Change-Id: I1af7e2a6926b6d8717e862382f5540beab2df3a0 Signed-off-by: Iveta Halanova <iveta.halanova@pantheon.sk>
bug_after_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return type ; } <s> public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return type ; } <s> Sonar Issues fix  Change-Id: I1af7e2a6926b6d8717e862382f5540beab2df3a0 Signed-off-by: Iveta Halanova <iveta.halanova@pantheon.sk>
fix_before_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return this . type ; }
fix_after_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return this . type ; }
√ fix_prediction_before: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return this . type ; }
× fix_prediction_after: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return type ; }

line_index: 622
bug_before_refactoring: public boolean hasYoutubeFile () { return ( youtubeCacheFile . length () ) > 0 ; } <s> public boolean hasYoutubeFile () { return ( youtubeCacheFile . length () ) > 0 ; } <s> Fixed a couple weird issues that popped up after youtube was added
bug_after_refactoring: public boolean txpbjxefviqiljiwzfqs () { return ( youtubeCacheFile . length () ) > 0 ; } <s> public boolean txpbjxefviqiljiwzfqs () { return ( youtubeCacheFile . length () ) > 0 ; } <s> Fixed a couple weird issues that popped up after youtube was added
fix_before_refactoring: public boolean hasYoutubeFile () { return ( youtubeCacheFile ) != null ; }
fix_after_refactoring: public boolean txpbjxefviqiljiwzfqs () { return ( youtubeCacheFile ) != null ; }
√ fix_prediction_before: public boolean hasYoutubeFile () { return ( youtubeCacheFile ) != null ; }
× fix_prediction_after: public boolean txpbjxefviqiljiwzfqs () { return ( youtubeCacheFile . size () ) > 0 ; }

line_index: 623
bug_before_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } } <s> public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } } <s> Improve formatting and fix errors in AST writer  Multiline declarations and statements are now separated with empty new lines from other declarations to improve clarity of generated source code. Moreover  some errors are fixed  e.g. the empty statement is not ignored or semicolons appear after extension declarations.
bug_after_refactoring: public void ihknsxynrbhfbnvhmpbb ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { ihknsxynrbhfbnvhmpbbVisitor . ihknsxynrbhfbnvhmpbbTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( ihknsxynrbhfbnvhmpbbVisitor , null ) ; } } <s> public void ihknsxynrbhfbnvhmpbb ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { ihknsxynrbhfbnvhmpbbVisitor . ihknsxynrbhfbnvhmpbbTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( ihknsxynrbhfbnvhmpbbVisitor , null ) ; } } <s> Improve formatting and fix errors in AST writer  Multiline declarations and statements are now separated with empty new lines from other declarations to improve clarity of generated source code. Moreover  some errors are fixed  e.g. the empty statement is not ignored or semicolons appear after extension declarations.
fix_before_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { node . accept ( writeVisitor , null ) ; }
fix_after_refactoring: public void ihknsxynrbhfbnvhmpbb ( pl.edu.mimuw.nesc.astwriting.Node node ) { node . accept ( ihknsxynrbhfbnvhmpbbVisitor , null ) ; }
√ fix_prediction_before: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { node . accept ( writeVisitor , null ) ; }
× fix_prediction_after: public void ihknsxynrbhfbnvhmpbb ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { ihknsxynrbhfbnvhmpbbVisitor . ihknsxynrbhfbnvhmpbbTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } accept ( ihknsxynrbhfbnvhmpbbVisitor , null ) ; }

line_index: 657
bug_before_refactoring: @ java.lang.Override protected void buildShape () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> @ java.lang.Override protected void buildShape () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> Fixed a bug in rigidbody after refactoring collider code
bug_after_refactoring: @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; } <s> Fixed a bug in rigidbody after refactoring collider code
fix_before_refactoring: @ java.lang.Override protected void buildShape () {}
fix_after_refactoring: @ java.lang.Override protected void rkjqhpdzkrdzyaenpele () {}
√ fix_prediction_before: @ java.lang.Override protected void buildShape () {}
× fix_prediction_after: @ java.lang.Override public void rkjqhpdzkrdzyaenpele () { throw new java.lang.UnsupportedOperationException ( "Not supported yet." ) ; }

line_index: 672
bug_before_refactoring: protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
bug_after_refactoring: protected boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> protected boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
fix_before_refactoring: public boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
fix_after_refactoring: public boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
√ fix_prediction_before: public boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
× fix_prediction_after: protected boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user ) { return true ; }

line_index: 676
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( parentId , id ) ; return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( parentId , id ) ; return result ; } <s> bugfix， 参数只有一个id
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult ordmzujoujvbayqfwjii ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . ordmzujoujvbayqfwjii ( parentId , id ) ; return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult ordmzujoujvbayqfwjii ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . ordmzujoujvbayqfwjii ( parentId , id ) ; return result ; } <s> bugfix， 参数只有一个id
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( id ) ; return result ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult ordmzujoujvbayqfwjii ( java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . ordmzujoujvbayqfwjii ( id ) ; return result ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( id ) ; return result ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult delete ( java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . ordmzujoujvbayqfwjii ( id ) ; return result ; }

line_index: 690
bug_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
fix_after_refactoring: private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
√ fix_prediction_before: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
× fix_prediction_after: private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { _colors [ ( p_currentIndex - 1 ) ] = p_paramIndex ; }

line_index: 697
bug_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
bug_after_refactoring: protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
fix_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
fix_after_refactoring: protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
√ fix_prediction_before: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
× fix_prediction_after: protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }

line_index: 729
bug_before_refactoring: @ java.lang.Override public void destroy () { destroyContentStoreContext ( context ) ; org.craftercms.deployer.impl.processors.SearchIndexingProcessor.logger . debug ( "Content store context destroyed: {}" , context ) ; } <s> @ java.lang.Override public void destroy () { destroyContentStoreContext ( context ) ; org.craftercms.deployer.impl.processors.SearchIndexingProcessor.logger . debug ( "Content store context destroyed: {}" , context ) ; } <s> Bug fixes:  * Moved Context creation back into the process method. When it was done on startup it failed because the site repo didn't exist yet. * The processed commit of a target is now deleted on target deletion.
bug_after_refactoring: @ java.lang.Override public void gynqiofoxkhshpfdozhs () { gynqiofoxkhshpfdozhsContentStoreContext ( context ) ; org.craftercms.deployer.impl.processors.SearchIndexingProcessor.logger . debug ( "Content store context gynqiofoxkhshpfdozhsed: {}" , context ) ; } <s> @ java.lang.Override public void gynqiofoxkhshpfdozhs () { gynqiofoxkhshpfdozhsContentStoreContext ( context ) ; org.craftercms.deployer.impl.processors.SearchIndexingProcessor.logger . debug ( "Content store context gynqiofoxkhshpfdozhsed: {}" , context ) ; } <s> Bug fixes:  * Moved Context creation back into the process method. When it was done on startup it failed because the site repo didn't exist yet. * The processed commit of a target is now deleted on target deletion.
fix_before_refactoring: @ java.lang.Override public void destroy () {}
fix_after_refactoring: @ java.lang.Override public void gynqiofoxkhshpfdozhs () {}
√ fix_prediction_before: @ java.lang.Override public void destroy () {}
× fix_prediction_after: @ java.lang.Override public void gynqiofoxkhshpfdozhsed () {}

line_index: 730
bug_before_refactoring: private void incrementFileCount () { ( this . fileCount ) ++ ; } <s> private void incrementFileCount () { ( this . fileCount ) ++ ; } <s> Feature-complete GUI * refactored MAX_FILE_SIZE from Integer to Long * refactored processing after scan * improved logger messages * added custom logging appender to display logger messages in a JTextArea * added a lot of new gui elements: in progress messages  result lists with open / delete functionality * fixed some minor bugs (like no value for "GB" max file size type)
bug_after_refactoring: private void hteuxbtnhfjwhgspxnlx () { ( this . fileCount ) ++ ; } <s> private void hteuxbtnhfjwhgspxnlx () { ( this . fileCount ) ++ ; } <s> Feature-complete GUI * refactored MAX_FILE_SIZE from Integer to Long * refactored processing after scan * improved logger messages * added custom logging appender to display logger messages in a JTextArea * added a lot of new gui elements: in progress messages  result lists with open / delete functionality * fixed some minor bugs (like no value for "GB" max file size type)
fix_before_refactoring: private void incrementFileCount () { ( fileCount ) ++ ; }
fix_after_refactoring: private void hteuxbtnhfjwhgspxnlx () { ( fileCount ) ++ ; }
√ fix_prediction_before: private void incrementFileCount () { ( fileCount ) ++ ; }
× fix_prediction_after: private void hteuxbtnhfjwhgspxnlx () { ( this . fileCount ) ++ ; }

line_index: 736
bug_before_refactoring: public void setName () { this . name = name ; } <s> public void setName () { this . name = name ; } <s> fix syntax error and format code
bug_after_refactoring: public void tcqhguvfmrmgfbipdbcv () { this . name = name ; } <s> public void tcqhguvfmrmgfbipdbcv () { this . name = name ; } <s> fix syntax error and format code
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void tcqhguvfmrmgfbipdbcv ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_before: public void setName ( java.lang.String name ) { this . name = name ; }
× fix_prediction_after: public void tcqhguvfmrmgfbipdbcv () { name = name ; }

line_index: 739
bug_before_refactoring: private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
bug_after_refactoring: private void xorbnobfajgrsfuihnai ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void xorbnobfajgrsfuihnai ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
fix_before_refactoring: void setEndTime ( double endTime ) { this . endTime = endTime ; }
fix_after_refactoring: void xorbnobfajgrsfuihnai ( double endTime ) { this . endTime = endTime ; }
√ fix_prediction_before: void setEndTime ( double endTime ) { this . endTime = endTime ; }
× fix_prediction_after: private void xorbnobfajgrsfuihna ( double endTime ) { this . endTime = ( endTime * 10 ) / 10 ; }

line_index: 742
bug_before_refactoring: public java.lang.String [] paramaters () { return new java.lang.String [ 0 ] ; } <s> public java.lang.String [] paramaters () { return new java.lang.String [ 0 ] ; } <s> Fix spelling error in API
bug_after_refactoring: public java.lang.String [] imuyyobejmxrvcdxitrp () { return new java.lang.String [ 0 ] ; } <s> public java.lang.String [] imuyyobejmxrvcdxitrp () { return new java.lang.String [ 0 ] ; } <s> Fix spelling error in API
fix_before_refactoring: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
fix_after_refactoring: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
√ fix_prediction_before: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
× fix_prediction_after: public java.lang.String [] imuyyobejmxrvcdxitrp () { return new java.lang.String [ 1 ] ; }

line_index: 748
bug_before_refactoring: public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
bug_after_refactoring: public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
fix_before_refactoring: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
fix_after_refactoring: public < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; }
√ fix_prediction_before: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
× fix_prediction_after: public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; }

line_index: 751
bug_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> bug fix etape 1
bug_after_refactoring: @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> bug fix etape 1
fix_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
fix_after_refactoring: @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
√ fix_prediction_before: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
× fix_prediction_after: @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance () ; }

line_index: 754
bug_before_refactoring: private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> Fixing bugs
bug_after_refactoring: private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ; <s> private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ; <s> Fixing bugs
fix_before_refactoring: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
fix_after_refactoring: private static int mvetzezobhpextblpwyq ( long roi , long annulus ) { return 0 ; }
√ fix_prediction_before: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
× fix_prediction_after: private native int mvetzezobhpextblpwyq ( long roi , long annulus ) ;

line_index: 755
bug_before_refactoring: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> Fixed errors in OpenstackKeyPairServiceTest and an error in the class
bug_after_refactoring: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> Fixed errors in OpenstackKeyPairServiceTest and an error in the class
fix_before_refactoring: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
fix_after_refactoring: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
√ fix_prediction_before: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
× fix_prediction_after: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; }

line_index: 756
bug_before_refactoring: private static native void _IMAQdxSnap ( int id , long image ) ; <s> private static native void _IMAQdxSnap ( int id , long image ) ; <s> Fixing bugs
bug_after_refactoring: private static native void xrmeudhoethgilnxzleo ( int id , long image ) ; <s> private static native void xrmeudhoethgilnxzleo ( int id , long image ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSnap ( int id , long image ) {}
fix_after_refactoring: private static void xrmeudhoethgilnxzleo ( int id , long image ) {}
√ fix_prediction_before: private static void _IMAQdxSnap ( int id , long image ) {}
× fix_prediction_after: private static native void xrmeudhoethgilnxzleo ( int id , long image ) {}

line_index: 771
bug_before_refactoring: public rheat.GUI.Helix getSelectedHelix () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . getSelectedHelix () ; } return result ; } <s> public rheat.GUI.Helix getSelectedHelix () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . getSelectedHelix () ; } return result ; } <s> Fixed issue with zoom reset after constraints.  The zoom level now stays the same after constraints are applied.  The internal object for managing the RNA image is no longer replaced; it just updates state each time. Also  updated Issues.txt and ToDo.txt to reflect this fix and some other recent changes.
bug_after_refactoring: public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . ayderbuqkqjrygkqaxqu () ; } return result ; } <s> public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . ayderbuqkqjrygkqaxqu () ; } return result ; } <s> Fixed issue with zoom reset after constraints.  The zoom level now stays the same after constraints are applied.  The internal object for managing the RNA image is no longer replaced; it just updates state each time. Also  updated Issues.txt and ToDo.txt to reflect this fix and some other recent changes.
fix_before_refactoring: public rheat.GUI.Helix getSelectedHelix () { return helixImgGen . getSelectedHelix () ; }
fix_after_refactoring: public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { return helixImgGen . ayderbuqkqjrygkqaxqu () ; }
√ fix_prediction_before: public rheat.GUI.Helix getSelectedHelix () { return helixImgGen . getSelectedHelix () ; }
× fix_prediction_after: public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . ayderbuqkqjrygkqaxqu () ; } return result ; }

line_index: 782
bug_before_refactoring: public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> icon and minor error fixes
bug_after_refactoring: public void drpkoiffcmtrqeewowhg ( java.lang.String message ) { _ws . send ( message ) ; } <s> public void drpkoiffcmtrqeewowhg ( java.lang.String message ) { _ws . send ( message ) ; } <s> icon and minor error fixes
fix_before_refactoring: public void sendMessage ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
fix_after_refactoring: public void drpkoiffcmtrqeewowhg ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
√ fix_prediction_before: public void sendMessage ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
× fix_prediction_after: public void drpkoiffcmtrqeewhg ( java.lang.String message ) {}

line_index: 825
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> 创建圈子bug -fix
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String cdooplijoekliqgfbvwr ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String cdooplijoekliqgfbvwr ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> 创建圈子bug -fix
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String cdooplijoekliqgfbvwr ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }

line_index: 842
bug_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
bug_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
fix_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
fix_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( java.lang.String property , java.lang.String value ) ;
√ fix_prediction_before: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
× fix_prediction_after: com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property ) ;

line_index: 847
bug_before_refactoring: public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> Tests added and tons of bug fixes
bug_after_refactoring: public void nyncsljrcztthcrdccte ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> public void nyncsljrcztthcrdccte ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> Tests added and tons of bug fixes
fix_before_refactoring: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
fix_after_refactoring: public void nyncsljrcztthcrdccte ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
√ fix_prediction_before: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
× fix_prediction_after: public void nyncsljrcztthcrdccte ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ) , value ) ; }

line_index: 870
bug_before_refactoring: public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> Solved Zero Backup issue
bug_after_refactoring: public void soemutjscwihulcfecfu ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> public void soemutjscwihulcfecfu ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> Solved Zero Backup issue
fix_before_refactoring: private void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
fix_after_refactoring: private void soemutjscwihulcfecfu ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
√ fix_prediction_before: private void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
× fix_prediction_after: public void soemutjscwihulcfecfu ( java.lang.String number ) {}

line_index: 873
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
bug_after_refactoring: @ java.lang.Override public void hvihnggqsjbjdfqsjgwj ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> @ java.lang.Override public void hvihnggqsjbjdfqsjgwj ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username , password ) ; }
fix_after_refactoring: @ java.lang.Override public void hvihnggqsjbjdfqsjgwj ( android.view.View v ) { validateCredentials ( username , password ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username , password ) ; }
× fix_prediction_after: @ java.lang.Override public void hvihnggqsjgwj ( android.view.View v ) { validateCredentials ( username , password ) ; }

line_index: 878
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> @ java.lang.Override protected void onPause () { super . onPause () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> bug fix when on the custom keyboard screen going in the background crahes the app
bug_after_refactoring: @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; android.content.Intent intent ; intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; if ( ! ( isDestroyed () ) ) { finish () ; } } <s> bug fix when on the custom keyboard screen going in the background crahes the app
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override protected void rtluajfmfnbawvsonnbz () { super . rtluajfmfnbawvsonnbz () ; android.content.Intent intent = new android.content.Intent ( this , com.breadwallet.presenter.activities.MainActivity . class ) ; startActivity ( intent ) ; }

line_index: 886
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return new java.lang.String ( ( ( ( type ) + " " ) + ( id ) ) ) ; } <s> @ java.lang.Override public java.lang.String toString () { return new java.lang.String ( ( ( ( type ) + " " ) + ( id ) ) ) ; } <s> Fixed serious issue with counting value of tree - bug in constant class
bug_after_refactoring: @ java.lang.Override public java.lang.String fgitnpvbwlohibluvkzc () { return new java.lang.String ( ( ( ( type ) + " " ) + ( id ) ) ) ; } <s> @ java.lang.Override public java.lang.String fgitnpvbwlohibluvkzc () { return new java.lang.String ( ( ( ( type ) + " " ) + ( id ) ) ) ; } <s> Fixed serious issue with counting value of tree - bug in constant class
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return new java.lang.String ( type ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String fgitnpvbwlohibluvkzc () { return new java.lang.String ( type ) ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return new java.lang.String ( type ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String fgitnpvbwlohibluvkzc () { return ( type ) + " " ; }

line_index: 907
bug_before_refactoring: public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
bug_after_refactoring: public synchronized void uqlikmydlmjiazjwyuxy ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> public synchronized void uqlikmydlmjiazjwyuxy ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
fix_before_refactoring: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( callback ) ; } }
fix_after_refactoring: public void uqlikmydlmjiazjwyuxy ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( callback ) ; } }
√ fix_prediction_before: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( callback ) ; } }
× fix_prediction_after: public void uqlikmydlmjiazjwyuxy ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; }

line_index: 908
bug_before_refactoring: private int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> private int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> Fixed a serious error with the bank and getting the count of dev cards  Accidentally accessed the resources array rather than the real array
bug_after_refactoring: private int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> private int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> Fixed a serious error with the bank and getting the count of dev cards  Accidentally accessed the resources array rather than the real array
fix_before_refactoring: public int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
fix_after_refactoring: public int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
√ fix_prediction_before: public int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
× fix_prediction_after: private int buhlzpqicwtmpizdeqqu () { return this . numberDevCardTypes ; }

line_index: 911
bug_before_refactoring: public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
bug_after_refactoring: public void dhlssmwraulgwtnbcyvk ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void dhlssmwraulgwtnbcyvk ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
fix_before_refactoring: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
fix_after_refactoring: public void dhlssmwraulgwtnbcyvk ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
√ fix_prediction_before: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
× fix_prediction_after: public void dhlssmwraulgwtnbcyvk ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }

line_index: 919
bug_before_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> Fix dash line problem due to incorrect caching
bug_after_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> Fix dash line problem due to incorrect caching
fix_before_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { return intersectionCache ; }
fix_after_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { return intersectionCache ; }
√ fix_prediction_before: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { return intersectionCache ; }
× fix_prediction_after: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; }

line_index: 923
bug_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> fix bug
bug_after_refactoring: protected void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: oajwibpasgbbjxqhydju -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> protected void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: oajwibpasgbbjxqhydju -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> fix bug
fix_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) {}
fix_after_refactoring: protected void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition , int layoutPosition ) {}
√ fix_prediction_before: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) {}
× fix_prediction_after: public void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( ( "call: oajwibpasgbbjxqhydju -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; }

line_index: 931
bug_before_refactoring: public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
bug_after_refactoring: public synchronized void bfwlebauksiqkypafcmi ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> public synchronized void bfwlebauksiqkypafcmi ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
fix_before_refactoring: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( callback ) ; } }
fix_after_refactoring: public void bfwlebauksiqkypafcmi ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( callback ) ; } }
√ fix_prediction_before: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( callback ) ; } }
× fix_prediction_after: public void bfwlebauksiqkypafcmi ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; }

line_index: 937
bug_before_refactoring: java.lang.String getLogin ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> java.lang.String getLogin ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> - The code was simplified - New messages automatically appears in the opened dialog - Now line in the lower left corner informs about new connections - Bugfixes
bug_after_refactoring: java.lang.String mhwzmmusubkvshwbgolo ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> java.lang.String mhwzmmusubkvshwbgolo ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> - The code was simplified - New messages automatically appears in the opened dialog - Now line in the lower left corner informs about new connections - Bugfixes
fix_before_refactoring: java.lang.String getLogin ( ) throws java.io.IOException { return in . readLine () ; }
fix_after_refactoring: java.lang.String mhwzmmusubkvshwbgolo ( ) throws java.io.IOException { return in . readLine () ; }
√ fix_prediction_before: java.lang.String getLogin ( ) throws java.io.IOException { return in . readLine () ; }
× fix_prediction_after: java.lang.String mhwzmmusubkvshwbgolo ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; return login ; }

line_index: 954
bug_before_refactoring: private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> fix bugly#1493  application context null
bug_after_refactoring: private void uskrzqapuikaeagcqdla () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> private void uskrzqapuikaeagcqdla () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> fix bugly#1493  application context null
fix_before_refactoring: private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; }
fix_after_refactoring: private void uskrzqapuikaeagcqdla () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; }
√ fix_prediction_before: private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; }
× fix_prediction_after: private void uskrzqapuikaeagcqdla () {}

line_index: 959
bug_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> @ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> fixing some bugs
bug_after_refactoring: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; if ( ( mConnectedThread ) != null ) mConnectedThread . cancel () ; } <s> fixing some bugs
fix_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; }
√ fix_prediction_before: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
× fix_prediction_after: @ java.lang.Override protected void emvjmpjthhxkdaytujvl () { super . emvjmpjthhxkdaytujvl () ; mConnectedThread . cancel () ; }

line_index: 964
bug_before_refactoring: void initChildView () { if ( ( childView ) == null ) { childView = getChildAt ( 0 ) ; } } <s> void initChildView () { if ( ( childView ) == null ) { childView = getChildAt ( 0 ) ; } } <s> fix bug: recyclerView swipe to refresh issue
bug_after_refactoring: void buwxxzwettrsdsoymbll () { if ( ( childView ) == null ) { childView = getChildAt ( 0 ) ; } } <s> void buwxxzwettrsdsoymbll () { if ( ( childView ) == null ) { childView = getChildAt ( 0 ) ; } } <s> fix bug: recyclerView swipe to refresh issue
fix_before_refactoring: void initChildView () { if ( ( childView ) == null ) { childView = getChildAt ( 1 ) ; } }
fix_after_refactoring: void buwxxzwettrsdsoymbll () { if ( ( childView ) == null ) { childView = getChildAt ( 1 ) ; } }
√ fix_prediction_before: void initChildView () { if ( ( childView ) == null ) { childView = getChildAt ( 1 ) ; } }
× fix_prediction_after: void buwxxzwettrsdsoymbll () { if ( ( getChildAt ( 0 ) ) == null ) { getChildAt ( 0 ) = getChildAt ( 1 ) ; } }

line_index: 968
bug_before_refactoring: @ java.lang.Override public void run () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> @ java.lang.Override public void run () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> Handle failures after closed transaction  We should not run `onError` of a transaction after the transaction has been successfully closed.  Fixes #146
bug_after_refactoring: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> Handle failures after closed transaction  We should not run `onError` of a transaction after the transaction has been successfully closed.  Fixes #146
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }
fix_after_refactoring: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }
√ fix_prediction_before: @ java.lang.Override public void run () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }
× fix_prediction_after: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; if ( ( currentTransaction ) != null ) connection . onError ( null ) ; }

line_index: 986
bug_before_refactoring: private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> resolved file name issues
bug_after_refactoring: private void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . htyhaxsrzhzqsfqsgutc ( s . getBytes () ) ; } } <s> private void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . htyhaxsrzhzqsfqsgutc ( s . getBytes () ) ; } } <s> resolved file name issues
fix_before_refactoring: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
fix_after_refactoring: public void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . htyhaxsrzhzqsfqsgutc ( s . getBytes () ) ; } }
√ fix_prediction_before: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
× fix_prediction_after: private void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { socketManager . htyhaxsrzhzqsfqsgutc ( s ) ; }

line_index: 988
bug_before_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> bug fix  bug fix
bug_after_refactoring: public void mrsshnfsydxzsmokkkxm ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . gonlmltvbxkdmkuqwzqkTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void gonlmltvbxkdmkuqwzqk ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> public void mrsshnfsydxzsmokkkxm ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . gonlmltvbxkdmkuqwzqkTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void gonlmltvbxkdmkuqwzqk ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> bug fix  bug fix
fix_before_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { this . currentTransaction = currentTransaction ; }
fix_after_refactoring: public void mrsshnfsydxzsmokkkxm ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { this . currentTransaction = currentTransaction ; }
√ fix_prediction_before: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { this . currentTransaction = currentTransaction ; }
× fix_prediction_after: public void mrsshnfsydxzsmokkkxm ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) {}

line_index: 1016
bug_before_refactoring: public java.lang.Integer getType () { return ( type ) == 0 ? null : type ; } <s> public java.lang.Integer getType () { return ( type ) == 0 ? null : type ; } <s> fixed bad enum error
bug_after_refactoring: public java.lang.Integer vofeguspfxvbqteilkte () { return ( type ) == 0 ? null : type ; } <s> public java.lang.Integer vofeguspfxvbqteilkte () { return ( type ) == 0 ? null : type ; } <s> fixed bad enum error
fix_before_refactoring: public java.lang.Integer getType () { return type ; }
fix_after_refactoring: public java.lang.Integer vofeguspfxvbqteilkte () { return type ; }
√ fix_prediction_before: public java.lang.Integer getType () { return type ; }
× fix_prediction_after: public java.lang.Integer vofeguspfxvbqteilkte () { return null ; }

line_index: 1019
bug_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
bug_after_refactoring: @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
fix_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( true ) ; }

line_index: 1023
bug_before_refactoring: public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> Adds full-screen Dialog for restaurant adding Splits Dialogs for adding and editing into own Class Fixes some errors from latest commit
bug_after_refactoring: public static boolean lqadfetwnnfvwiagiawe ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> public static boolean lqadfetwnnfvwiagiawe ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> Adds full-screen Dialog for restaurant adding Splits Dialogs for adding and editing into own Class Fixes some errors from latest commit
fix_before_refactoring: private static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; }
fix_after_refactoring: private static boolean lqadfetwnnfvwiagiawe ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; }
√ fix_prediction_before: private static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; }
× fix_prediction_after: public static boolean lqadfetwnnfvwiagiawe ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () . toString () ) ; }

line_index: 1050
bug_before_refactoring: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> Fix Various Issues  Implement command for Mac OS X Fix issue with getMousePoisiton and Java 8 Fix Object[] to String[] issue in JumpEnd.java
bug_after_refactoring: public void okbdpquolbkwkwwgvgsk ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> public void okbdpquolbkwkwwgvgsk ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> Fix Various Issues  Implement command for Mac OS X Fix issue with getMousePoisiton and Java 8 Fix Object[] to String[] issue in JumpEnd.java
fix_before_refactoring: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow () ; }
fix_after_refactoring: public void okbdpquolbkwkwwgvgsk ( java.awt.event.MouseEvent event ) { requestFocusInWindow () ; }
√ fix_prediction_before: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow () ; }
× fix_prediction_after: public void okbdpquolbkwkwwgvgsk ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true , false ) ; }

line_index: 1062
bug_before_refactoring: public void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> public void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> Previous bugs resolved. User input is buggy after finding a match.
bug_after_refactoring: public void ebhqlexobkrkrfjysbaz () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> public void ebhqlexobkrkrfjysbaz () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> Previous bugs resolved. User input is buggy after finding a match.
fix_before_refactoring: protected void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; }
fix_after_refactoring: protected void ebhqlexobkrkrfjysbaz () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; }
√ fix_prediction_before: protected void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; }
× fix_prediction_after: protected void ebhqlexobkrfjysbaz () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; }

line_index: 1073
bug_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> Fixed javadocs issues
bug_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> Fixed javadocs issues
fix_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
fix_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ) { return bqqwekojqzqjbxrqympw ; }
√ fix_prediction_before: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
× fix_prediction_after: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; }

line_index: 1077
bug_before_refactoring: private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
bug_after_refactoring: private static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> private static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
fix_before_refactoring: public static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
fix_after_refactoring: public static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
√ fix_prediction_before: public static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
× fix_prediction_after: private static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.Throwable cause ) { if ( cause == null ) { return "Unknown" ; } else { return cause . getMessage () ; } }

line_index: 1079
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
bug_after_refactoring: public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
fix_after_refactoring: public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
× fix_prediction_after: public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent event ) { editCheckBox ( event , true ) ; }

line_index: 1081
bug_before_refactoring: private void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> private void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> some errors are fixed
bug_after_refactoring: private void tmtdejlmvwjgtfmsvesf () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> private void tmtdejlmvwjgtfmsvesf () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> some errors are fixed
fix_before_refactoring: public void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; }
fix_after_refactoring: public void tmtdejlmvwjgtfmsvesf () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; }
√ fix_prediction_before: public void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; }
× fix_prediction_after: private void tmtdejlmvwjgtfmsvesf () { startSignIn () ; }

line_index: 1083
bug_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> fix sshutil bug
bug_after_refactoring: public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return false ; } <s> public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return false ; } <s> fix sshutil bug
fix_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return true ; }
fix_after_refactoring: public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return true ; }
√ fix_prediction_before: public boolean promptYesNo ( java.lang.String str ) { return true ; }
× fix_prediction_after: public boolean ydatdxdsggcrnygxxA ( java.lang.String str ) { return true ; }

line_index: 1095
bug_before_refactoring: public static void main ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> public static void main ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> fixed error in DBManager
bug_after_refactoring: public static void jbqaxzlhntzduqrnhdmv ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> public static void jbqaxzlhntzduqrnhdmv ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; } <s> fixed error in DBManager
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void jbqaxzlhntzduqrnhdmv ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void jbqaxzlhntzduqrnhdmv ( java.lang.String [] args ) { server.DatabaseManager db = new server.DatabaseManager () ; db . addNewActivity ( "GFGF" , 500 , 5 , 3 , 6 , "2016-02-12" , "10:00:00" , "mjhb" , "kjh" ) ; }

line_index: 1099
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S lyputbeedspziuxhzxxg ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S lyputbeedspziuxhzxxg ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E lyputbeedspziuxhzxxg ( E entity ) { return saveAndFlush ( entity ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndFlush ( E entity ) { return saveAndFlush ( entity ) ; }

line_index: 1106
bug_before_refactoring: public void tearDown () { clear () ; if ( false ) try {} catch ( java.lang.RuntimeException e ) { com.google.common.base.Throwables . propagate ( e ) ; } } <s> public void tearDown () { clear () ; if ( false ) try {} catch ( java.lang.RuntimeException e ) { com.google.common.base.Throwables . propagate ( e ) ; } } <s> Add some javadoc and fix single key factory issue.
bug_after_refactoring: public void kyikucisjwngijvbosnf () { clear () ; if ( false ) try {} catch ( java.lang.RuntimeException e ) { com.google.common.base.Throwables . propagate ( e ) ; } } <s> public void kyikucisjwngijvbosnf () { clear () ; if ( false ) try {} catch ( java.lang.RuntimeException e ) { com.google.common.base.Throwables . propagate ( e ) ; } } <s> Add some javadoc and fix single key factory issue.
fix_before_refactoring: public void tearDown () { clear () ; }
fix_after_refactoring: public void kyikucisjwngijvbosnf () { clear () ; }
√ fix_prediction_before: public void tearDown () { clear () ; }
× fix_prediction_after: public void kyikucisjwngijvbosnf () {}

line_index: 1126
bug_before_refactoring: public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> Possible fix for errors on shutdown
bug_after_refactoring: public abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> public abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> Possible fix for errors on shutdown
fix_before_refactoring: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
fix_after_refactoring: protected abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
√ fix_prediction_before: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
× fix_prediction_after: public abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode ) ;

line_index: 1127
bug_before_refactoring: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
bug_after_refactoring: public boolean wbwvdxjmjfudqfqvbdjh ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> public boolean wbwvdxjmjfudqfqvbdjh ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
fix_before_refactoring: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
fix_after_refactoring: public boolean wbwvdxjmjfudqfqvbdjh () { mStartRecordingAudio = false ; return true ; }
√ fix_prediction_before: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
× fix_prediction_after: public boolean wbwvdxjmjfudqfqvbdjh ( final android.bluetooth.BluetoothDevice device ) { return true ; }

line_index: 1129
bug_before_refactoring: public void hideProgressDialog () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } } <s> public void hideProgressDialog () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } } <s> Fixed bug where rotating the screen resets the fields causing 1. variable previousAlarmMode to be silent 2. switching off the alarm does not cancel the scheduled alarm. variable playRingtoneIntent was reset.
bug_after_refactoring: public void yuawskewvexpbdhsffpa () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } } <s> public void yuawskewvexpbdhsffpa () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } } <s> Fixed bug where rotating the screen resets the fields causing 1. variable previousAlarmMode to be silent 2. switching off the alarm does not cancel the scheduled alarm. variable playRingtoneIntent was reset.
fix_before_refactoring: private void hideProgressDialog () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } }
fix_after_refactoring: private void yuawskewvexpbdhsffpa () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } }
√ fix_prediction_before: private void hideProgressDialog () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } }
× fix_prediction_after: public void yuawskewvexpbdhsffpa () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } }

line_index: 1145
bug_before_refactoring: @ java.lang.Override protected void onNfcStateEnabled () { nfcAvalability = org.kemerelab.rsmcontrol.NFCWriteActivity.NFCAvalability.AVAILABLE_ENABLED ; } <s> @ java.lang.Override protected void onNfcStateEnabled () { nfcAvalability = org.kemerelab.rsmcontrol.NFCWriteActivity.NFCAvalability.AVAILABLE_ENABLED ; } <s> Added jitter to firmware (now version 5) and updated android app. also fixed some bugs  such as up/back issue
bug_after_refactoring: @ java.lang.Override protected void dyonzbvomisgjhpijjux () { nfcAvalability = org.kemerelab.rsmcontrol.NFCWriteActivity.NFCAvalability.AVAILABLE_ENABLED ; } <s> @ java.lang.Override protected void dyonzbvomisgjhpijjux () { nfcAvalability = org.kemerelab.rsmcontrol.NFCWriteActivity.NFCAvalability.AVAILABLE_ENABLED ; } <s> Added jitter to firmware (now version 5) and updated android app. also fixed some bugs  such as up/back issue
fix_before_refactoring: @ java.lang.Override protected void onNfcStateEnabled () {}
fix_after_refactoring: @ java.lang.Override protected void dyonzbvomisgjhpijjux () {}
√ fix_prediction_before: @ java.lang.Override protected void onNfcStateEnabled () {}
× fix_prediction_after: @ java.lang.Override protected void dyonzbvomisgjhpijjux () { nfcAvalability = org.kemeterlab.rsmcontrol.NFCWriteActivity.NFCAvalability.AVAILABLE_ENABLED ; }

line_index: 1151
bug_before_refactoring: public void createWSServer ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , getClass () . getName () ) ; } <s> public void createWSServer ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , getClass () . getName () ) ; } <s> JBIDE-18913 - Build failures after renaming of some 'server' bundles  Fixing a bug in a test and using a different method to wait for changes in the console
bug_after_refactoring: public void zedecizbvebipspbknnp ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , getClass () . getName () ) ; } <s> public void zedecizbvebipspbknnp ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , getClass () . getName () ) ; } <s> JBIDE-18913 - Build failures after renaming of some 'server' bundles  Fixing a bug in a test and using a different method to wait for changes in the console
fix_before_refactoring: public void createWSServer ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , IJBossToolingConstants.SERVER_AS_42 ) ; }
fix_after_refactoring: public void zedecizbvebipspbknnp ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , IJBossToolingConstants.SERVER_AS_42 ) ; }
√ fix_prediction_before: public void createWSServer ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , IJBossToolingConstants.SERVER_AS_42 ) ; }
× fix_prediction_after: public void zedecizbvebipspbknnp ( ) throws java.lang.Exception { currentServer = IJBossToolingConstants.SERVER_AS_42 ; }

line_index: 1153
bug_before_refactoring: public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> Consistent 'id  timestamp' order of paramters in methods  fix bugs in ReplicatedInput.remotePut() and remoteRemove()
bug_after_refactoring: public void nrjmejdahkpptsnpoxzg ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> public void nrjmejdahkpptsnpoxzg ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> Consistent 'id  timestamp' order of paramters in methods  fix bugs in ReplicatedInput.remotePut() and remoteRemove()
fix_before_refactoring: public void initReplicationUpdate ( byte identifier , long timestamp ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; }
fix_after_refactoring: public void nrjmejdahkpptsnpoxzg ( byte identifier , long timestamp ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; }
√ fix_prediction_before: public void initReplicationUpdate ( byte identifier , long timestamp ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; }
× fix_prediction_after: public void nrjmejdahkpptsnpoxzg ( long timestamp , byte identifier ) { this . innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; this . innerRemoteIdentifier = identifier ; }

line_index: 1167
bug_before_refactoring: private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> Fixing bugs
bug_after_refactoring: private static native void tyswauvvittdqgjzllcr ( int id , long name , long value ) ; <s> private static native void tyswauvvittdqgjzllcr ( int id , long name , long value ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
fix_after_refactoring: private static void tyswauvvittdqgjzllcr ( int id , long name , long value ) {}
√ fix_prediction_before: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
× fix_prediction_after: private static native void tyswauvvittdqgjzllcr ( int id , long name , long value ) {}

line_index: 1183
bug_before_refactoring: private int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> private int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> Add support color for rd_background attribute. Add et_dividerCompoundPadding attribute. Correct getTotalPadding functions of EditText class.  Fix incorrect span click bug of ContactEditText class.
bug_after_refactoring: private int ukawtwttfeepskjujvzs ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> private int ukawtwttfeepskjujvzs ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> Add support color for rd_background attribute. Add et_dividerCompoundPadding attribute. Correct getTotalPadding functions of EditText class.  Fix incorrect span click bug of ContactEditText class.
fix_before_refactoring: protected int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; }
fix_after_refactoring: protected int ukawtwttfeepskjujvzs ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; }
√ fix_prediction_before: protected int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; }
× fix_prediction_after: private int ukawtwttfeepskjujvzs ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; }

line_index: 1191
bug_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
bug_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
fix_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
fix_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
√ fix_prediction_before: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
× fix_prediction_after: public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber , java.lang.Long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }

line_index: 1193
bug_before_refactoring: private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
bug_after_refactoring: private void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
fix_before_refactoring: protected void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
fix_after_refactoring: protected void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
√ fix_prediction_before: protected void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
× fix_prediction_after: private void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }

line_index: 1222
bug_before_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( false ) ; } <s> public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( false ) ; } <s> fix(test-bed): don't log debug output for functional test
bug_after_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( false ) ; } <s> public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( false ) ; } <s> fix(test-bed): don't log debug output for functional test
fix_before_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( true ) ; }
fix_after_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( true ) ; }
√ fix_prediction_before: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( true ) ; }
× fix_prediction_after: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( 1 ) ; }

line_index: 1228
bug_before_refactoring: @ asteroids.model.Basic public double getRadius () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> @ asteroids.model.Basic public double getRadius () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> fixed bug in radius reduction procedure in Planetoid
bug_after_refactoring: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> fixed bug in radius reduction procedure in Planetoid
fix_before_refactoring: @ asteroids.model.Basic public double getRadius () { return radius ; }
fix_after_refactoring: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return radius ; }
√ fix_prediction_before: @ asteroids.model.Basic public double getRadius () { return radius ; }
× fix_prediction_after: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return ( radius ) + ( ( totalTraveledDistance ) * 1.0E-6 ) ; }

line_index: 1230
bug_before_refactoring: private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
bug_after_refactoring: private void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> private void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
fix_before_refactoring: protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
fix_after_refactoring: protected void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
√ fix_prediction_before: protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
× fix_prediction_after: private void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { synchronized ( this . noT ) { ( this . noT ) ++ ; } th . start ( ( ( this . currId ) ++ ) ) ; }

line_index: 1255
bug_before_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix videoSplash bug
bug_after_refactoring: @ java.lang.Override public void kzljlkuyclcapgldzcpc ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void kzljlkuyclcapgldzcpc ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix videoSplash bug
fix_before_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) {}
fix_after_refactoring: @ java.lang.Override public void kzljlkuyclcapgldzcpc ( android.view.SurfaceHolder holder , int format , int width , int height ) {}
√ fix_prediction_before: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) {}
× fix_prediction_after: @ java.lang.Override public void kzljlkuyclcapgldzcpc ( android.view.SurfaceHolder holder , int format , int width , int height ) { play () ; }

line_index: 1256
bug_before_refactoring: public boolean isIncludeUnloadedJS () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> public boolean isIncludeUnloadedJS () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> Support 'include-unloaded-js' in proxy mode (https://github.com/tntim96/JSCover/issues/93)  Bump version  Fix typo
bug_after_refactoring: public boolean lwyzkmytuzqxuinoxzzi () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> public boolean lwyzkmytuzqxuinoxzzi () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> Support 'include-unloaded-js' in proxy mode (https://github.com/tntim96/JSCover/issues/93)  Bump version  Fix typo
fix_before_refactoring: public boolean isIncludeUnloadedJS () { return includeUnloadedJS ; }
fix_after_refactoring: public boolean lwyzkmytuzqxuinoxzzi () { return includeUnloadedJS ; }
√ fix_prediction_before: public boolean isIncludeUnloadedJS () { return includeUnloadedJS ; }
× fix_prediction_after: public boolean lwyzkmytuzqxuinoxzzi () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; }

line_index: 1260
bug_before_refactoring: public void clearRegisteredAuthenticationListener () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "clearRegisteredAuthenticationListener" ) ; mAuthListener = null ; } <s> public void clearRegisteredAuthenticationListener () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "clearRegisteredAuthenticationListener" ) ; mAuthListener = null ; } <s> This issue of logging in via email forces two login(s) is an FirebaseUI library bug I cannot fix (its emulator only though)
bug_after_refactoring: public void pmesykyvowsixsaoyutl () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "pmesykyvowsixsaoyutl" ) ; mAuthListener = null ; } <s> public void pmesykyvowsixsaoyutl () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "pmesykyvowsixsaoyutl" ) ; mAuthListener = null ; } <s> This issue of logging in via email forces two login(s) is an FirebaseUI library bug I cannot fix (its emulator only though)
fix_before_refactoring: public void clearRegisteredAuthenticationListener () { mAuthListener = null ; }
fix_after_refactoring: public void pmesykyvowsixsaoyutl () { mAuthListener = null ; }
√ fix_prediction_before: public void clearRegisteredAuthenticationListener () { mAuthListener = null ; }
× fix_prediction_after: public void pmesykyvowsixsaoyutl () {}

line_index: 1293
bug_before_refactoring: private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
fix_after_refactoring: private static void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
√ fix_prediction_before: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
× fix_prediction_after: private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ;

line_index: 1302
bug_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
bug_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
fix_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
fix_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
√ fix_prediction_before: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
× fix_prediction_after: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; }

line_index: 1325
bug_before_refactoring: public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> problem fixed: kid activity crash app after a new kid was created
bug_after_refactoring: public int mgsaulfvdtuzcsnicwvo ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> public int mgsaulfvdtuzcsnicwvo ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> problem fixed: kid activity crash app after a new kid was created
fix_before_refactoring: public void save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) {}
fix_after_refactoring: public void mgsaulfvdtuzcsnicwvo ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) {}
√ fix_prediction_before: public void save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) {}
× fix_prediction_after: public int mgsaulfvdtuzcsnicwvo ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 1 ; }

line_index: 1328
bug_before_refactoring: private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ; <s> private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
fix_after_refactoring: private static void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) {}
√ fix_prediction_before: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
× fix_prediction_after: private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ;

line_index: 1329
bug_before_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> many things; problems to be solved
bug_after_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> many things; problems to be solved
fix_before_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { return tags ; }
fix_after_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { return tags ; }
√ fix_prediction_before: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { return tags ; }
× fix_prediction_after: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { return null ; }

line_index: 1330
bug_before_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
bug_after_refactoring: private void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
fix_before_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
fix_after_refactoring: protected void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
√ fix_prediction_before: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
× fix_prediction_after: protected void bzfczjtemgqrpjabry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }

line_index: 1343
bug_before_refactoring: public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
bug_after_refactoring: public void sbzyzyqwbzmbdsrfbjgs ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void sbzyzyqwbzmbdsrfbjgs ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
fix_before_refactoring: public void enqueue ( Item item ) {}
fix_after_refactoring: public void sbzyzyqwbzmbdsrfbjgs ( Item item ) {}
√ fix_prediction_before: public void enqueue ( Item item ) {}
× fix_prediction_after: public void sbzyqwbzmbdsrfbjgs ( Item item ) {}

line_index: 1367
bug_before_refactoring: private void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; } <s> private void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; } <s> [MVC] fixed bug in MainActivity
bug_after_refactoring: private void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; } <s> private void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; } <s> [MVC] fixed bug in MainActivity
fix_before_refactoring: public void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; }
fix_after_refactoring: public void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; }
√ fix_prediction_before: public void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; }
× fix_prediction_after: private void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; }

line_index: 1374
bug_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
bug_after_refactoring: @ java.lang.Override public void cvrqlqbyjgcdutwygzkx ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . cvrqlqbyjgcdutwygzkx ( accountName , 0 ) ; } <s> @ java.lang.Override public void cvrqlqbyjgcdutwygzkx ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . cvrqlqbyjgcdutwygzkx ( accountName , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
fix_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName ) ; }
fix_after_refactoring: @ java.lang.Override public void cvrqlqbyjgcdutwygzkx ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . cvrqlqbyjgcdutwygzkx ( accountName ) ; }
√ fix_prediction_before: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName ) ; }
× fix_prediction_after: @ java.lang.Override public void cvrqlqbyjgcdutwygzkx ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . cvrqlqbyjgcdutwygzkx ( accountName , null ) ; }

line_index: 1398
bug_before_refactoring: protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
bug_after_refactoring: protected void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> protected void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
fix_before_refactoring: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
fix_after_refactoring: public void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
√ fix_prediction_before: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
× fix_prediction_after: protected void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { updateTextureViewSize () ; }

line_index: 1419
bug_before_refactoring: private boolean getIOFlag () { return IOFlag ; } <s> private boolean getIOFlag () { return IOFlag ; } <s> Update Job.java  fixed logic error
bug_after_refactoring: private boolean cvthdikjphipyjdagrxy () { return IOFlag ; } <s> private boolean cvthdikjphipyjdagrxy () { return IOFlag ; } <s> Update Job.java  fixed logic error
fix_before_refactoring: public boolean getIOFlag () { return IOFlag ; }
fix_after_refactoring: public boolean cvthdikjphipyjdagrxy () { return IOFlag ; }
√ fix_prediction_before: public boolean getIOFlag () { return IOFlag ; }
× fix_prediction_after: private boolean cvthdikjphipyjdagrxy () { return false ; }

line_index: 1434
bug_before_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
bug_after_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
fix_before_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
fix_after_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
√ fix_prediction_before: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
× fix_prediction_after: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { return block1Transfers . get ( key ) ; }

line_index: 1462
bug_before_refactoring: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fix class errors
bug_after_refactoring: @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fix class errors
fix_before_refactoring: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
fix_after_refactoring: @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
√ fix_prediction_before: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_after: @ org.junit.Test public void seppsixcgqmekesazjsm () { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; }

line_index: 1467
bug_before_refactoring: public boolean isUri () { return ! ( uri ) ; } <s> public boolean isUri () { return ! ( uri ) ; } <s> fix bug View.isUri return uri View.asUrl set uri=false
bug_after_refactoring: public boolean ughkrkenroossxnnmntu () { return ! ( uri ) ; } <s> public boolean ughkrkenroossxnnmntu () { return ! ( uri ) ; } <s> fix bug View.isUri return uri View.asUrl set uri=false
fix_before_refactoring: public boolean isUri () { return uri ; }
fix_after_refactoring: public boolean ughkrkenroossxnnmntu () { return uri ; }
√ fix_prediction_before: public boolean isUri () { return uri ; }
× fix_prediction_after: public boolean ughkrkenroossxnnmntu () { return ( uri ) != null ; }

line_index: 1476
bug_before_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> API restructuring  bugfixes
bug_after_refactoring: public boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; } <s> public boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; } <s> API restructuring  bugfixes
fix_before_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
fix_after_refactoring: private boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; }
√ fix_prediction_before: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
× fix_prediction_after: private boolean kcqwnxodzqfgwhyhlbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlbw () ; }

line_index: 1484
bug_before_refactoring: public void changeSlowStatus () { isSlow = ! ( isSlow ) ; count = 0 ; } <s> public void changeSlowStatus () { isSlow = ! ( isSlow ) ; count = 0 ; } <s> fixed some bug
bug_after_refactoring: public void tkgyhvyddzhyyltaiduj () { isSlow = ! ( isSlow ) ; count = 0 ; } <s> public void tkgyhvyddzhyyltaiduj () { isSlow = ! ( isSlow ) ; count = 0 ; } <s> fixed some bug
fix_before_refactoring: public void changeSlowStatus () { isSlow = true ; count = 0 ; }
fix_after_refactoring: public void tkgyhvyddzhyyltaiduj () { isSlow = true ; count = 0 ; }
√ fix_prediction_before: public void changeSlowStatus () { isSlow = true ; count = 0 ; }
× fix_prediction_after: public void tkgyhvyddzhyyltaiduj () { isSlow = false ; count = 0 ; }

line_index: 1486
bug_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
bug_after_refactoring: @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
fix_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
√ fix_prediction_before: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
× fix_prediction_after: @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; return true ; }

line_index: 1500
bug_before_refactoring: private java.lang.String getEmail () { return email ; } <s> private java.lang.String getEmail () { return email ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private java.lang.String dgokvbxdbdeoknycyqlj () { return email ; } <s> private java.lang.String dgokvbxdbdeoknycyqlj () { return email ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public java.lang.String getEmail () { return email ; }
fix_after_refactoring: public java.lang.String dgokvbxdbdeoknycyqlj () { return email ; }
√ fix_prediction_before: public java.lang.String getEmail () { return email ; }
× fix_prediction_after: private java.lang.String dgokvbxdbdeoknycyqlj () { return this . email ; }

line_index: 1542
bug_before_refactoring: private void setEmail ( java.lang.String val ) { email = val ; } <s> private void setEmail ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; } <s> private void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public void setEmail ( java.lang.String val ) { email = val ; }
fix_after_refactoring: public void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; }
√ fix_prediction_before: public void setEmail ( java.lang.String val ) { email = val ; }
× fix_prediction_after: private void ystmmkevktgrbxabpozs ( java.lang.String val ) { this . val = val ; }

line_index: 1547
bug_before_refactoring: public java.lang.String getString ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> public java.lang.String getString ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> Merge pull request #959 from scesbron/bugfix-ws-getstring  [#2035] Fix regression in WS.getString between 1.2.x and 1.4.x
bug_after_refactoring: public java.lang.String zslxsklqueoapyqctsfo ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> public java.lang.String zslxsklqueoapyqctsfo ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> Merge pull request #959 from scesbron/bugfix-ws-getstring  [#2035] Fix regression in WS.getString between 1.2.x and 1.4.x
fix_before_refactoring: public abstract java.lang.String getString ( java.lang.String encoding ) ;
fix_after_refactoring: public abstract java.lang.String zslxsklqueoapyqctsfo ( java.lang.String encoding ) ;
√ fix_prediction_before: public abstract java.lang.String getString ( java.lang.String encoding ) ;
× fix_prediction_after: public java.lang.String zslxsklqueoapyqctsfo ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; }

line_index: 1550
bug_before_refactoring: @ java.lang.Override public byte [] getContent () { return new byte [ 0 ] ; } <s> @ java.lang.Override public byte [] getContent () { return new byte [ 0 ] ; } <s> Fixing endpoint update issue-making endpoint a GenericArtifact phase 2
bug_after_refactoring: @ java.lang.Override public byte [] jdkvgtfqrndtooypzaup () { return new byte [ 0 ] ; } <s> @ java.lang.Override public byte [] jdkvgtfqrndtooypzaup () { return new byte [ 0 ] ; } <s> Fixing endpoint update issue-making endpoint a GenericArtifact phase 2
fix_before_refactoring: @ java.lang.Override public byte [] getContent () { return content ; }
fix_after_refactoring: @ java.lang.Override public byte [] jdkvgtfqrndtooypzaup () { return content ; }
√ fix_prediction_before: @ java.lang.Override public byte [] getContent () { return content ; }
× fix_prediction_after: @ java.lang.Override public byte [] jdkvgtfqrndtooypzaup () { return null ; }

line_index: 1554
bug_before_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> small bug fix for security
bug_after_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String xkohvtmvprmmnlrvmmxl ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String xkohvtmvprmmnlrvmmxl ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> small bug fix for security
fix_before_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; }
fix_after_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String xkohvtmvprmmnlrvmmxl ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; }
√ fix_prediction_before: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; }
× fix_prediction_after: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String xkohvtmvprmmnlrvmmxl ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; }

line_index: 1555
bug_before_refactoring: public void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> public void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> Fixed bug where deconstructing stained clay gave wrong dye (for some reason the color meta data sequence is flipped for each)
bug_after_refactoring: public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> Fixed bug where deconstructing stained clay gave wrong dye (for some reason the color meta data sequence is flipped for each)
fix_before_refactoring: private void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
fix_after_refactoring: private void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
√ fix_prediction_before: private void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
× fix_prediction_after: public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; }

line_index: 1576
bug_before_refactoring: private boolean jj_3R_35 () { if ( jj_scan_token ( org.openstreetmap.josm.gui.mappaint.mapcss.parser.IDENT ) ) return true ; org.openstreetmap.josm.gui.mappaint.mapcss.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_55 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> private boolean jj_3R_35 () { if ( jj_scan_token ( org.openstreetmap.josm.gui.mappaint.mapcss.parser.IDENT ) ) return true ; org.openstreetmap.josm.gui.mappaint.mapcss.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_55 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> MapCSS: fix parser bug   git-svn-id: https://josm.openstreetmap.de/svn/trunk@3971 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: private boolean dlchrvdyhtsbcwvqpqym () { if ( jj_scan_token ( org.openstreetmap.josm.gui.mappaint.mapcss.parser.IDENT ) ) return true ; org.openstreetmap.josm.gui.mappaint.mapcss.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_55 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> private boolean dlchrvdyhtsbcwvqpqym () { if ( jj_scan_token ( org.openstreetmap.josm.gui.mappaint.mapcss.parser.IDENT ) ) return true ; org.openstreetmap.josm.gui.mappaint.mapcss.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_55 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> MapCSS: fix parser bug   git-svn-id: https://josm.openstreetmap.de/svn/trunk@3971 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: private boolean jj_3R_35 () { if ( jj_3R_55 () ) return true ; return false ; }
fix_after_refactoring: private boolean dlchrvdyhtsbcwvqpqym () { if ( jj_3R_55 () ) return true ; return false ; }
√ fix_prediction_before: private boolean jj_3R_35 () { if ( jj_3R_55 () ) return true ; return false ; }
× fix_prediction_after: private boolean dlchrvdyhtsbcwvqpqym () { org.openstreetmap.josm.gui.mappaint.mapcss.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_55 () ) { jj_scanpos = xsp ; break; } } return false ; }

line_index: 1586
bug_before_refactoring: private static native void _IMAQdxStartAcquisition ( int id ) ; <s> private static native void _IMAQdxStartAcquisition ( int id ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hfowjsesnpxeuhzubiyb ( int id ) ; <s> private static native void hfowjsesnpxeuhzubiyb ( int id ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxStartAcquisition ( int id ) {}
fix_after_refactoring: private static void hfowjsesnpxeuhzubiyb ( int id ) {}
√ fix_prediction_before: private static void _IMAQdxStartAcquisition ( int id ) {}
× fix_prediction_after: private static native void hfowjsesnpxeuhzubiyb ( int id ) {}

line_index: 1593
bug_before_refactoring: public boolean contains ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> public boolean contains ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> added two tests on the collision and key with negative hashCode  fixed bug with negative hashCode
bug_after_refactoring: public boolean hcpzjwwkwruezbbyfijj ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> public boolean hcpzjwwkwruezbbyfijj ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> added two tests on the collision and key with negative hashCode  fixed bug with negative hashCode
fix_before_refactoring: public boolean contains ( java.lang.String key ) { return ( get ( key ) ) != null ; }
fix_after_refactoring: public boolean hcpzjwwkwruezbbyfijj ( java.lang.String key ) { return ( get ( key ) ) != null ; }
√ fix_prediction_before: public boolean contains ( java.lang.String key ) { return ( get ( key ) ) != null ; }
× fix_prediction_after: public boolean hcpzjwwkwruezbbyfijj ( java.lang.String key ) { return ( hash ( key ) ) != null ; }

line_index: 1595
bug_before_refactoring: public void onStart () { super . onStart () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> public void onStart () { super . onStart () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> fix timestamp error
bug_after_refactoring: public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> fix timestamp error
fix_before_refactoring: public void onStart () { super . onStart () ; }
fix_after_refactoring: public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; }
√ fix_prediction_before: public void onStart () { super . onStart () ; }
× fix_prediction_after: public java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; }

line_index: 1596
bug_before_refactoring: private void setPlayer () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } } <s> private void setPlayer () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } } <s> Bug Fix in place piece in logic  For that if someone creates a mill at the end of phase 1 it would not allow them to remove a piece and the player label would then be incorrect. Now complete game plays as expected.
bug_after_refactoring: private void ocrwfngitklyatrsjagc () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } } <s> private void ocrwfngitklyatrsjagc () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } } <s> Bug Fix in place piece in logic  For that if someone creates a mill at the end of phase 1 it would not allow them to remove a piece and the player label would then be incorrect. Now complete game plays as expected.
fix_before_refactoring: public void setPlayer () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } }
fix_after_refactoring: public void ocrwfngitklyatrsjagc () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } }
√ fix_prediction_before: public void setPlayer () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } }
× fix_prediction_after: private void ocrwfngitklyatrsjagc () { playerTurn = 1 ; }

line_index: 1599
bug_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; mManager . release () ; wycliffeassociates.recordingapp.AudioVisualization.SectionMarkers . clearMarkers ( mManager ) ; } <s> @ java.lang.Override public void onPause () { super . onPause () ; mManager . release () ; wycliffeassociates.recordingapp.AudioVisualization.SectionMarkers . clearMarkers ( mManager ) ; } <s> Merge pull request #326 from WycliffeAssociates/jbs-bugfixes  Jbs bugfixes
bug_after_refactoring: @ java.lang.Override public void bgzoipilydpculijxiqb () { super . bgzoipilydpculijxiqb () ; mManager . release () ; wycliffeassociates.recordingapp.AudioVisualization.SectionMarkers . clearMarkers ( mManager ) ; } <s> @ java.lang.Override public void bgzoipilydpculijxiqb () { super . bgzoipilydpculijxiqb () ; mManager . release () ; wycliffeassociates.recordingapp.AudioVisualization.SectionMarkers . clearMarkers ( mManager ) ; } <s> Merge pull request #326 from WycliffeAssociates/jbs-bugfixes  Jbs bugfixes
fix_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override public void bgzoipilydpculijxiqb () { super . bgzoipilydpculijxiqb () ; }
√ fix_prediction_before: @ java.lang.Override public void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override public void bgzoipilydpculijxiqb () { mManager . release () ; wycliffeassociates.recordingapp.AudioVisualization.SectionMarkers . clearMarkers ( mManager ) ; super . bgzoipilydpculijxiqb () ; }

line_index: 1600
bug_before_refactoring: @ java.lang.Override public long getId () { return this . id ; } <s> @ java.lang.Override public long getId () { return this . id ; } <s> Fixing PriceImpl style issues
bug_after_refactoring: @ java.lang.Override public long awlswirklztucviayagc () { return this . id ; } <s> @ java.lang.Override public long awlswirklztucviayagc () { return this . id ; } <s> Fixing PriceImpl style issues
fix_before_refactoring: @ java.lang.Override public long getId () { return id ; }
fix_after_refactoring: @ java.lang.Override public long awlswirklztucviayagc () { return id ; }
√ fix_prediction_before: @ java.lang.Override public long getId () { return id ; }
× fix_prediction_after: @ java.lang.Override public long awlswirklztucviayagc () { return 0 ; }

line_index: 1601
bug_before_refactoring: @ java.lang.Override public java.lang.String name () { return de.uniulm.omi.cloudiator.sword.core.util.Name . of ( name ) . uniqueName () ; } <s> @ java.lang.Override public java.lang.String name () { return de.uniulm.omi.cloudiator.sword.core.util.Name . of ( name ) . uniqueName () ; } <s> Fixed naming error app/cloud/colosseum/BaseColosseumVirtualMachineTemplate.java
bug_after_refactoring: @ java.lang.Override public java.lang.String pklapsevdowlmulmoozs () { return de.uniulm.omi.cloudiator.sword.core.util.Name . of ( pklapsevdowlmulmoozs ) . uniqueName () ; } <s> @ java.lang.Override public java.lang.String pklapsevdowlmulmoozs () { return de.uniulm.omi.cloudiator.sword.core.util.Name . of ( pklapsevdowlmulmoozs ) . uniqueName () ; } <s> Fixed naming error app/cloud/colosseum/BaseColosseumVirtualMachineTemplate.java
fix_before_refactoring: @ java.lang.Override public java.lang.String name () { return name ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String pklapsevdowlmulmoozs () { return pklapsevdowlmulmoozs ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String name () { return name ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String pklapsevdowlmulmoozs () { return de.uniulm.omi.cloudiator.sword.core.util.Name . of ( pklapsevdowlmulmoozs ) ; }

line_index: 1604
bug_before_refactoring: public java.lang.String getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> public java.lang.String getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> Resolver problema Double.  Transacoes Default pelo primeiro caixa.
bug_after_refactoring: public java.lang.String huzaseugsmjjkvczaqgw () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> public java.lang.String huzaseugsmjjkvczaqgw () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> Resolver problema Double.  Transacoes Default pelo primeiro caixa.
fix_before_refactoring: public java.lang.Double getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return valorTotal ; }
fix_after_refactoring: public java.lang.Double huzaseugsmjjkvczaqgw () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return valorTotal ; }
√ fix_prediction_before: public java.lang.Double getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return valorTotal ; }
× fix_prediction_after: public java.lang.String huzaseugsmjjkvczaqgw () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; }

line_index: 1615
bug_before_refactoring: private void refresh () { data . clear () ; loadData () ; } <s> private void refresh () { data . clear () ; loadData () ; } <s> bugfix refresh tabelle
bug_after_refactoring: private void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; } <s> private void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; } <s> bugfix refresh tabelle
fix_before_refactoring: public void refresh () { data . clear () ; loadData () ; }
fix_after_refactoring: public void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; }
√ fix_prediction_before: public void refresh () { data . clear () ; loadData () ; }
× fix_prediction_after: private void aqlitrveivzanohlvawh () { data . clear () ; loadData ( true ) ; }

line_index: 1624
bug_before_refactoring: public static void increaseIndex () { ( comunicationStrings.index ) ++ ; if ( ( comunicationStrings.index ) > 255 ) comunicationStrings.index = 0 ; } <s> public static void increaseIndex () { ( comunicationStrings.index ) ++ ; if ( ( comunicationStrings.index ) > 255 ) comunicationStrings.index = 0 ; } <s> Fixed a problem where some users were not able to make a transaction
bug_after_refactoring: public static void wpvcepndlxenbnszdzyy () { ( comunicationStrings.index ) ++ ; if ( ( comunicationStrings.index ) > 255 ) comunicationStrings.index = 0 ; } <s> public static void wpvcepndlxenbnszdzyy () { ( comunicationStrings.index ) ++ ; if ( ( comunicationStrings.index ) > 255 ) comunicationStrings.index = 0 ; } <s> Fixed a problem where some users were not able to make a transaction
fix_before_refactoring: public static void increaseIndex () { ( comunicationStrings.index ) ++ ; }
fix_after_refactoring: public static void wpvcepndlxenbnszdzyy () { ( comunicationStrings.index ) ++ ; }
√ fix_prediction_before: public static void increaseIndex () { ( comunicationStrings.index ) ++ ; }
× fix_prediction_after: public static void wpvcepndlxenbnszdzyy () {}

line_index: 1642
bug_before_refactoring: private static native void nativeStopRtcEventLog ( long nativePeerConnection ) ; <s> private static native void nativeStopRtcEventLog ( long nativePeerConnection ) ; <s> Fix for the JNI interface of RtcEventLog functions.  BUG=webrtc:4741  Review-Url: https://codereview.webrtc.org/2128483002 Cr-Commit-Position: refs/heads/master@{#13393}
bug_after_refactoring: private static native void fcsefncbzkkumrwantnv ( long nativePeerConnection ) ; <s> private static native void fcsefncbzkkumrwantnv ( long nativePeerConnection ) ; <s> Fix for the JNI interface of RtcEventLog functions.  BUG=webrtc:4741  Review-Url: https://codereview.webrtc.org/2128483002 Cr-Commit-Position: refs/heads/master@{#13393}
fix_before_refactoring: private native void nativeStopRtcEventLog ( ) ;
fix_after_refactoring: private native void fcsefncbzkkumrwantnv ( ) ;
√ fix_prediction_before: private native void nativeStopRtcEventLog ( ) ;
× fix_prediction_after: private native void fcsefncbzkkumrwantnv ( long nativePeerConnection ) ;

line_index: 1664
bug_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
bug_after_refactoring: public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
fix_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
fix_after_refactoring: public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
√ fix_prediction_before: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
× fix_prediction_after: public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; sendOnlyOnce = false ; }

line_index: 1681
bug_before_refactoring: public void skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> public void skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> Fixed state tracking issues when the queue finishes playing
bug_after_refactoring: public void ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> public void ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> Fixed state tracking issues when the queue finishes playing
fix_before_refactoring: public boolean skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
fix_after_refactoring: public boolean ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
√ fix_prediction_before: public boolean skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
× fix_prediction_after: public boolean isEmpty () { return ( player ) == null ; }

line_index: 1690
bug_before_refactoring: private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
bug_after_refactoring: private void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; } <s> private void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
fix_before_refactoring: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
fix_after_refactoring: public void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; }
√ fix_prediction_before: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
× fix_prediction_after: private void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; }

line_index: 1695
bug_before_refactoring: public java.lang.String getName () { throw new java.lang.UnsupportedOperationException () ; } <s> public java.lang.String getName () { throw new java.lang.UnsupportedOperationException () ; } <s> Feat: build in class Actor released.  Fix: tests for class Actor debugged.
bug_after_refactoring: public java.lang.String rqhbcfwyblqxwigyvdgh () { throw new java.lang.UnsupportedOperationException () ; } <s> public java.lang.String rqhbcfwyblqxwigyvdgh () { throw new java.lang.UnsupportedOperationException () ; } <s> Feat: build in class Actor released.  Fix: tests for class Actor debugged.
fix_before_refactoring: public java.lang.String getName () { return name ; }
fix_after_refactoring: public java.lang.String rqhbcfwyblqxwigyvdgh () { return name ; }
√ fix_prediction_before: public java.lang.String getName () { return name ; }
× fix_prediction_after: public java.lang.String rqhbcfwyblqxwigyvdgh () { return null ; }

line_index: 1708
bug_before_refactoring: public static java.lang.String getStartTime () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.startTime ; } <s> public static java.lang.String getStartTime () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.startTime ; } <s> fixed issue where repeat block session appears
bug_after_refactoring: public static java.lang.String goophvefsjxbeffzzasd () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.startTime ; } <s> public static java.lang.String goophvefsjxbeffzzasd () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.startTime ; } <s> fixed issue where repeat block session appears
fix_before_refactoring: public java.lang.String getStartTime () { return startTime ; }
fix_after_refactoring: public java.lang.String goophvefsjxbeffzzasd () { return startTime ; }
√ fix_prediction_before: public java.lang.String getStartTime () { return startTime ; }
× fix_prediction_after: public java.lang.String goophvefsjxbeffzzasd () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.startTime . toString () ; }

line_index: 1712
bug_before_refactoring: public boolean canResume () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> public boolean canResume () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> - fixed a launching bug that could delete existing configurations
bug_after_refactoring: public boolean xjzgsyaigvrnxwmsgnno () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> public boolean xjzgsyaigvrnxwmsgnno () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> - fixed a launching bug that could delete existing configurations
fix_before_refactoring: public boolean canResume () { return false ; }
fix_after_refactoring: public boolean xjzgsyaigvrnxwmsgnno () { return false ; }
√ fix_prediction_before: public boolean canResume () { return false ; }
× fix_prediction_after: public boolean xjzgsyaigvrnxwmsgnno () { return isTerminated () ? false : isSuspended () ; }

line_index: 1714
bug_before_refactoring: @ java.lang.Override protected void onDestroy () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . onDestroy () ; } <s> @ java.lang.Override protected void onDestroy () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . onDestroy () ; } <s> Add glide & Fix bitmap recycle issue  - Add glide library in dependencies - Fix recycled bitmap issue with glide
bug_after_refactoring: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . aocwvuczgvqgerjyonzm () ; } <s> @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . aocwvuczgvqgerjyonzm () ; } <s> Add glide & Fix bitmap recycle issue  - Add glide library in dependencies - Fix recycled bitmap issue with glide
fix_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { super . aocwvuczgvqgerjyonzm () ; }
√ fix_prediction_before: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
× fix_prediction_after: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; super . aocwvuczgvqgerjyonzm () ; }

line_index: 1728
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
bug_after_refactoring: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) {}
√ fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) {}
× fix_prediction_after: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) { togglePostButtons ( true ) ; }

line_index: 1734
bug_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> @ java.lang.Override public void onPause () { super . onPause () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> Fixed print preview bug
bug_after_refactoring: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; com.example.nicco.inspectionReviewManager.customDatatypes.Model model = ( ( com.example.nicco.inspectionReviewManager.customDatatypes.Model ) ( getApplicationContext () ) ) ; model . reset () ; } <s> Fixed print preview bug
fix_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; }
√ fix_prediction_before: @ java.lang.Override public void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override public void xohrhpckyfktlajxzwjr () { super . xohrhpckyfktlajxzwjr () ; reset () ; }

line_index: 1744
bug_before_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> Fixed issue #4273
bug_after_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ; <s> Fixed issue #4273
fix_before_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
fix_after_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ;
√ fix_prediction_before: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
× fix_prediction_after: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ;

line_index: 1746
bug_before_refactoring: @ java.lang.Override public void run () { return average ; } <s> @ java.lang.Override public void run () { return average ; } <s> recorder Error Resolved
bug_after_refactoring: @ java.lang.Override public void ztduufmqqmwfnxssbeay () { return average ; } <s> @ java.lang.Override public void ztduufmqqmwfnxssbeay () { return average ; } <s> recorder Error Resolved
fix_before_refactoring: @ java.lang.Override public void run () {}
fix_after_refactoring: @ java.lang.Override public void ztduufmqqmwfnxssbeay () {}
√ fix_prediction_before: @ java.lang.Override public void run () {}
× fix_prediction_after: @ java.lang.Override public void ztduufmqqmwfnxssbeay () { average . set ( 0 ) ; }

line_index: 1750
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ java.lang.Override public G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
√ fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { return new app2dpcimpl.geometry.PVD2DImpl ( v . x , v . y () ) ; }

line_index: 1758
bug_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> Wall Glitch Fixed  Glitching into the field has been fixed. Some major bugs still remain like the score which is messed up.
bug_after_refactoring: @ java.lang.Override public void halqakujvjjeqlrmarkw ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> @ java.lang.Override public void halqakujvjjeqlrmarkw ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> Wall Glitch Fixed  Glitching into the field has been fixed. Some major bugs still remain like the score which is messed up.
fix_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) {}
fix_after_refactoring: @ java.lang.Override public void halqakujvjjeqlrmarkw ( java.awt.event.KeyEvent e ) {}
√ fix_prediction_before: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) {}
× fix_prediction_after: @ java.lang.Override public void halqakujvjvjjeqlrmarkw ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } model.timeAmplifier = 1 ; break; }

line_index: 1777
bug_before_refactoring: public java.lang.String getUrl () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> public java.lang.String getUrl () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> Bug fixes
bug_after_refactoring: public java.lang.String apongfesugekougokqjd () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> public java.lang.String apongfesugekougokqjd () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> Bug fixes
fix_before_refactoring: public java.lang.String getUrl () { return url ; }
fix_after_refactoring: public java.lang.String apongfesugekougokqjd () { return url ; }
√ fix_prediction_before: public java.lang.String getUrl () { return url ; }
× fix_prediction_after: public java.lang.String apongfesugekougokqjd () { return null ; }

line_index: 1782
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> fixed rental and return duplicate response bug
bug_after_refactoring: public void aqdyxwqfcwhlhgapinmx ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> public void aqdyxwqfcwhlhgapinmx ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> fixed rental and return duplicate response bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
fix_after_refactoring: public void aqdyxwqfcwhlhgapinmx ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
× fix_prediction_after: public void aqdyxwqfcwhlhgapinmx ( java.awt.event.ActionEvent event ) {}

line_index: 1784
bug_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
bug_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
fix_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
fix_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
√ fix_prediction_before: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
× fix_prediction_after: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; }

line_index: 1800
bug_before_refactoring: public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
bug_after_refactoring: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { this . name = name ; }
√ fix_prediction_before: public void setName ( java.lang.String name ) { this . name = name ; }
× fix_prediction_after: public void wylyzljlzvrlfxaojpgq ( java.lang.String name ) { if ( name != null ) { this . name = name . trim () ; } }

line_index: 1806
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
× fix_prediction_after: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( parent ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; }

line_index: 1807
bug_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
bug_after_refactoring: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , b.length ) ; } <s> public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
fix_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , 0 , b.length ) ; }
fix_after_refactoring: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , 0 , b.length ) ; }
√ fix_prediction_before: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , 0 , b.length ) ; }
× fix_prediction_after: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , 0 ) ; }

line_index: 1830
bug_before_refactoring: public int addUser ( java.lang.String name , java.lang.String password ) {} <s> public int addUser ( java.lang.String name , java.lang.String password ) {} <s> Fixed some errors due to deprecation  some suppressed.
bug_after_refactoring: public int mtazdbnekrwzdmdiiiqq ( java.lang.String name , java.lang.String password ) {} <s> public int mtazdbnekrwzdmdiiiqq ( java.lang.String name , java.lang.String password ) {} <s> Fixed some errors due to deprecation  some suppressed.
fix_before_refactoring: { return 0 ; }
fix_after_refactoring: { return 0 ; }
√ fix_prediction_before: { return 0 ; }
× fix_prediction_after: { return - 1 ; }

line_index: 1856
bug_before_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> Fixed bug at UCreativeTab
bug_after_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void pvfowtjdgsoyvipnqwpc ( test.FMLPostInitializationEvent event ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void pvfowtjdgsoyvipnqwpc ( test.FMLPostInitializationEvent event ) {} <s> Fixed bug at UCreativeTab
fix_before_refactoring: { super . postinit ( event ) ; }
fix_after_refactoring: { super . pvfowtjdgsoyvipnqwpc ( event ) ; }
√ fix_prediction_before: { super . postinit ( event ) ; }
× fix_prediction_after: { x *= - 1 ; }

line_index: 1868
bug_before_refactoring: public java.lang.String getSerialNumber () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> public java.lang.String getSerialNumber () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> Change encoding from x-windows to UTF-8  Change layout and fix the bug of sending redundant reply.  Change dialog dismiss() to cancel() because of extra dialog showing on screen if onStop() is invoked.
bug_after_refactoring: public java.lang.String psqxhmrgahhxqaowsopu () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> public java.lang.String psqxhmrgahhxqaowsopu () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> Change encoding from x-windows to UTF-8  Change layout and fix the bug of sending redundant reply.  Change dialog dismiss() to cancel() because of extra dialog showing on screen if onStop() is invoked.
fix_before_refactoring: public java.lang.String getSerialNumber () { return serialNum ; }
fix_after_refactoring: public java.lang.String psqxhmrgahhxqaowsopu () { return serialNum ; }
√ fix_prediction_before: public java.lang.String getSerialNumber () { return serialNum ; }
× fix_prediction_after: public java.lang.String psqxhmrgahhxqaowsopu () { return "Unchecked" ; }

line_index: 1876
bug_before_refactoring: void loadOrderData ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; orderHistory = orderSubsystem . getOrderHistory () ; business.customersubsystem.CustomerSubsystemFacade.LOGGER . info ( ( "total count of order history = " + ( orderHistory . size () ) ) ) ; } <s> void loadOrderData ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; orderHistory = orderSubsystem . getOrderHistory () ; business.customersubsystem.CustomerSubsystemFacade.LOGGER . info ( ( "total count of order history =  " + ( orderHistory . size () ) ) ) ; } <s> Review orders issue resolved! changes made in viewOrderData and viewOrderControl and Util.java. Works fine!
bug_after_refactoring: void gufwsxvgpniuubumqcbn ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; orderHistory = orderSubsystem . getOrderHistory () ; business.customersubsystem.CustomerSubsystemFacade.LOGGER . info ( ( "total count of order history = " + ( orderHistory . size () ) ) ) ; } <s> void loadOrderData ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; orderHistory = orderSubsystem . getOrderHistory () ; business.customersubsystem.CustomerSubsystemFacade.LOGGER . info ( ( "total count of order history =  " + ( orderHistory . size () ) ) ) ; } <s> Review orders issue resolved! changes made in viewOrderData and viewOrderControl and Util.java. Works fine!
fix_before_refactoring: void loadOrderData ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; }
fix_after_refactoring: void gufwsxvgpniuubumqcbn ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; }
√ fix_prediction_before: void loadOrderData ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; }
× fix_prediction_after: void loadOrderData ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; }

line_index: 1922
bug_before_refactoring: @ org.junit.Test public void testGenerateCombos ( ) throws java.lang.Exception { java.util.List < java.lang.String > tsRespContainer = telephoneService . getPaginatedCombinations ( 36 , 1 , 3 ) ; } <s> @ org.junit.Test public void testGenerateCombos ( ) throws java.lang.Exception { java.util.List < java.lang.String > tsRespContainer = telephoneService . getPaginatedCombinations ( 36 , 1 , 3 ) ; } <s> Fix String Integer converting problem
bug_after_refactoring: @ org.junit.Test public void tgogntkdmypbahgcwyoz ( ) throws java.lang.Exception { java.util.List < java.lang.String > tsRespContainer = telephoneService . getPaginatedCombinations ( 36 , 1 , 3 ) ; } <s> @ org.junit.Test public void tgogntkdmypbahgcwyoz ( ) throws java.lang.Exception { java.util.List < java.lang.String > tsRespContainer = telephoneService . getPaginatedCombinations ( 36 , 1 , 3 ) ; } <s> Fix String Integer converting problem
fix_before_refactoring: @ org.junit.Test public void testGenerateCombos ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.Test public void tgogntkdmypbahgcwyoz ( ) throws java.lang.Exception {}
√ fix_prediction_before: @ org.junit.Test public void testGenerateCombos ( ) throws java.lang.Exception {}
× fix_prediction_after: @ org.junit.Test public void tgogntkdmypbahgcwyoz ( ) throws java.lang.Exception { java.util.List < java.lang.Integer > tsRespContainer = telephoneService . getPaginatedCombinations ( 36 , 1 , 3 ) ; }

line_index: 1930
bug_before_refactoring: @ java.lang.Override public void run () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> @ java.lang.Override public void run () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> Fixed bug that could not fetch transaction history from in-memory
bug_after_refactoring: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> Fixed bug that could not fetch transaction history from in-memory
fix_before_refactoring: @ java.lang.Override public void run () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
fix_after_refactoring: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
× fix_prediction_after: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP , null ) ; }

line_index: 1931
bug_before_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> Fixed rotation issues and ship loading issues
bug_after_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> Fixed rotation issues and ship loading issues
fix_before_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return theShipWorldServer . OriginWorld () . playerEntities ; }
fix_after_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return theShipWorldServer . OriginWorld () . playerEntities ; }
√ fix_prediction_before: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return theShipWorldServer . OriginWorld () . playerEntities ; }
× fix_prediction_after: public java.lang.String nyvccbympogehdybvzpb () { return theShipWorldServer . OriginWorld () . playerEntities ; }

line_index: 1946
bug_before_refactoring: private boolean jj_3R_106 () { com.orientechnologies.orient.core.sql.parser.Token xsp ; xsp = jj_scanpos ; if ( jj_3R_228 () ) { jj_scanpos = xsp ; if ( jj_3R_229 () ) return true ; } return false ; } <s> private boolean jj_3R_106 () { com.orientechnologies.orient.core.sql.parser.Token xsp ; xsp = jj_scanpos ; if ( jj_3R_228 () ) { jj_scanpos = xsp ; if ( jj_3R_229 () ) return true ; } return false ; } <s> fixed issue #3718 - new parser did not properly recognize complex targets
bug_after_refactoring: private boolean itrvtuhkdjdabwhklaco () { com.orientechnologies.orient.core.sql.parser.Token xsp ; xsp = jj_scanpos ; if ( jj_3R_228 () ) { jj_scanpos = xsp ; if ( jj_3R_229 () ) return true ; } return false ; } <s> private boolean itrvtuhkdjdabwhklaco () { com.orientechnologies.orient.core.sql.parser.Token xsp ; xsp = jj_scanpos ; if ( jj_3R_228 () ) { jj_scanpos = xsp ; if ( jj_3R_229 () ) return true ; } return false ; } <s> fixed issue #3718 - new parser did not properly recognize complex targets
fix_before_refactoring: private boolean jj_3R_106 () { if ( jj_3R_229 () ) return true ; return false ; }
fix_after_refactoring: private boolean itrvtuhkdjdabwhklaco () { if ( jj_3R_229 () ) return true ; return false ; }
√ fix_prediction_before: private boolean jj_3R_106 () { if ( jj_3R_229 () ) return true ; return false ; }
× fix_prediction_after: public boolean itrvtuhkdjdabwhklaco () { com.orientechnologies.orient.core.sql.parser.Token xsp ; xsp = jj_scanpos ; if ( jj_3R_228 () ) { jj_scanpos = xsp ; if ( jj_3R_229 () ) return true ; } return false ; }

line_index: 1971
bug_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
fix_after_refactoring: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
√ fix_prediction_before: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
× fix_prediction_after: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; }

line_index: 1982
bug_before_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
bug_after_refactoring: public boolean akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
fix_before_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
fix_after_refactoring: public void akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
√ fix_prediction_before: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
× fix_prediction_after: public boolean akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { return save () ; }

line_index: 1993
bug_before_refactoring: @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
bug_after_refactoring: @ java.lang.Override public void wgiyuyimlxzeabezutun ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void wgiyuyimlxzeabezutun ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
fix_before_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
fix_after_refactoring: @ java.lang.Override public void wgiyuyimlxzeabezutun ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
√ fix_prediction_before: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_after: @ java.lang.Override public void wgiyuyimlxzeabezutun ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) {}

line_index: 1997
bug_before_refactoring: @ java.lang.Override public int hashCode () { return ( ( m_identifier . hashCode () ) ^ ( m_properties . hashCode () ) ) ^ ( m_value . hashCode () ) ; } <s> @ java.lang.Override public int hashCode () { return ( ( m_identifier . hashCode () ) ^ ( m_properties . hashCode () ) ) ^ ( m_value . hashCode () ) ; } <s> Clean up Reference class a bit.  * Fix some documentation errors. * refactor Format function to avoid copying strings repeatedly with .Replace
bug_after_refactoring: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return ( ( m_identifier . eutbbmjcaxsetohodszy () ) ^ ( m_properties . eutbbmjcaxsetohodszy () ) ) ^ ( m_value . eutbbmjcaxsetohodszy () ) ; } <s> @ java.lang.Override public int eutbbmjcaxsetohodszy () { return ( ( m_identifier . eutbbmjcaxsetohodszy () ) ^ ( m_properties . eutbbmjcaxsetohodszy () ) ) ^ ( m_value . eutbbmjcaxsetohodszy () ) ; } <s> Clean up Reference class a bit.  * Fix some documentation errors. * refactor Format function to avoid copying strings repeatedly with .Replace
fix_before_refactoring: @ java.lang.Override public int hashCode () { return m_value . hashCode () ; }
fix_after_refactoring: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return m_value . eutbbmjcaxsetohodszy () ; }
√ fix_prediction_before: @ java.lang.Override public int hashCode () { return m_value . hashCode () ; }
× fix_prediction_after: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return m_identifier . eutbbmjcaxsetohodszy () ; }

line_index: 2016
bug_before_refactoring: @ java.lang.Override public void onSearchViewClosed () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> @ java.lang.Override public void onSearchViewClosed () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> + fix some bugs
bug_after_refactoring: @ java.lang.Override public void teeevlfsawqxswhrbwzs () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> @ java.lang.Override public void teeevlfsawqxswhrbwzs () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> + fix some bugs
fix_before_refactoring: @ java.lang.Override public void onSearchViewClosed () {}
fix_after_refactoring: @ java.lang.Override public void teeevlfsawqxswhrbwzs () {}
√ fix_prediction_before: @ java.lang.Override public void onSearchViewClosed () {}
× fix_prediction_after: @ java.lang.Override public void teeevlfsawqxswhrbwzs () { if ( ( fragmentWorkRecycler ) != null ) { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } }

line_index: 2018
bug_before_refactoring: private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> Fixing bugs
bug_after_refactoring: private static native void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> private static native void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
fix_after_refactoring: private static void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) {}
√ fix_prediction_before: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
× fix_prediction_after: private static native void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) ;

line_index: 2023
bug_before_refactoring: public double getSubTotalPrice ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> public double getSubTotalPrice ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> fixe quelques bugs mineurs
bug_after_refactoring: public double auykhpratyybhykfwmbd ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> public double auykhpratyybhykfwmbd ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> fixe quelques bugs mineurs
fix_before_refactoring: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
fix_after_refactoring: public double auykhpratyybhykfwmbd ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
√ fix_prediction_before: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
× fix_prediction_after: public double auykhpratyybhykfwmbd ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; return subTotalPrice ; }

line_index: 2024
bug_before_refactoring: public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> Fixing minor issue with the visit - with interval
bug_after_refactoring: public void oypvnmwerjaamzsxvffy ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> public void oypvnmwerjaamzsxvffy ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> Fixing minor issue with the visit - with interval
fix_before_refactoring: public void addAttributeName ( java.lang.String attributeName ) { if ( ! ( getAttributeNames () . contains ( attributeName ) ) ) { getAttributeNames () . add ( attributeName ) ; } }
fix_after_refactoring: public void oypvnmwerjaamzsxvffy ( java.lang.String attributeName ) { if ( ! ( getAttributeNames () . contains ( attributeName ) ) ) { getAttributeNames () . add ( attributeName ) ; } }
√ fix_prediction_before: public void addAttributeName ( java.lang.String attributeName ) { if ( ! ( getAttributeNames () . contains ( attributeName ) ) ) { getAttributeNames () . add ( attributeName ) ; } }
× fix_prediction_after: public void oypvnmwerjaamzsxvffy ( java.lang.String attributeName ) { if ( attributeName != null ) { getAttributeNames () . add ( attributeName ) ; } }

line_index: 2028
bug_before_refactoring: private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
bug_after_refactoring: private void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> private void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
fix_before_refactoring: public void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
fix_after_refactoring: public void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
√ fix_prediction_before: public void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
× fix_prediction_after: private void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) {}

line_index: 2033
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
bug_after_refactoring: public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
fix_after_refactoring: public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
× fix_prediction_after: public void uepxutuovzynrrplxc ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }

line_index: 2044
bug_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
bug_after_refactoring: @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
fix_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
fix_after_refactoring: @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
√ fix_prediction_before: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
× fix_prediction_after: @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { if ( ( categoryList ) != null ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } }

line_index: 2048
bug_before_refactoring: @ java.lang.Override public void onLastItemVisible () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> @ java.lang.Override public void onLastItemVisible () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> fix bug 1.产品以及机构专题列表加载更多重复　２.产品专题点击内容页崩溃
bug_after_refactoring: @ java.lang.Override public void bjaatliruhvypwmwarcb () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> @ java.lang.Override public void bjaatliruhvypwmwarcb () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> fix bug 1.产品以及机构专题列表加载更多重复　２.产品专题点击内容页崩溃
fix_before_refactoring: @ java.lang.Override public void onLastItemVisible () {}
fix_after_refactoring: @ java.lang.Override public void bjaatliruhvypwmwarcb () {}
√ fix_prediction_before: @ java.lang.Override public void onLastItemVisible () {}
× fix_prediction_after: @ java.lang.Override public void bjaatliruhvypwmwarcb () { mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( 0 ) , mRefreshMoreListener , mRefreshErroListener ) ) ; }

line_index: 2068
bug_before_refactoring: public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
bug_after_refactoring: public static void tofvxigrkkrhtiylrhxx ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void tofvxigrkkrhtiylrhxx ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
fix_before_refactoring: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
fix_after_refactoring: public static void tofvxigrkkrhtiylrhxx ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
√ fix_prediction_before: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
× fix_prediction_after: public static void tofvxigrkkrhtiylrhxx ( java.lang.String [] args ) {}

line_index: 2076
bug_before_refactoring: private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> Fixed issue with units not being paired in the Batch Edit form
bug_after_refactoring: private static int lueomgghpbwqhguysheo ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> private static int lueomgghpbwqhguysheo ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> Fixed issue with units not being paired in the Batch Edit form
fix_before_refactoring: public static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; }
fix_after_refactoring: public static int lueomgghpbwqhguysheo ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; }
√ fix_prediction_before: public static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; }
× fix_prediction_after: private static long lueomgghpbwqhguysheo ( long min , long max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextLong ( min , ( max + 1 ) ) ; }

line_index: 2077
bug_before_refactoring: protected static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> protected static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> v1.2.0 : Fixed issue #12
bug_after_refactoring: protected static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> protected static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> v1.2.0 : Fixed issue #12
fix_before_refactoring: public static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
fix_after_refactoring: public static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
√ fix_prediction_before: public static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
× fix_prediction_after: protected static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }

