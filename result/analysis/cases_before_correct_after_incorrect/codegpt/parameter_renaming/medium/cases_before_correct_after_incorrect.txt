line_index: 7
bug_before_refactoring: private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } <s> private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } <s> Merge pull request #239 from Armageddon-/issue_inner_DirectRestService  Add test for inner DirectRestService interface  and fix
bug_after_refactoring: private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType fslvraqizfjqzfgfzzxa ) { if ( ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) != null ) { return ( ( getName ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) ) + "_" ) + ( fslvraqizfjqzfgfzzxa . getSimpleSourceName () ) ; } return fslvraqizfjqzfgfzzxa . getSimpleSourceName () ; } <s> private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType fslvraqizfjqzfgfzzxa ) { if ( ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) != null ) { return ( ( getName ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) ) + "_" ) + ( fslvraqizfjqzfgfzzxa . getSimpleSourceName () ) ; } return fslvraqizfjqzfgfzzxa . getSimpleSourceName () ; } <s> Merge pull request #239 from Armageddon-/issue_inner_DirectRestService  Add test for inner DirectRestService interface  and fix
fix_before_refactoring: protected java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; }
fix_after_refactoring: protected java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType fslvraqizfjqzfgfzzxa ) { if ( ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) != null ) { return ( ( getName ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) ) + "_" ) + ( fslvraqizfjqzfgfzzxa . getSimpleSourceName () ) ; } return fslvraqizfjqzfgfzzxa . getSimpleSourceName () ; }
√ fix_prediction_before: protected java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; }
× fix_prediction_after: public java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType fslvraqizfjqzfgfzzxa ) { if ( ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) != null ) { return ( ( getName ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) ) + "_" ) + ( fslvraqizfjqzfgfzzxa . getSimpleSourceName () ) ; } return fslvraqizfjqzfgfzzxa . getSimpleSourceName () ; }

line_index: 14
bug_before_refactoring: private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> add structuregenerator and fix display dimensions bug
bug_after_refactoring: private void updateCell ( int txcbmtnrdhhuvzawsvhy , int maqklzmeulthqbpyrmjp ) { javafx.scene.shape.Rectangle r = getRectangle ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ; if ( game . isAlive ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> private void updateCell ( int txcbmtnrdhhuvzawsvhy , int maqklzmeulthqbpyrmjp ) { javafx.scene.shape.Rectangle r = getRectangle ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ; if ( game . isAlive ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> add structuregenerator and fix display dimensions bug
fix_before_refactoring: private void updateCell ( int x , int y ) { javafx.scene.shape.Rectangle r = getRectangle ( x , y ) ; if ( game . isAlive ( x , y ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
fix_after_refactoring: private void updateCell ( int x , int y ) { javafx.scene.shape.Rectangle r = getRectangle ( x , y ) ; if ( game . isAlive ( x , y ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
√ fix_prediction_before: private void updateCell ( int x , int y ) { javafx.scene.shape.Rectangle r = getRectangle ( x , y ) ; if ( game . isAlive ( x , y ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
× fix_prediction_after: private void updateCell ( int txcbmtnrdhhuvzawsvhy , int maqklzmeulthqbpyrmjp ) { javafx.scene.shape.Rectangle r = getRectangle ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ; r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; }

line_index: 23
bug_before_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
bug_after_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } } return null ; } <s> public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } } return null ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
fix_before_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
fix_after_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return tTemp ; } } return null ; }
√ fix_prediction_before: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
× fix_prediction_after: public static com.sb.elsinore.Temp findTemp ( final java.lang.String ndfthcpkfhlrvpnfujtd ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( ndfthcpkfhlrvpnfujtd ) ) ) { return

line_index: 56
bug_before_refactoring: public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } <s> public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } <s> Fixed bug that caused menus to randomly lose all of their data. Signed-off-by:TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy tuhkymtzptchgkuxkpyp , int hqhwyrmsrzmntjosqjzl , int vptmhnvzclntngtxhusk , build.games.wraithaven.gui.MenuComponentHeirarchy [] crbcpyrqbgwwkcvlmwxy ) { if ( hqhwyrmsrzmntjosqjzl == vptmhnvzclntngtxhusk ) { crbcpyrqbgwwkcvlmwxy [ 0 ] = tuhkymtzptchgkuxkpyp ; return - 1 ; } vptmhnvzclntngtxhusk ++ ; if ( ! ( tuhkymtzptchgkuxkpyp . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : tuhkymtzptchgkuxkpyp . getChildren () ) { vptmhnvzclntngtxhusk = getByIndex ( c , hqhwyrmsrzmntjosqjzl , vptmhnvzclntngtxhusk , crbcpyrqbgwwkcvlmwxy ) ; if ( vptmhnvzclntngtxhusk == ( - 1 ) ) { return - 1 ; } } } return vptmhnvzclntngtxhusk ; } <s> public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy tuhkymtzptchgkuxkpyp , int hqhwyrmsrzmntjosqjzl , int vptmhnvzclntngtxhusk , build.games.wraithaven.gui.MenuComponentHeirarchy [] crbcpyrqbgwwkcvlmwxy ) { if ( hqhwyrmsrzmntjosqjzl == vptmhnvzclntngtxhusk ) { crbcpyrqbgwwkcvlmwxy [ 0 ] = tuhkymtzptchgkuxkpyp ; return - 1 ; } vptmhnvzclntngtxhusk ++ ; if ( ! ( tuhkymtzptchgkuxkpyp . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : tuhkymtzptchgkuxkpyp . getChildren () ) { vptmhnvzclntngtxhusk = getByIndex ( c , hqhwyrmsrzmntjosqjzl , vptmhnvzclntngtxhusk , crbcpyrqbgwwkcvlmwxy ) ; if ( vptmhnvzclntngtxhusk == ( - 1 ) ) { return - 1 ; } } } return vptmhnvzclntngtxhusk ; } <s> Fixed bug that caused menus to randomly lose all of their data. Signed-off-by:TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: private int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; }
fix_after_refactoring: private int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy tuhkymtzptchgkuxkpyp , int hqhwyrmsrzmntjosqjzl , int vptmhnvzclntngtxhusk , build.games.wraithaven.gui.MenuComponentHeirarchy [] crbcpyrqbgwwkcvlmwxy ) { if ( hqhwyrmsrzmntjosqjzl == vptmhnvzclntngtxhusk ) { crbcpyrqbgwwkcvlmwxy [ 0 ] = tuhkymtzptchgkuxkpyp ; return - 1 ; } vptmhnvzclntngtxhusk ++ ; if ( ! ( tuhkymtzptchgkuxkpyp . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : tuhkymtzptchgkuxkpyp . getChildren () ) { vptmhnvzclntngtxhusk = getByIndex ( c , hqhwyrmsrzmntjosqjzl , vptmhnvzclntngtxhusk , crbcpyrqbgwwkcvlmwxy ) ; if ( vptmhnvzclntngtxhusk == ( - 1 ) ) { return - 1 ; } } } return vptmhnvzclntngtxhusk ; }
√ fix_prediction_before: private int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; }
× fix_prediction_after: public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy tuhkymtzptchgkuxkpyp , int hqhwyrmsrzmntjosqjzl , int vptmhnvzclntngtxhusk , build.games.wraithaven.gui.MenuComponentHeirarchy [] crbcpyrqbgwwkcvlmwxy ) { if ( ! ( tuhkymtzptchgkuxkpyp . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : tuhkymtzptchgkuxkpyp . getChildren () ) { vptm

line_index: 71
bug_before_refactoring: private static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> private static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> Fixing AttributeNormalizerTest to use real 'user.home'  + Removing many debug lines + Resolving System.getProperty("user.home") to real system path   before using it in the test case
bug_after_refactoring: private static java.lang.String toSystemPath ( java.lang.String xjztawvxtiuxfqddhneg ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( xjztawvxtiuxfqddhneg ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> private static java.lang.String toSystemPath ( java.lang.String xjztawvxtiuxfqddhneg ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( xjztawvxtiuxfqddhneg ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> Fixing AttributeNormalizerTest to use real 'user.home'  + Removing many debug lines + Resolving System.getProperty("user.home") to real system path   before using it in the test case
fix_before_refactoring: public static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }
fix_after_refactoring: public static java.lang.String toSystemPath ( java.lang.String xjztawvxtiuxfqddhneg ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( xjztawvxtiuxfqddhneg ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }
√ fix_prediction_before: public static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }
× fix_prediction_after: private static java.lang.String toSystemPath ( java.lang.String xjztawvxtiuxfqddhneg ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( xjztawvxtiuxfqddhneg ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }

line_index: 95
bug_before_refactoring: public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> EWOK-87 #code-review BUGFIX #comment  zoomFitAll custom zoom value is converted to the closest available in our possible zoom levels
bug_after_refactoring: public float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> public float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> EWOK-87 #code-review BUGFIX #comment  zoomFitAll custom zoom value is converted to the closest available in our possible zoom levels
fix_before_refactoring: private float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
fix_after_refactoring: private float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
√ fix_prediction_before: private float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
× fix_prediction_after: public float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }

line_index: 101
bug_before_refactoring: private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } <s> private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } <s> Merge pull request #1933 from RestComm/issue-1456  fixed #1456
bug_after_refactoring: private java.lang.String getAccountsUrl ( java.lang.String odaiwyazoevowckssudu , java.lang.String sgwgudlmacpyabjdmooi ) { if ( odaiwyazoevowckssudu . endsWith ( "/" ) ) { odaiwyazoevowckssudu = odaiwyazoevowckssudu . substring ( 0 , ( ( odaiwyazoevowckssudu . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( odaiwyazoevowckssudu + "/2012-04-24/Accounts/" ) + sgwgudlmacpyabjdmooi ) + "/Supervisor.json" ; return accountsUrl ; } <s> private java.lang.String getAccountsUrl ( java.lang.String odaiwyazoevowckssudu , java.lang.String sgwgudlmacpyabjdmooi ) { if ( odaiwyazoevowckssudu . endsWith ( "/" ) ) { odaiwyazoevowckssudu = odaiwyazoevowckssudu . substring ( 0 , ( ( odaiwyazoevowckssudu . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( odaiwyazoevowckssudu + "/2012-04-24/Accounts/" ) + sgwgudlmacpyabjdmooi ) + "/Supervisor.json" ; return accountsUrl ; } <s> Merge pull request #1933 from RestComm/issue-1456  fixed #1456
fix_before_refactoring: public java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; }
fix_after_refactoring: public java.lang.String getAccountsUrl ( java.lang.String odaiwyazoevowckssudu , java.lang.String sgwgudlmacpyabjdmooi ) { if ( odaiwyazoevowckssudu . endsWith ( "/" ) ) { odaiwyazoevowckssudu = odaiwyazoevowckssudu . substring ( 0 , ( ( odaiwyazoevowckssudu . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( odaiwyazoevowckssudu + "/2012-04-24/Accounts/" ) + sgwgudlmacpyabjdmooi ) + "/Supervisor.json" ; return accountsUrl ; }
√ fix_prediction_before: public java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; }
× fix_prediction_after: private java.lang.String getAccountsUrl ( java.lang.String odaiwyazoevowckssudu ) { if ( odaiwyazoevowckssudu . endsWith ( "/" ) ) { odaiwyazoevowckssudu = odaiwyazoevowckssudu . substring ( 0 , ( ( odaiwyazoevowckssudu . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( odaiwyazoevowckssudu + "/2012-04-24/Accounts/" ) + odaiwyazoevowckssudu ) + "/Supervisor.json" ; return accountsUrl ; }

line_index: 112
bug_before_refactoring: public static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> public static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> before delete of test stuff to solve dex problem
bug_after_refactoring: public static java.lang.String getStringResponse ( java.io.InputStream xexlrnyojakkictjvwmj ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( xexlrnyojakkictjvwmj ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> public static java.lang.String getStringResponse ( java.io.InputStream xexlrnyojakkictjvwmj ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( xexlrnyojakkictjvwmj ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> before delete of test stuff to solve dex problem
fix_before_refactoring: private static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
fix_after_refactoring: private static java.lang.String getStringResponse ( java.io.InputStream xexlrnyojakkictjvwmj ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( xexlrnyojakkictjvwmj ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
√ fix_prediction_before: private static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
× fix_prediction_after: public static java.lang.String getStringResponse ( java.io.InputStream xexlrnyojakkictjvwmj ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( xexlrnyojakkictjvwmj ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }

line_index: 149
bug_before_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; } <s> private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; } <s> bugfixes
bug_after_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM ntcajleugsbnegntqbdt ) { ntcajleugsbnegntqbdt.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { ntcajleugsbnegntqbdt.orderLatitude = taxiDriverLocation . getLatitude () ; ntcajleugsbnegntqbdt.orderLongitude = taxiDriverLocation . getLongitude () ; } ntcajleugsbnegntqbdt.status = Constants.OrderStatus.InProgress . getValue () ; ntcajleugsbnegntqbdt.taxiId = taxi.taxiId ; ntcajleugsbnegntqbdt.taxiPlate = taxi.plate ; ntcajleugsbnegntqbdt.driverPhone = phoneNumber ; return ntcajleugsbnegntqbdt ; } <s> private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM ntcajleugsbnegntqbdt ) { ntcajleugsbnegntqbdt.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { ntcajleugsbnegntqbdt.orderLatitude = taxiDriverLocation . getLatitude () ; ntcajleugsbnegntqbdt.orderLongitude = taxiDriverLocation . getLongitude () ; } ntcajleugsbnegntqbdt.status = Constants.OrderStatus.InProgress . getValue () ; ntcajleugsbnegntqbdt.taxiId = taxi.taxiId ; ntcajleugsbnegntqbdt.taxiPlate = taxi.plate ; ntcajleugsbnegntqbdt.driverPhone = phoneNumber ; return ntcajleugsbnegntqbdt ; } <s> bugfixes
fix_before_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; }
fix_after_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM ntcajleugsbnegntqbdt ) { ntcajleugsbnegntqbdt.orderId = - 1 ; ntcajleugsbnegntqbdt.orderLatitude = taxiDriverLocation . getLatitude () ; ntcajleugsbnegntqbdt.orderLongitude = taxiDriverLocation . getLongitude () ; ntcajleugsbnegntqbdt.status = Constants.OrderStatus.InProgress . getValue () ; ntcajleugsbnegntqbdt.taxiId = taxi.taxiId ; ntcajleugsbnegntqbdt.taxiPlate = taxi.plate ; ntcajleugsbnegntqbdt.driverPhone = phoneNumber ; return ntcajleugsbnegntqbdt ; }
√ fix_prediction_before: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; }
× fix_prediction_after: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM ntcajleugsbnegntqbdt ) { ntcajleugsbnegntqbdt.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { ntcajleugsbnegntqbdt.orderLatitude = taxiDriverLocation . getLatitude () ; ntcajleugsbnegntqbdt.orderLongitude = taxiDriverLocation . getLongitude () ; } return ntcajleugsbnegntqbdt ; }

line_index: 163
bug_before_refactoring: @ java.lang.Override protected void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } <s> @ java.lang.Override protected void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } <s> Fixed adding info views bug and histogram adding bug.
bug_after_refactoring: @ java.lang.Override protected void removeInfoView ( android.mokrxpyvanasqoshgpvx.View mokrxpyvanasqoshgpvx ) { if ( ( mokrxpyvanasqoshgpvx . getParent () ) != null ) ( ( android.mokrxpyvanasqoshgpvx.ViewGroup ) ( mokrxpyvanasqoshgpvx . getParent () ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; } <s> @ java.lang.Override protected void removeInfoView ( android.mokrxpyvanasqoshgpvx.View mokrxpyvanasqoshgpvx ) { if ( ( mokrxpyvanasqoshgpvx . getParent () ) != null ) ( ( android.mokrxpyvanasqoshgpvx.ViewGroup ) ( mokrxpyvanasqoshgpvx . getParent () ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; } <s> Fixed adding info views bug and histogram adding bug.
fix_before_refactoring: @ java.lang.Override public void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; }
fix_after_refactoring: @ java.lang.Override public void removeInfoView ( android.mokrxpyvanasqoshgpvx.View mokrxpyvanasqoshgpvx ) { if ( ( mokrxpyvanasqoshgpvx . getParent () ) != null ) ( ( android.mokrxpyvanasqoshgpvx.ViewGroup ) ( mokrxpyvanasqoshgpvx . getParent () ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; }
√ fix_prediction_before: @ java.lang.Override public void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; }
× fix_prediction_after: @ java.lang.Override protected void removeInfoView ( android.mokrxpyvanasqoshgpvx.View mokrxpyvanasqoshgpvx ) { if ( ( mokrxpyvanasqoshgpvx . getParent () ) != null ) ( ( android.mokrxpyvanasqoshgpvx.ViewGroup ) ( mokrxpyvanasqoshgpvx . getParent () ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; }

line_index: 167
bug_before_refactoring: public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> fix issueComments UI  refactor code
bug_after_refactoring: public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long pxihouwhuhxcqrjkjonf ) { if ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long pxihouwhuhxcqrjkjonf ) { if ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> fix issueComments UI  refactor code
fix_before_refactoring: private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; }
fix_after_refactoring: private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long pxihouwhuhxcqrjkjonf ) { if ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; }
√ fix_prediction_before: private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; }
× fix_prediction_after: public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long pxihouwhuhxcqrjkjonf ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; }

line_index: 172
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final java.lang.String receiverPermission ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void run ( final android.content.Intent xsnzbfbczmhvtqchqrcl ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( xsnzbfbczmhvtqchqrcl , user , receiverPermission ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final java.lang.String receiverPermission ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent xsnzbfbczmhvtqchqrcl ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( xsnzbfbczmhvtqchqrcl , user , receiverPermission ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
fix_after_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( xsnzbfbczmhvtqchqrcl , user , receiverPermission ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
× fix_prediction_after: @ java.lang.Override public void run ( final android.content.Intent xsnzbfbczmhvtqchqrcl ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( xsnzbfbczmhvtqchqrcl , user , receiverPermission ) ; }

line_index: 212
bug_before_refactoring: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } } return null ; } <s> public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } } return null ; } <s> Bug Fix: avoid unnecessary and blocking-prone synchronized
bug_after_refactoring: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User okthrxfmswqeyzndrjks , final javax.servlet.http.HttpServletRequest gkhkygmbmramuoiquaxz ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ) { return iuLisboaRedirectionHandler . redirectionPath ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ; } } } return null ; } <s> public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User okthrxfmswqeyzndrjks , final javax.servlet.http.HttpServletRequest gkhkygmbmramuoiquaxz ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ) { return iuLisboaRedirectionHandler . redirectionPath ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ; } } } return null ; } <s> Bug Fix: avoid unnecessary and blocking-prone synchronized
fix_before_refactoring: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } return null ; }
fix_after_refactoring: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User okthrxfmswqeyzndrjks , final javax.servlet.http.HttpServletRequest gkhkygmbmramuoiquaxz ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ) { return iuLisboaRedirectionHandler . redirectionPath ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ; } } return null ; }
√ fix_prediction_before: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } return null ; }
× fix_prediction_after: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User okthrxfmswqeyzndrjks , final javax.servlet.http.HttpServletRequest gkhkygmbmramuoiquaxz ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers

line_index: 244
bug_before_refactoring: public void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; } <s> public void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
bug_after_refactoring: public void showBoardLine ( final int dhabbswljixawqorsowu ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( dhabbswljixawqorsowu ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( dhabbswljixawqorsowu , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( dhabbswljixawqorsowu , i ) . toString () ) ; } } java.lang.System.out . println () ; } <s> public void showBoardLine ( final int dhabbswljixawqorsowu ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( dhabbswljixawqorsowu ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( dhabbswljixawqorsowu , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( dhabbswljixawqorsowu , i ) . toString () ) ; } } java.lang.System.out . println () ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
fix_before_refactoring: private void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; }
fix_after_refactoring: private void showBoardLine ( final int dhabbswljixawqorsowu ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( dhabbswljixawqorsowu ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( dhabbswljixawqorsowu , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( dhabbswljixawqorsowu , i ) . toString () ) ; } } java.lang.System.out . println () ; }
√ fix_prediction_before: private void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; }
× fix_prediction_after: private void showBoardLine ( final int dhabbswljixawqorsowu ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( dhabbswljixawqorsowu ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( dhabbswljixawqorsowu , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( dhabbswljixawqorsowu , i ) . toString () ) ;

line_index: 250
bug_before_refactoring: private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } <s> private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } <s> Fixed: use writePage instead writeErrorPage
bug_after_refactoring: private static void writePage ( javax.servlet.http.HttpServletResponse ocrjnsunvefpcegxgyiw , int gowqqgahkbegnbrdvgrt , java.lang.String hvbcrumqefkkttmcvddg , org.geowebcache.stats.RuntimeStats jwhejjlplgvdcpgqjtum , java.lang.String nedvbgylulehphqmhcyf ) { org.geowebcache.io.Resource res = null ; if ( hvbcrumqefkkttmcvddg != null ) { res = new org.geowebcache.io.ByteArrayResource ( hvbcrumqefkkttmcvddg . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( ocrjnsunvefpcegxgyiw , gowqqgahkbegnbrdvgrt , nedvbgylulehphqmhcyf , res , CacheResult.OTHER , jwhejjlplgvdcpgqjtum ) ; } <s> private static void writePage ( javax.servlet.http.HttpServletResponse ocrjnsunvefpcegxgyiw , int gowqqgahkbegnbrdvgrt , java.lang.String hvbcrumqefkkttmcvddg , org.geowebcache.stats.RuntimeStats jwhejjlplgvdcpgqjtum , java.lang.String nedvbgylulehphqmhcyf ) { org.geowebcache.io.Resource res = null ; if ( hvbcrumqefkkttmcvddg != null ) { res = new org.geowebcache.io.ByteArrayResource ( hvbcrumqefkkttmcvddg . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( ocrjnsunvefpcegxgyiw , gowqqgahkbegnbrdvgrt , nedvbgylulehphqmhcyf , res , CacheResult.OTHER , jwhejjlplgvdcpgqjtum ) ; } <s> Fixed: use writePage instead writeErrorPage
fix_before_refactoring: public static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; }
fix_after_refactoring: public static void writePage ( javax.servlet.http.HttpServletResponse ocrjnsunvefpcegxgyiw , int gowqqgahkbegnbrdvgrt , java.lang.String hvbcrumqefkkttmcvddg , org.geowebcache.stats.RuntimeStats jwhejjlplgvdcpgqjtum , java.lang.String nedvbgylulehphqmhcyf ) { org.geowebcache.io.Resource res = null ; if ( hvbcrumqefkkttmcvddg != null ) { res = new org.geowebcache.io.ByteArrayResource ( hvbcrumqefkkttmcvddg . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( ocrjnsunvefpcegxgyiw , gowqqgahkbegnbrdvgrt , nedvbgylulehphqmhcyf , res , CacheResult.OTHER , jwhejjlplgvdcpgqjtum ) ; }
√ fix_prediction_before: public static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; }
× fix_prediction_after: private static void writePage ( javax.servlet.http.HttpServletResponse ocrjnsunvefpcegxgyiw , int gowqqgahkbegnbrdvgrt , java.lang.String hvbcrumqefkkttmcvddg , org.geowebcache.stats.RuntimeStats jwhejjlplgvdcpgqjtum , java.lang.String nedvbgylulehphqmhcyf ) { org.geowebcache.io.ByteArrayResource res = null ; if ( hvbcrumqefkkttmcvddg != null ) { res = new org.geowebcache.io.ByteArrayResource

line_index: 330
bug_before_refactoring: private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> bug fixes
bug_after_refactoring: private void renderTime ( final long pcawyetaulbteefwkibd ) { final long seconds = ( pcawyetaulbteefwkibd / 1000 ) % 60 ; final long minute = ( pcawyetaulbteefwkibd / 60000 ) % 60 ; final long hour = ( pcawyetaulbteefwkibd / 3600000 ) % 24 ; final long day = pcawyetaulbteefwkibd / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> private void renderTime ( final long pcawyetaulbteefwkibd ) { final long seconds = ( pcawyetaulbteefwkibd / 1000 ) % 60 ; final long minute = ( pcawyetaulbteefwkibd / 60000 ) % 60 ; final long hour = ( pcawyetaulbteefwkibd / 3600000 ) % 24 ; final long day = pcawyetaulbteefwkibd / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> bug fixes
fix_before_refactoring: public void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; }
fix_after_refactoring: public void renderTime ( final long pcawyetaulbteefwkibd ) { final long seconds = ( pcawyetaulbteefwkibd / 1000 ) % 60 ; final long minute = ( pcawyetaulbteefwkibd / 60000 ) % 60 ; final long hour = ( pcawyetaulbteefwkibd / 3600000 ) % 24 ; final long day = pcawyetaulbteefwkibd / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; }
√ fix_prediction_before: public void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; }
× fix_prediction_after: private void renderTime ( final long pcawyetaulbteefwkibd ) { final long seconds = ( pcawyetaulbteefwkibd / 1000 ) % 60 ; final long minute = ( pcawyetaulbteefwkibd / 60000 ) % 60 ; final long hour = ( pcawyetaulbteefwkibd / 3600000 ) % 24 ; final long day = pcawyetaulbteefwkibd / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; }

line_index: 377
bug_before_refactoring: @ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> @ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> [MB-1436] Fix lint issues
bug_after_refactoring: @ java.lang.Override public void onAttach ( android.app.Activity xpzwbvkitqpelyisnffm ) { super . onAttach ( xpzwbvkitqpelyisnffm ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( xpzwbvkitqpelyisnffm ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> @ java.lang.Override public void onAttach ( android.app.Activity xpzwbvkitqpelyisnffm ) { super . onAttach ( xpzwbvkitqpelyisnffm ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( xpzwbvkitqpelyisnffm ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> [MB-1436] Fix lint issues
fix_before_refactoring: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void onAttach ( android.app.Activity xpzwbvkitqpelyisnffm ) { super . onAttach ( xpzwbvkitqpelyisnffm ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( xpzwbvkitqpelyisnffm ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }

line_index: 389
bug_before_refactoring: protected android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> protected android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> Clear PMD issues  and fix members visibility.
bug_after_refactoring: protected android.graphics.Bitmap setBitmapSize ( int uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl , int koyearwqsodbtxmsybox ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl ) ; float s = ( koyearwqsodbtxmsybox * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> protected android.graphics.Bitmap setBitmapSize ( int uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl , int koyearwqsodbtxmsybox ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl ) ; float s = ( koyearwqsodbtxmsybox * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> Clear PMD issues  and fix members visibility.
fix_before_refactoring: private android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
fix_after_refactoring: private android.graphics.Bitmap setBitmapSize ( int uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl , int koyearwqsodbtxmsybox ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl ) ; float s = ( koyearwqsodbtxmsybox * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
√ fix_prediction_before: private android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
× fix_prediction_after: private android.graphics.Bitmap setBitmapSize ( int uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl , int koyearwqsodbtxmsybox ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , uxclcxzlkoyearwqsodbtxmsyboxaufesrdopkl ) ; float s = ( koyearwqsodbtxmsybox * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int )

line_index: 408
bug_before_refactoring: public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } <s> public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
bug_after_refactoring: public static void writeNBTFound ( net.minecraft.jcyqajwttpqndaixugnm.NBTTagCompound jcyqajwttpqndaixugnm , net.minecraft.util.math.BlockPos qgptknhfucizhiwkfbkm ) { jcyqajwttpqndaixugnm . setBoolean ( "found" , true ) ; jcyqajwttpqndaixugnm . removeTag ( "searchStarted" ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmX" , qgptknhfucizhiwkfbkm . getX () ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmZ" , qgptknhfucizhiwkfbkm . getZ () ) ; } <s> public static void writeNBTFound ( net.minecraft.jcyqajwttpqndaixugnm.NBTTagCompound jcyqajwttpqndaixugnm , net.minecraft.util.math.BlockPos qgptknhfucizhiwkfbkm ) { jcyqajwttpqndaixugnm . setBoolean ( "found" , true ) ; jcyqajwttpqndaixugnm . removeTag ( "searchStarted" ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmX" , qgptknhfucizhiwkfbkm . getX () ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmZ" , qgptknhfucizhiwkfbkm . getZ () ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
fix_before_refactoring: private static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; }
fix_after_refactoring: private static void writeNBTFound ( net.minecraft.jcyqajwttpqndaixugnm.NBTTagCompound jcyqajwttpqndaixugnm , net.minecraft.util.math.BlockPos qgptknhfucizhiwkfbkm ) { jcyqajwttpqndaixugnm . setBoolean ( "found" , true ) ; jcyqajwttpqndaixugnm . removeTag ( "searchStarted" ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmX" , qgptknhfucizhiwkfbkm . getX () ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmZ" , qgptknhfucizhiwkfbkm . getZ () ) ; }
√ fix_prediction_before: private static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; }
× fix_prediction_after: public static void writeNBTFound ( net.minecraft.jcyqajwttpqndaixugnm.NBTTagCompound jcyqajwttpqndaixugnm , net.minecraft.util.math.BlockPos qgptknhfucizhiwkfbkm ) { jcyqajwttpqndaixugnm . setBoolean ( "found" , true ) ; jcyqajwttpqndaixugnm . removeTag ( "searchStarted" ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmX" , qgptknhfucizhiwkfbkm . getX () ) ; jcyq

line_index: 418
bug_before_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
bug_after_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbwbkjgipavcxsp , java.io.PrintWriter gbziwcyuzompgkjjqdzt ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbwbkjgipavcxsp , java.io.PrintWriter gbziwcyuzompgkjjqdzt ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
fix_before_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
fix_after_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbwbkjgipavcxsp ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
√ fix_prediction_before: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
× fix_prediction_after: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbkjgipavcxsp , java.io.PrintWriter gbziwcyuzompgkjjqdzt ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbkjgipavcxsp . getOperand ( 0 ) ) ; gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; }

line_index: 421
bug_before_refactoring: private boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } <s> private boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } <s> fix bugs
bug_after_refactoring: private boolean verifyPermissions ( int [] yzqcqsidixonpounaewe ) { if ( ( yzqcqsidixonpounaewe.length ) < 1 ) { return false ; } for ( int result : yzqcqsidixonpounaewe ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } <s> private boolean verifyPermissions ( int [] yzqcqsidixonpounaewe ) { if ( ( yzqcqsidixonpounaewe.length ) < 1 ) { return false ; } for ( int result : yzqcqsidixonpounaewe ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } <s> fix bugs
fix_before_refactoring: public boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; }
fix_after_refactoring: public boolean verifyPermissions ( int [] yzqcqsidixonpounaewe ) { if ( ( yzqcqsidixonpounaewe.length ) < 1 ) { return false ; } for ( int result : yzqcqsidixonpounaewe ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; }
√ fix_prediction_before: public boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; }
× fix_prediction_after: private boolean verifyPermissions ( int [] yzqcqsidixonpounaewe ) { if ( ( yzqcqsidixonpounaewe.length ) < 1 ) { return false ; } for ( int result : yzqcqsidixonpounaewe ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; }

line_index: 432
bug_before_refactoring: public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> Handle Permission request and Fixed bug
bug_after_refactoring: public jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; } <s> public jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; } <s> Handle Permission request and Fixed bug
fix_before_refactoring: private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
fix_after_refactoring: private jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ; } } hxpdnhovolsgwcmwbexq . close () ; return null ; }
√ fix_prediction_before: private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
× fix_prediction_after: private jxl.Sheet checkSheetName ( jxl.Workbook hxpdnhovolsgwcmwbexq ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( hxpdnhovolsgwcmwbexq . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : hxpdnhovolsgwcmwbexq . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return hxpdnhovolsgwcmwbexq . getSheet ( name ) ;

line_index: 498
bug_before_refactoring: private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> fixed some bugs
bug_after_refactoring: private boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; } <s> private boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; } <s> fixed some bugs
fix_before_refactoring: public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
fix_after_refactoring: public boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; }
√ fix_prediction_before: public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
× fix_prediction_after: private boolean isManaTurn ( int uejbcpwqxlqoeebqjpma ) { int current = 1 ; int past = 0 ; while ( current < ( uejbcpwqxlqoeebqjpma + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == uejbcpwqxlqoeebqjpma ) { return true ; } } return false ; }

line_index: 500
bug_before_refactoring: private static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } <s> private static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } <s> fix password encrypt error.  Complete :class:`UserControllerTest` and found error password won't be encrypt. Now fixed.
bug_after_refactoring: private static java.lang.String encrypt ( java.lang.String fptmvadmircbjmpbbpgv , java.lang.String hrmzranxritnywbobcjh ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( fptmvadmircbjmpbbpgv ) ; pwd . update ( hrmzranxritnywbobcjh . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + fptmvadmircbjmpbbpgv ) ) ; } } <s> private static java.lang.String encrypt ( java.lang.String fptmvadmircbjmpbbpgv , java.lang.String hrmzranxritnywbobcjh ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( fptmvadmircbjmpbbpgv ) ; pwd . update ( hrmzranxritnywbobcjh . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + fptmvadmircbjmpbbpgv ) ) ; } } <s> fix password encrypt error.  Complete :class:`UserControllerTest` and found error password won't be encrypt. Now fixed.
fix_before_refactoring: public static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } }
fix_after_refactoring: public static java.lang.String encrypt ( java.lang.String fptmvadmircbjmpbbpgv , java.lang.String hrmzranxritnywbobcjh ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( fptmvadmircbjmpbbpgv ) ; pwd . update ( hrmzranxritnywbobcjh . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + fptmvadmircbjmpbbpgv ) ) ; } }
√ fix_prediction_before: public static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } }
× fix_prediction_after: private static java.lang.String encrypt ( java.lang.String fptmvadmircbjmpbbpgv , java.lang.String hrmzranxritnywbobcjh ) { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( fptmvadmircbjmpbbpgv ) ; pwd . update ( hrmzranxritnywbobcjh . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; }

line_index: 520
bug_before_refactoring: public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> bug fix in modulelogging removeall
bug_after_refactoring: public java.lang.String ypsytwwplgsitfvsrpacToConfig ( java.util.ArrayList < mars.client.Module > ypsytwwplgsitfvsrpac ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( ypsytwwplgsitfvsrpac . size () ) ; i ++ ) { aStringBuilder . append ( ypsytwwplgsitfvsrpac . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> public java.lang.String ypsytwwplgsitfvsrpacToConfig ( java.util.ArrayList < mars.client.Module > ypsytwwplgsitfvsrpac ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( ypsytwwplgsitfvsrpac . size () ) ; i ++ ) { aStringBuilder . append ( ypsytwwplgsitfvsrpac . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> bug fix in modulelogging removeall
fix_before_refactoring: private java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; }
fix_after_refactoring: private java.lang.String ypsytwwplgsitfvsrpacToConfig ( java.util.ArrayList < mars.client.Module > ypsytwwplgsitfvsrpac ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( ypsytwwplgsitfvsrpac . size () ) ; i ++ ) { aStringBuilder . append ( ypsytwwplgsitfvsrpac . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; }
√ fix_prediction_before: private java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; }
× fix_prediction_after: public java.lang.String ypsytwwplgsitfvsrpacToConfig () { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( ypsytwwplgsitfvsrpac . size () ) ; i ++ ) { aStringBuilder . append ( ypsytwwplgsitfvsrpac . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; }

line_index: 586
bug_before_refactoring: private static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; } <s> private static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; } <s> Fix issues with facades and columns
bug_after_refactoring: private static int getBlockOrFacadeMetadata ( net.minecraft.pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw.IBlockAccess pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , int eovidonvlmbmkobusjvu , int auexfhrebedkpwayysun , int ytdejxmhxkdjyfmegikw , int hsmxpjmtccbexhocrviq ) { net.minecraft.block.Block blk = pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlock ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw , hsmxpjmtccbexhocrviq ) ; } return pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlockMetadata ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; } <s> private static int getBlockOrFacadeMetadata ( net.minecraft.pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw.IBlockAccess pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , int eovidonvlmbmkobusjvu , int auexfhrebedkpwayysun , int ytdejxmhxkdjyfmegikw , int hsmxpjmtccbexhocrviq ) { net.minecraft.block.Block blk = pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlock ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw , hsmxpjmtccbexhocrviq ) ; } return pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlockMetadata ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; } <s> Fix issues with facades and columns
fix_before_refactoring: public static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; }
fix_after_refactoring: public static int getBlockOrFacadeMetadata ( net.minecraft.pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw.IBlockAccess pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , int eovidonvlmbmkobusjvu , int auexfhrebedkpwayysun , int ytdejxmhxkdjyfmegikw , int hsmxpjmtccbexhocrviq ) { net.minecraft.block.Block blk = pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlock ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw , hsmxpjmtccbexhocrviq ) ; } return pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlockMetadata ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; }
√ fix_prediction_before: public static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; }
× fix_prediction_after: private static int getBlockOrFacadeMetadata ( net.minecraft.pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw.IBlockAccess pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , int eovidonvlmbmkobusjvu , int auexfhrebedkpwayysun , int ytdejxmhxkdjyfmegikw , int hsmxpjmtccbexhocrviq ) { net.minecraft.block.Block blk = pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlock (

line_index: 598
bug_before_refactoring: public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
bug_after_refactoring: public static int getSequenceNumber ( byte [] vtwrdybmdppgpfrasoli ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( vtwrdybmdppgpfrasoli , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> public static int getSequenceNumber ( byte [] vtwrdybmdppgpfrasoli ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( vtwrdybmdppgpfrasoli , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
fix_before_refactoring: private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
fix_after_refactoring: private static int getSequenceNumber ( byte [] vtwrdybmdppgpfrasoli ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( vtwrdybmdppgpfrasoli , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
√ fix_prediction_before: private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
× fix_prediction_after: public static int getSequenceNumber ( byte [] vtwrdybmdppgpfrasoli ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( vtwrdybmdppgpfrasoli , start , end ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }

line_index: 602
bug_before_refactoring: public java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; } <s> public java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; } <s> fix the string length issue
bug_after_refactoring: public java.lang.String percentEncodeRfc3986 ( java.lang.String qqdkctzjgbbyfecgjxan ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( qqdkctzjgbbyfecgjxan , utilqqdkctzjgbbyfecgjxan.SignedRequeqqdkctzjgbbyfecgjxantqqdkctzjgbbyfecgjxanHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnqqdkctzjgbbyfecgjxanupportedEncodingException e ) { out = qqdkctzjgbbyfecgjxan ; } return out ; } <s> public java.lang.String percentEncodeRfc3986 ( java.lang.String qqdkctzjgbbyfecgjxan ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( qqdkctzjgbbyfecgjxan , utilqqdkctzjgbbyfecgjxan.SignedRequeqqdkctzjgbbyfecgjxantqqdkctzjgbbyfecgjxanHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnqqdkctzjgbbyfecgjxanupportedEncodingException e ) { out = qqdkctzjgbbyfecgjxan ; } return out ; } <s> fix the string length issue
fix_before_refactoring: private java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; }
fix_after_refactoring: private java.lang.String percentEncodeRfc3986 ( java.lang.String qqdkctzjgbbyfecgjxan ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( qqdkctzjgbbyfecgjxan , utilqqdkctzjgbbyfecgjxan.SignedRequeqqdkctzjgbbyfecgjxantqqdkctzjgbbyfecgjxanHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnqqdkctzjgbbyfecgjxanupportedEncodingException e ) { out = qqdkctzjgbbyfecgjxan ; } return out ; }
√ fix_prediction_before: private java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; }
× fix_prediction_after: public java.lang.String percentEncodeRfc3986 ( java.lang.String qqdkctzjgbbyfecgjxan ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( qqdkctzjgbbyfecgjxan , utilqqdkctzjgbbyfecgjxan.SignedRequeqqdkctzjgbbyfecgjxan.SignedRequeqqdkctzjgbbyfecgjxanHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "

line_index: 618
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
√ fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrv

line_index: 644
bug_before_refactoring: public int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } <s> public int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
bug_after_refactoring: public int getPlayerForLine ( final int zuvpkorkgytfcsoiidnx , final java.lang.String icjsujrajvdmzzobzczg ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( zuvpkorkgytfcsoiidnx ) ) ; i ++ ) { if ( ( ( board . getFigure ( zuvpkorkgytfcsoiidnx , i ) ) != null ) && ( ( board . getFigure ( zuvpkorkgytfcsoiidnx , i ) . toString () ) == icjsujrajvdmzzobzczg ) ) { playerRowCount ++ ; } } return playerRowCount ; } <s> public int getPlayerForLine ( final int zuvpkorkgytfcsoiidnx , final java.lang.String icjsujrajvdmzzobzczg ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( zuvpkorkgytfcsoiidnx ) ) ; i ++ ) { if ( ( ( board . getFigure ( zuvpkorkgytfcsoiidnx , i ) ) != null ) && ( ( board . getFigure ( zuvpkorkgytfcsoiidnx , i ) . toString () ) == icjsujrajvdmzzobzczg ) ) { playerRowCount ++ ; } } return playerRowCount ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
fix_before_refactoring: private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; }
fix_after_refactoring: private int getPlayerForLine ( final int zuvpkorkgytfcsoiidnx , final java.lang.String icjsujrajvdmzzobzczg ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( zuvpkorkgytfcsoiidnx ) ) ; i ++ ) { if ( ( ( board . getFigure ( zuvpkorkgytfcsoiidnx , i ) ) != null ) && ( ( board . getFigure ( zuvpkorkgytfcsoiidnx , i ) . toString () ) == icjsujrajvdmzzobzczg ) ) { playerRowCount ++ ; } } return playerRowCount ; }
√ fix_prediction_before: private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; }
× fix_prediction_after: public int getPlayerForLine ( final int zuvpkorkgytfcsoiidnx , final java.lang.String icjsujrajvdmzzobzczg ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( zuvpkorkgytfcsoiidnx ) ) ; i ++ ) { if ( ( board . getFigure ( zuvpkorkgytfcsoiidnx , i ) . toString () ) == icjsujrajvdmzzobzczg ) { playerRowCount ++ ; } } return playerRowCount ; }

line_index: 653
bug_before_refactoring: private static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> private static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> fixing return errors
bug_after_refactoring: private static boolean differByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> private static boolean differByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> fixing return errors
fix_before_refactoring: public static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
fix_after_refactoring: public static boolean differByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
√ fix_prediction_before: public static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
× fix_prediction_after: private static boolean differByOne ( java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( yggpcmkwxuhokzumwbva . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( yggpcmkwxuhokzumwbva . length () ) ; i ++ ) { if ( ( yggpcmkwxuhokzumwbva . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }

