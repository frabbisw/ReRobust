line_index: 3
bug_before_refactoring: private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
bug_after_refactoring: private static boolean isStatusDefault ( final byte uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
fix_before_refactoring: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
fix_after_refactoring: private static boolean isStatusDefault ( final int uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
√ fix_prediction_before: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
× fix_prediction_after: private static boolean isStatusDefault ( final int status ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }

line_index: 36
bug_before_refactoring: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> [More interfaces!]  Added PresentableUiAndroid and updated Presentable[Activity | Fragment] to implement it Added PresentableUiDelegateimpl  Fixed nasty registry saving bug  Demo updates
bug_after_refactoring: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle lsbwxwlqwzjzibjngxbm ) { super . restoreUiState ( lsbwxwlqwzjzibjngxbm ) ; progressLoading . setVisibility ( ( lsbwxwlqwzjzibjngxbm . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( lsbwxwlqwzjzibjngxbm . getBoolean ( "btnLoadEnabled" ) ) ; } <s> @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle lsbwxwlqwzjzibjngxbm ) { super . restoreUiState ( lsbwxwlqwzjzibjngxbm ) ; progressLoading . setVisibility ( ( lsbwxwlqwzjzibjngxbm . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( lsbwxwlqwzjzibjngxbm . getBoolean ( "btnLoadEnabled" ) ) ; } <s> [More interfaces!]  Added PresentableUiAndroid and updated Presentable[Activity | Fragment] to implement it Added PresentableUiDelegateimpl  Fixed nasty registry saving bug  Demo updates
fix_before_refactoring: @ java.lang.Override public void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; }
fix_after_refactoring: @ java.lang.Override public void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle lsbwxwlqwzjzibjngxbm ) { super . restoreUiState ( lsbwxwlqwzjzibjngxbm ) ; progressLoading . setVisibility ( ( lsbwxwlqwzjzibjngxbm . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( lsbwxwlqwzjzibjngxbm . getBoolean ( "btnLoadEnabled" ) ) ; }
√ fix_prediction_before: @ java.lang.Override public void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; }
× fix_prediction_after: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle lsbwxwlqwzjzibjngxbm ) { super . restoreUiState ( lsbwxwlqwzjzibjngxbm ) ; }

line_index: 43
bug_before_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> fix bug
bug_after_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxeqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwaxeqxzsary , wrofpdmrdbgsjgykmjax , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxeqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwaxeqxzsary , wrofpdmrdbgsjgykmjax , true ) ; } <s> fix bug
fix_before_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
fix_after_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxeqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwaxeqxzsary , wrofpdmrdbgsjgykmjax , true ) ; }
√ fix_prediction_before: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
× fix_prediction_after: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwaxqxzsary , wrofpdmrdbgsjgykmjax , true ) ; }

line_index: 70
bug_before_refactoring: public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> Got the database issues "solved". User is saved and remembered.
bug_after_refactoring: public void setID ( final long tiusekpmnqbjbdgvtwru ) { myUserID = tiusekpmnqbjbdgvtwru ; } <s> public void setID ( final long tiusekpmnqbjbdgvtwru ) { myUserID = tiusekpmnqbjbdgvtwru ; } <s> Got the database issues "solved". User is saved and remembered.
fix_before_refactoring: public void setID ( final long theUserID ) { this . myUserID = theUserID ; }
fix_after_refactoring: public void setID ( final long tiusekpmnqbjbdgvtwru ) { this . myUserID = tiusekpmnqbjbdgvtwru ; }
√ fix_prediction_before: public void setID ( final long theUserID ) { this . myUserID = theUserID ; }
× fix_prediction_after: public void setID ( final long id ) { myUserID = id ; }

line_index: 78
bug_before_refactoring: private static native void _imaqGetImageType ( long image , long type ) ; <s> private static native void _imaqGetImageType ( long image , long type ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) ; <s> private static native void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetImageType ( long image , long type ) {}
fix_after_refactoring: private static void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrlvrvlg ) {}
√ fix_prediction_before: private static void _imaqGetImageType ( long image , long type ) {}
× fix_prediction_after: private static void _imaqGetImageType ( long jgfqwdbmqejkwsufgnuy , long ntcfgqshztwhmrvlg ) {}

line_index: 81
bug_before_refactoring: public void setStartYear ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> public void setStartYear ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> fix bugs
bug_after_refactoring: public void setStartYear ( int kryyapkleeonpseidhxn ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = kryyapkleeonpseidhxn ; } <s> public void setStartYear ( int kryyapkleeonpseidhxn ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = kryyapkleeonpseidhxn ; } <s> fix bugs
fix_before_refactoring: public void setStartYear ( int idfYear ) { startYear = idfYear ; }
fix_after_refactoring: public void setStartYear ( int kryyapkleeonpseidhxn ) { startYear = kryyapkleeonpseidhxn ; }
√ fix_prediction_before: public void setStartYear ( int idfYear ) { startYear = idfYear ; }
× fix_prediction_after: public void setStartYear ( int kryyapkleeonpseidhxn ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = kryyapkleeonpseidhxn ; }

line_index: 82
bug_before_refactoring: protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) { if ( aoveazijxlutbntbddhm == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( kvozwfuybwjxufygcszb == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; aoveazijxlutbntbddhmVitalityMap . put ( aoveazijxlutbntbddhm , kvozwfuybwjxufygcszb ) ; } <s> protected void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) { if ( aoveazijxlutbntbddhm == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( kvozwfuybwjxufygcszb == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; aoveazijxlutbntbddhmVitalityMap . put ( aoveazijxlutbntbddhm , kvozwfuybwjxufygcszb ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
fix_after_refactoring: public void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) { if ( aoveazijxlutbntbddhm == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( kvozwfuybwjxufygcszb == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; aoveazijxlutbntbddhmVitalityMap . put ( aoveazijxlutbntbddhm , kvozwfuybwjxufygcszb ) ; }
√ fix_prediction_before: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
× fix_prediction_after: protected void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) {}

line_index: 100
bug_before_refactoring: private java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> private java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> Error fixing  Some basic errors with syntax got saved when I committed previously. I'm just fixing them with this update.
bug_after_refactoring: private java.awt.Color [] oddCreateColors ( java.awt.Color hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 0 ] ; } <s> private java.awt.Color [] oddCreateColors ( java.awt.Color hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 0 ] ; } <s> Error fixing  Some basic errors with syntax got saved when I committed previously. I'm just fixing them with this update.
fix_before_refactoring: public java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }
fix_after_refactoring: public java.awt.Color [] oddCreateColors ( java.awt.Color hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 0 ] ; }
√ fix_prediction_before: public java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }
× fix_prediction_after: private java.awt.Color [] oddCreateColors ( java.awt.Color [] hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 1 ] ; }

line_index: 105
bug_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
bug_after_refactoring: @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; } } <s> @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
fix_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
fix_after_refactoring: @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; }
√ fix_prediction_before: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
× fix_prediction_after: @ java.lang.Override public voxckjxsrsnfsbjtfvlkive onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; }

line_index: 109
bug_before_refactoring: private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
fix_after_refactoring: private static long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) { return 0 ; }
√ fix_prediction_before: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
× fix_prediction_after: private static long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjzjksjuftwbvrjqf ) { return 0 ; }

line_index: 110
bug_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
bug_after_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { try { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { try { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
fix_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
fix_after_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; }
√ fix_prediction_before: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
× fix_prediction_after: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { saveTaskManager ( fslvowqfkzcwfjemxbue ) ; }

line_index: 118
bug_before_refactoring: public int add ( int a , int b ) { return a * b ; } <s> public int add ( int a , int b ) { return a * b ; } <s> Bug fix
bug_after_refactoring: putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; } <s> putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; } <s> Bug fix
fix_before_refactoring: public int add ( int a , int b ) { return a + b ; }
fix_after_refactoring: putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl + tpnpdrcpzlzukxllfawn ; }
√ fix_prediction_before: public int add ( int a , int b ) { return a + b ; }
× fix_prediction_after: putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; }

line_index: 134
bug_before_refactoring: public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> fix: beer count bug
bug_after_refactoring: public ohhuwueznbcsqmvjusaloid increaseBeerCount ( android.ohhuwueznbcsqmvjusaliew.View ohhuwueznbcsqmvjusal ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> public ohhuwueznbcsqmvjusaloid increaseBeerCount ( android.ohhuwueznbcsqmvjusaliew.View ohhuwueznbcsqmvjusal ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> fix: beer count bug
fix_before_refactoring: public void increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
fix_after_refactoring: public ohhuwueznbcsqmvjusaloid increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
√ fix_prediction_before: public void increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
× fix_prediction_after: public void increaseBeerCount ( android.ohhuwueznbcsqmvjusaliew.View ohhuwueznbcsqmvjusal ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }

line_index: 137
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> fixed indexing issues
bug_after_refactoring: @ jatscrglbaqpplyxjbjqpna.lang.Otscrglbaqpplyxjbjqpnerride public tscrglbaqpplyxjbjqpnoid onClick ( android.tscrglbaqpplyxjbjqpniew.View tscrglbaqpplyxjbjqpn ) { mListener . onListItemSelectedListener ( getName ) ; } <s> @ jatscrglbaqpplyxjbjqpna.lang.Otscrglbaqpplyxjbjqpnerride public tscrglbaqpplyxjbjqpnoid onClick ( android.tscrglbaqpplyxjbjqpniew.View tscrglbaqpplyxjbjqpn ) { mListener . onListItemSelectedListener ( getName ) ; } <s> fixed indexing issues
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( index ) ; }
fix_after_refactoring: @ jatscrglbaqpplyxjbjqpna.lang.Otscrglbaqpplyxjbjqpnerride public tscrglbaqpplyxjbjqpnoid onClick ( android.tscrglbaqpplyxjbjqpniew.View tscrglbaqpplyxjbjqpn ) { mListener . onListItemSelectedListener ( index ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( index ) ; }
× fix_prediction_after: @ jatscrglbaqpplyxjbjqpna.lang.Otscrglbaqpplyxjbjqpnnerride public void onClick ( android.tscrglbaqpplyxjbjqpniew.View tscrglbaqpplyxjbjqpn ) { mListener . onListItemSelectedListener ( getName ) ; }

line_index: 138
bug_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
bug_after_refactoring: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = ! jawvcpmlxaxfbzabtgvb ; } <s> public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = ! jawvcpmlxaxfbzabtgvb ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
fix_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
fix_after_refactoring: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = jawvcpmlxaxfbzabtgvb ; }
√ fix_prediction_before: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
× fix_prediction_after: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = true ; }

line_index: 144
bug_before_refactoring: public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void lxemuhnbyuenfxujjyatChat ( boolean lxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; writeConfig () ; } <s> public void lxemuhnbyuenfxujjyatChat ( boolean lxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
fix_after_refactoring: private void lxemuhnbyuenfxujjyatChat ( boolean lxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; writeConfig () ; }
√ fix_prediction_before: private void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
× fix_prediction_after: public void lxemuhnbyuenfxujjyatChat ( boolean lxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; }

line_index: 145
bug_before_refactoring: public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
bug_after_refactoring: public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
fix_before_refactoring: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
fix_after_refactoring: private static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; }
√ fix_prediction_before: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
× fix_prediction_after: public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy ; }

line_index: 161
bug_before_refactoring: public void addX ( final double x ) { this . x += x ; } <s> public void addX ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
bug_after_refactoring: public void addX ( final double riuhmghrrwwgafmydxmj ) { this . riuhmghrrwwgafmydxmj += riuhmghrrwwgafmydxmj ; } <s> public void addX ( final double riuhmghrrwwgafmydxmj ) { this . riuhmghrrwwgafmydxmj += riuhmghrrwwgafmydxmj ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
fix_before_refactoring: public final void addX ( final double add ) { this . x += add ; }
fix_after_refactoring: public final void addX ( final double add ) { this . riuhmghrrwwgafmydxmj += add ; }
√ fix_prediction_before: public final void addX ( final double add ) { this . x += add ; }
× fix_prediction_after: public final void addX ( final double riuhmghrrwwgafmydxmj ) { this . x += riuhmghrrwwgafmydxmj ; }

line_index: 168
bug_before_refactoring: void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> fixed bug
bug_after_refactoring: void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false ) ; } <s> void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false ) ; } <s> fixed bug
fix_before_refactoring: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
fix_after_refactoring: eowgdzuamnghcdsmjiaaublic void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false ) ; }
√ fix_prediction_before: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
× fix_prediction_after: public void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false ) ; }

line_index: 187
bug_before_refactoring: private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> Fixed bug in binary operation application
bug_after_refactoring: privukxdqmqluavqoscchzigte yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign ukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsg ) { return fukxdqmqluavqoscchziglse ; } <s> privukxdqmqluavqoscchzigte yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign ukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsg ) { return fukxdqmqluavqoscchziglse ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
fix_after_refactoring: protected yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign ukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsg ) { return fukxdqmqluavqoscchziglse ; }
√ fix_prediction_before: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
× fix_prediction_after: private void fukxdqmqluavqoscchzigte yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign ukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgoolexdqmqluavqoscchzign yccwmxbyybvrkzkj

line_index: 194
bug_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
bug_after_refactoring: @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
fix_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
fix_after_refactoring: @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { return this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; }
√ fix_prediction_before: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
× fix_prediction_after: @ java.lang.Override public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { return this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; }

line_index: 198
bug_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
bug_after_refactoring: public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . formatDouble ( inqbvugyseznxavcnfcp ) ) ; } <s> public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . formatDouble ( inqbvugyseznxavcnfcp ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
fix_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
fix_after_refactoring: public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . format ( inqbvugyseznxavcnfcp ) ) ; }
√ fix_prediction_before: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
× fix_prediction_after: public void put ( double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . format ( inqbvugyseznxavcnfcp ) ) ; }

line_index: 200
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
bug_after_refactoring: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( truhybnhusesgjdbqnuedxl ) ; } <s> public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( truhybnhusesgjdbqnuedxl ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
fix_after_refactoring: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( falshybnhusesgjdbqnuedxl ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
× fix_prediction_after: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxlnt ) {}

line_index: 206
bug_before_refactoring: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
bug_after_refactoring: public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi . toString () ) ; } <s> public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi . toString () ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
fix_before_refactoring: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host ) ; }
fix_after_refactoring: public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi ) ; }
√ fix_prediction_before: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host ) ; }
× fix_prediction_after: public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi . toString () . toLowerCase () ) ; }

line_index: 212
bug_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> fixed some bugs in the script generator
bug_after_refactoring: public java.lang.String buildSpeech ( java.lang.String sfvpdsrrdxsvpatztlal ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , input ) ; } <s> public java.lang.String buildSpeech ( java.lang.String sfvpdsrrdxsvpatztlal ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , input ) ; } <s> fixed some bugs in the script generator
fix_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
fix_after_refactoring: public java.lang.String buildSpeech ( java.lang.String sfvpdsrrdxsvpatztlal ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , sfvpdsrrdxsvpatztlal ) ; }
√ fix_prediction_before: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
× fix_prediction_after: public java.lang.String buildSpeech ( java.lang.String sfvpdsrrdxsvpatztlal ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , sfvpdsrrdxsvpatztlaltext ) ; }

line_index: 217
bug_before_refactoring: public synchronized void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> public synchronized void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> Attempt to fix reported performance issues in logging: - Use a single monitor instead of two. - Cache MessageFormat and use the existing StringBuffer.   git-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1569896 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: public synchronized void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) throws java.lang.IllegalArgumentException { sourceFormat ( bbeeoteclbpyhzopkppo ) ; } <s> public synchronized void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) throws java.lang.IllegalArgumentException { sourceFormat ( bbeeoteclbpyhzopkppo ) ; } <s> Attempt to fix reported performance issues in logging: - Use a single monitor instead of two. - Cache MessageFormat and use the existing StringBuffer.   git-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1569896 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: public void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( format ) ; } }
fix_after_refactoring: public void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( bbeeoteclbpyhzopkppo ) ; } }
√ fix_prediction_before: public void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( format ) ; } }
× fix_prediction_after: public void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) { sourceFormat ( bbeeoteclbpyhzopkppo , null ) ; }

line_index: 229
bug_before_refactoring: public void setDur ( long duration ) { this . dur = duration ; } <s> public void setDur ( long duration ) { this . dur = duration ; } <s> Some bugfixes...
bug_after_refactoring: public void setDur ( long mhuyxcqtiqnpnbsjaqyn ) { this . dur = mhuyxcqtiqnpnbsjaqyn ; } <s> public void setDur ( long mhuyxcqtiqnpnbsjaqyn ) { this . dur = mhuyxcqtiqnpnbsjaqyn ; } <s> Some bugfixes...
fix_before_refactoring: public void setDur ( long dur ) { this . dur = dur ; }
fix_after_refactoring: public void setDur ( long dur ) { this . dur = dur ; }
√ fix_prediction_before: public void setDur ( long dur ) { this . dur = dur ; }
× fix_prediction_after: public void setDur ( long mhuyxcqtiqnpnbsjaqyn ) { dur = mhuyxcqtiqnpnbsjaqyn ; }

line_index: 243
bug_before_refactoring: private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
bug_after_refactoring: private carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( yroemouwyfevhszcztuv . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( yroemouwyfevhszcztuv . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
fix_before_refactoring: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
fix_after_refactoring: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( yroemouwyfevhszcztuv . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
√ fix_prediction_before: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
× fix_prediction_after: private carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( commandPart . getKeywordType () . equals ( yroemouwyfevhszcztuv ) ) { return commandPart ; } } return null ; }

line_index: 255
bug_before_refactoring: private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) ; <s> private static native void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
fix_after_refactoring: private static void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float zcquhkbywqczpudxvhkg , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) {}
√ fix_prediction_before: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
× fix_prediction_after: private static void _imaqEqualize ( long kcayihilxswgrywtaunh , long jpedaahgjaxbrcledtra , float wphfjrbgcgjtnsqupven , long mosloqadyhpcgbrptljl ) {}

line_index: 283
bug_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
bug_after_refactoring: public void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdf ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf yksjvuunxxjrgsqggbdf ) { for ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Entity add : yksjvuunxxjrgsqggbdf . gyksjvuunxxjrgsqggbdftEntitiyksjvuunxxjrgsqggbdfsFor ( Familiyksjvuunxxjrgsqggbdfs.GRAVITY_ATTRACTED ) ) yksjvuunxxjrgsqggbdfntitiyksjvuunxxjrgsqggbdfs () . add ( add ) ; } <s> public void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdf ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf yksjvuunxxjrgsqggbdf ) { for ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Entity add : yksjvuunxxjrgsqggbdf . gyksjvuunxxjrgsqggbdftEntitiyksjvuunxxjrgsqggbdfsFor ( Familiyksjvuunxxjrgsqggbdfs.GRAVITY_ATTRACTED ) ) yksjvuunxxjrgsqggbdfntitiyksjvuunxxjrgsqggbdfs () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
fix_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
fix_after_refactoring: public void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdf ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf yksjvuunxxjrgsqggbdf ) {}
√ fix_prediction_before: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
× fix_prediction_after: public void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdfy ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf.Entity add ) {}

line_index: 313
bug_before_refactoring: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> Modified MultiAsyncToSync class to fix a timing issue.
bug_after_refactoring: private void addSleeper ( final long rsnpzqwarwlqggrbnebc , final org.apache.reef.util.ComplexCondition viflsxkczffrqtjqhgmb ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc , viflsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } } } <s> private void addSleeper ( final long rsnpzqwarwlqggrbnebc , final org.apache.reef.util.ComplexCondition viflsxkczffrqtjqhgmb ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc , viflsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } } } <s> Modified MultiAsyncToSync class to fix a timing issue.
fix_before_refactoring: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } }
fix_after_refactoring: private void addSleeper ( final long rsnpzqwarwlqggrbnebc , final org.apache.reef.util.ComplexCondition viflsxkczffrqtjqhgmb ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc , viflsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } }
√ fix_prediction_before: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } }
× fix_prediction_after: private void addSleeper ( final long rsnpzqwarwlqggrbnebc , final org.apache.reef.util.ComplexCondition viflsxkczffrqtjqhgmb ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc , viflsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } } }

line_index: 319
bug_before_refactoring: public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
bug_after_refactoring: public static int iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , blzwvxpdynvdjdtnphjs , kccdhvsqqmabdxcmtvlx ) ; return android.util.Log . i ( qtrsmstuojacrgvlgdkg , msg ) ; } return 0 ; } <s> public static int iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , blzwvxpdynvdjdtnphjs , kccdhvsqqmabdxcmtvlx ) ; return android.util.Log . i ( qtrsmstuojacrgvlgdkg , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
fix_before_refactoring: public static void ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
fix_after_refactoring: public static void iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , blzwvxpdynvdjdtnphjs , kccdhvsqqmabdxcmtvlx ) ; android.util.Log . i ( qtrsmstuojacrgvlgdkg , msg ) ; } }
√ fix_prediction_before: public static void ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
× fix_prediction_after: public static void iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) {}

line_index: 325
bug_before_refactoring: private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
bug_after_refactoring: private double convertUnit ( double jndcwqyagzgmgvgugqfj , char fwajftdkovchuelomqgc ) { int index = fwajftdkovchuelomqgces . indexOf ( fwajftdkovchuelomqgc ) ; if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double convertUnit ( double jndcwqyagzgmgvgugqfj , char fwajftdkovchuelomqgc ) { int index = fwajftdkovchuelomqgces . indexOf ( fwajftdkovchuelomqgc ) ; if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
fix_before_refactoring: private double convertUnit ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
fix_after_refactoring: private double convertUnit ( double jndcwqyagzgmgvgugqfj , int index ) { if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
√ fix_prediction_before: private double convertUnit ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
× fix_prediction_after: private double convertUnit ( double jndcwqyagzgmgvgugqfj , char fwajftdkovchuelomqgc ) { int index = fwajftdkovchuelomqgces . indexOf ( fwajftdkovchuelomqgc ) ; if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }

line_index: 330
bug_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { if ( hzryalaqdzwapwwmkrev != ( - 1 ) ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; } } <s> private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { if ( hzryalaqdzwapwwmkrev != ( - 1 ) ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
fix_after_refactoring: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; }
√ fix_prediction_before: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
× fix_prediction_after: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) {}

line_index: 355
bug_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
bug_after_refactoring: @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) { java.lang.Systtntwrtxwfkozqwezzjltm.out . println ( ( "Moustntwrtxwfkozqwezzjlt Exittntwrtxwfkozqwezzjltd: " + ( tntwrtxwfkozqwezzjlt . gtntwrtxwfkozqwezzjlttPoint () . toString () ) ) ) ; } <s> @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) { java.lang.Systtntwrtxwfkozqwezzjltm.out . println ( ( "Moustntwrtxwfkozqwezzjlt Exittntwrtxwfkozqwezzjltd: " + ( tntwrtxwfkozqwezzjlt . gtntwrtxwfkozqwezzjlttPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
fix_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
fix_after_refactoring: @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) {}
√ fix_prediction_before: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
× fix_prediction_after: public void moustntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltm.Moustntwrtxwfkozqwezzjltd ) {}

line_index: 365
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; } <s> Fix bugs when cancel book tour
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; }

line_index: 372
bug_before_refactoring: private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
bug_after_refactoring: private static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; } <s> private static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; } <s> Fixed a problem  now you can really add blocks/items!
fix_before_refactoring: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
fix_after_refactoring: protected static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; }
√ fix_prediction_before: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
× fix_prediction_after: protected static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvomsxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvom

line_index: 373
bug_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> fixed url error.
bug_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnixdocxhmmccdlv , java.lang.String wfgfzinyfqcwuwabgkoz ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlbl , mznhnnixdocxhmmccdlv , wfgfzinyfqcwuwabgkoz ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnixdocxhmmccdlv , java.lang.String wfgfzinyfqcwuwabgkoz ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlbl , mznhnnixdocxhmmccdlv , wfgfzinyfqcwuwabgkoz ) ; } <s> fixed url error.
fix_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name ) ; }
fix_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnixdocxhmmccdlv ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlbl , mznhnnixdocxhmmccdlv ) ; }
√ fix_prediction_before: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name ) ; }
× fix_prediction_after: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnixdocxhmmccdlv , java.lang.String wfgfzinyfqcwuwabgkoz ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlvlbl , mznhnnixdocxhmmccdlv , wfgfzinyfqcwuwabgkoz ) ; }

line_index: 380
bug_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
bug_after_refactoring: @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( hrngyhlddphvsjvdiwbu.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { hrngyhlddphvsjvdiwbu . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( hrngyhlddphvsjvdiwbu.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { hrngyhlddphvsjvdiwbu . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
fix_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
fix_after_refactoring: @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) {}
√ fix_prediction_before: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
× fix_prediction_after: @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) { hrngyhlddphvsjvdiwbu . setResult ( Event.Result.DENY ) ; }

line_index: 381
bug_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
bug_after_refactoring: public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucilvacn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucilvacn , true ) ; } <s> public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucilvacn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucilvacn , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
fix_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , false ) ; }
fix_after_refactoring: public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucilvacn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucilvacn , false ) ; }
√ fix_prediction_before: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , false ) ; }
× fix_prediction_after: public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucilvacn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucilvacn , true , false ) ; }

line_index: 388
bug_before_refactoring: public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
bug_after_refactoring: public static java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; } <s> public static java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; } <s> Debug statements are refactored. NPE fixed #420.
fix_before_refactoring: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
fix_after_refactoring: public java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; }
√ fix_prediction_before: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
× fix_prediction_after: public java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvlljhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.

line_index: 389
bug_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
bug_after_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent rrjliuqjhxruecyhrhqg ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent rrjliuqjhxruecyhrhqg ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
fix_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) {}
fix_after_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent rrjliuqjhxruecyhrhqg ) {}
√ fix_prediction_before: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) {}
× fix_prediction_after: @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent rrjliuqjhxruecyhrhqg ) { selectSWCColor ( swcColor ) ; }

line_index: 393
bug_before_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } } <s> public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } } <s> Improve formatting and fix errors in AST writer  Multiline declarations and statements are now separated with empty new lines from other declarations to improve clarity of generated source code. Moreover  some errors are fixed  e.g. the empty statement is not ignored or semicolons appear after extension declarations.
bug_after_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node ptglmfqfpjqkjcsmjpqe ) { if ( ptglmfqfpjqkjcsmjpqe instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( ptglmfqfpjqkjcsmjpqe ) ) ) ; } else { ptglmfqfpjqkjcsmjpqe . accept ( writeVisitor , null ) ; } } <s> public void write ( pl.edu.mimuw.nesc.astwriting.Node ptglmfqfpjqkjcsmjpqe ) { if ( ptglmfqfpjqkjcsmjpqe instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( ptglmfqfpjqkjcsmjpqe ) ) ) ; } else { ptglmfqfpjqkjcsmjpqe . accept ( writeVisitor , null ) ; } } <s> Improve formatting and fix errors in AST writer  Multiline declarations and statements are now separated with empty new lines from other declarations to improve clarity of generated source code. Moreover  some errors are fixed  e.g. the empty statement is not ignored or semicolons appear after extension declarations.
fix_before_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { node . accept ( writeVisitor , null ) ; }
fix_after_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node ptglmfqfpjqkjcsmjpqe ) { ptglmfqfpjqkjcsmjpqe . accept ( writeVisitor , null ) ; }
√ fix_prediction_before: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { node . accept ( writeVisitor , null ) ; }
× fix_prediction_after: public void write ( pl.edu.mimuw.nesc.astwriting.Node ptglmfqfpjqkjcsmjpqe ) { if ( ptglmfqfpjqkjcsmjpqe instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( ptglmfqfpjqkjcsmjpqe ) ) ) ; } accept ( writeVisitor , null ) ; }

line_index: 398
bug_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
bug_after_refactoring: public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } <s> public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
fix_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
fix_after_refactoring: public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { synchronized ( this . mtyjzdjxpejyderjqyozs ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } }
√ fix_prediction_before: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
× fix_prediction_after: public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { synchronized ( this ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } }

line_index: 426
bug_before_refactoring: protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
bug_after_refactoring: protected lbnwhbdfwztstqfprkupoolean applies ( lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; } <s> protected lbnwhbdfwztstqfprkupoolean applies ( lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
fix_before_refactoring: public boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
fix_after_refactoring: pulbnwhbdfwztstqfprkuplic lbnwhbdfwztstqfprkupoolean applies ( lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; }
√ fix_prediction_before: public boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
× fix_prediction_after: protected lbnwhbdfwztstqfprkupoolean applies ( lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; }

line_index: 429
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( parentId , id ) ; return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( parentId , id ) ; return result ; } <s> bugfix， 参数只有一个id
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long yysdlamrvojqowtzejph , java.lang.Long rzovdggyrqipgwcilmlv ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( yysdlamrvojqowtzejph , rzovdggyrqipgwcilmlv ) ; return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long yysdlamrvojqowtzejph , java.lang.Long rzovdggyrqipgwcilmlv ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( yysdlamrvojqowtzejph , rzovdggyrqipgwcilmlv ) ; return result ; } <s> bugfix， 参数只有一个id
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( id ) ; return result ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long rzovdggyrqipgwcilmlv ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( rzovdggyrqipgwcilmlv ) ; return result ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( id ) ; return result ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long yysdlamrvojqowtzejph , java.lang.Long rzovdggyrqipgwcilmlv ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( yysdlamrvojqowtzejph , rzovdggyrqipgwcilmlvl ) ; return result ; }

line_index: 444
bug_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
bug_after_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa , org.apache.lucene.util.BytesRef bwfeoczhccmfjmzfunfz , int skskavguasqjvmqjcuba ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa , org.apache.lucene.util.BytesRef bwfeoczhccmfjmzfunfz , int skskavguasqjvmqjcuba ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
fix_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
fix_after_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
√ fix_prediction_before: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
× fix_prediction_after: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }

line_index: 458
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
bug_after_refactoring: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { if ( GampcmdoekuwiexcvmxcccbBoard.isSolving ) { javax.swing.JOptionPanpcmdoekuwiexcvmxcccb . showMpcmdoekuwiexcvmxcccbssagpcmdoekuwiexcvmxcccbDialog ( null , "Plpcmdoekuwiexcvmxcccbaspcmdoekuwiexcvmxcccb wait for puzzlpcmdoekuwiexcvmxcccb to solvpcmdoekuwiexcvmxcccb!" ) ; } pcmdoekuwiexcvmxcccblspcmdoekuwiexcvmxcccb { npcmdoekuwiexcvmxcccbw InputGrid () ; } } <s> public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { if ( GampcmdoekuwiexcvmxcccbBoard.isSolving ) { javax.swing.JOptionPanpcmdoekuwiexcvmxcccb . showMpcmdoekuwiexcvmxcccbssagpcmdoekuwiexcvmxcccbDialog ( null , "Plpcmdoekuwiexcvmxcccbaspcmdoekuwiexcvmxcccb wait for puzzlpcmdoekuwiexcvmxcccb to solvpcmdoekuwiexcvmxcccb!" ) ; } pcmdoekuwiexcvmxcccblspcmdoekuwiexcvmxcccb { npcmdoekuwiexcvmxcccbw InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
fix_after_refactoring: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { npcmdoekuwiexcvmxcccbw InputGrid () ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
× fix_prediction_after: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccb ) {}

line_index: 470
bug_before_refactoring: private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
bug_after_refactoring: private void setEndTime ( java.lang.Double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = ( java.lang.Math . floor ( ( kggqoqacfhjyujsmpeyn * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = ( java.lang.Math . floor ( ( kggqoqacfhjyujsmpeyn * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
fix_before_refactoring: void setEndTime ( double endTime ) { this . endTime = endTime ; }
fix_after_refactoring: void setEndTime ( double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = kggqoqacfhjyujsmpeyn ; }
√ fix_prediction_before: void setEndTime ( double endTime ) { this . endTime = endTime ; }
× fix_prediction_after: private void setEndTime ( double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = kggqoqacfhjyujsmpeyn ; }

line_index: 475
bug_before_refactoring: public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
bug_after_refactoring: public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
fix_before_refactoring: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
fix_after_refactoring: public < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; }
√ fix_prediction_before: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
× fix_prediction_after: public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdx

line_index: 478
bug_before_refactoring: private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) ; <s> private static native long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
fix_after_refactoring: private static long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) { return 0 ; }
√ fix_prediction_before: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
× fix_prediction_after: private static long _imaqClampMax2 ( long aqylawpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) { return 0 ; }

line_index: 481
bug_before_refactoring: private static native void _IMAQdxSnap ( int id , long image ) ; <s> private static native void _IMAQdxSnap ( int id , long image ) ; <s> Fixing bugs
bug_after_refactoring: private static native voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) ; <s> private static native voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSnap ( int id , long image ) {}
fix_after_refactoring: private static voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) {}
√ fix_prediction_before: private static void _IMAQdxSnap ( int id , long image ) {}
× fix_prediction_after: private static native voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) { return null ; }

line_index: 512
bug_before_refactoring: private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
bug_after_refactoring: private void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
fix_before_refactoring: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
fix_after_refactoring: public void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; }
√ fix_prediction_before: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
× fix_prediction_after: public void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzcz

line_index: 516
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> 创建圈子bug -fix
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjnvemszxkkzecrjeaqd , com.ezb.jdb.model.Circle evegwrnaqqyxcvgtlxsm ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjnvemszxkkzecrjeaqd , evegwrnaqqyxcvgtlxsm ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjnvemszxkkzecrjeaqd , com.ezb.jdb.model.Circle evegwrnaqqyxcvgtlxsm ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjnvemszxkkzecrjeaqd , evegwrnaqqyxcvgtlxsm ) ; } <s> 创建圈子bug -fix
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjnvemszxkkzecrjeaqd , com.ezb.jdb.model.Circle evegwrnaqqyxcvgtlxsm ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjnvemszxkkzecrjeaqd , evegwrnaqqyxcvgtlxsm ) ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjnvemszxkkzecrjeaqd ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjnvemszxkkzecrjeaqd ) ; }

line_index: 523
bug_before_refactoring: void onSuccess ( T response , int type ) ; <s> void onSuccess ( T response , int type ) ; <s> fixed bug with markers removed unused code
bug_after_refactoring: void onSuccess ( T xhyvquoehwrmjtiducoh , int mlbplzkxfjzzgmgvzdml ) ; <s> void onSuccess ( T xhyvquoehwrmjtiducoh , int mlbplzkxfjzzgmgvzdml ) ; <s> fixed bug with markers removed unused code
fix_before_refactoring: void onSuccess ( T response ) ;
fix_after_refactoring: void onSuccess ( T xhyvquoehwrmjtiducoh ) ;
√ fix_prediction_before: void onSuccess ( T response ) ;
× fix_prediction_after: void onSuccess ( T xhyvquoehwrmjtiducoh , int mlbplzkxfjzzgmgvzdml ) ;

line_index: 532
bug_before_refactoring: public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> Tests added and tons of bug fixes
bug_after_refactoring: public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { long i = ( pointer ) + ( nbmlpveapxnjebpeskkc * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , payagkbqpqvwwbftngvg ) ; } <s> public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { long i = ( pointer ) + ( nbmlpveapxnjebpeskkc * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , payagkbqpqvwwbftngvg ) ; } <s> Tests added and tons of bug fixes
fix_before_refactoring: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
fix_after_refactoring: public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { ensure ( nbmlpveapxnjebpeskkc ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + nbmlpveapxnjebpeskkc ) , payagkbqpqvwwbftngvg ) ; }
√ fix_prediction_before: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
× fix_prediction_after: public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { ensure ( nbmlpveapxnjebpeskkc ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + ( nbmlpveapxnjebpeskkc * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ) , payagkbqpqvwwbftngvg ) ; }

line_index: 548
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
bug_after_refactoring: @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username . get () , password . get () ) ; } <s> @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username , password ) ; }
fix_after_refactoring: @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username , password ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username , password ) ; }
× fix_prediction_after: @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username . get () , password . get () ) ; }

line_index: 564
bug_before_refactoring: void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> void sendImageToServer ( java.lang.String id , java.lang.String client ) ; <s> versuch serverbug zu fixen
bug_after_refactoring: vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz , java.lang.String yyoffuujlaoyjfkcscbh ) ; <s> vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz , java.lang.String yyoffuujlaoyjfkcscbh ) ; <s> versuch serverbug zu fixen
fix_before_refactoring: void sendImageToServer ( java.lang.String id ) ;
fix_after_refactoring: vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz ) ;
√ fix_prediction_before: void sendImageToServer ( java.lang.String id ) ;
× fix_prediction_after: vocswfciifojaafcranlrz sendImageToServer ( java.lang.String cswfciifojaafcranlrz , java.lang.String yyoffuujlaoyjfkcscbh ) {}

line_index: 566
bug_before_refactoring: public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
bug_after_refactoring: public void setRadii ( byte emvksywonwiqbrublbhp ) { byte before = this . emvksywonwiqbrublbhp ; this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; if ( before != ( this . emvksywonwiqbrublbhp ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void setRadii ( byte emvksywonwiqbrublbhp ) { byte before = this . emvksywonwiqbrublbhp ; this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; if ( before != ( this . emvksywonwiqbrublbhp ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
fix_before_refactoring: public void setRadii ( byte radii ) { this . radii = radii ; }
fix_after_refactoring: public void setRadii ( byte emvksywonwiqbrublbhp ) { this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; }
√ fix_prediction_before: public void setRadii ( byte radii ) { this . radii = radii ; }
× fix_prediction_after: public void setRadii ( byte emvksywonwiqbrublbhp ) { byte before = this . emvksywonwiqbrublbhp ; this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; }

line_index: 568
bug_before_refactoring: public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
bug_after_refactoring: public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; } <s> public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; } <s> Fixed issues related to failure to remove dead callbacks
fix_before_refactoring: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( callback ) ; } }
fix_after_refactoring: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; } }
√ fix_prediction_before: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( callback ) ; } }
× fix_prediction_after: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; }

line_index: 571
bug_before_refactoring: public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
bug_after_refactoring: public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
fix_before_refactoring: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
fix_after_refactoring: public void addEvent ( java.lang.String saodzolhyrhqzihljcxu , java.lang.String xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; }
√ fix_prediction_before: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
× fix_prediction_after: public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; }

line_index: 584
bug_before_refactoring: public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
bug_after_refactoring: public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; } <s> public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; } <s> Fixed issues related to failure to remove dead callbacks
fix_before_refactoring: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( callback ) ; } }
fix_after_refactoring: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; } }
√ fix_prediction_before: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( callback ) ; } }
× fix_prediction_after: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { if ( ( dataLoaderCallbacks ) != null ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; } }

line_index: 609
bug_before_refactoring: public void onButton1Click ( int imageViewID , int position ) ; <s> public void onButton1Click ( int imageViewID , int position ) ; <s> Merge branch 'hotfix_image_id' into develop. Massive refactoring.  Button-click now correctly detects text from the image. Was earlier detecting text from wrong image due to bugs in the way the image-id was being passed to MainActivity.
bug_after_refactoring: public void onButton1Click ( int fsefwlbzofvtouaphulq , int ylwepvukqqnhhpqqeaza ) ; <s> public void onButton1Click ( int fsefwlbzofvtouaphulq , int ylwepvukqqnhhpqqeaza ) ; <s> Merge branch 'hotfix_image_id' into develop. Massive refactoring.  Button-click now correctly detects text from the image. Was earlier detecting text from wrong image due to bugs in the way the image-id was being passed to MainActivity.
fix_before_refactoring: public void onButton1Click ( int position ) ;
fix_after_refactoring: public void onButton1Click ( int ylwepvukqqnhhpqqeaza ) ;
√ fix_prediction_before: public void onButton1Click ( int position ) ;
× fix_prediction_after: public void onButton1Click ( int fsefwlbzofvtouaphulq , int ylwepvukqqnhhpqqeaza ) ;

line_index: 611
bug_before_refactoring: private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> resolved file name issues
bug_after_refactoring: private void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } } <s> private void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } } <s> resolved file name issues
fix_before_refactoring: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
fix_after_refactoring: public void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } }
√ fix_prediction_before: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
× fix_prediction_after: private void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu ) ; }

line_index: 613
bug_before_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> bug fix  bug fix
bug_after_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) { final com.media2359.nickel.model.Recipient object = this ; io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq = io.pzmqthzzoaozczrrbyjq.Realm . getDefaultInstance () ; pzmqthzzoaozczrrbyjq . executeTransaction ( new io.pzmqthzzoaozczrrbyjq.Realm.Transaction () { @ java.lang.Override public void execute ( io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq ) { object.wrtwfpksbimsnescupsp = wrtwfpksbimsnescupsp ; } } ) ; } <s> public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) { final com.media2359.nickel.model.Recipient object = this ; io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq = io.pzmqthzzoaozczrrbyjq.Realm . getDefaultInstance () ; pzmqthzzoaozczrrbyjq . executeTransaction ( new io.pzmqthzzoaozczrrbyjq.Realm.Transaction () { @ java.lang.Override public void execute ( io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq ) { object.wrtwfpksbimsnescupsp = wrtwfpksbimsnescupsp ; } } ) ; } <s> bug fix  bug fix
fix_before_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { this . currentTransaction = currentTransaction ; }
fix_after_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) { this . wrtwfpksbimsnescupsp = wrtwfpksbimsnescupsp ; }
√ fix_prediction_before: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { this . currentTransaction = currentTransaction ; }
× fix_prediction_after: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) {}

line_index: 620
bug_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
bug_after_refactoring: @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Enfvoettlibskfftytqwjiry enfvoettlibskfftytqwjiry ) { refvoettlibskfftytqwjiurn builder . addMember ( enfvoettlibskfftytqwjiry.name , "$T.class" , fvoettlibskfftytqwji ) ; } <s> @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Enfvoettlibskfftytqwjiry enfvoettlibskfftytqwjiry ) { refvoettlibskfftytqwjiurn builder . addMember ( enfvoettlibskfftytqwjiry.name , "$T.class" , fvoettlibskfftytqwji ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
fix_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
fix_after_refactoring: @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , java.lang.Sfvoettlibskfftytqwjiring name ) { refvoettlibskfftytqwjiurn builder . addMember ( name , "$T.class" , fvoettlibskfftytqwji ) ; }
√ fix_prediction_before: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String getName () { return name ; }

line_index: 623
bug_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
bug_after_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; } } <s> Fix: toolbar issue
fix_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; }

line_index: 633
bug_before_refactoring: public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> Adds full-screen Dialog for restaurant adding Splits Dialogs for adding and editing into own Class Fixes some errors from latest commit
bug_after_refactoring: public static boolean isMediaDocument ( android.net.Uri khptmomshtngdqdhxcug ) { return "com.android.providers.media.documents" . equals ( khptmomshtngdqdhxcug . getAuthority () ) ; } <s> public static boolean isMediaDocument ( android.net.Uri khptmomshtngdqdhxcug ) { return "com.android.providers.media.documents" . equals ( khptmomshtngdqdhxcug . getAuthority () ) ; } <s> Adds full-screen Dialog for restaurant adding Splits Dialogs for adding and editing into own Class Fixes some errors from latest commit
fix_before_refactoring: private static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; }
fix_after_refactoring: private static boolean isMediaDocument ( android.net.Uri khptmomshtngdqdhxcug ) { return "com.android.providers.media.documents" . equals ( khptmomshtngdqdhxcug . getAuthority () ) ; }
√ fix_prediction_before: private static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; }
× fix_prediction_after: public static boolean isMediaDocument ( android.net.Uri khptmomshtngdqdhxcug ) { return true ; }

line_index: 653
bug_before_refactoring: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> Fix Various Issues  Implement command for Mac OS X Fix issue with getMousePoisiton and Java 8 Fix Object[] to String[] issue in JumpEnd.java
bug_after_refactoring: public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) { requestFocusInWindow ( true ) ; } <s> public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) { requestFocusInWindow ( true ) ; } <s> Fix Various Issues  Implement command for Mac OS X Fix issue with getMousePoisiton and Java 8 Fix Object[] to String[] issue in JumpEnd.java
fix_before_refactoring: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow () ; }
fix_after_refactoring: public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) { requestFocusInWindow () ; }
√ fix_prediction_before: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow () ; }
× fix_prediction_after: public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) {}

line_index: 665
bug_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> Fixed javadocs issues
bug_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlv ) { return aphzeazfuajuinungdlv ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlv ) { return aphzeazfuajuinungdlv ; } <s> Fixed javadocs issues
fix_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
fix_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ) { return aphzeazfuajuinungdlvction ; }
√ fix_prediction_before: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
× fix_prediction_after: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ) { return aphzeazfuajuinungdlv ; }

line_index: 669
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
bug_after_refactoring: public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxowvvqanssgnovotlnngrxownt.ActionEvvqanssgnovotlnngrxownt vqanssgnovotlnngrxow ) { vqanssgnovotlnngrxowditChvqanssgnovotlnngrxowckBox ( vqanssgnovotlnngrxow , truvqanssgnovotlnngrxow ) ; } <s> public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxowvvqanssgnovotlnngrxownt.ActionEvvqanssgnovotlnngrxownt vqanssgnovotlnngrxow ) { vqanssgnovotlnngrxowditChvqanssgnovotlnngrxowckBox ( vqanssgnovotlnngrxow , truvqanssgnovotlnngrxow ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
fix_after_refactoring: public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxowvvqanssgnovotlnngrxownt.ActionEvvqanssgnovotlnngrxownt vqanssgnovotlnngrxow ) { vqanssgnovotlnngrxowditChvqanssgnovotlnngrxowckBox ( vqanssgnovotlnngrxow , falsvqanssgnovotlnngrxow ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
× fix_prediction_after: public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxvd , truvqanssgnovotlnngrxvd ) {}

line_index: 686
bug_before_refactoring: private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
bug_after_refactoring: pgyvammwqcfhyljihwraoivate double cost ( main.logic.Route gyvammwqcfhyljihwrao ) { gyvammwqcfhyljihwraoetugyvammwqcfhyljihwraon ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoGgyvammwqcfhyljihwraoamTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( weight ) ) + ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoVolumeTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( volume ) ) ; } <s> pgyvammwqcfhyljihwraoivate double cost ( main.logic.Route gyvammwqcfhyljihwrao ) { gyvammwqcfhyljihwraoetugyvammwqcfhyljihwraon ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoGgyvammwqcfhyljihwraoamTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( weight ) ) + ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoVolumeTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
fix_before_refactoring: public double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
fix_after_refactoring: public double cost ( main.logic.Route gyvammwqcfhyljihwrao ) { gyvammwqcfhyljihwraoetugyvammwqcfhyljihwraon ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoGgyvammwqcfhyljihwraoamTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( weight ) ) + ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoVolumeTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( volume ) ) ; }
√ fix_prediction_before: public double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
× fix_prediction_after: pgyvammwqcfhyljihwraoivate double cost ( main.logic.Route gyvammwqcfhyljihwrao ) { return ( weight ) + ( ( weight ) * ( volume ) ) ; }

line_index: 688
bug_before_refactoring: public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
bug_after_refactoring: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { if ( ( max_Char ( jygsacqlnzzfdmpjojkv , 20 ) ) && ( ( jygsacqlnzzfdmpjojkv . length () ) >= 1 ) ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { if ( ( max_Char ( jygsacqlnzzfdmpjojkv , 20 ) ) && ( ( jygsacqlnzzfdmpjojkv . length () ) >= 1 ) ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
fix_before_refactoring: public void setUsername ( java.lang.String username ) { this . username = username ; }
fix_after_refactoring: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; }
√ fix_prediction_before: public void setUsername ( java.lang.String username ) { this . username = username ; }
× fix_prediction_after: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { this . username = jygsacqlnzzfdmpjojkv ; }

line_index: 690
bug_before_refactoring: private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) ; <s> private static native void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
fix_after_refactoring: private static void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) {}
√ fix_prediction_before: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
× fix_prediction_after: private static void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvtdojfkkqtvggxi ) {}

line_index: 696
bug_before_refactoring: public void chatUpdate ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> public void chatUpdate ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> some bug fixed
bug_after_refactoring: public void chatUpdate ( java.lang.String ejsencrdrbwlvharkpyj ) { taChat . append ( ( ejsencrdrbwlvharkpyj + "\n" ) ) ; } <s> public void chatUpdate ( java.lang.String ejsencrdrbwlvharkpyj ) { taChat . append ( ( ejsencrdrbwlvharkpyj + "\n" ) ) ; } <s> some bug fixed
fix_before_refactoring: public void chatUpdate ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
fix_after_refactoring: public void chatUpdate ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
√ fix_prediction_before: public void chatUpdate ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
× fix_prediction_after: public void chatUpdate ( java.lang.String ejsencrdrbwlvharkpyj ) { taChat . append ( ejsencrdrbwlvharkpyj ) ; }

line_index: 704
bug_before_refactoring: public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> Possible fix for errors on shutdown
bug_after_refactoring: public abstract void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr , org.bukkit.GameMode ihdtnnxkzogaunxigopw , me.gnat008.perworldinventory.data.ywgkzyqhohdeyynhqhmzs.PWIPlayer ywgkzyqhohdeyynhqhmz ) ; <s> public abstract void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr , org.bukkit.GameMode ihdtnnxkzogaunxigopw , me.gnat008.perworldinventory.data.ywgkzyqhohdeyynhqhmzs.PWIPlayer ywgkzyqhohdeyynhqhmz ) ; <s> Possible fix for errors on shutdown
fix_before_refactoring: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
fix_after_refactoring: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr , org.bukkit.GameMode ihdtnnxkzogaunxigopw , me.gnat008.perworldinventory.data.ywgkzyqhohdeyynhqhmzs.PWIPlayer ywgkzyqhohdeyynhqhmz ) ;
√ fix_prediction_before: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
× fix_prediction_after: public void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr ) ;

line_index: 715
bug_before_refactoring: public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> Consistent 'id  timestamp' order of paramters in methods  fix bugs in ReplicatedInput.remotePut() and remoteRemove()
bug_after_refactoring: public void initReplicationUpdate ( long hhiwpvsraccnzqiyvtig , byte ssmchvhbeduaqpptkjfr ) { innerRemoteTimestamp = hhiwpvsraccnzqiyvtig ; if ( ssmchvhbeduaqpptkjfr == 0 ) throw new java.lang.IllegalStateException ( "ssmchvhbeduaqpptkjfr can't be 0" ) ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; } <s> public void initReplicationUpdate ( long hhiwpvsraccnzqiyvtig , byte ssmchvhbeduaqpptkjfr ) { innerRemoteTimestamp = hhiwpvsraccnzqiyvtig ; if ( ssmchvhbeduaqpptkjfr == 0 ) throw new java.lang.IllegalStateException ( "ssmchvhbeduaqpptkjfr can't be 0" ) ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; } <s> Consistent 'id  timestamp' order of paramters in methods  fix bugs in ReplicatedInput.remotePut() and remoteRemove()
fix_before_refactoring: public void initReplicationUpdate ( byte identifier , long timestamp ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; }
fix_after_refactoring: public void initReplicationUpdate ( byte ssmchvhbeduaqpptkjfr , long hhiwpvsraccnzqiyvtig ) { innerRemoteTimestamp = hhiwpvsraccnzqiyvtig ; if ( ssmchvhbeduaqpptkjfr == 0 ) throw new java.lang.IllegalStateException ( "ssmchvhbeduaqpptkjfr can't be 0" ) ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; }
√ fix_prediction_before: public void initReplicationUpdate ( byte identifier , long timestamp ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; }
× fix_prediction_after: public void initReplicationUpdate ( long hhiwpvsraccnzqiyvtig , byte ssmchvhbeduaqpptkjfr ) { innerRemoteTimestamp = hhiwpvsraccnzqiyvtig ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; }

line_index: 725
bug_before_refactoring: private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> Fixing bugs
bug_after_refactoring: private static native vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy , long dwifydmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) ; <s> private static native vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy , long dwifydmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
fix_after_refactoring: private static vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy , long dwifydmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) {}
√ fix_prediction_before: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
× fix_prediction_after: private static native vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dwifydmifvjrzqpklcwv , long dwolvedmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) ;

line_index: 731
bug_before_refactoring: public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_after: public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; writeConfig () ; }

line_index: 734
bug_before_refactoring: private int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> private int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> Add support color for rd_background attribute. Add et_dividerCompoundPadding attribute. Correct getTotalPadding functions of EditText class.  Fix incorrect span click bug of ContactEditText class.
bug_after_refactoring: private int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; } <s> private int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; } <s> Add support color for rd_background attribute. Add et_dividerCompoundPadding attribute. Correct getTotalPadding functions of EditText class.  Fix incorrect span click bug of ContactEditText class.
fix_before_refactoring: protected int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; }
fix_after_refactoring: protected int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; }
√ fix_prediction_before: protected int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; }
× fix_prediction_after: protected int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugruaryklqwpsjszpclug , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; }

line_index: 737
bug_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> fixed a bug loook at the commit under this one
bug_after_refactoring: public void init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoynt ldodihcwkdtrjaqbetoy ) { NldodihcwkdtrjaqbetoytworkRldodihcwkdtrjaqbetoygistry.INSTANCE . rldodihcwkdtrjaqbetoygistldodihcwkdtrjaqbetoyrGuiHandlldodihcwkdtrjaqbetoyr ( main.instancldodihcwkdtrjaqbetoy , nldodihcwkdtrjaqbetoyw com.Sandvoxldodihcwkdtrjaqbetoyl.appldodihcwkdtrjaqbetoyng.Proxy.GUIHandlldodihcwkdtrjaqbetoyr () ) ; } <s> public void init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoynt ldodihcwkdtrjaqbetoy ) { NldodihcwkdtrjaqbetoytworkRldodihcwkdtrjaqbetoygistry.INSTANCE . rldodihcwkdtrjaqbetoygistldodihcwkdtrjaqbetoyrGuiHandlldodihcwkdtrjaqbetoyr ( main.instancldodihcwkdtrjaqbetoy , nldodihcwkdtrjaqbetoyw com.Sandvoxldodihcwkdtrjaqbetoyl.appldodihcwkdtrjaqbetoyng.Proxy.GUIHandlldodihcwkdtrjaqbetoyr () ) ; } <s> fixed a bug loook at the commit under this one
fix_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
fix_after_refactoring: public void init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoynt ldodihcwkdtrjaqbetoy ) {}
√ fix_prediction_before: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
× fix_prediction_after: public void init () {}

line_index: 740
bug_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
bug_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
fix_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
fix_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
√ fix_prediction_before: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
× fix_prediction_after: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }

line_index: 771
bug_before_refactoring: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> - Fix bug disconnect  đăng nhập với tài khoản facebook  xử lý cộng trừ tiền
bug_after_refactoring: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym , com.avengers.netty.socket.gate.wood.Message zpnyuaveazfnuwxuqaeq ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; return null ; } <s> @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym , com.avengers.netty.socket.gate.wood.Message zpnyuaveazfnuwxuqaeq ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; return null ; } <s> - Fix bug disconnect  đăng nhập với tài khoản facebook  xử lý cộng trừ tiền
fix_before_refactoring: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; }
fix_after_refactoring: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym , com.avengers.netty.socket.gate.wood.Message zpnyuaveazfnuwxuqaeq ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; }
√ fix_prediction_before: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; }
× fix_prediction_after: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym , com.avengers.netty.socket.gate.wood.Message zpnyuaveazfnuwxuwxqaeq ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; }

line_index: 781
bug_before_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix videoSplash bug
bug_after_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix videoSplash bug
fix_before_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) {}
fix_after_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) {}
√ fix_prediction_before: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) {}
× fix_prediction_after: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) { play () ; }

line_index: 802
bug_before_refactoring: private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) ; <s> private static native void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
fix_after_refactoring: private static void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) {}
√ fix_prediction_before: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
× fix_prediction_after: private static void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejenteds , long qwrbzzedywtdzepedzzj ) {}

line_index: 827
bug_before_refactoring: public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> problem fixed: kid activity crash app after a new kid was created
bug_after_refactoring: dogzyllqggfmntlnrheyublic int save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) { return 0 ; } <s> dogzyllqggfmntlnrheyublic int save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) { return 0 ; } <s> problem fixed: kid activity crash app after a new kid was created
fix_before_refactoring: public void save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) {}
fix_after_refactoring: dogzyllqggfmntlnrheyublic void save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) {}
√ fix_prediction_before: public void save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) {}
× fix_prediction_after: dogzyllqggfmntlnrheyublic int save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) { return 1 ; }

line_index: 835
bug_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
bug_after_refactoring: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } <s> @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } <s> fixed some problem with putting null value parameter to cache
fix_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
fix_after_refactoring: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { if ( leiuldorclztiiguyhrn != null ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } }
√ fix_prediction_before: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
× fix_prediction_after: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { if ( ( cache ) != null ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } }

line_index: 838
bug_before_refactoring: public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void enqueue ( Item item ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
bug_after_refactoring: public void enqueue ( Item eupucixqojmdrwsemxsm ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> public void enqueue ( Item eupucixqojmdrwsemxsm ) { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } <s> fixed checkstyle errors as well as small issue in Deque
fix_before_refactoring: public void enqueue ( Item item ) {}
fix_after_refactoring: public void enqueue ( Item eupucixqojmdrwsemxsm ) {}
√ fix_prediction_before: public void enqueue ( Item item ) {}
× fix_prediction_after: public void enqueue ( Item eupucixqojmdrwsemxmxsm ) {}

line_index: 847
bug_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
bug_after_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , long wakskxvugzuuypusmrzy_elements , long ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ; <s> long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , long wakskxvugzuuypusmrzy_elements , long ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
fix_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
fix_after_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , int wakskxvugzuuypusmrzy_elements , int ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ;
√ fix_prediction_before: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
× fix_prediction_after: long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , long wakskxvugzuuypusmrzy_elements , long ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ;

line_index: 852
bug_before_refactoring: private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
bug_after_refactoring: private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
fix_before_refactoring: private void setHeight ( final int height ) { this . height = height ; }
fix_after_refactoring: private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz ; }
√ fix_prediction_before: private void setHeight ( final int height ) { this . height = height ; }
× fix_prediction_after: private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz + 2 ; }

line_index: 871
bug_before_refactoring: protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
bug_after_refactoring: protected void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
fix_before_refactoring: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
fix_after_refactoring: public void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; }
√ fix_prediction_before: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
× fix_prediction_after: protected void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { updateTextureViewSize () ; }

line_index: 886
bug_before_refactoring: @ java.lang.Override public void onConnectionSuspended ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> @ java.lang.Override public void onConnectionSuspended ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> Fix bug while disconnecting the ActivityRecognition
bug_after_refactoring: @ java.lang.Overrbdibydzqthyeflxiquovde publbdibydzqthyeflxiquovc vobdibydzqthyeflxiquovd onConnectbdibydzqthyeflxiquovonSuspended ( bdibydzqthyeflxiquovnt bdibydzqthyeflxiquov ) { com.andela.motustracker.model.ActbdibydzqthyeflxiquovvbdibydzqthyeflxiquovtyRecognbdibydzqthyeflxiquovtbdibydzqthyeflxiquovonScan.googleApbdibydzqthyeflxiquovClbdibydzqthyeflxiquovent . connect () ; } <s> @ java.lang.Overrbdibydzqthyeflxiquovde publbdibydzqthyeflxiquovc vobdibydzqthyeflxiquovd onConnectbdibydzqthyeflxiquovonSuspended ( bdibydzqthyeflxiquovnt bdibydzqthyeflxiquov ) { com.andela.motustracker.model.ActbdibydzqthyeflxiquovvbdibydzqthyeflxiquovtyRecognbdibydzqthyeflxiquovtbdibydzqthyeflxiquovonScan.googleApbdibydzqthyeflxiquovClbdibydzqthyeflxiquovent . connect () ; } <s> Fix bug while disconnecting the ActivityRecognition
fix_before_refactoring: @ java.lang.Override public void onConnectionSuspended ( int i ) {}
fix_after_refactoring: @ java.lang.Overrbdibydzqthyeflxiquovde publbdibydzqthyeflxiquovc vobdibydzqthyeflxiquovd onConnectbdibydzqthyeflxiquovonSuspended ( bdibydzqthyeflxiquovnt bdibydzqthyeflxiquov ) {}
√ fix_prediction_before: @ java.lang.Override public void onConnectionSuspended ( int i ) {}
× fix_prediction_after: @ java.lang.Override public void connect () { com.andela.motustracker.model.Actbdibydzqthyeflxiquovdibydzqthyeflxiquovdibydzqthyeflxiquovtbdibydzqthyeflxiquov

line_index: 887
bug_before_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
fix_after_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; }
√ fix_prediction_before: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
× fix_prediction_after: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , ecjfkjngtyqdpskpmeyw ) ; }

line_index: 896
bug_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> public void onClick ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> - More bug fixes
bug_after_refactoring: public vocvmmisovjscnfpzyupaz onClick ( androcvmmisovjscnfpzyupaz.content.DialogInterface cwehzqxfscgpkwitoigc , int cvmmisovjscnfpzyupaz ) { androcvmmisovjscnfpzyupaz.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.cvmmisovjscnfpzyupaz.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> public vocvmmisovjscnfpzyupaz onClick ( androcvmmisovjscnfpzyupaz.content.DialogInterface cwehzqxfscgpkwitoigc , int cvmmisovjscnfpzyupaz ) { androcvmmisovjscnfpzyupaz.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.cvmmisovjscnfpzyupaz.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> - More bug fixes
fix_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) {}
fix_after_refactoring: public vocvmmisovjscnfpzyupaz onClick ( androcvmmisovjscnfpzyupaz.content.DialogInterface cwehzqxfscgpkwitoigc , int cvmmisovjscnfpzyupaz ) {}
√ fix_prediction_before: public void onClick ( android.content.DialogInterface dialog , int id ) {}
× fix_prediction_after: public vocvmmisovjscnfpzyupaz onClick ( android.view.View view ) { androcvmmisovjscnfpzyupaz.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.cvmmisovjscnfpzyupaz.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; }

line_index: 914
bug_before_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> API restructuring  bugfixes
bug_after_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; } <s> API restructuring  bugfixes
fix_before_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
fix_after_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; }
√ fix_prediction_before: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
× fix_prediction_after: private boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyva ) . isClear () ; }

line_index: 928
bug_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
bug_after_refactoring: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; java.lang.Systbbczqtiwgqwlskhwcetpm.out . println ( ( "DEBUG: 'Add Points' chbbczqtiwgqwlskhwcetpckbbczqtiwgqwlskhwcetpd statbbczqtiwgqwlskhwcetp is " + ( addRadioButton . isSbbczqtiwgqwlskhwcetplbbczqtiwgqwlskhwcetpctbbczqtiwgqwlskhwcetpd () ) ) ) ; } <s> public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; java.lang.Systbbczqtiwgqwlskhwcetpm.out . println ( ( "DEBUG: 'Add Points' chbbczqtiwgqwlskhwcetpckbbczqtiwgqwlskhwcetpd statbbczqtiwgqwlskhwcetp is " + ( addRadioButton . isSbbczqtiwgqwlskhwcetplbbczqtiwgqwlskhwcetpctbbczqtiwgqwlskhwcetpd () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
fix_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
fix_after_refactoring: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; }
√ fix_prediction_before: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
× fix_prediction_after: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) {}

line_index: 933
bug_before_refactoring: public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> public void error ( long nowNanos , java.lang.Object . . . objects ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; } <s> public void error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
fix_after_refactoring: public boolean error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . dpnqwbpxejvrtaalnkmq ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; }
√ fix_prediction_before: public boolean error ( long nowNanos , java.lang.Object . . . objects ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , nowNanos , objects ) ; }
× fix_prediction_after: public boolean error ( long oevpqfkutzuhdxgauzbu , java.lang.Object . . . . dpnqwbpxejvrtaalnkmq ) { return this . log ( org.apache.cassandra.utils.NoSpamLogger.Level.ERROR , oevpqfkutzuhdxgauzbu , dpnqwbpxejvrtaalnkmq ) ; }

line_index: 940
bug_before_refactoring: public boolean refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> public boolean refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> fix sliding meun bug in BusStationPre
bug_after_refactoring: public boolean refreshList ( android.view.MenuItem wmafzvgfftpibgasyfoh ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> public boolean refreshList ( android.view.MenuItem wmafzvgfftpibgasyfoh ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> fix sliding meun bug in BusStationPre
fix_before_refactoring: public boolean refreshList ( android.view.MenuItem item ) { return true ; }
fix_after_refactoring: public boolean refreshList ( android.view.MenuItem wmafzvgfftpibgasyfoh ) { return true ; }
√ fix_prediction_before: public boolean refreshList ( android.view.MenuItem item ) { return true ; }
× fix_prediction_after: public void refreshList ( android.view.MenuItem wmafzvgfftpibgasyfoh ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; }

line_index: 948
bug_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> bugfix for filter
bug_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw , java.time.LocalTime jlrikuhabczczpkjywfz , java.time.LocalTime nlmgvofossoljumwfvkb ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtqh , fhicnheainbcnsstijqw , jlrikuhabczczpkjywfz , nlmgvofossoljumwfvkb ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw , java.time.LocalTime jlrikuhabczczpkjywfz , java.time.LocalTime nlmgvofossoljumwfvkb ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtqh , fhicnheainbcnsstijqw , jlrikuhabczczpkjywfz , nlmgvofossoljumwfvkb ) ; } <s> bugfix for filter
fix_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtqh , fhicnheainbcnsstijqw ) ; }
√ fix_prediction_before: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw , java.time.LocalTime jlrikuhabczpkjywfz , java.time.LocalTime nlmgvofossoljumwfvkb ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtq

line_index: 959
bug_before_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
fix_after_refactoring: public boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { synchronized ( kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } }
√ fix_prediction_before: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
× fix_prediction_after: public boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { synchronized ( _requestedPiecesMap ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } }

line_index: 960
bug_before_refactoring: public java.lang.String getString ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> public java.lang.String getString ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> Merge pull request #959 from scesbron/bugfix-ws-getstring  [#2035] Fix regression in WS.getString between 1.2.x and 1.4.x
bug_after_refactoring: public java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) { return play.libs.IO . readContentAsString ( getStream () , tjaxwqnkilzuokmdmqjm ) ; } <s> public java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) { return play.libs.IO . readContentAsString ( getStream () , tjaxwqnkilzuokmdmqjm ) ; } <s> Merge pull request #959 from scesbron/bugfix-ws-getstring  [#2035] Fix regression in WS.getString between 1.2.x and 1.4.x
fix_before_refactoring: public abstract java.lang.String getString ( java.lang.String encoding ) ;
fix_after_refactoring: public abstract java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) ;
√ fix_prediction_before: public abstract java.lang.String getString ( java.lang.String encoding ) ;
× fix_prediction_after: public java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) { return play.libs.IO . readContentAsString ( getStream () , tjaxwqnkilzuokmdmqjm ) ; }

line_index: 962
bug_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
bug_after_refactoring: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } <s> public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
fix_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
fix_after_refactoring: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { synchronized ( tmp_rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } }
√ fix_prediction_before: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
× fix_prediction_after: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { synchronized ( hash ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } }

line_index: 965
bug_before_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> small bug fix for security
bug_after_refactoring: @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdmDto kintzwemspcembybdcdm , org.springframework.ui.Model etkdklcqjmpvmetapefj ) { kintzwemspcembybdcdm = kintzwemspcembybdcdmService . create ( kintzwemspcembybdcdm ) ; java.lang.Long id = kintzwemspcembybdcdm . getId () ; return "redirect:/kintzwemspcembybdcdm/" + id ; } <s> @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdmDto kintzwemspcembybdcdm , org.springframework.ui.Model etkdklcqjmpvmetapefj ) { kintzwemspcembybdcdm = kintzwemspcembybdcdmService . create ( kintzwemspcembybdcdm ) ; java.lang.Long id = kintzwemspcembybdcdm . getId () ; return "redirect:/kintzwemspcembybdcdm/" + id ; } <s> small bug fix for security
fix_before_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; }
fix_after_refactoring: @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdmDto kintzwemspcembybdcdm ) { kintzwemspcembybdcdm = kintzwemspcembybdcdmService . create ( kintzwemspcembybdcdm ) ; java.lang.Long id = kintzwemspcembybdcdm . getId () ; return "redirect:/kintzwemspcembybdcdm/" + id ; }
√ fix_prediction_before: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; }
× fix_prediction_after: @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/delete" , method = RequestMethod.POST ) public java.lang.String delete ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdm.dto.kintzwemspcembybdmbybdcdm.dto.kintzwemspcembybdm

line_index: 968
bug_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> Fixing some in-game errors
bug_after_refactoring: public void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze , org.bukkit.plugin.Plugin plugindfqgnwsijfmcvgqmsxzetance ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; dfqgnwsijfmcvgqmsxze . dfqgnwsijfmcvgqmsxzeendMedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxzeage ( gvlfm78.plugin.Hoteldfqgnwsijfmcvgqmsxze.managerdfqgnwsijfmcvgqmsxze.Medfqgnwsijfmcvgqmsxze . medfqgnwsijfmcvgqmsxze ( "chat.commanddfqgnwsijfmcvgqmsxze.reload.dfqgnwsijfmcvgqmsxzeuccedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxze" ) ) ; } <s> public void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze , org.bukkit.plugin.Plugin plugindfqgnwsijfmcvgqmsxzetance ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; dfqgnwsijfmcvgqmsxze . dfqgnwsijfmcvgqmsxzeendMedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxzeage ( gvlfm78.plugin.Hoteldfqgnwsijfmcvgqmsxze.managerdfqgnwsijfmcvgqmsxze.Medfqgnwsijfmcvgqmsxze . medfqgnwsijfmcvgqmsxze ( "chat.commanddfqgnwsijfmcvgqmsxze.reload.dfqgnwsijfmcvgqmsxzeuccedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxze" ) ) ; } <s> Fixing some in-game errors
fix_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
fix_after_refactoring: public void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; dfqgnwsijfmcvgqmsxze . dfqgnwsijfmcvgqmsxzeendMedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxzeage ( gvlfm78.plugin.Hoteldfqgnwsijfmcvgqmsxze.managerdfqgnwsijfmcvgqmsxze.Medfqgnwsijfmcvgqmsxze . medfqgnwsijfmcvgqmsxze ( "chat.commanddfqgnwsijfmcvgqmsxze.reload.dfqgnwsijfmcvgqmsxzeuccedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxze" ) ) ; }
√ fix_prediction_before: public void cmdReload ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
× fix_prediction_after: public void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; }

line_index: 984
bug_before_refactoring: private static native void _IMAQdxStartAcquisition ( int id ) ; <s> private static native void _IMAQdxStartAcquisition ( int id ) ; <s> Fixing bugs
bug_after_refactoring: private static native vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) ; <s> private static native vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxStartAcquisition ( int id ) {}
fix_after_refactoring: private static vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) {}
√ fix_prediction_before: private static void _IMAQdxStartAcquisition ( int id ) {}
× fix_prediction_after: private static native vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) { return null ; }

line_index: 988
bug_before_refactoring: public boolean contains ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> public boolean contains ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> added two tests on the collision and key with negative hashCode  fixed bug with negative hashCode
bug_after_refactoring: public boolean contains ( java.lang.String zmiuhcliehkjjzrqtvbp ) { int arrayIndex = hash ( zmiuhcliehkjjzrqtvbp ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( zmiuhcliehkjjzrqtvbp ) ) != null ) ; } <s> public boolean contains ( java.lang.String zmiuhcliehkjjzrqtvbp ) { int arrayIndex = hash ( zmiuhcliehkjjzrqtvbp ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( zmiuhcliehkjjzrqtvbp ) ) != null ) ; } <s> added two tests on the collision and key with negative hashCode  fixed bug with negative hashCode
fix_before_refactoring: public boolean contains ( java.lang.String key ) { return ( get ( key ) ) != null ; }
fix_after_refactoring: public boolean contains ( java.lang.String zmiuhcliehkjjzrqtvbp ) { return ( get ( zmiuhcliehkjjzrqtvbp ) ) != null ; }
√ fix_prediction_before: public boolean contains ( java.lang.String key ) { return ( get ( key ) ) != null ; }
× fix_prediction_after: public boolean contains ( java.lang.String zmiuhcliehkjjzrqtvbp ) { int arrayIndex = hash ( zmiuhcliehkjjzrqtvbp ) ; return ( array [ arrayIndex ] ) != null ; }

line_index: 1003
bug_before_refactoring: protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void answerCorrect ( android.howrjmorjfcdmyhkbwtq.View howrjmorjfcdmyhkbwtq ) { answerCorrect () ; } <s> protected void answerCorrect ( android.howrjmorjfcdmyhkbwtq.View howrjmorjfcdmyhkbwtq ) { answerCorrect () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void answerCorrect ( android.view.View view ) { answerCorrect () ; }
fix_after_refactoring: public void answerCorrect ( android.howrjmorjfcdmyhkbwtq.View howrjmorjfcdmyhkbwtq ) { answerCorrect () ; }
√ fix_prediction_before: public void answerCorrect ( android.view.View view ) { answerCorrect () ; }
× fix_prediction_after: public void answerCorrect ( android.howrjmorfcdmyhkbwtq.View howrjmorfcdmyhkbwtq ) { answerCorrect () ; }

line_index: 1017
bug_before_refactoring: private static native void nativeStopRtcEventLog ( long nativePeerConnection ) ; <s> private static native void nativeStopRtcEventLog ( long nativePeerConnection ) ; <s> Fix for the JNI interface of RtcEventLog functions.  BUG=webrtc:4741  Review-Url: https://codereview.webrtc.org/2128483002 Cr-Commit-Position: refs/heads/master@{#13393}
bug_after_refactoring: private static native void nativeStopRtcEventLog ( long iwnbwhfgdflelbpguhcb ) ; <s> private static native void nativeStopRtcEventLog ( long iwnbwhfgdflelbpguhcb ) ; <s> Fix for the JNI interface of RtcEventLog functions.  BUG=webrtc:4741  Review-Url: https://codereview.webrtc.org/2128483002 Cr-Commit-Position: refs/heads/master@{#13393}
fix_before_refactoring: private native void nativeStopRtcEventLog ( ) ;
fix_after_refactoring: private native void nativeStopRtcEventLog ( ) ;
√ fix_prediction_before: private native void nativeStopRtcEventLog ( ) ;
× fix_prediction_after: private native void nativeStopRtcEventLog ( long iwnbwhfgdflelbpguhcb ) {}

line_index: 1024
bug_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
bug_after_refactoring: public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( ocjunfoorbxlnlfypmcf ) ) + ocjunfoorbxlnlfypmcf ) ) ; } <s> public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( ocjunfoorbxlnlfypmcf ) ) + ocjunfoorbxlnlfypmcf ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
fix_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
fix_after_refactoring: public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( ocjunfoorbxlnlfypmcf ) ; }
√ fix_prediction_before: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
× fix_prediction_after: public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( fwdb . getChatColor ( ocjunfoorbxlnlfypmcf ) ) ; }

line_index: 1043
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
bug_after_refactoring: @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View otkpoqqsaikkspvpxvql ) { nu.yona.app.ui.YonaActiotkpoqqsaikkspvpxvqlity . getActiotkpoqqsaikkspvpxvqlity () . showKeyboard ( passcode ) ; } <s> @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View otkpoqqsaikkspvpxvql ) { nu.yona.app.ui.YonaActiotkpoqqsaikkspvpxvqlity . getActiotkpoqqsaikkspvpxvqlity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { showKeyboard ( passcode ) ; }
fix_after_refactoring: @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View otkpoqqsaikkspvpxvql ) { showKeyboard ( passcode ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { showKeyboard ( passcode ) ; }
× fix_prediction_after: @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View view ) { nu.yona.app.ui.YonaActiotkpoqqsaikkspvpxvqlity . getActiotkpoqqsaikkspvpxvqlity () . showKeyboard ( passcode ) ; }

line_index: 1045
bug_before_refactoring: public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
bug_after_refactoring: ampppgxvktisvdxgbmlwublic mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; } <s> ampppgxvktisvdxgbmlwublic mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; } <s> Bug fix
fix_before_refactoring: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
fix_after_refactoring: ampppgxvktisvdxgbmlwublic java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; }
√ fix_prediction_before: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
× fix_prediction_after: ampppgxvktisvdxgbmlwpublic mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; }

line_index: 1072
bug_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
bug_after_refactoring: @ java.lang.Override public void chvuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { if ( ! ( chvuzizmpdczjcxeansm instanceof org.jowidgets.cap.common.api.chvuzizmpdczjcxeansm.ServiceCanceledException ) ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; } } <s> @ java.lang.Override public void chvuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { if ( ! ( chvuzizmpdczjcxeansm instanceof org.jowidgets.cap.common.api.chvuzizmpdczjcxeansm.ServiceCanceledException ) ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
fix_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { invocationCallback . exeption ( exception ) ; }
fix_after_refactoring: @ java.lang.Override public void chvuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; }
√ fix_prediction_before: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { invocationCallback . exeption ( exception ) ; }
× fix_prediction_after: @ java.lang.Override public void chvuzuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; }

line_index: 1073
bug_before_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ; <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
fix_after_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ;
√ fix_prediction_before: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
× fix_prediction_after: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) { return null ; }

line_index: 1074
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
√ fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public app2dpcimpl.geometry.PVD2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihur

line_index: 1079
bug_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> Wall Glitch Fixed  Glitching into the field has been fixed. Some major bugs still remain like the score which is messed up.
bug_after_refactoring: @ java.lang.Ovztitieawrjscnwsjdrhcrridztitieawrjscnwsjdrhc public void kztitieawrjscnwsjdrhcyRztitieawrjscnwsjdrhclztitieawrjscnwsjdrhcasztitieawrjscnwsjdrhcd ( java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt ztitieawrjscnwsjdrhc ) { if ( ! ( gamztitieawrjscnwsjdrhcRunning ) ) { rztitieawrjscnwsjdrhcturn; } switch ( ztitieawrjscnwsjdrhc . gztitieawrjscnwsjdrhctKztitieawrjscnwsjdrhcyCodztitieawrjscnwsjdrhc () ) { casztitieawrjscnwsjdrhc java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt.VK_DOWN : modztitieawrjscnwsjdrhcl.timztitieawrjscnwsjdrhcAmplifiztitieawrjscnwsjdrhcr = 1 ; brztitieawrjscnwsjdrhcak; casztitieawrjscnwsjdrhc java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt.VK_S : modztitieawrjscnwsjdrhcl.timztitieawrjscnwsjdrhcAmplifiztitieawrjscnwsjdrhcr = 1 ; brztitieawrjscnwsjdrhcak; } } <s> @ java.lang.Ovztitieawrjscnwsjdrhcrridztitieawrjscnwsjdrhc public void kztitieawrjscnwsjdrhcyRztitieawrjscnwsjdrhclztitieawrjscnwsjdrhcasztitieawrjscnwsjdrhcd ( java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt ztitieawrjscnwsjdrhc ) { if ( ! ( gamztitieawrjscnwsjdrhcRunning ) ) { rztitieawrjscnwsjdrhcturn; } switch ( ztitieawrjscnwsjdrhc . gztitieawrjscnwsjdrhctKztitieawrjscnwsjdrhcyCodztitieawrjscnwsjdrhc () ) { casztitieawrjscnwsjdrhc java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt.VK_DOWN : modztitieawrjscnwsjdrhcl.timztitieawrjscnwsjdrhcAmplifiztitieawrjscnwsjdrhcr = 1 ; brztitieawrjscnwsjdrhcak; casztitieawrjscnwsjdrhc java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt.VK_S : modztitieawrjscnwsjdrhcl.timztitieawrjscnwsjdrhcAmplifiztitieawrjscnwsjdrhcr = 1 ; brztitieawrjscnwsjdrhcak; } } <s> Wall Glitch Fixed  Glitching into the field has been fixed. Some major bugs still remain like the score which is messed up.
fix_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) {}
fix_after_refactoring: @ java.lang.Ovztitieawrjscnwsjdrhcrridztitieawrjscnwsjdrhc public void kztitieawrjscnwsjdrhcyRztitieawrjscnwsjdrhclztitieawrjscnwsjdrhcasztitieawrjscnwsjdrhcd ( java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt ztitieawrjscnwsjdrhc ) {}
√ fix_prediction_before: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) {}
× fix_prediction_after: @ java.lang.Override public void init () {}

line_index: 1083
bug_before_refactoring: public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . objectwjvrqlgdmgrmnebyfajo ) { thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajoandra.utilwjvrqlgdmgrmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; } <s> public void warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . objectwjvrqlgdmgrmnebyfajo ) { thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajoandra.utilwjvrqlgdmgrmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
fix_after_refactoring: public boolean warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . objectwjvrqlgdmgrmnebyfajo ) { return thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajoandra.utilwjvrqlgdmgrmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; }
√ fix_prediction_before: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
× fix_prediction_after: public boolean warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . . objectwjvrqlgdmgrmnebyfajo ) { thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajo.utilwjvrqlgdmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; return true ; }

line_index: 1089
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
bug_after_refactoring: @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } <s> @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
fix_after_refactoring: @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
× fix_prediction_after: @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public void onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; }

line_index: 1095
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> fixed rental and return duplicate response bug
bug_after_refactoring: public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> fixed rental and return duplicate response bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
fix_after_refactoring: public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
× fix_prediction_after: public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; if ( id != ( - 1 ) ) { clientController . deleteClient ( id , panel , scroll ) ; } }

line_index: 1097
bug_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
bug_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { return new leanderk.izou.iftt.actions.ActionFlow ( sstmnnrpykkwrzqqkknl , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { return new leanderk.izou.iftt.actions.ActionFlow ( sstmnnrpykkwrzqqkknl , conditionAction , targetAction ) ; } <s> fixed bugs
fix_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
fix_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { this . sstmnnrpykkwrzqqkknl = sstmnnrpykkwrzqqkknl ; return this ; }
√ fix_prediction_before: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
× fix_prediction_after: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { this . sourceAction = sstmnnrpykkwrzqqkknl ; return this ; }

line_index: 1103
bug_before_refactoring: public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> public void setId ( long id ) { try { this . id = id ; } catch ( java.lang.NullPointerException e ) { this . id = 999 ; } } <s> Organization id issue resolved.
bug_after_refactoring: public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { try { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; } catch ( java.lang.NullPointerException e ) { this . kafiruiegjepzilydofa = 999 ; } } <s> public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { try { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; } catch ( java.lang.NullPointerException e ) { this . kafiruiegjepzilydofa = 999 ; } } <s> Organization id issue resolved.
fix_before_refactoring: public void setId ( long id ) { this . id = id ; }
fix_after_refactoring: public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; }
√ fix_prediction_before: public void setId ( long id ) { this . id = id ; }
× fix_prediction_after: public vokafiruiegjepzilydofa setId ( long kafiruiegjepzilydofa ) { this . kafiruiegjepzilydofa = kafiruiegjepzilydofa ; return this ; }

line_index: 1109
bug_before_refactoring: public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
bug_after_refactoring: public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . xulmfiapnlotpdcnwfda = ( xulmfiapnlotpdcnwfda == null ) ? null : xulmfiapnlotpdcnwfda . trim () ; } <s> public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . xulmfiapnlotpdcnwfda = ( xulmfiapnlotpdcnwfda == null ) ? null : xulmfiapnlotpdcnwfda . trim () ; } <s> Fixed an issue with names of saved searches
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . xulmfiapnlotpdcnwfda = xulmfiapnlotpdcnwfda ; }
√ fix_prediction_before: public void setName ( java.lang.String name ) { this . name = name ; }
× fix_prediction_after: public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . name = xulmfiapnlotpdcnwfda ; }

line_index: 1116
bug_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
bug_after_refactoring: purdyoxsajudcowveufebelic static java.lang.String toHex ( rdyoxsajudcowveufebeyte [] rdyoxsajudcowveufebe ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , rdyoxsajudcowveufebe.length ) ; } <s> purdyoxsajudcowveufebelic static java.lang.String toHex ( rdyoxsajudcowveufebeyte [] rdyoxsajudcowveufebe ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , rdyoxsajudcowveufebe.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
fix_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , 0 , b.length ) ; }
fix_after_refactoring: purdyoxsajudcowveufebelic static java.lang.String toHex ( rdyoxsajudcowveufebeyte [] rdyoxsajudcowveufebe ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , 0 , rdyoxsajudcowveufebe.length ) ; }
√ fix_prediction_before: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , 0 , b.length ) ; }
× fix_prediction_after: purdyoxsajudcowveufebelic static java.lang.String toHex ( rdyoxsajudcowveufequirete [] rdyoxsajudcowveufebe ) { if ( rdyoxsajudcowveufebe != null ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , rdyoxsajudcowveufebe.length ) ; } else { return null ; } }

line_index: 1133
bug_before_refactoring: public int addUser ( java.lang.String name , java.lang.String password ) {} <s> public int addUser ( java.lang.String name , java.lang.String password ) {} <s> Fixed some errors due to deprecation  some suppressed.
bug_after_refactoring: public int addUser ( java.lang.String jrorltonxxzjqhmozngc , java.lang.String ntuetvxvwhcljoftfqws ) {} <s> public int addUser ( java.lang.String jrorltonxxzjqhmozngc , java.lang.String ntuetvxvwhcljoftfqws ) {} <s> Fixed some errors due to deprecation  some suppressed.
fix_before_refactoring: { return 0 ; }
fix_after_refactoring: { return 0 ; }
√ fix_prediction_before: { return 0 ; }
× fix_prediction_after: { return - 1 ; }

line_index: 1144
bug_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
bug_after_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy , long nofesayiiemyttxgqvsd ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy , long nofesayiiemyttxgqvsd ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
fix_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
fix_after_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; }
√ fix_prediction_before: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
× fix_prediction_after: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt ) ; }

line_index: 1157
bug_before_refactoring: private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) ; <s> private static native void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
fix_after_refactoring: private static void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) {}
√ fix_prediction_before: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
× fix_prediction_after: private static void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) {}

line_index: 1201
bug_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> fixed problem with sender in profile
bug_after_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts , net.sharksystem.sharknet.api.Contact vdusgxgjkuojctwifsav ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts , net.sharksystem.sharknet.api.Contact vdusgxgjkuojctwifsav ) ; <s> fixed problem with sender in profile
fix_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
fix_after_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts ) ;
√ fix_prediction_before: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
× fix_prediction_after: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts , net.sharksystem.sharknet.api.Contact vdusgxgjkuojctwifsav ) ;

line_index: 1211
bug_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
bug_after_refactoring: public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( points -= pjcbueyqwuykoozesdcj ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( points -= pjcbueyqwuykoozesdcj ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
fix_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
fix_after_refactoring: public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( ( points ) - pjcbueyqwuykoozesdcj ) ) ; }
√ fix_prediction_before: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
× fix_prediction_after: public com.shapematchandroid.Score deduct ( int points ) { return ( points -= pjcbueyqwuykoozesdcj ) * points ; }

line_index: 1219
bug_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
fix_after_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw , int position ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; }
√ fix_prediction_before: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
× fix_prediction_after: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw ) {}

line_index: 1227
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> Fixed issue in the now playing position
bug_after_refactoring: @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaoid onClick ( android.zdmtoimzbmforqkchtyaiew.View zdmtoimzbmforqkchtya ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( parent , mData ) ; } <s> @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaoid onClick ( android.zdmtoimzbmforqkchtyaiew.View zdmtoimzbmforqkchtya ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( parent , mData ) ; } <s> Fixed issue in the now playing position
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData , position ) ; }
fix_after_refactoring: @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaoid onClick ( android.zdmtoimzbmforqkchtyaiew.View zdmtoimzbmforqkchtya ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( parent , mData , position ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData , position ) ; }
× fix_prediction_after: @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaerride ( android.zdmtoimzbmforqkchtyaiew.View view ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( view ) ; }

line_index: 1232
bug_before_refactoring: @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
bug_after_refactoring: @ java.lang.Override public void onFailure ( reoxhmzmkvvonwiysxjgacrofioxhmzmkvvonwiysxjgac2.Call < com.example.android.popularmoviessoxhmzmkvvonwiysxjgacageoxhmzmkvvonwiysxjgacwo.model.MoviesLisoxhmzmkvvonwiysxjgacResponse > mymzrgwnoxhmzmkvvonwiysxjgacrfudsvrynqs , java.lang.Throwable oxhmzmkvvonwiysxjgac ) { android.widgeoxhmzmkvvonwiysxjgac.Toasoxhmzmkvvonwiysxjgac . makeTexoxhmzmkvvonwiysxjgac ( geoxhmzmkvvonwiysxjgacConoxhmzmkvvonwiysxjgacexoxhmzmkvvonwiysxjgac () , geoxhmzmkvvonwiysxjgacSoxhmzmkvvonwiysxjgacring ( R.soxhmzmkvvonwiysxjgacring.inoxhmzmkvvonwiysxjgacerneoxhmzmkvvonwiysxjgac_connecoxhmzmkvvonwiysxjgacion_message ) , Toasoxhmzmkvvonwiysxjgac.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onFailure ( reoxhmzmkvvonwiysxjgacrofioxhmzmkvvonwiysxjgac2.Call < com.example.android.popularmoviessoxhmzmkvvonwiysxjgacageoxhmzmkvvonwiysxjgacwo.model.MoviesLisoxhmzmkvvonwiysxjgacResponse > mymzrgwnoxhmzmkvvonwiysxjgacrfudsvrynqs , java.lang.Throwable oxhmzmkvvonwiysxjgac ) { android.widgeoxhmzmkvvonwiysxjgac.Toasoxhmzmkvvonwiysxjgac . makeTexoxhmzmkvvonwiysxjgac ( geoxhmzmkvvonwiysxjgacConoxhmzmkvvonwiysxjgacexoxhmzmkvvonwiysxjgac () , geoxhmzmkvvonwiysxjgacSoxhmzmkvvonwiysxjgacring ( R.soxhmzmkvvonwiysxjgacring.inoxhmzmkvvonwiysxjgacerneoxhmzmkvvonwiysxjgac_connecoxhmzmkvvonwiysxjgacion_message ) , Toasoxhmzmkvvonwiysxjgac.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
fix_before_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
fix_after_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable oxhmzmkvvonwiysxjgac ) { android.widgeoxhmzmkvvonwiysxjgac.Toasoxhmzmkvvonwiysxjgac . makeTexoxhmzmkvvonwiysxjgac ( geoxhmzmkvvonwiysxjgacConoxhmzmkvvonwiysxjgacexoxhmzmkvvonwiysxjgac () , geoxhmzmkvvonwiysxjgacSoxhmzmkvvonwiysxjgacring ( R.soxhmzmkvvonwiysxjgacring.inoxhmzmkvvonwiysxjgacerneoxhmzmkvvonwiysxjgac_connecoxhmzmkvvonwiysxjgacion_message ) , Toasoxhmzmkvvonwiysxjgac.LENGTH_SHORT ) . show () ; }
√ fix_prediction_before: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_after: @ java.lang.Override public void onFailure ( java.lang.Throwable x ) { android.widgeoxhmzmkvvonwiysxjgac.Toasoxhmzmkvvonwiysxjgac ( geoxhmzmkvvonwiysxjgacConoxhmzmkvvonwiysxjgac ) ; mymzrgwnoxhmzmkvvonwiysxjgac = x ; }

line_index: 1248
bug_before_refactoring: public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> Fixing minor issue with the visit - with interval
bug_after_refactoring: public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk ) ; } <s> public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk ) ; } <s> Fixing minor issue with the visit - with interval
fix_before_refactoring: public void addAttributeName ( java.lang.String attributeName ) { if ( ! ( getAttributeNames () . contains ( attributeName ) ) ) { getAttributeNames () . add ( attributeName ) ; } }
fix_after_refactoring: public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { if ( ! ( getAttributeNames () . contains ( kfuumcfujqexbimuyqvk ) ) ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk ) ; } }
√ fix_prediction_before: public void addAttributeName ( java.lang.String attributeName ) { if ( ! ( getAttributeNames () . contains ( attributeName ) ) ) { getAttributeNames () . add ( attributeName ) ; } }
× fix_prediction_after: public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk . toUpperCase () ) ; }

line_index: 1251
bug_before_refactoring: private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
bug_after_refactoring: private void setRangeTime ( org.joda.time.LocalDateTime cdfiyvsakianagnmgsse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) { _cdfiyvsakianagnmgsseTime = cdfiyvsakianagnmgsse ; _dkvndfjwyqbtbfakkevnTime = dkvndfjwyqbtbfakkevn ; _totalSeconds = org.joda.time.Period . fieldDifference ( cdfiyvsakianagnmgsse , dkvndfjwyqbtbfakkevn ) . toStandardDuration () . getStandardSeconds () ; } <s> private void setRangeTime ( org.joda.time.LocalDateTime cdfiyvsakianagnmgsse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) { _cdfiyvsakianagnmgsseTime = cdfiyvsakianagnmgsse ; _dkvndfjwyqbtbfakkevnTime = dkvndfjwyqbtbfakkevn ; _totalSeconds = org.joda.time.Period . fieldDifference ( cdfiyvsakianagnmgsse , dkvndfjwyqbtbfakkevn ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
fix_before_refactoring: public void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
fix_after_refactoring: public void setRangeTime ( org.joda.time.LocalDateTime cdfiyvsakianagnmgsse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) { _cdfiyvsakianagnmgsseTime = cdfiyvsakianagnmgsse ; _dkvndfjwyqbtbfakkevnTime = dkvndfjwyqbtbfakkevn ; _totalSeconds = org.joda.time.Period . fieldDifference ( cdfiyvsakianagnmgsse , dkvndfjwyqbtbfakkevn ) . toStandardDuration () . getStandardSeconds () ; }
√ fix_prediction_before: public void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
× fix_prediction_after: private void setRangeTime ( org.joda.time.LocalDateTime cdfiyvsakianagnmgsse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) {}

line_index: 1256
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
bug_after_refactoring: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
fix_after_refactoring: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( true ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
× fix_prediction_after: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( 1 ) ; }

line_index: 1263
bug_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
bug_after_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq , java.lang.String wsekaqwcyqdklfrrvtbe ) { categoryLiwsekaqwcyqdklfrrvtbet . clear () ; com.htnguyen.healthy.model.Category category1 = bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq . getValue ( com.htnguyen.healthy.model.Category . clawsekaqwcyqdklfrrvtbewsekaqwcyqdklfrrvtbe ) ; categoryLiwsekaqwcyqdklfrrvtbet . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq , java.lang.String wsekaqwcyqdklfrrvtbe ) { categoryLiwsekaqwcyqdklfrrvtbet . clear () ; com.htnguyen.healthy.model.Category category1 = bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq . getValue ( com.htnguyen.healthy.model.Category . clawsekaqwcyqdklfrrvtbewsekaqwcyqdklfrrvtbe ) ; categoryLiwsekaqwcyqdklfrrvtbet . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
fix_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
fix_after_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq , java.lang.String wsekaqwcyqdklfrrvtbe ) {}
√ fix_prediction_before: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
× fix_prediction_after: @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbehot ) { categoryLiwsekaqwcyqdklfrrvtbet . clear () ; categoryAdapter . notifyDataSetChanged () ; }

line_index: 1276
bug_before_refactoring: public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
bug_after_refactoring: public static void main ( java.lang.String [] yqsxlwhqjsnzkuqyysao ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] yqsxlwhqjsnzkuqyysao ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
fix_before_refactoring: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
fix_after_refactoring: public static void main ( java.lang.String [] yqsxlwhqjsnzkuqyysao ) { new edu.manatriya.banking.ATMMachine () . run () ; }
√ fix_prediction_before: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
× fix_prediction_after: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }

line_index: 1280
bug_before_refactoring: private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> Fixed issue with units not being paired in the Batch Edit form
bug_after_refactoring: private static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , ( pocaddykzamablqunkde + 1 ) ) ; } <s> private static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , ( pocaddykzamablqunkde + 1 ) ) ; } <s> Fixed issue with units not being paired in the Batch Edit form
fix_before_refactoring: public static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; }
fix_after_refactoring: public static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , ( pocaddykzamablqunkde + 1 ) ) ; }
√ fix_prediction_before: public static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; }
× fix_prediction_after: private static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , ( pocaddykzamablqunkde + 1 ) ) ; }

