line_index: 3
bug_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
bug_after_refactoring: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
fix_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
fix_after_refactoring: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
√ fix_prediction_before: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
× fix_prediction_after: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }

line_index: 8
bug_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
bug_after_refactoring: @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "giepvfzjbyxfpnvviuso:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "giepvfzjbyxfpnvviuso:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
fix_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
fix_after_refactoring: @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
√ fix_prediction_before: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
× fix_prediction_after: @ java.lang.Override public void giepvfzjbyxfpnzziuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}

line_index: 18
bug_before_refactoring: public void addToCircle ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> public void addToCircle ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> fixing adding to circle problem
bug_after_refactoring: public void rwmecgoiahhyejgehbqa ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> public void rwmecgoiahhyejgehbqa ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> fixing adding to circle problem
fix_before_refactoring: public void addToCircle ( java.lang.Character c ) { if ( ! ( characters . contains ( c ) ) ) { c . getInCircle () ; characters . add ( c ) ; } }
fix_after_refactoring: public void rwmecgoiahhyejgehbqa ( java.lang.Character c ) { if ( ! ( characters . contains ( c ) ) ) { c . getInCircle () ; characters . add ( c ) ; } }
√ fix_prediction_before: public void addToCircle ( java.lang.Character c ) { if ( ! ( characters . contains ( c ) ) ) { c . getInCircle () ; characters . add ( c ) ; } }
× fix_prediction_after: public void rwmecgoiahhyejgehbqa ( java.lang.Character c ) { if ( c != null ) { c . getInCircle () ; characters . add ( c ) ; } }

line_index: 23
bug_before_refactoring: public int indexOf ( java.lang.Object o ) { return 0 ; } <s> public int indexOf ( java.lang.Object o ) { return 0 ; } <s> fix list bug
bug_after_refactoring: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return 0 ; } <s> public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return 0 ; } <s> fix list bug
fix_before_refactoring: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
fix_after_refactoring: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return list . irphpjfjmppecvexmgxd ( o ) ; }
√ fix_prediction_before: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
× fix_prediction_after: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return list . get ( o ) ; }

line_index: 26
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> 2 more issues resolved
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhihnmvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhihnmvo ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/gtwqadlfvmfbwhihnmvo" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhihnmvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhihnmvo ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/gtwqadlfvmfbwhihnmvo" ; } <s> 2 more issues resolved
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhihnmvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhihnmvo () { return "views/gtwqadlfvmfbwhihnmvo" ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhih eduvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhih eduvo ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/gtwqadlfvmfbwhih eduvo" ; }

line_index: 48
bug_before_refactoring: @ java.lang.Override public void run () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> @ java.lang.Override public void run () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> code cleaned + showing inactive beacons problem is fixed
bug_after_refactoring: @ java.lang.Override public void fntdtgxvhgozayzlktkr () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> @ java.lang.Override public void fntdtgxvhgozayzlktkr () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> code cleaned + showing inactive beacons problem is fixed
fix_before_refactoring: @ java.lang.Override public void run () { mLEScanner . stopScan ( mScanCallback ) ; }
fix_after_refactoring: @ java.lang.Override public void fntdtgxvhgozayzlktkr () { mLEScanner . stopScan ( mScanCallback ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { mLEScanner . stopScan ( mScanCallback ) ; }
× fix_prediction_after: @ java.lang.Override public void fntdtgxvhgozayzlktkr () {}

line_index: 55
bug_before_refactoring: @ org.junit.Test public void Set_WeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> @ org.junit.Test public void Set_WeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> Fix code style errors at unittests
bug_after_refactoring: @ org.junit.Test public void wavdtzwzetspuetgcqva () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> @ org.junit.Test public void wavdtzwzetspuetgcqva () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> Fix code style errors at unittests
fix_before_refactoring: @ org.junit.Test public void setWeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; }
fix_after_refactoring: @ org.junit.Test public void setWeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; }
√ fix_prediction_before: @ org.junit.Test public void setWeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; }
× fix_prediction_after: @ org.junit.Test public voidwavdtzwzetspuetgcqva () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( 12 , recipeModel . getWeightWatcherSmartPoints () ) ; }

line_index: 66
bug_before_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> fix bug
bug_after_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> fix bug
fix_before_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
fix_after_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
√ fix_prediction_before: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
× fix_prediction_after: public final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , null , true ) ; }

line_index: 70
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
bug_after_refactoring: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
fix_after_refactoring: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
× fix_prediction_after: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , inventory , Toast.LENGTH_SHORT ) . show () ; finish () ; }

line_index: 71
bug_before_refactoring: private static synchronized void stopVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> private static synchronized void stopVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> CAT-1868 Fix the camera front  flashlight  vibration bug (#1639)
bug_after_refactoring: private static synchronized void lbcwzwcynhgaasosiuml () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "lbcwzwcynhgaasosiuml()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> private static synchronized void lbcwzwcynhgaasosiuml () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "lbcwzwcynhgaasosiuml()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> CAT-1868 Fix the camera front  flashlight  vibration bug (#1639)
fix_before_refactoring: private static synchronized void stopVibrate () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } }
fix_after_refactoring: private static synchronized void lbcwzwcynhgaasosiuml () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "lbcwzwcynhgaasosiuml()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } }
√ fix_prediction_before: private static synchronized void stopVibrate () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } }
× fix_prediction_after: private static synchronized void lbcwzwcynhgaasosiuml ( android.view.View view ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "lbcwzwcynhgaasosiuml()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; }

line_index: 72
bug_before_refactoring: private void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> private void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> fix app share bug
bug_after_refactoring: private void gcdtuqdbpqpmwluzqvlu () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> private void gcdtuqdbpqpmwluzqvlu () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> fix app share bug
fix_before_refactoring: public void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } }
fix_after_refactoring: public void gcdtuqdbpqpmwluzqvlu () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } }
√ fix_prediction_before: public void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } }
× fix_prediction_after: private void gcdtuqdbpqpmwluzqvlu () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , true ) ; } }

line_index: 86
bug_before_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; } <s> @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void amfkndheuzdqunfeosmk ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void bycfgbgvfmofwqzprlvg ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . amfkndheuzdqunfeosmk ( intent ) ; } } ) ; } <s> @ java.lang.Override public void amfkndheuzdqunfeosmk ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void bycfgbgvfmofwqzprlvg ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . amfkndheuzdqunfeosmk ( intent ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; }
fix_after_refactoring: @ java.lang.Override public void amfkndheuzdqunfeosmk ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void bycfgbgvfmofwqzprlvg () { com.oasisfeng.condom.CondomContext . super . amfkndheuzdqunfeosmk ( intent ) ; } } ) ; }
√ fix_prediction_before: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; }
× fix_prediction_after: @ java.lang.Override public void amfkndheuzdqunfeosmk ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void bycfgbgvfmofwqzprlvg ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . amfkndheuzdqunfeosmk ( intent ) ; } } ) ; }

line_index: 92
bug_before_refactoring: @ java.lang.Override public void nearByChange () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> @ java.lang.Override public void nearByChange () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> fixed most of the crashes now to try and fix a load of bugs
bug_after_refactoring: @ java.lang.Override public void trmdgwfarnbqfdlnvofd () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> @ java.lang.Override public void trmdgwfarnbqfdlnvofd () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> fixed most of the crashes now to try and fix a load of bugs
fix_before_refactoring: @ java.lang.Override public void nearByChange () { checkConnectedSides () ; }
fix_after_refactoring: @ java.lang.Override public void trmdgwfarnbqfdlnvofd () { checkConnectedSides () ; }
√ fix_prediction_before: @ java.lang.Override public void nearByChange () { checkConnectedSides () ; }
× fix_prediction_after: @ java.lang.Override public void trmdgwfarnbqfdlnvofd () {}

line_index: 94
bug_before_refactoring: private void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> private void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> finish  fix bug to add point add label withs points add win popup add maybe more things but I cant remember
bug_after_refactoring: private void qrgpafguwkclyxglzode () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> private void qrgpafguwkclyxglzode () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> finish  fix bug to add point add label withs points add win popup add maybe more things but I cant remember
fix_before_refactoring: public void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; }
fix_after_refactoring: public void qrgpafguwkclyxglzode () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; }
√ fix_prediction_before: public void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; }
× fix_prediction_after: private void qrgpafguwkclyxglzode () { gameLogic . createPlayers () ; java.lang.System.out . println () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; }

line_index: 104
bug_before_refactoring: public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> Got the database issues "solved". User is saved and remembered.
bug_after_refactoring: public void wvnidbrxbgqvvpcmwnuu ( final long theUserID ) { myUserID = theUserID ; } <s> public void wvnidbrxbgqvvpcmwnuu ( final long theUserID ) { myUserID = theUserID ; } <s> Got the database issues "solved". User is saved and remembered.
fix_before_refactoring: public void setID ( final long theUserID ) { this . myUserID = theUserID ; }
fix_after_refactoring: public void wvnidbrxbgqvvpcmwnuu ( final long theUserID ) { this . myUserID = theUserID ; }
√ fix_prediction_before: public void setID ( final long theUserID ) { this . myUserID = theUserID ; }
× fix_prediction_after: public void wvnidbrxbgqzzpcmwnuu ( final long theUserID ) { this . myUserID = theUserID ; }

line_index: 136
bug_before_refactoring: public java.lang.String getAirCode () { android.util.Log . i ( model.SingleFlightResult.TAG , "getAirCode: " ) ; return airCode ; } <s> public java.lang.String getAirCode () { android.util.Log . i ( model.SingleFlightResult.TAG , "getAirCode: " ) ; return airCode ; } <s> added all flight logo  loads airline logo dynamically  solved negative total flight duration time issue  added recycler view animation
bug_after_refactoring: public java.lang.String xtjpfkkvkrwebbfqxcgv () { android.util.Log . i ( model.SingleFlightResult.TAG , "xtjpfkkvkrwebbfqxcgv: " ) ; return airCode ; } <s> public java.lang.String xtjpfkkvkrwebbfqxcgv () { android.util.Log . i ( model.SingleFlightResult.TAG , "xtjpfkkvkrwebbfqxcgv: " ) ; return airCode ; } <s> added all flight logo  loads airline logo dynamically  solved negative total flight duration time issue  added recycler view animation
fix_before_refactoring: public java.lang.String getAirCode () { return airCode ; }
fix_after_refactoring: public java.lang.String xtjpfkkvkrwebbfqxcgv () { return airCode ; }
√ fix_prediction_before: public java.lang.String getAirCode () { return airCode ; }
× fix_prediction_after: public java.lang.String xtjpfkkvkrwebbfqxcgv ( android.view.View view ) { android.util.Log . i ( model.SingleFlightResult.TAG , "xtjpfkkvkrwebbfqxcgv: " ) ; return airCode ; }

line_index: 144
bug_before_refactoring: private void resetReverseJoinRows () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; } <s> private void resetReverseJoinRows () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; } <s> bug fix having join agg
bug_after_refactoring: private void hmccvhtelqjehryyzglx () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; } <s> private void hmccvhtelqjehryyzglx () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; } <s> bug fix having join agg
fix_before_refactoring: public void resetReverseJoinRows () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; }
fix_after_refactoring: public void hmccvhtelqjehryyzglx () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; }
√ fix_prediction_before: public void resetReverseJoinRows () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; }
× fix_prediction_after: private void hmccvhtelqjehryyzglx () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; }

line_index: 163
bug_before_refactoring: private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
fix_after_refactoring: private static long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
√ fix_prediction_before: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
× fix_prediction_after: private static native long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ;

line_index: 179
bug_before_refactoring: public int add ( int a , int b ) { return a * b ; } <s> public int add ( int a , int b ) { return a * b ; } <s> Bug fix
bug_after_refactoring: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a * b ; } <s> public int elhhwvatlucbecjqbeku ( int a , int b ) { return a * b ; } <s> Bug fix
fix_before_refactoring: public int add ( int a , int b ) { return a + b ; }
fix_after_refactoring: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a + b ; }
√ fix_prediction_before: public int add ( int a , int b ) { return a + b ; }
× fix_prediction_after: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a - b ; }

line_index: 180
bug_before_refactoring: @ java.lang.Override public void run () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> @ java.lang.Override public void run () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> - Added Exporting functionality. - Improved button UI. - Bug fixed in scanning automatically.
bug_after_refactoring: @ java.lang.Override public void kzefaghtldtymbheykia () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> @ java.lang.Override public void kzefaghtldtymbheykia () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> - Added Exporting functionality. - Improved button UI. - Bug fixed in scanning automatically.
fix_before_refactoring: @ java.lang.Override public void run () { enterBarcode . requestFocus () ; }
fix_after_refactoring: @ java.lang.Override public void kzefaghtldtymbheykia () { enterBarcode . requestFocus () ; }
√ fix_prediction_before: @ java.lang.Override public void run () { enterBarcode . requestFocus () ; }
× fix_prediction_after: @ java.lang.Override public void kzefaghtldtymbheykia () {}

line_index: 195
bug_before_refactoring: public void refreshData () { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } <s> public void refreshData () { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } <s> bug fix
bug_after_refactoring: public void owgnqdlclbbgltqdskev () { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } <s> public void owgnqdlclbbgltqdskev () { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } <s> bug fix
fix_before_refactoring: public void refreshData () { if ( ( adapter ) != null ) { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } }
fix_after_refactoring: public void owgnqdlclbbgltqdskev () { if ( ( adapter ) != null ) { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } }
√ fix_prediction_before: public void refreshData () { if ( ( adapter ) != null ) { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } }
× fix_prediction_after: public void owgnqdlclbbgltqdskev ( android.view.View view ) { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; }

line_index: 196
bug_before_refactoring: public org.kemricdc.entities.AppProperties getAppProperties () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> public org.kemricdc.entities.AppProperties getAppProperties () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> Merge pull request #2 from geoff-wasilwa/bugfix-#1  bugfix-#1: Added check for existance of app.properties file
bug_after_refactoring: public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> Merge pull request #2 from geoff-wasilwa/bugfix-#1  bugfix-#1: Added check for existance of app.properties file
fix_before_refactoring: public org.kemricdc.entities.AppProperties getAppProperties () { return appProperties ; }
fix_after_refactoring: public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm () { return appProperties ; }
√ fix_prediction_before: public org.kemricdc.entities.AppProperties getAppProperties () { return appProperties ; }
× fix_prediction_after: public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm ( java.lang.String propertiesFileLocation ) { this . setAppProperties ( new org.kemricdc.entities.AppProperties ( propertiesFileLocation ) ) ; return appProperties ; }

line_index: 208
bug_before_refactoring: private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> Fixing bugs
bug_after_refactoring: private static native void uukratgvnwinwjrtbafd ( long image , long data , int size ) ; <s> private static native void uukratgvnwinwjrtbafd ( long image , long data , int size ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqUnflatten ( long image , long data , int size ) {}
fix_after_refactoring: private static void uukratgvnwinwjrtbafd ( long image , long data , int size ) {}
√ fix_prediction_before: private static void _imaqUnflatten ( long image , long data , int size ) {}
× fix_prediction_after: private static native void uukratgvnwinwjrtbafd ( long image , long data , int size ) ;

line_index: 213
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> fixed indexing issues
bug_after_refactoring: @ java.lang.Override public void vceoyxezokjhzrdaicuc ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> @ java.lang.Override public void vceoyxezokjhzrdaicuc ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> fixed indexing issues
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( index ) ; }
fix_after_refactoring: @ java.lang.Override public void vceoyxezokjhzrdaicuc ( android.view.View v ) { mListener . onListItemSelectedListener ( index ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( index ) ; }
× fix_prediction_after: @ java.lang.Override public void vceoyxezokjhzrdaicuc ( android.view.View v ) { mListener . onListItemSelectedListener ( index , getName ) ; }

line_index: 221
bug_before_refactoring: public void setX ( int x ) { this . x = x ; } <s> public void setX ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; } <s> public void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void setX ( int x ) { this . x = x ; }
fix_after_refactoring: private void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; }
√ fix_prediction_before: private void setX ( int x ) { this . x = x ; }
× fix_prediction_after: public void ycxwifrjyzcszhhkpcmk ( int x ) { synchronized ( this ) { this . x = x ; } }

line_index: 225
bug_before_refactoring: public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void sdhifdluusjarvelztor ( boolean enable ) { this . sdhifdluusjarvelztor = enable ; writeConfig () ; } <s> public void sdhifdluusjarvelztor ( boolean enable ) { this . sdhifdluusjarvelztor = enable ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
fix_after_refactoring: private void sdhifdluusjarvelztor ( boolean enable ) { this . sdhifdluusjarvelztor = enable ; writeConfig () ; }
√ fix_prediction_before: private void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
× fix_prediction_after: public void sdhifdluusjarvelztor ( boolean enable ) { this . sdhifdluusjarvelztor = enable ; }

line_index: 240
bug_before_refactoring: @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
bug_after_refactoring: @ java.lang.Override public java.lang.String exelshutrnvdqujuuwfc ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> @ java.lang.Override public java.lang.String exelshutrnvdqujuuwfc ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
fix_before_refactoring: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String exelshutrnvdqujuuwfc ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String exelshutrnvdqujuuwfc ( org.sonar.api.platform.PluginMetadata input ) { return null ; }

line_index: 244
bug_before_refactoring: private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> Fixing bugs
bug_after_refactoring: private static native void nmfpybfhtflzuiauboal ( long image , int bitDepth ) ; <s> private static native void nmfpybfhtflzuiauboal ( long image , int bitDepth ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
fix_after_refactoring: private static void nmfpybfhtflzuiauboal ( long image , int bitDepth ) {}
√ fix_prediction_before: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
× fix_prediction_after: private static native void nmfpybfhtflzuiauboal ( long image , int bitDepth ) ;

line_index: 245
bug_before_refactoring: @ java.lang.Override public java.lang.String getAccessTransformerClass () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> @ java.lang.Override public java.lang.String getAccessTransformerClass () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> Fixed error in log
bug_after_refactoring: @ java.lang.Override public java.lang.String wtclxrumkqffmnxhkktl () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> @ java.lang.Override public java.lang.String wtclxrumkqffmnxhkktl () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> Fixed error in log
fix_before_refactoring: @ java.lang.Override public java.lang.String getAccessTransformerClass () { return null ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String wtclxrumkqffmnxhkktl () { return null ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getAccessTransformerClass () { return null ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Stringwtclxrumkqffmnxhkktl () { return null ; }

line_index: 252
bug_before_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> fix issue with oidc callback redirection
bug_after_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> fix issue with oidc callback redirection
fix_before_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Scope ( value = org.springframework.beans.factory.config.ConfigurableBeanFactory.SCOPE_PROTOTYPE ) public org.apereo.cas.web.view.CasProtocolView cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; }
fix_after_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Scope ( value = org.springframework.beans.factory.config.ConfigurableBeanFactory.SCOPE_PROTOTYPE ) public org.apereo.cas.web.view.CasProtocolView jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; }
√ fix_prediction_before: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Scope ( value = org.springframework.beans.factory.config.ConfigurableBeanFactory.SCOPE_PROTOTYPE ) public org.apereo.cas.web.view.CasProtocolView cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; }
× fix_prediction_after: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.apereo.cas.web.view.CasProtocolView jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; }

line_index: 254
bug_before_refactoring: public void addX ( final double x ) { this . x += x ; } <s> public void addX ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
bug_after_refactoring: public void jljlawwnkfspzykvqglc ( final double x ) { this . x += x ; } <s> public void jljlawwnkfspzykvqglc ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
fix_before_refactoring: public final void addX ( final double add ) { this . x += add ; }
fix_after_refactoring: public final void jljlawwnkfspzykvqglc ( final double add ) { this . x += add ; }
√ fix_prediction_before: public final void addX ( final double add ) { this . x += add ; }
× fix_prediction_after: public final void jljlawwnk getEzykvqglc ( final double x ) { this . x += x ; }

line_index: 264
bug_before_refactoring: protected javax.swing.JTextField makeTextField ( java.lang.String name ) { return makeTextField ( name , 30 ) ; } <s> protected javax.swing.JTextField makeTextField ( java.lang.String name ) { return makeTextField ( name , 30 ) ; } <s> Added rename dialog and fixed bugs
bug_after_refactoring: protected javax.swing.JTextField yesbztfrzapdgwikeuah ( java.lang.String name ) { return yesbztfrzapdgwikeuah ( name , 30 ) ; } <s> protected javax.swing.JTextField yesbztfrzapdgwikeuah ( java.lang.String name ) { return yesbztfrzapdgwikeuah ( name , 30 ) ; } <s> Added rename dialog and fixed bugs
fix_before_refactoring: private javax.swing.JTextField makeTextField ( java.lang.String name ) { return makeTextField ( name , 30 ) ; }
fix_after_refactoring: private javax.swing.JTextField yesbztfrzapdgwikeuah ( java.lang.String name ) { return yesbztfrzapdgwikeuah ( name , 30 ) ; }
√ fix_prediction_before: private javax.swing.JTextField makeTextField ( java.lang.String name ) { return makeTextField ( name , 30 ) ; }
× fix_prediction_after: protected javax.swing.JTextField yesbztfrzapdgwikeuah ( java.lang.String name ) { return yesbztfrzapdgwikeuah ( name , 0 ) ; }

line_index: 268
bug_before_refactoring: void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> fixed bug
bug_after_refactoring: void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> fixed bug
fix_before_refactoring: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
fix_after_refactoring: public void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
√ fix_prediction_before: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
× fix_prediction_after: void tfyikazqrxbaevshcqab ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }

line_index: 275
bug_before_refactoring: private void setRedBorder ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> private void setRedBorder ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> Fixed PMD error in RedShapeDecorator
bug_after_refactoring: private void lxwjoeqwahglaavnbvjm ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> private void lxwjoeqwahglaavnbvjm ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> Fixed PMD error in RedShapeDecorator
fix_before_refactoring: private void setRedBorder () { java.lang.System.out . println ( "Border Color: Red" ) ; }
fix_after_refactoring: private void lxwjoeqwahglaavnbvjm () { java.lang.System.out . println ( "Border Color: Red" ) ; }
√ fix_prediction_before: private void setRedBorder () { java.lang.System.out . println ( "Border Color: Red" ) ; }
× fix_prediction_after: private void lxwjoeqwahglaavnbvjm ( final structural. decorator.Shape decoratedShape ) {}

line_index: 279
bug_before_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> TMI-40: Fixed subsampling offset bug (and removed the slow  stepwise reading + simplified the code  at the cost of higher memory consumption).
bug_after_refactoring: @ java.lang.Override public void tgqsaujvwkcspggnhcgr ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> @ java.lang.Override public void tgqsaujvwkcspggnhcgr ( javax.imageio.ImageReader source ) { if ( isProgressRangeCorrected () ) { processImageComplete () ; } } <s> TMI-40: Fixed subsampling offset bug (and removed the slow  stepwise reading + simplified the code  at the cost of higher memory consumption).
fix_before_refactoring: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { processImageComplete () ; }
fix_after_refactoring: @ java.lang.Override public void tgqsaujvwkcspggnhcgr ( javax.imageio.ImageReader source ) { processImageComplete () ; }
√ fix_prediction_before: @ java.lang.Override public void imageComplete ( javax.imageio.ImageReader source ) { processImageComplete () ; }
× fix_prediction_after: @ java.lang.Override public boolean isProgressRangeCorrected () { return processImageComplete () ; }

line_index: 280
bug_before_refactoring: public void minimize () { if ( this . isInfoWindowShown () ) { this . closeInfoWindow () ; } this . setInfoWindow ( minimizedInfoWindow ) ; this . showInfoWindow () ; } <s> public void minimize () { if ( this . isInfoWindowShown () ) { this . closeInfoWindow () ; } this . setInfoWindow ( minimizedInfoWindow ) ; this . showInfoWindow () ; } <s> fixed bug problem with the bus bubbles not being destroyed correctly
bug_after_refactoring: public void nlecknfdgjmlniphbmhw () { if ( this . isInfoWindowShown () ) { this . closeInfoWindow () ; } this . setInfoWindow ( nlecknfdgjmlniphbmhwdInfoWindow ) ; this . showInfoWindow () ; } <s> public void nlecknfdgjmlniphbmhw () { if ( this . isInfoWindowShown () ) { this . closeInfoWindow () ; } this . setInfoWindow ( nlecknfdgjmlniphbmhwdInfoWindow ) ; this . showInfoWindow () ; } <s> fixed bug problem with the bus bubbles not being destroyed correctly
fix_before_refactoring: public void minimize () { this . closeInfoWindow () ; this . setInfoWindow ( minimizedInfoWindow ) ; this . showInfoWindow () ; }
fix_after_refactoring: public void nlecknfdgjmlniphbmhw () { this . closeInfoWindow () ; this . setInfoWindow ( nlecknfdgjmlniphbmhwdInfoWindow ) ; this . showInfoWindow () ; }
√ fix_prediction_before: public void minimize () { this . closeInfoWindow () ; this . setInfoWindow ( minimizedInfoWindow ) ; this . showInfoWindow () ; }
× fix_prediction_after: public void nlecknfdgjmlniphbmhw () { this . setInfoWindow ( nlecknfdgjmlniphbmhwdInfoWindow ) ; this . showInfoWindow () ; }

line_index: 284
bug_before_refactoring: public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void main ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
bug_after_refactoring: public static void qrowfwajxrssnykdyykz ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> public static void qrowfwajxrssnykdyykz ( java.lang.String [] args ) { edu.stanford.nlp.Tagging t = new edu.stanford.nlp.Tagging () ; java.lang.String sent = "Showers continued throughout the week in the Bahia cocoa zone." ; java.util.List l = t . searchByTag ( t . TaggingSentence ( sent ) , "NN" ) ; java.lang.System.out . println ( l ) ; } <s> fix HBaseDAO bug and finish part of WorksProbFromTopic
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void qrowfwajxrssnykdyykz ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void qrowfwajxrssnykdyykz () {}

line_index: 295
bug_before_refactoring: private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
fix_after_refactoring: protected boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
√ fix_prediction_before: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
× fix_prediction_after: public boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }

line_index: 304
bug_before_refactoring: public void stopMainService ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> public void stopMainService ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> Errors solved for crashing DB load
bug_after_refactoring: public void ulseximgtpumgdopcvsh ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> public void ulseximgtpumgdopcvsh ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> Errors solved for crashing DB load
fix_before_refactoring: public void stopMainService () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }
fix_after_refactoring: public void ulseximgtpumgdopcvsh () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }
√ fix_prediction_before: public void stopMainService () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }
× fix_prediction_after: public void ulseximgtpumgdopcvsh ( android.view.View view ) {}

line_index: 313
bug_before_refactoring: public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> Merge pull request #2 from tfrancart/issue-1  Make EdmSchemaValidator non-static to be able to pass a different path to EDM.xsd  fix #1
bug_after_refactoring: public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler teyfophzcgsehfyrfhnv ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . teyfophzcgsehfyrfhnv ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler teyfophzcgsehfyrfhnv ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . teyfophzcgsehfyrfhnv ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> Merge pull request #2 from tfrancart/issue-1  Make EdmSchemaValidator non-static to be able to pass a different path to EDM.xsd  fix #1
fix_before_refactoring: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , true , true ) ; }
fix_after_refactoring: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler teyfophzcgsehfyrfhnv ( java.io.File file ) { return teyfophzcgsehfyrfhnv ( new javax.xml.transform.stream.StreamSource ( file ) , true , true ) ; }
√ fix_prediction_before: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , true , true ) ; }
× fix_prediction_after: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler teyfophzcgsehfyrfhnv ( java.io.File file ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . teyfophzcgsehfyrfhnv ( new javax.xml.transform.stream.StreamSource ( file ) ) ; }

line_index: 318
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
bug_after_refactoring: public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
fix_after_refactoring: public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
× fix_prediction_after: public void zvtemsipjrrkyjuddxhg () {}

line_index: 343
bug_before_refactoring: @ java.lang.Override public void onDestroy () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . onDestroy () ; } <s> @ java.lang.Override public void onDestroy () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . onDestroy () ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void jertipurqujluiwxirab () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . jertipurqujluiwxirab () ; } <s> @ java.lang.Override public void jertipurqujluiwxirab () { java.lang.System.out . println ( "我被销毁了！！" ) ; username = "" ; password = "" ; super . jertipurqujluiwxirab () ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override public void jertipurqujluiwxirab () { super . jertipurqujluiwxirab () ; }
√ fix_prediction_before: @ java.lang.Override public void onDestroy () { super . onDestroy () ; }
× fix_prediction_after: @ java.lang.Override public void jertipurqujluiwxirab () { username = "" ; password = "" ; super . jertipurqujluiwxirab () ; }

line_index: 344
bug_before_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> fix bugs
bug_after_refactoring: br.com.kdev.task.Task nkefikwdpcayisiqiwcy ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> br.com.kdev.task.Task nkefikwdpcayisiqiwcy ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> fix bugs
fix_before_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) throws java.io.IOException { return mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; }
fix_after_refactoring: br.com.kdev.task.Task nkefikwdpcayisiqiwcy ( java.lang.String taskJSON ) throws java.io.IOException { return mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; }
√ fix_prediction_before: br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) throws java.io.IOException { return mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; }
× fix_prediction_after: br.com.kdev.task.Task nkefikwdpcayisiqiwcy ( java.lang.String taskJSON ) { return mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; }

line_index: 365
bug_before_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> Add student management system frontend part and fix bug in REST API
bug_after_refactoring: com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> Add student management system frontend part and fix bug in REST API
fix_before_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;
fix_after_refactoring: com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;
√ fix_prediction_before: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;
× fix_prediction_after: com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO oldStudentDTO , com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;

line_index: 367
bug_before_refactoring: private void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> private void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> Fix bugs  test I18nHelper
bug_after_refactoring: private void lgctmpjojvduunkjryfv ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> private void lgctmpjojvduunkjryfv ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> Fix bugs  test I18nHelper
fix_before_refactoring: protected void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; }
fix_after_refactoring: protected void lgctmpjojvduunkjryfv ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; }
√ fix_prediction_before: protected void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; }
× fix_prediction_after: private void mdctmpjojvduunkjryfv ( final java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; }

line_index: 373
bug_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
bug_after_refactoring: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
fix_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
fix_after_refactoring: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
√ fix_prediction_before: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
× fix_prediction_after: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; }

line_index: 376
bug_before_refactoring: @ java.lang.Override public final boolean repOK () { return java.lang.Double . isFinite ( fitness ) ; } <s> @ java.lang.Override public final boolean repOK () { return java.lang.Double . isFinite ( fitness ) ; } <s> Fix issues with the previous commit that broke some tests.
bug_after_refactoring: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return java.lang.Double . isFinite ( fitness ) ; } <s> @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return java.lang.Double . isFinite ( fitness ) ; } <s> Fix issues with the previous commit that broke some tests.
fix_before_refactoring: @ java.lang.Override public final boolean repOK () { return true ; }
fix_after_refactoring: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return true ; }
√ fix_prediction_before: @ java.lang.Override public final boolean repOK () { return true ; }
× fix_prediction_after: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return fitness ; }

line_index: 387
bug_before_refactoring: private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
bug_after_refactoring: private carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
fix_before_refactoring: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
fix_after_refactoring: protected carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
√ fix_prediction_before: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
× fix_prediction_after: private carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }

line_index: 405
bug_before_refactoring: private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> private static native void _imaqEqualize ( long dest , long source , float min , float max , long mask ) ; <s> Fixing bugs
bug_after_refactoring: private static native void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) ; <s> private static native void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
fix_after_refactoring: private static void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) {}
√ fix_prediction_before: private static void _imaqEqualize ( long dest , long source , float min , float max , long mask ) {}
× fix_prediction_after: private static native void pyovslhphkfbkmcdlfgw ( long dest , long source , float min , float max , long mask ) ;

line_index: 415
bug_before_refactoring: protected javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; } <s> protected javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; } <s> Fixed potential bug
bug_after_refactoring: protected javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; } <s> protected javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; } <s> Fixed potential bug
fix_before_refactoring: public javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; }
fix_after_refactoring: public javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; }
√ fix_prediction_before: public javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; }
× fix_prediction_after: public javafx.beans.property.DoubleProperty ffumqvneddjqhyhyzwnyej () { return this . size ; }

line_index: 422
bug_before_refactoring: public void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> public void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> Add drag and zoom for Pdf Renderer Fix a bug where pdfActivty started even if the pdf was not downloaded (network error) Add gesture-imageview.jar lib @see github.com/jasonpolites/gesture-imageview Cleaned useless imports
bug_after_refactoring: public void whgeevpuuhdvntkkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> public void whgeevpuuhdvntkkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> Add drag and zoom for Pdf Renderer Fix a bug where pdfActivty started even if the pdf was not downloaded (network error) Add gesture-imageview.jar lib @see github.com/jasonpolites/gesture-imageview Cleaned useless imports
fix_before_refactoring: private void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } }
fix_after_refactoring: private void whgeevpuuhdvntkkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } }
√ fix_prediction_before: private void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } }
× fix_prediction_after: public void whgeevpuuhdv gsonkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } }

line_index: 430
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> fixed bug of ble-led  fixed bug of send message of ble-led and bel-voice
bug_after_refactoring: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> fixed bug of ble-led  fixed bug of send message of ble-led and bel-voice
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override protected boolean jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; return true ; }

line_index: 434
bug_before_refactoring: public ffk27.mapviewer2.GeoDataSource getDataSource () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> public ffk27.mapviewer2.GeoDataSource getDataSource () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> bugfixes
bug_after_refactoring: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> bugfixes
fix_before_refactoring: public ffk27.mapviewer2.GeoDataSource getDataSource () { return dataSource ; }
fix_after_refactoring: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { return dataSource ; }
√ fix_prediction_before: public ffk27.mapviewer2.GeoDataSource getDataSource () { return dataSource ; }
× fix_prediction_after: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { if ( ( dataSource ) == null ) { return parentDataSource ( parent ) ; } return dataSource ; }

line_index: 460
bug_before_refactoring: private static long next () { return Pandigital . next ( Pandigital.current ) ; } <s> private static long next () { return Pandigital . next ( Pandigital.current ) ; } <s> solved Euler problem 41
bug_after_refactoring: private static long slfthnxqvfozifnlplch () { return Pandigital . slfthnxqvfozifnlplch ( Pandigital.current ) ; } <s> private static long slfthnxqvfozifnlplch () { return Pandigital . slfthnxqvfozifnlplch ( Pandigital.current ) ; } <s> solved Euler problem 41
fix_before_refactoring: public static long next () { return Pandigital . next ( Pandigital.current ) ; }
fix_after_refactoring: public static long slfthnxqvfozifnlplch () { return Pandigital . slfthnxqvfozifnlplch ( Pandigital.current ) ; }
√ fix_prediction_before: public static long next () { return Pandigital . next ( Pandigital.current ) ; }
× fix_prediction_after: public long slfthnxqvfozifnlplch () { return Pandigital . slfthnxqvfozifnlplch ( Pandigital.current ) ; }

line_index: 490
bug_before_refactoring: public void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> public void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> fix many bug
bug_after_refactoring: public void pentkyezdibxtgvxceeg ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> public void pentkyezdibxtgvxceeg ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; } <s> fix many bug
fix_before_refactoring: private void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
fix_after_refactoring: private void pentkyezdibxtgvxceeg ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
√ fix_prediction_before: private void savePref ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }
× fix_prediction_after: public void pentkyezdibxtgvxceeg ( java.lang.String key , boolean value ) { me.wizos.loread.data.WithSet.editor . putBoolean ( key , value ) ; me.wizos.loread.data.WithSet.editor . apply () ; }

line_index: 494
bug_before_refactoring: public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . getNumberOfEvents ( registrationID , eventID ) ; } <s> public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . getNumberOfEvents ( registrationID , eventID ) ; } <s> Added spinner and fixed bug in economy report
bug_after_refactoring: public int qrozpfjljfpjcywupwrb ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . qrozpfjljfpjcywupwrb ( registrationID , eventID ) ; } <s> public int qrozpfjljfpjcywupwrb ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . qrozpfjljfpjcywupwrb ( registrationID , eventID ) ; } <s> Added spinner and fixed bug in economy report
fix_before_refactoring: public java.lang.Integer getNumberOfEvents ( int eventID ) { return courseRepository . getNumberOfEvents ( eventID ) ; }
fix_after_refactoring: public java.lang.Integer qrozpfjljfpjcywupwrb ( int eventID ) { return courseRepository . qrozpfjljfpjcywupwrb ( eventID ) ; }
√ fix_prediction_before: public java.lang.Integer getNumberOfEvents ( int eventID ) { return courseRepository . getNumberOfEvents ( eventID ) ; }
× fix_prediction_after: public int qrozpfjljfpjcywupwrb ( java.util.ArrayList < java.lang.Integer > registrationID ) { return courseRepository . qrozpfjljfpjcywupwrb ( registrationID ) ; }

line_index: 498
bug_before_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> fixed layout issues with the action drawer. change action drawer implementation. added toggle to enable/disable the action drawer. removed the 'reset map bearing' button.
bug_after_refactoring: @ java.lang.Override protected void jywmtkkvparhpnxkvocq ( android.os.Bundle outState ) { super . jywmtkkvparhpnxkvocq ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> @ java.lang.Override protected void jywmtkkvparhpnxkvocq ( android.os.Bundle outState ) { super . jywmtkkvparhpnxkvocq ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> fixed layout issues with the action drawer. change action drawer implementation. added toggle to enable/disable the action drawer. removed the 'reset map bearing' button.
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }
fix_after_refactoring: @ java.lang.Override public void jywmtkkvparhpnxkvocq ( android.os.Bundle outState ) { super . jywmtkkvparhpnxkvocq ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }
√ fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }
× fix_prediction_after: @ java.lang.Override protected void jywmtkkvparhpnxkvocq ( android.os.Bundle outState ) { super . jywmtkkvparhpnxkvocq ( outState ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ) ; }

line_index: 501
bug_before_refactoring: public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> fixing return null bug
bug_after_refactoring: public java.util.Set < TermCounter > ahvyqoompcnudfbdddpt ( java.lang.String term ) {} <s> public java.util.Set < TermCounter > ahvyqoompcnudfbdddpt ( java.lang.String term ) {} <s> fixing return null bug
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
× fix_prediction_after: public java.util.Set < TermCounter > ahvyqoompcnudfbdddpt ( java.lang.String term ) { return null ; }

line_index: 518
bug_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> Updated and improved /trigger testImport  Fixed being able to do /trigger testimport while you are already testing an import to avoid loading bugs Added being able to test multiple imports at once with /trigger testimport [importName] [importName] <...>  Added a fade out to the killfeed
bug_after_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void ndrdcseeoirjestfvtpu ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void ndrdcseeoirjestfvtpu ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> Updated and improved /trigger testImport  Fixed being able to do /trigger testimport while you are already testing an import to avoid loading bugs Added being able to test multiple imports at once with /trigger testimport [importName] [importName] <...>  Added a fade out to the killfeed
fix_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { global.worldIsLoaded = false ; }
fix_after_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void ndrdcseeoirjestfvtpu ( net.minecraftforge.event.world.WorldEvent.Unload e ) { global.worldIsLoaded = false ; }
√ fix_prediction_before: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { global.worldIsLoaded = false ; }
× fix_prediction_after: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void ndrdcseeoirjestfvtpu () { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { file = null ; } global.worldIsLoaded = false ; }

line_index: 534
bug_before_refactoring: private int getRealItemCount () { return mInnerAdapter . getItemCount () ; } <s> private int getRealItemCount () { return mInnerAdapter . getItemCount () ; } <s> fix bug
bug_after_refactoring: private int yytoxugzepmrsekiunzd () { return mInnerAdapter . getItemCount () ; } <s> private int yytoxugzepmrsekiunzd () { return mInnerAdapter . getItemCount () ; } <s> fix bug
fix_before_refactoring: private int getRealItemCount () { return ( mInnerAdapter ) == null ? 0 : mInnerAdapter . getItemCount () ; }
fix_after_refactoring: private int yytoxugzepmrsekiunzd () { return ( mInnerAdapter ) == null ? 0 : mInnerAdapter . getItemCount () ; }
√ fix_prediction_before: private int getRealItemCount () { return ( mInnerAdapter ) == null ? 0 : mInnerAdapter . getItemCount () ; }
× fix_prediction_after: private int yytoxugzepmrsekiunzd () { return 0 ; }

line_index: 536
bug_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
bug_after_refactoring: @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
fix_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
fix_after_refactoring: @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
√ fix_prediction_before: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
× fix_prediction_after: @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) {}

line_index: 551
bug_before_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> Fixed permission bug with wifimanager
bug_after_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> Fixed permission bug with wifimanager
fix_before_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }
fix_after_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }
√ fix_prediction_before: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }
× fix_prediction_after: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep ( android.content.Context context ) { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl ( context ) ; return wifiScannerImpl ; }

line_index: 588
bug_before_refactoring: private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> Fixing issue where the atomic reader contet did not have the correct parent information and therfore was not reporting the correct docids.
bug_after_refactoring: private org.apache.lucene.index.AtomicReader qzchxbptxtwrbakbaocg ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> private org.apache.lucene.index.AtomicReader qzchxbptxtwrbakbaocg ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> Fixing issue where the atomic reader contet did not have the correct parent information and therfore was not reporting the correct docids.
fix_before_refactoring: protected org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }
fix_after_refactoring: protected org.apache.lucene.index.AtomicReader qzchxbptxtwrbakbaocg ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }
√ fix_prediction_before: protected org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }
× fix_prediction_after: public org.apache.lucene.index.AtomicReader qzchxbptxtwrbakbaocg ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }

line_index: 607
bug_before_refactoring: public < T > void emit ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> public < T > void emit ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> Bugfixing
bug_after_refactoring: public < T > void zkppeijusvxhltdhqnoi ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> public < T > void zkppeijusvxhltdhqnoi ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> Bugfixing
fix_before_refactoring: public void emit ( java.lang.String event , java.lang.Object data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; }
fix_after_refactoring: public void zkppeijusvxhltdhqnoi ( java.lang.String event , java.lang.Object data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; }
√ fix_prediction_before: public void emit ( java.lang.String event , java.lang.Object data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; }
× fix_prediction_after: public void zkppeijusvxhltdhqnoi ( java.lang.String event , int data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; }

line_index: 612
bug_before_refactoring: public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
bug_after_refactoring: public static java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
fix_before_refactoring: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
fix_after_refactoring: public java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
√ fix_prediction_before: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
× fix_prediction_after: public java.sql.PreparedStatement otnzsfmsorxwsharkjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }

line_index: 614
bug_before_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return type ; } <s> public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return type ; } <s> Sonar Issues fix  Change-Id: I1af7e2a6926b6d8717e862382f5540beab2df3a0 Signed-off-by: Iveta Halanova <iveta.halanova@pantheon.sk>
bug_after_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return type ; } <s> public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return type ; } <s> Sonar Issues fix  Change-Id: I1af7e2a6926b6d8717e862382f5540beab2df3a0 Signed-off-by: Iveta Halanova <iveta.halanova@pantheon.sk>
fix_before_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return this . type ; }
fix_after_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return this . type ; }
√ fix_prediction_before: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return this . type ; }
× fix_prediction_after: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return type . get () ; }

line_index: 616
bug_before_refactoring: private java.util.ArrayList getTitles () { return titlesString ; } <s> private java.util.ArrayList getTitles () { return titlesString ; } <s> Fixed some layout issues and made separatemethods for GUI components initialization
bug_after_refactoring: private java.util.ArrayList ewdezuiifuaqjizuthtf () { return titlesString ; } <s> private java.util.ArrayList ewdezuiifuaqjizuthtf () { return titlesString ; } <s> Fixed some layout issues and made separatemethods for GUI components initialization
fix_before_refactoring: public java.util.ArrayList getTitles () { return titlesString ; }
fix_after_refactoring: public java.util.ArrayList ewdezuiifuaqjizuthtf () { return titlesString ; }
√ fix_prediction_before: public java.util.ArrayList getTitles () { return titlesString ; }
× fix_prediction_after: private java.util.ArrayListewdezuiifuaqjizuthtf () { return titles . values () ; }

line_index: 643
bug_before_refactoring: private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> fixed some issues with implementation
bug_after_refactoring: private boolean invtdpkhwzdeindipzan ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> private boolean invtdpkhwzdeindipzan ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> fixed some issues with implementation
fix_before_refactoring: protected boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; }
fix_after_refactoring: protected boolean invtdpkhwzdeindipzan ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; }
√ fix_prediction_before: protected boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; }
× fix_prediction_after: public boolean invtdpkhwzdeindipzan ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; }

line_index: 645
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> bug fixes
bug_after_refactoring: @ java.lang.Override public void xbegwfmgyekjfpkuxibf ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> @ java.lang.Override public void xbegwfmgyekjfpkuxibf ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { addNewPOI () ; }
fix_after_refactoring: @ java.lang.Override public void xbegwfmgyekjfpkuxibf ( android.view.View v ) { addNewPOI () ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { addNewPOI () ; }
× fix_prediction_after: @ java.lang.Override public void bgegwfmgyekjfpkuxibf ( android.view.View v ) { addNewPOI () ; }

line_index: 648
bug_before_refactoring: public static long meanLong ( long [] arr ) { return com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ; } <s> public static long meanLong ( long [] arr ) { return com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ; } <s> Mean class bug solved.
bug_after_refactoring: public static long tippvrztlgcanciuhztg ( long [] arr ) { return com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ; } <s> public static long tippvrztlgcanciuhztg ( long [] arr ) { return com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ; } <s> Mean class bug solved.
fix_before_refactoring: public static double meanLong ( long [] arr ) { return ( ( double ) ( com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ) ) / ( arr.length ) ; }
fix_after_refactoring: public static double tippvrztlgcanciuhztg ( long [] arr ) { return ( ( double ) ( com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ) ) / ( arr.length ) ; }
√ fix_prediction_before: public static double meanLong ( long [] arr ) { return ( ( double ) ( com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ) ) / ( arr.length ) ; }
× fix_prediction_after: public static double tippvrztlgcanciuhztg ( double [] arr ) { return ( ( double ) ( com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ) ) / ( arr.length ) ; }

line_index: 651
bug_before_refactoring: private java.lang.String getNextTaskToCompute () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; } <s> private java.lang.String getNextTaskToCompute () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; } <s> Fix merge errors  work on server
bug_after_refactoring: private java.lang.String zxygqkhsczebvixbydll () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; } <s> private java.lang.String zxygqkhsczebvixbydll () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; } <s> Fix merge errors  work on server
fix_before_refactoring: public java.lang.String getNextTaskToCompute () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; }
fix_after_refactoring: public java.lang.String zxygqkhsczebvixbydll () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; }
√ fix_prediction_before: public java.lang.String getNextTaskToCompute () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; }
× fix_prediction_after: protected java.lang.String zxygqkhsczebvixbydll () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; }

line_index: 654
bug_before_refactoring: public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
bug_after_refactoring: public boolean nclwlqnfthdzyenhphph ( model.curve.Grade grade ) { return curve . nclwlqnfthdzyenhphph ( grade ) ; } <s> public boolean nclwlqnfthdzyenhphph ( model.curve.Grade grade ) { return curve . nclwlqnfthdzyenhphph ( grade ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
fix_before_refactoring: public boolean remove ( model.curve.Grade grade ) { if ( grade != null ) { return curve . remove ( grade ) ; } return false ; }
fix_after_refactoring: public boolean nclwlqnfthdzyenhphph ( model.curve.Grade grade ) { if ( grade != null ) { return curve . nclwlqnfthdzyenhphph ( grade ) ; } return false ; }
√ fix_prediction_before: public boolean remove ( model.curve.Grade grade ) { if ( grade != null ) { return curve . remove ( grade ) ; } return false ; }
× fix_prediction_after: public boolean nclwlqnfthdzyenhphph ( model.curve.Grade grade ) { if ( grade != null ) { return curve . nclwlqnfthdzyenhphph ( grade ) ; } else { return false ; } }

line_index: 659
bug_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
bug_after_refactoring: @ java.lang.Override public void iptlzltzvcsetcuijtvo ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void iptlzltzvcsetcuijtvo ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
fix_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
fix_after_refactoring: @ java.lang.Override public void iptlzltzvcsetcuijtvo ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
√ fix_prediction_before: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
× fix_prediction_after: @ java.lang.Override public void copyToRealmOrUpdate ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }

line_index: 667
bug_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
fix_after_refactoring: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ index ] ; }
√ fix_prediction_before: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
× fix_prediction_after: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwms ( short index ) { return blocks [ index ] ; }

line_index: 669
bug_before_refactoring: private T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> private T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> fixed some of deque. lastremove still buggy
bug_after_refactoring: private T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> private T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; } <s> fixed some of deque. lastremove still buggy
fix_before_refactoring: public T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }
fix_after_refactoring: public T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }
√ fix_prediction_before: public T removeLast () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }
× fix_prediction_after: protected T uelsiolhoerqigusbljf () { if ( ( start ) == ( end ) ) { throw new java.util.NoSuchElementException () ; } T result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; }

line_index: 672
bug_before_refactoring: protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
bug_after_refactoring: protected boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> protected boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
fix_before_refactoring: public boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
fix_after_refactoring: public boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
√ fix_prediction_before: public boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
× fix_prediction_after: protected boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user ) { return true ; }

line_index: 681
bug_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> Load of bug fixes.
bug_after_refactoring: @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> Load of bug fixes.
fix_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
fix_after_refactoring: @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
√ fix_prediction_before: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
× fix_prediction_after: @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { if ( enabled ) { this . enabled = false ; invalidate () ; } }

line_index: 701
bug_before_refactoring: public void credentialsProvider () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider credentialsProvider = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( credentialsProvider ) ; } <s> public void credentialsProvider () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider credentialsProvider = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( credentialsProvider ) ; } <s> Create a word file and update it every 6AM. Fix TimePickerFragment bug.
bug_after_refactoring: public void wlvuolssiwhkdcfjuoqy () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider wlvuolssiwhkdcfjuoqy = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( wlvuolssiwhkdcfjuoqy ) ; } <s> public void wlvuolssiwhkdcfjuoqy () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider wlvuolssiwhkdcfjuoqy = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( wlvuolssiwhkdcfjuoqy ) ; } <s> Create a word file and update it every 6AM. Fix TimePickerFragment bug.
fix_before_refactoring: private void credentialsProvider () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider credentialsProvider = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( credentialsProvider ) ; }
fix_after_refactoring: private void wlvuolssiwhkdcfjuoqy () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider wlvuolssiwhkdcfjuoqy = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( wlvuolssiwhkdcfjuoqy ) ; }
√ fix_prediction_before: private void credentialsProvider () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider credentialsProvider = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( credentialsProvider ) ; }
× fix_prediction_after: public void wlvuolssiwhkdcfjuoqy () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider wlvuolssiwhkdcfjuoqy = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( this ) ; setAmazonClient ( wlvuolssiwhkdcfjuoqy ) ; }

line_index: 713
bug_before_refactoring: public static net.vicp.lylab.utils.timer.LYPlan getInstance () { return net.vicp.lylab.utils.timer.LYPlan.instance . get ( net.vicp.lylab.utils.timer.LYPlan . class ) ; } <s> public static net.vicp.lylab.utils.timer.LYPlan getInstance () { return net.vicp.lylab.utils.timer.LYPlan.instance . get ( net.vicp.lylab.utils.timer.LYPlan . class ) ; } <s> Critical bug fixed
bug_after_refactoring: public static net.vicp.lylab.utils.timer.LYPlan gurzhhtmnjnngpeotbap () { return net.vicp.lylab.utils.timer.LYPlan.instance . get ( net.vicp.lylab.utils.timer.LYPlan . class ) ; } <s> public static net.vicp.lylab.utils.timer.LYPlan gurzhhtmnjnngpeotbap () { return net.vicp.lylab.utils.timer.LYPlan.instance . get ( net.vicp.lylab.utils.timer.LYPlan . class ) ; } <s> Critical bug fixed
fix_before_refactoring: public static net.vicp.lylab.utils.timer.LYPlan getInstance () { return net.vicp.lylab.utils.timer.LYPlan.instance ; }
fix_after_refactoring: public static net.vicp.lylab.utils.timer.LYPlan gurzhhtmnjnngpeotbap () { return net.vicp.lylab.utils.timer.LYPlan.instance ; }
√ fix_prediction_before: public static net.vicp.lylab.utils.timer.LYPlan getInstance () { return net.vicp.lylab.utils.timer.LYPlan.instance ; }
× fix_prediction_after: public static net.vicp.lylab.utils.timer.LYPlan gurzhhtmnjnngpeotbap () { return net.vicp.lylab.utils.timer.LYPlan.instance . get ( net.vicp.lylab.utils.timer.LYPlan . class , null ) ; }

line_index: 720
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
bug_after_refactoring: public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
fix_after_refactoring: public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
× fix_prediction_after: public voidlopwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { new InputGrid () ; }

line_index: 726
bug_before_refactoring: public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
bug_after_refactoring: public static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> public static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
fix_before_refactoring: private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
fix_after_refactoring: private static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
√ fix_prediction_before: private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
× fix_prediction_after: public static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; }

line_index: 739
bug_before_refactoring: private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
bug_after_refactoring: private void xorbnobfajgrsfuihnai ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void xorbnobfajgrsfuihnai ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
fix_before_refactoring: void setEndTime ( double endTime ) { this . endTime = endTime ; }
fix_after_refactoring: void xorbnobfajgrsfuihnai ( double endTime ) { this . endTime = endTime ; }
√ fix_prediction_before: void setEndTime ( double endTime ) { this . endTime = endTime ; }
× fix_prediction_after: public void xorbnobfajgrsfuihnai ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; }

line_index: 742
bug_before_refactoring: public java.lang.String [] paramaters () { return new java.lang.String [ 0 ] ; } <s> public java.lang.String [] paramaters () { return new java.lang.String [ 0 ] ; } <s> Fix spelling error in API
bug_after_refactoring: public java.lang.String [] imuyyobejmxrvcdxitrp () { return new java.lang.String [ 0 ] ; } <s> public java.lang.String [] imuyyobejmxrvcdxitrp () { return new java.lang.String [ 0 ] ; } <s> Fix spelling error in API
fix_before_refactoring: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
fix_after_refactoring: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
√ fix_prediction_before: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
× fix_prediction_after: public java.lang.String [] imuyyobejmxrvcdxitrp ( android.content.Context c ) { return new java.lang.String [ 0 ] ; }

line_index: 743
bug_before_refactoring: @ java.lang.Override public java.lang.String getSavePath () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> @ java.lang.Override public java.lang.String getSavePath () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> Bugfix: A folder with the instance name minus two letters gets generated when a Circuit Database template is saved.
bug_after_refactoring: @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> Bugfix: A folder with the instance name minus two letters gets generated when a Circuit Database template is saved.
fix_before_refactoring: @ java.lang.Override public java.lang.String getSavePath () { return net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { return net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getSavePath () { return net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { return null ; }

line_index: 748
bug_before_refactoring: public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
bug_after_refactoring: public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
fix_before_refactoring: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
fix_after_refactoring: public < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; }
√ fix_prediction_before: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
× fix_prediction_after: public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; }

line_index: 752
bug_before_refactoring: private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
fix_after_refactoring: private static long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
√ fix_prediction_before: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
× fix_prediction_after: private static native long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ;

line_index: 754
bug_before_refactoring: private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> Fixing bugs
bug_after_refactoring: private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ; <s> private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ; <s> Fixing bugs
fix_before_refactoring: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
fix_after_refactoring: private static int mvetzezobhpextblpwyq ( long roi , long annulus ) { return 0 ; }
√ fix_prediction_before: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
× fix_prediction_after: private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ;

line_index: 755
bug_before_refactoring: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> Fixed errors in OpenstackKeyPairServiceTest and an error in the class
bug_after_refactoring: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> Fixed errors in OpenstackKeyPairServiceTest and an error in the class
fix_before_refactoring: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
fix_after_refactoring: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
√ fix_prediction_before: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
× fix_prediction_after: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception {}

line_index: 756
bug_before_refactoring: private static native void _IMAQdxSnap ( int id , long image ) ; <s> private static native void _IMAQdxSnap ( int id , long image ) ; <s> Fixing bugs
bug_after_refactoring: private static native void xrmeudhoethgilnxzleo ( int id , long image ) ; <s> private static native void xrmeudhoethgilnxzleo ( int id , long image ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSnap ( int id , long image ) {}
fix_after_refactoring: private static void xrmeudhoethgilnxzleo ( int id , long image ) {}
√ fix_prediction_before: private static void _IMAQdxSnap ( int id , long image ) {}
× fix_prediction_after: private static native void resultCodemeudhoethgilnxzleo ( int id , long image ) ;

line_index: 768
bug_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
bug_after_refactoring: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
fix_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
fix_after_refactoring: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder ) ; }
√ fix_prediction_before: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
× fix_prediction_after: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , fragmentSpec ) ; }

line_index: 784
bug_before_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> NC 2.6  Fix problem with booked tickets Change seance date Fix exception when changing booking form from one seance to another
bug_after_refactoring: @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> NC 2.6  Fix problem with booked tickets Change seance date Fix exception when changing booking form from one seance to another
fix_before_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }
fix_after_refactoring: @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }
√ fix_prediction_before: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }
× fix_prediction_after: @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } return false ; }

line_index: 786
bug_before_refactoring: public int getEvent () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> public int getEvent () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> [fix connection bug] fix connection bug
bug_after_refactoring: public int ymqlpjmompvgukhorfre () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> public int ymqlpjmompvgukhorfre () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> [fix connection bug] fix connection bug
fix_before_refactoring: public int getEvent () { return mEvent ; }
fix_after_refactoring: public int ymqlpjmompvgukhorfre () { return mEvent ; }
√ fix_prediction_before: public int getEvent () { return mEvent ; }
× fix_prediction_after: public int animateqlpjmompvgukhorfre ( android.content.Context context ) { try { mEvent = context . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; }

line_index: 792
bug_before_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> fix compilation issues
bug_after_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T mpisszdyfukflriamstq ( java.lang.String id ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T mpisszdyfukflriamstq ( java.lang.String id ) ; <s> fix compilation issues
fix_before_refactoring: com.jeromeloisel.db.entity.Entity withId ( java.lang.String id ) ;
fix_after_refactoring: com.jeromeloisel.db.entity.Entity mpisszdyfukflriamstq ( java.lang.String id ) ;
√ fix_prediction_before: com.jeromeloisel.db.entity.Entity withId ( java.lang.String id ) ;
× fix_prediction_after: < T extends com.jeromeloisel.db.entity.Entity > T mpisszdyfukflriamstq ( java.lang.String id ) ;

line_index: 793
bug_before_refactoring: @ java.lang.Override public void onStart () { super . onStart () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> @ java.lang.Override public void onStart () { super . onStart () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> add friend bug fix
bug_after_refactoring: @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; } <s> add friend bug fix
fix_before_refactoring: @ java.lang.Override public void onStart () { super . onStart () ; }
fix_after_refactoring: @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { super . sjvdhqggmcewlwjnhrym () ; }
√ fix_prediction_before: @ java.lang.Override public void onStart () { super . onStart () ; }
× fix_prediction_after: @ java.lang.Override public void sjvdhqggmcewlwjnhrym () { client . connect () ; AppIndex.AppIndexApi . start ( client , getIndexApiAction () ) ; }

line_index: 799
bug_before_refactoring: public void run () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> public void run () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> fixed lidar code error
bug_after_refactoring: public void dmnvfyikekaqehfixxdu () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> public void dmnvfyikekaqehfixxdu () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> fixed lidar code error
fix_before_refactoring: public void run () { update () ; }
fix_after_refactoring: public void dmnvfyikekaqehfixxdu () { update () ; }
√ fix_prediction_before: public void run () { update () ; }
× fix_prediction_after: public void dmamefyikekaqehfixxdu () { update () ; }

line_index: 800
bug_before_refactoring: public java.lang.String toString () { return ( ( namespace ) + "/" ) + ( name ) ; } <s> public java.lang.String toString () { return ( ( namespace ) + "/" ) + ( name ) ; } <s> Fixing errors to get the compiler to run
bug_after_refactoring: public java.lang.String mrvucovrwzqygwgsggpu () { return ( ( namespace ) + "/" ) + ( name ) ; } <s> public java.lang.String mrvucovrwzqygwgsggpu () { return ( ( namespace ) + "/" ) + ( name ) ; } <s> Fixing errors to get the compiler to run
fix_before_refactoring: public java.lang.String toString () { return name ; }
fix_after_refactoring: public java.lang.String mrvucovrwzqygwgsggpu () { return name ; }
√ fix_prediction_before: public java.lang.String toString () { return name ; }
× fix_prediction_after: public java.lang.String mrvucovrwzqygwgsggpu ( java.lang.String namespace , java.lang.String name ) { return ( ( namespace ) + "/" ) + name ; }

line_index: 802
bug_before_refactoring: @ java.lang.Override public void run () { listenForDevices ( aListener , true ) ; } <s> @ java.lang.Override public void run () { listenForDevices ( aListener , true ) ; } <s> #93: Fixxed issue by removing old threads when necessary.
bug_after_refactoring: @ java.lang.Override public void qwhluhvqsvsngmdwpqxy () { listenForDevices ( aListener , true ) ; } <s> @ java.lang.Override public void qwhluhvqsvsngmdwpqxy () { listenForDevices ( aListener , true ) ; } <s> #93: Fixxed issue by removing old threads when necessary.
fix_before_refactoring: @ java.lang.Override public void run () { listenForDevices ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void qwhluhvqsvsngmdwpqxy () { listenForDevices ( true ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { listenForDevices ( true ) ; }
× fix_prediction_after: @ java.lang.Override public void qwhluhvqsvsngmdwpqxy () { listenForDevices ( aListener ) ; }

line_index: 803
bug_before_refactoring: public void choose () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> public void choose () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> Fixed issue with doors again GDI
bug_after_refactoring: public void ndpvlpkbywampzlqznja () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> public void ndpvlpkbywampzlqznja () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> Fixed issue with doors again GDI
fix_before_refactoring: public void choose () { this . chosen = true ; }
fix_after_refactoring: public void ndpvlpkbywampzlqznja () { this . chosen = true ; }
√ fix_prediction_before: public void choose () { this . chosen = true ; }
× fix_prediction_after: public void ndpvlpkbywampzlqznja () { if ( ( chosen ) == true ) { this . chosen = true ; } }

line_index: 823
bug_before_refactoring: public static int [] binarySearch ( int [] list , int checkNum ) {} <s> public static int [] binarySearch ( int [] list , int checkNum ) {} <s> Fix misc. bugs
bug_after_refactoring: public static int [] wotqrebylworupsvvaqw ( int [] list , int checkNum ) {} <s> public static int [] wotqrebylworupsvvaqw ( int [] list , int checkNum ) {} <s> Fix misc. bugs
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
× fix_prediction_after: { return new int [ checkNum ] ; }

line_index: 825
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> 创建圈子bug -fix
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String cdooplijoekliqgfbvwr ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String cdooplijoekliqgfbvwr ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> 创建圈子bug -fix
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public void update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { circleServiceImpl . update ( request , phone , circle ) ; }

line_index: 842
bug_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
bug_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
fix_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
fix_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( java.lang.String property , java.lang.String value ) ;
√ fix_prediction_before: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
× fix_prediction_after: pckjujeefrqbficoxllc ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ;

line_index: 854
bug_before_refactoring: private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> Fixing bugs
bug_after_refactoring: private static native void lgfliqorxqxmhymekhdy ( long image , long offset ) ; <s> private static native void lgfliqorxqxmhymekhdy ( long image , long offset ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetMaskOffset ( long image , long offset ) {}
fix_after_refactoring: private static void lgfliqorxqxmhymekhdy ( long image , long offset ) {}
√ fix_prediction_before: private static void _imaqSetMaskOffset ( long image , long offset ) {}
× fix_prediction_after: private static native voidmdymekhdy ( long image , long offset ) ;

line_index: 870
bug_before_refactoring: public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> Solved Zero Backup issue
bug_after_refactoring: public void soemutjscwihulcfecfu ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> public void soemutjscwihulcfecfu ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> Solved Zero Backup issue
fix_before_refactoring: private void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
fix_after_refactoring: private void soemutjscwihulcfecfu ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
√ fix_prediction_before: private void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
× fix_prediction_after: public void soemutjscwihulcfecfu ( java.lang.String number ) { mainLine . setText ( number ) ; }

line_index: 871
bug_before_refactoring: public static int mul ( int n1 , int n2 ) { return n1 + n2 ; } <s> public static int mul ( int n1 , int n2 ) { return n1 + n2 ; } <s> fixed errors
bug_after_refactoring: public static int luocoxglrscbjfswmenc ( int n1 , int n2 ) { return n1 + n2 ; } <s> public static int luocoxglrscbjfswmenc ( int n1 , int n2 ) { return n1 + n2 ; } <s> fixed errors
fix_before_refactoring: public static int mul ( int n1 , int n2 ) { return n1 * n2 ; }
fix_after_refactoring: public static int luocoxglrscbjfswmenc ( int n1 , int n2 ) { return n1 * n2 ; }
√ fix_prediction_before: public static int mul ( int n1 , int n2 ) { return n1 * n2 ; }
× fix_prediction_after: public static int luocoxglrscbjfswmenc ( int n1 , int n2 ) { return n1 - n2 ; }

line_index: 873
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
bug_after_refactoring: @ java.lang.Override public void hvihnggqsjbjdfqsjgwj ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> @ java.lang.Override public void hvihnggqsjbjdfqsjgwj ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username , password ) ; }
fix_after_refactoring: @ java.lang.Override public void hvihnggqsjbjdfqsjgwj ( android.view.View v ) { validateCredentials ( username , password ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username , password ) ; }
× fix_prediction_after: @ java.lang.Override public void hvihnggqsjbjdfqsjgwj ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; }

line_index: 881
bug_before_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> ARUHA-765: fixed the problem with nulls;
bug_after_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> ARUHA-765: fixed the problem with nulls;
fix_before_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return admins ; }
fix_after_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { return admins ; }
√ fix_prediction_before: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return admins ; }
× fix_prediction_after: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { if ( ( admins ) == null ) { admins = new java.util.ArrayList < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > () ; } return admins ; }

line_index: 903
bug_before_refactoring: public static void shutdown () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> public static void shutdown () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> More efficient DB access and bug fixed
bug_after_refactoring: public static void qwbbvcezgmmqtmqwggth () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> public static void qwbbvcezgmmqtmqwggth () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> More efficient DB access and bug fixed
fix_before_refactoring: public static void shutdown () { model.DBManager.lock . unlock () ; }
fix_after_refactoring: public static void qwbbvcezgmmqtmqwggth () { model.DBManager.lock . unlock () ; }
√ fix_prediction_before: public static void shutdown () { model.DBManager.lock . unlock () ; }
× fix_prediction_after: public static void close () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; }

line_index: 908
bug_before_refactoring: private int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> private int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> Fixed a serious error with the bank and getting the count of dev cards  Accidentally accessed the resources array rather than the real array
bug_after_refactoring: private int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> private int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> Fixed a serious error with the bank and getting the count of dev cards  Accidentally accessed the resources array rather than the real array
fix_before_refactoring: public int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
fix_after_refactoring: public int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
√ fix_prediction_before: public int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
× fix_prediction_after: private int buhlzpqicwtmpizdeqqu ( int [] devCards ) { int total = 0 ; for ( int i = 0 ; i < ( devCards.length ) ; i ++ ) { total += devCards [ i ] ; } return total ; }

line_index: 923
bug_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> fix bug
bug_after_refactoring: protected void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: oajwibpasgbbjxqhydju -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> protected void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: oajwibpasgbbjxqhydju -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> fix bug
fix_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) {}
fix_after_refactoring: protected void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition , int layoutPosition ) {}
√ fix_prediction_before: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) {}
× fix_prediction_after: protected void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: oajwibpasgbbjxqhydju -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; }

line_index: 933
bug_before_refactoring: public java.util.List < org.sem8.ds.rest.resource.CommonResponseResource > sendLeaveRequestAll ( ) throws org.sem8.ds.services.exception.ServiceException { return nodeService . sendLeaveRequestAll () ; } <s> public java.util.List < org.sem8.ds.rest.resource.CommonResponseResource > sendLeaveRequestAll ( ) throws org.sem8.ds.services.exception.ServiceException { return nodeService . sendLeaveRequestAll () ; } <s> fixed node client controller issues
bug_after_refactoring: public java.util.List < org.sem8.ds.rest.resource.CommonResponseResource > bapyhvqwjlqpconvzsti ( ) throws org.sem8.ds.services.exception.ServiceException { return nodeService . bapyhvqwjlqpconvzsti () ; } <s> public java.util.List < org.sem8.ds.rest.resource.CommonResponseResource > bapyhvqwjlqpconvzsti ( ) throws org.sem8.ds.services.exception.ServiceException { return nodeService . bapyhvqwjlqpconvzsti () ; } <s> fixed node client controller issues
fix_before_refactoring: public void sendLeaveRequestAll ( ) throws org.sem8.ds.services.exception.ServiceException { nodeService . sendLeaveRequestAll () ; }
fix_after_refactoring: public void bapyhvqwjlqpconvzsti ( ) throws org.sem8.ds.services.exception.ServiceException { nodeService . bapyhvqwjlqpconvzsti () ; }
√ fix_prediction_before: public void sendLeaveRequestAll ( ) throws org.sem8.ds.services.exception.ServiceException { nodeService . sendLeaveRequestAll () ; }
× fix_prediction_after: public java.util.List < org.sem8.ds.rest.resource.CommonResponseResource > bsharkhvqwjlqpconvzsti ( java.lang.Long id ) throws org.sem8.ds.services.exception.ServiceException { return nodeService . bsharkhvqwjlqpconvzsti ( id ) ; }

line_index: 946
bug_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
bug_after_refactoring: public void dttwekhufarclazbdwbb ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> public void dttwekhufarclazbdwbb ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
fix_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points ; }
fix_after_refactoring: public void dttwekhufarclazbdwbb ( final com.jme3.math.Vector3f [] points ) { curvePoints = points ; }
√ fix_prediction_before: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points ; }
× fix_prediction_after: public void dttwekhufarclazbdwbb ( final com.jme3.math.Vector3f [] points ) { curvePoints = ( points != null ) ? points . clone () : null ; }

line_index: 947
bug_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
bug_after_refactoring: @ java.lang.Override public void xbnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> @ java.lang.Override public void xbnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
fix_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
fix_after_refactoring: @ java.lang.Override public void xbnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
√ fix_prediction_before: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
× fix_prediction_after: @ java.lang.Override public void bgnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }

line_index: 970
bug_before_refactoring: public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > pullItemsFromDB () {} <s> public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > pullItemsFromDB () {} <s> Fixed compilation errors
bug_after_refactoring: public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > vuldhqehhyytmumqvucp () {} <s> public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > vuldhqehhyytmumqvucp () {} <s> Fixed compilation errors
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
× fix_prediction_after: public java.util.Map < java.lang.Integer , cs414c.pizza.domain.Item > lintdhqehhyytmumqvucp () { return null ; }

line_index: 981
bug_before_refactoring: @ java.lang.Override public java.lang.String getFilter () { return ( ru.nsu.ccfit.saltanova.ExtensionFilter.prefix ) + ( str ) ; } <s> @ java.lang.Override public java.lang.String getFilter () { return ( ru.nsu.ccfit.saltanova.ExtensionFilter.prefix ) + ( str ) ; } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public java.lang.String kcvpxexqmfhalcgdxpav () { return ( ru.nsu.ccfit.saltanova.ExtensionFilter.prefix ) + ( str ) ; } <s> @ java.lang.Override public java.lang.String kcvpxexqmfhalcgdxpav () { return ( ru.nsu.ccfit.saltanova.ExtensionFilter.prefix ) + ( str ) ; } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public java.lang.String getFilter () { return str ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String kcvpxexqmfhalcgdxpav () { return str ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getFilter () { return str ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String kcvpxexqmfhalcgdxpav () { return prefix ; }

line_index: 992
bug_before_refactoring: @ java.lang.Override public java.lang.String getFormula () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> @ java.lang.Override public java.lang.String getFormula () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> -added FindBugs to build.gradle -fixed the first few issues reported by FindBugs
bug_after_refactoring: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> -added FindBugs to build.gradle -fixed the first few issues reported by FindBugs
fix_before_refactoring: @ java.lang.Override public java.lang.String getFormula () { return poiCell . getCellFormula () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { return poiCell . getCellFormula () ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String getFormula () { return poiCell . getCellFormula () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { return isEmpty () ? null : poiCell . getCellFormula () ; }

line_index: 994
bug_before_refactoring: public java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> public java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> Fixed an issue in four passes negotiation case between client and kdc
bug_after_refactoring: public java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> public java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> Fixed an issue in four passes negotiation case between client and kdc
fix_before_refactoring: protected java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
fix_after_refactoring: protected java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
√ fix_prediction_before: protected java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
× fix_prediction_after: public java.nio.ByteBuffer khpbsgpsdjjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }

line_index: 996
bug_before_refactoring: java.lang.Object setData ( java.lang.Object newData ) { return data = newData ; } <s> java.lang.Object setData ( java.lang.Object newData ) { return data = newData ; } <s> Fixed some problems that Jieun pointed out
bug_after_refactoring: java.lang.Object cmjjzrtekkvyuwfoqzpm ( java.lang.Object newData ) { return data = newData ; } <s> java.lang.Object cmjjzrtekkvyuwfoqzpm ( java.lang.Object newData ) { return data = newData ; } <s> Fixed some problems that Jieun pointed out
fix_before_refactoring: void setData ( java.lang.Object newData ) { data = newData ; }
fix_after_refactoring: void cmjjzrtekkvyuwfoqzpm ( java.lang.Object newData ) { data = newData ; }
√ fix_prediction_before: void setData ( java.lang.Object newData ) { data = newData ; }
× fix_prediction_after: java.lang.Object cmjjzrtekkvyuwfoqzpm ( java.lang.Object newData ) { if ( newData != null ) { data = newData ; } else { data = null ; } }

line_index: 1012
bug_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " onPanelExpanded" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
bug_after_refactoring: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " xovhwyaunqoolyqbmtfe" ) ) ; } <s> @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " xovhwyaunqoolyqbmtfe" ) ) ; } <s> Solved bug with sunday openings and  get directions button. Added text if some day pharmacy hasn’t hours.
fix_before_refactoring: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
fix_after_refactoring: @ java.lang.Override public void xovhwyaunqoolyqbmtfe ( android.view.View panel ) {}
√ fix_prediction_before: @ java.lang.Override public void onPanelExpanded ( android.view.View panel ) {}
× fix_prediction_after: @ java.lang.Override public void xovhwyaunqoolyqbmtfe () { android.util.Log . v ( "SLINDINGPANEL" , ( ( es.usc.citius.servando.calendula.pharmacies.util.Utils . getDate ( d ) ) + " xovhwyaunqoolyqbmtfe" ) ) ; }

line_index: 1033
bug_before_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (info)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (info)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> Fix Perf Problem
bug_after_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (rxxjfwxluxpycizrwbbr)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (rxxjfwxluxpycizrwbbr)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> Fix Perf Problem
fix_before_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizerwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxmathizrwbbr () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }

line_index: 1043
bug_before_refactoring: public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> Fixed bug when N = 1 in Percolation + added some documentation
bug_after_refactoring: public boolean azcfetgwpazajkdethiw ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> public boolean azcfetgwpazajkdethiw ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> Fixed bug when N = 1 in Percolation + added some documentation
fix_before_refactoring: public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( i , j ) , sink ) ; } return false ; }
fix_after_refactoring: public boolean azcfetgwpazajkdethiw ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( i , j ) , sink ) ; } return false ; }
√ fix_prediction_before: public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( i , j ) , sink ) ; } return false ; }
× fix_prediction_after: public boolean azcfetgwpazajkdethiw ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( i , j , sink ) , sink ) ; } return false ; }

line_index: 1062
bug_before_refactoring: public void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> public void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> Previous bugs resolved. User input is buggy after finding a match.
bug_after_refactoring: public void ebhqlexobkrkrfjysbaz () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> public void ebhqlexobkrkrfjysbaz () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> Previous bugs resolved. User input is buggy after finding a match.
fix_before_refactoring: protected void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; }
fix_after_refactoring: protected void ebhqlexobkrkrfjysbaz () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; }
√ fix_prediction_before: protected void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; }
× fix_prediction_after: public void ebhqlexobkrkrfjysbaz () { if ( ! ( userInputString () . isEmpty () ) ) { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } }

line_index: 1064
bug_before_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> BUG-6616: BGP synchronization can happen after the session was closed  Fix by handle message only when session is up. -Handle exception in synchronation mode. -Sort close of the session  removal of the peer and send close reason message.  Change-Id: I21328f9a63d5360603f219cd3699b08874da318b Signed-off-by: Claudio D. Gasparini <cgaspari@cisco.com>
bug_after_refactoring: @ java.lang.Override protected final void jsvijbdljunymvoffgcc ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> @ java.lang.Override protected final void jsvijbdljunymvoffgcc ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> BUG-6616: BGP synchronization can happen after the session was closed  Fix by handle message only when session is up. -Handle exception in synchronation mode. -Sort close of the session  removal of the peer and send close reason message.  Change-Id: I21328f9a63d5360603f219cd3699b08874da318b Signed-off-by: Claudio D. Gasparini <cgaspari@cisco.com>
fix_before_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; this . handleMessage ( msg ) ; }
fix_after_refactoring: @ java.lang.Override protected final void jsvijbdljunymvoffgcc ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; this . handleMessage ( msg ) ; }
√ fix_prediction_before: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; this . handleMessage ( msg ) ; }
× fix_prediction_after: @ java.lang.Override protected final void jsvijbdljunymvoff compile ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; this . handleMessage ( msg ) ; }

line_index: 1066
bug_before_refactoring: public static void main ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> public static void main ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> fixed bug in diagonal mask generation
bug_after_refactoring: public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> fixed bug in diagonal mask generation
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void xntafvalzgcgrmwqdlnl ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 20 ) ) ; }

line_index: 1077
bug_before_refactoring: private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
bug_after_refactoring: private static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> private static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
fix_before_refactoring: public static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
fix_after_refactoring: public static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
√ fix_prediction_before: public static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
× fix_prediction_after: private static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.Throwable cause , java.lang.String message ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }

line_index: 1092
bug_before_refactoring: public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> Fix void portal entity not updating the token correctly  and remove debug stack dump
bug_after_refactoring: public void kpazuucfqsvkssdxqndq ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> public void kpazuucfqsvkssdxqndq ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> Fix void portal entity not updating the token correctly  and remove debug stack dump
fix_before_refactoring: public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS ) ; }
fix_after_refactoring: public void kpazuucfqsvkssdxqndq ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS ) ; }
√ fix_prediction_before: public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS ) ; }
× fix_prediction_after: public void kpazuucfqsvkssdxqndq ( net.minecraft.item.ItemStack tokenIS ) { if ( tokenIS != null ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } }

line_index: 1098
bug_before_refactoring: public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
bug_after_refactoring: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void xkzpshaprhzncmjygbsh ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
fix_before_refactoring: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
fix_after_refactoring: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
√ fix_prediction_before: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
× fix_prediction_after: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { if ( load ) {} }

line_index: 1099
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S lyputbeedspziuxhzxxg ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S lyputbeedspziuxhzxxg ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E lyputbeedspziuxhzxxg ( E entity ) { return saveAndFlush ( entity ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public java.lang.String saveAndFlush ( E entity ) { return saveAndFlush ( entity ) ; }

line_index: 1105
bug_before_refactoring: private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
fix_after_refactoring: private static void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
√ fix_prediction_before: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
× fix_prediction_after: private static native void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ;

line_index: 1124
bug_before_refactoring: public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> Fix https://github.com/ballerinalang/ballerina/issues/3368
bug_after_refactoring: public int vwglzkeazrcgcuzskvxj ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> public int vwglzkeazrcgcuzskvxj ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> Fix https://github.com/ballerinalang/ballerina/issues/3368
fix_before_refactoring: public void addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; }
fix_after_refactoring: public void vwglzkeazrcgcuzskvxj ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; }
√ fix_prediction_before: public void addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; }
× fix_prediction_after: public int indexOf ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { return forkjoinInfoList . indexOf ( forkjoinInfo ) ; }

line_index: 1126
bug_before_refactoring: public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> Possible fix for errors on shutdown
bug_after_refactoring: public abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> public abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> Possible fix for errors on shutdown
fix_before_refactoring: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
fix_after_refactoring: protected abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
√ fix_prediction_before: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
× fix_prediction_after: public abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;

line_index: 1140
bug_before_refactoring: private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> private static native long _imaqFitCircle2 ( long points , int numPoints , long options ) ; <s> Fixing bugs
bug_after_refactoring: private static native long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) ; <s> private static native long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
fix_after_refactoring: private static long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) { return 0 ; }
√ fix_prediction_before: private static long _imaqFitCircle2 ( long points , int numPoints , long options ) { return 0 ; }
× fix_prediction_after: private static native long lxxllncpcwcfxkdtekbb ( long points , int numPoints , long options ) ;

line_index: 1166
bug_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> fix null bug in okhttp request
bug_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { mHeaders = shuwjysdutzejbqkgmrw ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { mHeaders = shuwjysdutzejbqkgmrw ; return this ; } <s> fix null bug in okhttp request
fix_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
fix_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { if ( shuwjysdutzejbqkgmrw != null ) { mHeaders = shuwjysdutzejbqkgmrw ; } return this ; }
√ fix_prediction_before: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
× fix_prediction_after: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { if ( ( mHeaders ) == null ) { mHeaders = shuwjysdutzejbqkgmrw ; } return this ; }

line_index: 1167
bug_before_refactoring: private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> Fixing bugs
bug_after_refactoring: private static native void tyswauvvittdqgjzllcr ( int id , long name , long value ) ; <s> private static native void tyswauvvittdqgjzllcr ( int id , long name , long value ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
fix_after_refactoring: private static void tyswauvvittdqgjzllcr ( int id , long name , long value ) {}
√ fix_prediction_before: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
× fix_prediction_after: private static native void tyswauzzittdqgjzllcr ( int id , long name , long value ) ;

line_index: 1179
bug_before_refactoring: public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_after: private void setProgressmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }

line_index: 1187
bug_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> fixed a bug loook at the commit under this one
bug_after_refactoring: public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> fixed a bug loook at the commit under this one
fix_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
fix_after_refactoring: public void eclwtkugwkmhyvnnybhy ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
√ fix_prediction_before: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
× fix_prediction_after: public void eclwtkugwkmhyvnnybhy () { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; }

line_index: 1197
bug_before_refactoring: @ java.lang.Override public void afterPropertiesSet ( ) throws java.lang.Exception { setSegmentStatus () ; modifyCodeUsage () ; } <s> @ java.lang.Override public void afterPropertiesSet ( ) throws java.lang.Exception { setSegmentStatus () ; modifyCodeUsage () ; } <s> fix errors details
bug_after_refactoring: @ java.lang.Override public void otqlbbaqdlafmzrakgkg ( ) throws java.lang.Exception { setSegmentStatus () ; modifyCodeUsage () ; } <s> @ java.lang.Override public void otqlbbaqdlafmzrakgkg ( ) throws java.lang.Exception { setSegmentStatus () ; modifyCodeUsage () ; } <s> fix errors details
fix_before_refactoring: @ java.lang.Override public void afterPropertiesSet ( ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void otqlbbaqdlafmzrakgkg ( ) throws java.lang.Exception {}
√ fix_prediction_before: @ java.lang.Override public void afterPropertiesSet ( ) throws java.lang.Exception {}
× fix_prediction_after: @ java.lang.Override public void otqlbbaqdlafmzrakgkgkgkg ( ) throws java.lang.Exception { setSegmentStatus () ; modifyCodeUsage () ; }

line_index: 1212
bug_before_refactoring: protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
fix_after_refactoring: private native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ;
√ fix_prediction_before: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
× fix_prediction_after: public native void tymiimpipfznrwihwgwn ( long nativeQueryPtr , long [] columnIndex , float value ) ;

line_index: 1215
bug_before_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> Fix issue #47: add reset or rebuild to PropertyTable
bug_after_refactoring: @ java.lang.Override public void buxtmvfjnopsszlzqkfi ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> @ java.lang.Override public void buxtmvfjnopsszlzqkfi ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> Fix issue #47: add reset or rebuild to PropertyTable
fix_before_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( hasBeenBuilt ) ) { widget . build () ; hasBeenBuilt = true ; } }
fix_after_refactoring: @ java.lang.Override public void buxtmvfjnopsszlzqkfi ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( hasBeenBuilt ) ) { widget . build () ; hasBeenBuilt = true ; } }
√ fix_prediction_before: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( hasBeenBuilt ) ) { widget . build () ; hasBeenBuilt = true ; } }
× fix_prediction_after: @ java.lang.Override public void buxtmvfjnopsszlzqkfi ( final org.eclipse.swt.widgets.Event event ) { this . hasBeenBuilt = true ; }

line_index: 1216
bug_before_refactoring: public void removePepe () { updatePepes ( false ) ; ( pepes ) -- ; } <s> public void removePepe () { updatePepes ( false ) ; ( pepes ) -- ; } <s> Added setting for data page. Misc error fixes. First commit from new machine  fingers crossed.
bug_after_refactoring: public void ixsplpewejcjexqusuiu () { updatePepes ( false ) ; ( pepes ) -- ; } <s> public void ixsplpewejcjexqusuiu () { updatePepes ( false ) ; ( pepes ) -- ; } <s> Added setting for data page. Misc error fixes. First commit from new machine  fingers crossed.
fix_before_refactoring: public void removePepe ( android.view.View view ) { updatePepes ( false ) ; ( pepes ) -- ; }
fix_after_refactoring: public void ixsplpewejcjexqusuiu ( android.view.View view ) { updatePepes ( false ) ; ( pepes ) -- ; }
√ fix_prediction_before: public void removePepe ( android.view.View view ) { updatePepes ( false ) ; ( pepes ) -- ; }
× fix_prediction_after: public void ixsplpewejcjexqusuiu () { updatePepes ( false ) ; }

line_index: 1219
bug_before_refactoring: public void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> public void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> minor improvements/bug fixes
bug_after_refactoring: public void myxfcgskaxvdvkrbyzxf ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> public void myxfcgskaxvdvkrbyzxf ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> minor improvements/bug fixes
fix_before_refactoring: private void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; }
fix_after_refactoring: private void myxfcgskaxvdvkrbyzxf ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; }
√ fix_prediction_before: private void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; }
× fix_prediction_after: public void myxfcgskaxvdvkrbyzxf ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; }

line_index: 1222
bug_before_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( false ) ; } <s> public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( false ) ; } <s> fix(test-bed): don't log debug output for functional test
bug_after_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( false ) ; } <s> public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( false ) ; } <s> fix(test-bed): don't log debug output for functional test
fix_before_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( true ) ; }
fix_after_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( true ) ; }
√ fix_prediction_before: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( true ) ; }
× fix_prediction_after: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist ( ) throws java.lang.Exception { return ighrwviwayemkssjdist ( false ) ; }

line_index: 1230
bug_before_refactoring: private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
bug_after_refactoring: private void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> private void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
fix_before_refactoring: protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
fix_after_refactoring: protected void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
√ fix_prediction_before: protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
× fix_prediction_after: private void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }

line_index: 1231
bug_before_refactoring: @ java.lang.Override public void dispose () { this . view . dispose () ; } <s> @ java.lang.Override public void dispose () { this . view . dispose () ; } <s> Fixed compile issue.
bug_after_refactoring: @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () { this . view . ilpbkfrmzrugxsmvqpdt () ; } <s> @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () { this . view . ilpbkfrmzrugxsmvqpdt () ; } <s> Fixed compile issue.
fix_before_refactoring: @ java.lang.Override public void dispose () {}
fix_after_refactoring: @ java.lang.Override public void ilpbkfrmzrugxsmvqpdt () {}
√ fix_prediction_before: @ java.lang.Override public void dispose () {}
× fix_prediction_after: @ java.lang.Override public boolean ilpbkfrmzrugxsmvqpdt () { return this . view . ilpbkfrmzrugxsmvqpdt () ; }

line_index: 1260
bug_before_refactoring: public void clearRegisteredAuthenticationListener () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "clearRegisteredAuthenticationListener" ) ; mAuthListener = null ; } <s> public void clearRegisteredAuthenticationListener () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "clearRegisteredAuthenticationListener" ) ; mAuthListener = null ; } <s> This issue of logging in via email forces two login(s) is an FirebaseUI library bug I cannot fix (its emulator only though)
bug_after_refactoring: public void pmesykyvowsixsaoyutl () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "pmesykyvowsixsaoyutl" ) ; mAuthListener = null ; } <s> public void pmesykyvowsixsaoyutl () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "pmesykyvowsixsaoyutl" ) ; mAuthListener = null ; } <s> This issue of logging in via email forces two login(s) is an FirebaseUI library bug I cannot fix (its emulator only though)
fix_before_refactoring: public void clearRegisteredAuthenticationListener () { mAuthListener = null ; }
fix_after_refactoring: public void pmesykyvowsixsaoyutl () { mAuthListener = null ; }
√ fix_prediction_before: public void clearRegisteredAuthenticationListener () { mAuthListener = null ; }
× fix_prediction_after: public void pmesykyvowsixsaoyutl () { android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , "pmesykyvowsixsaoyutl" , mAuthListener ) ; }

line_index: 1274
bug_before_refactoring: public boolean prepareSelectedFiles () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; } <s> public boolean prepareSelectedFiles () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; } <s> Fixed bugs
bug_after_refactoring: public boolean jwlzyuhrcllvbtktxsua () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; } <s> public boolean jwlzyuhrcllvbtktxsua () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; } <s> Fixed bugs
fix_before_refactoring: private boolean prepareSelectedFiles () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; }
fix_after_refactoring: private boolean jwlzyuhrcllvbtktxsua () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; }
√ fix_prediction_before: private boolean prepareSelectedFiles () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; }
× fix_prediction_after: public boolean jwlzyuhrcllvbtktxsua () { if ( prepareFiles () ) { preparedFiles . addAll ( selectedFiles . values () ) ; return true ; } return false ; }

line_index: 1291
bug_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
bug_after_refactoring: private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
fix_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) {}
√ fix_prediction_before: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
× fix_prediction_after: private void swjmwzwkmgvasvqsyrhh () {}

line_index: 1293
bug_before_refactoring: private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
fix_after_refactoring: private static void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
√ fix_prediction_before: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
× fix_prediction_after: private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ;

line_index: 1301
bug_before_refactoring: @ java.lang.Override public void close () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } <s> @ java.lang.Override public void close () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } <s> Fix a bug - calling disconnect() on null object
bug_after_refactoring: @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; } <s> @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; } <s> Fix a bug - calling disconnect() on null object
fix_before_refactoring: @ java.lang.Override public void close () { if ( ( connection ) != null ) { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } }
fix_after_refactoring: @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { if ( ( connection ) != null ) { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; } }
√ fix_prediction_before: @ java.lang.Override public void close () { if ( ( connection ) != null ) { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } }
× fix_prediction_after: @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; }

line_index: 1302
bug_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
bug_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
fix_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
fix_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
√ fix_prediction_before: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
× fix_prediction_after: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; }

line_index: 1304
bug_before_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> Merge pull request #1 from csk8975/parser_bugfix  fix bug of parsing first part and third part
bug_after_refactoring: public java.util.List < com.detection.model.pdfparse.Result > hqzehgwxkvlnjqojaavi ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> public java.util.List < com.detection.model.pdfparse.Result > hqzehgwxkvlnjqojaavi ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> Merge pull request #1 from csk8975/parser_bugfix  fix bug of parsing first part and third part
fix_before_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph ) ;
fix_after_refactoring: public java.util.List < com.detection.model.pdfparse.Result > hqzehgwxkvlnjqojaavi ( java.lang.String paragraph ) ;
√ fix_prediction_before: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph ) ;
× fix_prediction_after: public java.util.List < com.detection.model.pdfparse.Result > hqzehgwxkvlnjqojaavi ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult result ) ;

line_index: 1315
bug_before_refactoring: private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
bug_after_refactoring: private static native void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) ; <s> private static native void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
fix_after_refactoring: private static void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) {}
√ fix_prediction_before: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
× fix_prediction_after: private static native void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) ;

line_index: 1328
bug_before_refactoring: private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ; <s> private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
fix_after_refactoring: private static void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) {}
√ fix_prediction_before: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
× fix_prediction_after: private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ;

line_index: 1358
bug_before_refactoring: public static java.lang.Object isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> public static java.lang.Object isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> Minor fix of problem description
bug_after_refactoring: public static java.lang.Object acveuvnxvqsfrkxsfpgb ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> public static java.lang.Object acveuvnxvqsfrkxsfpgb ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> Minor fix of problem description
fix_before_refactoring: public static boolean isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return false ; }
fix_after_refactoring: public static boolean acveuvnxvqsfrkxsfpgb ( java.lang.String word1 , java.lang.String word2 ) { return false ; }
√ fix_prediction_before: public static boolean isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return false ; }
× fix_prediction_after: public static java.lang.Object acveuvnxvqsfrkxsfpgb ( java.lang.String word1 , java.lang.String word2 ) { return new java.lang.Object () ; }

line_index: 1361
bug_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> fix bug: remove unnecessary id
bug_after_refactoring: public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise zehyebcqwpvgoitphffs ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise zehyebcqwpvgoitphffs ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> fix bug: remove unnecessary id
fix_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
fix_after_refactoring: public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise zehyebcqwpvgoitphffs ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
√ fix_prediction_before: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
× fix_prediction_after: public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String key , int value ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }

line_index: 1381
bug_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> bug fix  does not display the map activity on new users
bug_after_refactoring: public void vtjgilakkqkpyqwxljng ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> public void vtjgilakkqkpyqwxljng ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> bug fix  does not display the map activity on new users
fix_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
fix_after_refactoring: public void vtjgilakkqkpyqwxljng ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
√ fix_prediction_before: public void done ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
× fix_prediction_after: public void setTjgilakkqkpyqwxljng ( com.parse.ParseException e ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; }

line_index: 1387
bug_before_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . onAuthCreated ( info ) ; authLatch . countDown () ; } <s> @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . onAuthCreated ( info ) ; authLatch . countDown () ; } <s> Merge pull request #234 from doncung/FixAuthIssues  Fix issue where auth is being called multiple times in sample and fix…
bug_after_refactoring: @ java.lang.Override public void ukbuztfkapkfycuadjol ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . ukbuztfkapkfycuadjol ( info ) ; authLatch . countDown () ; } <s> @ java.lang.Override public void ukbuztfkapkfycuadjol ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . ukbuztfkapkfycuadjol ( info ) ; authLatch . countDown () ; } <s> Merge pull request #234 from doncung/FixAuthIssues  Fix issue where auth is being called multiple times in sample and fix…
fix_before_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { authLatch . countDown () ; }
fix_after_refactoring: @ java.lang.Override public void ukbuztfkapkfycuadjol ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { authLatch . countDown () ; }
√ fix_prediction_before: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { authLatch . countDown () ; }
× fix_prediction_after: @ java.lang.Override public void ukbuztfkapkfycuadjol ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) {BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; authLatch . countDown () ; }

line_index: 1397
bug_before_refactoring: private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> fix bug
bug_after_refactoring: private cn.momia.api.user.dto.UserChildDto bybluwqhuvlkolfqkxko ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> private cn.momia.api.user.dto.UserChildDto bybluwqhuvlkolfqkxko ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> fix bug
fix_before_refactoring: protected cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; }
fix_after_refactoring: protected cn.momia.api.user.dto.UserChildDto bybluwqhuvlkolfqkxko ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; }
√ fix_prediction_before: protected cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; }
× fix_prediction_after: public cn.momia.api.user.dto.UserChildDto bybluwqhuvlkolfqkxko ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; }

line_index: 1419
bug_before_refactoring: private boolean getIOFlag () { return IOFlag ; } <s> private boolean getIOFlag () { return IOFlag ; } <s> Update Job.java  fixed logic error
bug_after_refactoring: private boolean cvthdikjphipyjdagrxy () { return IOFlag ; } <s> private boolean cvthdikjphipyjdagrxy () { return IOFlag ; } <s> Update Job.java  fixed logic error
fix_before_refactoring: public boolean getIOFlag () { return IOFlag ; }
fix_after_refactoring: public boolean cvthdikjphipyjdagrxy () { return IOFlag ; }
√ fix_prediction_before: public boolean getIOFlag () { return IOFlag ; }
× fix_prediction_after: private boolean cvthdikjphPyj dagrxy () { return IOFlag . get () ; }

line_index: 1435
bug_before_refactoring: < X extends java.lang.Throwable > void accept ( T t ) throws X ; <s> < X extends java.lang.Throwable > void accept ( T t ) throws X ; <s> fixup! Improve error handling
bug_after_refactoring: < X extends java.lang.Throwable > void ngyquloujifoaxqfwpvx ( T t ) throws X ; <s> < X extends java.lang.Throwable > void ngyquloujifoaxqfwpvx ( T t ) throws X ; <s> fixup! Improve error handling
fix_before_refactoring: void accept ( T t ) throws java.lang.Exception ;
fix_after_refactoring: void ngyquloujifoaxqfwpvx ( T t ) throws java.lang.Exception ;
√ fix_prediction_before: void accept ( T t ) throws java.lang.Exception ;
× fix_prediction_after: void ngyquloujBitmapaxqfwpvx ( T t ) throws X ;

line_index: 1441
bug_before_refactoring: public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
bug_after_refactoring: public void tyvzjyjanlaryjmlkjur ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void tyvzjyjanlaryjmlkjur ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
fix_before_refactoring: public void setST ( main.java.DisplayST st ) { this . st = st ; }
fix_after_refactoring: public void tyvzjyjanlaryjmlkjur ( main.java.DisplayST st ) { this . st = st ; }
√ fix_prediction_before: public void setST ( main.java.DisplayST st ) { this . st = st ; }
× fix_prediction_after: public void tyvzjyjanlaryjmlkjjur ( main.java.DisplayST st ) { this . st = st ; }

line_index: 1448
bug_before_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
bug_after_refactoring: public io.kuzzle.sdk.core.KuzzleDocument pcihtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . pcihtvjledqpofawzcyn ( options , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument pcihtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . pcihtvjledqpofawzcyn ( options , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
fix_before_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
fix_after_refactoring: public void pcihtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . pcihtvjledqpofawzcyn ( options , null ) ; }
√ fix_prediction_before: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
× fix_prediction_after: public io.kuzzle.sdk.core.KuzzleDocument bluetoothhtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . bluetoothhtvjledqpofawzcyn ( options , null , null ) ; }

line_index: 1450
bug_before_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
bug_after_refactoring: @ java.lang.Override public io.makerplayground.device.Processor oxczldtilynhskryyyme ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor oxczldtilynhskryyyme ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
× fix_prediction_after: @ java.lang.Override public io.makerplayground.device.Processor oxczldtilynhskryyyme ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) { return null ; }

line_index: 1453
bug_before_refactoring: @ java.lang.Override public void close () { port . close () ; port = null ; } <s> @ java.lang.Override public void close () { port . close () ; port = null ; } <s> Fixed some port handling issues. Using the serial device should now be much more robust.
bug_after_refactoring: @ java.lang.Override public void iroauuvskijmfzebenmv () { port . iroauuvskijmfzebenmv () ; port = null ; } <s> @ java.lang.Override public void iroauuvskijmfzebenmv () { port . iroauuvskijmfzebenmv () ; port = null ; } <s> Fixed some port handling issues. Using the serial device should now be much more robust.
fix_before_refactoring: @ java.lang.Override public void close () { if ( ( port ) != null ) { port . close () ; port = null ; } }
fix_after_refactoring: @ java.lang.Override public void iroauuvskijmfzebenmv () { if ( ( port ) != null ) { port . iroauuvskijmfzebenmv () ; port = null ; } }
√ fix_prediction_before: @ java.lang.Override public void close () { if ( ( port ) != null ) { port . close () ; port = null ; } }
× fix_prediction_after: @ java.lang.Override public void iroauuvskijmfzebenmv () { synchronized ( this ) { port . iroauuvskijmfzebenmv () ; port = null ; } }

line_index: 1464
bug_before_refactoring: @ java.lang.Override public void init ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> @ java.lang.Override public void init ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> Fixed oob exception and buggy handling. added key listener methods instead on handle this shit in update method
bug_after_refactoring: @ java.lang.Override public void ymgjoglegbsjcthqkjgs ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> @ java.lang.Override public void ymgjoglegbsjcthqkjgs ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> Fixed oob exception and buggy handling. added key listener methods instead on handle this shit in update method
fix_before_refactoring: { this . game = game ; }
fix_after_refactoring: { this . game = game ; }
√ fix_prediction_before: { this . game = game ; }
× fix_prediction_after: @ java.lang.Override public void ymgjoglegbsjcthqkjgs ( gamestates.GameContainer container ) throws gamestates.SlickException {}

line_index: 1468
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( table ) + ( suneido.util.Util . nil ( idx ) ? "" : "^" + ( suneido.util.Util . listToParens ( idx ) ) ) ; } <s> @ java.lang.Override public java.lang.String toString () { return ( table ) + ( suneido.util.Util . nil ( idx ) ? "" : "^" + ( suneido.util.Util . listToParens ( idx ) ) ) ; } <s> fix query optimization bugs
bug_after_refactoring: @ java.lang.Override public java.lang.String unkinbbxvztmmrlkdqip () { return ( table ) + ( suneido.util.Util . nil ( idx ) ? "" : "^" + ( suneido.util.Util . listToParens ( idx ) ) ) ; } <s> @ java.lang.Override public java.lang.String unkinbbxvztmmrlkdqip () { return ( table ) + ( suneido.util.Util . nil ( idx ) ? "" : "^" + ( suneido.util.Util . listToParens ( idx ) ) ) ; } <s> fix query optimization bugs
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( table ) + ( nil ( idx ) ? "" : "^" + ( listToParens ( idx ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String unkinbbxvztmmrlkdqip () { return ( table ) + ( nil ( idx ) ? "" : "^" + ( listToParens ( idx ) ) ) ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return ( table ) + ( nil ( idx ) ? "" : "^" + ( listToParens ( idx ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String unkinbbxvztmmrlkdqip () { return ( table ) + ( nil ( idx ) ? "" : "^" + listToParens ( idx ) ) ; }

line_index: 1479
bug_before_refactoring: private synchronized void addInsert ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> private synchronized void addInsert ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> fixed minor problems that could cause crash
bug_after_refactoring: private synchronized void bwmaqcgjqbirreehuanr ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> private synchronized void bwmaqcgjqbirreehuanr ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> fixed minor problems that could cause crash
fix_before_refactoring: private synchronized void addInsert ( android.content.ContentValues insert ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }
fix_after_refactoring: private synchronized void bwmaqcgjqbirreehuanr ( android.content.ContentValues insert ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }
√ fix_prediction_before: private synchronized void addInsert ( android.content.ContentValues insert ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }
× fix_prediction_after: private synchronized void bwmaqcgjqbirreehuanr ( android.content.ContentValues insert ) { if ( insert != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }

line_index: 1485
bug_before_refactoring: public void turnOnAppendTime ( boolean append ) { this . appendTimeStamp = append ; } <s> public void turnOnAppendTime ( boolean append ) { this . appendTimeStamp = append ; } <s> Fixes "errors" in ErrorMessages.
bug_after_refactoring: public void uvyqixlsklowdwjqdwah ( boolean append ) { this . appendTimeStamp = append ; } <s> public void uvyqixlsklowdwjqdwah ( boolean append ) { this . appendTimeStamp = append ; } <s> Fixes "errors" in ErrorMessages.
fix_before_refactoring: public void turnOnAppendTime ( boolean append ) { appendTimeStamp = append ; }
fix_after_refactoring: public void uvyqixlsklowdwjqdwah ( boolean append ) { appendTimeStamp = append ; }
√ fix_prediction_before: public void turnOnAppendTime ( boolean append ) { appendTimeStamp = append ; }
× fix_prediction_after: public void uvyqsklowdwjqdwah ( boolean append ) { this . appendTimeStamp = append ; }

line_index: 1500
bug_before_refactoring: private java.lang.String getEmail () { return email ; } <s> private java.lang.String getEmail () { return email ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private java.lang.String dgokvbxdbdeoknycyqlj () { return email ; } <s> private java.lang.String dgokvbxdbdeoknycyqlj () { return email ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public java.lang.String getEmail () { return email ; }
fix_after_refactoring: public java.lang.String dgokvbxdbdeoknycyqlj () { return email ; }
√ fix_prediction_before: public java.lang.String getEmail () { return email ; }
× fix_prediction_after: private java.lang.String dkokvbxdbdeoknycyqlj () { return this . email ; }

line_index: 1501
bug_before_refactoring: protected void paintComponent ( java.awt.Graphics g ) {} <s> protected void paintComponent ( java.awt.Graphics g ) {} <s> Fixed refresh problem
bug_after_refactoring: protected void gzeukdflyodxiwxzrleg ( java.awt.Graphics g ) {} <s> protected void gzeukdflyodxiwxzrleg ( java.awt.Graphics g ) {} <s> Fixed refresh problem
fix_before_refactoring: protected void paintComponent ( java.awt.Graphics g ) { super . paintComponent ( g ) ; }
fix_after_refactoring: protected void gzeukdflyodxiwxzrleg ( java.awt.Graphics g ) { super . gzeukdflyodxiwxzrleg ( g ) ; }
√ fix_prediction_before: protected void paintComponent ( java.awt.Graphics g ) { super . paintComponent ( g ) ; }
× fix_prediction_after: public void gzeukdflyodxiwxzrleg ( java.awt.Graphics g ) {}

line_index: 1508
bug_before_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
bug_after_refactoring: @ com.google.common.eventbus.Subscribe private void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
fix_before_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
fix_after_refactoring: @ com.google.common.eventbus.Subscribe public void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
√ fix_prediction_before: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
× fix_prediction_after: @ com.google.common.eventbus.Subscribe public void wstkupkbcbpbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }

line_index: 1513
bug_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
bug_after_refactoring: public void mhbvngqscptnqsrsairm ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void mhbvngqscptnqsrsairm ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
fix_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
fix_after_refactoring: public void mhbvngqscptnqsrsairm ( java.awt.event.WindowEvent windowEvent ) {}
√ fix_prediction_before: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
× fix_prediction_after: public void mhbvngqscptnqsrsairm () { new GUI.spellingWindow.quitPopUp () ; }

line_index: 1515
bug_before_refactoring: private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
bug_after_refactoring: private static native void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
fix_after_refactoring: private static void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
√ fix_prediction_before: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
× fix_prediction_after: private static native void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) ;

line_index: 1535
bug_before_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
bug_after_refactoring: public org.techm.scheduler.domain.JobAction upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
fix_before_refactoring: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
fix_after_refactoring: public void upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; }
√ fix_prediction_before: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
× fix_prediction_after: public org.techm.scheduler.domain.JobAction upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; }

line_index: 1539
bug_before_refactoring: public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
bug_after_refactoring: public static void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> public static void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
fix_before_refactoring: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
fix_after_refactoring: public void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
√ fix_prediction_before: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
× fix_prediction_after: public static void nwxbcilxguzpmgektrco ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }

line_index: 1548
bug_before_refactoring: private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> private boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> Fixed bug in binary operation application
bug_after_refactoring: private boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> private boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
fix_after_refactoring: protected boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
√ fix_prediction_before: protected boolean objOp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }
× fix_prediction_after: public boolean durbuaauoyzceqjfbljp ( java.lang.Object obj1 , java.lang.Object obj2 ) { return ! ( obj1 . equals ( obj2 ) ) ; }

line_index: 1549
bug_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
bug_after_refactoring: public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
fix_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
fix_after_refactoring: public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
√ fix_prediction_before: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
× fix_prediction_after: public synchronized java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; }

line_index: 1555
bug_before_refactoring: public void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> public void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> Fixed bug where deconstructing stained clay gave wrong dye (for some reason the color meta data sequence is flipped for each)
bug_after_refactoring: public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> Fixed bug where deconstructing stained clay gave wrong dye (for some reason the color meta data sequence is flipped for each)
fix_before_refactoring: private void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
fix_after_refactoring: private void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
√ fix_prediction_before: private void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
× fix_prediction_after: public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }

line_index: 1564
bug_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
bug_after_refactoring: private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
fix_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
fix_after_refactoring: private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
√ fix_prediction_before: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
× fix_prediction_after: private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) {}

line_index: 1569
bug_before_refactoring: private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
fix_after_refactoring: private static void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
√ fix_prediction_before: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
× fix_prediction_after: private static native void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ;

line_index: 1578
bug_before_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> Fixed issue related to the wrong number of active connections.
bug_after_refactoring: void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> Fixed issue related to the wrong number of active connections.
fix_before_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }
fix_after_refactoring: void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }
√ fix_prediction_before: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }
× fix_prediction_after: void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }

line_index: 1586
bug_before_refactoring: private static native void _IMAQdxStartAcquisition ( int id ) ; <s> private static native void _IMAQdxStartAcquisition ( int id ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hfowjsesnpxeuhzubiyb ( int id ) ; <s> private static native void hfowjsesnpxeuhzubiyb ( int id ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxStartAcquisition ( int id ) {}
fix_after_refactoring: private static void hfowjsesnpxeuhzubiyb ( int id ) {}
√ fix_prediction_before: private static void _IMAQdxStartAcquisition ( int id ) {}
× fix_prediction_after: private static void hfowjsesnpxeuhzubiyb ( int id ) { native void hfowjsesnpxeuhzubiyb ( id ) ; }

line_index: 1592
bug_before_refactoring: public boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> public boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> Fixed screen issue for now. Started refactoring codebase
bug_after_refactoring: public boolean aqeahhcarzqxfxouwqhp () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> public boolean aqeahhcarzqxfxouwqhp () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> Fixed screen issue for now. Started refactoring codebase
fix_before_refactoring: private boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; }
fix_after_refactoring: private boolean aqeahhcarzqxfxouwqhp () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; }
√ fix_prediction_before: private boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; }
× fix_prediction_after: public boolean aqeahhcarzqxfxouwqhp () { return currentSettings . contains ( "1" ) ; }

line_index: 1595
bug_before_refactoring: public void onStart () { super . onStart () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> public void onStart () { super . onStart () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> fix timestamp error
bug_after_refactoring: public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> fix timestamp error
fix_before_refactoring: public void onStart () { super . onStart () ; }
fix_after_refactoring: public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; }
√ fix_prediction_before: public void onStart () { super . onStart () ; }
× fix_prediction_after: public void pevwydvzcniiyfyovzzu ( android.content.Context context ) { super . pevwydvzcniiyfyovzzu ( context ) ; }

line_index: 1604
bug_before_refactoring: public java.lang.String getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> public java.lang.String getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> Resolver problema Double.  Transacoes Default pelo primeiro caixa.
bug_after_refactoring: public java.lang.String huzaseugsmjjkvczaqgw () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> public java.lang.String huzaseugsmjjkvczaqgw () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> Resolver problema Double.  Transacoes Default pelo primeiro caixa.
fix_before_refactoring: public java.lang.Double getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return valorTotal ; }
fix_after_refactoring: public java.lang.Double huzaseugsmjjkvczaqgw () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return valorTotal ; }
√ fix_prediction_before: public java.lang.Double getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return valorTotal ; }
× fix_prediction_after: public java.lang.String huzaseugsmjjkvczaqgw () { return formatarDouble ( null ) ; }

line_index: 1614
bug_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
bug_after_refactoring: @ java.lang.Override public void fiuqpielcbqfchrwsfbe ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void fiuqpielcbqfchrwsfbe ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
fix_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
fix_after_refactoring: @ java.lang.Override public void fiuqpielcbqfchrwsfbe ( android.view.SurfaceHolder holder ) {}
√ fix_prediction_before: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
× fix_prediction_after: @ java.lang.Override public void fiuqpielcbqfchrwsfbe () { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } }

line_index: 1621
bug_before_refactoring: private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
bug_after_refactoring: private static native long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
fix_after_refactoring: private static long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
√ fix_prediction_before: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
× fix_prediction_after: private static native long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ;

line_index: 1645
bug_before_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics ) ; } <s> public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics ) ; } <s> #4 - Fixed tests and bug shown up by tests where watched topics were not being stored correctly
bug_after_refactoring: public void lvvlybzkzokyigegogcw ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . lvvlybzkzokyigegogcw ( watchedTopics ) ; } <s> public void lvvlybzkzokyigegogcw ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . lvvlybzkzokyigegogcw ( watchedTopics ) ; } <s> #4 - Fixed tests and bug shown up by tests where watched topics were not being stored correctly
fix_before_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics . values () ) ; }
fix_after_refactoring: public void lvvlybzkzokyigegogcw ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . lvvlybzkzokyigegogcw ( watchedTopics . values () ) ; }
√ fix_prediction_before: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics . values () ) ; }
× fix_prediction_after: public void lvvlybzkzokyigegogcw ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { this . watchedTopics = view . lvvlybzkzokyigegogcw ( watchedTopics ) ; }

line_index: 1652
bug_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
bug_after_refactoring: public void cuecriwnntkhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> public void cuecriwnntkhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
fix_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
fix_after_refactoring: public void cuecriwnntkhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
√ fix_prediction_before: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
× fix_prediction_after: public void cuecriwn jjhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }

line_index: 1671
bug_before_refactoring: public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; } <s> public void umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
fix_after_refactoring: public boolean umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { return this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; }
√ fix_prediction_before: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
× fix_prediction_after: public void umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { umntapnvaiuydjlnttuf ( index , key , newKey ) ; }

line_index: 1674
bug_before_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> fix click listeners issue; add OnItemViewsClickListener;
bug_after_refactoring: protected void dfbruntqijivjvetbmrc ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> protected void dfbruntqijivjvetbmrc ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> fix click listeners issue; add OnItemViewsClickListener;
fix_before_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , holder.itemView ) ; }
fix_after_refactoring: protected void dfbruntqijivjvetbmrc ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , holder.itemView ) ; }
√ fix_prediction_before: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , holder.itemView ) ; }
× fix_prediction_after: protected void dfbruntqijivjvetbmrc ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { if ( holder != null ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } }

line_index: 1689
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
bug_after_refactoring: @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { showKeyboard ( passcode ) ; }
fix_after_refactoring: @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { showKeyboard ( passcode ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { showKeyboard ( passcode ) ; }
× fix_prediction_after: @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getContext () . showKeyboard ( passcode ) ; }

line_index: 1691
bug_before_refactoring: private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> Turn on debugging. Create node descriptors for AssignmentOperator and PrimarySuffix.
bug_after_refactoring: private boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> private boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> Turn on debugging. Create node descriptors for AssignmentOperator and PrimarySuffix.
fix_before_refactoring: private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; return false ; }
fix_after_refactoring: private boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; return false ; }
√ fix_prediction_before: private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; return false ; }
× fix_prediction_after: protected boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; }

line_index: 1693
bug_before_refactoring: @ java.lang.Override public void noWhatsPopularData () { java.lang.System.out . println () ; } <s> @ java.lang.Override public void noWhatsPopularData () { java.lang.System.out . println () ; } <s> Fixed several bugs in StartActivity
bug_after_refactoring: @ java.lang.Override public void zltagvwjdmipbzznhqqt () { java.lang.System.out . println () ; } <s> @ java.lang.Override public void zltagvwjdmipbzznhqqt () { java.lang.System.out . println () ; } <s> Fixed several bugs in StartActivity
fix_before_refactoring: @ java.lang.Override public void noWhatsPopularData () {}
fix_after_refactoring: @ java.lang.Override public void zltagvwjdmipbzznhqqt () {}
√ fix_prediction_before: @ java.lang.Override public void noWhatsPopularData () {}
× fix_prediction_after: @ java.lang.Override public void zltagmsjdmipbzznhqqt () {}

line_index: 1695
bug_before_refactoring: public java.lang.String getName () { throw new java.lang.UnsupportedOperationException () ; } <s> public java.lang.String getName () { throw new java.lang.UnsupportedOperationException () ; } <s> Feat: build in class Actor released.  Fix: tests for class Actor debugged.
bug_after_refactoring: public java.lang.String rqhbcfwyblqxwigyvdgh () { throw new java.lang.UnsupportedOperationException () ; } <s> public java.lang.String rqhbcfwyblqxwigyvdgh () { throw new java.lang.UnsupportedOperationException () ; } <s> Feat: build in class Actor released.  Fix: tests for class Actor debugged.
fix_before_refactoring: public java.lang.String getName () { return name ; }
fix_after_refactoring: public java.lang.String rqhbcfwyblqxwigyvdgh () { return name ; }
√ fix_prediction_before: public java.lang.String getName () { return name ; }
× fix_prediction_after: public java.lang.String rqhbcfwyblqxwigyvdgh ( long id ) { throw new java.lang.UnsupportedOperationException () ; }

line_index: 1697
bug_before_refactoring: public java.lang.Float getAmount () { return java.lang.Float . parseFloat ( amount . getText () . toString () ) ; } <s> public java.lang.Float getAmount () { return java.lang.Float . parseFloat ( amount . getText () . toString () ) ; } <s> Fixed some errors/bugs in SpendingActivity
bug_after_refactoring: public java.lang.Float uuujgnpfnhaetjdndlku () { return java.lang.Float . parseFloat ( amount . getText () . toString () ) ; } <s> public java.lang.Float uuujgnpfnhaetjdndlku () { return java.lang.Float . parseFloat ( amount . getText () . toString () ) ; } <s> Fixed some errors/bugs in SpendingActivity
fix_before_refactoring: public java.lang.String getAmount () { return amount . getText () . toString () ; }
fix_after_refactoring: public java.lang.String uuujgnpfnhaetjdndlku () { return amount . getText () . toString () ; }
√ fix_prediction_before: public java.lang.String getAmount () { return amount . getText () . toString () ; }
× fix_prediction_after: public int uuujgnpfnhaetjdndlku () { return ( amount . getText () . length () ) == 0 ? 0 : java.lang.Integer . parseInt ( amount . getText () . toString () ) ; }

line_index: 1707
bug_before_refactoring: public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> Bugfix
bug_after_refactoring: public void cezwqzrzdufqctfslzgn ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> public void cezwqzrzdufqctfslzgn ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> Bugfix
fix_before_refactoring: protected void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
fix_after_refactoring: protected void cezwqzrzdufqctfslzgn ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
√ fix_prediction_before: protected void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
× fix_prediction_after: public void cezwqzrzdufqctfslzgn ( java.lang.String type ) { if ( ! ( this . types . contains ( type ) ) ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } }

line_index: 1710
bug_before_refactoring: @ org.junit.After public void tearDown ( ) throws java.lang.Exception { httpServer . stop () ; httpServer . destroy () ; } <s> @ org.junit.After public void tearDown ( ) throws java.lang.Exception { httpServer . stop () ; httpServer . destroy () ; } <s> trying to bug fixing jenkins
bug_after_refactoring: @ org.junit.After public void mbflomfvelfaiipvdgtw ( ) throws java.lang.Exception { httpServer . stop () ; httpServer . destroy () ; } <s> @ org.junit.After public void mbflomfvelfaiipvdgtw ( ) throws java.lang.Exception { httpServer . stop () ; httpServer . destroy () ; } <s> trying to bug fixing jenkins
fix_before_refactoring: @ org.junit.After public void tearDown ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.After public void mbflomfvelfaiipvdgtw ( ) throws java.lang.Exception {}
√ fix_prediction_before: @ org.junit.After public void tearDown ( ) throws java.lang.Exception {}
× fix_prediction_after: @ org.junit.After public void mbflomfvelfaiipvdgtw ( ) throws java.lang.Exception { if ( ( httpServer ) != null ) { httpServer . stop () ; httpServer . destroy () ; } }

line_index: 1711
bug_before_refactoring: @ java.lang.Override public void start () { new java.lang.Thread ( cli ) . start () ; } <s> @ java.lang.Override public void start () { new java.lang.Thread ( cli ) . start () ; } <s> Fixing cli thread problems and some code in the handler and tcpip server
bug_after_refactoring: @ java.lang.Override public void kzjidosugzdsytyvrrut () { new java.lang.Thread ( cli ) . kzjidosugzdsytyvrrut () ; } <s> @ java.lang.Override public void kzjidosugzdsytyvrrut () { new java.lang.Thread ( cli ) . kzjidosugzdsytyvrrut () ; } <s> Fixing cli thread problems and some code in the handler and tcpip server
fix_before_refactoring: @ java.lang.Override public void start () { cli . start () ; }
fix_after_refactoring: @ java.lang.Override public void kzjidosugzdsytyvrrut () { cli . kzjidosugzdsytyvrrut () ; }
√ fix_prediction_before: @ java.lang.Override public void start () { cli . start () ; }
× fix_prediction_after: @ java.lang.Override public void kzjidosugzdsytyvrrut () { new java.lang.Thread () . kzjidosugzdsytyvrrut () ; }

line_index: 1712
bug_before_refactoring: public boolean canResume () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> public boolean canResume () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> - fixed a launching bug that could delete existing configurations
bug_after_refactoring: public boolean xjzgsyaigvrnxwmsgnno () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> public boolean xjzgsyaigvrnxwmsgnno () { if ( isTerminated () ) return false ; return isSuspended () ; } <s> - fixed a launching bug that could delete existing configurations
fix_before_refactoring: public boolean canResume () { return false ; }
fix_after_refactoring: public boolean xjzgsyaigvrnxwmsgnno () { return false ; }
√ fix_prediction_before: public boolean canResume () { return false ; }
× fix_prediction_after: public boolean xjzgsyaigvrnxwmsgnno () { if ( ( isTerminated () ) || ( ( isSuspended () ) == null ) ) return false ; return false ; }

line_index: 1714
bug_before_refactoring: @ java.lang.Override protected void onDestroy () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . onDestroy () ; } <s> @ java.lang.Override protected void onDestroy () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . onDestroy () ; } <s> Add glide & Fix bitmap recycle issue  - Add glide library in dependencies - Fix recycled bitmap issue with glide
bug_after_refactoring: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . aocwvuczgvqgerjyonzm () ; } <s> @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . aocwvuczgvqgerjyonzm () ; } <s> Add glide & Fix bitmap recycle issue  - Add glide library in dependencies - Fix recycled bitmap issue with glide
fix_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { super . aocwvuczgvqgerjyonzm () ; }
√ fix_prediction_before: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
× fix_prediction_after: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; super . aocwvuczgvqgerjyonzm () ; }

line_index: 1721
bug_before_refactoring: public static void main ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> public static void main ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> create file view anda fix some error issues
bug_after_refactoring: public static void xgnzkikbzxdagmociwca ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> public static void xgnzkikbzxdagmociwca ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> create file view anda fix some error issues
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void xgnzkikbzxdagmociwca ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void xgnzkikbzxdagmociwca () { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; }

line_index: 1722
bug_before_refactoring: public void uploadTasks () { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . clear () ; observer . updateUploadTasks () ; } } <s> public void uploadTasks () { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . clear () ; observer . updateUploadTasks () ; } } <s> improved interface;  added the ability to search through the network; bug fix
bug_after_refactoring: public void igxkhjiwvdcqhuxwzslx () { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . clear () ; observer . updateUploadTasks () ; } } <s> public void igxkhjiwvdcqhuxwzslx () { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . clear () ; observer . updateUploadTasks () ; } } <s> improved interface;  added the ability to search through the network; bug fix
fix_before_refactoring: public void uploadTasks () { tasks . clear () ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateUploadTasks () ; } }
fix_after_refactoring: public void igxkhjiwvdcqhuxwzslx () { tasks . clear () ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateUploadTasks () ; } }
√ fix_prediction_before: public void uploadTasks () { tasks . clear () ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateUploadTasks () ; } }
× fix_prediction_after: public void igxkhjiwvdcqhuxwzslx () { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . clear () ; observer . updateUploadTasks () ; } }

line_index: 1726
bug_before_refactoring: public int size () {} <s> public int size () {} <s> Errors with double linked list on adding to head and removing from tail. TODO fix later.
bug_after_refactoring: public int trngejmswunfrcifykei () {} <s> public int trngejmswunfrcifykei () {} <s> Errors with double linked list on adding to head and removing from tail. TODO fix later.
fix_before_refactoring: public int size () { return size ; }
fix_after_refactoring: public int trngejmswunfrcifykei () { return trngejmswunfrcifykei ; }
√ fix_prediction_before: public int size () { return size ; }
× fix_prediction_after: public int trngejmswunfrcifykei () { return 0 ; }

line_index: 1727
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> Fix bugs for old android devices  bug on the position of the edition of a contributor and resize the copyright icon - Begin adding a left menu and a toolbar
bug_after_refactoring: @ java.lang.Override public void iahifktsxovcblkillbw ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> @ java.lang.Override public void iahifktsxovcblkillbw ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> Fix bugs for old android devices  bug on the position of the edition of a contributor and resize the copyright icon - Begin adding a left menu and a toolbar
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } }
fix_after_refactoring: @ java.lang.Override public void iahifktsxovcblkillbw ( android.view.View v ) { switch ( v . getId () ) { } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } }
× fix_prediction_after: @ java.lang.Override public void iahifktsxovcblkillbw ( android.view.View v ) {}

line_index: 1728
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
bug_after_refactoring: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) {}
√ fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) {}
× fix_prediction_after: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) { togglePostButtons ( position == 1 ) ; }

line_index: 1731
bug_before_refactoring: @ java.lang.Override public void doControl () { if ( checkForNewFootstepStatusPacket () ) { generateAndSendPathToBall () ; } else { us.ihmc.tools.thread.ThreadTools . sleep ( 10 ) ; } } <s> @ java.lang.Override public void doControl () { if ( checkForNewFootstepStatusPacket () ) { generateAndSendPathToBall () ; } else { us.ihmc.tools.thread.ThreadTools . sleep ( 10 ) ; } } <s> fixing transform bug. sphere detection is functional
bug_after_refactoring: @ java.lang.Override public void dkxknfacigckysywlane () { if ( checkForNewFootstepStatusPacket () ) { generateAndSendPathToBall () ; } else { us.ihmc.tools.thread.ThreadTools . sleep ( 10 ) ; } } <s> @ java.lang.Override public void dkxknfacigckysywlane () { if ( checkForNewFootstepStatusPacket () ) { generateAndSendPathToBall () ; } else { us.ihmc.tools.thread.ThreadTools . sleep ( 10 ) ; } } <s> fixing transform bug. sphere detection is functional
fix_before_refactoring: @ java.lang.Override public void doControl () { generateAndSendPathToBall () ; }
fix_after_refactoring: @ java.lang.Override public void dkxknfacigckysywlane () { generateAndSendPathToBall () ; }
√ fix_prediction_before: @ java.lang.Override public void doControl () { generateAndSendPathToBall () ; }
× fix_prediction_after: @ java.lang.Override public void dkxknfacigckysywlane () { if ( checkForNewFootstepStatusPacket () ) { generateAndSendPathToBall ( true ) ; } else { us.ihmc.tools.thread.ThreadTools . sleep ( 10 ) ; } }

line_index: 1735
bug_before_refactoring: protected java.lang.String getVolumeListJson () { return this . volumeListJson ; } <s> protected java.lang.String getVolumeListJson () { return this . volumeListJson ; } <s> Fixed a bug where inventory persistence wasn't held  Changed from protected to public members so storage works as intended
bug_after_refactoring: protected java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; } <s> protected java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; } <s> Fixed a bug where inventory persistence wasn't held  Changed from protected to public members so storage works as intended
fix_before_refactoring: public java.lang.String getVolumeListJson () { return this . volumeListJson ; }
fix_after_refactoring: public java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; }
√ fix_prediction_before: public java.lang.String getVolumeListJson () { return this . volumeListJson ; }
× fix_prediction_after: public java.lang.String khzzyzsulkggeckwwnnn () { return this . volumeListJson ; }

line_index: 1745
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S aacikibqdrcjnmcmjkpr ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S aacikibqdrcjnmcmjkpr ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E aacikibqdrcjnmcmjkpr ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E save ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }

line_index: 1748
bug_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
bug_after_refactoring: @ java.lang.Override public void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { if ( ! ( dohgetnlktueosrasauw instanceof org.jowidgets.cap.common.api.dohgetnlktueosrasauw.ServiceCanceledException ) ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; } } <s> @ java.lang.Override public void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { if ( ! ( dohgetnlktueosrasauw instanceof org.jowidgets.cap.common.api.dohgetnlktueosrasauw.ServiceCanceledException ) ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
fix_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { invocationCallback . exeption ( exception ) ; }
fix_after_refactoring: @ java.lang.Override public void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; }
√ fix_prediction_before: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { invocationCallback . exeption ( exception ) ; }
× fix_prediction_after: @ java.lang.Override public synchronized void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { if ( ! ( dohgetnlktueosrasauw instanceof org.jowidgets.cap.common.api.dohgetnlktueosrasauw.ServiceCanceledException ) ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; } }

line_index: 1750
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ java.lang.Override public G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
√ fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ java.lang.Override public G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }

line_index: 1758
bug_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> Wall Glitch Fixed  Glitching into the field has been fixed. Some major bugs still remain like the score which is messed up.
bug_after_refactoring: @ java.lang.Override public void halqakujvjjeqlrmarkw ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> @ java.lang.Override public void halqakujvjjeqlrmarkw ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> Wall Glitch Fixed  Glitching into the field has been fixed. Some major bugs still remain like the score which is messed up.
fix_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) {}
fix_after_refactoring: @ java.lang.Override public void halqakujvjjeqlrmarkw ( java.awt.event.KeyEvent e ) {}
√ fix_prediction_before: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) {}
× fix_prediction_after: @ java.lang.Override public void halqakujvjjeqlrmarkw ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } model.timeAmplifier = 1 ; }

line_index: 1759
bug_before_refactoring: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void testUpdate_shouldFailWhenObjectIsNull ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; try { invoiceDAO . update ( invoice ) ; } catch ( com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException e ) { fail ( "DAOException was thrown instead" ) ; } } <s> @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void testUpdate_shouldFailWhenObjectIsNull ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; try { invoiceDAO . update ( invoice ) ; } catch ( com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException e ) { fail ( "DAOException was thrown instead" ) ; } } <s> Fixed some issues according to the feedback
bug_after_refactoring: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void djthbsvlopftbutrwxea ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; try { invoiceDAO . update ( invoice ) ; } catch ( com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException e ) { fail ( "DAOException was thrown instead" ) ; } } <s> @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void djthbsvlopftbutrwxea ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; try { invoiceDAO . update ( invoice ) ; } catch ( com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException e ) { fail ( "DAOException was thrown instead" ) ; } } <s> Fixed some issues according to the feedback
fix_before_refactoring: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void testUpdate_shouldFailWhenObjectIsNull ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException , com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; invoiceDAO . update ( invoice ) ; }
fix_after_refactoring: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void djthbsvlopftbutrwxea ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException , com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; invoiceDAO . update ( invoice ) ; }
√ fix_prediction_before: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void testUpdate_shouldFailWhenObjectIsNull ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException , com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; invoiceDAO . update ( invoice ) ; }
× fix_prediction_after: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void djthbsvlopftbutrwxea ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; invoiceDAO . update ( invoice ) ; }

line_index: 1770
bug_before_refactoring: private void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> private void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> fix bugs
bug_after_refactoring: private void tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> private void tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> fix bugs
fix_before_refactoring: public void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } }
fix_after_refactoring: public void tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } }
√ fix_prediction_before: public void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } }
× fix_prediction_after: private boolean tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; return true ; } } return false ; }

line_index: 1771
bug_before_refactoring: @ java.lang.Override public int getCount () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . getCount () ) ) + " getCount" ) ) ; return mCS . getCount () ; } <s> @ java.lang.Override public int getCount () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . getCount () ) ) + " getCount" ) ) ; return mCS . getCount () ; } <s> Fixed bug with the back button behavior
bug_after_refactoring: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . mfhdcgrobephvsvlzkoi () ) ) + " mfhdcgrobephvsvlzkoi" ) ) ; return mCS . mfhdcgrobephvsvlzkoi () ; } <s> @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . mfhdcgrobephvsvlzkoi () ) ) + " mfhdcgrobephvsvlzkoi" ) ) ; return mCS . mfhdcgrobephvsvlzkoi () ; } <s> Fixed bug with the back button behavior
fix_before_refactoring: @ java.lang.Override public int getCount () { return mCS . getCount () ; }
fix_after_refactoring: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { return mCS . mfhdcgrobephvsvlzkoi () ; }
√ fix_prediction_before: @ java.lang.Override public int getCount () { return mCS . getCount () ; }
× fix_prediction_after: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () ) ) + " mfhdcgrobephvsvlzkoi" ) ) ; return mCS . mfhdcgrobephvsvlzkoi () ; }

line_index: 1777
bug_before_refactoring: public java.lang.String getUrl () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> public java.lang.String getUrl () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> Bug fixes
bug_after_refactoring: public java.lang.String apongfesugekougokqjd () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> public java.lang.String apongfesugekougokqjd () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> Bug fixes
fix_before_refactoring: public java.lang.String getUrl () { return url ; }
fix_after_refactoring: public java.lang.String apongfesugekougokqjd () { return url ; }
√ fix_prediction_before: public java.lang.String getUrl () { return url ; }
× fix_prediction_after: public java.lang.String apongfesugekougokqjd ( android.view.View view ) { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; }

line_index: 1778
bug_before_refactoring: public void internetProblems () { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; } <s> public void internetProblems () { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; } <s> fixed interproblems
bug_after_refactoring: public void vshahwoenzrylynetuab () { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; } <s> public void vshahwoenzrylynetuab () { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; } <s> fixed interproblems
fix_before_refactoring: public void internetProblems ( android.view.View view ) { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; }
fix_after_refactoring: public void vshahwoenzrylynetuab ( android.view.View view ) { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; }
√ fix_prediction_before: public void internetProblems ( android.view.View view ) { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; }
× fix_prediction_after: public void vshahwoenzrylynetuab () {}

line_index: 1784
bug_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
bug_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
fix_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
fix_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
√ fix_prediction_before: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
× fix_prediction_after: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg () { return new leanderk.izou.iftt.actions.ActionFlow ( conditionAction , targetAction ) ; }

line_index: 1787
bug_before_refactoring: public com.svnavigatoru600.domain.users.UserBuilder enabled ( boolean enabled ) { this . user . setEnabled ( enabled ) ; return this ; } <s> public com.svnavigatoru600.domain.users.UserBuilder enabled ( boolean enabled ) { this . user . setEnabled ( enabled ) ; return this ; } <s> bugfix: default value of SMTP port column did not work since smtpPort in User was int  not Integer
bug_after_refactoring: public com.svnavigatoru600.domain.users.UserBuilder lhgenapdhllqoxfhspnt ( boolean lhgenapdhllqoxfhspnt ) { this . user . setEnabled ( lhgenapdhllqoxfhspnt ) ; return this ; } <s> public com.svnavigatoru600.domain.users.UserBuilder lhgenapdhllqoxfhspnt ( boolean lhgenapdhllqoxfhspnt ) { this . user . setEnabled ( lhgenapdhllqoxfhspnt ) ; return this ; } <s> bugfix: default value of SMTP port column did not work since smtpPort in User was int  not Integer
fix_before_refactoring: public com.svnavigatoru600.domain.users.UserBuilder enabled ( final boolean enabled ) { user . setEnabled ( enabled ) ; return this ; }
fix_after_refactoring: public com.svnavigatoru600.domain.users.UserBuilder lhgenapdhllqoxfhspnt ( final boolean lhgenapdhllqoxfhspnt ) { user . setEnabled ( lhgenapdhllqoxfhspnt ) ; return this ; }
√ fix_prediction_before: public com.svnavigatoru600.domain.users.UserBuilder enabled ( final boolean enabled ) { user . setEnabled ( enabled ) ; return this ; }
× fix_prediction_after: public com.svnavigatoru600.domain.users.UserBuilder assertFalsegenapdhllqoxfhspnt () { this . user . setEnabled ( assertFalsegenapdhllqoxfhspnt ) ; return this ; }

line_index: 1789
bug_before_refactoring: private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
bug_after_refactoring: private static native long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
fix_after_refactoring: private static long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
√ fix_prediction_before: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
× fix_prediction_after: private static native long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) ;

line_index: 1797
bug_before_refactoring: public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> Fixed issue with supporting nullable timestamp columns
bug_after_refactoring: public static org.dbtools.android.domain.LocalDateTime oenyczyceaujapiklbzu ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> public static org.dbtools.android.domain.LocalDateTime oenyczyceaujapiklbzu ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> Fixed issue with supporting nullable timestamp columns
fix_before_refactoring: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( @ javax.annotation.Nullable java.lang.Long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; }
fix_after_refactoring: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime oenyczyceaujapiklbzu ( @ javax.annotation.Nullable java.lang.Long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; }
√ fix_prediction_before: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( @ javax.annotation.Nullable java.lang.Long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; }
× fix_prediction_after: public static org.dbtools.android.domain.LocalDateTime oenyczyceaujapiklbzu ( @ android.support.annotation.Nullable java.lang.Long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; }

line_index: 1806
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
× fix_prediction_after: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; }

line_index: 1810
bug_before_refactoring: public boolean isBluetoothEnabled () { return mBluetoothAdapter . isEnabled () ; } <s> public boolean isBluetoothEnabled () { return mBluetoothAdapter . isEnabled () ; } <s> Merge branch 'dev_bluetooth_fix' of https://github.com/vanniktech/DebugDrawer into vanniktech-dev_bluetooth_fix
bug_after_refactoring: public boolean nzxpyshclbaympqgfwnt () { return mBluetoothAdapter . isEnabled () ; } <s> public boolean nzxpyshclbaympqgfwnt () { return mBluetoothAdapter . isEnabled () ; } <s> Merge branch 'dev_bluetooth_fix' of https://github.com/vanniktech/DebugDrawer into vanniktech-dev_bluetooth_fix
fix_before_refactoring: public boolean isBluetoothEnabled () { return ( ( mBluetoothAdapter ) != null ) && ( mBluetoothAdapter . isEnabled () ) ; }
fix_after_refactoring: public boolean nzxpyshclbaympqgfwnt () { return ( ( mBluetoothAdapter ) != null ) && ( mBluetoothAdapter . isEnabled () ) ; }
√ fix_prediction_before: public boolean isBluetoothEnabled () { return ( ( mBluetoothAdapter ) != null ) && ( mBluetoothAdapter . isEnabled () ) ; }
× fix_prediction_after: public boolean isEnabled () { return mBluetoothAdapter . isEnabled () ; }

line_index: 1843
bug_before_refactoring: public static int attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> public static int attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> media attachments handling bugfix
bug_after_refactoring: public static int vcgejawyjcwbuhmjqrjm ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> public static int vcgejawyjcwbuhmjqrjm ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> media attachments handling bugfix
fix_before_refactoring: public static void attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; }
fix_after_refactoring: public static void vcgejawyjcwbuhmjqrjm ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; }
√ fix_prediction_before: public static void attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; }
× fix_prediction_after: public static int vsgejawyjcwbuhmjqrjm ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; }

line_index: 1855
bug_before_refactoring: protected void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> protected void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
bug_after_refactoring: protected void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> protected void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
fix_before_refactoring: public void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; }
fix_after_refactoring: public void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; }
√ fix_prediction_before: public void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; }
× fix_prediction_after: private void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; }

line_index: 1856
bug_before_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> Fixed bug at UCreativeTab
bug_after_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void pvfowtjdgsoyvipnqwpc ( test.FMLPostInitializationEvent event ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void pvfowtjdgsoyvipnqwpc ( test.FMLPostInitializationEvent event ) {} <s> Fixed bug at UCreativeTab
fix_before_refactoring: { super . postinit ( event ) ; }
fix_after_refactoring: { super . pvfowtjdgsoyvipnqwpc ( event ) ; }
√ fix_prediction_before: { super . postinit ( event ) ; }
× fix_prediction_after: { java.lang.System.out . println ( event ) ; }

line_index: 1867
bug_before_refactoring: private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
bug_after_refactoring: private static native void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
fix_after_refactoring: private static void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
√ fix_prediction_before: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
× fix_prediction_after: private static native void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ;

line_index: 1886
bug_before_refactoring: @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> 1、fix bug <br /> 2、新增自动刷新(autoRefresh) 禁止刷新(canRefresh)
bug_after_refactoring: @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; } <s> 1、fix bug <br /> 2、新增自动刷新(autoRefresh) 禁止刷新(canRefresh)
fix_before_refactoring: @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; }
fix_after_refactoring: @ java.lang.Override protected void tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; }
√ fix_prediction_before: @ java.lang.Override protected void onAttachedToWindow () { super . onAttachedToWindow () ; }
× fix_prediction_after: @ java.lang.Override protected boolean tbnwjimbhcubkjifycpu () { super . tbnwjimbhcubkjifycpu () ; mChildView = getChildAt ( 0 ) ; addHeadView () ; addFooterView () ; return true ; }

line_index: 1897
bug_before_refactoring: private int displayWidth () { return c . getResources () . getDisplayMetrics () . widthPixels ; } <s> private int displayWidth () { return c . getResources () . getDisplayMetrics () . widthPixels ; } <s> Fixed some RNA generation issues
bug_after_refactoring: private int vjbdsygruquauxfbjioo () { return c . getResources () . getDisplayMetrics () . widthPixels ; } <s> private int vjbdsygruquauxfbjioo () { return c . getResources () . getDisplayMetrics () . widthPixels ; } <s> Fixed some RNA generation issues
fix_before_refactoring: protected int displayWidth () { return c . getResources () . getDisplayMetrics () . widthPixels ; }
fix_after_refactoring: protected int vjbdsygruquauxfbjioo () { return c . getResources () . getDisplayMetrics () . widthPixels ; }
√ fix_prediction_before: protected int displayWidth () { return c . getResources () . getDisplayMetrics () . widthPixels ; }
× fix_prediction_after: private int vjbdsygruquauxfbjioo () { return c . getResources () . getDisplayMetrics () . widthPixels ; }

line_index: 1900
bug_before_refactoring: protected final void registerFormulaListener ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( formulas , listener ) ; } <s> protected final void registerFormulaListener ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( formulas , listener ) ; } <s> bug fixes (no visualization when starting before the initialisation of the model)
bug_after_refactoring: protected final void qczkixefcrxkfcfxxgjy ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . qczkixefcrxkfcfxxgjy ( formulas , listener ) ; } <s> protected final void qczkixefcrxkfcfxxgjy ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . qczkixefcrxkfcfxxgjy ( formulas , listener ) ; } <s> bug fixes (no visualization when starting before the initialisation of the model)
fix_before_refactoring: protected final void registerFormulaListener ( de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( listener ) ; }
fix_after_refactoring: protected final void qczkixefcrxkfcfxxgjy ( de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . qczkixefcrxkfcfxxgjy ( listener ) ; }
√ fix_prediction_before: protected final void registerFormulaListener ( de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( listener ) ; }
× fix_prediction_after: protected final void qczkixefcrxkfcfxxgjy ( de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . qczkixefcrxkfcfxxgjy ( formulas , listener ) ; }

line_index: 1921
bug_before_refactoring: @ org.junit.Test public final void testLoadDefaultConfiguration () { fail ( "Not yet implemented" ) ; } <s> @ org.junit.Test public final void testLoadDefaultConfiguration () { fail ( "Not yet implemented" ) ; } <s> Error fixed:  es.eurohelp.opendata.aldapa.api.configuration.test does not exist
bug_after_refactoring: @ org.junit.Test public final void ympxjezrmbipwxsakqzg () { fail ( "Not yet implemented" ) ; } <s> @ org.junit.Test public final void ympxjezrmbipwxsakqzg () { fail ( "Not yet implemented" ) ; } <s> Error fixed:  es.eurohelp.opendata.aldapa.api.configuration.test does not exist
fix_before_refactoring: @ org.junit.Test public final void testLoadDefaultConfiguration () {}
fix_after_refactoring: @ org.junit.Test public final void ympxjezrmbipwxsakqzg () {}
√ fix_prediction_before: @ org.junit.Test public final void testLoadDefaultConfiguration () {}
× fix_prediction_after: @ org.junit.Test public final void ympxjezrmbipwxsakqzg ( ) throws java.lang.Exception {}

line_index: 1923
bug_before_refactoring: protected final int getRetryMaxAttempts () { return retryMaxAttempts ; } <s> protected final int getRetryMaxAttempts () { return retryMaxAttempts ; } <s> Fixed Freemarker template issue accessing NodeDetails object
bug_after_refactoring: protected final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; } <s> protected final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; } <s> Fixed Freemarker template issue accessing NodeDetails object
fix_before_refactoring: public final int getRetryMaxAttempts () { return retryMaxAttempts ; }
fix_after_refactoring: public final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; }
√ fix_prediction_before: public final int getRetryMaxAttempts () { return retryMaxAttempts ; }
× fix_prediction_after: public final intiiyfollsawbroweprlzj () { return retryMaxAttempts ; }

line_index: 1932
bug_before_refactoring: public java.lang.String databaseDir () { if ( prop . isEmpty () ) return org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ; return prop . getProperty ( "database.dir" ) ; } <s> public java.lang.String databaseDir () { if ( prop . isEmpty () ) return org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ; return prop . getProperty ( "database.dir" ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
bug_after_refactoring: public java.lang.String ldnxwxzibijxghdmzxss () { if ( prop . isEmpty () ) return org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ; return prop . getProperty ( "database.dir" ) ; } <s> public java.lang.String ldnxwxzibijxghdmzxss () { if ( prop . isEmpty () ) return org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ; return prop . getProperty ( "database.dir" ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
fix_before_refactoring: public java.lang.String databaseDir () { return prop . getProperty ( "database.dir" , org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ) ; }
fix_after_refactoring: public java.lang.String ldnxwxzibijxghdmzxss () { return prop . getProperty ( "database.dir" , org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ) ; }
√ fix_prediction_before: public java.lang.String databaseDir () { return prop . getProperty ( "database.dir" , org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ) ; }
× fix_prediction_after: public java.lang.String toString () { if ( prop . isEmpty () ) return org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ; return prop . getProperty ( "database.dir" ) ; }

line_index: 1959
bug_before_refactoring: public long countEdges () { makeActive () ; if ( isUseLightweightEdges () ) throw new java.lang.UnsupportedOperationException ( "Graph set to use Lightweight Edges, count against edges is not supported" ) ; return getRawGraph () . countClass ( OrientEdgeType.CLASS_NAME ) ; } <s> public long countEdges () { makeActive () ; if ( isUseLightweightEdges () ) throw new java.lang.UnsupportedOperationException ( "Graph set to use Lightweight Edges, count against edges is not supported" ) ; return getRawGraph () . countClass ( OrientEdgeType.CLASS_NAME ) ; } <s> Fixed issue #3807  This reverts commit 0b8670601fc314d11f95e30f626d7e988f544587.
bug_after_refactoring: public long oqyweifiuokcnrnirxuj () { makeActive () ; if ( isUseLightweightEdges () ) throw new java.lang.UnsupportedOperationException ( "Graph set to use Lightweight Edges, count against edges is not supported" ) ; return getRawGraph () . countClass ( OrientEdgeType.CLASS_NAME ) ; } <s> public long oqyweifiuokcnrnirxuj () { makeActive () ; if ( isUseLightweightEdges () ) throw new java.lang.UnsupportedOperationException ( "Graph set to use Lightweight Edges, count against edges is not supported" ) ; return getRawGraph () . countClass ( OrientEdgeType.CLASS_NAME ) ; } <s> Fixed issue #3807  This reverts commit 0b8670601fc314d11f95e30f626d7e988f544587.
fix_before_refactoring: public long countEdges () { return countEdges ( OrientEdgeType.CLASS_NAME ) ; }
fix_after_refactoring: public long oqyweifiuokcnrnirxuj () { return oqyweifiuokcnrnirxuj ( OrientEdgeType.CLASS_NAME ) ; }
√ fix_prediction_before: public long countEdges () { return countEdges ( OrientEdgeType.CLASS_NAME ) ; }
× fix_prediction_after: public long oqyweifiuokcnrnirxuj () { makeActive () ; return getRawGraph () . countClass ( OrientEdgeType.CLASS_NAME ) ; }

line_index: 1966
bug_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
bug_after_refactoring: public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
fix_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { return null ; }
fix_after_refactoring: public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { return null ; }
√ fix_prediction_before: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { return null ; }
× fix_prediction_after: public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { return new java.util.Date ( java.lang.Math . abs ( dateAsString ) ) ; }

line_index: 1968
bug_before_refactoring: public void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> public void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> bug fixed in phone message special
bug_after_refactoring: public void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> public void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> bug fixed in phone message special
fix_before_refactoring: private void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } }
fix_after_refactoring: private void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } }
√ fix_prediction_before: private void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } }
× fix_prediction_after: public void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } }

line_index: 1970
bug_before_refactoring: @ org.junit.Ignore @ org.junit.Test public void testCanEqual () { java.lang.System.out . println ( "canEqual" ) ; java.lang.Object other = null ; com.negod.generics.persistence.GenericDao instance = null ; boolean expResult = false ; boolean result = instance . canEqual ( other ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; } <s> @ org.junit.Ignore @ org.junit.Test public void testCanEqual () { java.lang.System.out . println ( "canEqual" ) ; java.lang.Object other = null ; com.negod.generics.persistence.GenericDao instance = null ; boolean expResult = false ; boolean result = instance . canEqual ( other ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; } <s> Fixed StackOverFlow bug
bug_after_refactoring: @ org.junit.Ignore @ org.junit.Test public void qregqzxoiphavvcdrtzu () { java.lang.System.out . println ( "canEqual" ) ; java.lang.Object other = null ; com.negod.generics.persistence.GenericDao instance = null ; boolean expResult = false ; boolean result = instance . canEqual ( other ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; } <s> @ org.junit.Ignore @ org.junit.Test public void qregqzxoiphavvcdrtzu () { java.lang.System.out . println ( "canEqual" ) ; java.lang.Object other = null ; com.negod.generics.persistence.GenericDao instance = null ; boolean expResult = false ; boolean result = instance . canEqual ( other ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; } <s> Fixed StackOverFlow bug
fix_before_refactoring: @ org.junit.Ignore @ org.junit.Test public void testCanEqual () {}
fix_after_refactoring: @ org.junit.Ignore @ org.junit.Test public void qregqzxoiphavvcdrtzu () {}
√ fix_prediction_before: @ org.junit.Ignore @ org.junit.Test public void testCanEqual () {}
× fix_prediction_after: @ org.junit.Ignore @ org.junit.Test public void qregqzxoiphavvcdrtzu ( ) throws java.lang.Exception {}

line_index: 1971
bug_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
fix_after_refactoring: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
√ fix_prediction_before: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
× fix_prediction_after: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; }

line_index: 1974
bug_before_refactoring: public java.lang.String setTask () { this . task = task ; } <s> public java.lang.String setTask () { this . task = task ; } <s> fixed a lot of errors  but can't set ID for some reason
bug_after_refactoring: public java.lang.String aaprnysudbsvggwsalsh () { this . task = task ; } <s> public java.lang.String aaprnysudbsvggwsalsh () { this . task = task ; } <s> fixed a lot of errors  but can't set ID for some reason
fix_before_refactoring: public void setTask ( java.lang.String task ) { this . task = task ; }
fix_after_refactoring: public void aaprnysudbsvggwsalsh ( java.lang.String task ) { this . task = task ; }
√ fix_prediction_before: public void setTask ( java.lang.String task ) { this . task = task ; }
× fix_prediction_after: public void aaprnysudbsvggwsalsh () { this . task = task ; }

line_index: 1978
bug_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
bug_after_refactoring: @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { this . mdP . tczycslwrqqdbjppkyup ( pos ) ; } <s> @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { this . mdP . tczycslwrqqdbjppkyup ( pos ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
fix_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
fix_after_refactoring: @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . tczycslwrqqdbjppkyup ( pos ) ; } }
√ fix_prediction_before: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
× fix_prediction_after: @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { mdP . tczycslwrqqdbjppkyup ( pos ) ; }

line_index: 1981
bug_before_refactoring: private eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> private eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> bugfix: could not create table region
bug_after_refactoring: private eu.transkribus.swt_canvas.canvas.CanvasMode hywpikgicqsnizpogzcf ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> private eu.transkribus.swt_canvas.canvas.CanvasMode hywpikgicqsnizpogzcf ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> bugfix: could not create table region
fix_before_refactoring: protected eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; }
fix_after_refactoring: protected eu.transkribus.swt_canvas.canvas.CanvasMode hywpikgicqsnizpogzcf ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; }
√ fix_prediction_before: protected eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; }
× fix_prediction_after: private eu.transkribus.swt_canvas.canvas.CanvasMode hywpikgicqsnizpogzcf ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; }

line_index: 1991
bug_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
bug_after_refactoring: private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
fix_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) {}
√ fix_prediction_before: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
× fix_prediction_after: private void rcnnvxqtaagqznqlyulq () {}

line_index: 1993
bug_before_refactoring: @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
bug_after_refactoring: @ java.lang.Override public void wgiyuyimlxzeabezutun ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void wgiyuyimlxzeabezutun ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
fix_before_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
fix_after_refactoring: @ java.lang.Override public void wgiyuyimlxzeabezutun ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
√ fix_prediction_before: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_after: @ java.lang.Override public void wgiyuyimlxzeabezutun ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call ) {}

line_index: 1998
bug_before_refactoring: public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
bug_after_refactoring: public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void nozwuvcacpkwwdwseadb ( java.lang.String [] args ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void nozwuvcacpkwwdwseadb () {}

line_index: 2006
bug_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return cache . equals ( o ) ; } <s> @ java.lang.Override public boolean equals ( java.lang.Object o ) { return cache . equals ( o ) ; } <s> Bugfix: ListActionDispatcher subList() mistalignment.
bug_after_refactoring: @ java.lang.Override public boolean yclujqyfmrrcpovoplnm ( java.lang.Object o ) { return cache . yclujqyfmrrcpovoplnm ( o ) ; } <s> @ java.lang.Override public boolean yclujqyfmrrcpovoplnm ( java.lang.Object o ) { return cache . yclujqyfmrrcpovoplnm ( o ) ; } <s> Bugfix: ListActionDispatcher subList() mistalignment.
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return super . equals ( o ) ; }
fix_after_refactoring: @ java.lang.Override public boolean yclujqyfmrrcpovoplnm ( java.lang.Object o ) { return super . yclujqyfmrrcpovoplnm ( o ) ; }
√ fix_prediction_before: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return super . equals ( o ) ; }
× fix_prediction_after: @ java.lang.Override public boolean yclujqyfmrrcpovopl edu ( java.lang.Object o ) { return cache . yclujqyfmrrcpovopl edu ( o ) ; }

line_index: 2011
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> @ java.lang.Override protected void onPause () { super . onPause () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> fix disconnect delay bug
bug_after_refactoring: @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; if ( isFinishing () ) { cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; } } <s> fix disconnect delay bug
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; }
√ fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override protected void fqqgoooenhckxdrpjlpy () { super . fqqgoooenhckxdrpjlpy () ; cn.bit.hao.ble.tool.application.App . getInstance () . exitApp () ; }

line_index: 2016
bug_before_refactoring: @ java.lang.Override public void onSearchViewClosed () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> @ java.lang.Override public void onSearchViewClosed () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> + fix some bugs
bug_after_refactoring: @ java.lang.Override public void teeevlfsawqxswhrbwzs () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> @ java.lang.Override public void teeevlfsawqxswhrbwzs () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> + fix some bugs
fix_before_refactoring: @ java.lang.Override public void onSearchViewClosed () {}
fix_after_refactoring: @ java.lang.Override public void teeevlfsawqxswhrbwzs () {}
√ fix_prediction_before: @ java.lang.Override public void onSearchViewClosed () {}
× fix_prediction_after: @ java.lang.Override public void teeevlfsawqxswhrbwzs () { showListView () ; cloneItems () ; }

line_index: 2018
bug_before_refactoring: private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> Fixing bugs
bug_after_refactoring: private static native void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> private static native void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
fix_after_refactoring: private static void omfhrxffrsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) {}
√ fix_prediction_before: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
× fix_prediction_after: private static native void omfhr_0rsweympyyaey ( long dest , long sourceA , long sourceB , int roundingMode ) ;

line_index: 2028
bug_before_refactoring: private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
bug_after_refactoring: private void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> private void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
fix_before_refactoring: public void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
fix_after_refactoring: public void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
√ fix_prediction_before: public void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
× fix_prediction_after: private void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }

line_index: 2032
bug_before_refactoring: public void setHeight ( int height ) { this . _height = height ; } <s> public void setHeight ( int height ) { this . _height = height ; } <s> CRAFTERCMS-608 fixed issue
bug_after_refactoring: public void xhpnbeabjnzugfbwrpyv ( int height ) { this . _height = height ; } <s> public void xhpnbeabjnzugfbwrpyv ( int height ) { this . _height = height ; } <s> CRAFTERCMS-608 fixed issue
fix_before_refactoring: public void setHeight ( int height ) { this . height = height ; }
fix_after_refactoring: public void xhpnbeabjnzugfbwrpyv ( int height ) { this . height = height ; }
√ fix_prediction_before: public void setHeight ( int height ) { this . height = height ; }
× fix_prediction_after: public void xhpnbeabjnzugfbwrpyv ( int height ) { this . _height = height ; }

line_index: 2038
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> @ java.lang.Override public java.lang.String toString () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> routes search bugfix
bug_after_refactoring: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> routes search bugfix
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return name ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return name ; }
√ fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return name ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return ( ( ( super . getName () ) + " (" ) + ( cost ) ) + ')' ; }

line_index: 2042
bug_before_refactoring: protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
fix_after_refactoring: private native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
√ fix_prediction_before: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
× fix_prediction_after: private native voidphpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;

line_index: 2068
bug_before_refactoring: public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
bug_after_refactoring: public static void tofvxigrkkrhtiylrhxx ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void tofvxigrkkrhtiylrhxx ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
fix_before_refactoring: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
fix_after_refactoring: public static void tofvxigrkkrhtiylrhxx ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
√ fix_prediction_before: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
× fix_prediction_after: public static void tofvxigrkkrhtiylrhxx () { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }

line_index: 2077
bug_before_refactoring: protected static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> protected static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> v1.2.0 : Fixed issue #12
bug_after_refactoring: protected static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> protected static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> v1.2.0 : Fixed issue #12
fix_before_refactoring: public static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
fix_after_refactoring: public static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
√ fix_prediction_before: public static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
× fix_prediction_after: protected static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ; }

