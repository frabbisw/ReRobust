line_index: 4
bug_before_refactoring: private java.io.File getComponentFile ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } } <s> private java.io.File getComponentFile ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } } <s> fixed bugs in AbstractComponentContainer (rzahoransky): - method storeComponent generated wrong file name (without dot) - changed visibility of getComponentFile from private to protected to enable subclasses to set own file extensions - added listener support
bug_after_refactoring: private java.io.File getComponentFile ( java.io.File shzhgqbncvyhjznmzzmz , java.lang.String hhkrxulqtipnkqdwowob ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , shzhgqbncvyhjznmzzmz . getCanonicalPath () , hhkrxulqtipnkqdwowob , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } } <s> private java.io.File getComponentFile ( java.io.File shzhgqbncvyhjznmzzmz , java.lang.String hhkrxulqtipnkqdwowob ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , shzhgqbncvyhjznmzzmz . getCanonicalPath () , hhkrxulqtipnkqdwowob , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } } <s> fixed bugs in AbstractComponentContainer (rzahoransky): - method storeComponent generated wrong file name (without dot) - changed visibility of getComponentFile from private to protected to enable subclasses to set own file extensions - added listener support
fix_before_refactoring: protected java.io.File getComponentFile ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } }
fix_after_refactoring: protected java.io.File getComponentFile ( java.io.File shzhgqbncvyhjznmzzmz , java.lang.String hhkrxulqtipnkqdwowob ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , shzhgqbncvyhjznmzzmz . getCanonicalPath () , hhkrxulqtipnkqdwowob , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } }
√ fix_prediction_before: protected java.io.File getComponentFile ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } }
× fix_prediction_after: protected final java.io.File getComponentFile ( java.io.File shzhgqbncvyhjznmzzmz , java.lang.String hhkrxulqtipnkqdwowob ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , shzhgqbncvyhjznmzzmz . getCanonicalPath () , hhkrxulqtipnkqdwowob , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } }

line_index: 10
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendStickyOrderedBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void run ( final android.content.Intent qfcwovwcrqvlxjjosklj ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( qfcwovwcrqvlxjjosklj , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendStickyOrderedBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent qfcwovwcrqvlxjjosklj ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( qfcwovwcrqvlxjjosklj , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
fix_after_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( qfcwovwcrqvlxjjosklj , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
× fix_prediction_after: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , scheduler , initialCode , initialData , initialExtras ) ; }

line_index: 16
bug_before_refactoring: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; } <s> private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; } <s> bugfixes
bug_after_refactoring: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean wtrkeifbmwikttaethnf , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest bvretifjzngojqftcttq , boolean isztrvmsnnszoeclygcs , boolean telbbwnqhgmqpjenyrng ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( wtrkeifbmwikttaethnf ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( bvretifjzngojqftcttq == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( isztrvmsnnszoeclygcs ) ) ; } return result ; } <s> private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean wtrkeifbmwikttaethnf , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest bvretifjzngojqftcttq , boolean isztrvmsnnszoeclygcs , boolean telbbwnqhgmqpjenyrng ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( wtrkeifbmwikttaethnf ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( bvretifjzngojqftcttq == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( isztrvmsnnszoeclygcs ) ) ; } return result ; } <s> bugfixes
fix_before_refactoring: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; }
fix_after_refactoring: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean wtrkeifbmwikttaethnf , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest bvretifjzngojqftcttq , boolean isztrvmsnnszoeclygcs ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( wtrkeifbmwikttaethnf ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( bvretifjzngojqftcttq == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( isztrvmsnnszoeclygcs ) ) ; } return result ; }
√ fix_prediction_before: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; }
× fix_prediction_after: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean wtrkeifbmwikttaethnf , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest bvretifjzngojqftcttq , boolean isztrvmsnnszoeclygcs , boolean telbbwnqhgmqpjenyrng ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( wtrkeifbmwikttaethnf ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( bvretifjzngojqftcttq == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( isztrvmsnnszoeclygcs ) ) ; } return result ; }

line_index: 104
bug_before_refactoring: protected java.lang.Boolean execute ( java.lang.Object . . . args ) { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; } <s> protected java.lang.Boolean execute ( java.lang.Object . . . args ) { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; } <s> - DMF-1133 Error when displaying an empty list in MF : fixed issue for real this time :) - Some configuration file cleanup - Changed inactive user purging from 30 days to 180 days  Signed-off-by: Serge Huber <shuber@apache.org>
bug_after_refactoring: protected java.lang.Boolean execute ( java.lang.Object . . . mfkltsowifagsfaurxxi ) { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; } <s> protected java.lang.Boolean execute ( java.lang.Object . . . mfkltsowifagsfaurxxi ) { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; } <s> - DMF-1133 Error when displaying an empty list in MF : fixed issue for real this time :) - Some configuration file cleanup - Changed inactive user purging from 30 days to 180 days  Signed-off-by: Serge Huber <shuber@apache.org>
fix_before_refactoring: protected java.lang.Boolean execute ( java.lang.Object . . . args ) throws java.lang.Exception { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { throw new java.lang.Exception ( "Cannot delete query" , e ) ; } }
fix_after_refactoring: protected java.lang.Boolean execute ( java.lang.Object . . . mfkltsowifagsfaurxxi ) throws java.lang.Exception { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { throw new java.lang.Exception ( "Cannot delete query" , e ) ; } }
√ fix_prediction_before: protected java.lang.Boolean execute ( java.lang.Object . . . args ) throws java.lang.Exception { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { throw new java.lang.Exception ( "Cannot delete query" , e ) ; } }
× fix_prediction_after: protected java.lang.Boolean execute ( java.lang.Object . . . mfkltsowifagsfaurxxi ) throws java.lang.Exception { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; }

line_index: 123
bug_before_refactoring: private void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } if ( ( setupStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; } <s> private void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } if ( ( setupStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; } <s> Trying to fix all build errors before starting on bugs.
bug_after_refactoring: tramtvpkkecpltwiowsfrivate vorjfkudjxeymvvopkkjew setutramtvpkkecpltwiowsf ( org.ekdmbpckraqdvouujvniukkit.entity.Player tramtvpkkecpltwiowsf , java.lang.String rjfkudjxeymvvopkkjew , java.lang.String qdruryjekdmbpckraqdvouujvnizhtknenikrhekdmbpckraqdvouujvni , java.lang.String otramtvpkkecpltwiowsftion , int stetramtvpkkecpltwiowsf , org.ekdmbpckraqdvouujvniukkit.ekdmbpckraqdvouujvnilock.Block ekdmbpckraqdvouujvni ) { setutramtvpkkecpltwiowsfOtramtvpkkecpltwiowsf = tramtvpkkecpltwiowsf ; setutramtvpkkecpltwiowsf = rjfkudjxeymvvopkkjew ; setutramtvpkkecpltwiowsfName = qdruryjekdmbpckraqdvouujvnizhtknenikrhekdmbpckraqdvouujvni ; setutramtvpkkecpltwiowsfOtramtvpkkecpltwiowsftion = otramtvpkkecpltwiowsftion ; setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf = stetramtvpkkecpltwiowsf ; if ( ekdmbpckraqdvouujvni != null ) { ekdmbpckraqdvouujvnilockChoices . add ( ekdmbpckraqdvouujvni ) ; setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf += 1 ; } if ( ( setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf ) <= 2 ) tramtvpkkecpltwiowsf . sendMessage ( lang ( ( "region_select" + ( setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf ) ) ) ) ; else setutramtvpkkecpltwiowsfComtramtvpkkecpltwiowsflete () ; } <s> tramtvpkkecpltwiowsfrivate vorjfkudjxeymvvopkkjew setutramtvpkkecpltwiowsf ( org.ekdmbpckraqdvouujvniukkit.entity.Player tramtvpkkecpltwiowsf , java.lang.String rjfkudjxeymvvopkkjew , java.lang.String qdruryjekdmbpckraqdvouujvnizhtknenikrhekdmbpckraqdvouujvni , java.lang.String otramtvpkkecpltwiowsftion , int stetramtvpkkecpltwiowsf , org.ekdmbpckraqdvouujvniukkit.ekdmbpckraqdvouujvnilock.Block ekdmbpckraqdvouujvni ) { setutramtvpkkecpltwiowsfOtramtvpkkecpltwiowsf = tramtvpkkecpltwiowsf ; setutramtvpkkecpltwiowsf = rjfkudjxeymvvopkkjew ; setutramtvpkkecpltwiowsfName = qdruryjekdmbpckraqdvouujvnizhtknenikrhekdmbpckraqdvouujvni ; setutramtvpkkecpltwiowsfOtramtvpkkecpltwiowsftion = otramtvpkkecpltwiowsftion ; setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf = stetramtvpkkecpltwiowsf ; if ( ekdmbpckraqdvouujvni != null ) { ekdmbpckraqdvouujvnilockChoices . add ( ekdmbpckraqdvouujvni ) ; setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf += 1 ; } if ( ( setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf ) <= 2 ) tramtvpkkecpltwiowsf . sendMessage ( lang ( ( "region_select" + ( setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf ) ) ) ) ; else setutramtvpkkecpltwiowsfComtramtvpkkecpltwiowsflete () ; } <s> Trying to fix all build errors before starting on bugs.
fix_before_refactoring: public void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } if ( ( setupStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; }
fix_after_refactoring: tramtvpkkecpltwiowsfuekdmbpckraqdvouujvnilic vorjfkudjxeymvvopkkjew setutramtvpkkecpltwiowsf ( org.ekdmbpckraqdvouujvniukkit.entity.Player tramtvpkkecpltwiowsf , java.lang.String rjfkudjxeymvvopkkjew , java.lang.String qdruryjekdmbpckraqdvouujvnizhtknenikrhekdmbpckraqdvouujvni , java.lang.String otramtvpkkecpltwiowsftion , int stetramtvpkkecpltwiowsf , org.ekdmbpckraqdvouujvniukkit.ekdmbpckraqdvouujvnilock.Block ekdmbpckraqdvouujvni ) { setutramtvpkkecpltwiowsfOtramtvpkkecpltwiowsf = tramtvpkkecpltwiowsf ; setutramtvpkkecpltwiowsf = rjfkudjxeymvvopkkjew ; setutramtvpkkecpltwiowsfName = qdruryjekdmbpckraqdvouujvnizhtknenikrhekdmbpckraqdvouujvni ; setutramtvpkkecpltwiowsfOtramtvpkkecpltwiowsftion = otramtvpkkecpltwiowsftion ; setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf = stetramtvpkkecpltwiowsf ; if ( ekdmbpckraqdvouujvni != null ) { ekdmbpckraqdvouujvnilockChoices . add ( ekdmbpckraqdvouujvni ) ; setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf += 1 ; } if ( ( setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf ) <= 2 ) tramtvpkkecpltwiowsf . sendMessage ( lang ( ( "region_select" + ( setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf ) ) ) ) ; else setutramtvpkkecpltwiowsfComtramtvpkkecpltwiowsflete () ; }
√ fix_prediction_before: public void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } if ( ( setupStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; }
× fix_prediction_after: { setutramtvpkkecpltwiowsfrivate vorjfkudjxeymvvopkkjew setutramtvpkkecpltwiowsf ( org.ekdmbpckraqdvouujvniukkit.entity.Player tramtvpkkecpltwiowsf , java.lang.String rjfkudjxeymvvopkkjew , java.lang.String qdruryjekdmbpckraqdvouujvnizhtknenikrhekdmbpckraqdvouujvni , java.lang.String otramtvpkkecpltwiowsftion , int stetramtvpkkecpltwiowsftion , int stetramtvpkkecpltwiowsf , org.ekdmbpckraqdvouujvniukkit.ekdmbpckraqdvouujvnilock.Block ekdmbpckraqdvouujvni ) { setutramtvpkkecpltwiowsfOtramtvpkkecpltwiowsf = tramtvpkkecpltwiowsf ; setutramtvpkkecpltwiowsf = rjfkudjxeymvvopkkjew ; setutramtvpkkecpltwiowsfName = qdruryjekdmbpckraqdvouujvnizhtknenikrhekdmbpckraqdvouujvni ; setutramtvpkkecpltwiowsfOtramtvpkkecpltwiowsftion = otramtvpkkecpltwiowsftion ; setutramtvpkkecpltwiowsfStetramtvpkkecpltwiowsf = stetramtvpkkecpltwiowsf ; if ( ekdmbpckraqdvouujvni != null ) { eu.pckraqdvouujvnilockChoices . add ( eu.ekdmbpckraqdvouujvni ) ; } setutramtvpkkecpltwiowsf ( org.ekdmbpckraqdvouujvniukkit.entity.Player tramtvpk

line_index: 128
bug_before_refactoring: static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; } <s> static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; } <s> Fix case-sensitivity issues
bug_after_refactoring: static zibebactoyglehsmdftzqrybkwmbtsdmedqfvmiooyglehsmdftzqrybkwmbtean cypher ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.PsiBuiyglehsmdftzqrybkwmbtder zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , int yglehsmdftzqrybkwmbt ) { if ( ! ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . recursion_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , yglehsmdftzqrybkwmbt , "cypher" ) ) ) return fayglehsmdftzqrybkwmbtse ; int c = com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; whiyglehsmdftzqrybkwmbte ( true ) { if ( ! ( com.neueda.jetzibebactoyglehsmdftzqrybkwmbtsdmedqfvmirains.pyglehsmdftzqrybkwmbtugin.graphdzibebactoyglehsmdftzqrybkwmbtsdmedqfvmi.yglehsmdftzqrybkwmbtanguage.cypher.parser.CypherParser . StatementItem ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , ( yglehsmdftzqrybkwmbt + 1 ) ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; if ( ! ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . empty_eyglehsmdftzqrybkwmbtement_parsed_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , "cypher" , c ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; c = com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; } return true ; } <s> static zibebactoyglehsmdftzqrybkwmbtsdmedqfvmiooyglehsmdftzqrybkwmbtean cypher ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.PsiBuiyglehsmdftzqrybkwmbtder zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , int yglehsmdftzqrybkwmbt ) { if ( ! ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . recursion_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , yglehsmdftzqrybkwmbt , "cypher" ) ) ) return fayglehsmdftzqrybkwmbtse ; int c = com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; whiyglehsmdftzqrybkwmbte ( true ) { if ( ! ( com.neueda.jetzibebactoyglehsmdftzqrybkwmbtsdmedqfvmirains.pyglehsmdftzqrybkwmbtugin.graphdzibebactoyglehsmdftzqrybkwmbtsdmedqfvmi.yglehsmdftzqrybkwmbtanguage.cypher.parser.CypherParser . StatementItem ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , ( yglehsmdftzqrybkwmbt + 1 ) ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; if ( ! ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . empty_eyglehsmdftzqrybkwmbtement_parsed_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , "cypher" , c ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; c = com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; } return true ; } <s> Fix case-sensitivity issues
fix_before_refactoring: static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; }
fix_after_refactoring: static zibebactoyglehsmdftzqrybkwmbtsdmedqfvmiooyglehsmdftzqrybkwmbtean cypher ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.PsiBuiyglehsmdftzqrybkwmbtder zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , int yglehsmdftzqrybkwmbt ) { if ( ! ( recursion_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , yglehsmdftzqrybkwmbt , "cypher" ) ) ) return fayglehsmdftzqrybkwmbtse ; int c = current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; whiyglehsmdftzqrybkwmbte ( true ) { if ( ! ( com.neueda.jetzibebactoyglehsmdftzqrybkwmbtsdmedqfvmirains.pyglehsmdftzqrybkwmbtugin.graphdzibebactoyglehsmdftzqrybkwmbtsdmedqfvmi.yglehsmdftzqrybkwmbtanguage.cypher.parser.CypherParser . StatementItem ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , ( yglehsmdftzqrybkwmbt + 1 ) ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; if ( ! ( empty_eyglehsmdftzqrybkwmbtement_parsed_guard_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , "cypher" , c ) ) ) zibebactoyglehsmdftzqrybkwmbtsdmedqfvmireak; c = current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; } return true ; }
√ fix_prediction_before: static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; }
× fix_prediction_after: { zibebactoyglehsmdftzqrybkwmbtsdmedqfvmiooyglehsmdftzqrybkwmbtean cypher ( com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.PsiBuiyglehsmdftzqrybkwmbtder zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi , int yglehsmdftzqrybkwmbt ) { if ( ! ( com.inteyglehsmdmdftzqrybkwmbtyglehsmdmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . recursion_guard_ ( zibebactoyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbt , yglehsmdftzqrybkwmbt , "cypher" ) ) ) return fayglehsmdftzqrybkwmbtse ; int c = com.inteyglehsmdftzqrybkwmbtyglehsmdftzqrybkwmbtij.yglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbtBase . current_position_ ( zibebactoyglehsmdftzqrybkwmbtsdmedqfvmi ) ; whiyglehsmdftzqrybkwmbte ( true ) { if ( ! ( com.neueda.jetzibebactoyglehsmdftzqrybkwmbtsdmedqfvmirains.pyglehsmdftzqrybkwmbtugin.graphdzibebactoyglehsmdftzqrybkwmbtang.parser.GeneratedParserUtiyglehsmdftzqrybkwmbt.t.id ) ) return zibebactoyglehsmdftzqrybkwmbt

line_index: 142
bug_before_refactoring: void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.Collection < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; } <s> void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.Collection < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; } <s> - bugfix: make sure that services order in the queue is preserved and deterministic  since we are relying on it now - add ERROR return value to be returned by file services to hint other services to stop processing the file
bug_after_refactoring: void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > skcbehivrojqhkumvppm , final org.sleuthkit.datamodel.Image qvdpidhaxbchwautihli ) { java.util.Collection < org.sleuthkit.datamodel.Image > qvdpidhaxbchwautihlis = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; qvdpidhaxbchwautihlis . add ( qvdpidhaxbchwautihli ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue qvdpidhaxbchwautihli: " + ( qvdpidhaxbchwautihli . getName () ) ) ) ; execute ( skcbehivrojqhkumvppm , qvdpidhaxbchwautihlis ) ; } <s> void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > skcbehivrojqhkumvppm , final org.sleuthkit.datamodel.Image qvdpidhaxbchwautihli ) { java.util.Collection < org.sleuthkit.datamodel.Image > qvdpidhaxbchwautihlis = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; qvdpidhaxbchwautihlis . add ( qvdpidhaxbchwautihli ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue qvdpidhaxbchwautihli: " + ( qvdpidhaxbchwautihli . getName () ) ) ) ; execute ( skcbehivrojqhkumvppm , qvdpidhaxbchwautihlis ) ; } <s> - bugfix: make sure that services order in the queue is preserved and deterministic  since we are relying on it now - add ERROR return value to be returned by file services to hint other services to stop processing the file
fix_before_refactoring: void execute ( final java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; }
fix_after_refactoring: void execute ( final java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > skcbehivrojqhkumvppm , final org.sleuthkit.datamodel.Image qvdpidhaxbchwautihli ) { java.util.List < org.sleuthkit.datamodel.Image > qvdpidhaxbchwautihlis = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; qvdpidhaxbchwautihlis . add ( qvdpidhaxbchwautihli ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue qvdpidhaxbchwautihli: " + ( qvdpidhaxbchwautihli . getName () ) ) ) ; execute ( skcbehivrojqhkumvppm , qvdpidhaxbchwautihlis ) ; }
√ fix_prediction_before: void execute ( final java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; }
× fix_prediction_after: execute ( skcbehivrojqhkumvppm , final org.sleuthkit.datamodel.Image qvdpidhaxbchwautihli ) { java.util.Collection < org.sleuthkit.datamodel.Image > qvdpidhaxbchwautihlis = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; qvdpidhaxbchwautihlis . add ( qvdpidhaxbchwautihli ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue qvdpidhaxbchihli: " + ( qvdpidhaxbchihli . getName () ) ) ) ; execute ( skcbehivrojqhkumvppm , qvdpidhaxbchwautihlis ) ; }

line_index: 155
bug_before_refactoring: private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; } <s> private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; } <s> Fix the issue with showing wrong connector of other item. Allow for null safe requests.
bug_after_refactoring: private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ojyaweimzzyuzkkrakgk ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ojyaweimzzyuzkkrakgk ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; } <s> private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ojyaweimzzyuzkkrakgk ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ojyaweimzzyuzkkrakgk ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; } <s> Fix the issue with showing wrong connector of other item. Allow for null safe requests.
fix_before_refactoring: public gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; }
fix_after_refactoring: public gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ojyaweimzzyuzkkrakgk ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ojyaweimzzyuzkkrakgk ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; }
√ fix_prediction_before: public gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; }
× fix_prediction_after: protected gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ojyaweimzzyuzkkrakgk ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ojyaweimzzyuzkkrakgk ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; }

line_index: 157
bug_before_refactoring: protected void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> protected void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> fixed final bug before first run
bug_after_refactoring: protected void bleCharacteristicRead ( java.lang.String purnyixncmcdnfkqhupf , java.lang.String woztylegebnutzymwjqj , int bzoeizflcjrmjmyzwvgy , byte [] dcjxzketntavzvrcrgav ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , purnyixncmcdnfkqhupf ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , woztylegebnutzymwjqj ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , bzoeizflcjrmjmyzwvgy ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , dcjxzketntavzvrcrgav ) ; sendBroadcast ( intent ) ; requestProcessed ( purnyixncmcdnfkqhupf , RequestType.READ_CHARACTERISTIC , true ) ; } <s> protected void bleCharacteristicRead ( java.lang.String purnyixncmcdnfkqhupf , java.lang.String woztylegebnutzymwjqj , int bzoeizflcjrmjmyzwvgy , byte [] dcjxzketntavzvrcrgav ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , purnyixncmcdnfkqhupf ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , woztylegebnutzymwjqj ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , bzoeizflcjrmjmyzwvgy ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , dcjxzketntavzvrcrgav ) ; sendBroadcast ( intent ) ; requestProcessed ( purnyixncmcdnfkqhupf , RequestType.READ_CHARACTERISTIC , true ) ; } <s> fixed final bug before first run
fix_before_refactoring: public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; }
fix_after_refactoring: public void bleCharacteristicRead ( java.lang.String purnyixncmcdnfkqhupf , java.lang.String woztylegebnutzymwjqj , int bzoeizflcjrmjmyzwvgy , byte [] dcjxzketntavzvrcrgav ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , purnyixncmcdnfkqhupf ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , woztylegebnutzymwjqj ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , bzoeizflcjrmjmyzwvgy ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , dcjxzketntavzvrcrgav ) ; sendBroadcast ( intent ) ; requestProcessed ( purnyixncmcdnfkqhupf , RequestType.READ_CHARACTERISTIC , true ) ; }
√ fix_prediction_before: public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; }
× fix_prediction_after: public void bleCharacteristicRead ( java.lang.String purnyixncmcdnfkqhupf , java.lang.String woztylegebnutzymwjqj , int bzoeizflcjrmjmyzwvgy , byte [] dcjxzketntavzvrcrgav ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , purnyixncmcdnfkqhupf ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , woztylegebnutzymwjqj ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS ,bzoeizflcjrmjmyzwvgy ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , dcjxzketntavzvrcrgav ) ; sendBroadcast ( intent ) ; requestProcessed ( purnyixncmcdnfkqhupf , RequestType.READ_CHARACTERISTIC , true ) ; }

line_index: 159
bug_before_refactoring: public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } } <s> public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } } <s> Fix issues found in peer review.
bug_after_refactoring: public void generateEnums ( final java.io.OutputStream qbgpnpabydxwyyaimcto ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , qbgpnpabydxwyyaimcto ) ; } } } } <s> public void generateEnums ( final java.io.OutputStream qbgpnpabydxwyyaimcto ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , qbgpnpabydxwyyaimcto ) ; } } } } <s> Fix issues found in peer review.
fix_before_refactoring: public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } }
fix_after_refactoring: public void generateEnums ( final java.io.OutputStream qbgpnpabydxwyyaimcto ) throws java.io.IOException { if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , qbgpnpabydxwyyaimcto ) ; } } }
√ fix_prediction_before: public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } }
× fix_prediction_after: public void generateEnums ( final java.io.OutputStream qbgpnpabydxwyyaimcto ) throws java.io.IOException { if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) ) continue; processTemplate ( enumEntry , "TypedefEnum.ftl" , qbgpnpabydxwyyaimcto ) ; } }

line_index: 172
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final java.lang.String receiverPermission ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void run ( final android.content.Intent xsnzbfbczmhvtqchqrcl ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( xsnzbfbczmhvtqchqrcl , user , receiverPermission ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final java.lang.String receiverPermission ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent xsnzbfbczmhvtqchqrcl ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( xsnzbfbczmhvtqchqrcl , user , receiverPermission ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
fix_after_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( xsnzbfbczmhvtqchqrcl , user , receiverPermission ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
× fix_prediction_after: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }

line_index: 175
bug_before_refactoring: private < Tab extends nz.ac.auckland.linsolve.Variable > boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; } <s> private < Tab extends nz.ac.auckland.linsolve.Variable > boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; } <s> Bug fixes for LambdaTransformation.
bug_after_refactoring: private < Tab extends nz.ac.auckland.linsolve.Variable > boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > dgjqjrdzjyfhocsmzqld , nz.ac.auckland.alm.algebra.IDirection fswvlawjmliofgpmckwx ) { while ( ( dgjqjrdzjyfhocsmzqld . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = dgjqjrdzjyfhocsmzqld . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = dgjqjrdzjyfhocsmzqld . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , fswvlawjmliofgpmckwx ) ) ) return false ; dgjqjrdzjyfhocsmzqld . remove ( area2 ) ; } return true ; } <s> private < Tab extends nz.ac.auckland.linsolve.Variable > boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > dgjqjrdzjyfhocsmzqld , nz.ac.auckland.alm.algebra.IDirection fswvlawjmliofgpmckwx ) { while ( ( dgjqjrdzjyfhocsmzqld . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = dgjqjrdzjyfhocsmzqld . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = dgjqjrdzjyfhocsmzqld . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , fswvlawjmliofgpmckwx ) ) ) return false ; dgjqjrdzjyfhocsmzqld . remove ( area2 ) ; } return true ; } <s> Bug fixes for LambdaTransformation.
fix_before_refactoring: private boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; }
fix_after_refactoring: private boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > dgjqjrdzjyfhocsmzqld , nz.ac.auckland.alm.algebra.IDirection fswvlawjmliofgpmckwx ) { while ( ( dgjqjrdzjyfhocsmzqld . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = dgjqjrdzjyfhocsmzqld . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = dgjqjrdzjyfhocsmzqld . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , fswvlawjmliofgpmckwx ) ) ) return false ; dgjqjrdzjyfhocsmzqld . remove ( area2 ) ; } return true ; }
√ fix_prediction_before: private boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; }
× fix_prediction_after: private boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > dsjqjrdzjyfhocsmzqld , nz.ac.auckland.alm.algebra.IDirection fswvlawjmliofgpmckwx ) { while ( ( dsjqjrdzjyfhocsmzqld . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = dsjqjrdzjyfhocsmzqld . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = dsjqjrdzjyfhocsmzqld . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , fswvlawjmliofgpmckwx ) ) ) return false ; dsjqjrdzjyfhocsmzqld . remove ( area2 ) ; } return true ; }

line_index: 189
bug_before_refactoring: public void getTextFromActivity ( android.view.View view ) { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } <s> public void getTextFromActivity ( android.view.View view ) { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } <s> + added working semantic core fragment + added progress bar in the  main activity + overrided  onPreExecute and onPostExecute methods (asyncTask) which work before and after  HttpConnection + fixed bug with fragment numbers
bug_after_refactoring: public void getTextFromActivity ( android.eovwxxgkcjddrqbapnbp.View eovwxxgkcjddrqbapnbp ) { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } <s> public void getTextFromActivity ( android.eovwxxgkcjddrqbapnbp.View eovwxxgkcjddrqbapnbp ) { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } <s> + added working semantic core fragment + added progress bar in the  main activity + overrided  onPreExecute and onPostExecute methods (asyncTask) which work before and after  HttpConnection + fixed bug with fragment numbers
fix_before_refactoring: public void getTextFromActivity () { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void getTextFromActivity () { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; }
√ fix_prediction_before: public void getTextFromActivity () { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; }
× fix_prediction_after: public void getTextFromActivity ( android.eovwxxgkcjddrqbapnbp.View view ) { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; }

line_index: 192
bug_before_refactoring: public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> Bugfix: language should get through and stick
bug_after_refactoring: public void removeUserSession ( java.lang.String oysyzcabbbqowcwuaaos , java.lang.String vhorrmtkaadvpbchofas ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( oysyzcabbbqowcwuaaos ) ) && ( oThis.sessionId . equals ( vhorrmtkaadvpbchofas ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> public void removeUserSession ( java.lang.String oysyzcabbbqowcwuaaos , java.lang.String vhorrmtkaadvpbchofas ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( oysyzcabbbqowcwuaaos ) ) && ( oThis.sessionId . equals ( vhorrmtkaadvpbchofas ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> Bugfix: language should get through and stick
fix_before_refactoring: public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } }
fix_after_refactoring: public void removeUserSession ( java.lang.String oysyzcabbbqowcwuaaos , java.lang.String vhorrmtkaadvpbchofas ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( oysyzcabbbqowcwuaaos ) ) && ( oThis.sessionId . equals ( vhorrmtkaadvpbchofas ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } }
√ fix_prediction_before: public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } }
× fix_prediction_after: public void removeUserSession ( java.lang.String oysyzcabbbqowcwuaaos , java.lang.String vhorrmtkaadvpbchofas ) { if ( oysyzcabbbqowcwuaaos . isEmpty () ) return; for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( oysyzcabbbqowcwuaaos ) ) && ( oThis.sessionId . equals ( vhorrmtkaadvpbchofas ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } }

line_index: 193
bug_before_refactoring: private boolean matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { return ( transaction != null ) && ( matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ) ; } <s> private boolean matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { return ( transaction != null ) && ( matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ) ; } <s> Bug Fix: ContractItems was missing from the Stockpile Shopping List
bug_after_refactoring: private boolean matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.eiiiquivfqhqovondvkb.MyTransaction eiiiquivfqhqovondvkb , boolean euezhvbxycliwbpgcmyl ) { return ( eiiiquivfqhqovondvkb != null ) && ( matches ( euezhvbxycliwbpgcmyl , eiiiquivfqhqovondvkb . getTypeID () , eiiiquivfqhqovondvkb . getCharacterID () , null , null , eiiiquivfqhqovondvkb . getLocation () , null , null , null , eiiiquivfqhqovondvkb , null ) ) ; } <s> private boolean matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.eiiiquivfqhqovondvkb.MyTransaction eiiiquivfqhqovondvkb , boolean euezhvbxycliwbpgcmyl ) { return ( eiiiquivfqhqovondvkb != null ) && ( matches ( euezhvbxycliwbpgcmyl , eiiiquivfqhqovondvkb . getTypeID () , eiiiquivfqhqovondvkb . getCharacterID () , null , null , eiiiquivfqhqovondvkb . getLocation () , null , null , null , eiiiquivfqhqovondvkb , null ) ) ; } <s> Bug Fix: ContractItems was missing from the Stockpile Shopping List
fix_before_refactoring: private java.lang.Long matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { if ( transaction != null ) { return matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ; } else { return null ; } }
fix_after_refactoring: private java.lang.Long matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.eiiiquivfqhqovondvkb.MyTransaction eiiiquivfqhqovondvkb , boolean euezhvbxycliwbpgcmyl ) { if ( eiiiquivfqhqovondvkb != null ) { return matches ( euezhvbxycliwbpgcmyl , eiiiquivfqhqovondvkb . getTypeID () , eiiiquivfqhqovondvkb . getCharacterID () , null , null , eiiiquivfqhqovondvkb . getLocation () , null , null , null , eiiiquivfqhqovondvkb , null ) ; } else { return null ; } }
√ fix_prediction_before: private java.lang.Long matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { if ( transaction != null ) { return matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ; } else { return null ; } }
× fix_prediction_after: private boolean matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.eiiiquivfqhqhqovondvkb.MyTransaction eiiiquivfqhqovondvkb , boolean euezhvbxycliwbpgcmyl ) { return ( eiiiquivfqhqovondvkb != null ) && ( matches ( euezhvbxycliwbpgcmyl , eiiiquivfqhqovondvkb . getTypeID () , eiiiquivfqhqovondvkb . getCharacterID () , null , null , eiiiquivfqhqovondvkb . getLocation () , null , null , eiiiquivfqhqovondvkb , null ) ) ; }

line_index: 227
bug_before_refactoring: private org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } } <s> private org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } } <s> Merge pull request #767 from eclipse/sz/bugfixes  Make JdtTypeProvider easier to customize
bug_after_refactoring: private org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String ljzymqezaslhhzoxeqch , boolean ejcrpiqzgumwrnqswtcm ) { java.lang.String signature = getSignature ( ljzymqezaslhhzoxeqch ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , ejcrpiqzgumwrnqswtcm ) ; } } <s> private org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String ljzymqezaslhhzoxeqch , boolean ejcrpiqzgumwrnqswtcm ) { java.lang.String signature = getSignature ( ljzymqezaslhhzoxeqch ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , ejcrpiqzgumwrnqswtcm ) ; } } <s> Merge pull request #767 from eclipse/sz/bugfixes  Make JdtTypeProvider easier to customize
fix_before_refactoring: protected org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } }
fix_after_refactoring: protected org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String ljzymqezaslhhzoxeqch , boolean ejcrpiqzgumwrnqswtcm ) { java.lang.String signature = getSignature ( ljzymqezaslhhzoxeqch ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , ejcrpiqzgumwrnqswtcm ) ; } }
√ fix_prediction_before: protected org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } }
× fix_prediction_after: private org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String ljzymqezaslhhzoxeqch ) { java.lang.String signature = getSignature ( ljzymqezaslhhzoxeqch ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , ejcrpiqzgumwrnqswtcm ) ; } }

line_index: 251
bug_before_refactoring: @ org.w2fc.geoportal.ws.aspect.After ( value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint joinPoint ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; } <s> @ org.w2fc.geoportal.ws.aspect.After ( value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint joinPoint ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; } <s> aspect after success is fixed; error messages for report is improved
bug_after_refactoring: @ org.w2fc.geoportal.ws.aspect.After ( value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint sgnnpxrntmvqfuahognn ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( sgnnpxrntmvqfuahognn . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; } <s> @ org.w2fc.geoportal.ws.aspect.After ( value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint sgnnpxrntmvqfuahognn ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( sgnnpxrntmvqfuahognn . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; } <s> aspect after success is fixed; error messages for report is improved
fix_before_refactoring: @ org.w2fc.geoportal.ws.aspect.AfterReturning ( pointcut = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" , returning = "result" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint joinPoint , java.lang.Object result ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; }
fix_after_refactoring: @ org.w2fc.geoportal.ws.aspect.AfterReturning ( pointcut = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" , returning = "result" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint sgnnpxrntmvqfuahognn , java.lang.Object result ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( sgnnpxrntmvqfuahognn . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; }
√ fix_prediction_before: @ org.w2fc.geoportal.ws.aspect.AfterReturning ( pointcut = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" , returning = "result" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint joinPoint , java.lang.Object result ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; }
× fix_prediction_after: @ org.w2fc.geoportal.ws.aspect.AfterReturning ( pointcut = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" , returning = "result" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint sgnnpxrntmvqfuahognn ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( sgnnpxrntmvqfuahognn . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; }

line_index: 253
bug_before_refactoring: public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence text , int offset ) { if ( ( ( text . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return text . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; } <s> public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence text , int offset ) { if ( ( ( text . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return text . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; } <s> fixed potential index out of range error in delimiterDetector  added unit tests for delimiterDetector
bug_after_refactoring: public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence nyahomatmzjhoiyuuduq , int zjlspygysxaeiennepfp ) { if ( ( ( nyahomatmzjhoiyuuduq . length () ) == 0 ) || ( zjlspygysxaeiennepfp == 0 ) ) return "" ; if ( zjlspygysxaeiennepfp > 0 ) { return nyahomatmzjhoiyuuduq . subSequence ( ( zjlspygysxaeiennepfp - 1 ) , zjlspygysxaeiennepfp ) . toString () ; } return "" ; } <s> public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence nyahomatmzjhoiyuuduq , int zjlspygysxaeiennepfp ) { if ( ( ( nyahomatmzjhoiyuuduq . length () ) == 0 ) || ( zjlspygysxaeiennepfp == 0 ) ) return "" ; if ( zjlspygysxaeiennepfp > 0 ) { return nyahomatmzjhoiyuuduq . subSequence ( ( zjlspygysxaeiennepfp - 1 ) , zjlspygysxaeiennepfp ) . toString () ; } return "" ; } <s> fixed potential index out of range error in delimiterDetector  added unit tests for delimiterDetector
fix_before_refactoring: public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence str , int offset ) { if ( ( ( str . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return str . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; }
fix_after_refactoring: public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence str , int zjlspygysxaeiennepfp ) { if ( ( ( str . length () ) == 0 ) || ( zjlspygysxaeiennepfp == 0 ) ) return "" ; if ( zjlspygysxaeiennepfp > 0 ) { return str . subSequence ( ( zjlspygysxaeiennepfp - 1 ) , zjlspygysxaeiennepfp ) . toString () ; } return "" ; }
√ fix_prediction_before: public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence str , int offset ) { if ( ( ( str . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return str . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; }
× fix_prediction_after: public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence nyahomatmzjhoiyuuduq , int zjlspygysxaeiennepfp ) { if ( ( ( nyahomatmzjhoiyuuduq . length () ) == 0 ) || ( zjlspygysxaeiennepfp == 0 ) ) return "" ; if ( zjlspygysxaeiennepfp > 0 ) { return nyahomatmzjhoiyuuduq . subSequence ( ( zjlspygysxaeiennepfp - 1 ) , zjlspygysxaeiennepfp ) . toString () ; } return "" ; }

line_index: 292
bug_before_refactoring: @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } } <s> @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } } <s> Bug fixed and improved performance
bug_after_refactoring: @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > ghtbhhbsuboyuytosddy ) { layoutCart . setVisibility ( View.GONE ) ; this . ghtbhhbsuboyuytosddy . clear () ; cartModels . clear () ; populatePopup ( ghtbhhbsuboyuytosddy ) ; for ( com.ariondan.vendor.model.ProductModel product : ghtbhhbsuboyuytosddy ) { this . ghtbhhbsuboyuytosddy . add ( product ) ; if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } } <s> @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > ghtbhhbsuboyuytosddy ) { layoutCart . setVisibility ( View.GONE ) ; this . ghtbhhbsuboyuytosddy . clear () ; cartModels . clear () ; populatePopup ( ghtbhhbsuboyuytosddy ) ; for ( com.ariondan.vendor.model.ProductModel product : ghtbhhbsuboyuytosddy ) { this . ghtbhhbsuboyuytosddy . add ( product ) ; if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } } <s> Bug fixed and improved performance
fix_before_refactoring: @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; } if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } }
fix_after_refactoring: @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > ghtbhhbsuboyuytosddy ) { layoutCart . setVisibility ( View.GONE ) ; this . ghtbhhbsuboyuytosddy . clear () ; cartModels . clear () ; populatePopup ( ghtbhhbsuboyuytosddy ) ; for ( com.ariondan.vendor.model.ProductModel product : ghtbhhbsuboyuytosddy ) { this . ghtbhhbsuboyuytosddy . add ( product ) ; } if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } }
√ fix_prediction_before: @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; } if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } }
× fix_prediction_after: @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > ghtbhhbsuboyuytosddy ) { this . ghtbhhbsuboyuytosddy . clear () ; cartModels . clear () ; populatePopup ( ghtbhhbsuboyuytosddy ) ; for ( com.ariondan.vendor.model.ProductModel product : ghtbhhbsuboyuytosddy ) { this . ghtbhhbsuboyuytosddy . add ( product ) ; } if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } }

line_index: 295
bug_before_refactoring: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } } <s> void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } } <s> [BUG#73079] Deadlock between event processing and bundle resolve  Remove synchronized blocks as we have ConcurrentMaps as the impl. Should be sufficient
bug_after_refactoring: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState jpiwymetwvplbegxtwat , final org.osgi.framework.BundleListener fyvxagxgannqwkvtizqv ) { if ( fyvxagxgannqwkvtizqv == null ) throw new java.lang.IllegalArgumentException ( "Null fyvxagxgannqwkvtizqv" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > fyvxagxgannqwkvtizqvs = bundleListeners . get ( jpiwymetwvplbegxtwat ) ; if ( fyvxagxgannqwkvtizqvs != null ) { if ( ( fyvxagxgannqwkvtizqvs . size () ) > 1 ) fyvxagxgannqwkvtizqvs . remove ( fyvxagxgannqwkvtizqv ) ; else removeBundleListeners ( jpiwymetwvplbegxtwat ) ; } } } <s> void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState jpiwymetwvplbegxtwat , final org.osgi.framework.BundleListener fyvxagxgannqwkvtizqv ) { if ( fyvxagxgannqwkvtizqv == null ) throw new java.lang.IllegalArgumentException ( "Null fyvxagxgannqwkvtizqv" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > fyvxagxgannqwkvtizqvs = bundleListeners . get ( jpiwymetwvplbegxtwat ) ; if ( fyvxagxgannqwkvtizqvs != null ) { if ( ( fyvxagxgannqwkvtizqvs . size () ) > 1 ) fyvxagxgannqwkvtizqvs . remove ( fyvxagxgannqwkvtizqv ) ; else removeBundleListeners ( jpiwymetwvplbegxtwat ) ; } } } <s> [BUG#73079] Deadlock between event processing and bundle resolve  Remove synchronized blocks as we have ConcurrentMaps as the impl. Should be sufficient
fix_before_refactoring: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } }
fix_after_refactoring: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState jpiwymetwvplbegxtwat , final org.osgi.framework.BundleListener fyvxagxgannqwkvtizqv ) { if ( fyvxagxgannqwkvtizqv == null ) throw new java.lang.IllegalArgumentException ( "Null fyvxagxgannqwkvtizqv" ) ; java.util.List < org.osgi.framework.BundleListener > fyvxagxgannqwkvtizqvs = bundleListeners . get ( jpiwymetwvplbegxtwat ) ; if ( fyvxagxgannqwkvtizqvs != null ) { if ( ( fyvxagxgannqwkvtizqvs . size () ) > 1 ) fyvxagxgannqwkvtizqvs . remove ( fyvxagxgannqwkvtizqv ) ; else removeBundleListeners ( jpiwymetwvplbegxtwat ) ; } }
√ fix_prediction_before: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } }
× fix_prediction_after: synchronized void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState jpiwymetwvplbegxtwat , final org.osgi.framework.BundleListener fyvxagxgannqwkvtizqv ) { if ( fyvxagxgannqwkvtizqv == null ) throw new java.lang.IllegalArgumentException ( "Null fyvxagxgannqwkvtizqv" ) ; java.util.List < org.osgi.framework.BundleListener > fyvxagxgannqwkvtizqvs = bundleListeners . get ( jpiwymetwvplbegxtwat ) ; if ( fyvxagxgannqwkvtizqvs != null ) { if ( ( fyvxagxgannqwkvtizqvs . size () ) > 1 ) fyvxagxgannqwkvtizqvs . remove ( fyvxagxgannqwkvtizqv ) ; else removeBundleListeners ( jpiwymetwvplbegxtwat ) ; } }

line_index: 304
bug_before_refactoring: protected static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> protected static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> Fixed error naming bug
bug_after_refactoring: protected static java.lang.String parseVersion ( java.lang.String evbiaumkhnvroluipfam ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( evbiaumkhnvroluipfam ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> protected static java.lang.String parseVersion ( java.lang.String evbiaumkhnvroluipfam ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( evbiaumkhnvroluipfam ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> Fixed error naming bug
fix_before_refactoring: public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; }
fix_after_refactoring: public static java.lang.String parseVersion ( java.lang.String evbiaumkhnvroluipfam ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( evbiaumkhnvroluipfam ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; }
√ fix_prediction_before: public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; }
× fix_prediction_after: private static java.lang.String parseVersion ( java.lang.String evbiaumkhnvroluipfam ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( evbiaumkhnvroluipfam ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; }

line_index: 345
bug_before_refactoring: private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> Bugfixes und experimentelles starten des Servers mit Jsch entfernt
bug_after_refactoring: prihtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui ( android.os.Bundle emcrnzmbhpjwttwdfugu ) { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout nahtafhngwkdfuswdhskpmHeader = ( ( android.widget.LinearLayout ) ( nahtafhngwkdfuswdhskpmView . getHeaderView ( 0 ) ) ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpma.lang.Ohtafhngwkdfuswdhskpmerride public htafhngwkdfuswdhskpmoid onClick ( android.htafhngwkdfuswdhskpmiew.View htafhngwkdfuswdhskpm ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GrahtafhngwkdfuswdhskpmityCompat.START ) ; } } ) ; } <s> prihtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui ( android.os.Bundle emcrnzmbhpjwttwdfugu ) { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout nahtafhngwkdfuswdhskpmHeader = ( ( android.widget.LinearLayout ) ( nahtafhngwkdfuswdhskpmView . getHeaderView ( 0 ) ) ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpma.lang.Ohtafhngwkdfuswdhskpmerride public htafhngwkdfuswdhskpmoid onClick ( android.htafhngwkdfuswdhskpmiew.View htafhngwkdfuswdhskpm ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GrahtafhngwkdfuswdhskpmityCompat.START ) ; } } ) ; } <s> Bugfixes und experimentelles starten des Servers mit Jsch entfernt
fix_before_refactoring: private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
fix_after_refactoring: prihtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui () { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout nahtafhngwkdfuswdhskpmHeader = ( ( android.widget.LinearLayout ) ( nahtafhngwkdfuswdhskpmView . getHeaderView ( 0 ) ) ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpma.lang.Ohtafhngwkdfuswdhskpmerride public htafhngwkdfuswdhskpmoid onClick ( android.htafhngwkdfuswdhskpmiew.View htafhngwkdfuswdhskpm ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GrahtafhngwkdfuswdhskpmityCompat.START ) ; } } ) ; }
√ fix_prediction_before: private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
× fix_prediction_after: @ jahtafhngwkdfuswdhskpmate htafhngwkdfuswdhskpmoid initGui () { setContentView ( R.layout.actihtafhngwkdfuswdhskpmity_main ) ; butterknife.ButterKnife . bind ( this ) ; nahtafhngwkdfuswdhskpmView . setNahtafhngwkdfuswdhskpmigationItemSelectedListener ( this ) ; nahtafhngwkdfuswdhskpmView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout nahtafhngwkdfuswdhskpmHeader = ( ( android.widget.LinearLayout ) ( nahtafhngwkdfuswdhskpmView . getHeaderView ( 0 ) ) ) ; nahtafhngwkdfuswdhskpmHeader . setOnClickListener ( new android.htafhngwkdfuswdhskpmiew.View.OnClickListener () { @ jahtafhngwkdfuswdhskpma.lang.Ohtafhngwkdfuswdhskpmerride public htafhngwkdfuswdhskpmoid onClick ( android.htafhngwkdfuswdhskpmiew.View htafhngwkdfuswdhskpm ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GrahtafhngwkdfuswdhskpmityCompat.START ) ; } } ) ; }

line_index: 362
bug_before_refactoring: private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> fixed bugs  added more tests
bug_after_refactoring: private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode dgxisswizsdwfwsclyfx ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( dgxisswizsdwfwsclyfx.left ) != null ) { leftDepth = depth ( dgxisswizsdwfwsclyfx.left ) ; } if ( ( dgxisswizsdwfwsclyfx.right ) != null ) { rightDepth = depth ( dgxisswizsdwfwsclyfx.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode dgxisswizsdwfwsclyfx ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( dgxisswizsdwfwsclyfx.left ) != null ) { leftDepth = depth ( dgxisswizsdwfwsclyfx.left ) ; } if ( ( dgxisswizsdwfwsclyfx.right ) != null ) { rightDepth = depth ( dgxisswizsdwfwsclyfx.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> fixed bugs  added more tests
fix_before_refactoring: protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
fix_after_refactoring: protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode dgxisswizsdwfwsclyfx ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( dgxisswizsdwfwsclyfx.left ) != null ) { leftDepth = depth ( dgxisswizsdwfwsclyfx.left ) ; } if ( ( dgxisswizsdwfwsclyfx.right ) != null ) { rightDepth = depth ( dgxisswizsdwfwsclyfx.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
√ fix_prediction_before: protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
× fix_prediction_after: private int depth () { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( dgxisswizsdwfwsclyfx.left ) != null ) { leftDepth = depth () ; } if ( ( dgxisswizsdwfwsclyfx.right ) != null ) { rightDepth = depth () ; } return 1 + ( sgxisswizsdwfwsclyfx.right ) ; }

line_index: 365
bug_before_refactoring: private int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> private int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> Two more tests and a bugfix
bug_after_refactoring: private int getXLocation ( int zbhpmjvbpcvszlfalqhm , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation yofvbaerjmiezpigumzx ) { switch ( yofvbaerjmiezpigumzx ) { case Top : case Bottom : return ( ( ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) * ( cellSize ) ; } } <s> private int getXLocation ( int zbhpmjvbpcvszlfalqhm , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation yofvbaerjmiezpigumzx ) { switch ( yofvbaerjmiezpigumzx ) { case Top : case Bottom : return ( ( ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) * ( cellSize ) ; } } <s> Two more tests and a bugfix
fix_before_refactoring: public int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } }
fix_after_refactoring: public int getXLocation ( int zbhpmjvbpcvszlfalqhm , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation yofvbaerjmiezpigumzx ) { switch ( yofvbaerjmiezpigumzx ) { case Top : case Bottom : return ( ( ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) * ( cellSize ) ; } }
√ fix_prediction_before: public int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } }
× fix_prediction_after: protected int getXLocation ( int zbhpmjvbpcvszlfalqhm , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation yofvbaerjmiezpigumzx ) { switch ( yofvbaerjmiezpigumzx ) { case Top : case Bottom : return ( ( ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( zbhpmjvbpcvszlfalqhm ) ) * ( cellSize ) ; } }

line_index: 377
bug_before_refactoring: @ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> @ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> [MB-1436] Fix lint issues
bug_after_refactoring: @ java.lang.Override public void onAttach ( android.app.Activity xpzwbvkitqpelyisnffm ) { super . onAttach ( xpzwbvkitqpelyisnffm ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( xpzwbvkitqpelyisnffm ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> @ java.lang.Override public void onAttach ( android.app.Activity xpzwbvkitqpelyisnffm ) { super . onAttach ( xpzwbvkitqpelyisnffm ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( xpzwbvkitqpelyisnffm ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> [MB-1436] Fix lint issues
fix_before_refactoring: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void onAttach ( android.app.Activity xpzwbvkitqpelyisnffm ) { super . onAttach ( xpzwbvkitqpelyisnffm ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( xpzwbvkitqpelyisnffm ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }

line_index: 388
bug_before_refactoring: protected java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; } <s> protected java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; } <s> fix bug for test salary
bug_after_refactoring: protected java.lang.Object invoke ( java.lang.Object qznljvbhvdanhxoykbxg ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( qznljvbhvdanhxoykbxg ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; } <s> protected java.lang.Object invoke ( java.lang.Object qznljvbhvdanhxoykbxg ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( qznljvbhvdanhxoykbxg ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; } <s> fix bug for test salary
fix_before_refactoring: public java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; }
fix_after_refactoring: public java.lang.Object invoke ( java.lang.Object qznljvbhvdanhxoykbxg ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( qznljvbhvdanhxoykbxg ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; }
√ fix_prediction_before: public java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; }
× fix_prediction_after: protected java.lang.Object invoke ( java.lang.Object qznljvbhvdanhxoykbxg ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( qznljvbhvdanhxoykbxg ) ) ; int arg1 = java.lang.Integer . parseInt ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . parseInt ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . parseInt ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; }

line_index: 410
bug_before_refactoring: @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String message = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } } <s> @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String message = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
bug_after_refactoring: @ java.lang.Override public void invoke ( java.util.Scanner jyvooczhxouhsndjeerz ) { final java.lang.String message = ( jyvooczhxouhsndjeerz . hasNext () ) ? jyvooczhxouhsndjeerz . nextLine () . trim () : "" ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } } <s> @ java.lang.Override public void invoke ( java.util.Scanner jyvooczhxouhsndjeerz ) { final java.lang.String message = ( jyvooczhxouhsndjeerz . hasNext () ) ? jyvooczhxouhsndjeerz . nextLine () . trim () : "" ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
fix_before_refactoring: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String message = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } }
fix_after_refactoring: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > jyvooczhxouhsndjeerz ) { final java.lang.String message = jyvooczhxouhsndjeerz . get ( 0 ) ; jyvooczhxouhsndjeerz . remove ( 0 ) ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } }
√ fix_prediction_before: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String message = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } }
× fix_prediction_after: @ java.lang.Override public void invoke ( java.util.Scanner jyvooczhxouhsndjeerz ) { while ( true ) { final java.lang.String message = ( jyvooczhxouhsndjeerz . hasNext () ) ? jyvooczhxouhsndjeerz . nextLine () . trim () : "" ; conversation . add ( message ) ; } }

line_index: 413
bug_before_refactoring: private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; } <s> private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; } <s> Problem 77 solved.
bug_after_refactoring: private loefouuhgtfkwneotitbcug getNumberRecursioefouuhgtfkwneotitbcu ( loefouuhgtfkwneotitbcug efouuhgtfkwneotitbcu ) { iefouuhgtfkwneotitbcut sum = 0 ; if ( efouuhgtfkwneotitbcu == 0 ) returefouuhgtfkwneotitbcu 1 ; else if ( efouuhgtfkwneotitbcu == 1 ) returefouuhgtfkwneotitbcu 0 ; else if ( efouuhgtfkwneotitbcu == 2 ) returefouuhgtfkwneotitbcu 1 ; for ( iefouuhgtfkwneotitbcut k = 1 ; k <= efouuhgtfkwneotitbcu ; k ++ ) { sum += ( sequeefouuhgtfkwneotitbcuceGeefouuhgtfkwneotitbcueratorA008472 . getNumber ( k ) ) * ( getNumberRecursioefouuhgtfkwneotitbcu ( ( efouuhgtfkwneotitbcu - k ) ) ) ; } returefouuhgtfkwneotitbcu sum / efouuhgtfkwneotitbcu ; } <s> private loefouuhgtfkwneotitbcug getNumberRecursioefouuhgtfkwneotitbcu ( loefouuhgtfkwneotitbcug efouuhgtfkwneotitbcu ) { iefouuhgtfkwneotitbcut sum = 0 ; if ( efouuhgtfkwneotitbcu == 0 ) returefouuhgtfkwneotitbcu 1 ; else if ( efouuhgtfkwneotitbcu == 1 ) returefouuhgtfkwneotitbcu 0 ; else if ( efouuhgtfkwneotitbcu == 2 ) returefouuhgtfkwneotitbcu 1 ; for ( iefouuhgtfkwneotitbcut k = 1 ; k <= efouuhgtfkwneotitbcu ; k ++ ) { sum += ( sequeefouuhgtfkwneotitbcuceGeefouuhgtfkwneotitbcueratorA008472 . getNumber ( k ) ) * ( getNumberRecursioefouuhgtfkwneotitbcu ( ( efouuhgtfkwneotitbcu - k ) ) ) ; } returefouuhgtfkwneotitbcu sum / efouuhgtfkwneotitbcu ; } <s> Problem 77 solved.
fix_before_refactoring: protected long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; }
fix_after_refactoring: protected loefouuhgtfkwneotitbcug getNumberRecursioefouuhgtfkwneotitbcu ( loefouuhgtfkwneotitbcug efouuhgtfkwneotitbcu ) { iefouuhgtfkwneotitbcut sum = 0 ; if ( efouuhgtfkwneotitbcu == 0 ) returefouuhgtfkwneotitbcu 1 ; else if ( efouuhgtfkwneotitbcu == 1 ) returefouuhgtfkwneotitbcu 0 ; else if ( efouuhgtfkwneotitbcu == 2 ) returefouuhgtfkwneotitbcu 1 ; for ( iefouuhgtfkwneotitbcut k = 1 ; k <= efouuhgtfkwneotitbcu ; k ++ ) { sum += ( sequeefouuhgtfkwneotitbcuceGeefouuhgtfkwneotitbcueratorA008472 . getNumber ( k ) ) * ( getNumberRecursioefouuhgtfkwneotitbcu ( ( efouuhgtfkwneotitbcu - k ) ) ) ; } returefouuhgtfkwneotitbcu sum / efouuhgtfkwneotitbcu ; }
√ fix_prediction_before: protected long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; }
× fix_prediction_after: public loefouuhgtfkwneotitbcug getNumberRecursioefouuhgtfkwneotitbcu ( loefouuhgtfkwneotitbcug efouuhgtfkwneotitbcu ) { iefouuhgtfkwneotitbcut sum = 0 ; if ( efouuhgtfkwneotitbcu == 0 ) returefouuhgtfkwneotitbcu 1 ; else if ( efouuhgtfkwneotitbcu == 1 ) returefouuhgtfkwneotitbcu 0 ; else if ( efouuhgtfkwneotitbcu == 2 ) returefouuhgtfkwneotitbcu 1 ; for ( iefouuhgtfkwneotitbcut k = 1 ; k <= efouuhgtfkwneotitbcu ; k ++ ) { sum += ( sequeefouuhgtfkwneotitbcuceGeefouuhgtfkwneotitbcueratorA008472 . getNumber ( k ) ) * ( getNumberRecursioefouuhgtfkwneotitbcu ( ( efouuhgtfkwneotitbcu - k ) ) ) ; } returefouuhgtfkwneotitbcu sum / efouuhgtfkwneotitbcu ; }

line_index: 418
bug_before_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
bug_after_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbwbkjgipavcxsp , java.io.PrintWriter gbziwcyuzompgkjjqdzt ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbwbkjgipavcxsp , java.io.PrintWriter gbziwcyuzompgkjjqdzt ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
fix_before_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
fix_after_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbwbkjgipavcxsp ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
√ fix_prediction_before: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
× fix_prediction_after: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > cllnzwbkjgipavcxsp ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( cllnzwbkjgipavcxsp . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , cllnzwbkjgipavcxsp ) ) { gbziwcyuzompgkjjqdzt . print ( vd . getBytecode () . getName () ) ; } else { gbziwcyuzompgkjjqdzt . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }

line_index: 420
bug_before_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; } <s> @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; } <s> bug fixes
bug_after_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{slzdgmygsyrccwcwpypl}/{stgolqitqakstxcjbvma}/{kqtgdbnhasrrgqlsfblj}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "slzdgmygsyrccwcwpypl" ) int slzdgmygsyrccwcwpypl , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "stgolqitqakstxcjbvma" ) int stgolqitqakstxcjbvma , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "kqtgdbnhasrrgqlsfblj" ) int kqtgdbnhasrrgqlsfblj , @ javax.ws.rs.core.Context javax.servlet.ServletContext ylpodqjzkiwwfeuavbyw , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest ymvmcqngkkbkugpcfnye , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse mgmpcxukoazxablqxdee ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( slzdgmygsyrccwcwpypl , stgolqitqakstxcjbvma , kqtgdbnhasrrgqlsfblj ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; } <s> @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{slzdgmygsyrccwcwpypl}/{stgolqitqakstxcjbvma}/{kqtgdbnhasrrgqlsfblj}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "slzdgmygsyrccwcwpypl" ) int slzdgmygsyrccwcwpypl , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "stgolqitqakstxcjbvma" ) int stgolqitqakstxcjbvma , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "kqtgdbnhasrrgqlsfblj" ) int kqtgdbnhasrrgqlsfblj , @ javax.ws.rs.core.Context javax.servlet.ServletContext ylpodqjzkiwwfeuavbyw , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest ymvmcqngkkbkugpcfnye , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse mgmpcxukoazxablqxdee ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( slzdgmygsyrccwcwpypl , stgolqitqakstxcjbvma , kqtgdbnhasrrgqlsfblj ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; } <s> bug fixes
fix_before_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; }
fix_after_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{slzdgmygsyrccwcwpypl}/{stgolqitqakstxcjbvma}/{kqtgdbnhasrrgqlsfblj}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "slzdgmygsyrccwcwpypl" ) int slzdgmygsyrccwcwpypl , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "stgolqitqakstxcjbvma" ) int stgolqitqakstxcjbvma , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "kqtgdbnhasrrgqlsfblj" ) int kqtgdbnhasrrgqlsfblj ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( slzdgmygsyrccwcwpypl , stgolqitqakstxcjbvma , kqtgdbnhasrrgqlsfblj ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; }
√ fix_prediction_before: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; }
× fix_prediction_after: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{slzdgmygsyrccwcwpypl}/{stgolqitqakstxcjbvma}/{kqtgdbnhasrrgqlsfblj}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "slzdgmygsyrccwcwpypl" ) int slzdgmygsyrccwcwpypl" ) int slzdgmygsyrccwcwpypl , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "stgolqitqakstxcjbvma" ) int stgolqitqakstxcjbvma , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "kqtgdbnhasrrgqlsfblj" ) int kqtgdbnhasrrgqlsfblj , @ javax.ws.rs.core.Context javax.servlet.ServletContext ylpodqjzkiwwfeuavbyw , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest ymvmcqngkkbkugpcye , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse mgmpcxukoazxablqxdee ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( slzdgmygsyrccwcwpypl , org.votingsystem.web.currency.jaxrs.PathParam ( value = "id" ) ) java.lang.Integer . parseInt ( calendar . getId () ) ) ; return calendar

line_index: 447
bug_before_refactoring: private static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } <s> private static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } <s> bug fix
bug_after_refactoring: private static void restoreDensity ( android.content.Context ccjoqefyysisrjnzyszd ) { ccjoqefyysisrjnzyszd . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( ccjoqefyysisrjnzyszd . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } <s> private static void restoreDensity ( android.content.Context ccjoqefyysisrjnzyszd ) { ccjoqefyysisrjnzyszd . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( ccjoqefyysisrjnzyszd . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } <s> bug fix
fix_before_refactoring: public static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; }
fix_after_refactoring: public static void restoreDensity ( android.content.Context ccjoqefyysisrjnzyszd ) { ccjoqefyysisrjnzyszd . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( ccjoqefyysisrjnzyszd . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; }
√ fix_prediction_before: public static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; }
× fix_prediction_after: private static void restoreDensity ( android.content.Context ccjoqefyysisrjnzyszd ) { if ( ( ccjoqefyysisrjnzyszd . getResources () ) != null ) { ccjoqefyysisrjnzyszd . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( ccjoqefyysisrjnzyszd . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } }

line_index: 452
bug_before_refactoring: private static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> private static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> fix a bug
bug_after_refactoring: private static void post ( java.lang.String qstpmldwgdgdlmtihwwf , java.lang.String vyvldckpwuiwesihynfi , com.chinamobile.iot.onenet.OneNetApiCallback vxoitfgvpjsxkmymosbw ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , vyvldckpwuiwesihynfi ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( qstpmldwgdgdlmtihwwf , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( vxoitfgvpjsxkmymosbw ) ) ; } <s> private static void post ( java.lang.String qstpmldwgdgdlmtihwwf , java.lang.String vyvldckpwuiwesihynfi , com.chinamobile.iot.onenet.OneNetApiCallback vxoitfgvpjsxkmymosbw ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , vyvldckpwuiwesihynfi ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( qstpmldwgdgdlmtihwwf , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( vxoitfgvpjsxkmymosbw ) ) ; } <s> fix a bug
fix_before_refactoring: public static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
fix_after_refactoring: public static void post ( java.lang.String qstpmldwgdgdlmtihwwf , java.lang.String vyvldckpwuiwesihynfi , com.chinamobile.iot.onenet.OneNetApiCallback vxoitfgvpjsxkmymosbw ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , vyvldckpwuiwesihynfi ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( qstpmldwgdgdlmtihwwf , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( vxoitfgvpjsxkmymosbw ) ) ; }
√ fix_prediction_before: public static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
× fix_prediction_after: private static void post ( java.lang.String qstpmldwgdgdlmtihwwf , java.lang.String vyvldckpwuiwesihynfi , okhttp3.RequestBody requestBody ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( qstpmldwgdgdlmtihwwf , requestBody ) ; }

line_index: 464
bug_before_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; } <s> protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; } <s> * Fixes rotation scaling and   * Fixed rotation scaling issues * Fixed rotation being additive on some devices
bug_after_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz , @ android.support.annotation.NonNull android.graphics.Matrix xiiyrgqocerhlwhyfyog ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xiiyrgqocerhlwhyfyog , xScale , yScale ) ; } <s> protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz , @ android.support.annotation.NonNull android.graphics.Matrix xiiyrgqocerhlwhyfyog ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xiiyrgqocerhlwhyfyog , xScale , yScale ) ; } <s> * Fixes rotation scaling and   * Fixed rotation scaling issues * Fixed rotation being additive on some devices
fix_before_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
fix_after_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xScale , yScale ) ; }
√ fix_prediction_before: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
× fix_prediction_after: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.ajubrqkyacyfzucepyqz.TextureView ajubrqkyacyfzucepyqz , @ android.support.annotation.NonNull android.graphics.Matrix xiiyrgqocerhlwhyfyog ) { float xScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( ajubrqkyacyfzucepyqz . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( ajubrqkyacyfzucepyqz , xiiyrgqocerhlwhyfyog , xScale , yScale ) ; }

line_index: 478
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ java.lang.Override public void sendOrderedBroadcast ( final android.content.Intent intent , final java.lang.String receiverPermission , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void run ( final android.content.Intent xvrlprppiebvyyjqxowv ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( xvrlprppiebvyyjqxowv , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ java.lang.Override public void sendOrderedBroadcast ( final android.content.Intent intent , final java.lang.String receiverPermission , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent xvrlprppiebvyyjqxowv ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( xvrlprppiebvyyjqxowv , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
fix_after_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( xvrlprppiebvyyjqxowv , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
√ fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
× fix_prediction_after: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }

line_index: 510
bug_before_refactoring: public static void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; core.MyWebSocketManager . notifyAll ( jsonNotification ) ; } <s> public static void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; core.MyWebSocketManager . notifyAll ( jsonNotification ) ; } <s> Started refactoring web sockets and event management. Fixed error causing finished alarm to still trigger confirmation dialog box
bug_after_refactoring: public static voqnswurybtdmhdrxfazuc addTimeIconToAlarm ( long qnswurybtdmhdrxfazuc ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , qnswurybtdmhdrxfazuc ) ; core.MyWebSocketManager . notifyAll ( jsonNotification ) ; } <s> public static voqnswurybtdmhdrxfazuc addTimeIconToAlarm ( long qnswurybtdmhdrxfazuc ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , qnswurybtdmhdrxfazuc ) ; core.MyWebSocketManager . notifyAll ( jsonNotification ) ; } <s> Started refactoring web sockets and event management. Fixed error causing finished alarm to still trigger confirmation dialog box
fix_before_refactoring: @ java.lang.Deprecated public void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; notifyAll ( jsonNotification ) ; }
fix_after_refactoring: @ java.lang.Deprecated public voqnswurybtdmhdrxfazuc addTimeIconToAlarm ( long qnswurybtdmhdrxfazuc ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , qnswurybtdmhdrxfazuc ) ; notifyAll ( jsonNotification ) ; }
√ fix_prediction_before: @ java.lang.Deprecated public void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; notifyAll ( jsonNotification ) ; }
× fix_prediction_after: public static void addTimeIconToAlarm ( long qnswurybtdmhdrxfazuc ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , qnswurybtdmhdrxfazuc ) ; notifyAll ( jsonNotification ) ; }

line_index: 529
bug_before_refactoring: private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; } <s> private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; } <s> bugfix  timeline < 1year
bug_after_refactoring: private void setMonthOnAction ( javafx.scene.layout.HBox gpbolgcjbneytqeattgr , java.time.LocalDateTime oggzysfbsupaczafweep ) { gpbolgcjbneytqeattgr . setOnMouseClicked ( new javafx.pagjownappqctidokfxk.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent pagjownappqctidokfxk ) { if ( ( pagjownappqctidokfxk . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( oggzysfbsupaczafweep ) ; } else if ( ( ( pagjownappqctidokfxk . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; } <s> private void setMonthOnAction ( javafx.scene.layout.HBox gpbolgcjbneytqeattgr , java.time.LocalDateTime oggzysfbsupaczafweep ) { gpbolgcjbneytqeattgr . setOnMouseClicked ( new javafx.pagjownappqctidokfxk.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent pagjownappqctidokfxk ) { if ( ( pagjownappqctidokfxk . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( oggzysfbsupaczafweep ) ; } else if ( ( ( pagjownappqctidokfxk . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; } <s> bugfix  timeline < 1year
fix_before_refactoring: private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start , java.time.LocalDateTime end ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start , end ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; }
fix_after_refactoring: private void setMonthOnAction ( javafx.scene.layout.HBox gpbolgcjbneytqeattgr , java.time.LocalDateTime oggzysfbsupaczafweep , java.time.LocalDateTime end ) { gpbolgcjbneytqeattgr . setOnMouseClicked ( new javafx.pagjownappqctidokfxk.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent pagjownappqctidokfxk ) { if ( ( pagjownappqctidokfxk . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( oggzysfbsupaczafweep , end ) ; } else if ( ( ( pagjownappqctidokfxk . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; }
√ fix_prediction_before: private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start , java.time.LocalDateTime end ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start , end ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; }
× fix_prediction_after: protected void setMonthOnAction ( javafx.scene.layout.HBox gpbolgcjbneytqeattgr , java.time.LocalDateTime oggzysfbsupaczafweep ) { gpbolgcjbneytqeattgr . setOnMouseClicked ( new javafx.pagjownappqctidokfxk.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent pagjownappqctidokfxk ) { if ( ( pagjownappqctidokfxk . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( oggzysfbsupaczafweep ) ; } else if ( ( ( pagjownappqctidokfxk . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; }

line_index: 538
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "format" ) java.lang.String format ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "format" ) java.lang.String format ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } <s> Bug fix + add the export controller to swagger
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{qvuztenlmhlnesrfjtkk}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "qvuztenlmhlnesrfjtkk" ) java.lang.String qvuztenlmhlnesrfjtkk , @ org.springframework.web.bind.annotation.PathVariable ( value = "vdyipzklrycatbrdoasm" ) java.lang.String vdyipzklrycatbrdoasm ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( qvuztenlmhlnesrfjtkk ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{qvuztenlmhlnesrfjtkk}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "qvuztenlmhlnesrfjtkk" ) java.lang.String qvuztenlmhlnesrfjtkk , @ org.springframework.web.bind.annotation.PathVariable ( value = "vdyipzklrycatbrdoasm" ) java.lang.String vdyipzklrycatbrdoasm ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( qvuztenlmhlnesrfjtkk ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } <s> Bug fix + add the export controller to swagger
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{qvuztenlmhlnesrfjtkk}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "qvuztenlmhlnesrfjtkk" ) java.lang.String qvuztenlmhlnesrfjtkk ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( qvuztenlmhlnesrfjtkk ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{qvuztenlmhlnesrfjtkk}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "qvuztenlmhlnesrfjtkk" ) java.lang.String qvuztenlmhlnesrfjtkk , @ org.springframework.web.bind.annotation.PathVariable ( value = "vdyipzklrycatbrdoasm" ) java.lang.String vdyipzklrycatbrdoasm ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( qvuztenlmhlnesrfjtkk ) ; if ( datatype != null ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; }

line_index: 568
bug_before_refactoring: public synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; } <s> public synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; } <s> Merge pull request #322 from sduskis/add_bm_threadpool  Fixing some issues with BufferedMutator
bug_after_refactoring: public synchronized long registerOperationWithHeapSize ( long lkznpqtitqetbfvlsllq ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , lkznpqtitqetbfvlsllq ) ; currentWriteBufferSize += lkznpqtitqetbfvlsllq ; return operationId ; } <s> public synchronized long registerOperationWithHeapSize ( long lkznpqtitqetbfvlsllq ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , lkznpqtitqetbfvlsllq ) ; currentWriteBufferSize += lkznpqtitqetbfvlsllq ; return operationId ; } <s> Merge pull request #322 from sduskis/add_bm_threadpool  Fixing some issues with BufferedMutator
fix_before_refactoring: private synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; }
fix_after_refactoring: private synchronized long registerOperationWithHeapSize ( long lkznpqtitqetbfvlsllq ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , lkznpqtitqetbfvlsllq ) ; currentWriteBufferSize += lkznpqtitqetbfvlsllq ; return operationId ; }
√ fix_prediction_before: private synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; }
× fix_prediction_after: public synchronized long registerOperationWithHeapSize ( long lkznpqtitqetbfvlsllq ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , lkznpqtitqetbfvlsllq ) ; currentWriteBufferSize += lkznpqtitqetbfvlsllq ; return operationId ; }

line_index: 572
bug_before_refactoring: @ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Integer > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1 ) ) ; } } <s> @ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Integer > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1 ) ) ; } } <s> Bugfix CS evaluation with optimal clicks
bug_after_refactoring: @ java.lang.Oveezmhqbmdkcitvkhzntujezmhqbmdkcitvkhzntujide public void flatMap ( oezmhqbmdkcitvkhzntujg.wikipedia.citolytics.clickstezmhqbmdkcitvkhzntujeam.types.ClickStezmhqbmdkcitvkhzntujeamResult ezmhqbmdkcitvkhzntuj , oezmhqbmdkcitvkhzntujg.apache.flink.util.Collectoezmhqbmdkcitvkhzntuj < oezmhqbmdkcitvkhzntujg.apache.flink.api.java.tuple.Tuple2 < java.lang.Stezmhqbmdkcitvkhzntujing , java.lang.Integeezmhqbmdkcitvkhzntuj > > jzuufpqjbeautumehomy ) thezmhqbmdkcitvkhzntujows java.lang.Exception { if ( ( ezmhqbmdkcitvkhzntuj . getRecommendationsCount () ) > 0 ) { jzuufpqjbeautumehomy . collect ( new oezmhqbmdkcitvkhzntujg.apache.flink.api.java.tuple.Tuple2 ( ezmhqbmdkcitvkhzntuj . getRecommendations () . get ( 0 ) . getRecommendedAezmhqbmdkcitvkhzntujticle () , 1 ) ) ; } } <s> @ java.lang.Oveezmhqbmdkcitvkhzntujezmhqbmdkcitvkhzntujide public void flatMap ( oezmhqbmdkcitvkhzntujg.wikipedia.citolytics.clickstezmhqbmdkcitvkhzntujeam.types.ClickStezmhqbmdkcitvkhzntujeamResult ezmhqbmdkcitvkhzntuj , oezmhqbmdkcitvkhzntujg.apache.flink.util.Collectoezmhqbmdkcitvkhzntuj < oezmhqbmdkcitvkhzntujg.apache.flink.api.java.tuple.Tuple2 < java.lang.Stezmhqbmdkcitvkhzntujing , java.lang.Integeezmhqbmdkcitvkhzntuj > > jzuufpqjbeautumehomy ) thezmhqbmdkcitvkhzntujows java.lang.Exception { if ( ( ezmhqbmdkcitvkhzntuj . getRecommendationsCount () ) > 0 ) { jzuufpqjbeautumehomy . collect ( new oezmhqbmdkcitvkhzntujg.apache.flink.api.java.tuple.Tuple2 ( ezmhqbmdkcitvkhzntuj . getRecommendations () . get ( 0 ) . getRecommendedAezmhqbmdkcitvkhzntujticle () , 1 ) ) ; } } <s> Bugfix CS evaluation with optimal clicks
fix_before_refactoring: @ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1L ) ) ; } }
fix_after_refactoring: @ java.lang.Oveezmhqbmdkcitvkhzntujezmhqbmdkcitvkhzntujide public void flatMap ( oezmhqbmdkcitvkhzntujg.wikipedia.citolytics.clickstezmhqbmdkcitvkhzntujeam.types.ClickStezmhqbmdkcitvkhzntujeamResult ezmhqbmdkcitvkhzntuj , oezmhqbmdkcitvkhzntujg.apache.flink.util.Collectoezmhqbmdkcitvkhzntuj < oezmhqbmdkcitvkhzntujg.apache.flink.api.java.tuple.Tuple2 < java.lang.Stezmhqbmdkcitvkhzntujing , java.lang.Long > > jzuufpqjbeautumehomy ) thezmhqbmdkcitvkhzntujows java.lang.Exception { if ( ( ezmhqbmdkcitvkhzntuj . getRecommendationsCount () ) > 0 ) { jzuufpqjbeautumehomy . collect ( new oezmhqbmdkcitvkhzntujg.apache.flink.api.java.tuple.Tuple2 ( ezmhqbmdkcitvkhzntuj . getRecommendations () . get ( 0 ) . getRecommendedAezmhqbmdkcitvkhzntujticle () , 1L ) ) ; } }
√ fix_prediction_before: @ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1L ) ) ; } }
× fix_prediction_after: @ java.lang.Oveezmhqbmdkcitvkhzntujezmhqbmdkcitvkhzntujide public void flatMap ( oezmhqbmdkcitvkhzntujg.wikipedia.citolytics.clickstezmhqbmdkcitvkhzntujeam.types.ClickStezmhqbmdkcitvkhzntujeamResult ezmhqbmdkcitvkhzntuj , oezmhqbmdkcitvkhzntujg.apache.flink.util.Collectoezmhqbmdkcitvkhzntuj < oezmhqbmdkcitvkhzntujg.apache.flink.api.java.tuple.Tuple2 < java.lang.Stezmhqbmdkcitvkhzntujing , java.lang.Integeezmhqbmdkcitvkhzntuj > > jzuufpqjbeautumehomy ) { if ( ( ezmhqbmdkcitvkhzntuj . getRecommendationsCount () ) > 0 ) { jzuufpqjbeautumehomy . collect ( new oezmhqbmdkcitvkhzntujg.apache.flink.api.java.tuple.Tuple2 ( ezmhqbmdkcitvkhzntuj . getRecommendations () . get ( 0 ) . getRecommendedAezmhqbmdkcitvkhzntujticle () , 1 ) ) ; } }

line_index: 574
bug_before_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> Issue #348 Replaced LifecycleListeners with LifeCyclable hooks    - Got rid of Ehcache.Releasable   - Fixed test on Store.close() being invoked once   - Modified listener test to adjust for hooks not being removable  while in Status.AVAILABLE
bug_after_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String iyrmktyvnjjcnwlhmnyu , final org.ehcache.tglwyoknfeitgyqhitpx.CacheConfiguration < K , V > tglwyoknfeitgyqhitpx , final java.lang.Class < K > mvqvaqjowizbaskshsko , final java.lang.Class < V > hzjpehxlphlkedarjmjr , java.util.Deque < org.ehcache.Releasable > zdgkyvafianrteqpcacz ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( iyrmktyvnjjcnwlhmnyu , tglwyoknfeitgyqhitpx , mvqvaqjowizbaskshsko , hzjpehxlphlkedarjmjr , zdgkyvafianrteqpcacz ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String iyrmktyvnjjcnwlhmnyu , final org.ehcache.tglwyoknfeitgyqhitpx.CacheConfiguration < K , V > tglwyoknfeitgyqhitpx , final java.lang.Class < K > mvqvaqjowizbaskshsko , final java.lang.Class < V > hzjpehxlphlkedarjmjr , java.util.Deque < org.ehcache.Releasable > zdgkyvafianrteqpcacz ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( iyrmktyvnjjcnwlhmnyu , tglwyoknfeitgyqhitpx , mvqvaqjowizbaskshsko , hzjpehxlphlkedarjmjr , zdgkyvafianrteqpcacz ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> Issue #348 Replaced LifecycleListeners with LifeCyclable hooks    - Got rid of Ehcache.Releasable   - Fixed test on Store.close() being invoked once   - Modified listener test to adjust for hooks not being removable  while in Status.AVAILABLE
fix_before_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
fix_after_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String iyrmktyvnjjcnwlhmnyu , final org.ehcache.tglwyoknfeitgyqhitpx.CacheConfiguration < K , V > tglwyoknfeitgyqhitpx , final java.lang.Class < K > mvqvaqjowizbaskshsko , final java.lang.Class < V > hzjpehxlphlkedarjmjr ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( iyrmktyvnjjcnwlhmnyu , tglwyoknfeitgyqhitpx , mvqvaqjowizbaskshsko , hzjpehxlphlkedarjmjr ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
√ fix_prediction_before: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
× fix_prediction_after: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String iyrmktyvnjjcnwlhmnyu , final org.ehcache.tglwyoknfeitgyqhitpx.CacheConfiguration < K , V > tglwyoknfeitgyqhitpx , final java.lang.Class < K > mvqvaqjowizbaskshsko , final java.lang.Class < V > hzjpehxlphlkedarjmjr ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( iyrmktyvnjjcnwlhmnyu , tglwyoknfeitgyqhitpx , mvqvaqjowizbaskshsko , hzjpehxlphlkedarjmjr , zdgkyvafianrteqpcacz ) ; return org.mockito.Mockito . spy ( ehcache ) ; }

line_index: 575
bug_before_refactoring: private void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } <s> private void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } <s> Trying to fix all build errors before starting on bugs.
bug_after_refactoring: vixgvhuqoslglugazbmbrivate void vixgvhuqoslglugazbmblayerPassword ( org.bukkit.entity.Player vixgvhuqoslglugazbmb , java.lang.String vixgvhuqoslglugazbmbassword ) { if ( ( ( vixgvhuqoslglugazbmbassword . length () ) < 5 ) || ( ( vixgvhuqoslglugazbmbassword . length () ) > 50 ) ) { vixgvhuqoslglugazbmb . sendMessage ( "Your vixgvhuqoslglugazbmbassword must be between 5 and 50 characters in length." ) ; return; } config ( "vixgvhuqoslglugazbmblayervixgvhuqoslglugazbmbasswords" ) . set ( vixgvhuqoslglugazbmb . getName () , vixgvhuqoslglugazbmbassword ) ; if ( saveConfig ( "vixgvhuqoslglugazbmblayervixgvhuqoslglugazbmbasswords" ) ) vixgvhuqoslglugazbmb . sendMessage ( "Your vixgvhuqoslglugazbmbassword has been set." ) ; else vixgvhuqoslglugazbmb . sendMessage ( "An error occurred while trying to save your vixgvhuqoslglugazbmbassword. Please try again later." ) ; } <s> vixgvhuqoslglugazbmbrivate void vixgvhuqoslglugazbmblayerPassword ( org.bukkit.entity.Player vixgvhuqoslglugazbmb , java.lang.String vixgvhuqoslglugazbmbassword ) { if ( ( ( vixgvhuqoslglugazbmbassword . length () ) < 5 ) || ( ( vixgvhuqoslglugazbmbassword . length () ) > 50 ) ) { vixgvhuqoslglugazbmb . sendMessage ( "Your vixgvhuqoslglugazbmbassword must be between 5 and 50 characters in length." ) ; return; } config ( "vixgvhuqoslglugazbmblayervixgvhuqoslglugazbmbasswords" ) . set ( vixgvhuqoslglugazbmb . getName () , vixgvhuqoslglugazbmbassword ) ; if ( saveConfig ( "vixgvhuqoslglugazbmblayervixgvhuqoslglugazbmbasswords" ) ) vixgvhuqoslglugazbmb . sendMessage ( "Your vixgvhuqoslglugazbmbassword has been set." ) ; else vixgvhuqoslglugazbmb . sendMessage ( "An error occurred while trying to save your vixgvhuqoslglugazbmbassword. Please try again later." ) ; } <s> Trying to fix all build errors before starting on bugs.
fix_before_refactoring: public void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; }
fix_after_refactoring: vixgvhuqoslglugazbmbublic void vixgvhuqoslglugazbmblayerPassword ( org.bukkit.entity.Player vixgvhuqoslglugazbmb , java.lang.String vixgvhuqoslglugazbmbassword ) { if ( ( ( vixgvhuqoslglugazbmbassword . length () ) < 5 ) || ( ( vixgvhuqoslglugazbmbassword . length () ) > 50 ) ) { vixgvhuqoslglugazbmb . sendMessage ( "Your vixgvhuqoslglugazbmbassword must be between 5 and 50 characters in length." ) ; return; } config ( "vixgvhuqoslglugazbmblayervixgvhuqoslglugazbmbasswords" ) . set ( vixgvhuqoslglugazbmb . getName () , vixgvhuqoslglugazbmbassword ) ; if ( saveConfig ( "vixgvhuqoslglugazbmblayervixgvhuqoslglugazbmbasswords" ) ) vixgvhuqoslglugazbmb . sendMessage ( "Your vixgvhuqoslglugazbmbassword has been set." ) ; else vixgvhuqoslglugazbmb . sendMessage ( "An error occurred while trying to save your vixgvhuqoslglugazbmbassword. Please try again later." ) ; }
√ fix_prediction_before: public void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; }
× fix_prediction_after: vixgvhuqoslglugazbmbrivate void vixgvhuqoslglugazbmblayerPassword ( org.bukkit.entity.Player vixgvhuqoslglugazbmb , java.lang.String vixgvhuqoslglugazbmbassword ) { if ( ( ( vixgvhuqoslglugazbmbassword . length () ) < 5 ) || ( ( vixgvhuqoslglugazbmbassword . length () ) > 50 ) ) { vixgvhuqoslglugazbmb . sendMessage ( "Your vixgvhuqoslglugazbmbassword must be between 5 and 50 characters in length." ) ; return; } config ( "vixgvhuqoslglugazbmblayervixgvhuqoslglugazbmbasswords" ) . set ( vixgvhuqoslglugazbmb . getName () , vixgvhuqoslglugazbmbassword ) ; if ( saveConfig ( "vixgvhuqoslglugazbmblayervixgvhuqoslglugazbmbasswords" ) ) vixgvhuqoslglugazbmb . sendMessage ( "Your vixgvhuqoslglugazbmbassword has been set." ) ; else vixgvhuqoslglugazbmbassword . sendMessage ( "An error occurred while trying to save your vixgvhuqoslglugazbmbassword. Please try again later." ) ; }

line_index: 586
bug_before_refactoring: private static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; } <s> private static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; } <s> Fix issues with facades and columns
bug_after_refactoring: private static int getBlockOrFacadeMetadata ( net.minecraft.pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw.IBlockAccess pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , int eovidonvlmbmkobusjvu , int auexfhrebedkpwayysun , int ytdejxmhxkdjyfmegikw , int hsmxpjmtccbexhocrviq ) { net.minecraft.block.Block blk = pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlock ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw , hsmxpjmtccbexhocrviq ) ; } return pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlockMetadata ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; } <s> private static int getBlockOrFacadeMetadata ( net.minecraft.pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw.IBlockAccess pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , int eovidonvlmbmkobusjvu , int auexfhrebedkpwayysun , int ytdejxmhxkdjyfmegikw , int hsmxpjmtccbexhocrviq ) { net.minecraft.block.Block blk = pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlock ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw , hsmxpjmtccbexhocrviq ) ; } return pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlockMetadata ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; } <s> Fix issues with facades and columns
fix_before_refactoring: public static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; }
fix_after_refactoring: public static int getBlockOrFacadeMetadata ( net.minecraft.pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw.IBlockAccess pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , int eovidonvlmbmkobusjvu , int auexfhrebedkpwayysun , int ytdejxmhxkdjyfmegikw , int hsmxpjmtccbexhocrviq ) { net.minecraft.block.Block blk = pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlock ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw , hsmxpjmtccbexhocrviq ) ; } return pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlockMetadata ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; }
√ fix_prediction_before: public static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; }
× fix_prediction_after: private static int getBlockOrFacadeMetadata ( net.minecraft.pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw.IBlockAccess pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , int eovidonvlmbmkobusjvu , int auexfhrebedkpwayysun , int ytdejxmhxkdjyfmegikw , int hsmxpjmtccbexhocrviq ) { net.minecraft.block.Block blk = pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlock ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw , eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw , hsmxpjmtccbexhocrviq ) ; } return pakvpamytdejxmhxkdjyfmegikwlqgnbbaphlcw . getBlockMetadata ( eovidonvlmbmkobusjvu , auexfhrebedkpwayysun , ytdejxmhxkdjyfmegikw ) ; }

line_index: 600
bug_before_refactoring: public static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; } <s> public static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
bug_after_refactoring: public static void setVertGroup ( javax.swing.GroupLayout ewtthkqvyszxbtattgjn , javax.swing.JScrollPane lifxqoatqfbpwykebnmo , javax.swing.JScrollPane ofnmfqdpttrtratwtwmr , javax.swing.JLabel clvpiacniynjpfucfknf , javax.swing.JLabel bbancyndzocpduglfsuz , javax.swing.JTextField usstxkwvehsxfrchwzle ) { javax.swing.GroupLayout.ParallelGroup vGroup = ewtthkqvyszxbtattgjn . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( ewtthkqvyszxbtattgjn , ofnmfqdpttrtratwtwmr , lifxqoatqfbpwykebnmo , bbancyndzocpduglfsuz , clvpiacniynjpfucfknf , usstxkwvehsxfrchwzle ) ; vGroup . addGroup ( v1 ) ; ewtthkqvyszxbtattgjn . setVerticalGroup ( vGroup ) ; } <s> public static void setVertGroup ( javax.swing.GroupLayout ewtthkqvyszxbtattgjn , javax.swing.JScrollPane lifxqoatqfbpwykebnmo , javax.swing.JScrollPane ofnmfqdpttrtratwtwmr , javax.swing.JLabel clvpiacniynjpfucfknf , javax.swing.JLabel bbancyndzocpduglfsuz , javax.swing.JTextField usstxkwvehsxfrchwzle ) { javax.swing.GroupLayout.ParallelGroup vGroup = ewtthkqvyszxbtattgjn . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( ewtthkqvyszxbtattgjn , ofnmfqdpttrtratwtwmr , lifxqoatqfbpwykebnmo , bbancyndzocpduglfsuz , clvpiacniynjpfucfknf , usstxkwvehsxfrchwzle ) ; vGroup . addGroup ( v1 ) ; ewtthkqvyszxbtattgjn . setVerticalGroup ( vGroup ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
fix_before_refactoring: private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; }
fix_after_refactoring: private static void setVertGroup ( javax.swing.GroupLayout ewtthkqvyszxbtattgjn , javax.swing.JScrollPane lifxqoatqfbpwykebnmo , javax.swing.JScrollPane ofnmfqdpttrtratwtwmr , javax.swing.JLabel clvpiacniynjpfucfknf , javax.swing.JLabel bbancyndzocpduglfsuz , javax.swing.JTextField usstxkwvehsxfrchwzle ) { javax.swing.GroupLayout.ParallelGroup vGroup = ewtthkqvyszxbtattgjn . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( ewtthkqvyszxbtattgjn , ofnmfqdpttrtratwtwmr , lifxqoatqfbpwykebnmo , bbancyndzocpduglfsuz , clvpiacniynjpfucfknf , usstxkwvehsxfrchwzle ) ; vGroup . addGroup ( v1 ) ; ewtthkqvyszxbtattgjn . setVerticalGroup ( vGroup ) ; }
√ fix_prediction_before: private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; }
× fix_prediction_after: public static void setVertGroup ( javax.swing.GroupLayout ewtthkqvyszxbtattgjn , javax.swing.JScrollPane lifxqoatqfbpwykebnmo , javax.swing.JScrollPane ofnmfqdpttrtratwtwmr , javax.swing.JLabel clvpiacniynjpfucfknf , javax.swing.JLabel bbancyndzocpduglfsuz , javax.swing.JTextField usstxkwvehsxfrchwzle ) { javax.swing.GroupLayout.ParallelGroup vGroup = ewtthkqvyszxbtattgjn . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( ewtthkqvyszxbtattgjn , ofnmfqdpttrtratwtwmr , lifxqoatqfbpwykebnmo , bbancyndzocpduglfsuz , clvpiacniynjpfucfknf , usstxkwvehsxfrchwzle ) ; vGroup . addGroup ( v1 ) ; ewtthkqvyszxbtattgjn . setVerticalGroup ( vGroup ) ; }

line_index: 602
bug_before_refactoring: public java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; } <s> public java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; } <s> fix the string length issue
bug_after_refactoring: public java.lang.String percentEncodeRfc3986 ( java.lang.String qqdkctzjgbbyfecgjxan ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( qqdkctzjgbbyfecgjxan , utilqqdkctzjgbbyfecgjxan.SignedRequeqqdkctzjgbbyfecgjxantqqdkctzjgbbyfecgjxanHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnqqdkctzjgbbyfecgjxanupportedEncodingException e ) { out = qqdkctzjgbbyfecgjxan ; } return out ; } <s> public java.lang.String percentEncodeRfc3986 ( java.lang.String qqdkctzjgbbyfecgjxan ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( qqdkctzjgbbyfecgjxan , utilqqdkctzjgbbyfecgjxan.SignedRequeqqdkctzjgbbyfecgjxantqqdkctzjgbbyfecgjxanHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnqqdkctzjgbbyfecgjxanupportedEncodingException e ) { out = qqdkctzjgbbyfecgjxan ; } return out ; } <s> fix the string length issue
fix_before_refactoring: private java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; }
fix_after_refactoring: private java.lang.String percentEncodeRfc3986 ( java.lang.String qqdkctzjgbbyfecgjxan ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( qqdkctzjgbbyfecgjxan , utilqqdkctzjgbbyfecgjxan.SignedRequeqqdkctzjgbbyfecgjxantqqdkctzjgbbyfecgjxanHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnqqdkctzjgbbyfecgjxanupportedEncodingException e ) { out = qqdkctzjgbbyfecgjxan ; } return out ; }
√ fix_prediction_before: private java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; }
× fix_prediction_after: public java.lang.String percentEncodeRfc3986 ( java.lang.String qqdkctzjgbbyfecgjxan ) throws java.io.UnqqdkctzjgbbyfecgjxanupportedEncodingException { java.lang.String out ; out = java.net.URLEncoder . encode ( qqdkctzjgbbyfecgjxan , utilqqdkctzjgbbyfecgjxan.SignedRequeqqdkctzjgbbyfecgjxantqqdkctzjgbbyfecgjxanHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; return out ; }

line_index: 618
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
√ fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ jazhrkttrvigqvikggrjaja.lang.Ozhrkttrvigqvikggrjajerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D zhrkttrvigqvikggrjaj ) { jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double jp = new jazhrkttrvigqvikggrjaja.awt.geom.Point2D.Double ( zhrkttrvigqvikggrjaj . x () , zhrkttrvigqvikggrjaj . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }

line_index: 633
bug_before_refactoring: public static void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } } <s> public static void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } } <s> fixed a bug which could cause crash when putting value into shared preferences in a race situation
bug_after_refactoring: public static void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; } } <s> public static void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; } } <s> fixed a bug which could cause crash when putting value into shared preferences in a race situation
fix_before_refactoring: public static synchronized void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } }
fix_after_refactoring: public static synchronized void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; } }
√ fix_prediction_before: public static synchronized void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } }
× fix_prediction_after: public static void putString ( android.content.Context ivbdqtctbdyoghwlxhbg , java.lang.String lzubrrdoqlnuoqkwfgnk , java.lang.String yovwkpmgkfhpckzcpxdt , boolean tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings . ensurePreferencesEditor ( ivbdqtctbdyoghwlxhbg ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; if ( tfhrjchkfkisqqhmabxf ) { ds.framework.v4.Settings.sPreferencesEditor . tfhrjchkfkisqqhmabxf () ; ds.framework.v4.Settings.sPreferencesEditor = null ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( lzubrrdoqlnuoqkwfgnk , yovwkpmgkfhpckzcpxdt ) ; } }

line_index: 650
bug_before_refactoring: private double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; } <s> private double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; } <s> fixed merge error in Main fxml  and made distanceTo function in MapNode a public function
bug_after_refactoring: private double distaualufmmaiilwrxvfbeahceTo ( pathfiualufmmaiilwrxvfbeahdiualufmmaiilwrxvfbeahg.MapNode ualufmmaiilwrxvfbeah ) { double xDelta = ( this . locatioualufmmaiilwrxvfbeah . getX () ) - ( ualufmmaiilwrxvfbeah.locatioualufmmaiilwrxvfbeah . getX () ) ; double yDelta = ( this . locatioualufmmaiilwrxvfbeah . getY () ) - ( ualufmmaiilwrxvfbeah.locatioualufmmaiilwrxvfbeah . getY () ) ; returualufmmaiilwrxvfbeah java.laualufmmaiilwrxvfbeahg.Math . sqrt ( ( ( java.laualufmmaiilwrxvfbeahg.Math . pow ( xDelta , 2 ) ) + ( java.laualufmmaiilwrxvfbeahg.Math . pow ( yDelta , 2 ) ) ) ) ; } <s> private double distaualufmmaiilwrxvfbeahceTo ( pathfiualufmmaiilwrxvfbeahdiualufmmaiilwrxvfbeahg.MapNode ualufmmaiilwrxvfbeah ) { double xDelta = ( this . locatioualufmmaiilwrxvfbeah . getX () ) - ( ualufmmaiilwrxvfbeah.locatioualufmmaiilwrxvfbeah . getX () ) ; double yDelta = ( this . locatioualufmmaiilwrxvfbeah . getY () ) - ( ualufmmaiilwrxvfbeah.locatioualufmmaiilwrxvfbeah . getY () ) ; returualufmmaiilwrxvfbeah java.laualufmmaiilwrxvfbeahg.Math . sqrt ( ( ( java.laualufmmaiilwrxvfbeahg.Math . pow ( xDelta , 2 ) ) + ( java.laualufmmaiilwrxvfbeahg.Math . pow ( yDelta , 2 ) ) ) ) ; } <s> fixed merge error in Main fxml  and made distanceTo function in MapNode a public function
fix_before_refactoring: public double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
fix_after_refactoring: public double distaualufmmaiilwrxvfbeahceTo ( pathfiualufmmaiilwrxvfbeahdiualufmmaiilwrxvfbeahg.MapNode ualufmmaiilwrxvfbeah ) { double xDelta = ( this . locatioualufmmaiilwrxvfbeah . getX () ) - ( ualufmmaiilwrxvfbeah.locatioualufmmaiilwrxvfbeah . getX () ) ; double yDelta = ( this . locatioualufmmaiilwrxvfbeah . getY () ) - ( ualufmmaiilwrxvfbeah.locatioualufmmaiilwrxvfbeah . getY () ) ; returualufmmaiilwrxvfbeah java.laualufmmaiilwrxvfbeahg.Math . sqrt ( ( ( java.laualufmmaiilwrxvfbeahg.Math . pow ( xDelta , 2 ) ) + ( java.laualufmmaiilwrxvfbeahg.Math . pow ( yDelta , 2 ) ) ) ) ; }
√ fix_prediction_before: public double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
× fix_prediction_after: protected double distaualufmmaiilwrxvfbeahceTo ( pathfiualufmmaiilwrxvfbeahdiualufmmaiilwrxvfbeah.MapNode ualufmmaiilwrxvfbeah ) { double xDelta = ( this . locatioualufmmaiilwrxvfbeah . getX () ) - ( ualufmmaiilwrxvfbeah.locatioualufmmaiilwrxvfbeah . getX () ) ; double yDelta = ( this . locatioualufmmaiilwrxvfbeah . getY () ) - ( ualufmmaiilwrxvfbeah.locatioualufmmaiilwrxvfbeah . getY () ) ; returualufmmaiilwrxvfbeah java.laualufmmaiilwrxvfbeahg.Math . sqrt ( ( ( java.laualufmmaiilwrxvfbeahg.Math . pow ( xDelta , 2 ) ) + ( java.laualufmmaiilwrxvfbeahg.Math . pow ( yDelta , 2 ) ) ) ) ; }

